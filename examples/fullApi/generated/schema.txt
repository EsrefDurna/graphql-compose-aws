# AWS SDK 2.160.0
type Aws {
  # AWS Certificate Manager (2015-12-08)
  acm: AwsAcm

  # Amazon API Gateway (2015-07-09)
  apigateway: AwsApigateway

  # Application Auto Scaling (2016-02-06)
  applicationautoscaling: AwsApplicationautoscaling

  # Amazon AppStream (2016-12-01)
  appstream: AwsAppstream

  # AWS AppSync (2017-07-25)
  appsync: AwsAppsync

  # Amazon Athena (2017-05-18)
  athena: AwsAthena

  # Auto Scaling (2011-01-01)
  autoscaling: AwsAutoscaling

  # AWS Batch (2016-08-10)
  batch: AwsBatch

  # AWS Budgets (2016-10-20)
  budgets: AwsBudgets

  # Amazon CloudDirectory (2016-05-10)
  clouddirectory: AwsClouddirectory

  # AWS CloudFormation (2010-05-15)
  cloudformation: AwsCloudformation

  # Amazon CloudFront (2017-03-25)
  cloudfront: AwsCloudfront

  # Amazon CloudHSM (2014-05-30)
  cloudhsm: AwsCloudhsm

  # AWS CloudHSM V2 (2017-04-28)
  cloudhsmv2: AwsCloudhsmv2

  # Amazon CloudSearch (2013-01-01)
  cloudsearch: AwsCloudsearch

  # Amazon CloudSearch Domain (2013-01-01)
  cloudsearchdomain: AwsCloudsearchdomain

  # AWS CloudTrail (2013-11-01)
  cloudtrail: AwsCloudtrail

  # Amazon CloudWatch (2010-08-01)
  cloudwatch: AwsCloudwatch

  # Amazon CloudWatch Events (2015-10-07)
  cloudwatchevents: AwsCloudwatchevents

  # Amazon CloudWatch Logs (2014-03-28)
  cloudwatchlogs: AwsCloudwatchlogs

  # AWS CodeBuild (2016-10-06)
  codebuild: AwsCodebuild

  # AWS CodeCommit (2015-04-13)
  codecommit: AwsCodecommit

  # AWS CodeDeploy (2014-10-06)
  codedeploy: AwsCodedeploy

  # AWS CodePipeline (2015-07-09)
  codepipeline: AwsCodepipeline

  # AWS CodeStar (2017-04-19)
  codestar: AwsCodestar

  # Amazon Cognito Identity (2014-06-30)
  cognitoidentity: AwsCognitoidentity

  # Amazon Cognito Identity Provider (2016-04-18)
  cognitoidentityserviceprovider: AwsCognitoidentityserviceprovider

  # Amazon Cognito Sync (2014-06-30)
  cognitosync: AwsCognitosync

  # Amazon Comprehend (2017-11-27)
  comprehend: AwsComprehend

  # AWS Config (2014-11-12)
  configservice: AwsConfigservice

  # AWS Cost Explorer Service (2017-10-25)
  costexplorer: AwsCostexplorer

  # AWS Cost and Usage Report Service (2017-01-06)
  cur: AwsCur

  # AWS Data Pipeline (2012-10-29)
  datapipeline: AwsDatapipeline

  # Amazon DynamoDB Accelerator (DAX) (2017-04-19)
  dax: AwsDax

  # AWS Device Farm (2015-06-23)
  devicefarm: AwsDevicefarm

  # AWS Direct Connect (2012-10-25)
  directconnect: AwsDirectconnect

  # AWS Directory Service (2015-04-16)
  directoryservice: AwsDirectoryservice

  # AWS Application Discovery Service (2015-11-01)
  discovery: AwsDiscovery

  # AWS Database Migration Service (2016-01-01)
  dms: AwsDms

  # Amazon DynamoDB (2012-08-10)
  dynamodb: AwsDynamodb

  # Amazon DynamoDB Streams (2012-08-10)
  dynamodbstreams: AwsDynamodbstreams

  # Amazon Elastic Compute Cloud (2016-11-15)
  ec2: AwsEc2

  # Amazon EC2 Container Registry (2015-09-21)
  ecr: AwsEcr

  # Amazon EC2 Container Service (2014-11-13)
  ecs: AwsEcs

  # Amazon Elastic File System (2015-02-01)
  efs: AwsEfs

  # Amazon ElastiCache (2015-02-02)
  elasticache: AwsElasticache

  # AWS Elastic Beanstalk (2010-12-01)
  elasticbeanstalk: AwsElasticbeanstalk

  # Amazon Elastic Transcoder (2012-09-25)
  elastictranscoder: AwsElastictranscoder

  # Elastic Load Balancing (2012-06-01)
  elb: AwsElb

  # Elastic Load Balancing (2015-12-01)
  elbv2: AwsElbv2

  # Amazon Elastic MapReduce (2009-03-31)
  emr: AwsEmr

  # Amazon Elasticsearch Service (2015-01-01)
  es: AwsEs

  # Amazon Kinesis Firehose (2015-08-04)
  firehose: AwsFirehose

  # Amazon GameLift (2015-10-01)
  gamelift: AwsGamelift

  # Amazon Glacier (2012-06-01)
  glacier: AwsGlacier

  # AWS Glue (2017-03-31)
  glue: AwsGlue

  # AWS Greengrass (2017-06-07)
  greengrass: AwsGreengrass

  # Amazon GuardDuty (2017-11-28)
  guardduty: AwsGuardduty

  # AWS Health APIs and Notifications (2016-08-04)
  health: AwsHealth

  # AWS Identity and Access Management (2010-05-08)
  iam: AwsIam

  # AWS Import/Export (2010-06-01)
  importexport: AwsImportexport

  # Amazon Inspector (2016-02-16)
  inspector: AwsInspector

  # AWS IoT (2015-05-28)
  iot: AwsIot

  # AWS IoT Data Plane (2015-05-28)
  iotdata: AwsIotdata

  # AWS IoT Jobs Data Plane (2017-09-29)
  iotjobsdataplane: AwsIotjobsdataplane

  # Amazon Kinesis (2013-12-02)
  kinesis: AwsKinesis

  # Amazon Kinesis Analytics (2015-08-14)
  kinesisanalytics: AwsKinesisanalytics

  # Amazon Kinesis Video Streams (2017-09-30)
  kinesisvideo: AwsKinesisvideo

  # Amazon Kinesis Video Streams Archived Media (2017-09-30)
  kinesisvideoarchivedmedia: AwsKinesisvideoarchivedmedia

  # Amazon Kinesis Video Streams Media (2017-09-30)
  kinesisvideomedia: AwsKinesisvideomedia

  # AWS Key Management Service (2014-11-01)
  kms: AwsKms

  # AWS Lambda (2015-03-31)
  lambda: AwsLambda

  # Amazon Lex Model Building Service (2017-04-19)
  lexmodelbuildingservice: AwsLexmodelbuildingservice

  # Amazon Lex Runtime Service (2016-11-28)
  lexruntime: AwsLexruntime

  # Amazon Lightsail (2016-11-28)
  lightsail: AwsLightsail

  # Amazon Machine Learning (2014-12-12)
  machinelearning: AwsMachinelearning

  # AWS Marketplace Commerce Analytics (2015-07-01)
  marketplacecommerceanalytics: AwsMarketplacecommerceanalytics

  # AWS Marketplace Entitlement Service (2017-01-11)
  marketplaceentitlementservice: AwsMarketplaceentitlementservice

  # AWSMarketplace Metering (2016-01-14)
  marketplacemetering: AwsMarketplacemetering

  # AWS Elemental MediaConvert (2017-08-29)
  mediaconvert: AwsMediaconvert

  # AWS Elemental MediaLive (2017-10-14)
  medialive: AwsMedialive

  # AWS Elemental MediaPackage (2017-10-12)
  mediapackage: AwsMediapackage

  # AWS Elemental MediaStore (2017-09-01)
  mediastore: AwsMediastore

  # AWS Elemental MediaStore Data Plane (2017-09-01)
  mediastoredata: AwsMediastoredata

  # AWS Migration Hub (2017-05-31)
  migrationhub: AwsMigrationhub

  # AWS Mobile (2017-07-01)
  mobile: AwsMobile

  # Amazon Mobile Analytics (2014-06-05)
  mobileanalytics: AwsMobileanalytics

  # AmazonMQ (2017-11-27)
  mq: AwsMq

  # Amazon Mechanical Turk (2017-01-17)
  mturk: AwsMturk

  # AWS OpsWorks (2013-02-18)
  opsworks: AwsOpsworks

  # AWS OpsWorks for Chef Automate (2016-11-01)
  opsworkscm: AwsOpsworkscm

  # AWS Organizations (2016-11-28)
  organizations: AwsOrganizations

  # Amazon Pinpoint (2016-12-01)
  pinpoint: AwsPinpoint

  # Amazon Polly (2016-06-10)
  polly: AwsPolly

  # AWS Price List Service (2017-10-15)
  pricing: AwsPricing

  # Amazon Relational Database Service (2014-10-31)
  rds: AwsRds

  # Amazon Redshift (2012-12-01)
  redshift: AwsRedshift

  # Amazon Rekognition (2016-06-27)
  rekognition: AwsRekognition

  # AWS Resource Groups (2017-11-27)
  resourcegroups: AwsResourcegroups

  # AWS Resource Groups Tagging API (2017-01-26)
  resourcegroupstaggingapi: AwsResourcegroupstaggingapi

  # Amazon Route 53 (2013-04-01)
  route53: AwsRoute53

  # Amazon Route 53 Domains (2014-05-15)
  route53domains: AwsRoute53domains

  # Amazon Simple Storage Service (2006-03-01)
  s3: AwsS3

  # Amazon SageMaker Service (2017-07-24)
  sagemaker: AwsSagemaker

  # Amazon SageMaker Runtime (2017-05-13)
  sagemakerruntime: AwsSagemakerruntime

  # AWS Service Catalog (2015-12-10)
  servicecatalog: AwsServicecatalog

  # Amazon Simple Email Service (2010-12-01)
  ses: AwsSes

  # AWS Shield (2016-06-02)
  shield: AwsShield

  # Amazon SimpleDB (2009-04-15)
  simpledb: AwsSimpledb

  # AWS Server Migration Service (2016-10-24)
  sms: AwsSms

  # Amazon Import/Export Snowball (2016-06-30)
  snowball: AwsSnowball

  # Amazon Simple Notification Service (2010-03-31)
  sns: AwsSns

  # Amazon Simple Queue Service (2012-11-05)
  sqs: AwsSqs

  # Amazon Simple Systems Manager (SSM) (2014-11-06)
  ssm: AwsSsm

  # AWS Step Functions (2016-11-23)
  stepfunctions: AwsStepfunctions

  # AWS Storage Gateway (2013-06-30)
  storagegateway: AwsStoragegateway

  # AWS Security Token Service (2011-06-15)
  sts: AwsSts

  # AWS Support (2013-04-15)
  support: AwsSupport

  # Amazon Simple Workflow Service (2012-01-25)
  swf: AwsSwf

  # Amazon Translate (2017-07-01)
  translate: AwsTranslate

  # AWS WAF (2015-08-24)
  waf: AwsWaf

  # AWS WAF Regional (2016-11-28)
  wafregional: AwsWafregional

  # Amazon WorkDocs (2016-05-01)
  workdocs: AwsWorkdocs

  # Amazon WorkSpaces (2015-04-08)
  workspaces: AwsWorkspaces

  # AWS X-Ray (2016-04-12)
  xray: AwsXray
}

# AWS Certificate Manager (2015-12-08)
type AwsAcm {
  # acm.AddTagsToCertificate
  AddTagsToCertificate(input: AwsAcmAddTagsToCertificateInput!): JSON

  # acm.DeleteCertificate
  DeleteCertificate(input: AwsAcmDeleteCertificateInput!): JSON

  # acm.DescribeCertificate
  DescribeCertificate(input: AwsAcmDescribeCertificateInput!): AwsAcmDescribeCertificateOutput

  # acm.GetCertificate
  GetCertificate(input: AwsAcmGetCertificateInput!): AwsAcmGetCertificateOutput

  # acm.ImportCertificate
  ImportCertificate(input: AwsAcmImportCertificateInput!): AwsAcmImportCertificateOutput

  # acm.ListCertificates
  ListCertificates(input: AwsAcmListCertificatesInput): AwsAcmListCertificatesOutput

  # acm.ListTagsForCertificate
  ListTagsForCertificate(input: AwsAcmListTagsForCertificateInput!): AwsAcmListTagsForCertificateOutput

  # acm.RemoveTagsFromCertificate
  RemoveTagsFromCertificate(input: AwsAcmRemoveTagsFromCertificateInput!): JSON

  # acm.RequestCertificate
  RequestCertificate(input: AwsAcmRequestCertificateInput!): AwsAcmRequestCertificateOutput

  # acm.ResendValidationEmail
  ResendValidationEmail(input: AwsAcmResendValidationEmailInput!): JSON
}

input AwsAcmAddTagsToCertificateInput {
  CertificateArn: String!
  Tags: [AwsAcmS3Input]!
}

input AwsAcmDeleteCertificateInput {
  CertificateArn: String!
}

input AwsAcmDescribeCertificateInput {
  CertificateArn: String!
}

type AwsAcmDescribeCertificateOutput {
  Certificate: AwsAcmDescribeCertificateOutputCertificate
}

type AwsAcmDescribeCertificateOutputCertificate {
  CertificateArn: String
  DomainName: String
  SubjectAlternativeNames: [String]
  DomainValidationOptions: [AwsAcmSd]
  Serial: String
  Subject: String
  Issuer: String
  CreatedAt: Date
  IssuedAt: Date
  ImportedAt: Date
  Status: String
  RevokedAt: Date
  RevocationReason: String
  NotBefore: Date
  NotAfter: Date
  KeyAlgorithm: String
  SignatureAlgorithm: String
  InUseBy: [String]
  FailureReason: String
  Type: String
  RenewalSummary: AwsAcmDescribeCertificateOutputCertificateRenewalSummary
  KeyUsages: [AwsAcmDescribeCertificateOutputCertificateKeyUsages]
  ExtendedKeyUsages: [AwsAcmDescribeCertificateOutputCertificateExtendedKeyUsages]
}

type AwsAcmDescribeCertificateOutputCertificateExtendedKeyUsages {
  Name: String
  OID: String
}

type AwsAcmDescribeCertificateOutputCertificateKeyUsages {
  Name: String
}

type AwsAcmDescribeCertificateOutputCertificateRenewalSummary {
  RenewalStatus: String!
  DomainValidationOptions: [AwsAcmSd]!
}

input AwsAcmGetCertificateInput {
  CertificateArn: String!
}

type AwsAcmGetCertificateOutput {
  Certificate: String
  CertificateChain: String
}

input AwsAcmImportCertificateInput {
  CertificateArn: String
  Certificate: JSON!
  PrivateKey: JSON!
  CertificateChain: JSON
}

type AwsAcmImportCertificateOutput {
  CertificateArn: String
}

input AwsAcmListCertificatesIncludesInput {
  extendedKeyUsage: [String]
  keyUsage: [String]
  keyTypes: [String]
}

input AwsAcmListCertificatesInput {
  CertificateStatuses: [String]
  Includes: AwsAcmListCertificatesIncludesInput
  NextToken: String
  MaxItems: Int
}

type AwsAcmListCertificatesOutput {
  NextToken: String
  CertificateSummaryList: [AwsAcmListCertificatesOutputCertificateSummaryList]
}

type AwsAcmListCertificatesOutputCertificateSummaryList {
  CertificateArn: String
  DomainName: String
}

input AwsAcmListTagsForCertificateInput {
  CertificateArn: String!
}

type AwsAcmListTagsForCertificateOutput {
  Tags: [AwsAcmS3]
}

input AwsAcmRemoveTagsFromCertificateInput {
  CertificateArn: String!
  Tags: [AwsAcmS3Input]!
}

input AwsAcmRequestCertificateDomainValidationOptionsInput {
  DomainName: String!
  ValidationDomain: String!
}

input AwsAcmRequestCertificateInput {
  DomainName: String!
  ValidationMethod: String
  SubjectAlternativeNames: [String]
  IdempotencyToken: String
  DomainValidationOptions: [AwsAcmRequestCertificateDomainValidationOptionsInput]
}

type AwsAcmRequestCertificateOutput {
  CertificateArn: String
}

input AwsAcmResendValidationEmailInput {
  CertificateArn: String!
  Domain: String!
  ValidationDomain: String!
}

type AwsAcmS3 {
  Key: String!
  Value: String
}

input AwsAcmS3Input {
  Key: String!
  Value: String
}

type AwsAcmSd {
  DomainName: String!
  ValidationEmails: [String]
  ValidationDomain: String
  ValidationStatus: String
  ResourceRecord: AwsAcmSdResourceRecord
  ValidationMethod: String
}

type AwsAcmSdResourceRecord {
  Name: String!
  Type: String!
  Value: String!
}

# Amazon API Gateway (2015-07-09)
type AwsApigateway {
  # apigateway.CreateApiKey
  CreateApiKey(input: AwsApigatewayCreateApiKeyInput): JSON

  # apigateway.CreateAuthorizer
  CreateAuthorizer(input: AwsApigatewayCreateAuthorizerInput!): JSON

  # apigateway.CreateBasePathMapping
  CreateBasePathMapping(input: AwsApigatewayCreateBasePathMappingInput!): JSON

  # apigateway.CreateDeployment
  CreateDeployment(input: AwsApigatewayCreateDeploymentInput!): JSON

  # apigateway.CreateDocumentationPart
  CreateDocumentationPart(input: AwsApigatewayCreateDocumentationPartInput!): JSON

  # apigateway.CreateDocumentationVersion
  CreateDocumentationVersion(input: AwsApigatewayCreateDocumentationVersionInput!): JSON

  # apigateway.CreateDomainName
  CreateDomainName(input: AwsApigatewayCreateDomainNameInput!): JSON

  # apigateway.CreateModel
  CreateModel(input: AwsApigatewayCreateModelInput!): JSON

  # apigateway.CreateRequestValidator
  CreateRequestValidator(input: AwsApigatewayCreateRequestValidatorInput!): JSON

  # apigateway.CreateResource
  CreateResource(input: AwsApigatewayCreateResourceInput!): JSON

  # apigateway.CreateRestApi
  CreateRestApi(input: AwsApigatewayCreateRestApiInput!): JSON

  # apigateway.CreateStage
  CreateStage(input: AwsApigatewayCreateStageInput!): JSON

  # apigateway.CreateUsagePlan
  CreateUsagePlan(input: AwsApigatewayCreateUsagePlanInput!): JSON

  # apigateway.CreateUsagePlanKey
  CreateUsagePlanKey(input: AwsApigatewayCreateUsagePlanKeyInput!): JSON

  # apigateway.DeleteApiKey
  DeleteApiKey(input: AwsApigatewayDeleteApiKeyInput!): JSON

  # apigateway.DeleteAuthorizer
  DeleteAuthorizer(input: AwsApigatewayDeleteAuthorizerInput!): JSON

  # apigateway.DeleteBasePathMapping
  DeleteBasePathMapping(input: AwsApigatewayDeleteBasePathMappingInput!): JSON

  # apigateway.DeleteClientCertificate
  DeleteClientCertificate(input: AwsApigatewayDeleteClientCertificateInput!): JSON

  # apigateway.DeleteDeployment
  DeleteDeployment(input: AwsApigatewayDeleteDeploymentInput!): JSON

  # apigateway.DeleteDocumentationPart
  DeleteDocumentationPart(input: AwsApigatewayDeleteDocumentationPartInput!): JSON

  # apigateway.DeleteDocumentationVersion
  DeleteDocumentationVersion(input: AwsApigatewayDeleteDocumentationVersionInput!): JSON

  # apigateway.DeleteDomainName
  DeleteDomainName(input: AwsApigatewayDeleteDomainNameInput!): JSON

  # apigateway.DeleteGatewayResponse
  DeleteGatewayResponse(input: AwsApigatewayDeleteGatewayResponseInput!): JSON

  # apigateway.DeleteIntegration
  DeleteIntegration(input: AwsApigatewayDeleteIntegrationInput!): JSON

  # apigateway.DeleteIntegrationResponse
  DeleteIntegrationResponse(input: AwsApigatewayDeleteIntegrationResponseInput!): JSON

  # apigateway.DeleteMethod
  DeleteMethod(input: AwsApigatewayDeleteMethodInput!): JSON

  # apigateway.DeleteMethodResponse
  DeleteMethodResponse(input: AwsApigatewayDeleteMethodResponseInput!): JSON

  # apigateway.DeleteModel
  DeleteModel(input: AwsApigatewayDeleteModelInput!): JSON

  # apigateway.DeleteRequestValidator
  DeleteRequestValidator(input: AwsApigatewayDeleteRequestValidatorInput!): JSON

  # apigateway.DeleteResource
  DeleteResource(input: AwsApigatewayDeleteResourceInput!): JSON

  # apigateway.DeleteRestApi
  DeleteRestApi(input: AwsApigatewayDeleteRestApiInput!): JSON

  # apigateway.DeleteStage
  DeleteStage(input: AwsApigatewayDeleteStageInput!): JSON

  # apigateway.DeleteUsagePlan
  DeleteUsagePlan(input: AwsApigatewayDeleteUsagePlanInput!): JSON

  # apigateway.DeleteUsagePlanKey
  DeleteUsagePlanKey(input: AwsApigatewayDeleteUsagePlanKeyInput!): JSON

  # apigateway.FlushStageAuthorizersCache
  FlushStageAuthorizersCache(input: AwsApigatewayFlushStageAuthorizersCacheInput!): JSON

  # apigateway.FlushStageCache
  FlushStageCache(input: AwsApigatewayFlushStageCacheInput!): JSON

  # apigateway.GenerateClientCertificate
  GenerateClientCertificate(input: AwsApigatewayGenerateClientCertificateInput): JSON

  # apigateway.GetAccount
  GetAccount(input: JSON): JSON

  # apigateway.GetApiKey
  GetApiKey(input: AwsApigatewayGetApiKeyInput!): JSON

  # apigateway.GetApiKeys
  GetApiKeys(input: AwsApigatewayGetApiKeysInput): AwsApigatewayGetApiKeysOutput

  # apigateway.GetAuthorizer
  GetAuthorizer(input: AwsApigatewayGetAuthorizerInput!): JSON

  # apigateway.GetAuthorizers
  GetAuthorizers(input: AwsApigatewayGetAuthorizersInput!): AwsApigatewayGetAuthorizersOutput

  # apigateway.GetBasePathMapping
  GetBasePathMapping(input: AwsApigatewayGetBasePathMappingInput!): JSON

  # apigateway.GetBasePathMappings
  GetBasePathMappings(input: AwsApigatewayGetBasePathMappingsInput!): AwsApigatewayGetBasePathMappingsOutput

  # apigateway.GetClientCertificate
  GetClientCertificate(input: AwsApigatewayGetClientCertificateInput!): JSON

  # apigateway.GetClientCertificates
  GetClientCertificates(input: AwsApigatewayGetClientCertificatesInput): AwsApigatewayGetClientCertificatesOutput

  # apigateway.GetDeployment
  GetDeployment(input: AwsApigatewayGetDeploymentInput!): JSON

  # apigateway.GetDeployments
  GetDeployments(input: AwsApigatewayGetDeploymentsInput!): AwsApigatewayGetDeploymentsOutput

  # apigateway.GetDocumentationPart
  GetDocumentationPart(input: AwsApigatewayGetDocumentationPartInput!): JSON

  # apigateway.GetDocumentationParts
  GetDocumentationParts(input: AwsApigatewayGetDocumentationPartsInput!): AwsApigatewayGetDocumentationPartsOutput

  # apigateway.GetDocumentationVersion
  GetDocumentationVersion(input: AwsApigatewayGetDocumentationVersionInput!): JSON

  # apigateway.GetDocumentationVersions
  GetDocumentationVersions(input: AwsApigatewayGetDocumentationVersionsInput!): AwsApigatewayGetDocumentationVersionsOutput

  # apigateway.GetDomainName
  GetDomainName(input: AwsApigatewayGetDomainNameInput!): JSON

  # apigateway.GetDomainNames
  GetDomainNames(input: AwsApigatewayGetDomainNamesInput): AwsApigatewayGetDomainNamesOutput

  # apigateway.GetExport
  GetExport(input: AwsApigatewayGetExportInput!): AwsApigatewayGetExportOutput

  # apigateway.GetGatewayResponse
  GetGatewayResponse(input: AwsApigatewayGetGatewayResponseInput!): JSON

  # apigateway.GetGatewayResponses
  GetGatewayResponses(input: AwsApigatewayGetGatewayResponsesInput!): AwsApigatewayGetGatewayResponsesOutput

  # apigateway.GetIntegration
  GetIntegration(input: AwsApigatewayGetIntegrationInput!): JSON

  # apigateway.GetIntegrationResponse
  GetIntegrationResponse(input: AwsApigatewayGetIntegrationResponseInput!): JSON

  # apigateway.GetMethod
  GetMethod(input: AwsApigatewayGetMethodInput!): JSON

  # apigateway.GetMethodResponse
  GetMethodResponse(input: AwsApigatewayGetMethodResponseInput!): JSON

  # apigateway.GetModel
  GetModel(input: AwsApigatewayGetModelInput!): JSON

  # apigateway.GetModelTemplate
  GetModelTemplate(input: AwsApigatewayGetModelTemplateInput!): AwsApigatewayGetModelTemplateOutput

  # apigateway.GetModels
  GetModels(input: AwsApigatewayGetModelsInput!): AwsApigatewayGetModelsOutput

  # apigateway.GetRequestValidator
  GetRequestValidator(input: AwsApigatewayGetRequestValidatorInput!): JSON

  # apigateway.GetRequestValidators
  GetRequestValidators(input: AwsApigatewayGetRequestValidatorsInput!): AwsApigatewayGetRequestValidatorsOutput

  # apigateway.GetResource
  GetResource(input: AwsApigatewayGetResourceInput!): JSON

  # apigateway.GetResources
  GetResources(input: AwsApigatewayGetResourcesInput!): AwsApigatewayGetResourcesOutput

  # apigateway.GetRestApi
  GetRestApi(input: AwsApigatewayGetRestApiInput!): JSON

  # apigateway.GetRestApis
  GetRestApis(input: AwsApigatewayGetRestApisInput): AwsApigatewayGetRestApisOutput

  # apigateway.GetSdk
  GetSdk(input: AwsApigatewayGetSdkInput!): AwsApigatewayGetSdkOutput

  # apigateway.GetSdkType
  GetSdkType(input: AwsApigatewayGetSdkTypeInput!): JSON

  # apigateway.GetSdkTypes
  GetSdkTypes(input: AwsApigatewayGetSdkTypesInput): AwsApigatewayGetSdkTypesOutput

  # apigateway.GetStage
  GetStage(input: AwsApigatewayGetStageInput!): JSON

  # apigateway.GetStages
  GetStages(input: AwsApigatewayGetStagesInput!): AwsApigatewayGetStagesOutput

  # apigateway.GetUsage
  GetUsage(input: AwsApigatewayGetUsageInput!): JSON

  # apigateway.GetUsagePlan
  GetUsagePlan(input: AwsApigatewayGetUsagePlanInput!): JSON

  # apigateway.GetUsagePlanKey
  GetUsagePlanKey(input: AwsApigatewayGetUsagePlanKeyInput!): JSON

  # apigateway.GetUsagePlanKeys
  GetUsagePlanKeys(input: AwsApigatewayGetUsagePlanKeysInput!): AwsApigatewayGetUsagePlanKeysOutput

  # apigateway.GetUsagePlans
  GetUsagePlans(input: AwsApigatewayGetUsagePlansInput): AwsApigatewayGetUsagePlansOutput

  # apigateway.ImportApiKeys
  ImportApiKeys(input: AwsApigatewayImportApiKeysInput!): AwsApigatewayImportApiKeysOutput

  # apigateway.ImportDocumentationParts
  ImportDocumentationParts(input: AwsApigatewayImportDocumentationPartsInput!): AwsApigatewayImportDocumentationPartsOutput

  # apigateway.ImportRestApi
  ImportRestApi(input: AwsApigatewayImportRestApiInput!): JSON

  # apigateway.PutGatewayResponse
  PutGatewayResponse(input: AwsApigatewayPutGatewayResponseInput!): JSON

  # apigateway.PutIntegration
  PutIntegration(input: AwsApigatewayPutIntegrationInput!): JSON

  # apigateway.PutIntegrationResponse
  PutIntegrationResponse(input: AwsApigatewayPutIntegrationResponseInput!): JSON

  # apigateway.PutMethod
  PutMethod(input: AwsApigatewayPutMethodInput!): JSON

  # apigateway.PutMethodResponse
  PutMethodResponse(input: AwsApigatewayPutMethodResponseInput!): JSON

  # apigateway.PutRestApi
  PutRestApi(input: AwsApigatewayPutRestApiInput!): JSON

  # apigateway.TestInvokeAuthorizer
  TestInvokeAuthorizer(input: AwsApigatewayTestInvokeAuthorizerInput!): AwsApigatewayTestInvokeAuthorizerOutput

  # apigateway.TestInvokeMethod
  TestInvokeMethod(input: AwsApigatewayTestInvokeMethodInput!): AwsApigatewayTestInvokeMethodOutput

  # apigateway.UpdateAccount
  UpdateAccount(input: AwsApigatewayUpdateAccountInput): JSON

  # apigateway.UpdateApiKey
  UpdateApiKey(input: AwsApigatewayUpdateApiKeyInput!): JSON

  # apigateway.UpdateAuthorizer
  UpdateAuthorizer(input: AwsApigatewayUpdateAuthorizerInput!): JSON

  # apigateway.UpdateBasePathMapping
  UpdateBasePathMapping(input: AwsApigatewayUpdateBasePathMappingInput!): JSON

  # apigateway.UpdateClientCertificate
  UpdateClientCertificate(input: AwsApigatewayUpdateClientCertificateInput!): JSON

  # apigateway.UpdateDeployment
  UpdateDeployment(input: AwsApigatewayUpdateDeploymentInput!): JSON

  # apigateway.UpdateDocumentationPart
  UpdateDocumentationPart(input: AwsApigatewayUpdateDocumentationPartInput!): JSON

  # apigateway.UpdateDocumentationVersion
  UpdateDocumentationVersion(input: AwsApigatewayUpdateDocumentationVersionInput!): JSON

  # apigateway.UpdateDomainName
  UpdateDomainName(input: AwsApigatewayUpdateDomainNameInput!): JSON

  # apigateway.UpdateGatewayResponse
  UpdateGatewayResponse(input: AwsApigatewayUpdateGatewayResponseInput!): JSON

  # apigateway.UpdateIntegration
  UpdateIntegration(input: AwsApigatewayUpdateIntegrationInput!): JSON

  # apigateway.UpdateIntegrationResponse
  UpdateIntegrationResponse(input: AwsApigatewayUpdateIntegrationResponseInput!): JSON

  # apigateway.UpdateMethod
  UpdateMethod(input: AwsApigatewayUpdateMethodInput!): JSON

  # apigateway.UpdateMethodResponse
  UpdateMethodResponse(input: AwsApigatewayUpdateMethodResponseInput!): JSON

  # apigateway.UpdateModel
  UpdateModel(input: AwsApigatewayUpdateModelInput!): JSON

  # apigateway.UpdateRequestValidator
  UpdateRequestValidator(input: AwsApigatewayUpdateRequestValidatorInput!): JSON

  # apigateway.UpdateResource
  UpdateResource(input: AwsApigatewayUpdateResourceInput!): JSON

  # apigateway.UpdateRestApi
  UpdateRestApi(input: AwsApigatewayUpdateRestApiInput!): JSON

  # apigateway.UpdateStage
  UpdateStage(input: AwsApigatewayUpdateStageInput!): JSON

  # apigateway.UpdateUsage
  UpdateUsage(input: AwsApigatewayUpdateUsageInput!): JSON

  # apigateway.UpdateUsagePlan
  UpdateUsagePlan(input: AwsApigatewayUpdateUsagePlanInput!): JSON
}

input AwsApigatewayCreateApiKeyInput {
  name: String
  description: String
  enabled: Boolean
  generateDistinctId: Boolean
  value: String
  stageKeys: [AwsApigatewayCreateApiKeyStageKeysInput]
  customerId: String
}

input AwsApigatewayCreateApiKeyStageKeysInput {
  restApiId: String
  stageName: String
}

input AwsApigatewayCreateAuthorizerInput {
  restApiId: String!
  name: String!
  type: String!
  providerARNs: [String]
  authType: String
  authorizerUri: String
  authorizerCredentials: String
  identitySource: String
  identityValidationExpression: String
  authorizerResultTtlInSeconds: Int
}

input AwsApigatewayCreateBasePathMappingInput {
  domainName: String!
  basePath: String
  restApiId: String!
  stage: String
}

input AwsApigatewayCreateDeploymentCanarySettingsInput {
  percentTraffic: JSON
  stageVariableOverrides: JSON
  useStageCache: Boolean
}

input AwsApigatewayCreateDeploymentInput {
  restApiId: String!
  stageName: String
  stageDescription: String
  description: String
  cacheClusterEnabled: Boolean
  cacheClusterSize: String
  variables: JSON
  canarySettings: AwsApigatewayCreateDeploymentCanarySettingsInput
}

input AwsApigatewayCreateDocumentationPartInput {
  restApiId: String!
  location: AwsApigatewaySsInput!
  properties: String!
}

input AwsApigatewayCreateDocumentationVersionInput {
  restApiId: String!
  documentationVersion: String!
  stageName: String
  description: String
}

input AwsApigatewayCreateDomainNameInput {
  domainName: String!
  certificateName: String
  certificateBody: String
  certificatePrivateKey: String
  certificateChain: String
  certificateArn: String
  regionalCertificateName: String
  regionalCertificateArn: String
  endpointConfiguration: AwsApigatewaySzInput
}

input AwsApigatewayCreateModelInput {
  restApiId: String!
  name: String!
  description: String
  schema: String
  contentType: String!
}

input AwsApigatewayCreateRequestValidatorInput {
  restApiId: String!
  name: String
  validateRequestBody: Boolean
  validateRequestParameters: Boolean
}

input AwsApigatewayCreateResourceInput {
  restApiId: String!
  parentId: String!
  pathPart: String!
}

input AwsApigatewayCreateRestApiInput {
  name: String!
  description: String
  version: String
  cloneFrom: String
  binaryMediaTypes: [String]
  endpointConfiguration: AwsApigatewaySzInput
}

input AwsApigatewayCreateStageInput {
  restApiId: String!
  stageName: String!
  deploymentId: String!
  description: String
  cacheClusterEnabled: Boolean
  cacheClusterSize: String
  variables: JSON
  documentationVersion: String
  canarySettings: AwsApigatewayS1oInput
}

input AwsApigatewayCreateUsagePlanInput {
  name: String!
  description: String
  apiStages: [AwsApigatewayS1wInput]
  throttle: AwsApigatewayS1yInput
  quota: AwsApigatewayS1zInput
}

input AwsApigatewayCreateUsagePlanKeyInput {
  usagePlanId: String!
  keyId: String!
  keyType: String!
}

input AwsApigatewayDeleteApiKeyInput {
  apiKey: String!
}

input AwsApigatewayDeleteAuthorizerInput {
  restApiId: String!
  authorizerId: String!
}

input AwsApigatewayDeleteBasePathMappingInput {
  domainName: String!
  basePath: String!
}

input AwsApigatewayDeleteClientCertificateInput {
  clientCertificateId: String!
}

input AwsApigatewayDeleteDeploymentInput {
  restApiId: String!
  deploymentId: String!
}

input AwsApigatewayDeleteDocumentationPartInput {
  restApiId: String!
  documentationPartId: String!
}

input AwsApigatewayDeleteDocumentationVersionInput {
  restApiId: String!
  documentationVersion: String!
}

input AwsApigatewayDeleteDomainNameInput {
  domainName: String!
}

input AwsApigatewayDeleteGatewayResponseInput {
  restApiId: String!
  responseType: String!
}

input AwsApigatewayDeleteIntegrationInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
}

input AwsApigatewayDeleteIntegrationResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
}

input AwsApigatewayDeleteMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
}

input AwsApigatewayDeleteMethodResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
}

input AwsApigatewayDeleteModelInput {
  restApiId: String!
  modelName: String!
}

input AwsApigatewayDeleteRequestValidatorInput {
  restApiId: String!
  requestValidatorId: String!
}

input AwsApigatewayDeleteResourceInput {
  restApiId: String!
  resourceId: String!
}

input AwsApigatewayDeleteRestApiInput {
  restApiId: String!
}

input AwsApigatewayDeleteStageInput {
  restApiId: String!
  stageName: String!
}

input AwsApigatewayDeleteUsagePlanInput {
  usagePlanId: String!
}

input AwsApigatewayDeleteUsagePlanKeyInput {
  usagePlanId: String!
  keyId: String!
}

input AwsApigatewayFlushStageAuthorizersCacheInput {
  restApiId: String!
  stageName: String!
}

input AwsApigatewayFlushStageCacheInput {
  restApiId: String!
  stageName: String!
}

input AwsApigatewayGenerateClientCertificateInput {
  description: String
}

input AwsApigatewayGetApiKeyInput {
  apiKey: String!
  includeValue: Boolean
}

input AwsApigatewayGetApiKeysInput {
  position: String
  limit: Int
  nameQuery: String
  customerId: String
  includeValues: Boolean
}

type AwsApigatewayGetApiKeysOutput {
  warnings: [String]
  position: String
  items: [AwsApigatewayS6]
}

input AwsApigatewayGetAuthorizerInput {
  restApiId: String!
  authorizerId: String!
}

input AwsApigatewayGetAuthorizersInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsApigatewayGetAuthorizersOutput {
  position: String
  items: [AwsApigatewaySe]
}

input AwsApigatewayGetBasePathMappingInput {
  domainName: String!
  basePath: String!
}

input AwsApigatewayGetBasePathMappingsInput {
  domainName: String!
  position: String
  limit: Int
}

type AwsApigatewayGetBasePathMappingsOutput {
  position: String
  items: [AwsApigatewaySg]
}

input AwsApigatewayGetClientCertificateInput {
  clientCertificateId: String!
}

input AwsApigatewayGetClientCertificatesInput {
  position: String
  limit: Int
}

type AwsApigatewayGetClientCertificatesOutput {
  position: String
  items: [AwsApigatewayS2s]
}

input AwsApigatewayGetDeploymentInput {
  restApiId: String!
  deploymentId: String!
  embed: [String]
}

input AwsApigatewayGetDeploymentsInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsApigatewayGetDeploymentsOutput {
  position: String
  items: [AwsApigatewaySn]
}

input AwsApigatewayGetDocumentationPartInput {
  restApiId: String!
  documentationPartId: String!
}

input AwsApigatewayGetDocumentationPartsInput {
  restApiId: String!
  type: String
  nameQuery: String
  path: String
  position: String
  limit: Int
  locationStatus: String
}

type AwsApigatewayGetDocumentationPartsOutput {
  position: String
  items: [AwsApigatewaySv]
}

input AwsApigatewayGetDocumentationVersionInput {
  restApiId: String!
  documentationVersion: String!
}

input AwsApigatewayGetDocumentationVersionsInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsApigatewayGetDocumentationVersionsOutput {
  position: String
  items: [AwsApigatewaySx]
}

input AwsApigatewayGetDomainNameInput {
  domainName: String!
}

input AwsApigatewayGetDomainNamesInput {
  position: String
  limit: Int
}

type AwsApigatewayGetDomainNamesOutput {
  position: String
  items: [AwsApigatewayS12]
}

input AwsApigatewayGetExportInput {
  restApiId: String!
  stageName: String!
  exportType: String!
  parameters: JSON
  accepts: String
}

type AwsApigatewayGetExportOutput {
  contentType: String
  contentDisposition: String
  body: JSON
}

input AwsApigatewayGetGatewayResponseInput {
  restApiId: String!
  responseType: String!
}

input AwsApigatewayGetGatewayResponsesInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsApigatewayGetGatewayResponsesOutput {
  position: String
  items: [AwsApigatewayS3w]
}

input AwsApigatewayGetIntegrationInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
}

input AwsApigatewayGetIntegrationResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
}

input AwsApigatewayGetMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
}

input AwsApigatewayGetMethodResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
}

input AwsApigatewayGetModelInput {
  restApiId: String!
  modelName: String!
  flatten: Boolean
}

input AwsApigatewayGetModelsInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsApigatewayGetModelsOutput {
  position: String
  items: [AwsApigatewayS14]
}

input AwsApigatewayGetModelTemplateInput {
  restApiId: String!
  modelName: String!
}

type AwsApigatewayGetModelTemplateOutput {
  value: String
}

input AwsApigatewayGetRequestValidatorInput {
  restApiId: String!
  requestValidatorId: String!
}

input AwsApigatewayGetRequestValidatorsInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsApigatewayGetRequestValidatorsOutput {
  position: String
  items: [AwsApigatewayS16]
}

input AwsApigatewayGetResourceInput {
  restApiId: String!
  resourceId: String!
  embed: [String]
}

input AwsApigatewayGetResourcesInput {
  restApiId: String!
  position: String
  limit: Int
  embed: [String]
}

type AwsApigatewayGetResourcesOutput {
  position: String
  items: [AwsApigatewayS18]
}

input AwsApigatewayGetRestApiInput {
  restApiId: String!
}

input AwsApigatewayGetRestApisInput {
  position: String
  limit: Int
}

type AwsApigatewayGetRestApisOutput {
  position: String
  items: [AwsApigatewayS1m]
}

input AwsApigatewayGetSdkInput {
  restApiId: String!
  stageName: String!
  sdkType: String!
  parameters: JSON
}

type AwsApigatewayGetSdkOutput {
  contentType: String
  contentDisposition: String
  body: JSON
}

input AwsApigatewayGetSdkTypeInput {
  id: String!
}

input AwsApigatewayGetSdkTypesInput {
  position: String
  limit: Int
}

type AwsApigatewayGetSdkTypesOutput {
  position: String
  items: [AwsApigatewayS4p]
}

input AwsApigatewayGetStageInput {
  restApiId: String!
  stageName: String!
}

input AwsApigatewayGetStagesInput {
  restApiId: String!
  deploymentId: String
}

type AwsApigatewayGetStagesOutput {
  item: [AwsApigatewayS1p]
}

input AwsApigatewayGetUsageInput {
  usagePlanId: String!
  keyId: String
  startDate: String!
  endDate: String!
  position: String
  limit: Int
}

input AwsApigatewayGetUsagePlanInput {
  usagePlanId: String!
}

input AwsApigatewayGetUsagePlanKeyInput {
  usagePlanId: String!
  keyId: String!
}

input AwsApigatewayGetUsagePlanKeysInput {
  usagePlanId: String!
  position: String
  limit: Int
  nameQuery: String
}

type AwsApigatewayGetUsagePlanKeysOutput {
  position: String
  items: [AwsApigatewayS23]
}

input AwsApigatewayGetUsagePlansInput {
  position: String
  keyId: String
  limit: Int
}

type AwsApigatewayGetUsagePlansOutput {
  position: String
  items: [AwsApigatewayS21]
}

input AwsApigatewayImportApiKeysInput {
  body: JSON!
  format: String!
  failOnWarnings: Boolean
}

type AwsApigatewayImportApiKeysOutput {
  ids: [String]
  warnings: [String]
}

input AwsApigatewayImportDocumentationPartsInput {
  restApiId: String!
  mode: String
  failOnWarnings: Boolean
  body: JSON!
}

type AwsApigatewayImportDocumentationPartsOutput {
  ids: [String]
  warnings: [String]
}

input AwsApigatewayImportRestApiInput {
  failOnWarnings: Boolean
  parameters: JSON
  body: JSON!
}

input AwsApigatewayPutGatewayResponseInput {
  restApiId: String!
  responseType: String!
  statusCode: String
  responseParameters: JSON
  responseTemplates: JSON
}

input AwsApigatewayPutIntegrationInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  type: String!
  integrationHttpMethod: String
  uri: String
  credentials: String
  requestParameters: JSON
  requestTemplates: JSON
  passthroughBehavior: String
  cacheNamespace: String
  cacheKeyParameters: [String]
  contentHandling: String
  timeoutInMillis: Int
}

input AwsApigatewayPutIntegrationResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
  selectionPattern: String
  responseParameters: JSON
  responseTemplates: JSON
  contentHandling: String
}

input AwsApigatewayPutMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  authorizationType: String!
  authorizerId: String
  apiKeyRequired: Boolean
  operationName: String
  requestParameters: JSON
  requestModels: JSON
  requestValidatorId: String
}

input AwsApigatewayPutMethodResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
  responseParameters: JSON
  responseModels: JSON
}

input AwsApigatewayPutRestApiInput {
  restApiId: String!
  mode: String
  failOnWarnings: Boolean
  parameters: JSON
  body: JSON!
}

type AwsApigatewayS12 {
  domainName: String
  certificateName: String
  certificateArn: String
  certificateUploadDate: Date
  regionalDomainName: String
  regionalHostedZoneId: String
  regionalCertificateName: String
  regionalCertificateArn: String
  distributionDomainName: String
  distributionHostedZoneId: String
  endpointConfiguration: AwsApigatewaySz
}

type AwsApigatewayS14 {
  id: String
  name: String
  description: String
  schema: String
  contentType: String
}

type AwsApigatewayS16 {
  id: String
  name: String
  validateRequestBody: Boolean
  validateRequestParameters: Boolean
}

type AwsApigatewayS18 {
  id: String
  parentId: String
  pathPart: String
  path: String
  resourceMethods: JSON
}

type AwsApigatewayS1m {
  id: String
  name: String
  description: String
  createdDate: Date
  version: String
  warnings: [String]
  binaryMediaTypes: [String]
  endpointConfiguration: AwsApigatewaySz
}

type AwsApigatewayS1o {
  percentTraffic: JSON
  deploymentId: String
  stageVariableOverrides: JSON
  useStageCache: Boolean
}

input AwsApigatewayS1oInput {
  percentTraffic: JSON
  deploymentId: String
  stageVariableOverrides: JSON
  useStageCache: Boolean
}

type AwsApigatewayS1p {
  deploymentId: String
  clientCertificateId: String
  stageName: String
  description: String
  cacheClusterEnabled: Boolean
  cacheClusterSize: String
  cacheClusterStatus: String
  methodSettings: JSON
  variables: JSON
  documentationVersion: String
  accessLogSettings: AwsApigatewayS1pAccessLogSettings
  canarySettings: AwsApigatewayS1o
  createdDate: Date
  lastUpdatedDate: Date
}

type AwsApigatewayS1pAccessLogSettings {
  format: String
  destinationArn: String
}

type AwsApigatewayS1w {
  apiId: String
  stage: String
}

input AwsApigatewayS1wInput {
  apiId: String
  stage: String
}

type AwsApigatewayS1y {
  burstLimit: Int
  rateLimit: JSON
}

input AwsApigatewayS1yInput {
  burstLimit: Int
  rateLimit: JSON
}

type AwsApigatewayS1z {
  limit: Int
  offset: Int
  period: String
}

input AwsApigatewayS1zInput {
  limit: Int
  offset: Int
  period: String
}

type AwsApigatewayS21 {
  id: String
  name: String
  description: String
  apiStages: [AwsApigatewayS1w]
  throttle: AwsApigatewayS1y
  quota: AwsApigatewayS1z
  productCode: String
}

type AwsApigatewayS23 {
  id: String
  type: String
  value: String
  name: String
}

type AwsApigatewayS2s {
  clientCertificateId: String
  description: String
  pemEncodedCertificate: String
  createdDate: Date
  expirationDate: Date
}

type AwsApigatewayS3w {
  responseType: String
  statusCode: String
  responseParameters: JSON
  responseTemplates: JSON
  defaultResponse: Boolean
}

type AwsApigatewayS4p {
  id: String
  friendlyName: String
  description: String
  configurationProperties: [AwsApigatewayS4pConfigurationProperties]
}

type AwsApigatewayS4pConfigurationProperties {
  name: String
  friendlyName: String
  description: String
  required: Boolean
  defaultValue: String
}

input AwsApigatewayS5xInput {
  op: String
  path: String
  value: String
  from: String
}

type AwsApigatewayS6 {
  id: String
  value: String
  name: String
  customerId: String
  description: String
  enabled: Boolean
  createdDate: Date
  lastUpdatedDate: Date
  stageKeys: [String]
}

type AwsApigatewaySe {
  id: String
  name: String
  type: String
  providerARNs: [String]
  authType: String
  authorizerUri: String
  authorizerCredentials: String
  identitySource: String
  identityValidationExpression: String
  authorizerResultTtlInSeconds: Int
}

type AwsApigatewaySg {
  basePath: String
  restApiId: String
  stage: String
}

type AwsApigatewaySn {
  id: String
  description: String
  createdDate: Date
  apiSummary: JSON
}

type AwsApigatewaySs {
  type: String!
  path: String
  method: String
  statusCode: String
  name: String
}

input AwsApigatewaySsInput {
  type: String!
  path: String
  method: String
  statusCode: String
  name: String
}

type AwsApigatewaySv {
  id: String
  location: AwsApigatewaySs
  properties: String
}

type AwsApigatewaySx {
  version: String
  createdDate: Date
  description: String
}

type AwsApigatewaySz {
  types: [String]
}

input AwsApigatewaySzInput {
  types: [String]
}

input AwsApigatewayTestInvokeAuthorizerInput {
  restApiId: String!
  authorizerId: String!
  headers: JSON
  pathWithQueryString: String
  body: String
  stageVariables: JSON
  additionalContext: JSON
}

type AwsApigatewayTestInvokeAuthorizerOutput {
  clientStatus: Int
  log: String
  latency: JSON
  principalId: String
  policy: String
  authorization: JSON
  claims: JSON
}

input AwsApigatewayTestInvokeMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  pathWithQueryString: String
  body: String
  headers: JSON
  clientCertificateId: String
  stageVariables: JSON
}

type AwsApigatewayTestInvokeMethodOutput {
  status: Int
  body: String
  headers: JSON
  log: String
  latency: JSON
}

input AwsApigatewayUpdateAccountInput {
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateApiKeyInput {
  apiKey: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateAuthorizerInput {
  restApiId: String!
  authorizerId: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateBasePathMappingInput {
  domainName: String!
  basePath: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateClientCertificateInput {
  clientCertificateId: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateDeploymentInput {
  restApiId: String!
  deploymentId: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateDocumentationPartInput {
  restApiId: String!
  documentationPartId: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateDocumentationVersionInput {
  restApiId: String!
  documentationVersion: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateDomainNameInput {
  domainName: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateGatewayResponseInput {
  restApiId: String!
  responseType: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateIntegrationInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateIntegrationResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateMethodResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateModelInput {
  restApiId: String!
  modelName: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateRequestValidatorInput {
  restApiId: String!
  requestValidatorId: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateResourceInput {
  restApiId: String!
  resourceId: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateRestApiInput {
  restApiId: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateStageInput {
  restApiId: String!
  stageName: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateUsageInput {
  usagePlanId: String!
  keyId: String!
  patchOperations: [AwsApigatewayS5xInput]
}

input AwsApigatewayUpdateUsagePlanInput {
  usagePlanId: String!
  patchOperations: [AwsApigatewayS5xInput]
}

# Application Auto Scaling (2016-02-06)
type AwsApplicationautoscaling {
  # applicationautoscaling.DeleteScalingPolicy
  DeleteScalingPolicy(input: AwsApplicationautoscalingDeleteScalingPolicyInput!): JSON

  # applicationautoscaling.DeleteScheduledAction
  DeleteScheduledAction(input: AwsApplicationautoscalingDeleteScheduledActionInput!): JSON

  # applicationautoscaling.DeregisterScalableTarget
  DeregisterScalableTarget(input: AwsApplicationautoscalingDeregisterScalableTargetInput!): JSON

  # applicationautoscaling.DescribeScalableTargets
  DescribeScalableTargets(input: AwsApplicationautoscalingDescribeScalableTargetsInput!): AwsApplicationautoscalingDescribeScalableTargetsOutput

  # applicationautoscaling.DescribeScalingActivities
  DescribeScalingActivities(input: AwsApplicationautoscalingDescribeScalingActivitiesInput!): AwsApplicationautoscalingDescribeScalingActivitiesOutput

  # applicationautoscaling.DescribeScalingPolicies
  DescribeScalingPolicies(input: AwsApplicationautoscalingDescribeScalingPoliciesInput!): AwsApplicationautoscalingDescribeScalingPoliciesOutput

  # applicationautoscaling.DescribeScheduledActions
  DescribeScheduledActions(input: AwsApplicationautoscalingDescribeScheduledActionsInput!): AwsApplicationautoscalingDescribeScheduledActionsOutput

  # applicationautoscaling.PutScalingPolicy
  PutScalingPolicy(input: AwsApplicationautoscalingPutScalingPolicyInput!): AwsApplicationautoscalingPutScalingPolicyOutput

  # applicationautoscaling.PutScheduledAction
  PutScheduledAction(input: AwsApplicationautoscalingPutScheduledActionInput!): JSON

  # applicationautoscaling.RegisterScalableTarget
  RegisterScalableTarget(input: AwsApplicationautoscalingRegisterScalableTargetInput!): JSON
}

input AwsApplicationautoscalingDeleteScalingPolicyInput {
  PolicyName: String!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
}

input AwsApplicationautoscalingDeleteScheduledActionInput {
  ServiceNamespace: String!
  ScheduledActionName: String!
  ResourceId: String!
  ScalableDimension: String
}

input AwsApplicationautoscalingDeregisterScalableTargetInput {
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
}

input AwsApplicationautoscalingDescribeScalableTargetsInput {
  ServiceNamespace: String!
  ResourceIds: [String]
  ScalableDimension: String
  MaxResults: Int
  NextToken: String
}

type AwsApplicationautoscalingDescribeScalableTargetsOutput {
  ScalableTargets: [AwsApplicationautoscalingDescribeScalableTargetsOutputScalableTargets]
  NextToken: String
}

type AwsApplicationautoscalingDescribeScalableTargetsOutputScalableTargets {
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  MinCapacity: Int!
  MaxCapacity: Int!
  RoleARN: String!
  CreationTime: Date!
}

input AwsApplicationautoscalingDescribeScalingActivitiesInput {
  ServiceNamespace: String!
  ResourceId: String
  ScalableDimension: String
  MaxResults: Int
  NextToken: String
}

type AwsApplicationautoscalingDescribeScalingActivitiesOutput {
  ScalingActivities: [AwsApplicationautoscalingDescribeScalingActivitiesOutputScalingActivities]
  NextToken: String
}

type AwsApplicationautoscalingDescribeScalingActivitiesOutputScalingActivities {
  ActivityId: String!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  Description: String!
  Cause: String!
  StartTime: Date!
  EndTime: Date
  StatusCode: String!
  StatusMessage: String
  Details: String
}

input AwsApplicationautoscalingDescribeScalingPoliciesInput {
  PolicyNames: [String]
  ServiceNamespace: String!
  ResourceId: String
  ScalableDimension: String
  MaxResults: Int
  NextToken: String
}

type AwsApplicationautoscalingDescribeScalingPoliciesOutput {
  ScalingPolicies: [AwsApplicationautoscalingDescribeScalingPoliciesOutputScalingPolicies]
  NextToken: String
}

type AwsApplicationautoscalingDescribeScalingPoliciesOutputScalingPolicies {
  PolicyARN: String!
  PolicyName: String!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  PolicyType: String!
  StepScalingPolicyConfiguration: AwsApplicationautoscalingSv
  TargetTrackingScalingPolicyConfiguration: AwsApplicationautoscalingS14
  Alarms: [AwsApplicationautoscalingS1i]
  CreationTime: Date!
}

input AwsApplicationautoscalingDescribeScheduledActionsInput {
  ScheduledActionNames: [String]
  ServiceNamespace: String!
  ResourceId: String
  ScalableDimension: String
  MaxResults: Int
  NextToken: String
}

type AwsApplicationautoscalingDescribeScheduledActionsOutput {
  ScheduledActions: [AwsApplicationautoscalingDescribeScheduledActionsOutputScheduledActions]
  NextToken: String
}

type AwsApplicationautoscalingDescribeScheduledActionsOutputScheduledActions {
  ScheduledActionName: String!
  ScheduledActionARN: String!
  ServiceNamespace: String!
  Schedule: String!
  ResourceId: String!
  ScalableDimension: String
  StartTime: Date
  EndTime: Date
  ScalableTargetAction: AwsApplicationautoscalingS1p
  CreationTime: Date!
}

input AwsApplicationautoscalingPutScalingPolicyInput {
  PolicyName: String!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  PolicyType: String
  StepScalingPolicyConfiguration: AwsApplicationautoscalingSvInput
  TargetTrackingScalingPolicyConfiguration: AwsApplicationautoscalingS14Input
}

type AwsApplicationautoscalingPutScalingPolicyOutput {
  PolicyARN: String!
  Alarms: [AwsApplicationautoscalingS1i]
}

input AwsApplicationautoscalingPutScheduledActionInput {
  ServiceNamespace: String!
  Schedule: String
  ScheduledActionName: String!
  ResourceId: String!
  ScalableDimension: String
  StartTime: Date
  EndTime: Date
  ScalableTargetAction: AwsApplicationautoscalingS1pInput
}

input AwsApplicationautoscalingRegisterScalableTargetInput {
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  MinCapacity: Int
  MaxCapacity: Int
  RoleARN: String
}

type AwsApplicationautoscalingS14 {
  TargetValue: JSON!
  PredefinedMetricSpecification: AwsApplicationautoscalingS14PredefinedMetricSpecification
  CustomizedMetricSpecification: AwsApplicationautoscalingS14CustomizedMetricSpecification
  ScaleOutCooldown: Int
  ScaleInCooldown: Int
  DisableScaleIn: Boolean
}

type AwsApplicationautoscalingS14CustomizedMetricSpecification {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsApplicationautoscalingS14CustomizedMetricSpecificationDimensions]
  Statistic: String!
  Unit: String
}

type AwsApplicationautoscalingS14CustomizedMetricSpecificationDimensions {
  Name: String!
  Value: String!
}

input AwsApplicationautoscalingS14CustomizedMetricSpecificationDimensionsInput {
  Name: String!
  Value: String!
}

input AwsApplicationautoscalingS14CustomizedMetricSpecificationInput {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsApplicationautoscalingS14CustomizedMetricSpecificationDimensionsInput]
  Statistic: String!
  Unit: String
}

input AwsApplicationautoscalingS14Input {
  TargetValue: JSON!
  PredefinedMetricSpecification: AwsApplicationautoscalingS14PredefinedMetricSpecificationInput
  CustomizedMetricSpecification: AwsApplicationautoscalingS14CustomizedMetricSpecificationInput
  ScaleOutCooldown: Int
  ScaleInCooldown: Int
  DisableScaleIn: Boolean
}

type AwsApplicationautoscalingS14PredefinedMetricSpecification {
  PredefinedMetricType: String!
  ResourceLabel: String
}

input AwsApplicationautoscalingS14PredefinedMetricSpecificationInput {
  PredefinedMetricType: String!
  ResourceLabel: String
}

type AwsApplicationautoscalingS1i {
  AlarmName: String!
  AlarmARN: String!
}

type AwsApplicationautoscalingS1p {
  MinCapacity: Int
  MaxCapacity: Int
}

input AwsApplicationautoscalingS1pInput {
  MinCapacity: Int
  MaxCapacity: Int
}

type AwsApplicationautoscalingSv {
  AdjustmentType: String
  StepAdjustments: [AwsApplicationautoscalingSvStepAdjustments]
  MinAdjustmentMagnitude: Int
  Cooldown: Int
  MetricAggregationType: String
}

input AwsApplicationautoscalingSvInput {
  AdjustmentType: String
  StepAdjustments: [AwsApplicationautoscalingSvStepAdjustmentsInput]
  MinAdjustmentMagnitude: Int
  Cooldown: Int
  MetricAggregationType: String
}

type AwsApplicationautoscalingSvStepAdjustments {
  MetricIntervalLowerBound: JSON
  MetricIntervalUpperBound: JSON
  ScalingAdjustment: Int!
}

input AwsApplicationautoscalingSvStepAdjustmentsInput {
  MetricIntervalLowerBound: JSON
  MetricIntervalUpperBound: JSON
  ScalingAdjustment: Int!
}

# Amazon AppStream (2016-12-01)
type AwsAppstream {
  # appstream.AssociateFleet
  AssociateFleet(input: AwsAppstreamAssociateFleetInput!): JSON

  # appstream.CreateDirectoryConfig
  CreateDirectoryConfig(input: AwsAppstreamCreateDirectoryConfigInput!): AwsAppstreamCreateDirectoryConfigOutput

  # appstream.CreateFleet
  CreateFleet(input: AwsAppstreamCreateFleetInput!): AwsAppstreamCreateFleetOutput

  # appstream.CreateImageBuilder
  CreateImageBuilder(input: AwsAppstreamCreateImageBuilderInput!): AwsAppstreamCreateImageBuilderOutput

  # appstream.CreateImageBuilderStreamingURL
  CreateImageBuilderStreamingURL(input: AwsAppstreamCreateImageBuilderStreamingURLInput!): AwsAppstreamCreateImageBuilderStreamingURLOutput

  # appstream.CreateStack
  CreateStack(input: AwsAppstreamCreateStackInput!): AwsAppstreamCreateStackOutput

  # appstream.CreateStreamingURL
  CreateStreamingURL(input: AwsAppstreamCreateStreamingURLInput!): AwsAppstreamCreateStreamingURLOutput

  # appstream.DeleteDirectoryConfig
  DeleteDirectoryConfig(input: AwsAppstreamDeleteDirectoryConfigInput!): JSON

  # appstream.DeleteFleet
  DeleteFleet(input: AwsAppstreamDeleteFleetInput!): JSON

  # appstream.DeleteImage
  DeleteImage(input: AwsAppstreamDeleteImageInput!): AwsAppstreamDeleteImageOutput

  # appstream.DeleteImageBuilder
  DeleteImageBuilder(input: AwsAppstreamDeleteImageBuilderInput!): AwsAppstreamDeleteImageBuilderOutput

  # appstream.DeleteStack
  DeleteStack(input: AwsAppstreamDeleteStackInput!): JSON

  # appstream.DescribeDirectoryConfigs
  DescribeDirectoryConfigs(input: AwsAppstreamDescribeDirectoryConfigsInput): AwsAppstreamDescribeDirectoryConfigsOutput

  # appstream.DescribeFleets
  DescribeFleets(input: AwsAppstreamDescribeFleetsInput): AwsAppstreamDescribeFleetsOutput

  # appstream.DescribeImageBuilders
  DescribeImageBuilders(input: AwsAppstreamDescribeImageBuildersInput): AwsAppstreamDescribeImageBuildersOutput

  # appstream.DescribeImages
  DescribeImages(input: AwsAppstreamDescribeImagesInput): AwsAppstreamDescribeImagesOutput

  # appstream.DescribeSessions
  DescribeSessions(input: AwsAppstreamDescribeSessionsInput!): AwsAppstreamDescribeSessionsOutput

  # appstream.DescribeStacks
  DescribeStacks(input: AwsAppstreamDescribeStacksInput): AwsAppstreamDescribeStacksOutput

  # appstream.DisassociateFleet
  DisassociateFleet(input: AwsAppstreamDisassociateFleetInput!): JSON

  # appstream.ExpireSession
  ExpireSession(input: AwsAppstreamExpireSessionInput!): JSON

  # appstream.ListAssociatedFleets
  ListAssociatedFleets(input: AwsAppstreamListAssociatedFleetsInput!): AwsAppstreamListAssociatedFleetsOutput

  # appstream.ListAssociatedStacks
  ListAssociatedStacks(input: AwsAppstreamListAssociatedStacksInput!): AwsAppstreamListAssociatedStacksOutput

  # appstream.StartFleet
  StartFleet(input: AwsAppstreamStartFleetInput!): JSON

  # appstream.StartImageBuilder
  StartImageBuilder(input: AwsAppstreamStartImageBuilderInput!): AwsAppstreamStartImageBuilderOutput

  # appstream.StopFleet
  StopFleet(input: AwsAppstreamStopFleetInput!): JSON

  # appstream.StopImageBuilder
  StopImageBuilder(input: AwsAppstreamStopImageBuilderInput!): AwsAppstreamStopImageBuilderOutput

  # appstream.UpdateDirectoryConfig
  UpdateDirectoryConfig(input: AwsAppstreamUpdateDirectoryConfigInput!): AwsAppstreamUpdateDirectoryConfigOutput

  # appstream.UpdateFleet
  UpdateFleet(input: AwsAppstreamUpdateFleetInput!): AwsAppstreamUpdateFleetOutput

  # appstream.UpdateStack
  UpdateStack(input: AwsAppstreamUpdateStackInput!): AwsAppstreamUpdateStackOutput
}

input AwsAppstreamAssociateFleetInput {
  FleetName: String!
  StackName: String!
}

input AwsAppstreamCreateDirectoryConfigInput {
  DirectoryName: String!
  OrganizationalUnitDistinguishedNames: [String]!
  ServiceAccountCredentials: AwsAppstreamS8Input!
}

type AwsAppstreamCreateDirectoryConfigOutput {
  DirectoryConfig: AwsAppstreamSc
}

input AwsAppstreamCreateFleetInput {
  Name: String!
  ImageName: String!
  InstanceType: String!
  FleetType: String
  ComputeCapacity: AwsAppstreamShInput!
  VpcConfig: AwsAppstreamSjInput
  MaxUserDurationInSeconds: Int
  DisconnectTimeoutInSeconds: Int
  Description: String
  DisplayName: String
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppstreamSpInput
}

type AwsAppstreamCreateFleetOutput {
  Fleet: AwsAppstreamSr
}

input AwsAppstreamCreateImageBuilderInput {
  Name: String!
  ImageName: String!
  InstanceType: String!
  Description: String
  DisplayName: String
  VpcConfig: AwsAppstreamSjInput
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppstreamSpInput
}

type AwsAppstreamCreateImageBuilderOutput {
  ImageBuilder: AwsAppstreamS10
}

input AwsAppstreamCreateImageBuilderStreamingURLInput {
  Name: String!
  Validity: JSON
}

type AwsAppstreamCreateImageBuilderStreamingURLOutput {
  StreamingURL: String
  Expires: Date
}

input AwsAppstreamCreateStackInput {
  Name: String!
  Description: String
  DisplayName: String
  StorageConnectors: [AwsAppstreamS1bInput]
}

type AwsAppstreamCreateStackOutput {
  Stack: AwsAppstreamS1g
}

input AwsAppstreamCreateStreamingURLInput {
  StackName: String!
  FleetName: String!
  UserId: String!
  ApplicationId: String
  Validity: JSON
  SessionContext: String
}

type AwsAppstreamCreateStreamingURLOutput {
  StreamingURL: String
  Expires: Date
}

input AwsAppstreamDeleteDirectoryConfigInput {
  DirectoryName: String!
}

input AwsAppstreamDeleteFleetInput {
  Name: String!
}

input AwsAppstreamDeleteImageBuilderInput {
  Name: String!
}

type AwsAppstreamDeleteImageBuilderOutput {
  ImageBuilder: AwsAppstreamS10
}

input AwsAppstreamDeleteImageInput {
  Name: String!
}

type AwsAppstreamDeleteImageOutput {
  Image: AwsAppstreamS1t
}

input AwsAppstreamDeleteStackInput {
  Name: String!
}

input AwsAppstreamDescribeDirectoryConfigsInput {
  DirectoryNames: [String]
  MaxResults: Int
  NextToken: String
}

type AwsAppstreamDescribeDirectoryConfigsOutput {
  DirectoryConfigs: [AwsAppstreamSc]
  NextToken: String
}

input AwsAppstreamDescribeFleetsInput {
  Names: [String]
  NextToken: String
}

type AwsAppstreamDescribeFleetsOutput {
  Fleets: [AwsAppstreamSr]
  NextToken: String
}

input AwsAppstreamDescribeImageBuildersInput {
  Names: [String]
  MaxResults: Int
  NextToken: String
}

type AwsAppstreamDescribeImageBuildersOutput {
  ImageBuilders: [AwsAppstreamS10]
  NextToken: String
}

input AwsAppstreamDescribeImagesInput {
  Names: [String]
}

type AwsAppstreamDescribeImagesOutput {
  Images: [AwsAppstreamS1t]
}

input AwsAppstreamDescribeSessionsInput {
  StackName: String!
  FleetName: String!
  UserId: String
  NextToken: String
  Limit: Int
  AuthenticationType: String
}

type AwsAppstreamDescribeSessionsOutput {
  Sessions: [AwsAppstreamDescribeSessionsOutputSessions]
  NextToken: String
}

type AwsAppstreamDescribeSessionsOutputSessions {
  Id: String!
  UserId: String!
  StackName: String!
  FleetName: String!
  State: String!
  AuthenticationType: String
}

input AwsAppstreamDescribeStacksInput {
  Names: [String]
  NextToken: String
}

type AwsAppstreamDescribeStacksOutput {
  Stacks: [AwsAppstreamS1g]
  NextToken: String
}

input AwsAppstreamDisassociateFleetInput {
  FleetName: String!
  StackName: String!
}

input AwsAppstreamExpireSessionInput {
  SessionId: String!
}

input AwsAppstreamListAssociatedFleetsInput {
  StackName: String!
  NextToken: String
}

type AwsAppstreamListAssociatedFleetsOutput {
  Names: [String]
  NextToken: String
}

input AwsAppstreamListAssociatedStacksInput {
  FleetName: String!
  NextToken: String
}

type AwsAppstreamListAssociatedStacksOutput {
  Names: [String]
  NextToken: String
}

type AwsAppstreamS10 {
  Name: String!
  Arn: String
  ImageArn: String
  Description: String
  DisplayName: String
  VpcConfig: AwsAppstreamSj
  InstanceType: String
  Platform: String
  State: String
  StateChangeReason: AwsAppstreamS10StateChangeReason
  CreatedTime: Date
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppstreamSp
  ImageBuilderErrors: [AwsAppstreamS10ImageBuilderErrors]
}

type AwsAppstreamS10ImageBuilderErrors {
  ErrorCode: String
  ErrorMessage: String
  ErrorTimestamp: Date
}

type AwsAppstreamS10StateChangeReason {
  Code: String
  Message: String
}

type AwsAppstreamS1b {
  ConnectorType: String!
  ResourceIdentifier: String
}

input AwsAppstreamS1bInput {
  ConnectorType: String!
  ResourceIdentifier: String
}

type AwsAppstreamS1g {
  Arn: String
  Name: String!
  Description: String
  DisplayName: String
  CreatedTime: Date
  StorageConnectors: [AwsAppstreamS1b]
  StackErrors: [AwsAppstreamS1gStackErrors]
}

type AwsAppstreamS1gStackErrors {
  ErrorCode: String
  ErrorMessage: String
}

type AwsAppstreamS1t {
  Name: String!
  Arn: String
  BaseImageArn: String
  DisplayName: String
  State: String
  Visibility: String
  ImageBuilderSupported: Boolean
  Platform: String
  Description: String
  StateChangeReason: AwsAppstreamS1tStateChangeReason
  Applications: [AwsAppstreamS1tApplications]
  CreatedTime: Date
  PublicBaseImageReleasedDate: Date
}

type AwsAppstreamS1tApplications {
  Name: String
  DisplayName: String
  IconURL: String
  LaunchPath: String
  LaunchParameters: String
  Enabled: Boolean
  Metadata: JSON
}

type AwsAppstreamS1tStateChangeReason {
  Code: String
  Message: String
}

type AwsAppstreamS8 {
  AccountName: String!
  AccountPassword: String!
}

input AwsAppstreamS8Input {
  AccountName: String!
  AccountPassword: String!
}

type AwsAppstreamSc {
  DirectoryName: String!
  OrganizationalUnitDistinguishedNames: [String]
  ServiceAccountCredentials: AwsAppstreamS8
  CreatedTime: Date
}

input AwsAppstreamShInput {
  DesiredInstances: Int!
}

type AwsAppstreamSj {
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

input AwsAppstreamSjInput {
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

type AwsAppstreamSp {
  DirectoryName: String
  OrganizationalUnitDistinguishedName: String
}

input AwsAppstreamSpInput {
  DirectoryName: String
  OrganizationalUnitDistinguishedName: String
}

type AwsAppstreamSr {
  Arn: String!
  Name: String!
  DisplayName: String
  Description: String
  ImageName: String!
  InstanceType: String!
  FleetType: String
  ComputeCapacityStatus: AwsAppstreamSrComputeCapacityStatus!
  MaxUserDurationInSeconds: Int
  DisconnectTimeoutInSeconds: Int
  State: String!
  VpcConfig: AwsAppstreamSj
  CreatedTime: Date
  FleetErrors: [AwsAppstreamSrFleetErrors]
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppstreamSp
}

type AwsAppstreamSrComputeCapacityStatus {
  Desired: Int!
  Running: Int
  InUse: Int
  Available: Int
}

type AwsAppstreamSrFleetErrors {
  ErrorCode: String
  ErrorMessage: String
}

input AwsAppstreamStartFleetInput {
  Name: String!
}

input AwsAppstreamStartImageBuilderInput {
  Name: String!
}

type AwsAppstreamStartImageBuilderOutput {
  ImageBuilder: AwsAppstreamS10
}

input AwsAppstreamStopFleetInput {
  Name: String!
}

input AwsAppstreamStopImageBuilderInput {
  Name: String!
}

type AwsAppstreamStopImageBuilderOutput {
  ImageBuilder: AwsAppstreamS10
}

input AwsAppstreamUpdateDirectoryConfigInput {
  DirectoryName: String!
  OrganizationalUnitDistinguishedNames: [String]
  ServiceAccountCredentials: AwsAppstreamS8Input
}

type AwsAppstreamUpdateDirectoryConfigOutput {
  DirectoryConfig: AwsAppstreamSc
}

input AwsAppstreamUpdateFleetInput {
  ImageName: String
  Name: String!
  InstanceType: String
  ComputeCapacity: AwsAppstreamShInput
  VpcConfig: AwsAppstreamSjInput
  MaxUserDurationInSeconds: Int
  DisconnectTimeoutInSeconds: Int
  DeleteVpcConfig: Boolean
  Description: String
  DisplayName: String
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppstreamSpInput
  AttributesToDelete: [String]
}

type AwsAppstreamUpdateFleetOutput {
  Fleet: AwsAppstreamSr
}

input AwsAppstreamUpdateStackInput {
  DisplayName: String
  Description: String
  Name: String!
  StorageConnectors: [AwsAppstreamS1bInput]
  DeleteStorageConnectors: Boolean
}

type AwsAppstreamUpdateStackOutput {
  Stack: AwsAppstreamS1g
}

# AWS AppSync (2017-07-25)
type AwsAppsync {
  # appsync.CreateApiKey
  CreateApiKey(input: AwsAppsyncCreateApiKeyInput!): AwsAppsyncCreateApiKeyOutput

  # appsync.CreateDataSource
  CreateDataSource(input: AwsAppsyncCreateDataSourceInput!): AwsAppsyncCreateDataSourceOutput

  # appsync.CreateGraphqlApi
  CreateGraphqlApi(input: AwsAppsyncCreateGraphqlApiInput!): AwsAppsyncCreateGraphqlApiOutput

  # appsync.CreateResolver
  CreateResolver(input: AwsAppsyncCreateResolverInput!): AwsAppsyncCreateResolverOutput

  # appsync.CreateType
  CreateType(input: AwsAppsyncCreateTypeInput!): AwsAppsyncCreateTypeOutput

  # appsync.DeleteApiKey
  DeleteApiKey(input: AwsAppsyncDeleteApiKeyInput!): JSON

  # appsync.DeleteDataSource
  DeleteDataSource(input: AwsAppsyncDeleteDataSourceInput!): JSON

  # appsync.DeleteGraphqlApi
  DeleteGraphqlApi(input: AwsAppsyncDeleteGraphqlApiInput!): JSON

  # appsync.DeleteResolver
  DeleteResolver(input: AwsAppsyncDeleteResolverInput!): JSON

  # appsync.DeleteType
  DeleteType(input: AwsAppsyncDeleteTypeInput!): JSON

  # appsync.GetDataSource
  GetDataSource(input: AwsAppsyncGetDataSourceInput!): AwsAppsyncGetDataSourceOutput

  # appsync.GetGraphqlApi
  GetGraphqlApi(input: AwsAppsyncGetGraphqlApiInput!): AwsAppsyncGetGraphqlApiOutput

  # appsync.GetIntrospectionSchema
  GetIntrospectionSchema(input: AwsAppsyncGetIntrospectionSchemaInput!): AwsAppsyncGetIntrospectionSchemaOutput

  # appsync.GetResolver
  GetResolver(input: AwsAppsyncGetResolverInput!): AwsAppsyncGetResolverOutput

  # appsync.GetSchemaCreationStatus
  GetSchemaCreationStatus(input: AwsAppsyncGetSchemaCreationStatusInput!): AwsAppsyncGetSchemaCreationStatusOutput

  # appsync.GetType
  GetType(input: AwsAppsyncGetTypeInput!): AwsAppsyncGetTypeOutput

  # appsync.ListApiKeys
  ListApiKeys(input: AwsAppsyncListApiKeysInput!): AwsAppsyncListApiKeysOutput

  # appsync.ListDataSources
  ListDataSources(input: AwsAppsyncListDataSourcesInput!): AwsAppsyncListDataSourcesOutput

  # appsync.ListGraphqlApis
  ListGraphqlApis(input: AwsAppsyncListGraphqlApisInput): AwsAppsyncListGraphqlApisOutput

  # appsync.ListResolvers
  ListResolvers(input: AwsAppsyncListResolversInput!): AwsAppsyncListResolversOutput

  # appsync.ListTypes
  ListTypes(input: AwsAppsyncListTypesInput!): AwsAppsyncListTypesOutput

  # appsync.StartSchemaCreation
  StartSchemaCreation(input: AwsAppsyncStartSchemaCreationInput!): AwsAppsyncStartSchemaCreationOutput

  # appsync.UpdateDataSource
  UpdateDataSource(input: AwsAppsyncUpdateDataSourceInput!): AwsAppsyncUpdateDataSourceOutput

  # appsync.UpdateGraphqlApi
  UpdateGraphqlApi(input: AwsAppsyncUpdateGraphqlApiInput!): AwsAppsyncUpdateGraphqlApiOutput

  # appsync.UpdateResolver
  UpdateResolver(input: AwsAppsyncUpdateResolverInput!): AwsAppsyncUpdateResolverOutput

  # appsync.UpdateType
  UpdateType(input: AwsAppsyncUpdateTypeInput!): AwsAppsyncUpdateTypeOutput
}

input AwsAppsyncCreateApiKeyInput {
  apiId: String!
  description: String
}

type AwsAppsyncCreateApiKeyOutput {
  apiKey: AwsAppsyncS4
}

input AwsAppsyncCreateDataSourceInput {
  apiId: String!
  name: String!
  description: String
  type: String!
  serviceRoleArn: String
  dynamodbConfig: AwsAppsyncS9Input
  lambdaConfig: AwsAppsyncSbInput
  elasticsearchConfig: AwsAppsyncScInput
}

type AwsAppsyncCreateDataSourceOutput {
  dataSource: AwsAppsyncSe
}

input AwsAppsyncCreateGraphqlApiInput {
  name: String!
  authenticationType: String!
  userPoolConfig: AwsAppsyncShInput
}

type AwsAppsyncCreateGraphqlApiOutput {
  graphqlApi: AwsAppsyncSk
}

input AwsAppsyncCreateResolverInput {
  apiId: String!
  typeName: String!
  fieldName: String!
  dataSourceName: String!
  requestMappingTemplate: String!
  responseMappingTemplate: String
}

type AwsAppsyncCreateResolverOutput {
  resolver: AwsAppsyncSp
}

input AwsAppsyncCreateTypeInput {
  apiId: String!
  definition: String!
  format: String!
}

type AwsAppsyncCreateTypeOutput {
  type: AwsAppsyncSt
}

input AwsAppsyncDeleteApiKeyInput {
  apiId: String!
  id: String!
}

input AwsAppsyncDeleteDataSourceInput {
  apiId: String!
  name: String!
}

input AwsAppsyncDeleteGraphqlApiInput {
  apiId: String!
}

input AwsAppsyncDeleteResolverInput {
  apiId: String!
  typeName: String!
  fieldName: String!
}

input AwsAppsyncDeleteTypeInput {
  apiId: String!
  typeName: String!
}

input AwsAppsyncGetDataSourceInput {
  apiId: String!
  name: String!
}

type AwsAppsyncGetDataSourceOutput {
  dataSource: AwsAppsyncSe
}

input AwsAppsyncGetGraphqlApiInput {
  apiId: String!
}

type AwsAppsyncGetGraphqlApiOutput {
  graphqlApi: AwsAppsyncSk
}

input AwsAppsyncGetIntrospectionSchemaInput {
  apiId: String!
  format: String!
}

type AwsAppsyncGetIntrospectionSchemaOutput {
  schema: JSON
}

input AwsAppsyncGetResolverInput {
  apiId: String!
  typeName: String!
  fieldName: String!
}

type AwsAppsyncGetResolverOutput {
  resolver: AwsAppsyncSp
}

input AwsAppsyncGetSchemaCreationStatusInput {
  apiId: String!
}

type AwsAppsyncGetSchemaCreationStatusOutput {
  status: String
  details: String
}

input AwsAppsyncGetTypeInput {
  apiId: String!
  typeName: String!
  format: String!
}

type AwsAppsyncGetTypeOutput {
  type: AwsAppsyncSt
}

input AwsAppsyncListApiKeysInput {
  apiId: String!
  nextToken: String
  maxResults: Int
}

type AwsAppsyncListApiKeysOutput {
  apiKeys: [AwsAppsyncS4]
  nextToken: String
}

input AwsAppsyncListDataSourcesInput {
  apiId: String!
  nextToken: String
  maxResults: Int
}

type AwsAppsyncListDataSourcesOutput {
  dataSources: [AwsAppsyncSe]
  nextToken: String
}

input AwsAppsyncListGraphqlApisInput {
  nextToken: String
  maxResults: Int
}

type AwsAppsyncListGraphqlApisOutput {
  graphqlApis: [AwsAppsyncSk]
  nextToken: String
}

input AwsAppsyncListResolversInput {
  apiId: String!
  typeName: String!
  nextToken: String
  maxResults: Int
}

type AwsAppsyncListResolversOutput {
  resolvers: [AwsAppsyncSp]
  nextToken: String
}

input AwsAppsyncListTypesInput {
  apiId: String!
  format: String!
  nextToken: String
  maxResults: Int
}

type AwsAppsyncListTypesOutput {
  types: [AwsAppsyncSt]
  nextToken: String
}

type AwsAppsyncS4 {
  id: String
  description: String
  expires: JSON
}

type AwsAppsyncS9 {
  tableName: String!
  awsRegion: String!
  useCallerCredentials: Boolean
}

input AwsAppsyncS9Input {
  tableName: String!
  awsRegion: String!
  useCallerCredentials: Boolean
}

type AwsAppsyncSb {
  lambdaFunctionArn: String!
}

input AwsAppsyncSbInput {
  lambdaFunctionArn: String!
}

type AwsAppsyncSc {
  endpoint: String!
  awsRegion: String!
}

input AwsAppsyncScInput {
  endpoint: String!
  awsRegion: String!
}

type AwsAppsyncSe {
  dataSourceArn: String
  name: String
  description: String
  type: String
  serviceRoleArn: String
  dynamodbConfig: AwsAppsyncS9
  lambdaConfig: AwsAppsyncSb
  elasticsearchConfig: AwsAppsyncSc
}

type AwsAppsyncSh {
  userPoolId: String!
  awsRegion: String!
  defaultAction: String!
  appIdClientRegex: String
}

input AwsAppsyncShInput {
  userPoolId: String!
  awsRegion: String!
  defaultAction: String!
  appIdClientRegex: String
}

type AwsAppsyncSk {
  name: String
  apiId: String
  authenticationType: String
  userPoolConfig: AwsAppsyncSh
  arn: String
  uris: JSON
}

type AwsAppsyncSp {
  typeName: String
  fieldName: String
  dataSourceName: String
  resolverArn: String
  requestMappingTemplate: String
  responseMappingTemplate: String
}

type AwsAppsyncSt {
  name: String
  description: String
  arn: String
  definition: String
  format: String
}

input AwsAppsyncStartSchemaCreationInput {
  apiId: String!
  definition: JSON!
}

type AwsAppsyncStartSchemaCreationOutput {
  status: String
}

input AwsAppsyncUpdateDataSourceInput {
  apiId: String!
  name: String!
  description: String
  type: String!
  serviceRoleArn: String
  dynamodbConfig: AwsAppsyncS9Input
  lambdaConfig: AwsAppsyncSbInput
  elasticsearchConfig: AwsAppsyncScInput
}

type AwsAppsyncUpdateDataSourceOutput {
  dataSource: AwsAppsyncSe
}

input AwsAppsyncUpdateGraphqlApiInput {
  apiId: String!
  name: String!
  authenticationType: String
  userPoolConfig: AwsAppsyncShInput
}

type AwsAppsyncUpdateGraphqlApiOutput {
  graphqlApi: AwsAppsyncSk
}

input AwsAppsyncUpdateResolverInput {
  apiId: String!
  typeName: String!
  fieldName: String!
  dataSourceName: String!
  requestMappingTemplate: String!
  responseMappingTemplate: String
}

type AwsAppsyncUpdateResolverOutput {
  resolver: AwsAppsyncSp
}

input AwsAppsyncUpdateTypeInput {
  apiId: String!
  typeName: String!
  definition: String
  format: String!
}

type AwsAppsyncUpdateTypeOutput {
  type: AwsAppsyncSt
}

# Amazon Athena (2017-05-18)
type AwsAthena {
  # athena.BatchGetNamedQuery
  BatchGetNamedQuery(input: AwsAthenaBatchGetNamedQueryInput!): AwsAthenaBatchGetNamedQueryOutput

  # athena.BatchGetQueryExecution
  BatchGetQueryExecution(input: AwsAthenaBatchGetQueryExecutionInput!): AwsAthenaBatchGetQueryExecutionOutput

  # athena.CreateNamedQuery
  CreateNamedQuery(input: AwsAthenaCreateNamedQueryInput!): AwsAthenaCreateNamedQueryOutput

  # athena.DeleteNamedQuery
  DeleteNamedQuery(input: AwsAthenaDeleteNamedQueryInput!): JSON

  # athena.GetNamedQuery
  GetNamedQuery(input: AwsAthenaGetNamedQueryInput!): AwsAthenaGetNamedQueryOutput

  # athena.GetQueryExecution
  GetQueryExecution(input: AwsAthenaGetQueryExecutionInput!): AwsAthenaGetQueryExecutionOutput

  # athena.GetQueryResults
  GetQueryResults(input: AwsAthenaGetQueryResultsInput!): AwsAthenaGetQueryResultsOutput

  # athena.ListNamedQueries
  ListNamedQueries(input: AwsAthenaListNamedQueriesInput): AwsAthenaListNamedQueriesOutput

  # athena.ListQueryExecutions
  ListQueryExecutions(input: AwsAthenaListQueryExecutionsInput): AwsAthenaListQueryExecutionsOutput

  # athena.StartQueryExecution
  StartQueryExecution(input: AwsAthenaStartQueryExecutionInput!): AwsAthenaStartQueryExecutionOutput

  # athena.StopQueryExecution
  StopQueryExecution(input: AwsAthenaStopQueryExecutionInput!): JSON
}

input AwsAthenaBatchGetNamedQueryInput {
  NamedQueryIds: [String]!
}

type AwsAthenaBatchGetNamedQueryOutput {
  NamedQueries: [AwsAthenaS6]
  UnprocessedNamedQueryIds: [AwsAthenaBatchGetNamedQueryOutputUnprocessedNamedQueryIds]
}

type AwsAthenaBatchGetNamedQueryOutputUnprocessedNamedQueryIds {
  NamedQueryId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsAthenaBatchGetQueryExecutionInput {
  QueryExecutionIds: [String]!
}

type AwsAthenaBatchGetQueryExecutionOutput {
  QueryExecutions: [AwsAthenaSk]
  UnprocessedQueryExecutionIds: [AwsAthenaBatchGetQueryExecutionOutputUnprocessedQueryExecutionIds]
}

type AwsAthenaBatchGetQueryExecutionOutputUnprocessedQueryExecutionIds {
  QueryExecutionId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsAthenaCreateNamedQueryInput {
  Name: String!
  Description: String
  Database: String!
  QueryString: String!
  ClientRequestToken: String
}

type AwsAthenaCreateNamedQueryOutput {
  NamedQueryId: String
}

input AwsAthenaDeleteNamedQueryInput {
  NamedQueryId: String!
}

input AwsAthenaGetNamedQueryInput {
  NamedQueryId: String!
}

type AwsAthenaGetNamedQueryOutput {
  NamedQuery: AwsAthenaS6
}

input AwsAthenaGetQueryExecutionInput {
  QueryExecutionId: String!
}

type AwsAthenaGetQueryExecutionOutput {
  QueryExecution: AwsAthenaSk
}

input AwsAthenaGetQueryResultsInput {
  QueryExecutionId: String!
  NextToken: String
  MaxResults: Int
}

type AwsAthenaGetQueryResultsOutput {
  ResultSet: AwsAthenaGetQueryResultsOutputResultSet
  NextToken: String
}

type AwsAthenaGetQueryResultsOutputResultSet {
  Rows: [AwsAthenaGetQueryResultsOutputResultSetRows]
  ResultSetMetadata: AwsAthenaGetQueryResultsOutputResultSetResultSetMetadata
}

type AwsAthenaGetQueryResultsOutputResultSetResultSetMetadata {
  ColumnInfo: [AwsAthenaGetQueryResultsOutputResultSetResultSetMetadataColumnInfo]
}

type AwsAthenaGetQueryResultsOutputResultSetResultSetMetadataColumnInfo {
  CatalogName: String
  SchemaName: String
  TableName: String
  Name: String!
  Label: String
  Type: String!
  Precision: Int
  Scale: Int
  Nullable: String
  CaseSensitive: Boolean
}

type AwsAthenaGetQueryResultsOutputResultSetRows {
  Data: [AwsAthenaGetQueryResultsOutputResultSetRowsData]
}

type AwsAthenaGetQueryResultsOutputResultSetRowsData {
  VarCharValue: String
}

input AwsAthenaListNamedQueriesInput {
  NextToken: String
  MaxResults: Int
}

type AwsAthenaListNamedQueriesOutput {
  NamedQueryIds: [String]
  NextToken: String
}

input AwsAthenaListQueryExecutionsInput {
  NextToken: String
  MaxResults: Int
}

type AwsAthenaListQueryExecutionsOutput {
  QueryExecutionIds: [String]
  NextToken: String
}

type AwsAthenaS6 {
  Name: String!
  Description: String
  Database: String!
  QueryString: String!
  NamedQueryId: String
}

type AwsAthenaSk {
  QueryExecutionId: String
  Query: String
  ResultConfiguration: AwsAthenaSl
  QueryExecutionContext: AwsAthenaSp
  Status: AwsAthenaSkStatus
  Statistics: AwsAthenaSkStatistics
}

type AwsAthenaSkStatistics {
  EngineExecutionTimeInMillis: JSON
  DataScannedInBytes: JSON
}

type AwsAthenaSkStatus {
  State: String
  StateChangeReason: String
  SubmissionDateTime: Date
  CompletionDateTime: Date
}

type AwsAthenaSl {
  OutputLocation: String!
  EncryptionConfiguration: AwsAthenaSlEncryptionConfiguration
}

type AwsAthenaSlEncryptionConfiguration {
  EncryptionOption: String!
  KmsKey: String
}

input AwsAthenaSlEncryptionConfigurationInput {
  EncryptionOption: String!
  KmsKey: String
}

input AwsAthenaSlInput {
  OutputLocation: String!
  EncryptionConfiguration: AwsAthenaSlEncryptionConfigurationInput
}

type AwsAthenaSp {
  Database: String
}

input AwsAthenaSpInput {
  Database: String
}

input AwsAthenaStartQueryExecutionInput {
  QueryString: String!
  ClientRequestToken: String
  QueryExecutionContext: AwsAthenaSpInput
  ResultConfiguration: AwsAthenaSlInput!
}

type AwsAthenaStartQueryExecutionOutput {
  QueryExecutionId: String
}

input AwsAthenaStopQueryExecutionInput {
  QueryExecutionId: String!
}

# Auto Scaling (2011-01-01)
type AwsAutoscaling {
  # autoscaling.AttachInstances
  AttachInstances(input: AwsAutoscalingAttachInstancesInput!): JSON

  # autoscaling.AttachLoadBalancerTargetGroups
  AttachLoadBalancerTargetGroups(input: AwsAutoscalingAttachLoadBalancerTargetGroupsInput!): JSON

  # autoscaling.AttachLoadBalancers
  AttachLoadBalancers(input: AwsAutoscalingAttachLoadBalancersInput!): JSON

  # autoscaling.CompleteLifecycleAction
  CompleteLifecycleAction(input: AwsAutoscalingCompleteLifecycleActionInput!): JSON

  # autoscaling.CreateAutoScalingGroup
  CreateAutoScalingGroup(input: AwsAutoscalingCreateAutoScalingGroupInput!): JSON

  # autoscaling.CreateLaunchConfiguration
  CreateLaunchConfiguration(input: AwsAutoscalingCreateLaunchConfigurationInput!): JSON

  # autoscaling.CreateOrUpdateTags
  CreateOrUpdateTags(input: AwsAutoscalingCreateOrUpdateTagsInput!): JSON

  # autoscaling.DeleteAutoScalingGroup
  DeleteAutoScalingGroup(input: AwsAutoscalingDeleteAutoScalingGroupInput!): JSON

  # autoscaling.DeleteLaunchConfiguration
  DeleteLaunchConfiguration(input: AwsAutoscalingDeleteLaunchConfigurationInput!): JSON

  # autoscaling.DeleteLifecycleHook
  DeleteLifecycleHook(input: AwsAutoscalingDeleteLifecycleHookInput!): JSON

  # autoscaling.DeleteNotificationConfiguration
  DeleteNotificationConfiguration(input: AwsAutoscalingDeleteNotificationConfigurationInput!): JSON

  # autoscaling.DeletePolicy
  DeletePolicy(input: AwsAutoscalingDeletePolicyInput!): JSON

  # autoscaling.DeleteScheduledAction
  DeleteScheduledAction(input: AwsAutoscalingDeleteScheduledActionInput!): JSON

  # autoscaling.DeleteTags
  DeleteTags(input: AwsAutoscalingDeleteTagsInput!): JSON

  # autoscaling.DescribeAccountLimits
  DescribeAccountLimits: AwsAutoscalingDescribeAccountLimitsOutput

  # autoscaling.DescribeAdjustmentTypes
  DescribeAdjustmentTypes: AwsAutoscalingDescribeAdjustmentTypesOutput

  # autoscaling.DescribeAutoScalingGroups
  DescribeAutoScalingGroups(input: AwsAutoscalingDescribeAutoScalingGroupsInput): AwsAutoscalingDescribeAutoScalingGroupsOutput

  # autoscaling.DescribeAutoScalingInstances
  DescribeAutoScalingInstances(input: AwsAutoscalingDescribeAutoScalingInstancesInput): AwsAutoscalingDescribeAutoScalingInstancesOutput

  # autoscaling.DescribeAutoScalingNotificationTypes
  DescribeAutoScalingNotificationTypes: AwsAutoscalingDescribeAutoScalingNotificationTypesOutput

  # autoscaling.DescribeLaunchConfigurations
  DescribeLaunchConfigurations(input: AwsAutoscalingDescribeLaunchConfigurationsInput): AwsAutoscalingDescribeLaunchConfigurationsOutput

  # autoscaling.DescribeLifecycleHookTypes
  DescribeLifecycleHookTypes: AwsAutoscalingDescribeLifecycleHookTypesOutput

  # autoscaling.DescribeLifecycleHooks
  DescribeLifecycleHooks(input: AwsAutoscalingDescribeLifecycleHooksInput!): AwsAutoscalingDescribeLifecycleHooksOutput

  # autoscaling.DescribeLoadBalancerTargetGroups
  DescribeLoadBalancerTargetGroups(input: AwsAutoscalingDescribeLoadBalancerTargetGroupsInput!): AwsAutoscalingDescribeLoadBalancerTargetGroupsOutput

  # autoscaling.DescribeLoadBalancers
  DescribeLoadBalancers(input: AwsAutoscalingDescribeLoadBalancersInput!): AwsAutoscalingDescribeLoadBalancersOutput

  # autoscaling.DescribeMetricCollectionTypes
  DescribeMetricCollectionTypes: AwsAutoscalingDescribeMetricCollectionTypesOutput

  # autoscaling.DescribeNotificationConfigurations
  DescribeNotificationConfigurations(input: AwsAutoscalingDescribeNotificationConfigurationsInput): AwsAutoscalingDescribeNotificationConfigurationsOutput

  # autoscaling.DescribePolicies
  DescribePolicies(input: AwsAutoscalingDescribePoliciesInput): AwsAutoscalingDescribePoliciesOutput

  # autoscaling.DescribeScalingActivities
  DescribeScalingActivities(input: AwsAutoscalingDescribeScalingActivitiesInput): AwsAutoscalingDescribeScalingActivitiesOutput

  # autoscaling.DescribeScalingProcessTypes
  DescribeScalingProcessTypes: AwsAutoscalingDescribeScalingProcessTypesOutput

  # autoscaling.DescribeScheduledActions
  DescribeScheduledActions(input: AwsAutoscalingDescribeScheduledActionsInput): AwsAutoscalingDescribeScheduledActionsOutput

  # autoscaling.DescribeTags
  DescribeTags(input: AwsAutoscalingDescribeTagsInput): AwsAutoscalingDescribeTagsOutput

  # autoscaling.DescribeTerminationPolicyTypes
  DescribeTerminationPolicyTypes: AwsAutoscalingDescribeTerminationPolicyTypesOutput

  # autoscaling.DetachInstances
  DetachInstances(input: AwsAutoscalingDetachInstancesInput!): AwsAutoscalingDetachInstancesOutput

  # autoscaling.DetachLoadBalancerTargetGroups
  DetachLoadBalancerTargetGroups(input: AwsAutoscalingDetachLoadBalancerTargetGroupsInput!): JSON

  # autoscaling.DetachLoadBalancers
  DetachLoadBalancers(input: AwsAutoscalingDetachLoadBalancersInput!): JSON

  # autoscaling.DisableMetricsCollection
  DisableMetricsCollection(input: AwsAutoscalingDisableMetricsCollectionInput!): JSON

  # autoscaling.EnableMetricsCollection
  EnableMetricsCollection(input: AwsAutoscalingEnableMetricsCollectionInput!): JSON

  # autoscaling.EnterStandby
  EnterStandby(input: AwsAutoscalingEnterStandbyInput!): AwsAutoscalingEnterStandbyOutput

  # autoscaling.ExecutePolicy
  ExecutePolicy(input: AwsAutoscalingExecutePolicyInput!): JSON

  # autoscaling.ExitStandby
  ExitStandby(input: AwsAutoscalingExitStandbyInput!): AwsAutoscalingExitStandbyOutput

  # autoscaling.PutLifecycleHook
  PutLifecycleHook(input: AwsAutoscalingPutLifecycleHookInput!): JSON

  # autoscaling.PutNotificationConfiguration
  PutNotificationConfiguration(input: AwsAutoscalingPutNotificationConfigurationInput!): JSON

  # autoscaling.PutScalingPolicy
  PutScalingPolicy(input: AwsAutoscalingPutScalingPolicyInput!): AwsAutoscalingPutScalingPolicyOutput

  # autoscaling.PutScheduledUpdateGroupAction
  PutScheduledUpdateGroupAction(input: AwsAutoscalingPutScheduledUpdateGroupActionInput!): JSON

  # autoscaling.RecordLifecycleActionHeartbeat
  RecordLifecycleActionHeartbeat(input: AwsAutoscalingRecordLifecycleActionHeartbeatInput!): JSON

  # autoscaling.ResumeProcesses
  ResumeProcesses(input: JSON): JSON

  # autoscaling.SetDesiredCapacity
  SetDesiredCapacity(input: AwsAutoscalingSetDesiredCapacityInput!): JSON

  # autoscaling.SetInstanceHealth
  SetInstanceHealth(input: AwsAutoscalingSetInstanceHealthInput!): JSON

  # autoscaling.SetInstanceProtection
  SetInstanceProtection(input: AwsAutoscalingSetInstanceProtectionInput!): JSON

  # autoscaling.SuspendProcesses
  SuspendProcesses(input: JSON): JSON

  # autoscaling.TerminateInstanceInAutoScalingGroup
  TerminateInstanceInAutoScalingGroup(input: AwsAutoscalingTerminateInstanceInAutoScalingGroupInput!): AwsAutoscalingTerminateInstanceInAutoScalingGroupOutput

  # autoscaling.UpdateAutoScalingGroup
  UpdateAutoScalingGroup(input: AwsAutoscalingUpdateAutoScalingGroupInput!): JSON
}

input AwsAutoscalingAttachInstancesInput {
  InstanceIds: [String]
  AutoScalingGroupName: String!
}

input AwsAutoscalingAttachLoadBalancersInput {
  AutoScalingGroupName: String!
  LoadBalancerNames: [String]!
}

input AwsAutoscalingAttachLoadBalancerTargetGroupsInput {
  AutoScalingGroupName: String!
  TargetGroupARNs: [String]!
}

input AwsAutoscalingCompleteLifecycleActionInput {
  LifecycleHookName: String!
  AutoScalingGroupName: String!
  LifecycleActionToken: String
  LifecycleActionResult: String!
  InstanceId: String
}

input AwsAutoscalingCreateAutoScalingGroupInput {
  AutoScalingGroupName: String!
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoscalingSjInput
  InstanceId: String
  MinSize: Int!
  MaxSize: Int!
  DesiredCapacity: Int
  DefaultCooldown: Int
  AvailabilityZones: [String]
  LoadBalancerNames: [String]
  TargetGroupARNs: [String]
  HealthCheckType: String
  HealthCheckGracePeriod: Int
  PlacementGroup: String
  VPCZoneIdentifier: String
  TerminationPolicies: [String]
  NewInstancesProtectedFromScaleIn: Boolean
  LifecycleHookSpecificationList: [AwsAutoscalingCreateAutoScalingGroupLifecycleHookSpecificationListInput]
  Tags: [AwsAutoscalingS12Input]
}

input AwsAutoscalingCreateAutoScalingGroupLifecycleHookSpecificationListInput {
  LifecycleHookName: String!
  LifecycleTransition: String!
  NotificationMetadata: String
  HeartbeatTimeout: Int
  DefaultResult: String
  NotificationTargetARN: String
  RoleARN: String
}

input AwsAutoscalingCreateLaunchConfigurationInput {
  LaunchConfigurationName: String!
  ImageId: String
  KeyName: String
  SecurityGroups: [String]
  ClassicLinkVPCId: String
  ClassicLinkVPCSecurityGroups: [String]
  UserData: String
  InstanceId: String
  InstanceType: String
  KernelId: String
  RamdiskId: String
  BlockDeviceMappings: [AwsAutoscalingS1cInput]
  InstanceMonitoring: AwsAutoscalingS1lInput
  SpotPrice: String
  IamInstanceProfile: String
  EbsOptimized: Boolean
  AssociatePublicIpAddress: Boolean
  PlacementTenancy: String
}

input AwsAutoscalingCreateOrUpdateTagsInput {
  Tags: [AwsAutoscalingS12Input]!
}

input AwsAutoscalingDeleteAutoScalingGroupInput {
  AutoScalingGroupName: String!
  ForceDelete: Boolean
}

input AwsAutoscalingDeleteLaunchConfigurationInput {
  LaunchConfigurationName: String!
}

input AwsAutoscalingDeleteLifecycleHookInput {
  LifecycleHookName: String!
  AutoScalingGroupName: String!
}

input AwsAutoscalingDeleteNotificationConfigurationInput {
  AutoScalingGroupName: String!
  TopicARN: String!
}

input AwsAutoscalingDeletePolicyInput {
  AutoScalingGroupName: String
  PolicyName: String!
}

input AwsAutoscalingDeleteScheduledActionInput {
  AutoScalingGroupName: String!
  ScheduledActionName: String!
}

input AwsAutoscalingDeleteTagsInput {
  Tags: [AwsAutoscalingS12Input]!
}

type AwsAutoscalingDescribeAccountLimitsOutput {
  MaxNumberOfAutoScalingGroups: Int
  MaxNumberOfLaunchConfigurations: Int
  NumberOfAutoScalingGroups: Int
  NumberOfLaunchConfigurations: Int
}

type AwsAutoscalingDescribeAdjustmentTypesOutput {
  AdjustmentTypes: [AwsAutoscalingDescribeAdjustmentTypesOutputAdjustmentTypes]
}

type AwsAutoscalingDescribeAdjustmentTypesOutputAdjustmentTypes {
  AdjustmentType: String
}

input AwsAutoscalingDescribeAutoScalingGroupsInput {
  AutoScalingGroupNames: [String]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoscalingDescribeAutoScalingGroupsOutput {
  AutoScalingGroups: [AwsAutoscalingDescribeAutoScalingGroupsOutputAutoScalingGroups]!
  NextToken: String
}

type AwsAutoscalingDescribeAutoScalingGroupsOutputAutoScalingGroups {
  AutoScalingGroupName: String!
  AutoScalingGroupARN: String
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoscalingSj
  MinSize: Int!
  MaxSize: Int!
  DesiredCapacity: Int!
  DefaultCooldown: Int!
  AvailabilityZones: [String]!
  LoadBalancerNames: [String]
  TargetGroupARNs: [String]
  HealthCheckType: String!
  HealthCheckGracePeriod: Int
  Instances: [AwsAutoscalingDescribeAutoScalingGroupsOutputAutoScalingGroupsInstances]
  CreatedTime: Date!
  SuspendedProcesses: [AwsAutoscalingDescribeAutoScalingGroupsOutputAutoScalingGroupsSuspendedProcesses]
  PlacementGroup: String
  VPCZoneIdentifier: String
  EnabledMetrics: [AwsAutoscalingDescribeAutoScalingGroupsOutputAutoScalingGroupsEnabledMetrics]
  Status: String
  Tags: [AwsAutoscalingS2n]
  TerminationPolicies: [String]
  NewInstancesProtectedFromScaleIn: Boolean
}

type AwsAutoscalingDescribeAutoScalingGroupsOutputAutoScalingGroupsEnabledMetrics {
  Metric: String
  Granularity: String
}

type AwsAutoscalingDescribeAutoScalingGroupsOutputAutoScalingGroupsInstances {
  InstanceId: String!
  AvailabilityZone: String!
  LifecycleState: String!
  HealthStatus: String!
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoscalingSj
  ProtectedFromScaleIn: Boolean!
}

type AwsAutoscalingDescribeAutoScalingGroupsOutputAutoScalingGroupsSuspendedProcesses {
  ProcessName: String
  SuspensionReason: String
}

input AwsAutoscalingDescribeAutoScalingInstancesInput {
  InstanceIds: [String]
  MaxRecords: Int
  NextToken: String
}

type AwsAutoscalingDescribeAutoScalingInstancesOutput {
  AutoScalingInstances: [AwsAutoscalingDescribeAutoScalingInstancesOutputAutoScalingInstances]
  NextToken: String
}

type AwsAutoscalingDescribeAutoScalingInstancesOutputAutoScalingInstances {
  InstanceId: String!
  AutoScalingGroupName: String!
  AvailabilityZone: String!
  LifecycleState: String!
  HealthStatus: String!
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoscalingSj
  ProtectedFromScaleIn: Boolean!
}

type AwsAutoscalingDescribeAutoScalingNotificationTypesOutput {
  AutoScalingNotificationTypes: [String]
}

input AwsAutoscalingDescribeLaunchConfigurationsInput {
  LaunchConfigurationNames: [String]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoscalingDescribeLaunchConfigurationsOutput {
  LaunchConfigurations: [AwsAutoscalingDescribeLaunchConfigurationsOutputLaunchConfigurations]!
  NextToken: String
}

type AwsAutoscalingDescribeLaunchConfigurationsOutputLaunchConfigurations {
  LaunchConfigurationName: String!
  LaunchConfigurationARN: String
  ImageId: String!
  KeyName: String
  SecurityGroups: [String]
  ClassicLinkVPCId: String
  ClassicLinkVPCSecurityGroups: [String]
  UserData: String
  InstanceType: String!
  KernelId: String
  RamdiskId: String
  BlockDeviceMappings: [AwsAutoscalingS1c]
  InstanceMonitoring: AwsAutoscalingS1l
  SpotPrice: String
  IamInstanceProfile: String
  CreatedTime: Date!
  EbsOptimized: Boolean
  AssociatePublicIpAddress: Boolean
  PlacementTenancy: String
}

input AwsAutoscalingDescribeLifecycleHooksInput {
  AutoScalingGroupName: String!
  LifecycleHookNames: [String]
}

type AwsAutoscalingDescribeLifecycleHooksOutput {
  LifecycleHooks: [AwsAutoscalingDescribeLifecycleHooksOutputLifecycleHooks]
}

type AwsAutoscalingDescribeLifecycleHooksOutputLifecycleHooks {
  LifecycleHookName: String
  AutoScalingGroupName: String
  LifecycleTransition: String
  NotificationTargetARN: String
  RoleARN: String
  NotificationMetadata: String
  HeartbeatTimeout: Int
  GlobalTimeout: Int
  DefaultResult: String
}

type AwsAutoscalingDescribeLifecycleHookTypesOutput {
  LifecycleHookTypes: [String]
}

input AwsAutoscalingDescribeLoadBalancersInput {
  AutoScalingGroupName: String!
  NextToken: String
  MaxRecords: Int
}

type AwsAutoscalingDescribeLoadBalancersOutput {
  LoadBalancers: [AwsAutoscalingDescribeLoadBalancersOutputLoadBalancers]
  NextToken: String
}

type AwsAutoscalingDescribeLoadBalancersOutputLoadBalancers {
  LoadBalancerName: String
  State: String
}

input AwsAutoscalingDescribeLoadBalancerTargetGroupsInput {
  AutoScalingGroupName: String!
  NextToken: String
  MaxRecords: Int
}

type AwsAutoscalingDescribeLoadBalancerTargetGroupsOutput {
  LoadBalancerTargetGroups: [AwsAutoscalingDescribeLoadBalancerTargetGroupsOutputLoadBalancerTargetGroups]
  NextToken: String
}

type AwsAutoscalingDescribeLoadBalancerTargetGroupsOutputLoadBalancerTargetGroups {
  LoadBalancerTargetGroupARN: String
  State: String
}

type AwsAutoscalingDescribeMetricCollectionTypesOutput {
  Metrics: [AwsAutoscalingDescribeMetricCollectionTypesOutputMetrics]
  Granularities: [AwsAutoscalingDescribeMetricCollectionTypesOutputGranularities]
}

type AwsAutoscalingDescribeMetricCollectionTypesOutputGranularities {
  Granularity: String
}

type AwsAutoscalingDescribeMetricCollectionTypesOutputMetrics {
  Metric: String
}

input AwsAutoscalingDescribeNotificationConfigurationsInput {
  AutoScalingGroupNames: [String]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoscalingDescribeNotificationConfigurationsOutput {
  NotificationConfigurations: [AwsAutoscalingDescribeNotificationConfigurationsOutputNotificationConfigurations]!
  NextToken: String
}

type AwsAutoscalingDescribeNotificationConfigurationsOutputNotificationConfigurations {
  AutoScalingGroupName: String
  TopicARN: String
  NotificationType: String
}

input AwsAutoscalingDescribePoliciesInput {
  AutoScalingGroupName: String
  PolicyNames: [String]
  PolicyTypes: [String]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoscalingDescribePoliciesOutput {
  ScalingPolicies: [AwsAutoscalingDescribePoliciesOutputScalingPolicies]
  NextToken: String
}

type AwsAutoscalingDescribePoliciesOutputScalingPolicies {
  AutoScalingGroupName: String
  PolicyName: String
  PolicyARN: String
  PolicyType: String
  AdjustmentType: String
  MinAdjustmentStep: Int
  MinAdjustmentMagnitude: Int
  ScalingAdjustment: Int
  Cooldown: Int
  StepAdjustments: [AwsAutoscalingS3x]
  MetricAggregationType: String
  EstimatedInstanceWarmup: Int
  Alarms: [AwsAutoscalingS41]
  TargetTrackingConfiguration: AwsAutoscalingS43
}

input AwsAutoscalingDescribeScalingActivitiesInput {
  ActivityIds: [String]
  AutoScalingGroupName: String
  MaxRecords: Int
  NextToken: String
}

type AwsAutoscalingDescribeScalingActivitiesOutput {
  Activities: [AwsAutoscalingS4k]!
  NextToken: String
}

type AwsAutoscalingDescribeScalingProcessTypesOutput {
  Processes: [AwsAutoscalingDescribeScalingProcessTypesOutputProcesses]
}

type AwsAutoscalingDescribeScalingProcessTypesOutputProcesses {
  ProcessName: String!
}

input AwsAutoscalingDescribeScheduledActionsInput {
  AutoScalingGroupName: String
  ScheduledActionNames: [String]
  StartTime: Date
  EndTime: Date
  NextToken: String
  MaxRecords: Int
}

type AwsAutoscalingDescribeScheduledActionsOutput {
  ScheduledUpdateGroupActions: [AwsAutoscalingDescribeScheduledActionsOutputScheduledUpdateGroupActions]
  NextToken: String
}

type AwsAutoscalingDescribeScheduledActionsOutputScheduledUpdateGroupActions {
  AutoScalingGroupName: String
  ScheduledActionName: String
  ScheduledActionARN: String
  Time: Date
  StartTime: Date
  EndTime: Date
  Recurrence: String
  MinSize: Int
  MaxSize: Int
  DesiredCapacity: Int
}

input AwsAutoscalingDescribeTagsFiltersInput {
  Name: String
  Values: [String]
}

input AwsAutoscalingDescribeTagsInput {
  Filters: [AwsAutoscalingDescribeTagsFiltersInput]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoscalingDescribeTagsOutput {
  Tags: [AwsAutoscalingS2n]
  NextToken: String
}

type AwsAutoscalingDescribeTerminationPolicyTypesOutput {
  TerminationPolicyTypes: [String]
}

input AwsAutoscalingDetachInstancesInput {
  InstanceIds: [String]
  AutoScalingGroupName: String!
  ShouldDecrementDesiredCapacity: Boolean!
}

type AwsAutoscalingDetachInstancesOutput {
  Activities: [AwsAutoscalingS4k]
}

input AwsAutoscalingDetachLoadBalancersInput {
  AutoScalingGroupName: String!
  LoadBalancerNames: [String]!
}

input AwsAutoscalingDetachLoadBalancerTargetGroupsInput {
  AutoScalingGroupName: String!
  TargetGroupARNs: [String]!
}

input AwsAutoscalingDisableMetricsCollectionInput {
  AutoScalingGroupName: String!
  Metrics: [String]
}

input AwsAutoscalingEnableMetricsCollectionInput {
  AutoScalingGroupName: String!
  Metrics: [String]
  Granularity: String!
}

input AwsAutoscalingEnterStandbyInput {
  InstanceIds: [String]
  AutoScalingGroupName: String!
  ShouldDecrementDesiredCapacity: Boolean!
}

type AwsAutoscalingEnterStandbyOutput {
  Activities: [AwsAutoscalingS4k]
}

input AwsAutoscalingExecutePolicyInput {
  AutoScalingGroupName: String
  PolicyName: String!
  HonorCooldown: Boolean
  MetricValue: JSON
  BreachThreshold: JSON
}

input AwsAutoscalingExitStandbyInput {
  InstanceIds: [String]
  AutoScalingGroupName: String!
}

type AwsAutoscalingExitStandbyOutput {
  Activities: [AwsAutoscalingS4k]
}

input AwsAutoscalingPutLifecycleHookInput {
  LifecycleHookName: String!
  AutoScalingGroupName: String!
  LifecycleTransition: String
  RoleARN: String
  NotificationTargetARN: String
  NotificationMetadata: String
  HeartbeatTimeout: Int
  DefaultResult: String
}

input AwsAutoscalingPutNotificationConfigurationInput {
  AutoScalingGroupName: String!
  TopicARN: String!
  NotificationTypes: [String]!
}

input AwsAutoscalingPutScalingPolicyInput {
  AutoScalingGroupName: String!
  PolicyName: String!
  PolicyType: String
  AdjustmentType: String
  MinAdjustmentStep: Int
  MinAdjustmentMagnitude: Int
  ScalingAdjustment: Int
  Cooldown: Int
  MetricAggregationType: String
  StepAdjustments: [AwsAutoscalingS3xInput]
  EstimatedInstanceWarmup: Int
  TargetTrackingConfiguration: AwsAutoscalingS43Input
}

type AwsAutoscalingPutScalingPolicyOutput {
  PolicyARN: String
  Alarms: [AwsAutoscalingS41]
}

input AwsAutoscalingPutScheduledUpdateGroupActionInput {
  AutoScalingGroupName: String!
  ScheduledActionName: String!
  Time: Date
  StartTime: Date
  EndTime: Date
  Recurrence: String
  MinSize: Int
  MaxSize: Int
  DesiredCapacity: Int
}

input AwsAutoscalingRecordLifecycleActionHeartbeatInput {
  LifecycleHookName: String!
  AutoScalingGroupName: String!
  LifecycleActionToken: String
  InstanceId: String
}

input AwsAutoscalingS12Input {
  ResourceId: String
  ResourceType: String
  Key: String!
  Value: String
  PropagateAtLaunch: Boolean
}

type AwsAutoscalingS1c {
  VirtualName: String
  DeviceName: String!
  Ebs: AwsAutoscalingS1cEbs
  NoDevice: Boolean
}

type AwsAutoscalingS1cEbs {
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
  DeleteOnTermination: Boolean
  Iops: Int
  Encrypted: Boolean
}

input AwsAutoscalingS1cEbsInput {
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
  DeleteOnTermination: Boolean
  Iops: Int
  Encrypted: Boolean
}

input AwsAutoscalingS1cInput {
  VirtualName: String
  DeviceName: String!
  Ebs: AwsAutoscalingS1cEbsInput
  NoDevice: Boolean
}

type AwsAutoscalingS1l {
  Enabled: Boolean
}

input AwsAutoscalingS1lInput {
  Enabled: Boolean
}

type AwsAutoscalingS2n {
  ResourceId: String
  ResourceType: String
  Key: String
  Value: String
  PropagateAtLaunch: Boolean
}

type AwsAutoscalingS3x {
  MetricIntervalLowerBound: JSON
  MetricIntervalUpperBound: JSON
  ScalingAdjustment: Int!
}

input AwsAutoscalingS3xInput {
  MetricIntervalLowerBound: JSON
  MetricIntervalUpperBound: JSON
  ScalingAdjustment: Int!
}

type AwsAutoscalingS41 {
  AlarmName: String
  AlarmARN: String
}

type AwsAutoscalingS43 {
  PredefinedMetricSpecification: AwsAutoscalingS43PredefinedMetricSpecification
  CustomizedMetricSpecification: AwsAutoscalingS43CustomizedMetricSpecification
  TargetValue: JSON!
  DisableScaleIn: Boolean
}

type AwsAutoscalingS43CustomizedMetricSpecification {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsAutoscalingS43CustomizedMetricSpecificationDimensions]
  Statistic: String!
  Unit: String
}

type AwsAutoscalingS43CustomizedMetricSpecificationDimensions {
  Name: String!
  Value: String!
}

input AwsAutoscalingS43CustomizedMetricSpecificationDimensionsInput {
  Name: String!
  Value: String!
}

input AwsAutoscalingS43CustomizedMetricSpecificationInput {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsAutoscalingS43CustomizedMetricSpecificationDimensionsInput]
  Statistic: String!
  Unit: String
}

input AwsAutoscalingS43Input {
  PredefinedMetricSpecification: AwsAutoscalingS43PredefinedMetricSpecificationInput
  CustomizedMetricSpecification: AwsAutoscalingS43CustomizedMetricSpecificationInput
  TargetValue: JSON!
  DisableScaleIn: Boolean
}

type AwsAutoscalingS43PredefinedMetricSpecification {
  PredefinedMetricType: String!
  ResourceLabel: String
}

input AwsAutoscalingS43PredefinedMetricSpecificationInput {
  PredefinedMetricType: String!
  ResourceLabel: String
}

type AwsAutoscalingS4k {
  ActivityId: String!
  AutoScalingGroupName: String!
  Description: String
  Cause: String!
  StartTime: Date!
  EndTime: Date
  StatusCode: String!
  StatusMessage: String
  Progress: Int
  Details: String
}

input AwsAutoscalingSetDesiredCapacityInput {
  AutoScalingGroupName: String!
  DesiredCapacity: Int!
  HonorCooldown: Boolean
}

input AwsAutoscalingSetInstanceHealthInput {
  InstanceId: String!
  HealthStatus: String!
  ShouldRespectGracePeriod: Boolean
}

input AwsAutoscalingSetInstanceProtectionInput {
  InstanceIds: [String]!
  AutoScalingGroupName: String!
  ProtectedFromScaleIn: Boolean!
}

type AwsAutoscalingSj {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsAutoscalingSjInput {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsAutoscalingTerminateInstanceInAutoScalingGroupInput {
  InstanceId: String!
  ShouldDecrementDesiredCapacity: Boolean!
}

type AwsAutoscalingTerminateInstanceInAutoScalingGroupOutput {
  Activity: AwsAutoscalingS4k
}

input AwsAutoscalingUpdateAutoScalingGroupInput {
  AutoScalingGroupName: String!
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoscalingSjInput
  MinSize: Int
  MaxSize: Int
  DesiredCapacity: Int
  DefaultCooldown: Int
  AvailabilityZones: [String]
  HealthCheckType: String
  HealthCheckGracePeriod: Int
  PlacementGroup: String
  VPCZoneIdentifier: String
  TerminationPolicies: [String]
  NewInstancesProtectedFromScaleIn: Boolean
}

# AWS Batch (2016-08-10)
type AwsBatch {
  # batch.CancelJob
  CancelJob(input: AwsBatchCancelJobInput!): JSON

  # batch.CreateComputeEnvironment
  CreateComputeEnvironment(input: AwsBatchCreateComputeEnvironmentInput!): AwsBatchCreateComputeEnvironmentOutput

  # batch.CreateJobQueue
  CreateJobQueue(input: AwsBatchCreateJobQueueInput!): AwsBatchCreateJobQueueOutput

  # batch.DeleteComputeEnvironment
  DeleteComputeEnvironment(input: AwsBatchDeleteComputeEnvironmentInput!): JSON

  # batch.DeleteJobQueue
  DeleteJobQueue(input: AwsBatchDeleteJobQueueInput!): JSON

  # batch.DeregisterJobDefinition
  DeregisterJobDefinition(input: AwsBatchDeregisterJobDefinitionInput!): JSON

  # batch.DescribeComputeEnvironments
  DescribeComputeEnvironments(input: AwsBatchDescribeComputeEnvironmentsInput): AwsBatchDescribeComputeEnvironmentsOutput

  # batch.DescribeJobDefinitions
  DescribeJobDefinitions(input: AwsBatchDescribeJobDefinitionsInput): AwsBatchDescribeJobDefinitionsOutput

  # batch.DescribeJobQueues
  DescribeJobQueues(input: AwsBatchDescribeJobQueuesInput): AwsBatchDescribeJobQueuesOutput

  # batch.DescribeJobs
  DescribeJobs(input: AwsBatchDescribeJobsInput!): AwsBatchDescribeJobsOutput

  # batch.ListJobs
  ListJobs(input: AwsBatchListJobsInput): AwsBatchListJobsOutput

  # batch.RegisterJobDefinition
  RegisterJobDefinition(input: AwsBatchRegisterJobDefinitionInput!): AwsBatchRegisterJobDefinitionOutput

  # batch.SubmitJob
  SubmitJob(input: AwsBatchSubmitJobInput!): AwsBatchSubmitJobOutput

  # batch.TerminateJob
  TerminateJob(input: AwsBatchTerminateJobInput!): JSON

  # batch.UpdateComputeEnvironment
  UpdateComputeEnvironment(input: AwsBatchUpdateComputeEnvironmentInput!): AwsBatchUpdateComputeEnvironmentOutput

  # batch.UpdateJobQueue
  UpdateJobQueue(input: AwsBatchUpdateJobQueueInput!): AwsBatchUpdateJobQueueOutput
}

input AwsBatchCancelJobInput {
  jobId: String!
  reason: String!
}

input AwsBatchCreateComputeEnvironmentInput {
  computeEnvironmentName: String!
  type: String!
  state: String
  computeResources: AwsBatchS7Input
  serviceRole: String!
}

type AwsBatchCreateComputeEnvironmentOutput {
  computeEnvironmentName: String
  computeEnvironmentArn: String
}

input AwsBatchCreateJobQueueInput {
  jobQueueName: String!
  state: String
  priority: Int!
  computeEnvironmentOrder: [AwsBatchSfInput]!
}

type AwsBatchCreateJobQueueOutput {
  jobQueueName: String!
  jobQueueArn: String!
}

input AwsBatchDeleteComputeEnvironmentInput {
  computeEnvironment: String!
}

input AwsBatchDeleteJobQueueInput {
  jobQueue: String!
}

input AwsBatchDeregisterJobDefinitionInput {
  jobDefinition: String!
}

input AwsBatchDescribeComputeEnvironmentsInput {
  computeEnvironments: [String]
  maxResults: Int
  nextToken: String
}

type AwsBatchDescribeComputeEnvironmentsOutput {
  computeEnvironments: [AwsBatchDescribeComputeEnvironmentsOutputComputeEnvironments]
  nextToken: String
}

type AwsBatchDescribeComputeEnvironmentsOutputComputeEnvironments {
  computeEnvironmentName: String!
  computeEnvironmentArn: String!
  ecsClusterArn: String!
  type: String
  state: String
  status: String
  statusReason: String
  computeResources: AwsBatchS7
  serviceRole: String
}

input AwsBatchDescribeJobDefinitionsInput {
  jobDefinitions: [String]
  maxResults: Int
  jobDefinitionName: String
  status: String
  nextToken: String
}

type AwsBatchDescribeJobDefinitionsOutput {
  jobDefinitions: [AwsBatchDescribeJobDefinitionsOutputJobDefinitions]
  nextToken: String
}

type AwsBatchDescribeJobDefinitionsOutputJobDefinitions {
  jobDefinitionName: String!
  jobDefinitionArn: String!
  revision: Int!
  status: String
  type: String!
  parameters: JSON
  retryStrategy: AwsBatchSy
  containerProperties: AwsBatchSz
}

input AwsBatchDescribeJobQueuesInput {
  jobQueues: [String]
  maxResults: Int
  nextToken: String
}

type AwsBatchDescribeJobQueuesOutput {
  jobQueues: [AwsBatchDescribeJobQueuesOutputJobQueues]
  nextToken: String
}

type AwsBatchDescribeJobQueuesOutputJobQueues {
  jobQueueName: String!
  jobQueueArn: String!
  state: String!
  status: String
  statusReason: String
  priority: Int!
  computeEnvironmentOrder: [AwsBatchSf]!
}

input AwsBatchDescribeJobsInput {
  jobs: [String]!
}

type AwsBatchDescribeJobsOutput {
  jobs: [AwsBatchDescribeJobsOutputJobs]
}

type AwsBatchDescribeJobsOutputJobs {
  jobName: String!
  jobId: String!
  jobQueue: String!
  status: String!
  attempts: [AwsBatchDescribeJobsOutputJobsAttempts]
  statusReason: String
  createdAt: JSON
  retryStrategy: AwsBatchSy
  startedAt: JSON!
  stoppedAt: JSON
  dependsOn: [AwsBatchS1o]
  jobDefinition: String!
  parameters: JSON
  container: AwsBatchDescribeJobsOutputJobsContainer
  arrayProperties: AwsBatchDescribeJobsOutputJobsArrayProperties
}

type AwsBatchDescribeJobsOutputJobsArrayProperties {
  statusSummary: JSON
  size: Int
  index: Int
}

type AwsBatchDescribeJobsOutputJobsAttempts {
  container: AwsBatchDescribeJobsOutputJobsAttemptsContainer
  startedAt: JSON
  stoppedAt: JSON
  statusReason: String
}

type AwsBatchDescribeJobsOutputJobsAttemptsContainer {
  containerInstanceArn: String
  taskArn: String
  exitCode: Int
  reason: String
  logStreamName: String
}

type AwsBatchDescribeJobsOutputJobsContainer {
  image: String
  vcpus: Int
  memory: Int
  command: [String]
  jobRoleArn: String
  volumes: [AwsBatchS10]
  environment: [AwsBatchS13]
  mountPoints: [AwsBatchS15]
  readonlyRootFilesystem: Boolean
  ulimits: [AwsBatchS18]
  privileged: Boolean
  user: String
  exitCode: Int
  reason: String
  containerInstanceArn: String
  taskArn: String
  logStreamName: String
}

input AwsBatchListJobsInput {
  jobQueue: String
  arrayJobId: String
  jobStatus: String
  maxResults: Int
  nextToken: String
}

type AwsBatchListJobsOutput {
  jobSummaryList: [AwsBatchListJobsOutputJobSummaryList]!
  nextToken: String
}

type AwsBatchListJobsOutputJobSummaryList {
  jobId: String!
  jobName: String!
  createdAt: JSON
  status: String
  statusReason: String
  startedAt: JSON
  stoppedAt: JSON
  container: AwsBatchListJobsOutputJobSummaryListContainer
  arrayProperties: AwsBatchListJobsOutputJobSummaryListArrayProperties
}

type AwsBatchListJobsOutputJobSummaryListArrayProperties {
  size: Int
  index: Int
}

type AwsBatchListJobsOutputJobSummaryListContainer {
  exitCode: Int
  reason: String
}

input AwsBatchRegisterJobDefinitionInput {
  jobDefinitionName: String!
  type: String!
  parameters: JSON
  containerProperties: AwsBatchSzInput
  retryStrategy: AwsBatchSyInput
}

type AwsBatchRegisterJobDefinitionOutput {
  jobDefinitionName: String!
  jobDefinitionArn: String!
  revision: Int!
}

type AwsBatchS10 {
  host: AwsBatchS10Host
  name: String
}

type AwsBatchS10Host {
  sourcePath: String
}

input AwsBatchS10HostInput {
  sourcePath: String
}

input AwsBatchS10Input {
  host: AwsBatchS10HostInput
  name: String
}

type AwsBatchS13 {
  name: String
  value: String
}

input AwsBatchS13Input {
  name: String
  value: String
}

type AwsBatchS15 {
  containerPath: String
  readOnly: Boolean
  sourceVolume: String
}

input AwsBatchS15Input {
  containerPath: String
  readOnly: Boolean
  sourceVolume: String
}

type AwsBatchS18 {
  hardLimit: Int!
  name: String!
  softLimit: Int!
}

input AwsBatchS18Input {
  hardLimit: Int!
  name: String!
  softLimit: Int!
}

type AwsBatchS1o {
  jobId: String
  type: String
}

input AwsBatchS1oInput {
  jobId: String
  type: String
}

type AwsBatchS7 {
  type: String!
  minvCpus: Int!
  maxvCpus: Int!
  desiredvCpus: Int
  instanceTypes: [String]!
  imageId: String
  subnets: [String]!
  securityGroupIds: [String]!
  ec2KeyPair: String
  instanceRole: String!
  tags: JSON
  bidPercentage: Int
  spotIamFleetRole: String
}

input AwsBatchS7Input {
  type: String!
  minvCpus: Int!
  maxvCpus: Int!
  desiredvCpus: Int
  instanceTypes: [String]!
  imageId: String
  subnets: [String]!
  securityGroupIds: [String]!
  ec2KeyPair: String
  instanceRole: String!
  tags: JSON
  bidPercentage: Int
  spotIamFleetRole: String
}

type AwsBatchSf {
  order: Int!
  computeEnvironment: String!
}

input AwsBatchSfInput {
  order: Int!
  computeEnvironment: String!
}

input AwsBatchSubmitJobArrayPropertiesInput {
  size: Int
}

input AwsBatchSubmitJobContainerOverridesInput {
  vcpus: Int
  memory: Int
  command: [String]
  environment: [AwsBatchS13Input]
}

input AwsBatchSubmitJobInput {
  jobName: String!
  jobQueue: String!
  arrayProperties: AwsBatchSubmitJobArrayPropertiesInput
  dependsOn: [AwsBatchS1oInput]
  jobDefinition: String!
  parameters: JSON
  containerOverrides: AwsBatchSubmitJobContainerOverridesInput
  retryStrategy: AwsBatchSyInput
}

type AwsBatchSubmitJobOutput {
  jobName: String!
  jobId: String!
}

type AwsBatchSy {
  attempts: Int
}

input AwsBatchSyInput {
  attempts: Int
}

type AwsBatchSz {
  image: String!
  vcpus: Int!
  memory: Int!
  command: [String]
  jobRoleArn: String
  volumes: [AwsBatchS10]
  environment: [AwsBatchS13]
  mountPoints: [AwsBatchS15]
  readonlyRootFilesystem: Boolean
  privileged: Boolean
  ulimits: [AwsBatchS18]
  user: String
}

input AwsBatchSzInput {
  image: String!
  vcpus: Int!
  memory: Int!
  command: [String]
  jobRoleArn: String
  volumes: [AwsBatchS10Input]
  environment: [AwsBatchS13Input]
  mountPoints: [AwsBatchS15Input]
  readonlyRootFilesystem: Boolean
  privileged: Boolean
  ulimits: [AwsBatchS18Input]
  user: String
}

input AwsBatchTerminateJobInput {
  jobId: String!
  reason: String!
}

input AwsBatchUpdateComputeEnvironmentComputeResourcesInput {
  minvCpus: Int
  maxvCpus: Int
  desiredvCpus: Int
}

input AwsBatchUpdateComputeEnvironmentInput {
  computeEnvironment: String!
  state: String
  computeResources: AwsBatchUpdateComputeEnvironmentComputeResourcesInput
  serviceRole: String
}

type AwsBatchUpdateComputeEnvironmentOutput {
  computeEnvironmentName: String
  computeEnvironmentArn: String
}

input AwsBatchUpdateJobQueueInput {
  jobQueue: String!
  state: String
  priority: Int
  computeEnvironmentOrder: [AwsBatchSfInput]
}

type AwsBatchUpdateJobQueueOutput {
  jobQueueName: String
  jobQueueArn: String
}

# AWS Budgets (2016-10-20)
type AwsBudgets {
  # budgets.CreateBudget
  CreateBudget(input: AwsBudgetsCreateBudgetInput!): JSON

  # budgets.CreateNotification
  CreateNotification(input: AwsBudgetsCreateNotificationInput!): JSON

  # budgets.CreateSubscriber
  CreateSubscriber(input: AwsBudgetsCreateSubscriberInput!): JSON

  # budgets.DeleteBudget
  DeleteBudget(input: AwsBudgetsDeleteBudgetInput!): JSON

  # budgets.DeleteNotification
  DeleteNotification(input: AwsBudgetsDeleteNotificationInput!): JSON

  # budgets.DeleteSubscriber
  DeleteSubscriber(input: AwsBudgetsDeleteSubscriberInput!): JSON

  # budgets.DescribeBudget
  DescribeBudget(input: AwsBudgetsDescribeBudgetInput!): AwsBudgetsDescribeBudgetOutput

  # budgets.DescribeBudgets
  DescribeBudgets(input: AwsBudgetsDescribeBudgetsInput!): AwsBudgetsDescribeBudgetsOutput

  # budgets.DescribeNotificationsForBudget
  DescribeNotificationsForBudget(input: AwsBudgetsDescribeNotificationsForBudgetInput!): AwsBudgetsDescribeNotificationsForBudgetOutput

  # budgets.DescribeSubscribersForNotification
  DescribeSubscribersForNotification(input: AwsBudgetsDescribeSubscribersForNotificationInput!): AwsBudgetsDescribeSubscribersForNotificationOutput

  # budgets.UpdateBudget
  UpdateBudget(input: AwsBudgetsUpdateBudgetInput!): JSON

  # budgets.UpdateNotification
  UpdateNotification(input: AwsBudgetsUpdateNotificationInput!): JSON

  # budgets.UpdateSubscriber
  UpdateSubscriber(input: AwsBudgetsUpdateSubscriberInput!): JSON
}

input AwsBudgetsCreateBudgetInput {
  AccountId: String!
  Budget: AwsBudgetsS3Input!
  NotificationsWithSubscribers: [AwsBudgetsCreateBudgetNotificationsWithSubscribersInput]
}

input AwsBudgetsCreateBudgetNotificationsWithSubscribersInput {
  Notification: AwsBudgetsSkInput!
  Subscribers: [AwsBudgetsSqInput]!
}

input AwsBudgetsCreateNotificationInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSkInput!
  Subscribers: [AwsBudgetsSqInput]!
}

input AwsBudgetsCreateSubscriberInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSkInput!
  Subscriber: AwsBudgetsSqInput!
}

input AwsBudgetsDeleteBudgetInput {
  AccountId: String!
  BudgetName: String!
}

input AwsBudgetsDeleteNotificationInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSkInput!
}

input AwsBudgetsDeleteSubscriberInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSkInput!
  Subscriber: AwsBudgetsSqInput!
}

input AwsBudgetsDescribeBudgetInput {
  AccountId: String!
  BudgetName: String!
}

type AwsBudgetsDescribeBudgetOutput {
  Budget: AwsBudgetsS3
}

input AwsBudgetsDescribeBudgetsInput {
  AccountId: String!
  MaxResults: Int
  NextToken: String
}

type AwsBudgetsDescribeBudgetsOutput {
  Budgets: [AwsBudgetsS3]
  NextToken: String
}

input AwsBudgetsDescribeNotificationsForBudgetInput {
  AccountId: String!
  BudgetName: String!
  MaxResults: Int
  NextToken: String
}

type AwsBudgetsDescribeNotificationsForBudgetOutput {
  Notifications: [AwsBudgetsSk]
  NextToken: String
}

input AwsBudgetsDescribeSubscribersForNotificationInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSkInput!
  MaxResults: Int
  NextToken: String
}

type AwsBudgetsDescribeSubscribersForNotificationOutput {
  Subscribers: [AwsBudgetsSq]
  NextToken: String
}

type AwsBudgetsS3 {
  BudgetName: String!
  BudgetLimit: AwsBudgetsS5!
  CostFilters: JSON
  CostTypes: AwsBudgetsS3CostTypes!
  TimeUnit: String!
  TimePeriod: AwsBudgetsS3TimePeriod!
  CalculatedSpend: AwsBudgetsS3CalculatedSpend
  BudgetType: String!
}

type AwsBudgetsS3CalculatedSpend {
  ActualSpend: AwsBudgetsS5!
  ForecastedSpend: AwsBudgetsS5
}

input AwsBudgetsS3CalculatedSpendInput {
  ActualSpend: AwsBudgetsS5Input!
  ForecastedSpend: AwsBudgetsS5Input
}

type AwsBudgetsS3CostTypes {
  IncludeTax: Boolean!
  IncludeSubscription: Boolean!
  UseBlended: Boolean!
}

input AwsBudgetsS3CostTypesInput {
  IncludeTax: Boolean!
  IncludeSubscription: Boolean!
  UseBlended: Boolean!
}

input AwsBudgetsS3Input {
  BudgetName: String!
  BudgetLimit: AwsBudgetsS5Input!
  CostFilters: JSON
  CostTypes: AwsBudgetsS3CostTypesInput!
  TimeUnit: String!
  TimePeriod: AwsBudgetsS3TimePeriodInput!
  CalculatedSpend: AwsBudgetsS3CalculatedSpendInput
  BudgetType: String!
}

type AwsBudgetsS3TimePeriod {
  Start: Date!
  End: Date!
}

input AwsBudgetsS3TimePeriodInput {
  Start: Date!
  End: Date!
}

type AwsBudgetsS5 {
  Amount: String!
  Unit: String!
}

input AwsBudgetsS5Input {
  Amount: String!
  Unit: String!
}

type AwsBudgetsSk {
  NotificationType: String!
  ComparisonOperator: String!
  Threshold: JSON!
  ThresholdType: String
}

input AwsBudgetsSkInput {
  NotificationType: String!
  ComparisonOperator: String!
  Threshold: JSON!
  ThresholdType: String
}

type AwsBudgetsSq {
  SubscriptionType: String!
  Address: String!
}

input AwsBudgetsSqInput {
  SubscriptionType: String!
  Address: String!
}

input AwsBudgetsUpdateBudgetInput {
  AccountId: String!
  NewBudget: AwsBudgetsS3Input!
}

input AwsBudgetsUpdateNotificationInput {
  AccountId: String!
  BudgetName: String!
  OldNotification: AwsBudgetsSkInput!
  NewNotification: AwsBudgetsSkInput!
}

input AwsBudgetsUpdateSubscriberInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSkInput!
  OldSubscriber: AwsBudgetsSqInput!
  NewSubscriber: AwsBudgetsSqInput!
}

# Amazon CloudDirectory (2016-05-10)
type AwsClouddirectory {
  # clouddirectory.AddFacetToObject
  AddFacetToObject(input: AwsClouddirectoryAddFacetToObjectInput!): JSON

  # clouddirectory.ApplySchema
  ApplySchema(input: AwsClouddirectoryApplySchemaInput!): AwsClouddirectoryApplySchemaOutput

  # clouddirectory.AttachObject
  AttachObject(input: AwsClouddirectoryAttachObjectInput!): AwsClouddirectoryAttachObjectOutput

  # clouddirectory.AttachPolicy
  AttachPolicy(input: AwsClouddirectoryAttachPolicyInput!): JSON

  # clouddirectory.AttachToIndex
  AttachToIndex(input: AwsClouddirectoryAttachToIndexInput!): AwsClouddirectoryAttachToIndexOutput

  # clouddirectory.AttachTypedLink
  AttachTypedLink(input: AwsClouddirectoryAttachTypedLinkInput!): AwsClouddirectoryAttachTypedLinkOutput

  # clouddirectory.BatchRead
  BatchRead(input: AwsClouddirectoryBatchReadInput!): AwsClouddirectoryBatchReadOutput

  # clouddirectory.BatchWrite
  BatchWrite(input: AwsClouddirectoryBatchWriteInput!): AwsClouddirectoryBatchWriteOutput

  # clouddirectory.CreateDirectory
  CreateDirectory(input: AwsClouddirectoryCreateDirectoryInput!): AwsClouddirectoryCreateDirectoryOutput

  # clouddirectory.CreateFacet
  CreateFacet(input: AwsClouddirectoryCreateFacetInput!): JSON

  # clouddirectory.CreateIndex
  CreateIndex(input: AwsClouddirectoryCreateIndexInput!): AwsClouddirectoryCreateIndexOutput

  # clouddirectory.CreateObject
  CreateObject(input: AwsClouddirectoryCreateObjectInput!): AwsClouddirectoryCreateObjectOutput

  # clouddirectory.CreateSchema
  CreateSchema(input: AwsClouddirectoryCreateSchemaInput!): AwsClouddirectoryCreateSchemaOutput

  # clouddirectory.CreateTypedLinkFacet
  CreateTypedLinkFacet(input: AwsClouddirectoryCreateTypedLinkFacetInput!): JSON

  # clouddirectory.DeleteDirectory
  DeleteDirectory(input: AwsClouddirectoryDeleteDirectoryInput!): AwsClouddirectoryDeleteDirectoryOutput

  # clouddirectory.DeleteFacet
  DeleteFacet(input: AwsClouddirectoryDeleteFacetInput!): JSON

  # clouddirectory.DeleteObject
  DeleteObject(input: AwsClouddirectoryDeleteObjectInput!): JSON

  # clouddirectory.DeleteSchema
  DeleteSchema(input: AwsClouddirectoryDeleteSchemaInput!): AwsClouddirectoryDeleteSchemaOutput

  # clouddirectory.DeleteTypedLinkFacet
  DeleteTypedLinkFacet(input: AwsClouddirectoryDeleteTypedLinkFacetInput!): JSON

  # clouddirectory.DetachFromIndex
  DetachFromIndex(input: AwsClouddirectoryDetachFromIndexInput!): AwsClouddirectoryDetachFromIndexOutput

  # clouddirectory.DetachObject
  DetachObject(input: AwsClouddirectoryDetachObjectInput!): AwsClouddirectoryDetachObjectOutput

  # clouddirectory.DetachPolicy
  DetachPolicy(input: AwsClouddirectoryDetachPolicyInput!): JSON

  # clouddirectory.DetachTypedLink
  DetachTypedLink(input: AwsClouddirectoryDetachTypedLinkInput!): JSON

  # clouddirectory.DisableDirectory
  DisableDirectory(input: AwsClouddirectoryDisableDirectoryInput!): AwsClouddirectoryDisableDirectoryOutput

  # clouddirectory.EnableDirectory
  EnableDirectory(input: AwsClouddirectoryEnableDirectoryInput!): AwsClouddirectoryEnableDirectoryOutput

  # clouddirectory.GetDirectory
  GetDirectory(input: AwsClouddirectoryGetDirectoryInput!): AwsClouddirectoryGetDirectoryOutput

  # clouddirectory.GetFacet
  GetFacet(input: AwsClouddirectoryGetFacetInput!): AwsClouddirectoryGetFacetOutput

  # clouddirectory.GetObjectInformation
  GetObjectInformation(input: AwsClouddirectoryGetObjectInformationInput!): AwsClouddirectoryGetObjectInformationOutput

  # clouddirectory.GetSchemaAsJson
  GetSchemaAsJson(input: AwsClouddirectoryGetSchemaAsJsonInput!): AwsClouddirectoryGetSchemaAsJsonOutput

  # clouddirectory.GetTypedLinkFacetInformation
  GetTypedLinkFacetInformation(input: AwsClouddirectoryGetTypedLinkFacetInformationInput!): AwsClouddirectoryGetTypedLinkFacetInformationOutput

  # clouddirectory.ListAppliedSchemaArns
  ListAppliedSchemaArns(input: AwsClouddirectoryListAppliedSchemaArnsInput!): AwsClouddirectoryListAppliedSchemaArnsOutput

  # clouddirectory.ListAttachedIndices
  ListAttachedIndices(input: AwsClouddirectoryListAttachedIndicesInput!): AwsClouddirectoryListAttachedIndicesOutput

  # clouddirectory.ListDevelopmentSchemaArns
  ListDevelopmentSchemaArns(input: AwsClouddirectoryListDevelopmentSchemaArnsInput): AwsClouddirectoryListDevelopmentSchemaArnsOutput

  # clouddirectory.ListDirectories
  ListDirectories(input: AwsClouddirectoryListDirectoriesInput): AwsClouddirectoryListDirectoriesOutput

  # clouddirectory.ListFacetAttributes
  ListFacetAttributes(input: AwsClouddirectoryListFacetAttributesInput!): AwsClouddirectoryListFacetAttributesOutput

  # clouddirectory.ListFacetNames
  ListFacetNames(input: AwsClouddirectoryListFacetNamesInput!): AwsClouddirectoryListFacetNamesOutput

  # clouddirectory.ListIncomingTypedLinks
  ListIncomingTypedLinks(input: AwsClouddirectoryListIncomingTypedLinksInput!): AwsClouddirectoryListIncomingTypedLinksOutput

  # clouddirectory.ListIndex
  ListIndex(input: AwsClouddirectoryListIndexInput!): AwsClouddirectoryListIndexOutput

  # clouddirectory.ListObjectAttributes
  ListObjectAttributes(input: AwsClouddirectoryListObjectAttributesInput!): AwsClouddirectoryListObjectAttributesOutput

  # clouddirectory.ListObjectChildren
  ListObjectChildren(input: AwsClouddirectoryListObjectChildrenInput!): AwsClouddirectoryListObjectChildrenOutput

  # clouddirectory.ListObjectParentPaths
  ListObjectParentPaths(input: AwsClouddirectoryListObjectParentPathsInput!): AwsClouddirectoryListObjectParentPathsOutput

  # clouddirectory.ListObjectParents
  ListObjectParents(input: AwsClouddirectoryListObjectParentsInput!): AwsClouddirectoryListObjectParentsOutput

  # clouddirectory.ListObjectPolicies
  ListObjectPolicies(input: AwsClouddirectoryListObjectPoliciesInput!): AwsClouddirectoryListObjectPoliciesOutput

  # clouddirectory.ListOutgoingTypedLinks
  ListOutgoingTypedLinks(input: AwsClouddirectoryListOutgoingTypedLinksInput!): AwsClouddirectoryListOutgoingTypedLinksOutput

  # clouddirectory.ListPolicyAttachments
  ListPolicyAttachments(input: AwsClouddirectoryListPolicyAttachmentsInput!): AwsClouddirectoryListPolicyAttachmentsOutput

  # clouddirectory.ListPublishedSchemaArns
  ListPublishedSchemaArns(input: AwsClouddirectoryListPublishedSchemaArnsInput): AwsClouddirectoryListPublishedSchemaArnsOutput

  # clouddirectory.ListTagsForResource
  ListTagsForResource(input: AwsClouddirectoryListTagsForResourceInput!): AwsClouddirectoryListTagsForResourceOutput

  # clouddirectory.ListTypedLinkFacetAttributes
  ListTypedLinkFacetAttributes(input: AwsClouddirectoryListTypedLinkFacetAttributesInput!): AwsClouddirectoryListTypedLinkFacetAttributesOutput

  # clouddirectory.ListTypedLinkFacetNames
  ListTypedLinkFacetNames(input: AwsClouddirectoryListTypedLinkFacetNamesInput!): AwsClouddirectoryListTypedLinkFacetNamesOutput

  # clouddirectory.LookupPolicy
  LookupPolicy(input: AwsClouddirectoryLookupPolicyInput!): AwsClouddirectoryLookupPolicyOutput

  # clouddirectory.PublishSchema
  PublishSchema(input: AwsClouddirectoryPublishSchemaInput!): AwsClouddirectoryPublishSchemaOutput

  # clouddirectory.PutSchemaFromJson
  PutSchemaFromJson(input: AwsClouddirectoryPutSchemaFromJsonInput!): AwsClouddirectoryPutSchemaFromJsonOutput

  # clouddirectory.RemoveFacetFromObject
  RemoveFacetFromObject(input: AwsClouddirectoryRemoveFacetFromObjectInput!): JSON

  # clouddirectory.TagResource
  TagResource(input: AwsClouddirectoryTagResourceInput!): JSON

  # clouddirectory.UntagResource
  UntagResource(input: AwsClouddirectoryUntagResourceInput!): JSON

  # clouddirectory.UpdateFacet
  UpdateFacet(input: AwsClouddirectoryUpdateFacetInput!): JSON

  # clouddirectory.UpdateObjectAttributes
  UpdateObjectAttributes(input: AwsClouddirectoryUpdateObjectAttributesInput!): AwsClouddirectoryUpdateObjectAttributesOutput

  # clouddirectory.UpdateSchema
  UpdateSchema(input: AwsClouddirectoryUpdateSchemaInput!): AwsClouddirectoryUpdateSchemaOutput

  # clouddirectory.UpdateTypedLinkFacet
  UpdateTypedLinkFacet(input: AwsClouddirectoryUpdateTypedLinkFacetInput!): JSON
}

input AwsClouddirectoryAddFacetToObjectInput {
  DirectoryArn: String!
  SchemaFacet: AwsClouddirectoryS3Input!
  ObjectAttributeList: [AwsClouddirectoryS5Input]
  ObjectReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryApplySchemaInput {
  PublishedSchemaArn: String!
  DirectoryArn: String!
}

type AwsClouddirectoryApplySchemaOutput {
  AppliedSchemaArn: String
  DirectoryArn: String
}

input AwsClouddirectoryAttachObjectInput {
  DirectoryArn: String!
  ParentReference: AwsClouddirectorySfInput!
  ChildReference: AwsClouddirectorySfInput!
  LinkName: String!
}

type AwsClouddirectoryAttachObjectOutput {
  AttachedObjectIdentifier: String
}

input AwsClouddirectoryAttachPolicyInput {
  DirectoryArn: String
  PolicyReference: AwsClouddirectorySfInput!
  ObjectReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryAttachToIndexInput {
  DirectoryArn: String!
  IndexReference: AwsClouddirectorySfInput!
  TargetReference: AwsClouddirectorySfInput!
}

type AwsClouddirectoryAttachToIndexOutput {
  AttachedObjectIdentifier: String
}

input AwsClouddirectoryAttachTypedLinkInput {
  DirectoryArn: String!
  SourceObjectReference: AwsClouddirectorySfInput!
  TargetObjectReference: AwsClouddirectorySfInput!
  TypedLinkFacet: AwsClouddirectoryStInput!
  Attributes: [AwsClouddirectorySvInput]!
}

type AwsClouddirectoryAttachTypedLinkOutput {
  TypedLinkSpecifier: AwsClouddirectorySy
}

input AwsClouddirectoryBatchReadInput {
  DirectoryArn: String!
  Operations: [AwsClouddirectoryBatchReadOperationsInput]!
  ConsistencyLevel: String
}

input AwsClouddirectoryBatchReadOperationsGetObjectInformationInput {
  ObjectReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryBatchReadOperationsInput {
  ListObjectAttributes: AwsClouddirectoryBatchReadOperationsListObjectAttributesInput
  ListObjectChildren: AwsClouddirectoryBatchReadOperationsListObjectChildrenInput
  ListAttachedIndices: AwsClouddirectoryBatchReadOperationsListAttachedIndicesInput
  ListObjectParentPaths: AwsClouddirectoryBatchReadOperationsListObjectParentPathsInput
  GetObjectInformation: AwsClouddirectoryBatchReadOperationsGetObjectInformationInput
  ListObjectPolicies: AwsClouddirectoryBatchReadOperationsListObjectPoliciesInput
  ListPolicyAttachments: AwsClouddirectoryBatchReadOperationsListPolicyAttachmentsInput
  LookupPolicy: AwsClouddirectoryBatchReadOperationsLookupPolicyInput
  ListIndex: AwsClouddirectoryBatchReadOperationsListIndexInput
  ListOutgoingTypedLinks: AwsClouddirectoryBatchReadOperationsListOutgoingTypedLinksInput
  ListIncomingTypedLinks: AwsClouddirectoryBatchReadOperationsListIncomingTypedLinksInput
}

input AwsClouddirectoryBatchReadOperationsListAttachedIndicesInput {
  TargetReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsClouddirectoryBatchReadOperationsListIncomingTypedLinksInput {
  ObjectReference: AwsClouddirectorySfInput!
  FilterAttributeRanges: [AwsClouddirectoryS1iInput]
  FilterTypedLink: AwsClouddirectoryStInput
  NextToken: String
  MaxResults: Int
}

input AwsClouddirectoryBatchReadOperationsListIndexInput {
  RangesOnIndexedValues: [AwsClouddirectoryS1dInput]
  IndexReference: AwsClouddirectorySfInput!
  MaxResults: Int
  NextToken: String
}

input AwsClouddirectoryBatchReadOperationsListObjectAttributesInput {
  ObjectReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
  FacetFilter: AwsClouddirectoryS3Input
}

input AwsClouddirectoryBatchReadOperationsListObjectChildrenInput {
  ObjectReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsClouddirectoryBatchReadOperationsListObjectParentPathsInput {
  ObjectReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsClouddirectoryBatchReadOperationsListObjectPoliciesInput {
  ObjectReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsClouddirectoryBatchReadOperationsListOutgoingTypedLinksInput {
  ObjectReference: AwsClouddirectorySfInput!
  FilterAttributeRanges: [AwsClouddirectoryS1iInput]
  FilterTypedLink: AwsClouddirectoryStInput
  NextToken: String
  MaxResults: Int
}

input AwsClouddirectoryBatchReadOperationsListPolicyAttachmentsInput {
  PolicyReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsClouddirectoryBatchReadOperationsLookupPolicyInput {
  ObjectReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
}

type AwsClouddirectoryBatchReadOutput {
  Responses: [AwsClouddirectoryBatchReadOutputResponses]
}

type AwsClouddirectoryBatchReadOutputResponses {
  SuccessfulResponse: AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponse
  ExceptionResponse: AwsClouddirectoryBatchReadOutputResponsesExceptionResponse
}

type AwsClouddirectoryBatchReadOutputResponsesExceptionResponse {
  Type: String
  Message: String
}

type AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponse {
  ListObjectAttributes: AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListObjectAttributes
  ListObjectChildren: AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListObjectChildren
  GetObjectInformation: AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseGetObjectInformation
  ListAttachedIndices: AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListAttachedIndices
  ListObjectParentPaths: AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListObjectParentPaths
  ListObjectPolicies: AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListObjectPolicies
  ListPolicyAttachments: AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListPolicyAttachments
  LookupPolicy: AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseLookupPolicy
  ListIndex: AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListIndex
  ListOutgoingTypedLinks: AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListOutgoingTypedLinks
  ListIncomingTypedLinks: AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListIncomingTypedLinks
}

type AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseGetObjectInformation {
  SchemaFacets: [AwsClouddirectoryS3]
  ObjectIdentifier: String
}

type AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListAttachedIndices {
  IndexAttachments: [AwsClouddirectoryS1w]
  NextToken: String
}

type AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListIncomingTypedLinks {
  LinkSpecifiers: [AwsClouddirectorySy]
  NextToken: String
}

type AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListIndex {
  IndexAttachments: [AwsClouddirectoryS1w]
  NextToken: String
}

type AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListObjectAttributes {
  Attributes: [AwsClouddirectoryS5]
  NextToken: String
}

type AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListObjectChildren {
  Children: JSON
  NextToken: String
}

type AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListObjectParentPaths {
  PathToObjectIdentifiersList: [AwsClouddirectoryS1z]
  NextToken: String
}

type AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListObjectPolicies {
  AttachedPolicyIds: [String]
  NextToken: String
}

type AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListOutgoingTypedLinks {
  TypedLinkSpecifiers: [AwsClouddirectorySy]
  NextToken: String
}

type AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseListPolicyAttachments {
  ObjectIdentifiers: [String]
  NextToken: String
}

type AwsClouddirectoryBatchReadOutputResponsesSuccessfulResponseLookupPolicy {
  PolicyToPathList: [AwsClouddirectoryS26]
  NextToken: String
}

input AwsClouddirectoryBatchWriteInput {
  DirectoryArn: String!
  Operations: [AwsClouddirectoryBatchWriteOperationsInput]!
}

input AwsClouddirectoryBatchWriteOperationsAddFacetToObjectInput {
  SchemaFacet: AwsClouddirectoryS3Input!
  ObjectAttributeList: [AwsClouddirectoryS5Input]!
  ObjectReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryBatchWriteOperationsAttachObjectInput {
  ParentReference: AwsClouddirectorySfInput!
  ChildReference: AwsClouddirectorySfInput!
  LinkName: String!
}

input AwsClouddirectoryBatchWriteOperationsAttachPolicyInput {
  PolicyReference: AwsClouddirectorySfInput!
  ObjectReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryBatchWriteOperationsAttachToIndexInput {
  IndexReference: AwsClouddirectorySfInput!
  TargetReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryBatchWriteOperationsAttachTypedLinkInput {
  SourceObjectReference: AwsClouddirectorySfInput!
  TargetObjectReference: AwsClouddirectorySfInput!
  TypedLinkFacet: AwsClouddirectoryStInput!
  Attributes: [AwsClouddirectorySvInput]!
}

input AwsClouddirectoryBatchWriteOperationsCreateIndexInput {
  OrderedIndexedAttributeList: [AwsClouddirectoryS7Input]!
  IsUnique: Boolean!
  ParentReference: AwsClouddirectorySfInput
  LinkName: String
  BatchReferenceName: String
}

input AwsClouddirectoryBatchWriteOperationsCreateObjectInput {
  SchemaFacet: [AwsClouddirectoryS3Input]!
  ObjectAttributeList: [AwsClouddirectoryS5Input]!
  ParentReference: AwsClouddirectorySfInput!
  LinkName: String!
  BatchReferenceName: String!
}

input AwsClouddirectoryBatchWriteOperationsDeleteObjectInput {
  ObjectReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryBatchWriteOperationsDetachFromIndexInput {
  IndexReference: AwsClouddirectorySfInput!
  TargetReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryBatchWriteOperationsDetachObjectInput {
  ParentReference: AwsClouddirectorySfInput!
  LinkName: String!
  BatchReferenceName: String!
}

input AwsClouddirectoryBatchWriteOperationsDetachPolicyInput {
  PolicyReference: AwsClouddirectorySfInput!
  ObjectReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryBatchWriteOperationsDetachTypedLinkInput {
  TypedLinkSpecifier: AwsClouddirectorySyInput!
}

input AwsClouddirectoryBatchWriteOperationsInput {
  CreateObject: AwsClouddirectoryBatchWriteOperationsCreateObjectInput
  AttachObject: AwsClouddirectoryBatchWriteOperationsAttachObjectInput
  DetachObject: AwsClouddirectoryBatchWriteOperationsDetachObjectInput
  UpdateObjectAttributes: AwsClouddirectoryBatchWriteOperationsUpdateObjectAttributesInput
  DeleteObject: AwsClouddirectoryBatchWriteOperationsDeleteObjectInput
  AddFacetToObject: AwsClouddirectoryBatchWriteOperationsAddFacetToObjectInput
  RemoveFacetFromObject: AwsClouddirectoryBatchWriteOperationsRemoveFacetFromObjectInput
  AttachPolicy: AwsClouddirectoryBatchWriteOperationsAttachPolicyInput
  DetachPolicy: AwsClouddirectoryBatchWriteOperationsDetachPolicyInput
  CreateIndex: AwsClouddirectoryBatchWriteOperationsCreateIndexInput
  AttachToIndex: AwsClouddirectoryBatchWriteOperationsAttachToIndexInput
  DetachFromIndex: AwsClouddirectoryBatchWriteOperationsDetachFromIndexInput
  AttachTypedLink: AwsClouddirectoryBatchWriteOperationsAttachTypedLinkInput
  DetachTypedLink: AwsClouddirectoryBatchWriteOperationsDetachTypedLinkInput
}

input AwsClouddirectoryBatchWriteOperationsRemoveFacetFromObjectInput {
  SchemaFacet: AwsClouddirectoryS3Input!
  ObjectReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryBatchWriteOperationsUpdateObjectAttributesInput {
  ObjectReference: AwsClouddirectorySfInput!
  AttributeUpdates: [AwsClouddirectoryS2qInput]!
}

type AwsClouddirectoryBatchWriteOutput {
  Responses: [AwsClouddirectoryBatchWriteOutputResponses]
}

type AwsClouddirectoryBatchWriteOutputResponses {
  CreateObject: AwsClouddirectoryBatchWriteOutputResponsesCreateObject
  AttachObject: AwsClouddirectoryBatchWriteOutputResponsesAttachObject
  DetachObject: AwsClouddirectoryBatchWriteOutputResponsesDetachObject
  UpdateObjectAttributes: AwsClouddirectoryBatchWriteOutputResponsesUpdateObjectAttributes
  DeleteObject: JSON
  AddFacetToObject: JSON
  RemoveFacetFromObject: JSON
  AttachPolicy: JSON
  DetachPolicy: JSON
  CreateIndex: AwsClouddirectoryBatchWriteOutputResponsesCreateIndex
  AttachToIndex: AwsClouddirectoryBatchWriteOutputResponsesAttachToIndex
  DetachFromIndex: AwsClouddirectoryBatchWriteOutputResponsesDetachFromIndex
  AttachTypedLink: AwsClouddirectoryBatchWriteOutputResponsesAttachTypedLink
  DetachTypedLink: JSON
}

type AwsClouddirectoryBatchWriteOutputResponsesAttachObject {
  attachedObjectIdentifier: String
}

type AwsClouddirectoryBatchWriteOutputResponsesAttachToIndex {
  AttachedObjectIdentifier: String
}

type AwsClouddirectoryBatchWriteOutputResponsesAttachTypedLink {
  TypedLinkSpecifier: AwsClouddirectorySy
}

type AwsClouddirectoryBatchWriteOutputResponsesCreateIndex {
  ObjectIdentifier: String
}

type AwsClouddirectoryBatchWriteOutputResponsesCreateObject {
  ObjectIdentifier: String
}

type AwsClouddirectoryBatchWriteOutputResponsesDetachFromIndex {
  DetachedObjectIdentifier: String
}

type AwsClouddirectoryBatchWriteOutputResponsesDetachObject {
  detachedObjectIdentifier: String
}

type AwsClouddirectoryBatchWriteOutputResponsesUpdateObjectAttributes {
  ObjectIdentifier: String
}

input AwsClouddirectoryCreateDirectoryInput {
  Name: String!
  SchemaArn: String!
}

type AwsClouddirectoryCreateDirectoryOutput {
  DirectoryArn: String!
  Name: String!
  ObjectIdentifier: String!
  AppliedSchemaArn: String!
}

input AwsClouddirectoryCreateFacetInput {
  SchemaArn: String!
  Name: String!
  Attributes: [AwsClouddirectoryS3tInput]
  ObjectType: String!
}

input AwsClouddirectoryCreateIndexInput {
  DirectoryArn: String!
  OrderedIndexedAttributeList: [AwsClouddirectoryS7Input]!
  IsUnique: Boolean!
  ParentReference: AwsClouddirectorySfInput
  LinkName: String
}

type AwsClouddirectoryCreateIndexOutput {
  ObjectIdentifier: String
}

input AwsClouddirectoryCreateObjectInput {
  DirectoryArn: String!
  SchemaFacets: [AwsClouddirectoryS3Input]!
  ObjectAttributeList: [AwsClouddirectoryS5Input]
  ParentReference: AwsClouddirectorySfInput
  LinkName: String
}

type AwsClouddirectoryCreateObjectOutput {
  ObjectIdentifier: String
}

input AwsClouddirectoryCreateSchemaInput {
  Name: String!
}

type AwsClouddirectoryCreateSchemaOutput {
  SchemaArn: String
}

input AwsClouddirectoryCreateTypedLinkFacetFacetInput {
  Name: String!
  Attributes: [AwsClouddirectoryS4hInput]!
  IdentityAttributeOrder: [String]!
}

input AwsClouddirectoryCreateTypedLinkFacetInput {
  SchemaArn: String!
  Facet: AwsClouddirectoryCreateTypedLinkFacetFacetInput!
}

input AwsClouddirectoryDeleteDirectoryInput {
  DirectoryArn: String!
}

type AwsClouddirectoryDeleteDirectoryOutput {
  DirectoryArn: String!
}

input AwsClouddirectoryDeleteFacetInput {
  SchemaArn: String!
  Name: String!
}

input AwsClouddirectoryDeleteObjectInput {
  DirectoryArn: String!
  ObjectReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryDeleteSchemaInput {
  SchemaArn: String!
}

type AwsClouddirectoryDeleteSchemaOutput {
  SchemaArn: String
}

input AwsClouddirectoryDeleteTypedLinkFacetInput {
  SchemaArn: String!
  Name: String!
}

input AwsClouddirectoryDetachFromIndexInput {
  DirectoryArn: String!
  IndexReference: AwsClouddirectorySfInput!
  TargetReference: AwsClouddirectorySfInput!
}

type AwsClouddirectoryDetachFromIndexOutput {
  DetachedObjectIdentifier: String
}

input AwsClouddirectoryDetachObjectInput {
  DirectoryArn: String!
  ParentReference: AwsClouddirectorySfInput!
  LinkName: String!
}

type AwsClouddirectoryDetachObjectOutput {
  DetachedObjectIdentifier: String
}

input AwsClouddirectoryDetachPolicyInput {
  DirectoryArn: String!
  PolicyReference: AwsClouddirectorySfInput!
  ObjectReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryDetachTypedLinkInput {
  DirectoryArn: String!
  TypedLinkSpecifier: AwsClouddirectorySyInput!
}

input AwsClouddirectoryDisableDirectoryInput {
  DirectoryArn: String!
}

type AwsClouddirectoryDisableDirectoryOutput {
  DirectoryArn: String!
}

input AwsClouddirectoryEnableDirectoryInput {
  DirectoryArn: String!
}

type AwsClouddirectoryEnableDirectoryOutput {
  DirectoryArn: String!
}

input AwsClouddirectoryGetDirectoryInput {
  DirectoryArn: String!
}

type AwsClouddirectoryGetDirectoryOutput {
  Directory: AwsClouddirectoryS57!
}

input AwsClouddirectoryGetFacetInput {
  SchemaArn: String!
  Name: String!
}

type AwsClouddirectoryGetFacetOutput {
  Facet: AwsClouddirectoryGetFacetOutputFacet
}

type AwsClouddirectoryGetFacetOutputFacet {
  Name: String
  ObjectType: String
}

input AwsClouddirectoryGetObjectInformationInput {
  DirectoryArn: String!
  ObjectReference: AwsClouddirectorySfInput!
  ConsistencyLevel: String
}

type AwsClouddirectoryGetObjectInformationOutput {
  SchemaFacets: [AwsClouddirectoryS3]
  ObjectIdentifier: String
}

input AwsClouddirectoryGetSchemaAsJsonInput {
  SchemaArn: String!
}

type AwsClouddirectoryGetSchemaAsJsonOutput {
  Name: String
  Document: String
}

input AwsClouddirectoryGetTypedLinkFacetInformationInput {
  SchemaArn: String!
  Name: String!
}

type AwsClouddirectoryGetTypedLinkFacetInformationOutput {
  IdentityAttributeOrder: [String]
}

input AwsClouddirectoryListAppliedSchemaArnsInput {
  DirectoryArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsClouddirectoryListAppliedSchemaArnsOutput {
  SchemaArns: [String]
  NextToken: String
}

input AwsClouddirectoryListAttachedIndicesInput {
  DirectoryArn: String!
  TargetReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsClouddirectoryListAttachedIndicesOutput {
  IndexAttachments: [AwsClouddirectoryS1w]
  NextToken: String
}

input AwsClouddirectoryListDevelopmentSchemaArnsInput {
  NextToken: String
  MaxResults: Int
}

type AwsClouddirectoryListDevelopmentSchemaArnsOutput {
  SchemaArns: [String]
  NextToken: String
}

input AwsClouddirectoryListDirectoriesInput {
  NextToken: String
  MaxResults: Int
  state: String
}

type AwsClouddirectoryListDirectoriesOutput {
  Directories: [AwsClouddirectoryS57]!
  NextToken: String
}

input AwsClouddirectoryListFacetAttributesInput {
  SchemaArn: String!
  Name: String!
  NextToken: String
  MaxResults: Int
}

type AwsClouddirectoryListFacetAttributesOutput {
  Attributes: [AwsClouddirectoryS3t]
  NextToken: String
}

input AwsClouddirectoryListFacetNamesInput {
  SchemaArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsClouddirectoryListFacetNamesOutput {
  FacetNames: [String]
  NextToken: String
}

input AwsClouddirectoryListIncomingTypedLinksInput {
  DirectoryArn: String!
  ObjectReference: AwsClouddirectorySfInput!
  FilterAttributeRanges: [AwsClouddirectoryS1iInput]
  FilterTypedLink: AwsClouddirectoryStInput
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsClouddirectoryListIncomingTypedLinksOutput {
  LinkSpecifiers: [AwsClouddirectorySy]
  NextToken: String
}

input AwsClouddirectoryListIndexInput {
  DirectoryArn: String!
  RangesOnIndexedValues: [AwsClouddirectoryS1dInput]
  IndexReference: AwsClouddirectorySfInput!
  MaxResults: Int
  NextToken: String
  ConsistencyLevel: String
}

type AwsClouddirectoryListIndexOutput {
  IndexAttachments: [AwsClouddirectoryS1w]
  NextToken: String
}

input AwsClouddirectoryListObjectAttributesInput {
  DirectoryArn: String!
  ObjectReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
  FacetFilter: AwsClouddirectoryS3Input
}

type AwsClouddirectoryListObjectAttributesOutput {
  Attributes: [AwsClouddirectoryS5]
  NextToken: String
}

input AwsClouddirectoryListObjectChildrenInput {
  DirectoryArn: String!
  ObjectReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsClouddirectoryListObjectChildrenOutput {
  Children: JSON
  NextToken: String
}

input AwsClouddirectoryListObjectParentPathsInput {
  DirectoryArn: String!
  ObjectReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
}

type AwsClouddirectoryListObjectParentPathsOutput {
  PathToObjectIdentifiersList: [AwsClouddirectoryS1z]
  NextToken: String
}

input AwsClouddirectoryListObjectParentsInput {
  DirectoryArn: String!
  ObjectReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsClouddirectoryListObjectParentsOutput {
  Parents: JSON
  NextToken: String
}

input AwsClouddirectoryListObjectPoliciesInput {
  DirectoryArn: String!
  ObjectReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsClouddirectoryListObjectPoliciesOutput {
  AttachedPolicyIds: [String]
  NextToken: String
}

input AwsClouddirectoryListOutgoingTypedLinksInput {
  DirectoryArn: String!
  ObjectReference: AwsClouddirectorySfInput!
  FilterAttributeRanges: [AwsClouddirectoryS1iInput]
  FilterTypedLink: AwsClouddirectoryStInput
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsClouddirectoryListOutgoingTypedLinksOutput {
  TypedLinkSpecifiers: [AwsClouddirectorySy]
  NextToken: String
}

input AwsClouddirectoryListPolicyAttachmentsInput {
  DirectoryArn: String!
  PolicyReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsClouddirectoryListPolicyAttachmentsOutput {
  ObjectIdentifiers: [String]
  NextToken: String
}

input AwsClouddirectoryListPublishedSchemaArnsInput {
  NextToken: String
  MaxResults: Int
}

type AwsClouddirectoryListPublishedSchemaArnsOutput {
  SchemaArns: [String]
  NextToken: String
}

input AwsClouddirectoryListTagsForResourceInput {
  ResourceArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsClouddirectoryListTagsForResourceOutput {
  Tags: [AwsClouddirectoryS6n]
  NextToken: String
}

input AwsClouddirectoryListTypedLinkFacetAttributesInput {
  SchemaArn: String!
  Name: String!
  NextToken: String
  MaxResults: Int
}

type AwsClouddirectoryListTypedLinkFacetAttributesOutput {
  Attributes: [AwsClouddirectoryS4h]
  NextToken: String
}

input AwsClouddirectoryListTypedLinkFacetNamesInput {
  SchemaArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsClouddirectoryListTypedLinkFacetNamesOutput {
  FacetNames: [String]
  NextToken: String
}

input AwsClouddirectoryLookupPolicyInput {
  DirectoryArn: String!
  ObjectReference: AwsClouddirectorySfInput!
  NextToken: String
  MaxResults: Int
}

type AwsClouddirectoryLookupPolicyOutput {
  PolicyToPathList: [AwsClouddirectoryS26]
  NextToken: String
}

input AwsClouddirectoryPublishSchemaInput {
  DevelopmentSchemaArn: String!
  Version: String!
  Name: String
}

type AwsClouddirectoryPublishSchemaOutput {
  PublishedSchemaArn: String
}

input AwsClouddirectoryPutSchemaFromJsonInput {
  SchemaArn: String!
  Document: String!
}

type AwsClouddirectoryPutSchemaFromJsonOutput {
  Arn: String
}

input AwsClouddirectoryRemoveFacetFromObjectInput {
  DirectoryArn: String!
  SchemaFacet: AwsClouddirectoryS3Input!
  ObjectReference: AwsClouddirectorySfInput!
}

input AwsClouddirectoryS1dInput {
  AttributeKey: AwsClouddirectoryS7Input
  Range: AwsClouddirectoryS1fInput
}

input AwsClouddirectoryS1fInput {
  StartMode: String!
  StartValue: AwsClouddirectoryS9Input
  EndMode: String!
  EndValue: AwsClouddirectoryS9Input
}

input AwsClouddirectoryS1iInput {
  AttributeName: String
  Range: AwsClouddirectoryS1fInput!
}

type AwsClouddirectoryS1w {
  IndexedAttributes: [AwsClouddirectoryS5]
  ObjectIdentifier: String
}

type AwsClouddirectoryS1z {
  Path: String
  ObjectIdentifiers: [String]
}

type AwsClouddirectoryS26 {
  Path: String
  Policies: [AwsClouddirectoryS26Policies]
}

type AwsClouddirectoryS26Policies {
  PolicyId: String
  ObjectIdentifier: String
  PolicyType: String
}

input AwsClouddirectoryS2qInput {
  ObjectAttributeKey: AwsClouddirectoryS7Input
  ObjectAttributeAction: AwsClouddirectoryS2qObjectAttributeActionInput
}

input AwsClouddirectoryS2qObjectAttributeActionInput {
  ObjectAttributeActionType: String
  ObjectAttributeUpdateValue: AwsClouddirectoryS9Input
}

type AwsClouddirectoryS3 {
  SchemaArn: String
  FacetName: String
}

input AwsClouddirectoryS3Input {
  SchemaArn: String
  FacetName: String
}

type AwsClouddirectoryS3t {
  Name: String!
  AttributeDefinition: AwsClouddirectoryS3tAttributeDefinition
  AttributeReference: AwsClouddirectoryS3tAttributeReference
  RequiredBehavior: String
}

type AwsClouddirectoryS3tAttributeDefinition {
  Type: String!
  DefaultValue: AwsClouddirectoryS9
  IsImmutable: Boolean
  Rules: JSON
}

input AwsClouddirectoryS3tAttributeDefinitionInput {
  Type: String!
  DefaultValue: AwsClouddirectoryS9Input
  IsImmutable: Boolean
  Rules: JSON
}

type AwsClouddirectoryS3tAttributeReference {
  TargetFacetName: String!
  TargetAttributeName: String!
}

input AwsClouddirectoryS3tAttributeReferenceInput {
  TargetFacetName: String!
  TargetAttributeName: String!
}

input AwsClouddirectoryS3tInput {
  Name: String!
  AttributeDefinition: AwsClouddirectoryS3tAttributeDefinitionInput
  AttributeReference: AwsClouddirectoryS3tAttributeReferenceInput
  RequiredBehavior: String
}

type AwsClouddirectoryS4h {
  Name: String!
  Type: String!
  DefaultValue: AwsClouddirectoryS9
  IsImmutable: Boolean
  Rules: JSON
  RequiredBehavior: String!
}

input AwsClouddirectoryS4hInput {
  Name: String!
  Type: String!
  DefaultValue: AwsClouddirectoryS9Input
  IsImmutable: Boolean
  Rules: JSON
  RequiredBehavior: String!
}

type AwsClouddirectoryS5 {
  Key: AwsClouddirectoryS7!
  Value: AwsClouddirectoryS9!
}

type AwsClouddirectoryS57 {
  Name: String
  DirectoryArn: String
  State: String
  CreationDateTime: Date
}

input AwsClouddirectoryS5Input {
  Key: AwsClouddirectoryS7Input!
  Value: AwsClouddirectoryS9Input!
}

type AwsClouddirectoryS6n {
  Key: String
  Value: String
}

input AwsClouddirectoryS6nInput {
  Key: String
  Value: String
}

type AwsClouddirectoryS7 {
  SchemaArn: String!
  FacetName: String!
  Name: String!
}

input AwsClouddirectoryS7Input {
  SchemaArn: String!
  FacetName: String!
  Name: String!
}

type AwsClouddirectoryS9 {
  StringValue: String
  BinaryValue: JSON
  BooleanValue: Boolean
  NumberValue: String
  DatetimeValue: Date
}

input AwsClouddirectoryS9Input {
  StringValue: String
  BinaryValue: JSON
  BooleanValue: Boolean
  NumberValue: String
  DatetimeValue: Date
}

type AwsClouddirectorySf {
  Selector: String
}

input AwsClouddirectorySfInput {
  Selector: String
}

type AwsClouddirectorySt {
  SchemaArn: String!
  TypedLinkName: String!
}

input AwsClouddirectoryStInput {
  SchemaArn: String!
  TypedLinkName: String!
}

type AwsClouddirectorySv {
  AttributeName: String!
  Value: AwsClouddirectoryS9!
}

input AwsClouddirectorySvInput {
  AttributeName: String!
  Value: AwsClouddirectoryS9Input!
}

type AwsClouddirectorySy {
  TypedLinkFacet: AwsClouddirectorySt!
  SourceObjectReference: AwsClouddirectorySf!
  TargetObjectReference: AwsClouddirectorySf!
  IdentityAttributeValues: [AwsClouddirectorySv]!
}

input AwsClouddirectorySyInput {
  TypedLinkFacet: AwsClouddirectoryStInput!
  SourceObjectReference: AwsClouddirectorySfInput!
  TargetObjectReference: AwsClouddirectorySfInput!
  IdentityAttributeValues: [AwsClouddirectorySvInput]!
}

input AwsClouddirectoryTagResourceInput {
  ResourceArn: String!
  Tags: [AwsClouddirectoryS6nInput]!
}

input AwsClouddirectoryUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsClouddirectoryUpdateFacetAttributeUpdatesInput {
  Attribute: AwsClouddirectoryS3tInput
  Action: String
}

input AwsClouddirectoryUpdateFacetInput {
  SchemaArn: String!
  Name: String!
  AttributeUpdates: [AwsClouddirectoryUpdateFacetAttributeUpdatesInput]
  ObjectType: String
}

input AwsClouddirectoryUpdateObjectAttributesInput {
  DirectoryArn: String!
  ObjectReference: AwsClouddirectorySfInput!
  AttributeUpdates: [AwsClouddirectoryS2qInput]!
}

type AwsClouddirectoryUpdateObjectAttributesOutput {
  ObjectIdentifier: String
}

input AwsClouddirectoryUpdateSchemaInput {
  SchemaArn: String!
  Name: String!
}

type AwsClouddirectoryUpdateSchemaOutput {
  SchemaArn: String
}

input AwsClouddirectoryUpdateTypedLinkFacetAttributeUpdatesInput {
  Attribute: AwsClouddirectoryS4hInput!
  Action: String!
}

input AwsClouddirectoryUpdateTypedLinkFacetInput {
  SchemaArn: String!
  Name: String!
  AttributeUpdates: [AwsClouddirectoryUpdateTypedLinkFacetAttributeUpdatesInput]!
  IdentityAttributeOrder: [String]!
}

# AWS CloudFormation (2010-05-15)
type AwsCloudformation {
  # cloudformation.CancelUpdateStack
  CancelUpdateStack(input: AwsCloudformationCancelUpdateStackInput!): JSON

  # cloudformation.ContinueUpdateRollback
  ContinueUpdateRollback(input: AwsCloudformationContinueUpdateRollbackInput!): JSON

  # cloudformation.CreateChangeSet
  CreateChangeSet(input: AwsCloudformationCreateChangeSetInput!): AwsCloudformationCreateChangeSetOutput

  # cloudformation.CreateStack
  CreateStack(input: AwsCloudformationCreateStackInput!): AwsCloudformationCreateStackOutput

  # cloudformation.CreateStackInstances
  CreateStackInstances(input: AwsCloudformationCreateStackInstancesInput!): AwsCloudformationCreateStackInstancesOutput

  # cloudformation.CreateStackSet
  CreateStackSet(input: AwsCloudformationCreateStackSetInput!): AwsCloudformationCreateStackSetOutput

  # cloudformation.DeleteChangeSet
  DeleteChangeSet(input: AwsCloudformationDeleteChangeSetInput!): JSON

  # cloudformation.DeleteStack
  DeleteStack(input: AwsCloudformationDeleteStackInput!): JSON

  # cloudformation.DeleteStackInstances
  DeleteStackInstances(input: AwsCloudformationDeleteStackInstancesInput!): AwsCloudformationDeleteStackInstancesOutput

  # cloudformation.DeleteStackSet
  DeleteStackSet(input: AwsCloudformationDeleteStackSetInput!): JSON

  # cloudformation.DescribeAccountLimits
  DescribeAccountLimits(input: AwsCloudformationDescribeAccountLimitsInput): AwsCloudformationDescribeAccountLimitsOutput

  # cloudformation.DescribeChangeSet
  DescribeChangeSet(input: AwsCloudformationDescribeChangeSetInput!): AwsCloudformationDescribeChangeSetOutput

  # cloudformation.DescribeStackEvents
  DescribeStackEvents(input: AwsCloudformationDescribeStackEventsInput): AwsCloudformationDescribeStackEventsOutput

  # cloudformation.DescribeStackInstance
  DescribeStackInstance(input: AwsCloudformationDescribeStackInstanceInput!): AwsCloudformationDescribeStackInstanceOutput

  # cloudformation.DescribeStackResource
  DescribeStackResource(input: AwsCloudformationDescribeStackResourceInput!): AwsCloudformationDescribeStackResourceOutput

  # cloudformation.DescribeStackResources
  DescribeStackResources(input: AwsCloudformationDescribeStackResourcesInput): AwsCloudformationDescribeStackResourcesOutput

  # cloudformation.DescribeStackSet
  DescribeStackSet(input: AwsCloudformationDescribeStackSetInput!): AwsCloudformationDescribeStackSetOutput

  # cloudformation.DescribeStackSetOperation
  DescribeStackSetOperation(input: AwsCloudformationDescribeStackSetOperationInput!): AwsCloudformationDescribeStackSetOperationOutput

  # cloudformation.DescribeStacks
  DescribeStacks(input: AwsCloudformationDescribeStacksInput): AwsCloudformationDescribeStacksOutput

  # cloudformation.EstimateTemplateCost
  EstimateTemplateCost(input: AwsCloudformationEstimateTemplateCostInput): AwsCloudformationEstimateTemplateCostOutput

  # cloudformation.ExecuteChangeSet
  ExecuteChangeSet(input: AwsCloudformationExecuteChangeSetInput!): JSON

  # cloudformation.GetStackPolicy
  GetStackPolicy(input: AwsCloudformationGetStackPolicyInput!): AwsCloudformationGetStackPolicyOutput

  # cloudformation.GetTemplate
  GetTemplate(input: AwsCloudformationGetTemplateInput): AwsCloudformationGetTemplateOutput

  # cloudformation.GetTemplateSummary
  GetTemplateSummary(input: AwsCloudformationGetTemplateSummaryInput): AwsCloudformationGetTemplateSummaryOutput

  # cloudformation.ListChangeSets
  ListChangeSets(input: AwsCloudformationListChangeSetsInput!): AwsCloudformationListChangeSetsOutput

  # cloudformation.ListExports
  ListExports(input: AwsCloudformationListExportsInput): AwsCloudformationListExportsOutput

  # cloudformation.ListImports
  ListImports(input: AwsCloudformationListImportsInput!): AwsCloudformationListImportsOutput

  # cloudformation.ListStackInstances
  ListStackInstances(input: AwsCloudformationListStackInstancesInput!): AwsCloudformationListStackInstancesOutput

  # cloudformation.ListStackResources
  ListStackResources(input: AwsCloudformationListStackResourcesInput!): AwsCloudformationListStackResourcesOutput

  # cloudformation.ListStackSetOperationResults
  ListStackSetOperationResults(input: AwsCloudformationListStackSetOperationResultsInput!): AwsCloudformationListStackSetOperationResultsOutput

  # cloudformation.ListStackSetOperations
  ListStackSetOperations(input: AwsCloudformationListStackSetOperationsInput!): AwsCloudformationListStackSetOperationsOutput

  # cloudformation.ListStackSets
  ListStackSets(input: AwsCloudformationListStackSetsInput): AwsCloudformationListStackSetsOutput

  # cloudformation.ListStacks
  ListStacks(input: AwsCloudformationListStacksInput): AwsCloudformationListStacksOutput

  # cloudformation.SetStackPolicy
  SetStackPolicy(input: AwsCloudformationSetStackPolicyInput!): JSON

  # cloudformation.SignalResource
  SignalResource(input: AwsCloudformationSignalResourceInput!): JSON

  # cloudformation.StopStackSetOperation
  StopStackSetOperation(input: AwsCloudformationStopStackSetOperationInput!): JSON

  # cloudformation.UpdateStack
  UpdateStack(input: AwsCloudformationUpdateStackInput!): AwsCloudformationUpdateStackOutput

  # cloudformation.UpdateStackInstances
  UpdateStackInstances(input: AwsCloudformationUpdateStackInstancesInput!): AwsCloudformationUpdateStackInstancesOutput

  # cloudformation.UpdateStackSet
  UpdateStackSet(input: AwsCloudformationUpdateStackSetInput!): AwsCloudformationUpdateStackSetOutput

  # cloudformation.UpdateTerminationProtection
  UpdateTerminationProtection(input: AwsCloudformationUpdateTerminationProtectionInput!): AwsCloudformationUpdateTerminationProtectionOutput

  # cloudformation.ValidateTemplate
  ValidateTemplate(input: AwsCloudformationValidateTemplateInput): AwsCloudformationValidateTemplateOutput
}

input AwsCloudformationCancelUpdateStackInput {
  StackName: String!
  ClientRequestToken: String
}

input AwsCloudformationContinueUpdateRollbackInput {
  StackName: String!
  RoleARN: String
  ResourcesToSkip: [String]
  ClientRequestToken: String
}

input AwsCloudformationCreateChangeSetInput {
  StackName: String!
  TemplateBody: String
  TemplateURL: String
  UsePreviousTemplate: Boolean
  Parameters: [AwsCloudformationSeInput]
  Capabilities: [String]
  ResourceTypes: [String]
  RoleARN: String
  RollbackConfiguration: AwsCloudformationSnInput
  NotificationARNs: [String]
  Tags: [AwsCloudformationSvInput]
  ChangeSetName: String!
  ClientToken: String
  Description: String
  ChangeSetType: String
}

type AwsCloudformationCreateChangeSetOutput {
  Id: String
  StackId: String
}

input AwsCloudformationCreateStackInput {
  StackName: String!
  TemplateBody: String
  TemplateURL: String
  Parameters: [AwsCloudformationSeInput]
  DisableRollback: Boolean
  RollbackConfiguration: AwsCloudformationSnInput
  TimeoutInMinutes: Int
  NotificationARNs: [String]
  Capabilities: [String]
  ResourceTypes: [String]
  RoleARN: String
  OnFailure: String
  StackPolicyBody: String
  StackPolicyURL: String
  Tags: [AwsCloudformationSvInput]
  ClientRequestToken: String
  EnableTerminationProtection: Boolean
}

input AwsCloudformationCreateStackInstancesInput {
  StackSetName: String!
  Accounts: [String]!
  Regions: [String]!
  ParameterOverrides: [AwsCloudformationSeInput]
  OperationPreferences: AwsCloudformationS1kInput
  OperationId: String
}

type AwsCloudformationCreateStackInstancesOutput {
  OperationId: String
}

type AwsCloudformationCreateStackOutput {
  StackId: String
}

input AwsCloudformationCreateStackSetInput {
  StackSetName: String!
  Description: String
  TemplateBody: String
  TemplateURL: String
  Parameters: [AwsCloudformationSeInput]
  Capabilities: [String]
  Tags: [AwsCloudformationSvInput]
  ClientRequestToken: String
}

type AwsCloudformationCreateStackSetOutput {
  StackSetId: String
}

input AwsCloudformationDeleteChangeSetInput {
  ChangeSetName: String!
  StackName: String
}

input AwsCloudformationDeleteStackInput {
  StackName: String!
  RetainResources: [String]
  RoleARN: String
  ClientRequestToken: String
}

input AwsCloudformationDeleteStackInstancesInput {
  StackSetName: String!
  Accounts: [String]!
  Regions: [String]!
  OperationPreferences: AwsCloudformationS1kInput
  RetainStacks: Boolean!
  OperationId: String
}

type AwsCloudformationDeleteStackInstancesOutput {
  OperationId: String
}

input AwsCloudformationDeleteStackSetInput {
  StackSetName: String!
}

input AwsCloudformationDescribeAccountLimitsInput {
  NextToken: String
}

type AwsCloudformationDescribeAccountLimitsOutput {
  AccountLimits: [AwsCloudformationDescribeAccountLimitsOutputAccountLimits]
  NextToken: String
}

type AwsCloudformationDescribeAccountLimitsOutputAccountLimits {
  Name: String
  Value: Int
}

input AwsCloudformationDescribeChangeSetInput {
  ChangeSetName: String!
  StackName: String
  NextToken: String
}

type AwsCloudformationDescribeChangeSetOutput {
  ChangeSetName: String
  ChangeSetId: String
  StackId: String
  StackName: String
  Description: String
  Parameters: [AwsCloudformationSe]
  CreationTime: Date
  ExecutionStatus: String
  Status: String
  StatusReason: String
  NotificationARNs: [String]
  RollbackConfiguration: AwsCloudformationSn
  Capabilities: [String]
  Tags: [AwsCloudformationSv]
  Changes: [AwsCloudformationDescribeChangeSetOutputChanges]
  NextToken: String
}

type AwsCloudformationDescribeChangeSetOutputChanges {
  Type: String
  ResourceChange: AwsCloudformationDescribeChangeSetOutputChangesResourceChange
}

type AwsCloudformationDescribeChangeSetOutputChangesResourceChange {
  Action: String
  LogicalResourceId: String
  PhysicalResourceId: String
  ResourceType: String
  Replacement: String
  Scope: [String]
  Details: [AwsCloudformationDescribeChangeSetOutputChangesResourceChangeDetails]
}

type AwsCloudformationDescribeChangeSetOutputChangesResourceChangeDetails {
  Target: AwsCloudformationDescribeChangeSetOutputChangesResourceChangeDetailsTarget
  Evaluation: String
  ChangeSource: String
  CausingEntity: String
}

type AwsCloudformationDescribeChangeSetOutputChangesResourceChangeDetailsTarget {
  Attribute: String
  Name: String
  RequiresRecreation: String
}

input AwsCloudformationDescribeStackEventsInput {
  StackName: String
  NextToken: String
}

type AwsCloudformationDescribeStackEventsOutput {
  StackEvents: [AwsCloudformationDescribeStackEventsOutputStackEvents]
  NextToken: String
}

type AwsCloudformationDescribeStackEventsOutputStackEvents {
  StackId: String!
  EventId: String!
  StackName: String!
  LogicalResourceId: String
  PhysicalResourceId: String
  ResourceType: String
  Timestamp: Date!
  ResourceStatus: String
  ResourceStatusReason: String
  ResourceProperties: String
  ClientRequestToken: String
}

input AwsCloudformationDescribeStackInstanceInput {
  StackSetName: String!
  StackInstanceAccount: String!
  StackInstanceRegion: String!
}

type AwsCloudformationDescribeStackInstanceOutput {
  StackInstance: AwsCloudformationDescribeStackInstanceOutputStackInstance
}

type AwsCloudformationDescribeStackInstanceOutputStackInstance {
  StackSetId: String
  Region: String
  Account: String
  StackId: String
  ParameterOverrides: [AwsCloudformationSe]
  Status: String
  StatusReason: String
}

input AwsCloudformationDescribeStackResourceInput {
  StackName: String!
  LogicalResourceId: String!
}

type AwsCloudformationDescribeStackResourceOutput {
  StackResourceDetail: AwsCloudformationDescribeStackResourceOutputStackResourceDetail
}

type AwsCloudformationDescribeStackResourceOutputStackResourceDetail {
  StackName: String
  StackId: String
  LogicalResourceId: String!
  PhysicalResourceId: String
  ResourceType: String!
  LastUpdatedTimestamp: Date!
  ResourceStatus: String!
  ResourceStatusReason: String
  Description: String
  Metadata: String
}

input AwsCloudformationDescribeStackResourcesInput {
  StackName: String
  LogicalResourceId: String
  PhysicalResourceId: String
}

type AwsCloudformationDescribeStackResourcesOutput {
  StackResources: [AwsCloudformationDescribeStackResourcesOutputStackResources]
}

type AwsCloudformationDescribeStackResourcesOutputStackResources {
  StackName: String
  StackId: String
  LogicalResourceId: String!
  PhysicalResourceId: String
  ResourceType: String!
  Timestamp: Date!
  ResourceStatus: String!
  ResourceStatusReason: String
  Description: String
}

input AwsCloudformationDescribeStackSetInput {
  StackSetName: String!
}

input AwsCloudformationDescribeStackSetOperationInput {
  StackSetName: String!
  OperationId: String!
}

type AwsCloudformationDescribeStackSetOperationOutput {
  StackSetOperation: AwsCloudformationDescribeStackSetOperationOutputStackSetOperation
}

type AwsCloudformationDescribeStackSetOperationOutputStackSetOperation {
  OperationId: String
  StackSetId: String
  Action: String
  Status: String
  OperationPreferences: AwsCloudformationS1k
  RetainStacks: Boolean
  CreationTimestamp: Date
  EndTimestamp: Date
}

type AwsCloudformationDescribeStackSetOutput {
  StackSet: AwsCloudformationDescribeStackSetOutputStackSet
}

type AwsCloudformationDescribeStackSetOutputStackSet {
  StackSetName: String
  StackSetId: String
  Description: String
  Status: String
  TemplateBody: String
  Parameters: [AwsCloudformationSe]
  Capabilities: [String]
  Tags: [AwsCloudformationSv]
}

input AwsCloudformationDescribeStacksInput {
  StackName: String
  NextToken: String
}

type AwsCloudformationDescribeStacksOutput {
  Stacks: [AwsCloudformationDescribeStacksOutputStacks]
  NextToken: String
}

type AwsCloudformationDescribeStacksOutputStacks {
  StackId: String
  StackName: String!
  ChangeSetId: String
  Description: String
  Parameters: [AwsCloudformationSe]
  CreationTime: Date!
  DeletionTime: Date
  LastUpdatedTime: Date
  RollbackConfiguration: AwsCloudformationSn
  StackStatus: String!
  StackStatusReason: String
  DisableRollback: Boolean
  NotificationARNs: [String]
  TimeoutInMinutes: Int
  Capabilities: [String]
  Outputs: [AwsCloudformationDescribeStacksOutputStacksOutputs]
  RoleARN: String
  Tags: [AwsCloudformationSv]
  EnableTerminationProtection: Boolean
  ParentId: String
  RootId: String
}

type AwsCloudformationDescribeStacksOutputStacksOutputs {
  OutputKey: String
  OutputValue: String
  Description: String
  ExportName: String
}

input AwsCloudformationEstimateTemplateCostInput {
  TemplateBody: String
  TemplateURL: String
  Parameters: [AwsCloudformationSeInput]
}

type AwsCloudformationEstimateTemplateCostOutput {
  Url: String
}

input AwsCloudformationExecuteChangeSetInput {
  ChangeSetName: String!
  StackName: String
  ClientRequestToken: String
}

input AwsCloudformationGetStackPolicyInput {
  StackName: String!
}

type AwsCloudformationGetStackPolicyOutput {
  StackPolicyBody: String
}

input AwsCloudformationGetTemplateInput {
  StackName: String
  ChangeSetName: String
  TemplateStage: String
}

type AwsCloudformationGetTemplateOutput {
  TemplateBody: String
  StagesAvailable: [String]
}

input AwsCloudformationGetTemplateSummaryInput {
  TemplateBody: String
  TemplateURL: String
  StackName: String
  StackSetName: String
}

type AwsCloudformationGetTemplateSummaryOutput {
  Parameters: [AwsCloudformationGetTemplateSummaryOutputParameters]
  Description: String
  Capabilities: [String]
  CapabilitiesReason: String
  ResourceTypes: [String]
  Version: String
  Metadata: String
  DeclaredTransforms: [String]
}

type AwsCloudformationGetTemplateSummaryOutputParameters {
  ParameterKey: String
  DefaultValue: String
  ParameterType: String
  NoEcho: Boolean
  Description: String
  ParameterConstraints: AwsCloudformationGetTemplateSummaryOutputParametersParameterConstraints
}

type AwsCloudformationGetTemplateSummaryOutputParametersParameterConstraints {
  AllowedValues: [String]
}

input AwsCloudformationListChangeSetsInput {
  StackName: String!
  NextToken: String
}

type AwsCloudformationListChangeSetsOutput {
  Summaries: [AwsCloudformationListChangeSetsOutputSummaries]
  NextToken: String
}

type AwsCloudformationListChangeSetsOutputSummaries {
  StackId: String
  StackName: String
  ChangeSetId: String
  ChangeSetName: String
  ExecutionStatus: String
  Status: String
  StatusReason: String
  CreationTime: Date
  Description: String
}

input AwsCloudformationListExportsInput {
  NextToken: String
}

type AwsCloudformationListExportsOutput {
  Exports: [AwsCloudformationListExportsOutputExports]
  NextToken: String
}

type AwsCloudformationListExportsOutputExports {
  ExportingStackId: String
  Name: String
  Value: String
}

input AwsCloudformationListImportsInput {
  ExportName: String!
  NextToken: String
}

type AwsCloudformationListImportsOutput {
  Imports: [String]
  NextToken: String
}

input AwsCloudformationListStackInstancesInput {
  StackSetName: String!
  NextToken: String
  MaxResults: Int
  StackInstanceAccount: String
  StackInstanceRegion: String
}

type AwsCloudformationListStackInstancesOutput {
  Summaries: [AwsCloudformationListStackInstancesOutputSummaries]
  NextToken: String
}

type AwsCloudformationListStackInstancesOutputSummaries {
  StackSetId: String
  Region: String
  Account: String
  StackId: String
  Status: String
  StatusReason: String
}

input AwsCloudformationListStackResourcesInput {
  StackName: String!
  NextToken: String
}

type AwsCloudformationListStackResourcesOutput {
  StackResourceSummaries: [AwsCloudformationListStackResourcesOutputStackResourceSummaries]
  NextToken: String
}

type AwsCloudformationListStackResourcesOutputStackResourceSummaries {
  LogicalResourceId: String!
  PhysicalResourceId: String
  ResourceType: String!
  LastUpdatedTimestamp: Date!
  ResourceStatus: String!
  ResourceStatusReason: String
}

input AwsCloudformationListStackSetOperationResultsInput {
  StackSetName: String!
  OperationId: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudformationListStackSetOperationResultsOutput {
  Summaries: [AwsCloudformationListStackSetOperationResultsOutputSummaries]
  NextToken: String
}

type AwsCloudformationListStackSetOperationResultsOutputSummaries {
  Account: String
  Region: String
  Status: String
  StatusReason: String
  AccountGateResult: AwsCloudformationListStackSetOperationResultsOutputSummariesAccountGateResult
}

type AwsCloudformationListStackSetOperationResultsOutputSummariesAccountGateResult {
  Status: String
  StatusReason: String
}

input AwsCloudformationListStackSetOperationsInput {
  StackSetName: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudformationListStackSetOperationsOutput {
  Summaries: [AwsCloudformationListStackSetOperationsOutputSummaries]
  NextToken: String
}

type AwsCloudformationListStackSetOperationsOutputSummaries {
  OperationId: String
  Action: String
  Status: String
  CreationTimestamp: Date
  EndTimestamp: Date
}

input AwsCloudformationListStackSetsInput {
  NextToken: String
  MaxResults: Int
  Status: String
}

type AwsCloudformationListStackSetsOutput {
  Summaries: [AwsCloudformationListStackSetsOutputSummaries]
  NextToken: String
}

type AwsCloudformationListStackSetsOutputSummaries {
  StackSetName: String
  StackSetId: String
  Description: String
  Status: String
}

input AwsCloudformationListStacksInput {
  NextToken: String
  StackStatusFilter: [String]
}

type AwsCloudformationListStacksOutput {
  StackSummaries: [AwsCloudformationListStacksOutputStackSummaries]
  NextToken: String
}

type AwsCloudformationListStacksOutputStackSummaries {
  StackId: String
  StackName: String!
  TemplateDescription: String
  CreationTime: Date!
  LastUpdatedTime: Date
  DeletionTime: Date
  StackStatus: String!
  StackStatusReason: String
  ParentId: String
  RootId: String
}

type AwsCloudformationS1k {
  RegionOrder: [String]
  FailureToleranceCount: Int
  FailureTolerancePercentage: Int
  MaxConcurrentCount: Int
  MaxConcurrentPercentage: Int
}

input AwsCloudformationS1kInput {
  RegionOrder: [String]
  FailureToleranceCount: Int
  FailureTolerancePercentage: Int
  MaxConcurrentCount: Int
  MaxConcurrentPercentage: Int
}

type AwsCloudformationSe {
  ParameterKey: String
  ParameterValue: String
  UsePreviousValue: Boolean
  ResolvedValue: String
}

input AwsCloudformationSeInput {
  ParameterKey: String
  ParameterValue: String
  UsePreviousValue: Boolean
  ResolvedValue: String
}

input AwsCloudformationSetStackPolicyInput {
  StackName: String!
  StackPolicyBody: String
  StackPolicyURL: String
}

input AwsCloudformationSignalResourceInput {
  StackName: String!
  LogicalResourceId: String!
  UniqueId: String!
  Status: String!
}

type AwsCloudformationSn {
  RollbackTriggers: [AwsCloudformationSnRollbackTriggers]
  MonitoringTimeInMinutes: Int
}

input AwsCloudformationSnInput {
  RollbackTriggers: [AwsCloudformationSnRollbackTriggersInput]
  MonitoringTimeInMinutes: Int
}

type AwsCloudformationSnRollbackTriggers {
  Arn: String!
  Type: String!
}

input AwsCloudformationSnRollbackTriggersInput {
  Arn: String!
  Type: String!
}

input AwsCloudformationStopStackSetOperationInput {
  StackSetName: String!
  OperationId: String!
}

type AwsCloudformationSv {
  Key: String!
  Value: String!
}

input AwsCloudformationSvInput {
  Key: String!
  Value: String!
}

input AwsCloudformationUpdateStackInput {
  StackName: String!
  TemplateBody: String
  TemplateURL: String
  UsePreviousTemplate: Boolean
  StackPolicyDuringUpdateBody: String
  StackPolicyDuringUpdateURL: String
  Parameters: [AwsCloudformationSeInput]
  Capabilities: [String]
  ResourceTypes: [String]
  RoleARN: String
  RollbackConfiguration: AwsCloudformationSnInput
  StackPolicyBody: String
  StackPolicyURL: String
  NotificationARNs: [String]
  Tags: [AwsCloudformationSvInput]
  ClientRequestToken: String
}

input AwsCloudformationUpdateStackInstancesInput {
  StackSetName: String!
  Accounts: [String]!
  Regions: [String]!
  ParameterOverrides: [AwsCloudformationSeInput]
  OperationPreferences: AwsCloudformationS1kInput
  OperationId: String
}

type AwsCloudformationUpdateStackInstancesOutput {
  OperationId: String
}

type AwsCloudformationUpdateStackOutput {
  StackId: String
}

input AwsCloudformationUpdateStackSetInput {
  StackSetName: String!
  Description: String
  TemplateBody: String
  TemplateURL: String
  UsePreviousTemplate: Boolean
  Parameters: [AwsCloudformationSeInput]
  Capabilities: [String]
  Tags: [AwsCloudformationSvInput]
  OperationPreferences: AwsCloudformationS1kInput
  OperationId: String
}

type AwsCloudformationUpdateStackSetOutput {
  OperationId: String
}

input AwsCloudformationUpdateTerminationProtectionInput {
  EnableTerminationProtection: Boolean!
  StackName: String!
}

type AwsCloudformationUpdateTerminationProtectionOutput {
  StackId: String
}

input AwsCloudformationValidateTemplateInput {
  TemplateBody: String
  TemplateURL: String
}

type AwsCloudformationValidateTemplateOutput {
  Parameters: [AwsCloudformationValidateTemplateOutputParameters]
  Description: String
  Capabilities: [String]
  CapabilitiesReason: String
  DeclaredTransforms: [String]
}

type AwsCloudformationValidateTemplateOutputParameters {
  ParameterKey: String
  DefaultValue: String
  NoEcho: Boolean
  Description: String
}

# Amazon CloudFront (2017-03-25)
type AwsCloudfront {
  # cloudfront.CreateCloudFrontOriginAccessIdentity
  CreateCloudFrontOriginAccessIdentity(input: AwsCloudfrontCreateCloudFrontOriginAccessIdentityInput!): AwsCloudfrontCreateCloudFrontOriginAccessIdentityOutput

  # cloudfront.CreateDistribution
  CreateDistribution(input: AwsCloudfrontCreateDistributionInput!): AwsCloudfrontCreateDistributionOutput

  # cloudfront.CreateDistributionWithTags
  CreateDistributionWithTags(input: AwsCloudfrontCreateDistributionWithTagsInput!): AwsCloudfrontCreateDistributionWithTagsOutput

  # cloudfront.CreateInvalidation
  CreateInvalidation(input: AwsCloudfrontCreateInvalidationInput!): AwsCloudfrontCreateInvalidationOutput

  # cloudfront.CreateStreamingDistribution
  CreateStreamingDistribution(input: AwsCloudfrontCreateStreamingDistributionInput!): AwsCloudfrontCreateStreamingDistributionOutput

  # cloudfront.CreateStreamingDistributionWithTags
  CreateStreamingDistributionWithTags(input: AwsCloudfrontCreateStreamingDistributionWithTagsInput!): AwsCloudfrontCreateStreamingDistributionWithTagsOutput

  # cloudfront.DeleteCloudFrontOriginAccessIdentity
  DeleteCloudFrontOriginAccessIdentity(input: AwsCloudfrontDeleteCloudFrontOriginAccessIdentityInput!): JSON

  # cloudfront.DeleteDistribution
  DeleteDistribution(input: AwsCloudfrontDeleteDistributionInput!): JSON

  # cloudfront.DeleteServiceLinkedRole
  DeleteServiceLinkedRole(input: AwsCloudfrontDeleteServiceLinkedRoleInput!): JSON

  # cloudfront.DeleteStreamingDistribution
  DeleteStreamingDistribution(input: AwsCloudfrontDeleteStreamingDistributionInput!): JSON

  # cloudfront.GetCloudFrontOriginAccessIdentity
  GetCloudFrontOriginAccessIdentity(input: AwsCloudfrontGetCloudFrontOriginAccessIdentityInput!): AwsCloudfrontGetCloudFrontOriginAccessIdentityOutput

  # cloudfront.GetCloudFrontOriginAccessIdentityConfig
  GetCloudFrontOriginAccessIdentityConfig(input: AwsCloudfrontGetCloudFrontOriginAccessIdentityConfigInput!): AwsCloudfrontGetCloudFrontOriginAccessIdentityConfigOutput

  # cloudfront.GetDistribution
  GetDistribution(input: AwsCloudfrontGetDistributionInput!): AwsCloudfrontGetDistributionOutput

  # cloudfront.GetDistributionConfig
  GetDistributionConfig(input: AwsCloudfrontGetDistributionConfigInput!): AwsCloudfrontGetDistributionConfigOutput

  # cloudfront.GetInvalidation
  GetInvalidation(input: AwsCloudfrontGetInvalidationInput!): AwsCloudfrontGetInvalidationOutput

  # cloudfront.GetStreamingDistribution
  GetStreamingDistribution(input: AwsCloudfrontGetStreamingDistributionInput!): AwsCloudfrontGetStreamingDistributionOutput

  # cloudfront.GetStreamingDistributionConfig
  GetStreamingDistributionConfig(input: AwsCloudfrontGetStreamingDistributionConfigInput!): AwsCloudfrontGetStreamingDistributionConfigOutput

  # cloudfront.ListCloudFrontOriginAccessIdentities
  ListCloudFrontOriginAccessIdentities(input: AwsCloudfrontListCloudFrontOriginAccessIdentitiesInput): AwsCloudfrontListCloudFrontOriginAccessIdentitiesOutput

  # cloudfront.ListDistributions
  ListDistributions(input: AwsCloudfrontListDistributionsInput): AwsCloudfrontListDistributionsOutput

  # cloudfront.ListDistributionsByWebACLId
  ListDistributionsByWebACLId(input: AwsCloudfrontListDistributionsByWebACLIdInput!): AwsCloudfrontListDistributionsByWebACLIdOutput

  # cloudfront.ListInvalidations
  ListInvalidations(input: AwsCloudfrontListInvalidationsInput!): AwsCloudfrontListInvalidationsOutput

  # cloudfront.ListStreamingDistributions
  ListStreamingDistributions(input: AwsCloudfrontListStreamingDistributionsInput): AwsCloudfrontListStreamingDistributionsOutput

  # cloudfront.ListTagsForResource
  ListTagsForResource(input: AwsCloudfrontListTagsForResourceInput!): AwsCloudfrontListTagsForResourceOutput

  # cloudfront.TagResource
  TagResource(input: AwsCloudfrontTagResourceInput!): JSON

  # cloudfront.UntagResource
  UntagResource(input: AwsCloudfrontUntagResourceInput!): JSON

  # cloudfront.UpdateCloudFrontOriginAccessIdentity
  UpdateCloudFrontOriginAccessIdentity(input: AwsCloudfrontUpdateCloudFrontOriginAccessIdentityInput!): AwsCloudfrontUpdateCloudFrontOriginAccessIdentityOutput

  # cloudfront.UpdateDistribution
  UpdateDistribution(input: AwsCloudfrontUpdateDistributionInput!): AwsCloudfrontUpdateDistributionOutput

  # cloudfront.UpdateStreamingDistribution
  UpdateStreamingDistribution(input: AwsCloudfrontUpdateStreamingDistributionInput!): AwsCloudfrontUpdateStreamingDistributionOutput
}

input AwsCloudfrontCreateCloudFrontOriginAccessIdentityInput {
  CloudFrontOriginAccessIdentityConfig: AwsCloudfrontS2Input!
}

type AwsCloudfrontCreateCloudFrontOriginAccessIdentityOutput {
  CloudFrontOriginAccessIdentity: AwsCloudfrontS5
  Location: String
  ETag: String
}

input AwsCloudfrontCreateDistributionInput {
  DistributionConfig: AwsCloudfrontS7Input!
}

type AwsCloudfrontCreateDistributionOutput {
  Distribution: AwsCloudfrontS1s
  Location: String
  ETag: String
}

input AwsCloudfrontCreateDistributionWithTagsDistributionConfigWithTagsInput {
  DistributionConfig: AwsCloudfrontS7Input!
  Tags: AwsCloudfrontS21Input!
}

input AwsCloudfrontCreateDistributionWithTagsInput {
  DistributionConfigWithTags: AwsCloudfrontCreateDistributionWithTagsDistributionConfigWithTagsInput!
}

type AwsCloudfrontCreateDistributionWithTagsOutput {
  Distribution: AwsCloudfrontS1s
  Location: String
  ETag: String
}

input AwsCloudfrontCreateInvalidationInput {
  DistributionId: String!
  InvalidationBatch: AwsCloudfrontS28Input!
}

type AwsCloudfrontCreateInvalidationOutput {
  Location: String
  Invalidation: AwsCloudfrontS2c
}

input AwsCloudfrontCreateStreamingDistributionInput {
  StreamingDistributionConfig: AwsCloudfrontS2eInput!
}

type AwsCloudfrontCreateStreamingDistributionOutput {
  StreamingDistribution: AwsCloudfrontS2i
  Location: String
  ETag: String
}

input AwsCloudfrontCreateStreamingDistributionWithTagsInput {
  StreamingDistributionConfigWithTags: AwsCloudfrontCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsInput!
}

type AwsCloudfrontCreateStreamingDistributionWithTagsOutput {
  StreamingDistribution: AwsCloudfrontS2i
  Location: String
  ETag: String
}

input AwsCloudfrontCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsInput {
  StreamingDistributionConfig: AwsCloudfrontS2eInput!
  Tags: AwsCloudfrontS21Input!
}

input AwsCloudfrontDeleteCloudFrontOriginAccessIdentityInput {
  Id: String!
  IfMatch: String
}

input AwsCloudfrontDeleteDistributionInput {
  Id: String!
  IfMatch: String
}

input AwsCloudfrontDeleteServiceLinkedRoleInput {
  RoleName: String!
}

input AwsCloudfrontDeleteStreamingDistributionInput {
  Id: String!
  IfMatch: String
}

input AwsCloudfrontGetCloudFrontOriginAccessIdentityConfigInput {
  Id: String!
}

type AwsCloudfrontGetCloudFrontOriginAccessIdentityConfigOutput {
  CloudFrontOriginAccessIdentityConfig: AwsCloudfrontS2
  ETag: String
}

input AwsCloudfrontGetCloudFrontOriginAccessIdentityInput {
  Id: String!
}

type AwsCloudfrontGetCloudFrontOriginAccessIdentityOutput {
  CloudFrontOriginAccessIdentity: AwsCloudfrontS5
  ETag: String
}

input AwsCloudfrontGetDistributionConfigInput {
  Id: String!
}

type AwsCloudfrontGetDistributionConfigOutput {
  DistributionConfig: AwsCloudfrontS7
  ETag: String
}

input AwsCloudfrontGetDistributionInput {
  Id: String!
}

type AwsCloudfrontGetDistributionOutput {
  Distribution: AwsCloudfrontS1s
  ETag: String
}

input AwsCloudfrontGetInvalidationInput {
  DistributionId: String!
  Id: String!
}

type AwsCloudfrontGetInvalidationOutput {
  Invalidation: AwsCloudfrontS2c
}

input AwsCloudfrontGetStreamingDistributionConfigInput {
  Id: String!
}

type AwsCloudfrontGetStreamingDistributionConfigOutput {
  StreamingDistributionConfig: AwsCloudfrontS2e
  ETag: String
}

input AwsCloudfrontGetStreamingDistributionInput {
  Id: String!
}

type AwsCloudfrontGetStreamingDistributionOutput {
  StreamingDistribution: AwsCloudfrontS2i
  ETag: String
}

input AwsCloudfrontListCloudFrontOriginAccessIdentitiesInput {
  Marker: String
  MaxItems: String
}

type AwsCloudfrontListCloudFrontOriginAccessIdentitiesOutput {
  CloudFrontOriginAccessIdentityList: AwsCloudfrontListCloudFrontOriginAccessIdentitiesOutputCloudFrontOriginAccessIdentityList
}

type AwsCloudfrontListCloudFrontOriginAccessIdentitiesOutputCloudFrontOriginAccessIdentityList {
  Marker: String!
  NextMarker: String
  MaxItems: Int!
  IsTruncated: Boolean!
  Quantity: Int!
  Items: [AwsCloudfrontListCloudFrontOriginAccessIdentitiesOutputCloudFrontOriginAccessIdentityListItems]
}

type AwsCloudfrontListCloudFrontOriginAccessIdentitiesOutputCloudFrontOriginAccessIdentityListItems {
  Id: String!
  S3CanonicalUserId: String!
  Comment: String!
}

input AwsCloudfrontListDistributionsByWebACLIdInput {
  Marker: String
  MaxItems: String
  WebACLId: String!
}

type AwsCloudfrontListDistributionsByWebACLIdOutput {
  DistributionList: AwsCloudfrontS3b
}

input AwsCloudfrontListDistributionsInput {
  Marker: String
  MaxItems: String
}

type AwsCloudfrontListDistributionsOutput {
  DistributionList: AwsCloudfrontS3b
}

input AwsCloudfrontListInvalidationsInput {
  DistributionId: String!
  Marker: String
  MaxItems: String
}

type AwsCloudfrontListInvalidationsOutput {
  InvalidationList: AwsCloudfrontListInvalidationsOutputInvalidationList
}

type AwsCloudfrontListInvalidationsOutputInvalidationList {
  Marker: String!
  NextMarker: String
  MaxItems: Int!
  IsTruncated: Boolean!
  Quantity: Int!
  Items: [AwsCloudfrontListInvalidationsOutputInvalidationListItems]
}

type AwsCloudfrontListInvalidationsOutputInvalidationListItems {
  Id: String!
  CreateTime: Date!
  Status: String!
}

input AwsCloudfrontListStreamingDistributionsInput {
  Marker: String
  MaxItems: String
}

type AwsCloudfrontListStreamingDistributionsOutput {
  StreamingDistributionList: AwsCloudfrontListStreamingDistributionsOutputStreamingDistributionList
}

type AwsCloudfrontListStreamingDistributionsOutputStreamingDistributionList {
  Marker: String!
  NextMarker: String
  MaxItems: Int!
  IsTruncated: Boolean!
  Quantity: Int!
  Items: [AwsCloudfrontListStreamingDistributionsOutputStreamingDistributionListItems]
}

type AwsCloudfrontListStreamingDistributionsOutputStreamingDistributionListItems {
  Id: String!
  ARN: String!
  Status: String!
  LastModifiedTime: Date!
  DomainName: String!
  S3Origin: AwsCloudfrontS2f!
  Aliases: AwsCloudfrontS8!
  TrustedSigners: AwsCloudfrontSy!
  Comment: String!
  PriceClass: String!
  Enabled: Boolean!
}

input AwsCloudfrontListTagsForResourceInput {
  Resource: String!
}

type AwsCloudfrontListTagsForResourceOutput {
  Tags: AwsCloudfrontS21!
}

type AwsCloudfrontS12 {
  Quantity: Int!
  Items: [String]!
  CachedMethods: AwsCloudfrontS12CachedMethods
}

type AwsCloudfrontS12CachedMethods {
  Quantity: Int!
  Items: [String]!
}

input AwsCloudfrontS12CachedMethodsInput {
  Quantity: Int!
  Items: [String]!
}

input AwsCloudfrontS12Input {
  Quantity: Int!
  Items: [String]!
  CachedMethods: AwsCloudfrontS12CachedMethodsInput
}

type AwsCloudfrontS16 {
  Quantity: Int!
  Items: [AwsCloudfrontS16Items]
}

input AwsCloudfrontS16Input {
  Quantity: Int!
  Items: [AwsCloudfrontS16ItemsInput]
}

type AwsCloudfrontS16Items {
  LambdaFunctionARN: String
  EventType: String
}

input AwsCloudfrontS16ItemsInput {
  LambdaFunctionARN: String
  EventType: String
}

type AwsCloudfrontS1a {
  Quantity: Int!
  Items: [AwsCloudfrontS1aItems]
}

input AwsCloudfrontS1aInput {
  Quantity: Int!
  Items: [AwsCloudfrontS1aItemsInput]
}

type AwsCloudfrontS1aItems {
  PathPattern: String!
  TargetOriginId: String!
  ForwardedValues: AwsCloudfrontSo!
  TrustedSigners: AwsCloudfrontSy!
  ViewerProtocolPolicy: String!
  MinTTL: JSON!
  AllowedMethods: AwsCloudfrontS12
  SmoothStreaming: Boolean
  DefaultTTL: JSON
  MaxTTL: JSON
  Compress: Boolean
  LambdaFunctionAssociations: AwsCloudfrontS16
}

input AwsCloudfrontS1aItemsInput {
  PathPattern: String!
  TargetOriginId: String!
  ForwardedValues: AwsCloudfrontSoInput!
  TrustedSigners: AwsCloudfrontSyInput!
  ViewerProtocolPolicy: String!
  MinTTL: JSON!
  AllowedMethods: AwsCloudfrontS12Input
  SmoothStreaming: Boolean
  DefaultTTL: JSON
  MaxTTL: JSON
  Compress: Boolean
  LambdaFunctionAssociations: AwsCloudfrontS16Input
}

type AwsCloudfrontS1d {
  Quantity: Int!
  Items: [AwsCloudfrontS1dItems]
}

input AwsCloudfrontS1dInput {
  Quantity: Int!
  Items: [AwsCloudfrontS1dItemsInput]
}

type AwsCloudfrontS1dItems {
  ErrorCode: Int!
  ResponsePagePath: String
  ResponseCode: String
  ErrorCachingMinTTL: JSON
}

input AwsCloudfrontS1dItemsInput {
  ErrorCode: Int!
  ResponsePagePath: String
  ResponseCode: String
  ErrorCachingMinTTL: JSON
}

type AwsCloudfrontS1i {
  CloudFrontDefaultCertificate: Boolean
  IAMCertificateId: String
  ACMCertificateArn: String
  SSLSupportMethod: String
  MinimumProtocolVersion: String
  Certificate: String
  CertificateSource: String
}

input AwsCloudfrontS1iInput {
  CloudFrontDefaultCertificate: Boolean
  IAMCertificateId: String
  ACMCertificateArn: String
  SSLSupportMethod: String
  MinimumProtocolVersion: String
  Certificate: String
  CertificateSource: String
}

type AwsCloudfrontS1m {
  GeoRestriction: AwsCloudfrontS1mGeoRestriction!
}

type AwsCloudfrontS1mGeoRestriction {
  RestrictionType: String!
  Quantity: Int!
  Items: [String]
}

input AwsCloudfrontS1mGeoRestrictionInput {
  RestrictionType: String!
  Quantity: Int!
  Items: [String]
}

input AwsCloudfrontS1mInput {
  GeoRestriction: AwsCloudfrontS1mGeoRestrictionInput!
}

type AwsCloudfrontS1s {
  Id: String!
  ARN: String!
  Status: String!
  LastModifiedTime: Date!
  InProgressInvalidationBatches: Int!
  DomainName: String!
  ActiveTrustedSigners: AwsCloudfrontS1u!
  DistributionConfig: AwsCloudfrontS7!
}

type AwsCloudfrontS1u {
  Enabled: Boolean!
  Quantity: Int!
  Items: [AwsCloudfrontS1uItems]
}

type AwsCloudfrontS1uItems {
  AwsAccountNumber: String
  KeyPairIds: AwsCloudfrontS1uItemsKeyPairIds
}

type AwsCloudfrontS1uItemsKeyPairIds {
  Quantity: Int!
  Items: [String]
}

type AwsCloudfrontS2 {
  CallerReference: String!
  Comment: String!
}

type AwsCloudfrontS21 {
  Items: [AwsCloudfrontS21Items]
}

input AwsCloudfrontS21Input {
  Items: [AwsCloudfrontS21ItemsInput]
}

type AwsCloudfrontS21Items {
  Key: String!
  Value: String
}

input AwsCloudfrontS21ItemsInput {
  Key: String!
  Value: String
}

type AwsCloudfrontS28 {
  Paths: AwsCloudfrontS28Paths!
  CallerReference: String!
}

input AwsCloudfrontS28Input {
  Paths: AwsCloudfrontS28PathsInput!
  CallerReference: String!
}

type AwsCloudfrontS28Paths {
  Quantity: Int!
  Items: [String]
}

input AwsCloudfrontS28PathsInput {
  Quantity: Int!
  Items: [String]
}

type AwsCloudfrontS2c {
  Id: String!
  Status: String!
  CreateTime: Date!
  InvalidationBatch: AwsCloudfrontS28!
}

type AwsCloudfrontS2e {
  CallerReference: String!
  S3Origin: AwsCloudfrontS2f!
  Aliases: AwsCloudfrontS8
  Comment: String!
  Logging: AwsCloudfrontS2eLogging
  TrustedSigners: AwsCloudfrontSy!
  PriceClass: String
  Enabled: Boolean!
}

input AwsCloudfrontS2eInput {
  CallerReference: String!
  S3Origin: AwsCloudfrontS2fInput!
  Aliases: AwsCloudfrontS8Input
  Comment: String!
  Logging: AwsCloudfrontS2eLoggingInput
  TrustedSigners: AwsCloudfrontSyInput!
  PriceClass: String
  Enabled: Boolean!
}

type AwsCloudfrontS2eLogging {
  Enabled: Boolean!
  Bucket: String!
  Prefix: String!
}

input AwsCloudfrontS2eLoggingInput {
  Enabled: Boolean!
  Bucket: String!
  Prefix: String!
}

type AwsCloudfrontS2f {
  DomainName: String!
  OriginAccessIdentity: String!
}

input AwsCloudfrontS2fInput {
  DomainName: String!
  OriginAccessIdentity: String!
}

type AwsCloudfrontS2i {
  Id: String!
  ARN: String!
  Status: String!
  LastModifiedTime: Date
  DomainName: String!
  ActiveTrustedSigners: AwsCloudfrontS1u!
  StreamingDistributionConfig: AwsCloudfrontS2e!
}

input AwsCloudfrontS2Input {
  CallerReference: String!
  Comment: String!
}

type AwsCloudfrontS3b {
  Marker: String!
  NextMarker: String
  MaxItems: Int!
  IsTruncated: Boolean!
  Quantity: Int!
  Items: [AwsCloudfrontS3bItems]
}

type AwsCloudfrontS3bItems {
  Id: String!
  ARN: String!
  Status: String!
  LastModifiedTime: Date!
  DomainName: String!
  Aliases: AwsCloudfrontS8!
  Origins: AwsCloudfrontSb!
  DefaultCacheBehavior: AwsCloudfrontSn!
  CacheBehaviors: AwsCloudfrontS1a!
  CustomErrorResponses: AwsCloudfrontS1d!
  Comment: String!
  PriceClass: String!
  Enabled: Boolean!
  ViewerCertificate: AwsCloudfrontS1i!
  Restrictions: AwsCloudfrontS1m!
  WebACLId: String!
  HttpVersion: String!
  IsIPV6Enabled: Boolean!
}

type AwsCloudfrontS5 {
  Id: String!
  S3CanonicalUserId: String!
  CloudFrontOriginAccessIdentityConfig: AwsCloudfrontS2
}

type AwsCloudfrontS7 {
  CallerReference: String!
  Aliases: AwsCloudfrontS8
  DefaultRootObject: String
  Origins: AwsCloudfrontSb!
  DefaultCacheBehavior: AwsCloudfrontSn!
  CacheBehaviors: AwsCloudfrontS1a
  CustomErrorResponses: AwsCloudfrontS1d
  Comment: String!
  Logging: AwsCloudfrontS7Logging
  PriceClass: String
  Enabled: Boolean!
  ViewerCertificate: AwsCloudfrontS1i
  Restrictions: AwsCloudfrontS1m
  WebACLId: String
  HttpVersion: String
  IsIPV6Enabled: Boolean
}

input AwsCloudfrontS7Input {
  CallerReference: String!
  Aliases: AwsCloudfrontS8Input
  DefaultRootObject: String
  Origins: AwsCloudfrontSbInput!
  DefaultCacheBehavior: AwsCloudfrontSnInput!
  CacheBehaviors: AwsCloudfrontS1aInput
  CustomErrorResponses: AwsCloudfrontS1dInput
  Comment: String!
  Logging: AwsCloudfrontS7LoggingInput
  PriceClass: String
  Enabled: Boolean!
  ViewerCertificate: AwsCloudfrontS1iInput
  Restrictions: AwsCloudfrontS1mInput
  WebACLId: String
  HttpVersion: String
  IsIPV6Enabled: Boolean
}

type AwsCloudfrontS7Logging {
  Enabled: Boolean!
  IncludeCookies: Boolean!
  Bucket: String!
  Prefix: String!
}

input AwsCloudfrontS7LoggingInput {
  Enabled: Boolean!
  IncludeCookies: Boolean!
  Bucket: String!
  Prefix: String!
}

type AwsCloudfrontS8 {
  Quantity: Int!
  Items: [String]
}

input AwsCloudfrontS8Input {
  Quantity: Int!
  Items: [String]
}

type AwsCloudfrontSb {
  Quantity: Int!
  Items: [AwsCloudfrontSbItems]
}

input AwsCloudfrontSbInput {
  Quantity: Int!
  Items: [AwsCloudfrontSbItemsInput]
}

type AwsCloudfrontSbItems {
  Id: String!
  DomainName: String!
  OriginPath: String
  CustomHeaders: AwsCloudfrontSbItemsCustomHeaders
  S3OriginConfig: AwsCloudfrontSbItemsS3OriginConfig
  CustomOriginConfig: AwsCloudfrontSbItemsCustomOriginConfig
}

type AwsCloudfrontSbItemsCustomHeaders {
  Quantity: Int!
  Items: [AwsCloudfrontSbItemsCustomHeadersItems]
}

input AwsCloudfrontSbItemsCustomHeadersInput {
  Quantity: Int!
  Items: [AwsCloudfrontSbItemsCustomHeadersItemsInput]
}

type AwsCloudfrontSbItemsCustomHeadersItems {
  HeaderName: String!
  HeaderValue: String!
}

input AwsCloudfrontSbItemsCustomHeadersItemsInput {
  HeaderName: String!
  HeaderValue: String!
}

type AwsCloudfrontSbItemsCustomOriginConfig {
  HTTPPort: Int!
  HTTPSPort: Int!
  OriginProtocolPolicy: String!
  OriginSslProtocols: AwsCloudfrontSbItemsCustomOriginConfigOriginSslProtocols
  OriginReadTimeout: Int
  OriginKeepaliveTimeout: Int
}

input AwsCloudfrontSbItemsCustomOriginConfigInput {
  HTTPPort: Int!
  HTTPSPort: Int!
  OriginProtocolPolicy: String!
  OriginSslProtocols: AwsCloudfrontSbItemsCustomOriginConfigOriginSslProtocolsInput
  OriginReadTimeout: Int
  OriginKeepaliveTimeout: Int
}

type AwsCloudfrontSbItemsCustomOriginConfigOriginSslProtocols {
  Quantity: Int!
  Items: [String]!
}

input AwsCloudfrontSbItemsCustomOriginConfigOriginSslProtocolsInput {
  Quantity: Int!
  Items: [String]!
}

input AwsCloudfrontSbItemsInput {
  Id: String!
  DomainName: String!
  OriginPath: String
  CustomHeaders: AwsCloudfrontSbItemsCustomHeadersInput
  S3OriginConfig: AwsCloudfrontSbItemsS3OriginConfigInput
  CustomOriginConfig: AwsCloudfrontSbItemsCustomOriginConfigInput
}

type AwsCloudfrontSbItemsS3OriginConfig {
  OriginAccessIdentity: String!
}

input AwsCloudfrontSbItemsS3OriginConfigInput {
  OriginAccessIdentity: String!
}

type AwsCloudfrontSn {
  TargetOriginId: String!
  ForwardedValues: AwsCloudfrontSo!
  TrustedSigners: AwsCloudfrontSy!
  ViewerProtocolPolicy: String!
  MinTTL: JSON!
  AllowedMethods: AwsCloudfrontS12
  SmoothStreaming: Boolean
  DefaultTTL: JSON
  MaxTTL: JSON
  Compress: Boolean
  LambdaFunctionAssociations: AwsCloudfrontS16
}

input AwsCloudfrontSnInput {
  TargetOriginId: String!
  ForwardedValues: AwsCloudfrontSoInput!
  TrustedSigners: AwsCloudfrontSyInput!
  ViewerProtocolPolicy: String!
  MinTTL: JSON!
  AllowedMethods: AwsCloudfrontS12Input
  SmoothStreaming: Boolean
  DefaultTTL: JSON
  MaxTTL: JSON
  Compress: Boolean
  LambdaFunctionAssociations: AwsCloudfrontS16Input
}

type AwsCloudfrontSo {
  QueryString: Boolean!
  Cookies: AwsCloudfrontSoCookies!
  Headers: AwsCloudfrontSoHeaders
  QueryStringCacheKeys: AwsCloudfrontSoQueryStringCacheKeys
}

type AwsCloudfrontSoCookies {
  Forward: String!
  WhitelistedNames: AwsCloudfrontSoCookiesWhitelistedNames
}

input AwsCloudfrontSoCookiesInput {
  Forward: String!
  WhitelistedNames: AwsCloudfrontSoCookiesWhitelistedNamesInput
}

type AwsCloudfrontSoCookiesWhitelistedNames {
  Quantity: Int!
  Items: [String]
}

input AwsCloudfrontSoCookiesWhitelistedNamesInput {
  Quantity: Int!
  Items: [String]
}

type AwsCloudfrontSoHeaders {
  Quantity: Int!
  Items: [String]
}

input AwsCloudfrontSoHeadersInput {
  Quantity: Int!
  Items: [String]
}

input AwsCloudfrontSoInput {
  QueryString: Boolean!
  Cookies: AwsCloudfrontSoCookiesInput!
  Headers: AwsCloudfrontSoHeadersInput
  QueryStringCacheKeys: AwsCloudfrontSoQueryStringCacheKeysInput
}

type AwsCloudfrontSoQueryStringCacheKeys {
  Quantity: Int!
  Items: [String]
}

input AwsCloudfrontSoQueryStringCacheKeysInput {
  Quantity: Int!
  Items: [String]
}

type AwsCloudfrontSy {
  Enabled: Boolean!
  Quantity: Int!
  Items: [String]
}

input AwsCloudfrontSyInput {
  Enabled: Boolean!
  Quantity: Int!
  Items: [String]
}

input AwsCloudfrontTagResourceInput {
  Resource: String!
  Tags: AwsCloudfrontS21Input!
}

input AwsCloudfrontUntagResourceInput {
  Resource: String!
  TagKeys: AwsCloudfrontUntagResourceTagKeysInput!
}

input AwsCloudfrontUntagResourceTagKeysInput {
  Items: [String]
}

input AwsCloudfrontUpdateCloudFrontOriginAccessIdentityInput {
  CloudFrontOriginAccessIdentityConfig: AwsCloudfrontS2Input!
  Id: String!
  IfMatch: String
}

type AwsCloudfrontUpdateCloudFrontOriginAccessIdentityOutput {
  CloudFrontOriginAccessIdentity: AwsCloudfrontS5
  ETag: String
}

input AwsCloudfrontUpdateDistributionInput {
  DistributionConfig: AwsCloudfrontS7Input!
  Id: String!
  IfMatch: String
}

type AwsCloudfrontUpdateDistributionOutput {
  Distribution: AwsCloudfrontS1s
  ETag: String
}

input AwsCloudfrontUpdateStreamingDistributionInput {
  StreamingDistributionConfig: AwsCloudfrontS2eInput!
  Id: String!
  IfMatch: String
}

type AwsCloudfrontUpdateStreamingDistributionOutput {
  StreamingDistribution: AwsCloudfrontS2i
  ETag: String
}

# Amazon CloudHSM (2014-05-30)
type AwsCloudhsm {
  # cloudhsm.AddTagsToResource
  AddTagsToResource(input: AwsCloudhsmAddTagsToResourceInput!): AwsCloudhsmAddTagsToResourceOutput

  # cloudhsm.CreateHapg
  CreateHapg(input: AwsCloudhsmCreateHapgInput!): AwsCloudhsmCreateHapgOutput

  # cloudhsm.CreateHsm
  CreateHsm(input: AwsCloudhsmCreateHsmInput!): AwsCloudhsmCreateHsmOutput

  # cloudhsm.CreateLunaClient
  CreateLunaClient(input: AwsCloudhsmCreateLunaClientInput!): AwsCloudhsmCreateLunaClientOutput

  # cloudhsm.DeleteHapg
  DeleteHapg(input: AwsCloudhsmDeleteHapgInput!): AwsCloudhsmDeleteHapgOutput

  # cloudhsm.DeleteHsm
  DeleteHsm(input: AwsCloudhsmDeleteHsmInput!): AwsCloudhsmDeleteHsmOutput

  # cloudhsm.DeleteLunaClient
  DeleteLunaClient(input: AwsCloudhsmDeleteLunaClientInput!): AwsCloudhsmDeleteLunaClientOutput

  # cloudhsm.DescribeHapg
  DescribeHapg(input: AwsCloudhsmDescribeHapgInput!): AwsCloudhsmDescribeHapgOutput

  # cloudhsm.DescribeHsm
  DescribeHsm(input: AwsCloudhsmDescribeHsmInput): AwsCloudhsmDescribeHsmOutput

  # cloudhsm.DescribeLunaClient
  DescribeLunaClient(input: AwsCloudhsmDescribeLunaClientInput): AwsCloudhsmDescribeLunaClientOutput

  # cloudhsm.GetConfig
  GetConfig(input: AwsCloudhsmGetConfigInput!): AwsCloudhsmGetConfigOutput

  # cloudhsm.ListAvailableZones
  ListAvailableZones(input: JSON): AwsCloudhsmListAvailableZonesOutput

  # cloudhsm.ListHapgs
  ListHapgs(input: AwsCloudhsmListHapgsInput): AwsCloudhsmListHapgsOutput

  # cloudhsm.ListHsms
  ListHsms(input: AwsCloudhsmListHsmsInput): AwsCloudhsmListHsmsOutput

  # cloudhsm.ListLunaClients
  ListLunaClients(input: AwsCloudhsmListLunaClientsInput): AwsCloudhsmListLunaClientsOutput

  # cloudhsm.ListTagsForResource
  ListTagsForResource(input: AwsCloudhsmListTagsForResourceInput!): AwsCloudhsmListTagsForResourceOutput

  # cloudhsm.ModifyHapg
  ModifyHapg(input: AwsCloudhsmModifyHapgInput!): AwsCloudhsmModifyHapgOutput

  # cloudhsm.ModifyHsm
  ModifyHsm(input: AwsCloudhsmModifyHsmInput!): AwsCloudhsmModifyHsmOutput

  # cloudhsm.ModifyLunaClient
  ModifyLunaClient(input: AwsCloudhsmModifyLunaClientInput!): AwsCloudhsmModifyLunaClientOutput

  # cloudhsm.RemoveTagsFromResource
  RemoveTagsFromResource(input: AwsCloudhsmRemoveTagsFromResourceInput!): AwsCloudhsmRemoveTagsFromResourceOutput
}

input AwsCloudhsmAddTagsToResourceInput {
  ResourceArn: String!
  TagList: [AwsCloudhsmS3Input]!
}

type AwsCloudhsmAddTagsToResourceOutput {
  Status: String!
}

input AwsCloudhsmCreateHapgInput {
  Label: String!
}

type AwsCloudhsmCreateHapgOutput {
  HapgArn: String
}

input AwsCloudhsmCreateHsmInput {
  SubnetId: String!
  SshKey: String!
  EniIp: String
  IamRoleArn: String!
  ExternalId: String
  SubscriptionType: String!
  ClientToken: String
  SyslogIp: String
}

type AwsCloudhsmCreateHsmOutput {
  HsmArn: String
}

input AwsCloudhsmCreateLunaClientInput {
  Label: String
  Certificate: String!
}

type AwsCloudhsmCreateLunaClientOutput {
  ClientArn: String
}

input AwsCloudhsmDeleteHapgInput {
  HapgArn: String!
}

type AwsCloudhsmDeleteHapgOutput {
  Status: String!
}

input AwsCloudhsmDeleteHsmInput {
  HsmArn: String!
}

type AwsCloudhsmDeleteHsmOutput {
  Status: String!
}

input AwsCloudhsmDeleteLunaClientInput {
  ClientArn: String!
}

type AwsCloudhsmDeleteLunaClientOutput {
  Status: String!
}

input AwsCloudhsmDescribeHapgInput {
  HapgArn: String!
}

type AwsCloudhsmDescribeHapgOutput {
  HapgArn: String
  HapgSerial: String
  HsmsLastActionFailed: [String]
  HsmsPendingDeletion: [String]
  HsmsPendingRegistration: [String]
  Label: String
  LastModifiedTimestamp: String
  PartitionSerialList: [String]
  State: String
}

input AwsCloudhsmDescribeHsmInput {
  HsmArn: String
  HsmSerialNumber: String
}

type AwsCloudhsmDescribeHsmOutput {
  HsmArn: String
  Status: String
  StatusDetails: String
  AvailabilityZone: String
  EniId: String
  EniIp: String
  SubscriptionType: String
  SubscriptionStartDate: String
  SubscriptionEndDate: String
  VpcId: String
  SubnetId: String
  IamRoleArn: String
  SerialNumber: String
  VendorName: String
  HsmType: String
  SoftwareVersion: String
  SshPublicKey: String
  SshKeyLastUpdated: String
  ServerCertUri: String
  ServerCertLastUpdated: String
  Partitions: [String]
}

input AwsCloudhsmDescribeLunaClientInput {
  ClientArn: String
  CertificateFingerprint: String
}

type AwsCloudhsmDescribeLunaClientOutput {
  ClientArn: String
  Certificate: String
  CertificateFingerprint: String
  LastModifiedTimestamp: String
  Label: String
}

input AwsCloudhsmGetConfigInput {
  ClientArn: String!
  ClientVersion: String!
  HapgList: [String]!
}

type AwsCloudhsmGetConfigOutput {
  ConfigType: String
  ConfigFile: String
  ConfigCred: String
}

type AwsCloudhsmListAvailableZonesOutput {
  AZList: [String]
}

input AwsCloudhsmListHapgsInput {
  NextToken: String
}

type AwsCloudhsmListHapgsOutput {
  HapgList: [String]!
  NextToken: String
}

input AwsCloudhsmListHsmsInput {
  NextToken: String
}

type AwsCloudhsmListHsmsOutput {
  HsmList: [String]
  NextToken: String
}

input AwsCloudhsmListLunaClientsInput {
  NextToken: String
}

type AwsCloudhsmListLunaClientsOutput {
  ClientList: [String]!
  NextToken: String
}

input AwsCloudhsmListTagsForResourceInput {
  ResourceArn: String!
}

type AwsCloudhsmListTagsForResourceOutput {
  TagList: [AwsCloudhsmS3]!
}

input AwsCloudhsmModifyHapgInput {
  HapgArn: String!
  Label: String
  PartitionSerialList: [String]
}

type AwsCloudhsmModifyHapgOutput {
  HapgArn: String
}

input AwsCloudhsmModifyHsmInput {
  HsmArn: String!
  SubnetId: String
  EniIp: String
  IamRoleArn: String
  ExternalId: String
  SyslogIp: String
}

type AwsCloudhsmModifyHsmOutput {
  HsmArn: String
}

input AwsCloudhsmModifyLunaClientInput {
  ClientArn: String!
  Certificate: String!
}

type AwsCloudhsmModifyLunaClientOutput {
  ClientArn: String
}

input AwsCloudhsmRemoveTagsFromResourceInput {
  ResourceArn: String!
  TagKeyList: [String]!
}

type AwsCloudhsmRemoveTagsFromResourceOutput {
  Status: String!
}

type AwsCloudhsmS3 {
  Key: String!
  Value: String!
}

input AwsCloudhsmS3Input {
  Key: String!
  Value: String!
}

# AWS CloudHSM V2 (2017-04-28)
type AwsCloudhsmv2 {
  # cloudhsmv2.CreateCluster
  CreateCluster(input: AwsCloudhsmv2CreateClusterInput!): AwsCloudhsmv2CreateClusterOutput

  # cloudhsmv2.CreateHsm
  CreateHsm(input: AwsCloudhsmv2CreateHsmInput!): AwsCloudhsmv2CreateHsmOutput

  # cloudhsmv2.DeleteCluster
  DeleteCluster(input: AwsCloudhsmv2DeleteClusterInput!): AwsCloudhsmv2DeleteClusterOutput

  # cloudhsmv2.DeleteHsm
  DeleteHsm(input: AwsCloudhsmv2DeleteHsmInput!): AwsCloudhsmv2DeleteHsmOutput

  # cloudhsmv2.DescribeBackups
  DescribeBackups(input: AwsCloudhsmv2DescribeBackupsInput): AwsCloudhsmv2DescribeBackupsOutput

  # cloudhsmv2.DescribeClusters
  DescribeClusters(input: AwsCloudhsmv2DescribeClustersInput): AwsCloudhsmv2DescribeClustersOutput

  # cloudhsmv2.InitializeCluster
  InitializeCluster(input: AwsCloudhsmv2InitializeClusterInput!): AwsCloudhsmv2InitializeClusterOutput

  # cloudhsmv2.ListTags
  ListTags(input: AwsCloudhsmv2ListTagsInput!): AwsCloudhsmv2ListTagsOutput

  # cloudhsmv2.TagResource
  TagResource(input: AwsCloudhsmv2TagResourceInput!): JSON

  # cloudhsmv2.UntagResource
  UntagResource(input: AwsCloudhsmv2UntagResourceInput!): JSON
}

input AwsCloudhsmv2CreateClusterInput {
  SubnetIds: [String]!
  HsmType: String!
  SourceBackupId: String
}

type AwsCloudhsmv2CreateClusterOutput {
  Cluster: AwsCloudhsmv2S7
}

input AwsCloudhsmv2CreateHsmInput {
  ClusterId: String!
  AvailabilityZone: String!
  IpAddress: String
}

type AwsCloudhsmv2CreateHsmOutput {
  Hsm: AwsCloudhsmv2Sc
}

input AwsCloudhsmv2DeleteClusterInput {
  ClusterId: String!
}

type AwsCloudhsmv2DeleteClusterOutput {
  Cluster: AwsCloudhsmv2S7
}

input AwsCloudhsmv2DeleteHsmInput {
  ClusterId: String!
  HsmId: String
  EniId: String
  EniIp: String
}

type AwsCloudhsmv2DeleteHsmOutput {
  HsmId: String
}

input AwsCloudhsmv2DescribeBackupsInput {
  NextToken: String
  MaxResults: Int
  Filters: JSON
}

type AwsCloudhsmv2DescribeBackupsOutput {
  Backups: [AwsCloudhsmv2DescribeBackupsOutputBackups]
  NextToken: String
}

type AwsCloudhsmv2DescribeBackupsOutputBackups {
  BackupId: String!
  BackupState: String
  ClusterId: String
  CreateTimestamp: Date
}

input AwsCloudhsmv2DescribeClustersInput {
  Filters: JSON
  NextToken: String
  MaxResults: Int
}

type AwsCloudhsmv2DescribeClustersOutput {
  Clusters: [AwsCloudhsmv2S7]
  NextToken: String
}

input AwsCloudhsmv2InitializeClusterInput {
  ClusterId: String!
  SignedCert: String!
  TrustAnchor: String!
}

type AwsCloudhsmv2InitializeClusterOutput {
  State: String
  StateMessage: String
}

input AwsCloudhsmv2ListTagsInput {
  ResourceId: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudhsmv2ListTagsOutput {
  TagList: [AwsCloudhsmv2S1e]!
  NextToken: String
}

type AwsCloudhsmv2S1e {
  Key: String!
  Value: String!
}

input AwsCloudhsmv2S1eInput {
  Key: String!
  Value: String!
}

type AwsCloudhsmv2S7 {
  BackupPolicy: String
  ClusterId: String
  CreateTimestamp: Date
  Hsms: [AwsCloudhsmv2Sc]
  HsmType: String
  PreCoPassword: String
  SecurityGroup: String
  SourceBackupId: String
  State: String
  StateMessage: String
  SubnetMapping: JSON
  VpcId: String
  Certificates: AwsCloudhsmv2S7Certificates
}

type AwsCloudhsmv2S7Certificates {
  ClusterCsr: String
  HsmCertificate: String
  AwsHardwareCertificate: String
  ManufacturerHardwareCertificate: String
  ClusterCertificate: String
}

type AwsCloudhsmv2Sc {
  AvailabilityZone: String
  ClusterId: String
  SubnetId: String
  EniId: String
  EniIp: String
  HsmId: String!
  State: String
  StateMessage: String
}

input AwsCloudhsmv2TagResourceInput {
  ResourceId: String!
  TagList: [AwsCloudhsmv2S1eInput]!
}

input AwsCloudhsmv2UntagResourceInput {
  ResourceId: String!
  TagKeyList: [String]!
}

# Amazon CloudSearch (2013-01-01)
type AwsCloudsearch {
  # cloudsearch.BuildSuggesters
  BuildSuggesters(input: AwsCloudsearchBuildSuggestersInput!): AwsCloudsearchBuildSuggestersOutput

  # cloudsearch.CreateDomain
  CreateDomain(input: AwsCloudsearchCreateDomainInput!): AwsCloudsearchCreateDomainOutput

  # cloudsearch.DefineAnalysisScheme
  DefineAnalysisScheme(input: AwsCloudsearchDefineAnalysisSchemeInput!): AwsCloudsearchDefineAnalysisSchemeOutput

  # cloudsearch.DefineExpression
  DefineExpression(input: AwsCloudsearchDefineExpressionInput!): AwsCloudsearchDefineExpressionOutput

  # cloudsearch.DefineIndexField
  DefineIndexField(input: AwsCloudsearchDefineIndexFieldInput!): AwsCloudsearchDefineIndexFieldOutput

  # cloudsearch.DefineSuggester
  DefineSuggester(input: AwsCloudsearchDefineSuggesterInput!): AwsCloudsearchDefineSuggesterOutput

  # cloudsearch.DeleteAnalysisScheme
  DeleteAnalysisScheme(input: AwsCloudsearchDeleteAnalysisSchemeInput!): AwsCloudsearchDeleteAnalysisSchemeOutput

  # cloudsearch.DeleteDomain
  DeleteDomain(input: AwsCloudsearchDeleteDomainInput!): AwsCloudsearchDeleteDomainOutput

  # cloudsearch.DeleteExpression
  DeleteExpression(input: AwsCloudsearchDeleteExpressionInput!): AwsCloudsearchDeleteExpressionOutput

  # cloudsearch.DeleteIndexField
  DeleteIndexField(input: AwsCloudsearchDeleteIndexFieldInput!): AwsCloudsearchDeleteIndexFieldOutput

  # cloudsearch.DeleteSuggester
  DeleteSuggester(input: AwsCloudsearchDeleteSuggesterInput!): AwsCloudsearchDeleteSuggesterOutput

  # cloudsearch.DescribeAnalysisSchemes
  DescribeAnalysisSchemes(input: AwsCloudsearchDescribeAnalysisSchemesInput!): AwsCloudsearchDescribeAnalysisSchemesOutput

  # cloudsearch.DescribeAvailabilityOptions
  DescribeAvailabilityOptions(input: AwsCloudsearchDescribeAvailabilityOptionsInput!): AwsCloudsearchDescribeAvailabilityOptionsOutput

  # cloudsearch.DescribeDomains
  DescribeDomains(input: AwsCloudsearchDescribeDomainsInput): AwsCloudsearchDescribeDomainsOutput

  # cloudsearch.DescribeExpressions
  DescribeExpressions(input: AwsCloudsearchDescribeExpressionsInput!): AwsCloudsearchDescribeExpressionsOutput

  # cloudsearch.DescribeIndexFields
  DescribeIndexFields(input: AwsCloudsearchDescribeIndexFieldsInput!): AwsCloudsearchDescribeIndexFieldsOutput

  # cloudsearch.DescribeScalingParameters
  DescribeScalingParameters(input: AwsCloudsearchDescribeScalingParametersInput!): AwsCloudsearchDescribeScalingParametersOutput

  # cloudsearch.DescribeServiceAccessPolicies
  DescribeServiceAccessPolicies(input: AwsCloudsearchDescribeServiceAccessPoliciesInput!): AwsCloudsearchDescribeServiceAccessPoliciesOutput

  # cloudsearch.DescribeSuggesters
  DescribeSuggesters(input: AwsCloudsearchDescribeSuggestersInput!): AwsCloudsearchDescribeSuggestersOutput

  # cloudsearch.IndexDocuments
  IndexDocuments(input: AwsCloudsearchIndexDocumentsInput!): AwsCloudsearchIndexDocumentsOutput

  # cloudsearch.ListDomainNames
  ListDomainNames: AwsCloudsearchListDomainNamesOutput

  # cloudsearch.UpdateAvailabilityOptions
  UpdateAvailabilityOptions(input: AwsCloudsearchUpdateAvailabilityOptionsInput!): AwsCloudsearchUpdateAvailabilityOptionsOutput

  # cloudsearch.UpdateScalingParameters
  UpdateScalingParameters(input: AwsCloudsearchUpdateScalingParametersInput!): AwsCloudsearchUpdateScalingParametersOutput

  # cloudsearch.UpdateServiceAccessPolicies
  UpdateServiceAccessPolicies(input: AwsCloudsearchUpdateServiceAccessPoliciesInput!): AwsCloudsearchUpdateServiceAccessPoliciesOutput
}

input AwsCloudsearchBuildSuggestersInput {
  DomainName: String!
}

type AwsCloudsearchBuildSuggestersOutput {
  FieldNames: [String]
}

input AwsCloudsearchCreateDomainInput {
  DomainName: String!
}

type AwsCloudsearchCreateDomainOutput {
  DomainStatus: AwsCloudsearchS8
}

input AwsCloudsearchDefineAnalysisSchemeInput {
  DomainName: String!
  AnalysisScheme: AwsCloudsearchSlInput!
}

type AwsCloudsearchDefineAnalysisSchemeOutput {
  AnalysisScheme: AwsCloudsearchSs!
}

input AwsCloudsearchDefineExpressionInput {
  DomainName: String!
  Expression: AwsCloudsearchSyInput!
}

type AwsCloudsearchDefineExpressionOutput {
  Expression: AwsCloudsearchS11!
}

input AwsCloudsearchDefineIndexFieldInput {
  DomainName: String!
  IndexField: AwsCloudsearchS13Input!
}

type AwsCloudsearchDefineIndexFieldOutput {
  IndexField: AwsCloudsearchS1n!
}

input AwsCloudsearchDefineSuggesterInput {
  DomainName: String!
  Suggester: AwsCloudsearchS1pInput!
}

type AwsCloudsearchDefineSuggesterOutput {
  Suggester: AwsCloudsearchS1t!
}

input AwsCloudsearchDeleteAnalysisSchemeInput {
  DomainName: String!
  AnalysisSchemeName: String!
}

type AwsCloudsearchDeleteAnalysisSchemeOutput {
  AnalysisScheme: AwsCloudsearchSs!
}

input AwsCloudsearchDeleteDomainInput {
  DomainName: String!
}

type AwsCloudsearchDeleteDomainOutput {
  DomainStatus: AwsCloudsearchS8
}

input AwsCloudsearchDeleteExpressionInput {
  DomainName: String!
  ExpressionName: String!
}

type AwsCloudsearchDeleteExpressionOutput {
  Expression: AwsCloudsearchS11!
}

input AwsCloudsearchDeleteIndexFieldInput {
  DomainName: String!
  IndexFieldName: String!
}

type AwsCloudsearchDeleteIndexFieldOutput {
  IndexField: AwsCloudsearchS1n!
}

input AwsCloudsearchDeleteSuggesterInput {
  DomainName: String!
  SuggesterName: String!
}

type AwsCloudsearchDeleteSuggesterOutput {
  Suggester: AwsCloudsearchS1t!
}

input AwsCloudsearchDescribeAnalysisSchemesInput {
  DomainName: String!
  AnalysisSchemeNames: [String]
  Deployed: Boolean
}

type AwsCloudsearchDescribeAnalysisSchemesOutput {
  AnalysisSchemes: [AwsCloudsearchSs]!
}

input AwsCloudsearchDescribeAvailabilityOptionsInput {
  DomainName: String!
  Deployed: Boolean
}

type AwsCloudsearchDescribeAvailabilityOptionsOutput {
  AvailabilityOptions: AwsCloudsearchS2a
}

input AwsCloudsearchDescribeDomainsInput {
  DomainNames: [String]
}

type AwsCloudsearchDescribeDomainsOutput {
  DomainStatusList: [AwsCloudsearchS8]!
}

input AwsCloudsearchDescribeExpressionsInput {
  DomainName: String!
  ExpressionNames: [String]
  Deployed: Boolean
}

type AwsCloudsearchDescribeExpressionsOutput {
  Expressions: [AwsCloudsearchS11]!
}

input AwsCloudsearchDescribeIndexFieldsInput {
  DomainName: String!
  FieldNames: [String]
  Deployed: Boolean
}

type AwsCloudsearchDescribeIndexFieldsOutput {
  IndexFields: [AwsCloudsearchS1n]!
}

input AwsCloudsearchDescribeScalingParametersInput {
  DomainName: String!
}

type AwsCloudsearchDescribeScalingParametersOutput {
  ScalingParameters: AwsCloudsearchS2p!
}

input AwsCloudsearchDescribeServiceAccessPoliciesInput {
  DomainName: String!
  Deployed: Boolean
}

type AwsCloudsearchDescribeServiceAccessPoliciesOutput {
  AccessPolicies: AwsCloudsearchS2u!
}

input AwsCloudsearchDescribeSuggestersInput {
  DomainName: String!
  SuggesterNames: [String]
  Deployed: Boolean
}

type AwsCloudsearchDescribeSuggestersOutput {
  Suggesters: [AwsCloudsearchS1t]!
}

# Amazon CloudSearch Domain (2013-01-01)
type AwsCloudsearchdomain {
  # cloudsearchdomain.Search
  Search(input: AwsCloudsearchdomainSearchInput!): AwsCloudsearchdomainSearchOutput

  # cloudsearchdomain.Suggest
  Suggest(input: AwsCloudsearchdomainSuggestInput!): AwsCloudsearchdomainSuggestOutput

  # cloudsearchdomain.UploadDocuments
  UploadDocuments(input: AwsCloudsearchdomainUploadDocumentsInput!): AwsCloudsearchdomainUploadDocumentsOutput
}

input AwsCloudsearchdomainSearchInput {
  cursor: String
  expr: String
  facet: String
  filterQuery: String
  highlight: String
  partial: Boolean
  query: String!
  queryOptions: String
  queryParser: String
  return: String
  size: JSON
  sort: String
  start: JSON
  stats: String
}

type AwsCloudsearchdomainSearchOutput {
  status: AwsCloudsearchdomainSearchOutputStatus
  hits: AwsCloudsearchdomainSearchOutputHits
  facets: JSON
  stats: JSON
}

type AwsCloudsearchdomainSearchOutputHits {
  found: JSON
  start: JSON
  cursor: String
  hit: [AwsCloudsearchdomainSearchOutputHitsHit]
}

type AwsCloudsearchdomainSearchOutputHitsHit {
  id: String
  fields: JSON
  exprs: JSON
  highlights: JSON
}

type AwsCloudsearchdomainSearchOutputStatus {
  timems: JSON
  rid: String
}

input AwsCloudsearchdomainSuggestInput {
  query: String!
  suggester: String!
  size: JSON
}

type AwsCloudsearchdomainSuggestOutput {
  status: AwsCloudsearchdomainSuggestOutputStatus
  suggest: AwsCloudsearchdomainSuggestOutputSuggest
}

type AwsCloudsearchdomainSuggestOutputStatus {
  timems: JSON
  rid: String
}

type AwsCloudsearchdomainSuggestOutputSuggest {
  query: String
  found: JSON
  suggestions: [AwsCloudsearchdomainSuggestOutputSuggestSuggestions]
}

type AwsCloudsearchdomainSuggestOutputSuggestSuggestions {
  suggestion: String
  score: JSON
  id: String
}

input AwsCloudsearchdomainUploadDocumentsInput {
  documents: JSON!
  contentType: String!
}

type AwsCloudsearchdomainUploadDocumentsOutput {
  status: String
  adds: JSON
  deletes: JSON
  warnings: [AwsCloudsearchdomainUploadDocumentsOutputWarnings]
}

type AwsCloudsearchdomainUploadDocumentsOutputWarnings {
  message: String
}

input AwsCloudsearchIndexDocumentsInput {
  DomainName: String!
}

type AwsCloudsearchIndexDocumentsOutput {
  FieldNames: [String]
}

type AwsCloudsearchListDomainNamesOutput {
  DomainNames: JSON
}

type AwsCloudsearchS11 {
  Options: AwsCloudsearchSy!
  Status: AwsCloudsearchSt!
}

type AwsCloudsearchS13 {
  IndexFieldName: String!
  IndexFieldType: String!
  IntOptions: AwsCloudsearchS13IntOptions
  DoubleOptions: AwsCloudsearchS13DoubleOptions
  LiteralOptions: AwsCloudsearchS13LiteralOptions
  TextOptions: AwsCloudsearchS13TextOptions
  DateOptions: AwsCloudsearchS13DateOptions
  LatLonOptions: AwsCloudsearchS13LatLonOptions
  IntArrayOptions: AwsCloudsearchS13IntArrayOptions
  DoubleArrayOptions: AwsCloudsearchS13DoubleArrayOptions
  LiteralArrayOptions: AwsCloudsearchS13LiteralArrayOptions
  TextArrayOptions: AwsCloudsearchS13TextArrayOptions
  DateArrayOptions: AwsCloudsearchS13DateArrayOptions
}

type AwsCloudsearchS13DateArrayOptions {
  DefaultValue: String
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

input AwsCloudsearchS13DateArrayOptionsInput {
  DefaultValue: String
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

type AwsCloudsearchS13DateOptions {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudsearchS13DateOptionsInput {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

type AwsCloudsearchS13DoubleArrayOptions {
  DefaultValue: JSON
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

input AwsCloudsearchS13DoubleArrayOptionsInput {
  DefaultValue: JSON
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

type AwsCloudsearchS13DoubleOptions {
  DefaultValue: JSON
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudsearchS13DoubleOptionsInput {
  DefaultValue: JSON
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudsearchS13Input {
  IndexFieldName: String!
  IndexFieldType: String!
  IntOptions: AwsCloudsearchS13IntOptionsInput
  DoubleOptions: AwsCloudsearchS13DoubleOptionsInput
  LiteralOptions: AwsCloudsearchS13LiteralOptionsInput
  TextOptions: AwsCloudsearchS13TextOptionsInput
  DateOptions: AwsCloudsearchS13DateOptionsInput
  LatLonOptions: AwsCloudsearchS13LatLonOptionsInput
  IntArrayOptions: AwsCloudsearchS13IntArrayOptionsInput
  DoubleArrayOptions: AwsCloudsearchS13DoubleArrayOptionsInput
  LiteralArrayOptions: AwsCloudsearchS13LiteralArrayOptionsInput
  TextArrayOptions: AwsCloudsearchS13TextArrayOptionsInput
  DateArrayOptions: AwsCloudsearchS13DateArrayOptionsInput
}

type AwsCloudsearchS13IntArrayOptions {
  DefaultValue: JSON
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

input AwsCloudsearchS13IntArrayOptionsInput {
  DefaultValue: JSON
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

type AwsCloudsearchS13IntOptions {
  DefaultValue: JSON
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudsearchS13IntOptionsInput {
  DefaultValue: JSON
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

type AwsCloudsearchS13LatLonOptions {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudsearchS13LatLonOptionsInput {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

type AwsCloudsearchS13LiteralArrayOptions {
  DefaultValue: String
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

input AwsCloudsearchS13LiteralArrayOptionsInput {
  DefaultValue: String
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

type AwsCloudsearchS13LiteralOptions {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudsearchS13LiteralOptionsInput {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

type AwsCloudsearchS13TextArrayOptions {
  DefaultValue: String
  SourceFields: String
  ReturnEnabled: Boolean
  HighlightEnabled: Boolean
  AnalysisScheme: String
}

input AwsCloudsearchS13TextArrayOptionsInput {
  DefaultValue: String
  SourceFields: String
  ReturnEnabled: Boolean
  HighlightEnabled: Boolean
  AnalysisScheme: String
}

type AwsCloudsearchS13TextOptions {
  DefaultValue: String
  SourceField: String
  ReturnEnabled: Boolean
  SortEnabled: Boolean
  HighlightEnabled: Boolean
  AnalysisScheme: String
}

input AwsCloudsearchS13TextOptionsInput {
  DefaultValue: String
  SourceField: String
  ReturnEnabled: Boolean
  SortEnabled: Boolean
  HighlightEnabled: Boolean
  AnalysisScheme: String
}

type AwsCloudsearchS1n {
  Options: AwsCloudsearchS13!
  Status: AwsCloudsearchSt!
}

type AwsCloudsearchS1p {
  SuggesterName: String!
  DocumentSuggesterOptions: AwsCloudsearchS1pDocumentSuggesterOptions!
}

type AwsCloudsearchS1pDocumentSuggesterOptions {
  SourceField: String!
  FuzzyMatching: String
  SortExpression: String
}

input AwsCloudsearchS1pDocumentSuggesterOptionsInput {
  SourceField: String!
  FuzzyMatching: String
  SortExpression: String
}

input AwsCloudsearchS1pInput {
  SuggesterName: String!
  DocumentSuggesterOptions: AwsCloudsearchS1pDocumentSuggesterOptionsInput!
}

type AwsCloudsearchS1t {
  Options: AwsCloudsearchS1p!
  Status: AwsCloudsearchSt!
}

type AwsCloudsearchS2a {
  Options: Boolean!
  Status: AwsCloudsearchSt!
}

type AwsCloudsearchS2p {
  Options: AwsCloudsearchS2q!
  Status: AwsCloudsearchSt!
}

type AwsCloudsearchS2q {
  DesiredInstanceType: String
  DesiredReplicationCount: Int
  DesiredPartitionCount: Int
}

input AwsCloudsearchS2qInput {
  DesiredInstanceType: String
  DesiredReplicationCount: Int
  DesiredPartitionCount: Int
}

type AwsCloudsearchS2u {
  Options: String!
  Status: AwsCloudsearchSt!
}

type AwsCloudsearchS8 {
  DomainId: String!
  DomainName: String!
  ARN: String
  Created: Boolean
  Deleted: Boolean
  DocService: AwsCloudsearchSc
  SearchService: AwsCloudsearchSc
  RequiresIndexDocuments: Boolean!
  Processing: Boolean
  SearchInstanceType: String
  SearchPartitionCount: Int
  SearchInstanceCount: Int
  Limits: AwsCloudsearchS8Limits
}

type AwsCloudsearchS8Limits {
  MaximumReplicationCount: Int!
  MaximumPartitionCount: Int!
}

type AwsCloudsearchSc {
  Endpoint: String
}

type AwsCloudsearchSl {
  AnalysisSchemeName: String!
  AnalysisSchemeLanguage: String!
  AnalysisOptions: AwsCloudsearchSlAnalysisOptions
}

type AwsCloudsearchSlAnalysisOptions {
  Synonyms: String
  Stopwords: String
  StemmingDictionary: String
  JapaneseTokenizationDictionary: String
  AlgorithmicStemming: String
}

input AwsCloudsearchSlAnalysisOptionsInput {
  Synonyms: String
  Stopwords: String
  StemmingDictionary: String
  JapaneseTokenizationDictionary: String
  AlgorithmicStemming: String
}

input AwsCloudsearchSlInput {
  AnalysisSchemeName: String!
  AnalysisSchemeLanguage: String!
  AnalysisOptions: AwsCloudsearchSlAnalysisOptionsInput
}

type AwsCloudsearchSs {
  Options: AwsCloudsearchSl!
  Status: AwsCloudsearchSt!
}

type AwsCloudsearchSt {
  CreationDate: Date!
  UpdateDate: Date!
  UpdateVersion: Int
  State: String!
  PendingDeletion: Boolean
}

type AwsCloudsearchSy {
  ExpressionName: String!
  ExpressionValue: String!
}

input AwsCloudsearchSyInput {
  ExpressionName: String!
  ExpressionValue: String!
}

input AwsCloudsearchUpdateAvailabilityOptionsInput {
  DomainName: String!
  MultiAZ: Boolean!
}

type AwsCloudsearchUpdateAvailabilityOptionsOutput {
  AvailabilityOptions: AwsCloudsearchS2a
}

input AwsCloudsearchUpdateScalingParametersInput {
  DomainName: String!
  ScalingParameters: AwsCloudsearchS2qInput!
}

type AwsCloudsearchUpdateScalingParametersOutput {
  ScalingParameters: AwsCloudsearchS2p!
}

input AwsCloudsearchUpdateServiceAccessPoliciesInput {
  DomainName: String!
  AccessPolicies: String!
}

type AwsCloudsearchUpdateServiceAccessPoliciesOutput {
  AccessPolicies: AwsCloudsearchS2u!
}

# AWS CloudTrail (2013-11-01)
type AwsCloudtrail {
  # cloudtrail.AddTags
  AddTags(input: AwsCloudtrailAddTagsInput!): JSON

  # cloudtrail.CreateTrail
  CreateTrail(input: AwsCloudtrailCreateTrailInput!): AwsCloudtrailCreateTrailOutput

  # cloudtrail.DeleteTrail
  DeleteTrail(input: AwsCloudtrailDeleteTrailInput!): JSON

  # cloudtrail.DescribeTrails
  DescribeTrails(input: AwsCloudtrailDescribeTrailsInput): AwsCloudtrailDescribeTrailsOutput

  # cloudtrail.GetEventSelectors
  GetEventSelectors(input: AwsCloudtrailGetEventSelectorsInput!): AwsCloudtrailGetEventSelectorsOutput

  # cloudtrail.GetTrailStatus
  GetTrailStatus(input: AwsCloudtrailGetTrailStatusInput!): AwsCloudtrailGetTrailStatusOutput

  # cloudtrail.ListPublicKeys
  ListPublicKeys(input: AwsCloudtrailListPublicKeysInput): AwsCloudtrailListPublicKeysOutput

  # cloudtrail.ListTags
  ListTags(input: AwsCloudtrailListTagsInput!): AwsCloudtrailListTagsOutput

  # cloudtrail.LookupEvents
  LookupEvents(input: AwsCloudtrailLookupEventsInput): AwsCloudtrailLookupEventsOutput

  # cloudtrail.PutEventSelectors
  PutEventSelectors(input: AwsCloudtrailPutEventSelectorsInput!): AwsCloudtrailPutEventSelectorsOutput

  # cloudtrail.RemoveTags
  RemoveTags(input: AwsCloudtrailRemoveTagsInput!): JSON

  # cloudtrail.StartLogging
  StartLogging(input: AwsCloudtrailStartLoggingInput!): JSON

  # cloudtrail.StopLogging
  StopLogging(input: AwsCloudtrailStopLoggingInput!): JSON

  # cloudtrail.UpdateTrail
  UpdateTrail(input: AwsCloudtrailUpdateTrailInput!): AwsCloudtrailUpdateTrailOutput
}

input AwsCloudtrailAddTagsInput {
  ResourceId: String!
  TagsList: [AwsCloudtrailS3Input]
}

input AwsCloudtrailCreateTrailInput {
  Name: String!
  S3BucketName: String!
  S3KeyPrefix: String
  SnsTopicName: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  EnableLogFileValidation: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
}

type AwsCloudtrailCreateTrailOutput {
  Name: String
  S3BucketName: String
  S3KeyPrefix: String
  SnsTopicName: String
  SnsTopicARN: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  TrailARN: String
  LogFileValidationEnabled: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
}

input AwsCloudtrailDeleteTrailInput {
  Name: String!
}

input AwsCloudtrailDescribeTrailsInput {
  trailNameList: [String]
  includeShadowTrails: Boolean
}

type AwsCloudtrailDescribeTrailsOutput {
  trailList: [AwsCloudtrailDescribeTrailsOutputTrailList]
}

type AwsCloudtrailDescribeTrailsOutputTrailList {
  Name: String
  S3BucketName: String
  S3KeyPrefix: String
  SnsTopicName: String
  SnsTopicARN: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  HomeRegion: String
  TrailARN: String
  LogFileValidationEnabled: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
  HasCustomEventSelectors: Boolean
}

input AwsCloudtrailGetEventSelectorsInput {
  TrailName: String!
}

type AwsCloudtrailGetEventSelectorsOutput {
  TrailARN: String
  EventSelectors: [AwsCloudtrailSi]
}

input AwsCloudtrailGetTrailStatusInput {
  Name: String!
}

type AwsCloudtrailGetTrailStatusOutput {
  IsLogging: Boolean
  LatestDeliveryError: String
  LatestNotificationError: String
  LatestDeliveryTime: Date
  LatestNotificationTime: Date
  StartLoggingTime: Date
  StopLoggingTime: Date
  LatestCloudWatchLogsDeliveryError: String
  LatestCloudWatchLogsDeliveryTime: Date
  LatestDigestDeliveryTime: Date
  LatestDigestDeliveryError: String
  LatestDeliveryAttemptTime: String
  LatestNotificationAttemptTime: String
  LatestNotificationAttemptSucceeded: String
  LatestDeliveryAttemptSucceeded: String
  TimeLoggingStarted: String
  TimeLoggingStopped: String
}

input AwsCloudtrailListPublicKeysInput {
  StartTime: Date
  EndTime: Date
  NextToken: String
}

type AwsCloudtrailListPublicKeysOutput {
  PublicKeyList: [AwsCloudtrailListPublicKeysOutputPublicKeyList]
  NextToken: String
}

type AwsCloudtrailListPublicKeysOutputPublicKeyList {
  Value: JSON
  ValidityStartTime: Date
  ValidityEndTime: Date
  Fingerprint: String
}

input AwsCloudtrailListTagsInput {
  ResourceIdList: [String]!
  NextToken: String
}

type AwsCloudtrailListTagsOutput {
  ResourceTagList: [AwsCloudtrailListTagsOutputResourceTagList]
  NextToken: String
}

type AwsCloudtrailListTagsOutputResourceTagList {
  ResourceId: String
  TagsList: [AwsCloudtrailS3]
}

input AwsCloudtrailLookupEventsInput {
  LookupAttributes: [AwsCloudtrailLookupEventsLookupAttributesInput]
  StartTime: Date
  EndTime: Date
  MaxResults: Int
  NextToken: String
}

input AwsCloudtrailLookupEventsLookupAttributesInput {
  AttributeKey: String!
  AttributeValue: String!
}

type AwsCloudtrailLookupEventsOutput {
  Events: [AwsCloudtrailLookupEventsOutputEvents]
  NextToken: String
}

type AwsCloudtrailLookupEventsOutputEvents {
  EventId: String
  EventName: String
  EventTime: Date
  EventSource: String
  Username: String
  Resources: [AwsCloudtrailLookupEventsOutputEventsResources]
  CloudTrailEvent: String
}

type AwsCloudtrailLookupEventsOutputEventsResources {
  ResourceType: String
  ResourceName: String
}

input AwsCloudtrailPutEventSelectorsInput {
  TrailName: String!
  EventSelectors: [AwsCloudtrailSiInput]!
}

type AwsCloudtrailPutEventSelectorsOutput {
  TrailARN: String
  EventSelectors: [AwsCloudtrailSi]
}

input AwsCloudtrailRemoveTagsInput {
  ResourceId: String!
  TagsList: [AwsCloudtrailS3Input]
}

type AwsCloudtrailS3 {
  Key: String!
  Value: String
}

input AwsCloudtrailS3Input {
  Key: String!
  Value: String
}

type AwsCloudtrailSi {
  ReadWriteType: String
  IncludeManagementEvents: Boolean
  DataResources: [AwsCloudtrailSiDataResources]
}

type AwsCloudtrailSiDataResources {
  Type: String
  Values: [String]
}

input AwsCloudtrailSiDataResourcesInput {
  Type: String
  Values: [String]
}

input AwsCloudtrailSiInput {
  ReadWriteType: String
  IncludeManagementEvents: Boolean
  DataResources: [AwsCloudtrailSiDataResourcesInput]
}

input AwsCloudtrailStartLoggingInput {
  Name: String!
}

input AwsCloudtrailStopLoggingInput {
  Name: String!
}

input AwsCloudtrailUpdateTrailInput {
  Name: String!
  S3BucketName: String
  S3KeyPrefix: String
  SnsTopicName: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  EnableLogFileValidation: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
}

type AwsCloudtrailUpdateTrailOutput {
  Name: String
  S3BucketName: String
  S3KeyPrefix: String
  SnsTopicName: String
  SnsTopicARN: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  TrailARN: String
  LogFileValidationEnabled: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
}

# Amazon CloudWatch (2010-08-01)
type AwsCloudwatch {
  # cloudwatch.DeleteAlarms
  DeleteAlarms(input: AwsCloudwatchDeleteAlarmsInput!): JSON

  # cloudwatch.DeleteDashboards
  DeleteDashboards(input: AwsCloudwatchDeleteDashboardsInput): JSON

  # cloudwatch.DescribeAlarmHistory
  DescribeAlarmHistory(input: AwsCloudwatchDescribeAlarmHistoryInput): AwsCloudwatchDescribeAlarmHistoryOutput

  # cloudwatch.DescribeAlarms
  DescribeAlarms(input: AwsCloudwatchDescribeAlarmsInput): AwsCloudwatchDescribeAlarmsOutput

  # cloudwatch.DescribeAlarmsForMetric
  DescribeAlarmsForMetric(input: AwsCloudwatchDescribeAlarmsForMetricInput!): AwsCloudwatchDescribeAlarmsForMetricOutput

  # cloudwatch.DisableAlarmActions
  DisableAlarmActions(input: AwsCloudwatchDisableAlarmActionsInput!): JSON

  # cloudwatch.EnableAlarmActions
  EnableAlarmActions(input: AwsCloudwatchEnableAlarmActionsInput!): JSON

  # cloudwatch.GetDashboard
  GetDashboard(input: AwsCloudwatchGetDashboardInput): AwsCloudwatchGetDashboardOutput

  # cloudwatch.GetMetricStatistics
  GetMetricStatistics(input: AwsCloudwatchGetMetricStatisticsInput!): AwsCloudwatchGetMetricStatisticsOutput

  # cloudwatch.ListDashboards
  ListDashboards(input: AwsCloudwatchListDashboardsInput): AwsCloudwatchListDashboardsOutput

  # cloudwatch.ListMetrics
  ListMetrics(input: AwsCloudwatchListMetricsInput): AwsCloudwatchListMetricsOutput

  # cloudwatch.PutDashboard
  PutDashboard(input: AwsCloudwatchPutDashboardInput): AwsCloudwatchPutDashboardOutput

  # cloudwatch.PutMetricAlarm
  PutMetricAlarm(input: AwsCloudwatchPutMetricAlarmInput!): JSON

  # cloudwatch.PutMetricData
  PutMetricData(input: AwsCloudwatchPutMetricDataInput!): JSON

  # cloudwatch.SetAlarmState
  SetAlarmState(input: AwsCloudwatchSetAlarmStateInput!): JSON
}

input AwsCloudwatchDeleteAlarmsInput {
  AlarmNames: [String]!
}

input AwsCloudwatchDeleteDashboardsInput {
  DashboardNames: [String]
}

input AwsCloudwatchDescribeAlarmHistoryInput {
  AlarmName: String
  HistoryItemType: String
  StartDate: Date
  EndDate: Date
  MaxRecords: Int
  NextToken: String
}

type AwsCloudwatchDescribeAlarmHistoryOutput {
  AlarmHistoryItems: [AwsCloudwatchDescribeAlarmHistoryOutputAlarmHistoryItems]
  NextToken: String
}

type AwsCloudwatchDescribeAlarmHistoryOutputAlarmHistoryItems {
  AlarmName: String
  Timestamp: Date
  HistoryItemType: String
  HistorySummary: String
  HistoryData: String
}

input AwsCloudwatchDescribeAlarmsForMetricInput {
  MetricName: String!
  Namespace: String!
  Statistic: String
  ExtendedStatistic: String
  Dimensions: [AwsCloudwatchS10Input]
  Period: Int
  Unit: String
}

type AwsCloudwatchDescribeAlarmsForMetricOutput {
  MetricAlarms: [AwsCloudwatchSn]
}

input AwsCloudwatchDescribeAlarmsInput {
  AlarmNames: [String]
  AlarmNamePrefix: String
  StateValue: String
  ActionPrefix: String
  MaxRecords: Int
  NextToken: String
}

type AwsCloudwatchDescribeAlarmsOutput {
  MetricAlarms: [AwsCloudwatchSn]
  NextToken: String
}

input AwsCloudwatchDisableAlarmActionsInput {
  AlarmNames: [String]!
}

input AwsCloudwatchEnableAlarmActionsInput {
  AlarmNames: [String]!
}

# Amazon CloudWatch Events (2015-10-07)
type AwsCloudwatchevents {
  # cloudwatchevents.DeleteRule
  DeleteRule(input: AwsCloudwatcheventsDeleteRuleInput!): JSON

  # cloudwatchevents.DescribeEventBus
  DescribeEventBus(input: JSON): AwsCloudwatcheventsDescribeEventBusOutput

  # cloudwatchevents.DescribeRule
  DescribeRule(input: AwsCloudwatcheventsDescribeRuleInput!): AwsCloudwatcheventsDescribeRuleOutput

  # cloudwatchevents.DisableRule
  DisableRule(input: AwsCloudwatcheventsDisableRuleInput!): JSON

  # cloudwatchevents.EnableRule
  EnableRule(input: AwsCloudwatcheventsEnableRuleInput!): JSON

  # cloudwatchevents.ListRuleNamesByTarget
  ListRuleNamesByTarget(input: AwsCloudwatcheventsListRuleNamesByTargetInput!): AwsCloudwatcheventsListRuleNamesByTargetOutput

  # cloudwatchevents.ListRules
  ListRules(input: AwsCloudwatcheventsListRulesInput): AwsCloudwatcheventsListRulesOutput

  # cloudwatchevents.ListTargetsByRule
  ListTargetsByRule(input: AwsCloudwatcheventsListTargetsByRuleInput!): AwsCloudwatcheventsListTargetsByRuleOutput

  # cloudwatchevents.PutEvents
  PutEvents(input: AwsCloudwatcheventsPutEventsInput!): AwsCloudwatcheventsPutEventsOutput

  # cloudwatchevents.PutPermission
  PutPermission(input: AwsCloudwatcheventsPutPermissionInput!): JSON

  # cloudwatchevents.PutRule
  PutRule(input: AwsCloudwatcheventsPutRuleInput!): AwsCloudwatcheventsPutRuleOutput

  # cloudwatchevents.PutTargets
  PutTargets(input: AwsCloudwatcheventsPutTargetsInput!): AwsCloudwatcheventsPutTargetsOutput

  # cloudwatchevents.RemovePermission
  RemovePermission(input: AwsCloudwatcheventsRemovePermissionInput!): JSON

  # cloudwatchevents.RemoveTargets
  RemoveTargets(input: AwsCloudwatcheventsRemoveTargetsInput!): AwsCloudwatcheventsRemoveTargetsOutput

  # cloudwatchevents.TestEventPattern
  TestEventPattern(input: AwsCloudwatcheventsTestEventPatternInput!): AwsCloudwatcheventsTestEventPatternOutput
}

input AwsCloudwatcheventsDeleteRuleInput {
  Name: String!
}

type AwsCloudwatcheventsDescribeEventBusOutput {
  Name: String
  Arn: String
  Policy: String
}

input AwsCloudwatcheventsDescribeRuleInput {
  Name: String!
}

type AwsCloudwatcheventsDescribeRuleOutput {
  Name: String
  Arn: String
  EventPattern: String
  ScheduleExpression: String
  State: String
  Description: String
  RoleArn: String
}

input AwsCloudwatcheventsDisableRuleInput {
  Name: String!
}

input AwsCloudwatcheventsEnableRuleInput {
  Name: String!
}

input AwsCloudwatcheventsListRuleNamesByTargetInput {
  TargetArn: String!
  NextToken: String
  Limit: Int
}

type AwsCloudwatcheventsListRuleNamesByTargetOutput {
  RuleNames: [String]
  NextToken: String
}

input AwsCloudwatcheventsListRulesInput {
  NamePrefix: String
  NextToken: String
  Limit: Int
}

type AwsCloudwatcheventsListRulesOutput {
  Rules: [AwsCloudwatcheventsListRulesOutputRules]
  NextToken: String
}

type AwsCloudwatcheventsListRulesOutputRules {
  Name: String
  Arn: String
  EventPattern: String
  State: String
  Description: String
  ScheduleExpression: String
  RoleArn: String
}

input AwsCloudwatcheventsListTargetsByRuleInput {
  Rule: String!
  NextToken: String
  Limit: Int
}

type AwsCloudwatcheventsListTargetsByRuleOutput {
  Targets: [AwsCloudwatcheventsSs]
  NextToken: String
}

input AwsCloudwatcheventsPutEventsEntriesInput {
  Time: Date
  Source: String
  Resources: [String]
  DetailType: String
  Detail: String
}

input AwsCloudwatcheventsPutEventsInput {
  Entries: [AwsCloudwatcheventsPutEventsEntriesInput]!
}

type AwsCloudwatcheventsPutEventsOutput {
  FailedEntryCount: Int
  Entries: [AwsCloudwatcheventsPutEventsOutputEntries]
}

type AwsCloudwatcheventsPutEventsOutputEntries {
  EventId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsCloudwatcheventsPutPermissionInput {
  Action: String!
  Principal: String!
  StatementId: String!
}

input AwsCloudwatcheventsPutRuleInput {
  Name: String!
  ScheduleExpression: String
  EventPattern: String
  State: String
  Description: String
  RoleArn: String
}

type AwsCloudwatcheventsPutRuleOutput {
  RuleArn: String
}

input AwsCloudwatcheventsPutTargetsInput {
  Rule: String!
  Targets: [AwsCloudwatcheventsSsInput]!
}

type AwsCloudwatcheventsPutTargetsOutput {
  FailedEntryCount: Int
  FailedEntries: [AwsCloudwatcheventsPutTargetsOutputFailedEntries]
}

type AwsCloudwatcheventsPutTargetsOutputFailedEntries {
  TargetId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsCloudwatcheventsRemovePermissionInput {
  StatementId: String!
}

input AwsCloudwatcheventsRemoveTargetsInput {
  Rule: String!
  Ids: [String]!
}

type AwsCloudwatcheventsRemoveTargetsOutput {
  FailedEntryCount: Int
  FailedEntries: [AwsCloudwatcheventsRemoveTargetsOutputFailedEntries]
}

type AwsCloudwatcheventsRemoveTargetsOutputFailedEntries {
  TargetId: String
  ErrorCode: String
  ErrorMessage: String
}

type AwsCloudwatcheventsSs {
  Id: String!
  Arn: String!
  RoleArn: String
  Input: String
  InputPath: String
  InputTransformer: AwsCloudwatcheventsSsInputTransformer
  KinesisParameters: AwsCloudwatcheventsSsKinesisParameters
  RunCommandParameters: AwsCloudwatcheventsSsRunCommandParameters
  EcsParameters: AwsCloudwatcheventsSsEcsParameters
}

type AwsCloudwatcheventsSsEcsParameters {
  TaskDefinitionArn: String!
  TaskCount: Int
}

input AwsCloudwatcheventsSsEcsParametersInput {
  TaskDefinitionArn: String!
  TaskCount: Int
}

input AwsCloudwatcheventsSsInput {
  Id: String!
  Arn: String!
  RoleArn: String
  Input: String
  InputPath: String
  InputTransformer: AwsCloudwatcheventsSsInputTransformerInput
  KinesisParameters: AwsCloudwatcheventsSsKinesisParametersInput
  RunCommandParameters: AwsCloudwatcheventsSsRunCommandParametersInput
  EcsParameters: AwsCloudwatcheventsSsEcsParametersInput
}

type AwsCloudwatcheventsSsInputTransformer {
  InputPathsMap: JSON
  InputTemplate: String!
}

input AwsCloudwatcheventsSsInputTransformerInput {
  InputPathsMap: JSON
  InputTemplate: String!
}

type AwsCloudwatcheventsSsKinesisParameters {
  PartitionKeyPath: String!
}

input AwsCloudwatcheventsSsKinesisParametersInput {
  PartitionKeyPath: String!
}

type AwsCloudwatcheventsSsRunCommandParameters {
  RunCommandTargets: [AwsCloudwatcheventsSsRunCommandParametersRunCommandTargets]!
}

input AwsCloudwatcheventsSsRunCommandParametersInput {
  RunCommandTargets: [AwsCloudwatcheventsSsRunCommandParametersRunCommandTargetsInput]!
}

type AwsCloudwatcheventsSsRunCommandParametersRunCommandTargets {
  Key: String!
  Values: [String]!
}

input AwsCloudwatcheventsSsRunCommandParametersRunCommandTargetsInput {
  Key: String!
  Values: [String]!
}

input AwsCloudwatcheventsTestEventPatternInput {
  EventPattern: String!
  Event: String!
}

type AwsCloudwatcheventsTestEventPatternOutput {
  Result: Boolean
}

input AwsCloudwatchGetDashboardInput {
  DashboardName: String
}

type AwsCloudwatchGetDashboardOutput {
  DashboardArn: String
  DashboardBody: String
  DashboardName: String
}

input AwsCloudwatchGetMetricStatisticsInput {
  Namespace: String!
  MetricName: String!
  Dimensions: [AwsCloudwatchS10Input]
  StartTime: Date!
  EndTime: Date!
  Period: Int!
  Statistics: [String]
  ExtendedStatistics: [String]
  Unit: String
}

type AwsCloudwatchGetMetricStatisticsOutput {
  Label: String
  Datapoints: [AwsCloudwatchGetMetricStatisticsOutputDatapoints]
}

type AwsCloudwatchGetMetricStatisticsOutputDatapoints {
  Timestamp: Date
  SampleCount: JSON
  Average: JSON
  Sum: JSON
  Minimum: JSON
  Maximum: JSON
  Unit: String
  ExtendedStatistics: JSON
}

input AwsCloudwatchListDashboardsInput {
  DashboardNamePrefix: String
  NextToken: String
}

type AwsCloudwatchListDashboardsOutput {
  DashboardEntries: [AwsCloudwatchListDashboardsOutputDashboardEntries]
  NextToken: String
}

type AwsCloudwatchListDashboardsOutputDashboardEntries {
  DashboardName: String
  DashboardArn: String
  LastModified: Date
  Size: JSON
}

input AwsCloudwatchListMetricsDimensionsInput {
  Name: String!
  Value: String
}

input AwsCloudwatchListMetricsInput {
  Namespace: String
  MetricName: String
  Dimensions: [AwsCloudwatchListMetricsDimensionsInput]
  NextToken: String
}

type AwsCloudwatchListMetricsOutput {
  Metrics: [AwsCloudwatchListMetricsOutputMetrics]
  NextToken: String
}

type AwsCloudwatchListMetricsOutputMetrics {
  Namespace: String
  MetricName: String
  Dimensions: [AwsCloudwatchS10]
}

# Amazon CloudWatch Logs (2014-03-28)
type AwsCloudwatchlogs {
  # cloudwatchlogs.AssociateKmsKey
  AssociateKmsKey(input: AwsCloudwatchlogsAssociateKmsKeyInput!): JSON

  # cloudwatchlogs.CancelExportTask
  CancelExportTask(input: AwsCloudwatchlogsCancelExportTaskInput!): JSON

  # cloudwatchlogs.CreateExportTask
  CreateExportTask(input: AwsCloudwatchlogsCreateExportTaskInput!): AwsCloudwatchlogsCreateExportTaskOutput

  # cloudwatchlogs.CreateLogGroup
  CreateLogGroup(input: AwsCloudwatchlogsCreateLogGroupInput!): JSON

  # cloudwatchlogs.CreateLogStream
  CreateLogStream(input: AwsCloudwatchlogsCreateLogStreamInput!): JSON

  # cloudwatchlogs.DeleteDestination
  DeleteDestination(input: AwsCloudwatchlogsDeleteDestinationInput!): JSON

  # cloudwatchlogs.DeleteLogGroup
  DeleteLogGroup(input: AwsCloudwatchlogsDeleteLogGroupInput!): JSON

  # cloudwatchlogs.DeleteLogStream
  DeleteLogStream(input: AwsCloudwatchlogsDeleteLogStreamInput!): JSON

  # cloudwatchlogs.DeleteMetricFilter
  DeleteMetricFilter(input: AwsCloudwatchlogsDeleteMetricFilterInput!): JSON

  # cloudwatchlogs.DeleteResourcePolicy
  DeleteResourcePolicy(input: AwsCloudwatchlogsDeleteResourcePolicyInput): JSON

  # cloudwatchlogs.DeleteRetentionPolicy
  DeleteRetentionPolicy(input: AwsCloudwatchlogsDeleteRetentionPolicyInput!): JSON

  # cloudwatchlogs.DeleteSubscriptionFilter
  DeleteSubscriptionFilter(input: AwsCloudwatchlogsDeleteSubscriptionFilterInput!): JSON

  # cloudwatchlogs.DescribeDestinations
  DescribeDestinations(input: AwsCloudwatchlogsDescribeDestinationsInput): AwsCloudwatchlogsDescribeDestinationsOutput

  # cloudwatchlogs.DescribeExportTasks
  DescribeExportTasks(input: AwsCloudwatchlogsDescribeExportTasksInput): AwsCloudwatchlogsDescribeExportTasksOutput

  # cloudwatchlogs.DescribeLogGroups
  DescribeLogGroups(input: AwsCloudwatchlogsDescribeLogGroupsInput): AwsCloudwatchlogsDescribeLogGroupsOutput

  # cloudwatchlogs.DescribeLogStreams
  DescribeLogStreams(input: AwsCloudwatchlogsDescribeLogStreamsInput!): AwsCloudwatchlogsDescribeLogStreamsOutput

  # cloudwatchlogs.DescribeMetricFilters
  DescribeMetricFilters(input: AwsCloudwatchlogsDescribeMetricFiltersInput): AwsCloudwatchlogsDescribeMetricFiltersOutput

  # cloudwatchlogs.DescribeResourcePolicies
  DescribeResourcePolicies(input: AwsCloudwatchlogsDescribeResourcePoliciesInput): AwsCloudwatchlogsDescribeResourcePoliciesOutput

  # cloudwatchlogs.DescribeSubscriptionFilters
  DescribeSubscriptionFilters(input: AwsCloudwatchlogsDescribeSubscriptionFiltersInput!): AwsCloudwatchlogsDescribeSubscriptionFiltersOutput

  # cloudwatchlogs.DisassociateKmsKey
  DisassociateKmsKey(input: AwsCloudwatchlogsDisassociateKmsKeyInput!): JSON

  # cloudwatchlogs.FilterLogEvents
  FilterLogEvents(input: AwsCloudwatchlogsFilterLogEventsInput!): AwsCloudwatchlogsFilterLogEventsOutput

  # cloudwatchlogs.GetLogEvents
  GetLogEvents(input: AwsCloudwatchlogsGetLogEventsInput!): AwsCloudwatchlogsGetLogEventsOutput

  # cloudwatchlogs.ListTagsLogGroup
  ListTagsLogGroup(input: AwsCloudwatchlogsListTagsLogGroupInput!): AwsCloudwatchlogsListTagsLogGroupOutput

  # cloudwatchlogs.PutDestination
  PutDestination(input: AwsCloudwatchlogsPutDestinationInput!): AwsCloudwatchlogsPutDestinationOutput

  # cloudwatchlogs.PutDestinationPolicy
  PutDestinationPolicy(input: AwsCloudwatchlogsPutDestinationPolicyInput!): JSON

  # cloudwatchlogs.PutLogEvents
  PutLogEvents(input: AwsCloudwatchlogsPutLogEventsInput!): AwsCloudwatchlogsPutLogEventsOutput

  # cloudwatchlogs.PutMetricFilter
  PutMetricFilter(input: AwsCloudwatchlogsPutMetricFilterInput!): JSON

  # cloudwatchlogs.PutResourcePolicy
  PutResourcePolicy(input: AwsCloudwatchlogsPutResourcePolicyInput): AwsCloudwatchlogsPutResourcePolicyOutput

  # cloudwatchlogs.PutRetentionPolicy
  PutRetentionPolicy(input: AwsCloudwatchlogsPutRetentionPolicyInput!): JSON

  # cloudwatchlogs.PutSubscriptionFilter
  PutSubscriptionFilter(input: AwsCloudwatchlogsPutSubscriptionFilterInput!): JSON

  # cloudwatchlogs.TagLogGroup
  TagLogGroup(input: AwsCloudwatchlogsTagLogGroupInput!): JSON

  # cloudwatchlogs.TestMetricFilter
  TestMetricFilter(input: AwsCloudwatchlogsTestMetricFilterInput!): AwsCloudwatchlogsTestMetricFilterOutput

  # cloudwatchlogs.UntagLogGroup
  UntagLogGroup(input: AwsCloudwatchlogsUntagLogGroupInput!): JSON
}

input AwsCloudwatchlogsAssociateKmsKeyInput {
  logGroupName: String!
  kmsKeyId: String!
}

input AwsCloudwatchlogsCancelExportTaskInput {
  taskId: String!
}

input AwsCloudwatchlogsCreateExportTaskInput {
  taskName: String
  logGroupName: String!
  logStreamNamePrefix: String
  from: JSON!
  to: JSON!
  destination: String!
  destinationPrefix: String
}

type AwsCloudwatchlogsCreateExportTaskOutput {
  taskId: String
}

input AwsCloudwatchlogsCreateLogGroupInput {
  logGroupName: String!
  kmsKeyId: String
  tags: JSON
}

input AwsCloudwatchlogsCreateLogStreamInput {
  logGroupName: String!
  logStreamName: String!
}

input AwsCloudwatchlogsDeleteDestinationInput {
  destinationName: String!
}

input AwsCloudwatchlogsDeleteLogGroupInput {
  logGroupName: String!
}

input AwsCloudwatchlogsDeleteLogStreamInput {
  logGroupName: String!
  logStreamName: String!
}

input AwsCloudwatchlogsDeleteMetricFilterInput {
  logGroupName: String!
  filterName: String!
}

input AwsCloudwatchlogsDeleteResourcePolicyInput {
  policyName: String
}

input AwsCloudwatchlogsDeleteRetentionPolicyInput {
  logGroupName: String!
}

input AwsCloudwatchlogsDeleteSubscriptionFilterInput {
  logGroupName: String!
  filterName: String!
}

input AwsCloudwatchlogsDescribeDestinationsInput {
  DestinationNamePrefix: String
  nextToken: String
  limit: Int
}

type AwsCloudwatchlogsDescribeDestinationsOutput {
  destinations: [AwsCloudwatchlogsSx]
  nextToken: String
}

input AwsCloudwatchlogsDescribeExportTasksInput {
  taskId: String
  statusCode: String
  nextToken: String
  limit: Int
}

type AwsCloudwatchlogsDescribeExportTasksOutput {
  exportTasks: [AwsCloudwatchlogsDescribeExportTasksOutputExportTasks]
  nextToken: String
}

type AwsCloudwatchlogsDescribeExportTasksOutputExportTasks {
  taskId: String
  taskName: String
  logGroupName: String
  from: JSON
  to: JSON
  destination: String
  destinationPrefix: String
  status: AwsCloudwatchlogsDescribeExportTasksOutputExportTasksStatus
  executionInfo: AwsCloudwatchlogsDescribeExportTasksOutputExportTasksExecutionInfo
}

type AwsCloudwatchlogsDescribeExportTasksOutputExportTasksExecutionInfo {
  creationTime: JSON
  completionTime: JSON
}

type AwsCloudwatchlogsDescribeExportTasksOutputExportTasksStatus {
  code: String
  message: String
}

input AwsCloudwatchlogsDescribeLogGroupsInput {
  logGroupNamePrefix: String
  nextToken: String
  limit: Int
}

type AwsCloudwatchlogsDescribeLogGroupsOutput {
  logGroups: [AwsCloudwatchlogsDescribeLogGroupsOutputLogGroups]
  nextToken: String
}

type AwsCloudwatchlogsDescribeLogGroupsOutputLogGroups {
  logGroupName: String
  creationTime: JSON
  retentionInDays: Int
  metricFilterCount: Int
  arn: String
  storedBytes: JSON
  kmsKeyId: String
}

input AwsCloudwatchlogsDescribeLogStreamsInput {
  logGroupName: String!
  logStreamNamePrefix: String
  orderBy: String
  descending: Boolean
  nextToken: String
  limit: Int
}

type AwsCloudwatchlogsDescribeLogStreamsOutput {
  logStreams: [AwsCloudwatchlogsDescribeLogStreamsOutputLogStreams]
  nextToken: String
}

type AwsCloudwatchlogsDescribeLogStreamsOutputLogStreams {
  logStreamName: String
  creationTime: JSON
  firstEventTimestamp: JSON
  lastEventTimestamp: JSON
  lastIngestionTime: JSON
  uploadSequenceToken: String
  arn: String
  storedBytes: JSON
}

input AwsCloudwatchlogsDescribeMetricFiltersInput {
  logGroupName: String
  filterNamePrefix: String
  nextToken: String
  limit: Int
  metricName: String
  metricNamespace: String
}

type AwsCloudwatchlogsDescribeMetricFiltersOutput {
  metricFilters: [AwsCloudwatchlogsDescribeMetricFiltersOutputMetricFilters]
  nextToken: String
}

type AwsCloudwatchlogsDescribeMetricFiltersOutputMetricFilters {
  filterName: String
  filterPattern: String
  metricTransformations: [AwsCloudwatchlogsS1v]
  creationTime: JSON
  logGroupName: String
}

input AwsCloudwatchlogsDescribeResourcePoliciesInput {
  nextToken: String
  limit: Int
}

type AwsCloudwatchlogsDescribeResourcePoliciesOutput {
  resourcePolicies: [AwsCloudwatchlogsS22]
  nextToken: String
}

input AwsCloudwatchlogsDescribeSubscriptionFiltersInput {
  logGroupName: String!
  filterNamePrefix: String
  nextToken: String
  limit: Int
}

type AwsCloudwatchlogsDescribeSubscriptionFiltersOutput {
  subscriptionFilters: [AwsCloudwatchlogsDescribeSubscriptionFiltersOutputSubscriptionFilters]
  nextToken: String
}

type AwsCloudwatchlogsDescribeSubscriptionFiltersOutputSubscriptionFilters {
  filterName: String
  logGroupName: String
  filterPattern: String
  destinationArn: String
  roleArn: String
  distribution: String
  creationTime: JSON
}

input AwsCloudwatchlogsDisassociateKmsKeyInput {
  logGroupName: String!
}

input AwsCloudwatchlogsFilterLogEventsInput {
  logGroupName: String!
  logStreamNames: [String]
  startTime: JSON
  endTime: JSON
  filterPattern: String
  nextToken: String
  limit: Int
  interleaved: Boolean
}

type AwsCloudwatchlogsFilterLogEventsOutput {
  events: [AwsCloudwatchlogsFilterLogEventsOutputEvents]
  searchedLogStreams: [AwsCloudwatchlogsFilterLogEventsOutputSearchedLogStreams]
  nextToken: String
}

type AwsCloudwatchlogsFilterLogEventsOutputEvents {
  logStreamName: String
  timestamp: JSON
  message: String
  ingestionTime: JSON
  eventId: String
}

type AwsCloudwatchlogsFilterLogEventsOutputSearchedLogStreams {
  logStreamName: String
  searchedCompletely: Boolean
}

input AwsCloudwatchlogsGetLogEventsInput {
  logGroupName: String!
  logStreamName: String!
  startTime: JSON
  endTime: JSON
  nextToken: String
  limit: Int
  startFromHead: Boolean
}

type AwsCloudwatchlogsGetLogEventsOutput {
  events: [AwsCloudwatchlogsGetLogEventsOutputEvents]
  nextForwardToken: String
  nextBackwardToken: String
}

type AwsCloudwatchlogsGetLogEventsOutputEvents {
  timestamp: JSON
  message: String
  ingestionTime: JSON
}

input AwsCloudwatchlogsListTagsLogGroupInput {
  logGroupName: String!
}

type AwsCloudwatchlogsListTagsLogGroupOutput {
  tags: JSON
}

input AwsCloudwatchlogsPutDestinationInput {
  destinationName: String!
  targetArn: String!
  roleArn: String!
}

type AwsCloudwatchlogsPutDestinationOutput {
  destination: AwsCloudwatchlogsSx
}

input AwsCloudwatchlogsPutDestinationPolicyInput {
  destinationName: String!
  accessPolicy: String!
}

input AwsCloudwatchlogsPutLogEventsInput {
  logGroupName: String!
  logStreamName: String!
  logEvents: [AwsCloudwatchlogsPutLogEventsLogEventsInput]!
  sequenceToken: String
}

input AwsCloudwatchlogsPutLogEventsLogEventsInput {
  timestamp: JSON!
  message: String!
}

type AwsCloudwatchlogsPutLogEventsOutput {
  nextSequenceToken: String
  rejectedLogEventsInfo: AwsCloudwatchlogsPutLogEventsOutputRejectedLogEventsInfo
}

type AwsCloudwatchlogsPutLogEventsOutputRejectedLogEventsInfo {
  tooNewLogEventStartIndex: Int
  tooOldLogEventEndIndex: Int
  expiredLogEventEndIndex: Int
}

input AwsCloudwatchlogsPutMetricFilterInput {
  logGroupName: String!
  filterName: String!
  filterPattern: String!
  metricTransformations: [AwsCloudwatchlogsS1vInput]!
}

input AwsCloudwatchlogsPutResourcePolicyInput {
  policyName: String
  policyDocument: String
}

type AwsCloudwatchlogsPutResourcePolicyOutput {
  resourcePolicy: AwsCloudwatchlogsS22
}

input AwsCloudwatchlogsPutRetentionPolicyInput {
  logGroupName: String!
  retentionInDays: Int!
}

input AwsCloudwatchlogsPutSubscriptionFilterInput {
  logGroupName: String!
  filterName: String!
  filterPattern: String!
  destinationArn: String!
  roleArn: String
  distribution: String
}

type AwsCloudwatchlogsS1v {
  metricName: String!
  metricNamespace: String!
  metricValue: String!
  defaultValue: JSON
}

input AwsCloudwatchlogsS1vInput {
  metricName: String!
  metricNamespace: String!
  metricValue: String!
  defaultValue: JSON
}

type AwsCloudwatchlogsS22 {
  policyName: String
  policyDocument: String
  lastUpdatedTime: JSON
}

type AwsCloudwatchlogsSx {
  destinationName: String
  targetArn: String
  roleArn: String
  accessPolicy: String
  arn: String
  creationTime: JSON
}

input AwsCloudwatchlogsTagLogGroupInput {
  logGroupName: String!
  tags: JSON!
}

input AwsCloudwatchlogsTestMetricFilterInput {
  filterPattern: String!
  logEventMessages: [String]!
}

type AwsCloudwatchlogsTestMetricFilterOutput {
  matches: [AwsCloudwatchlogsTestMetricFilterOutputMatches]
}

type AwsCloudwatchlogsTestMetricFilterOutputMatches {
  eventNumber: JSON
  eventMessage: String
  extractedValues: JSON
}

input AwsCloudwatchlogsUntagLogGroupInput {
  logGroupName: String!
  tags: [String]!
}

input AwsCloudwatchPutDashboardInput {
  DashboardName: String
  DashboardBody: String
}

type AwsCloudwatchPutDashboardOutput {
  DashboardValidationMessages: [AwsCloudwatchPutDashboardOutputDashboardValidationMessages]
}

type AwsCloudwatchPutDashboardOutputDashboardValidationMessages {
  DataPath: String
  Message: String
}

input AwsCloudwatchPutMetricAlarmInput {
  AlarmName: String!
  AlarmDescription: String
  ActionsEnabled: Boolean
  OKActions: [String]
  AlarmActions: [String]
  InsufficientDataActions: [String]
  MetricName: String!
  Namespace: String!
  Statistic: String
  ExtendedStatistic: String
  Dimensions: [AwsCloudwatchS10Input]
  Period: Int!
  Unit: String
  EvaluationPeriods: Int!
  Threshold: JSON!
  ComparisonOperator: String!
  TreatMissingData: String
  EvaluateLowSampleCountPercentile: String
}

input AwsCloudwatchPutMetricDataInput {
  Namespace: String!
  MetricData: [AwsCloudwatchPutMetricDataMetricDataInput]!
}

input AwsCloudwatchPutMetricDataMetricDataInput {
  MetricName: String!
  Dimensions: [AwsCloudwatchS10Input]
  Timestamp: Date
  Value: JSON
  StatisticValues: AwsCloudwatchPutMetricDataMetricDataStatisticValuesInput
  Unit: String
  StorageResolution: Int
}

input AwsCloudwatchPutMetricDataMetricDataStatisticValuesInput {
  SampleCount: JSON!
  Sum: JSON!
  Minimum: JSON!
  Maximum: JSON!
}

type AwsCloudwatchS10 {
  Name: String!
  Value: String!
}

input AwsCloudwatchS10Input {
  Name: String!
  Value: String!
}

input AwsCloudwatchSetAlarmStateInput {
  AlarmName: String!
  StateValue: String!
  StateReason: String!
  StateReasonData: String
}

type AwsCloudwatchSn {
  AlarmName: String
  AlarmArn: String
  AlarmDescription: String
  AlarmConfigurationUpdatedTimestamp: Date
  ActionsEnabled: Boolean
  OKActions: [String]
  AlarmActions: [String]
  InsufficientDataActions: [String]
  StateValue: String
  StateReason: String
  StateReasonData: String
  StateUpdatedTimestamp: Date
  MetricName: String
  Namespace: String
  Statistic: String
  ExtendedStatistic: String
  Dimensions: [AwsCloudwatchS10]
  Period: Int
  Unit: String
  EvaluationPeriods: Int
  Threshold: JSON
  ComparisonOperator: String
  TreatMissingData: String
  EvaluateLowSampleCountPercentile: String
}

# AWS CodeBuild (2016-10-06)
type AwsCodebuild {
  # codebuild.BatchDeleteBuilds
  BatchDeleteBuilds(input: AwsCodebuildBatchDeleteBuildsInput!): AwsCodebuildBatchDeleteBuildsOutput

  # codebuild.BatchGetBuilds
  BatchGetBuilds(input: AwsCodebuildBatchGetBuildsInput!): AwsCodebuildBatchGetBuildsOutput

  # codebuild.BatchGetProjects
  BatchGetProjects(input: AwsCodebuildBatchGetProjectsInput!): AwsCodebuildBatchGetProjectsOutput

  # codebuild.CreateProject
  CreateProject(input: AwsCodebuildCreateProjectInput!): AwsCodebuildCreateProjectOutput

  # codebuild.CreateWebhook
  CreateWebhook(input: AwsCodebuildCreateWebhookInput!): AwsCodebuildCreateWebhookOutput

  # codebuild.DeleteProject
  DeleteProject(input: AwsCodebuildDeleteProjectInput!): JSON

  # codebuild.DeleteWebhook
  DeleteWebhook(input: AwsCodebuildDeleteWebhookInput!): JSON

  # codebuild.InvalidateProjectCache
  InvalidateProjectCache(input: AwsCodebuildInvalidateProjectCacheInput!): JSON

  # codebuild.ListBuilds
  ListBuilds(input: AwsCodebuildListBuildsInput): AwsCodebuildListBuildsOutput

  # codebuild.ListBuildsForProject
  ListBuildsForProject(input: AwsCodebuildListBuildsForProjectInput!): AwsCodebuildListBuildsForProjectOutput

  # codebuild.ListCuratedEnvironmentImages
  ListCuratedEnvironmentImages(input: JSON): AwsCodebuildListCuratedEnvironmentImagesOutput

  # codebuild.ListProjects
  ListProjects(input: AwsCodebuildListProjectsInput): AwsCodebuildListProjectsOutput

  # codebuild.StartBuild
  StartBuild(input: AwsCodebuildStartBuildInput!): AwsCodebuildStartBuildOutput

  # codebuild.StopBuild
  StopBuild(input: AwsCodebuildStopBuildInput!): AwsCodebuildStopBuildOutput

  # codebuild.UpdateProject
  UpdateProject(input: AwsCodebuildUpdateProjectInput!): AwsCodebuildUpdateProjectOutput
}

input AwsCodebuildBatchDeleteBuildsInput {
  ids: [String]!
}

type AwsCodebuildBatchDeleteBuildsOutput {
  buildsDeleted: [String]
  buildsNotDeleted: [AwsCodebuildBatchDeleteBuildsOutputBuildsNotDeleted]
}

type AwsCodebuildBatchDeleteBuildsOutputBuildsNotDeleted {
  id: String
  statusCode: String
}

input AwsCodebuildBatchGetBuildsInput {
  ids: [String]!
}

type AwsCodebuildBatchGetBuildsOutput {
  builds: [AwsCodebuildSb]
  buildsNotFound: [String]
}

input AwsCodebuildBatchGetProjectsInput {
  names: [String]!
}

type AwsCodebuildBatchGetProjectsOutput {
  projects: [AwsCodebuildS19]
  projectsNotFound: [String]
}

input AwsCodebuildCreateProjectInput {
  name: String!
  description: String
  source: AwsCodebuildSkInput!
  artifacts: AwsCodebuildS1cInput!
  cache: AwsCodebuildSpInput
  environment: AwsCodebuildSrInput!
  serviceRole: String
  timeoutInMinutes: Int
  encryptionKey: String
  tags: [AwsCodebuildS1hInput]
  vpcConfig: AwsCodebuildS11Input
  badgeEnabled: Boolean
}

type AwsCodebuildCreateProjectOutput {
  project: AwsCodebuildS19
}

input AwsCodebuildCreateWebhookInput {
  projectName: String!
}

type AwsCodebuildCreateWebhookOutput {
  webhook: AwsCodebuildS1l
}

input AwsCodebuildDeleteProjectInput {
  name: String!
}

input AwsCodebuildDeleteWebhookInput {
  projectName: String!
}

input AwsCodebuildInvalidateProjectCacheInput {
  projectName: String!
}

input AwsCodebuildListBuildsForProjectInput {
  projectName: String!
  sortOrder: String
  nextToken: String
}

type AwsCodebuildListBuildsForProjectOutput {
  ids: [String]
  nextToken: String
}

input AwsCodebuildListBuildsInput {
  sortOrder: String
  nextToken: String
}

type AwsCodebuildListBuildsOutput {
  ids: [String]
  nextToken: String
}

type AwsCodebuildListCuratedEnvironmentImagesOutput {
  platforms: [AwsCodebuildListCuratedEnvironmentImagesOutputPlatforms]
}

type AwsCodebuildListCuratedEnvironmentImagesOutputPlatforms {
  platform: String
  languages: [AwsCodebuildListCuratedEnvironmentImagesOutputPlatformsLanguages]
}

type AwsCodebuildListCuratedEnvironmentImagesOutputPlatformsLanguages {
  language: String
  images: [AwsCodebuildListCuratedEnvironmentImagesOutputPlatformsLanguagesImages]
}

type AwsCodebuildListCuratedEnvironmentImagesOutputPlatformsLanguagesImages {
  name: String
  description: String
}

input AwsCodebuildListProjectsInput {
  sortBy: String
  sortOrder: String
  nextToken: String
}

type AwsCodebuildListProjectsOutput {
  nextToken: String
  projects: [String]
}

type AwsCodebuildS11 {
  vpcId: String
  subnets: [String]
  securityGroupIds: [String]
}

input AwsCodebuildS11Input {
  vpcId: String
  subnets: [String]
  securityGroupIds: [String]
}

type AwsCodebuildS19 {
  name: String
  arn: String
  description: String
  source: AwsCodebuildSk
  artifacts: AwsCodebuildS1c
  cache: AwsCodebuildSp
  environment: AwsCodebuildSr
  serviceRole: String
  timeoutInMinutes: Int
  encryptionKey: String
  tags: [AwsCodebuildS1h]
  created: Date
  lastModified: Date
  webhook: AwsCodebuildS1l
  vpcConfig: AwsCodebuildS11
  badge: AwsCodebuildS19Badge
}

type AwsCodebuildS19Badge {
  badgeEnabled: Boolean
  badgeRequestUrl: String
}

type AwsCodebuildS1c {
  type: String!
  location: String
  path: String
  namespaceType: String
  name: String
  packaging: String
}

input AwsCodebuildS1cInput {
  type: String!
  location: String
  path: String
  namespaceType: String
  name: String
  packaging: String
}

type AwsCodebuildS1h {
  key: String
  value: String
}

input AwsCodebuildS1hInput {
  key: String
  value: String
}

type AwsCodebuildS1l {
  url: String
}

type AwsCodebuildSb {
  id: String
  arn: String
  startTime: Date
  endTime: Date
  currentPhase: String
  buildStatus: String
  sourceVersion: String
  projectName: String
  phases: [AwsCodebuildSbPhases]
  source: AwsCodebuildSk
  artifacts: AwsCodebuildSbArtifacts
  cache: AwsCodebuildSp
  environment: AwsCodebuildSr
  logs: AwsCodebuildSbLogs
  timeoutInMinutes: Int
  buildComplete: Boolean
  initiator: String
  vpcConfig: AwsCodebuildS11
  networkInterface: AwsCodebuildSbNetworkInterface
}

type AwsCodebuildSbArtifacts {
  location: String
  sha256sum: String
  md5sum: String
}

type AwsCodebuildSbLogs {
  groupName: String
  streamName: String
  deepLink: String
}

type AwsCodebuildSbNetworkInterface {
  subnetId: String
  networkInterfaceId: String
}

type AwsCodebuildSbPhases {
  phaseType: String
  phaseStatus: String
  startTime: Date
  endTime: Date
  durationInSeconds: JSON
  contexts: [AwsCodebuildSbPhasesContexts]
}

type AwsCodebuildSbPhasesContexts {
  statusCode: String
  message: String
}

type AwsCodebuildSk {
  type: String!
  location: String
  buildspec: String
  auth: AwsCodebuildSkAuth
}

type AwsCodebuildSkAuth {
  type: String!
  resource: String
}

input AwsCodebuildSkAuthInput {
  type: String!
  resource: String
}

input AwsCodebuildSkInput {
  type: String!
  location: String
  buildspec: String
  auth: AwsCodebuildSkAuthInput
}

type AwsCodebuildSp {
  type: String!
  location: String
}

input AwsCodebuildSpInput {
  type: String!
  location: String
}

type AwsCodebuildSr {
  type: String!
  image: String!
  computeType: String!
  environmentVariables: [AwsCodebuildSu]
  privilegedMode: Boolean
}

input AwsCodebuildSrInput {
  type: String!
  image: String!
  computeType: String!
  environmentVariables: [AwsCodebuildSuInput]
  privilegedMode: Boolean
}

input AwsCodebuildStartBuildInput {
  projectName: String!
  sourceVersion: String
  artifactsOverride: AwsCodebuildS1cInput
  environmentVariablesOverride: [AwsCodebuildSuInput]
  buildspecOverride: String
  timeoutInMinutesOverride: Int
}

type AwsCodebuildStartBuildOutput {
  build: AwsCodebuildSb
}

input AwsCodebuildStopBuildInput {
  id: String!
}

type AwsCodebuildStopBuildOutput {
  build: AwsCodebuildSb
}

type AwsCodebuildSu {
  name: String!
  value: String!
  type: String
}

input AwsCodebuildSuInput {
  name: String!
  value: String!
  type: String
}

input AwsCodebuildUpdateProjectInput {
  name: String!
  description: String
  source: AwsCodebuildSkInput
  artifacts: AwsCodebuildS1cInput
  cache: AwsCodebuildSpInput
  environment: AwsCodebuildSrInput
  serviceRole: String
  timeoutInMinutes: Int
  encryptionKey: String
  tags: [AwsCodebuildS1hInput]
  vpcConfig: AwsCodebuildS11Input
  badgeEnabled: Boolean
}

type AwsCodebuildUpdateProjectOutput {
  project: AwsCodebuildS19
}

# AWS CodeCommit (2015-04-13)
type AwsCodecommit {
  # codecommit.BatchGetRepositories
  BatchGetRepositories(input: AwsCodecommitBatchGetRepositoriesInput!): AwsCodecommitBatchGetRepositoriesOutput

  # codecommit.CreateBranch
  CreateBranch(input: AwsCodecommitCreateBranchInput!): JSON

  # codecommit.CreatePullRequest
  CreatePullRequest(input: AwsCodecommitCreatePullRequestInput!): AwsCodecommitCreatePullRequestOutput

  # codecommit.CreateRepository
  CreateRepository(input: AwsCodecommitCreateRepositoryInput!): AwsCodecommitCreateRepositoryOutput

  # codecommit.DeleteBranch
  DeleteBranch(input: AwsCodecommitDeleteBranchInput!): AwsCodecommitDeleteBranchOutput

  # codecommit.DeleteCommentContent
  DeleteCommentContent(input: AwsCodecommitDeleteCommentContentInput!): AwsCodecommitDeleteCommentContentOutput

  # codecommit.DeleteRepository
  DeleteRepository(input: AwsCodecommitDeleteRepositoryInput!): AwsCodecommitDeleteRepositoryOutput

  # codecommit.DescribePullRequestEvents
  DescribePullRequestEvents(input: AwsCodecommitDescribePullRequestEventsInput!): AwsCodecommitDescribePullRequestEventsOutput

  # codecommit.GetBlob
  GetBlob(input: AwsCodecommitGetBlobInput!): AwsCodecommitGetBlobOutput

  # codecommit.GetBranch
  GetBranch(input: AwsCodecommitGetBranchInput): AwsCodecommitGetBranchOutput

  # codecommit.GetComment
  GetComment(input: AwsCodecommitGetCommentInput!): AwsCodecommitGetCommentOutput

  # codecommit.GetCommentsForComparedCommit
  GetCommentsForComparedCommit(input: AwsCodecommitGetCommentsForComparedCommitInput!): AwsCodecommitGetCommentsForComparedCommitOutput

  # codecommit.GetCommentsForPullRequest
  GetCommentsForPullRequest(input: AwsCodecommitGetCommentsForPullRequestInput!): AwsCodecommitGetCommentsForPullRequestOutput

  # codecommit.GetCommit
  GetCommit(input: AwsCodecommitGetCommitInput!): AwsCodecommitGetCommitOutput

  # codecommit.GetDifferences
  GetDifferences(input: AwsCodecommitGetDifferencesInput!): AwsCodecommitGetDifferencesOutput

  # codecommit.GetMergeConflicts
  GetMergeConflicts(input: AwsCodecommitGetMergeConflictsInput!): AwsCodecommitGetMergeConflictsOutput

  # codecommit.GetPullRequest
  GetPullRequest(input: AwsCodecommitGetPullRequestInput!): AwsCodecommitGetPullRequestOutput

  # codecommit.GetRepository
  GetRepository(input: AwsCodecommitGetRepositoryInput!): AwsCodecommitGetRepositoryOutput

  # codecommit.GetRepositoryTriggers
  GetRepositoryTriggers(input: AwsCodecommitGetRepositoryTriggersInput!): AwsCodecommitGetRepositoryTriggersOutput

  # codecommit.ListBranches
  ListBranches(input: AwsCodecommitListBranchesInput!): AwsCodecommitListBranchesOutput

  # codecommit.ListPullRequests
  ListPullRequests(input: AwsCodecommitListPullRequestsInput!): AwsCodecommitListPullRequestsOutput

  # codecommit.ListRepositories
  ListRepositories(input: AwsCodecommitListRepositoriesInput): AwsCodecommitListRepositoriesOutput

  # codecommit.MergePullRequestByFastForward
  MergePullRequestByFastForward(input: AwsCodecommitMergePullRequestByFastForwardInput!): AwsCodecommitMergePullRequestByFastForwardOutput

  # codecommit.PostCommentForComparedCommit
  PostCommentForComparedCommit(input: AwsCodecommitPostCommentForComparedCommitInput!): AwsCodecommitPostCommentForComparedCommitOutput

  # codecommit.PostCommentForPullRequest
  PostCommentForPullRequest(input: AwsCodecommitPostCommentForPullRequestInput!): AwsCodecommitPostCommentForPullRequestOutput

  # codecommit.PostCommentReply
  PostCommentReply(input: AwsCodecommitPostCommentReplyInput!): AwsCodecommitPostCommentReplyOutput

  # codecommit.PutRepositoryTriggers
  PutRepositoryTriggers(input: AwsCodecommitPutRepositoryTriggersInput!): AwsCodecommitPutRepositoryTriggersOutput

  # codecommit.TestRepositoryTriggers
  TestRepositoryTriggers(input: AwsCodecommitTestRepositoryTriggersInput!): AwsCodecommitTestRepositoryTriggersOutput

  # codecommit.UpdateComment
  UpdateComment(input: AwsCodecommitUpdateCommentInput!): AwsCodecommitUpdateCommentOutput

  # codecommit.UpdateDefaultBranch
  UpdateDefaultBranch(input: AwsCodecommitUpdateDefaultBranchInput!): JSON

  # codecommit.UpdatePullRequestDescription
  UpdatePullRequestDescription(input: AwsCodecommitUpdatePullRequestDescriptionInput!): AwsCodecommitUpdatePullRequestDescriptionOutput

  # codecommit.UpdatePullRequestStatus
  UpdatePullRequestStatus(input: AwsCodecommitUpdatePullRequestStatusInput!): AwsCodecommitUpdatePullRequestStatusOutput

  # codecommit.UpdatePullRequestTitle
  UpdatePullRequestTitle(input: AwsCodecommitUpdatePullRequestTitleInput!): AwsCodecommitUpdatePullRequestTitleOutput

  # codecommit.UpdateRepositoryDescription
  UpdateRepositoryDescription(input: AwsCodecommitUpdateRepositoryDescriptionInput!): JSON

  # codecommit.UpdateRepositoryName
  UpdateRepositoryName(input: AwsCodecommitUpdateRepositoryNameInput!): JSON
}

input AwsCodecommitBatchGetRepositoriesInput {
  repositoryNames: [String]!
}

type AwsCodecommitBatchGetRepositoriesOutput {
  repositories: [AwsCodecommitS6]
  repositoriesNotFound: [String]
}

input AwsCodecommitCreateBranchInput {
  repositoryName: String!
  branchName: String!
  commitId: String!
}

input AwsCodecommitCreatePullRequestInput {
  title: String!
  description: String
  targets: [AwsCodecommitCreatePullRequestTargetsInput]!
  clientRequestToken: String
}

type AwsCodecommitCreatePullRequestOutput {
  pullRequest: AwsCodecommitSr!
}

input AwsCodecommitCreatePullRequestTargetsInput {
  repositoryName: String!
  sourceReference: String!
  destinationReference: String
}

input AwsCodecommitCreateRepositoryInput {
  repositoryName: String!
  repositoryDescription: String
}

type AwsCodecommitCreateRepositoryOutput {
  repositoryMetadata: AwsCodecommitS6
}

input AwsCodecommitDeleteBranchInput {
  repositoryName: String!
  branchName: String!
}

type AwsCodecommitDeleteBranchOutput {
  deletedBranch: AwsCodecommitS12
}

input AwsCodecommitDeleteCommentContentInput {
  commentId: String!
}

type AwsCodecommitDeleteCommentContentOutput {
  comment: AwsCodecommitS16
}

input AwsCodecommitDeleteRepositoryInput {
  repositoryName: String!
}

type AwsCodecommitDeleteRepositoryOutput {
  repositoryId: String
}

input AwsCodecommitDescribePullRequestEventsInput {
  pullRequestId: String!
  pullRequestEventType: String
  actorArn: String
  nextToken: String
  maxResults: Int
}

type AwsCodecommitDescribePullRequestEventsOutput {
  pullRequestEvents: [AwsCodecommitDescribePullRequestEventsOutputPullRequestEvents]!
  nextToken: String
}

type AwsCodecommitDescribePullRequestEventsOutputPullRequestEvents {
  pullRequestId: String
  eventDate: Date
  pullRequestEventType: String
  actorArn: String
  pullRequestStatusChangedEventMetadata: AwsCodecommitDescribePullRequestEventsOutputPullRequestEventsPullRequestStatusChangedEventMetadata
  pullRequestSourceReferenceUpdatedEventMetadata: AwsCodecommitDescribePullRequestEventsOutputPullRequestEventsPullRequestSourceReferenceUpdatedEventMetadata
  pullRequestMergedStateChangedEventMetadata: AwsCodecommitDescribePullRequestEventsOutputPullRequestEventsPullRequestMergedStateChangedEventMetadata
}

type AwsCodecommitDescribePullRequestEventsOutputPullRequestEventsPullRequestMergedStateChangedEventMetadata {
  repositoryName: String
  destinationReference: String
  mergeMetadata: AwsCodecommitSw
}

type AwsCodecommitDescribePullRequestEventsOutputPullRequestEventsPullRequestSourceReferenceUpdatedEventMetadata {
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
}

type AwsCodecommitDescribePullRequestEventsOutputPullRequestEventsPullRequestStatusChangedEventMetadata {
  pullRequestStatus: String
}

input AwsCodecommitGetBlobInput {
  repositoryName: String!
  blobId: String!
}

type AwsCodecommitGetBlobOutput {
  content: JSON!
}

input AwsCodecommitGetBranchInput {
  repositoryName: String
  branchName: String
}

type AwsCodecommitGetBranchOutput {
  branch: AwsCodecommitS12
}

input AwsCodecommitGetCommentInput {
  commentId: String!
}

type AwsCodecommitGetCommentOutput {
  comment: AwsCodecommitS16
}

input AwsCodecommitGetCommentsForComparedCommitInput {
  repositoryName: String!
  beforeCommitId: String
  afterCommitId: String!
  nextToken: String
  maxResults: Int
}

type AwsCodecommitGetCommentsForComparedCommitOutput {
  commentsForComparedCommitData: [AwsCodecommitGetCommentsForComparedCommitOutputCommentsForComparedCommitData]
  nextToken: String
}

type AwsCodecommitGetCommentsForComparedCommitOutputCommentsForComparedCommitData {
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  beforeBlobId: String
  afterBlobId: String
  location: AwsCodecommitS1y
  comments: [AwsCodecommitS16]
}

input AwsCodecommitGetCommentsForPullRequestInput {
  pullRequestId: String!
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  nextToken: String
  maxResults: Int
}

type AwsCodecommitGetCommentsForPullRequestOutput {
  commentsForPullRequestData: [AwsCodecommitGetCommentsForPullRequestOutputCommentsForPullRequestData]
  nextToken: String
}

type AwsCodecommitGetCommentsForPullRequestOutputCommentsForPullRequestData {
  pullRequestId: String
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  beforeBlobId: String
  afterBlobId: String
  location: AwsCodecommitS1y
  comments: [AwsCodecommitS16]
}

input AwsCodecommitGetCommitInput {
  repositoryName: String!
  commitId: String!
}

type AwsCodecommitGetCommitOutput {
  commit: AwsCodecommitGetCommitOutputCommit!
}

type AwsCodecommitGetCommitOutputCommit {
  commitId: String
  treeId: String
  parents: [String]
  message: String
  author: AwsCodecommitS2c
  committer: AwsCodecommitS2c
  additionalData: String
}

input AwsCodecommitGetDifferencesInput {
  repositoryName: String!
  beforeCommitSpecifier: String
  afterCommitSpecifier: String!
  beforePath: String
  afterPath: String
  MaxResults: Int
  NextToken: String
}

type AwsCodecommitGetDifferencesOutput {
  differences: [AwsCodecommitGetDifferencesOutputDifferences]
  NextToken: String
}

type AwsCodecommitGetDifferencesOutputDifferences {
  beforeBlob: AwsCodecommitS2n
  afterBlob: AwsCodecommitS2n
  changeType: String
}

input AwsCodecommitGetMergeConflictsInput {
  repositoryName: String!
  destinationCommitSpecifier: String!
  sourceCommitSpecifier: String!
  mergeOption: String!
}

type AwsCodecommitGetMergeConflictsOutput {
  mergeable: Boolean!
  destinationCommitId: String!
  sourceCommitId: String!
}

input AwsCodecommitGetPullRequestInput {
  pullRequestId: String!
}

type AwsCodecommitGetPullRequestOutput {
  pullRequest: AwsCodecommitSr!
}

input AwsCodecommitGetRepositoryInput {
  repositoryName: String!
}

type AwsCodecommitGetRepositoryOutput {
  repositoryMetadata: AwsCodecommitS6
}

input AwsCodecommitGetRepositoryTriggersInput {
  repositoryName: String!
}

type AwsCodecommitGetRepositoryTriggersOutput {
  configurationId: String
  triggers: [AwsCodecommitS31]
}

input AwsCodecommitListBranchesInput {
  repositoryName: String!
  nextToken: String
}

type AwsCodecommitListBranchesOutput {
  branches: [String]
  nextToken: String
}

input AwsCodecommitListPullRequestsInput {
  repositoryName: String!
  authorArn: String
  pullRequestStatus: String
  nextToken: String
  maxResults: Int
}

type AwsCodecommitListPullRequestsOutput {
  pullRequestIds: [String]!
  nextToken: String
}

input AwsCodecommitListRepositoriesInput {
  nextToken: String
  sortBy: String
  order: String
}

type AwsCodecommitListRepositoriesOutput {
  repositories: [AwsCodecommitListRepositoriesOutputRepositories]
  nextToken: String
}

type AwsCodecommitListRepositoriesOutputRepositories {
  repositoryName: String
  repositoryId: String
}

input AwsCodecommitMergePullRequestByFastForwardInput {
  pullRequestId: String!
  repositoryName: String!
  sourceCommitId: String
}

type AwsCodecommitMergePullRequestByFastForwardOutput {
  pullRequest: AwsCodecommitSr
}

input AwsCodecommitPostCommentForComparedCommitInput {
  repositoryName: String!
  beforeCommitId: String
  afterCommitId: String!
  location: AwsCodecommitS1yInput
  content: String!
  clientRequestToken: String
}

type AwsCodecommitPostCommentForComparedCommitOutput {
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  beforeBlobId: String
  afterBlobId: String
  location: AwsCodecommitS1y
  comment: AwsCodecommitS16
}

input AwsCodecommitPostCommentForPullRequestInput {
  pullRequestId: String!
  repositoryName: String!
  beforeCommitId: String!
  afterCommitId: String!
  location: AwsCodecommitS1yInput
  content: String!
  clientRequestToken: String
}

type AwsCodecommitPostCommentForPullRequestOutput {
  repositoryName: String
  pullRequestId: String
  beforeCommitId: String
  afterCommitId: String
  beforeBlobId: String
  afterBlobId: String
  location: AwsCodecommitS1y
  comment: AwsCodecommitS16
}

input AwsCodecommitPostCommentReplyInput {
  inReplyTo: String!
  clientRequestToken: String
  content: String!
}

type AwsCodecommitPostCommentReplyOutput {
  comment: AwsCodecommitS16
}

input AwsCodecommitPutRepositoryTriggersInput {
  repositoryName: String!
  triggers: [AwsCodecommitS31Input]!
}

type AwsCodecommitPutRepositoryTriggersOutput {
  configurationId: String
}

type AwsCodecommitS12 {
  branchName: String
  commitId: String
}

type AwsCodecommitS16 {
  commentId: String
  content: String
  inReplyTo: String
  creationDate: Date
  lastModifiedDate: Date
  authorArn: String
  deleted: Boolean
  clientRequestToken: String
}

type AwsCodecommitS1y {
  filePath: String
  filePosition: JSON
  relativeFileVersion: String
}

input AwsCodecommitS1yInput {
  filePath: String
  filePosition: JSON
  relativeFileVersion: String
}

type AwsCodecommitS2c {
  name: String
  email: String
  date: String
}

type AwsCodecommitS2n {
  blobId: String
  path: String
  mode: String
}

type AwsCodecommitS31 {
  name: String!
  destinationArn: String!
  customData: String
  branches: [String]
  events: [String]!
}

input AwsCodecommitS31Input {
  name: String!
  destinationArn: String!
  customData: String
  branches: [String]
  events: [String]!
}

type AwsCodecommitS6 {
  accountId: String
  repositoryId: String
  repositoryName: String
  repositoryDescription: String
  defaultBranch: String
  lastModifiedDate: Date
  creationDate: Date
  cloneUrlHttp: String
  cloneUrlSsh: String
  Arn: String
}

type AwsCodecommitSr {
  pullRequestId: String
  title: String
  description: String
  lastActivityDate: Date
  creationDate: Date
  pullRequestStatus: String
  authorArn: String
  pullRequestTargets: [AwsCodecommitSrPullRequestTargets]
  clientRequestToken: String
}

type AwsCodecommitSrPullRequestTargets {
  repositoryName: String
  sourceReference: String
  destinationReference: String
  destinationCommit: String
  sourceCommit: String
  mergeMetadata: AwsCodecommitSw
}

type AwsCodecommitSw {
  isMerged: Boolean
  mergedBy: String
}

input AwsCodecommitTestRepositoryTriggersInput {
  repositoryName: String!
  triggers: [AwsCodecommitS31Input]!
}

type AwsCodecommitTestRepositoryTriggersOutput {
  successfulExecutions: [String]
  failedExecutions: [AwsCodecommitTestRepositoryTriggersOutputFailedExecutions]
}

type AwsCodecommitTestRepositoryTriggersOutputFailedExecutions {
  trigger: String
  failureMessage: String
}

input AwsCodecommitUpdateCommentInput {
  commentId: String!
  content: String!
}

type AwsCodecommitUpdateCommentOutput {
  comment: AwsCodecommitS16
}

input AwsCodecommitUpdateDefaultBranchInput {
  repositoryName: String!
  defaultBranchName: String!
}

input AwsCodecommitUpdatePullRequestDescriptionInput {
  pullRequestId: String!
  description: String!
}

type AwsCodecommitUpdatePullRequestDescriptionOutput {
  pullRequest: AwsCodecommitSr!
}

input AwsCodecommitUpdatePullRequestStatusInput {
  pullRequestId: String!
  pullRequestStatus: String!
}

type AwsCodecommitUpdatePullRequestStatusOutput {
  pullRequest: AwsCodecommitSr!
}

input AwsCodecommitUpdatePullRequestTitleInput {
  pullRequestId: String!
  title: String!
}

type AwsCodecommitUpdatePullRequestTitleOutput {
  pullRequest: AwsCodecommitSr!
}

input AwsCodecommitUpdateRepositoryDescriptionInput {
  repositoryName: String!
  repositoryDescription: String
}

input AwsCodecommitUpdateRepositoryNameInput {
  oldName: String!
  newName: String!
}

# AWS CodeDeploy (2014-10-06)
type AwsCodedeploy {
  # codedeploy.AddTagsToOnPremisesInstances
  AddTagsToOnPremisesInstances(input: AwsCodedeployAddTagsToOnPremisesInstancesInput!): JSON

  # codedeploy.BatchGetApplicationRevisions
  BatchGetApplicationRevisions(input: AwsCodedeployBatchGetApplicationRevisionsInput!): AwsCodedeployBatchGetApplicationRevisionsOutput

  # codedeploy.BatchGetApplications
  BatchGetApplications(input: AwsCodedeployBatchGetApplicationsInput!): AwsCodedeployBatchGetApplicationsOutput

  # codedeploy.BatchGetDeploymentGroups
  BatchGetDeploymentGroups(input: AwsCodedeployBatchGetDeploymentGroupsInput!): AwsCodedeployBatchGetDeploymentGroupsOutput

  # codedeploy.BatchGetDeploymentInstances
  BatchGetDeploymentInstances(input: AwsCodedeployBatchGetDeploymentInstancesInput!): AwsCodedeployBatchGetDeploymentInstancesOutput

  # codedeploy.BatchGetDeployments
  BatchGetDeployments(input: AwsCodedeployBatchGetDeploymentsInput!): AwsCodedeployBatchGetDeploymentsOutput

  # codedeploy.BatchGetOnPremisesInstances
  BatchGetOnPremisesInstances(input: AwsCodedeployBatchGetOnPremisesInstancesInput!): AwsCodedeployBatchGetOnPremisesInstancesOutput

  # codedeploy.ContinueDeployment
  ContinueDeployment(input: AwsCodedeployContinueDeploymentInput): JSON

  # codedeploy.CreateApplication
  CreateApplication(input: AwsCodedeployCreateApplicationInput!): AwsCodedeployCreateApplicationOutput

  # codedeploy.CreateDeployment
  CreateDeployment(input: AwsCodedeployCreateDeploymentInput!): AwsCodedeployCreateDeploymentOutput

  # codedeploy.CreateDeploymentConfig
  CreateDeploymentConfig(input: AwsCodedeployCreateDeploymentConfigInput!): AwsCodedeployCreateDeploymentConfigOutput

  # codedeploy.CreateDeploymentGroup
  CreateDeploymentGroup(input: AwsCodedeployCreateDeploymentGroupInput!): AwsCodedeployCreateDeploymentGroupOutput

  # codedeploy.DeleteApplication
  DeleteApplication(input: AwsCodedeployDeleteApplicationInput!): JSON

  # codedeploy.DeleteDeploymentConfig
  DeleteDeploymentConfig(input: AwsCodedeployDeleteDeploymentConfigInput!): JSON

  # codedeploy.DeleteDeploymentGroup
  DeleteDeploymentGroup(input: AwsCodedeployDeleteDeploymentGroupInput!): AwsCodedeployDeleteDeploymentGroupOutput

  # codedeploy.DeregisterOnPremisesInstance
  DeregisterOnPremisesInstance(input: AwsCodedeployDeregisterOnPremisesInstanceInput!): JSON

  # codedeploy.GetApplication
  GetApplication(input: AwsCodedeployGetApplicationInput!): AwsCodedeployGetApplicationOutput

  # codedeploy.GetApplicationRevision
  GetApplicationRevision(input: AwsCodedeployGetApplicationRevisionInput!): AwsCodedeployGetApplicationRevisionOutput

  # codedeploy.GetDeployment
  GetDeployment(input: AwsCodedeployGetDeploymentInput!): AwsCodedeployGetDeploymentOutput

  # codedeploy.GetDeploymentConfig
  GetDeploymentConfig(input: AwsCodedeployGetDeploymentConfigInput!): AwsCodedeployGetDeploymentConfigOutput

  # codedeploy.GetDeploymentGroup
  GetDeploymentGroup(input: AwsCodedeployGetDeploymentGroupInput!): AwsCodedeployGetDeploymentGroupOutput

  # codedeploy.GetDeploymentInstance
  GetDeploymentInstance(input: AwsCodedeployGetDeploymentInstanceInput!): AwsCodedeployGetDeploymentInstanceOutput

  # codedeploy.GetOnPremisesInstance
  GetOnPremisesInstance(input: AwsCodedeployGetOnPremisesInstanceInput!): AwsCodedeployGetOnPremisesInstanceOutput

  # codedeploy.ListApplicationRevisions
  ListApplicationRevisions(input: AwsCodedeployListApplicationRevisionsInput!): AwsCodedeployListApplicationRevisionsOutput

  # codedeploy.ListApplications
  ListApplications(input: AwsCodedeployListApplicationsInput): AwsCodedeployListApplicationsOutput

  # codedeploy.ListDeploymentConfigs
  ListDeploymentConfigs(input: AwsCodedeployListDeploymentConfigsInput): AwsCodedeployListDeploymentConfigsOutput

  # codedeploy.ListDeploymentGroups
  ListDeploymentGroups(input: AwsCodedeployListDeploymentGroupsInput!): AwsCodedeployListDeploymentGroupsOutput

  # codedeploy.ListDeploymentInstances
  ListDeploymentInstances(input: AwsCodedeployListDeploymentInstancesInput!): AwsCodedeployListDeploymentInstancesOutput

  # codedeploy.ListDeployments
  ListDeployments(input: AwsCodedeployListDeploymentsInput): AwsCodedeployListDeploymentsOutput

  # codedeploy.ListGitHubAccountTokenNames
  ListGitHubAccountTokenNames(input: AwsCodedeployListGitHubAccountTokenNamesInput): AwsCodedeployListGitHubAccountTokenNamesOutput

  # codedeploy.ListOnPremisesInstances
  ListOnPremisesInstances(input: AwsCodedeployListOnPremisesInstancesInput): AwsCodedeployListOnPremisesInstancesOutput

  # codedeploy.PutLifecycleEventHookExecutionStatus
  PutLifecycleEventHookExecutionStatus(input: AwsCodedeployPutLifecycleEventHookExecutionStatusInput): AwsCodedeployPutLifecycleEventHookExecutionStatusOutput

  # codedeploy.RegisterApplicationRevision
  RegisterApplicationRevision(input: AwsCodedeployRegisterApplicationRevisionInput!): JSON

  # codedeploy.RegisterOnPremisesInstance
  RegisterOnPremisesInstance(input: AwsCodedeployRegisterOnPremisesInstanceInput!): JSON

  # codedeploy.RemoveTagsFromOnPremisesInstances
  RemoveTagsFromOnPremisesInstances(input: AwsCodedeployRemoveTagsFromOnPremisesInstancesInput!): JSON

  # codedeploy.SkipWaitTimeForInstanceTermination
  SkipWaitTimeForInstanceTermination(input: AwsCodedeploySkipWaitTimeForInstanceTerminationInput): JSON

  # codedeploy.StopDeployment
  StopDeployment(input: AwsCodedeployStopDeploymentInput!): AwsCodedeployStopDeploymentOutput

  # codedeploy.UpdateApplication
  UpdateApplication(input: AwsCodedeployUpdateApplicationInput): JSON

  # codedeploy.UpdateDeploymentGroup
  UpdateDeploymentGroup(input: AwsCodedeployUpdateDeploymentGroupInput!): AwsCodedeployUpdateDeploymentGroupOutput
}

input AwsCodedeployAddTagsToOnPremisesInstancesInput {
  tags: [AwsCodedeployS2Input]!
  instanceNames: [String]!
}

input AwsCodedeployBatchGetApplicationRevisionsInput {
  applicationName: String!
  revisions: [AwsCodedeploySbInput]!
}

type AwsCodedeployBatchGetApplicationRevisionsOutput {
  applicationName: String
  errorMessage: String
  revisions: [AwsCodedeployBatchGetApplicationRevisionsOutputRevisions]
}

type AwsCodedeployBatchGetApplicationRevisionsOutputRevisions {
  revisionLocation: AwsCodedeploySb
  genericRevisionInfo: AwsCodedeploySt
}

input AwsCodedeployBatchGetApplicationsInput {
  applicationNames: [String]!
}

type AwsCodedeployBatchGetApplicationsOutput {
  applicationsInfo: [AwsCodedeployS12]
}

input AwsCodedeployBatchGetDeploymentGroupsInput {
  applicationName: String!
  deploymentGroupNames: [String]!
}

type AwsCodedeployBatchGetDeploymentGroupsOutput {
  deploymentGroupsInfo: [AwsCodedeployS1a]
  errorMessage: String
}

input AwsCodedeployBatchGetDeploymentInstancesInput {
  deploymentId: String!
  instanceIds: [String]!
}

type AwsCodedeployBatchGetDeploymentInstancesOutput {
  instancesSummary: [AwsCodedeployS2v]
  errorMessage: String
}

input AwsCodedeployBatchGetDeploymentsInput {
  deploymentIds: [String]!
}

type AwsCodedeployBatchGetDeploymentsOutput {
  deploymentsInfo: [AwsCodedeployS3b]
}

input AwsCodedeployBatchGetOnPremisesInstancesInput {
  instanceNames: [String]!
}

type AwsCodedeployBatchGetOnPremisesInstancesOutput {
  instanceInfos: [AwsCodedeployS3q]
}

input AwsCodedeployContinueDeploymentInput {
  deploymentId: String
}

input AwsCodedeployCreateApplicationInput {
  applicationName: String!
  computePlatform: String
}

type AwsCodedeployCreateApplicationOutput {
  applicationId: String
}

input AwsCodedeployCreateDeploymentConfigInput {
  deploymentConfigName: String!
  minimumHealthyHosts: AwsCodedeployS40Input!
  trafficRoutingConfig: AwsCodedeployS43Input
  computePlatform: String
}

type AwsCodedeployCreateDeploymentConfigOutput {
  deploymentConfigId: String
}

input AwsCodedeployCreateDeploymentGroupInput {
  applicationName: String!
  deploymentGroupName: String!
  deploymentConfigName: String
  ec2TagFilters: [AwsCodedeployS1dInput]
  onPremisesInstanceTagFilters: [AwsCodedeployS1gInput]
  autoScalingGroups: [String]
  serviceRoleArn: String!
  triggerConfigurations: [AwsCodedeployS1oInput]
  alarmConfiguration: AwsCodedeployS1uInput
  autoRollbackConfiguration: AwsCodedeployS1yInput
  deploymentStyle: AwsCodedeployS21Input
  blueGreenDeploymentConfiguration: AwsCodedeployS24Input
  loadBalancerInfo: AwsCodedeployS2cInput
  ec2TagSet: AwsCodedeployS2mInput
  onPremisesTagSet: AwsCodedeployS2oInput
}

type AwsCodedeployCreateDeploymentGroupOutput {
  deploymentGroupId: String
}

input AwsCodedeployCreateDeploymentInput {
  applicationName: String!
  deploymentGroupName: String
  revision: AwsCodedeploySbInput
  deploymentConfigName: String
  description: String
  ignoreApplicationStopFailures: Boolean
  targetInstances: AwsCodedeployS3iInput
  autoRollbackConfiguration: AwsCodedeployS1yInput
  updateOutdatedInstancesOnly: Boolean
  fileExistsBehavior: String
}

type AwsCodedeployCreateDeploymentOutput {
  deploymentId: String
}

input AwsCodedeployDeleteApplicationInput {
  applicationName: String!
}

input AwsCodedeployDeleteDeploymentConfigInput {
  deploymentConfigName: String!
}

input AwsCodedeployDeleteDeploymentGroupInput {
  applicationName: String!
  deploymentGroupName: String!
}

type AwsCodedeployDeleteDeploymentGroupOutput {
  hooksNotCleanedUp: [AwsCodedeployS1j]
}

input AwsCodedeployDeregisterOnPremisesInstanceInput {
  instanceName: String!
}

input AwsCodedeployGetApplicationInput {
  applicationName: String!
}

type AwsCodedeployGetApplicationOutput {
  application: AwsCodedeployS12
}

input AwsCodedeployGetApplicationRevisionInput {
  applicationName: String!
  revision: AwsCodedeploySbInput!
}

type AwsCodedeployGetApplicationRevisionOutput {
  applicationName: String
  revision: AwsCodedeploySb
  revisionInfo: AwsCodedeploySt
}

input AwsCodedeployGetDeploymentConfigInput {
  deploymentConfigName: String!
}

type AwsCodedeployGetDeploymentConfigOutput {
  deploymentConfigInfo: AwsCodedeployGetDeploymentConfigOutputDeploymentConfigInfo
}

type AwsCodedeployGetDeploymentConfigOutputDeploymentConfigInfo {
  deploymentConfigId: String
  deploymentConfigName: String
  minimumHealthyHosts: AwsCodedeployS40
  createTime: Date
  computePlatform: String
  trafficRoutingConfig: AwsCodedeployS43
}

input AwsCodedeployGetDeploymentGroupInput {
  applicationName: String!
  deploymentGroupName: String!
}

type AwsCodedeployGetDeploymentGroupOutput {
  deploymentGroupInfo: AwsCodedeployS1a
}

input AwsCodedeployGetDeploymentInput {
  deploymentId: String!
}

input AwsCodedeployGetDeploymentInstanceInput {
  deploymentId: String!
  instanceId: String!
}

type AwsCodedeployGetDeploymentInstanceOutput {
  instanceSummary: AwsCodedeployS2v
}

type AwsCodedeployGetDeploymentOutput {
  deploymentInfo: AwsCodedeployS3b
}

input AwsCodedeployGetOnPremisesInstanceInput {
  instanceName: String!
}

type AwsCodedeployGetOnPremisesInstanceOutput {
  instanceInfo: AwsCodedeployS3q
}

input AwsCodedeployListApplicationRevisionsInput {
  applicationName: String!
  sortBy: String
  sortOrder: String
  s3Bucket: String
  s3KeyPrefix: String
  deployed: String
  nextToken: String
}

type AwsCodedeployListApplicationRevisionsOutput {
  revisions: [AwsCodedeploySb]
  nextToken: String
}

input AwsCodedeployListApplicationsInput {
  nextToken: String
}

type AwsCodedeployListApplicationsOutput {
  applications: [String]
  nextToken: String
}

input AwsCodedeployListDeploymentConfigsInput {
  nextToken: String
}

type AwsCodedeployListDeploymentConfigsOutput {
  deploymentConfigsList: [String]
  nextToken: String
}

input AwsCodedeployListDeploymentGroupsInput {
  applicationName: String!
  nextToken: String
}

type AwsCodedeployListDeploymentGroupsOutput {
  applicationName: String
  deploymentGroups: [String]
  nextToken: String
}

input AwsCodedeployListDeploymentInstancesInput {
  deploymentId: String!
  nextToken: String
  instanceStatusFilter: [String]
  instanceTypeFilter: [String]
}

type AwsCodedeployListDeploymentInstancesOutput {
  instancesList: [String]
  nextToken: String
}

input AwsCodedeployListDeploymentsCreateTimeRangeInput {
  start: Date
  end: Date
}

input AwsCodedeployListDeploymentsInput {
  applicationName: String
  deploymentGroupName: String
  includeOnlyStatuses: [String]
  createTimeRange: AwsCodedeployListDeploymentsCreateTimeRangeInput
  nextToken: String
}

type AwsCodedeployListDeploymentsOutput {
  deployments: [String]
  nextToken: String
}

input AwsCodedeployListGitHubAccountTokenNamesInput {
  nextToken: String
}

type AwsCodedeployListGitHubAccountTokenNamesOutput {
  tokenNameList: [String]
  nextToken: String
}

input AwsCodedeployListOnPremisesInstancesInput {
  registrationStatus: String
  tagFilters: [AwsCodedeployS1gInput]
  nextToken: String
}

type AwsCodedeployListOnPremisesInstancesOutput {
  instanceNames: [String]
  nextToken: String
}

input AwsCodedeployPutLifecycleEventHookExecutionStatusInput {
  deploymentId: String
  lifecycleEventHookExecutionId: String
  status: String
}

type AwsCodedeployPutLifecycleEventHookExecutionStatusOutput {
  lifecycleEventHookExecutionId: String
}

input AwsCodedeployRegisterApplicationRevisionInput {
  applicationName: String!
  description: String
  revision: AwsCodedeploySbInput!
}

input AwsCodedeployRegisterOnPremisesInstanceInput {
  instanceName: String!
  iamSessionArn: String
  iamUserArn: String
}

input AwsCodedeployRemoveTagsFromOnPremisesInstancesInput {
  tags: [AwsCodedeployS2Input]!
  instanceNames: [String]!
}

type AwsCodedeployS12 {
  applicationId: String
  applicationName: String
  createTime: Date
  linkedToGitHub: Boolean
  gitHubAccountName: String
  computePlatform: String
}

type AwsCodedeployS1a {
  applicationName: String
  deploymentGroupId: String
  deploymentGroupName: String
  deploymentConfigName: String
  ec2TagFilters: [AwsCodedeployS1d]
  onPremisesInstanceTagFilters: [AwsCodedeployS1g]
  autoScalingGroups: [AwsCodedeployS1j]
  serviceRoleArn: String
  targetRevision: AwsCodedeploySb
  triggerConfigurations: [AwsCodedeployS1o]
  alarmConfiguration: AwsCodedeployS1u
  autoRollbackConfiguration: AwsCodedeployS1y
  deploymentStyle: AwsCodedeployS21
  blueGreenDeploymentConfiguration: AwsCodedeployS24
  loadBalancerInfo: AwsCodedeployS2c
  lastSuccessfulDeployment: AwsCodedeployS2j
  lastAttemptedDeployment: AwsCodedeployS2j
  ec2TagSet: AwsCodedeployS2m
  onPremisesTagSet: AwsCodedeployS2o
  computePlatform: String
}

type AwsCodedeployS1d {
  Key: String
  Value: String
  Type: String
}

input AwsCodedeployS1dInput {
  Key: String
  Value: String
  Type: String
}

type AwsCodedeployS1g {
  Key: String
  Value: String
  Type: String
}

input AwsCodedeployS1gInput {
  Key: String
  Value: String
  Type: String
}

type AwsCodedeployS1j {
  name: String
  hook: String
}

type AwsCodedeployS1o {
  triggerName: String
  triggerTargetArn: String
  triggerEvents: [String]
}

input AwsCodedeployS1oInput {
  triggerName: String
  triggerTargetArn: String
  triggerEvents: [String]
}

type AwsCodedeployS1u {
  enabled: Boolean
  ignorePollAlarmFailure: Boolean
  alarms: [AwsCodedeployS1uAlarms]
}

type AwsCodedeployS1uAlarms {
  name: String
}

input AwsCodedeployS1uAlarmsInput {
  name: String
}

input AwsCodedeployS1uInput {
  enabled: Boolean
  ignorePollAlarmFailure: Boolean
  alarms: [AwsCodedeployS1uAlarmsInput]
}

type AwsCodedeployS1y {
  enabled: Boolean
  events: [String]
}

input AwsCodedeployS1yInput {
  enabled: Boolean
  events: [String]
}

type AwsCodedeployS2 {
  Key: String
  Value: String
}

type AwsCodedeployS21 {
  deploymentType: String
  deploymentOption: String
}

input AwsCodedeployS21Input {
  deploymentType: String
  deploymentOption: String
}

type AwsCodedeployS24 {
  terminateBlueInstancesOnDeploymentSuccess: AwsCodedeployS24TerminateBlueInstancesOnDeploymentSuccess
  deploymentReadyOption: AwsCodedeployS24DeploymentReadyOption
  greenFleetProvisioningOption: AwsCodedeployS24GreenFleetProvisioningOption
}

type AwsCodedeployS24DeploymentReadyOption {
  actionOnTimeout: String
  waitTimeInMinutes: Int
}

input AwsCodedeployS24DeploymentReadyOptionInput {
  actionOnTimeout: String
  waitTimeInMinutes: Int
}

type AwsCodedeployS24GreenFleetProvisioningOption {
  action: String
}

input AwsCodedeployS24GreenFleetProvisioningOptionInput {
  action: String
}

input AwsCodedeployS24Input {
  terminateBlueInstancesOnDeploymentSuccess: AwsCodedeployS24TerminateBlueInstancesOnDeploymentSuccessInput
  deploymentReadyOption: AwsCodedeployS24DeploymentReadyOptionInput
  greenFleetProvisioningOption: AwsCodedeployS24GreenFleetProvisioningOptionInput
}

type AwsCodedeployS24TerminateBlueInstancesOnDeploymentSuccess {
  action: String
  terminationWaitTimeInMinutes: Int
}

input AwsCodedeployS24TerminateBlueInstancesOnDeploymentSuccessInput {
  action: String
  terminationWaitTimeInMinutes: Int
}

type AwsCodedeployS2c {
  elbInfoList: [AwsCodedeployS2cElbInfoList]
  targetGroupInfoList: [AwsCodedeployS2cTargetGroupInfoList]
}

type AwsCodedeployS2cElbInfoList {
  name: String
}

input AwsCodedeployS2cElbInfoListInput {
  name: String
}

input AwsCodedeployS2cInput {
  elbInfoList: [AwsCodedeployS2cElbInfoListInput]
  targetGroupInfoList: [AwsCodedeployS2cTargetGroupInfoListInput]
}

type AwsCodedeployS2cTargetGroupInfoList {
  name: String
}

input AwsCodedeployS2cTargetGroupInfoListInput {
  name: String
}

input AwsCodedeployS2Input {
  Key: String
  Value: String
}

type AwsCodedeployS2j {
  deploymentId: String
  status: String
  endTime: Date
  createTime: Date
}

type AwsCodedeployS2m {
  ec2TagSetList: [[AwsCodedeployS1d]]
}

input AwsCodedeployS2mInput {
  ec2TagSetList: [[AwsCodedeployS1dInput]]
}

type AwsCodedeployS2o {
  onPremisesTagSetList: [[AwsCodedeployS1g]]
}

input AwsCodedeployS2oInput {
  onPremisesTagSetList: [[AwsCodedeployS1gInput]]
}

type AwsCodedeployS2v {
  deploymentId: String
  instanceId: String
  status: String
  lastUpdatedAt: Date
  lifecycleEvents: [AwsCodedeployS2vLifecycleEvents]
  instanceType: String
}

type AwsCodedeployS2vLifecycleEvents {
  lifecycleEventName: String
  diagnostics: AwsCodedeployS2vLifecycleEventsDiagnostics
  startTime: Date
  endTime: Date
  status: String
}

type AwsCodedeployS2vLifecycleEventsDiagnostics {
  errorCode: String
  scriptName: String
  message: String
  logTail: String
}

type AwsCodedeployS3b {
  applicationName: String
  deploymentGroupName: String
  deploymentConfigName: String
  deploymentId: String
  previousRevision: AwsCodedeploySb
  revision: AwsCodedeploySb
  status: String
  errorInformation: AwsCodedeployS3bErrorInformation
  createTime: Date
  startTime: Date
  completeTime: Date
  deploymentOverview: AwsCodedeployS3bDeploymentOverview
  description: String
  creator: String
  ignoreApplicationStopFailures: Boolean
  autoRollbackConfiguration: AwsCodedeployS1y
  updateOutdatedInstancesOnly: Boolean
  rollbackInfo: AwsCodedeployS3bRollbackInfo
  deploymentStyle: AwsCodedeployS21
  targetInstances: AwsCodedeployS3i
  instanceTerminationWaitTimeStarted: Boolean
  blueGreenDeploymentConfiguration: AwsCodedeployS24
  loadBalancerInfo: AwsCodedeployS2c
  additionalDeploymentStatusInfo: String
  fileExistsBehavior: String
  deploymentStatusMessages: [String]
  computePlatform: String
}

type AwsCodedeployS3bDeploymentOverview {
  Pending: JSON
  InProgress: JSON
  Succeeded: JSON
  Failed: JSON
  Skipped: JSON
  Ready: JSON
}

type AwsCodedeployS3bErrorInformation {
  code: String
  message: String
}

type AwsCodedeployS3bRollbackInfo {
  rollbackDeploymentId: String
  rollbackTriggeringDeploymentId: String
  rollbackMessage: String
}

type AwsCodedeployS3i {
  tagFilters: [AwsCodedeployS1d]
  autoScalingGroups: [String]
  ec2TagSet: AwsCodedeployS2m
}

input AwsCodedeployS3iInput {
  tagFilters: [AwsCodedeployS1dInput]
  autoScalingGroups: [String]
  ec2TagSet: AwsCodedeployS2mInput
}

type AwsCodedeployS3q {
  instanceName: String
  iamSessionArn: String
  iamUserArn: String
  instanceArn: String
  registerTime: Date
  deregisterTime: Date
  tags: [AwsCodedeployS2]
}

type AwsCodedeployS40 {
  value: Int
  type: String
}

input AwsCodedeployS40Input {
  value: Int
  type: String
}

type AwsCodedeployS43 {
  type: String
  timeBasedCanary: AwsCodedeployS43TimeBasedCanary
  timeBasedLinear: AwsCodedeployS43TimeBasedLinear
}

input AwsCodedeployS43Input {
  type: String
  timeBasedCanary: AwsCodedeployS43TimeBasedCanaryInput
  timeBasedLinear: AwsCodedeployS43TimeBasedLinearInput
}

type AwsCodedeployS43TimeBasedCanary {
  canaryPercentage: Int
  canaryInterval: Int
}

input AwsCodedeployS43TimeBasedCanaryInput {
  canaryPercentage: Int
  canaryInterval: Int
}

type AwsCodedeployS43TimeBasedLinear {
  linearPercentage: Int
  linearInterval: Int
}

input AwsCodedeployS43TimeBasedLinearInput {
  linearPercentage: Int
  linearInterval: Int
}

type AwsCodedeploySb {
  revisionType: String
  s3Location: AwsCodedeploySbS3Location
  gitHubLocation: AwsCodedeploySbGitHubLocation
  string: AwsCodedeploySbString
}

type AwsCodedeploySbGitHubLocation {
  repository: String
  commitId: String
}

input AwsCodedeploySbGitHubLocationInput {
  repository: String
  commitId: String
}

input AwsCodedeploySbInput {
  revisionType: String
  s3Location: AwsCodedeploySbS3LocationInput
  gitHubLocation: AwsCodedeploySbGitHubLocationInput
  string: AwsCodedeploySbStringInput
}

type AwsCodedeploySbS3Location {
  bucket: String
  key: String
  bundleType: String
  version: String
  eTag: String
}

input AwsCodedeploySbS3LocationInput {
  bucket: String
  key: String
  bundleType: String
  version: String
  eTag: String
}

type AwsCodedeploySbString {
  content: String
  sha256: String
}

input AwsCodedeploySbStringInput {
  content: String
  sha256: String
}

input AwsCodedeploySkipWaitTimeForInstanceTerminationInput {
  deploymentId: String
}

type AwsCodedeploySt {
  description: String
  deploymentGroups: [String]
  firstUsedTime: Date
  lastUsedTime: Date
  registerTime: Date
}

input AwsCodedeployStopDeploymentInput {
  deploymentId: String!
  autoRollbackEnabled: Boolean
}

type AwsCodedeployStopDeploymentOutput {
  status: String
  statusMessage: String
}

input AwsCodedeployUpdateApplicationInput {
  applicationName: String
  newApplicationName: String
}

input AwsCodedeployUpdateDeploymentGroupInput {
  applicationName: String!
  currentDeploymentGroupName: String!
  newDeploymentGroupName: String
  deploymentConfigName: String
  ec2TagFilters: [AwsCodedeployS1dInput]
  onPremisesInstanceTagFilters: [AwsCodedeployS1gInput]
  autoScalingGroups: [String]
  serviceRoleArn: String
  triggerConfigurations: [AwsCodedeployS1oInput]
  alarmConfiguration: AwsCodedeployS1uInput
  autoRollbackConfiguration: AwsCodedeployS1yInput
  deploymentStyle: AwsCodedeployS21Input
  blueGreenDeploymentConfiguration: AwsCodedeployS24Input
  loadBalancerInfo: AwsCodedeployS2cInput
  ec2TagSet: AwsCodedeployS2mInput
  onPremisesTagSet: AwsCodedeployS2oInput
}

type AwsCodedeployUpdateDeploymentGroupOutput {
  hooksNotCleanedUp: [AwsCodedeployS1j]
}

# AWS CodePipeline (2015-07-09)
type AwsCodepipeline {
  # codepipeline.AcknowledgeJob
  AcknowledgeJob(input: AwsCodepipelineAcknowledgeJobInput!): AwsCodepipelineAcknowledgeJobOutput

  # codepipeline.AcknowledgeThirdPartyJob
  AcknowledgeThirdPartyJob(input: AwsCodepipelineAcknowledgeThirdPartyJobInput!): AwsCodepipelineAcknowledgeThirdPartyJobOutput

  # codepipeline.CreateCustomActionType
  CreateCustomActionType(input: AwsCodepipelineCreateCustomActionTypeInput!): AwsCodepipelineCreateCustomActionTypeOutput

  # codepipeline.CreatePipeline
  CreatePipeline(input: AwsCodepipelineCreatePipelineInput!): AwsCodepipelineCreatePipelineOutput

  # codepipeline.DeleteCustomActionType
  DeleteCustomActionType(input: AwsCodepipelineDeleteCustomActionTypeInput!): JSON

  # codepipeline.DeletePipeline
  DeletePipeline(input: AwsCodepipelineDeletePipelineInput!): JSON

  # codepipeline.DisableStageTransition
  DisableStageTransition(input: AwsCodepipelineDisableStageTransitionInput!): JSON

  # codepipeline.EnableStageTransition
  EnableStageTransition(input: AwsCodepipelineEnableStageTransitionInput!): JSON

  # codepipeline.GetJobDetails
  GetJobDetails(input: AwsCodepipelineGetJobDetailsInput!): AwsCodepipelineGetJobDetailsOutput

  # codepipeline.GetPipeline
  GetPipeline(input: AwsCodepipelineGetPipelineInput!): AwsCodepipelineGetPipelineOutput

  # codepipeline.GetPipelineExecution
  GetPipelineExecution(input: AwsCodepipelineGetPipelineExecutionInput!): AwsCodepipelineGetPipelineExecutionOutput

  # codepipeline.GetPipelineState
  GetPipelineState(input: AwsCodepipelineGetPipelineStateInput!): AwsCodepipelineGetPipelineStateOutput

  # codepipeline.GetThirdPartyJobDetails
  GetThirdPartyJobDetails(input: AwsCodepipelineGetThirdPartyJobDetailsInput!): AwsCodepipelineGetThirdPartyJobDetailsOutput

  # codepipeline.ListActionTypes
  ListActionTypes(input: AwsCodepipelineListActionTypesInput): AwsCodepipelineListActionTypesOutput

  # codepipeline.ListPipelineExecutions
  ListPipelineExecutions(input: AwsCodepipelineListPipelineExecutionsInput!): AwsCodepipelineListPipelineExecutionsOutput

  # codepipeline.ListPipelines
  ListPipelines(input: AwsCodepipelineListPipelinesInput): AwsCodepipelineListPipelinesOutput

  # codepipeline.PollForJobs
  PollForJobs(input: AwsCodepipelinePollForJobsInput!): AwsCodepipelinePollForJobsOutput

  # codepipeline.PollForThirdPartyJobs
  PollForThirdPartyJobs(input: AwsCodepipelinePollForThirdPartyJobsInput!): AwsCodepipelinePollForThirdPartyJobsOutput

  # codepipeline.PutActionRevision
  PutActionRevision(input: AwsCodepipelinePutActionRevisionInput!): AwsCodepipelinePutActionRevisionOutput

  # codepipeline.PutApprovalResult
  PutApprovalResult(input: AwsCodepipelinePutApprovalResultInput!): AwsCodepipelinePutApprovalResultOutput

  # codepipeline.PutJobFailureResult
  PutJobFailureResult(input: AwsCodepipelinePutJobFailureResultInput!): JSON

  # codepipeline.PutJobSuccessResult
  PutJobSuccessResult(input: AwsCodepipelinePutJobSuccessResultInput!): JSON

  # codepipeline.PutThirdPartyJobFailureResult
  PutThirdPartyJobFailureResult(input: AwsCodepipelinePutThirdPartyJobFailureResultInput!): JSON

  # codepipeline.PutThirdPartyJobSuccessResult
  PutThirdPartyJobSuccessResult(input: AwsCodepipelinePutThirdPartyJobSuccessResultInput!): JSON

  # codepipeline.RetryStageExecution
  RetryStageExecution(input: AwsCodepipelineRetryStageExecutionInput!): AwsCodepipelineRetryStageExecutionOutput

  # codepipeline.StartPipelineExecution
  StartPipelineExecution(input: AwsCodepipelineStartPipelineExecutionInput!): AwsCodepipelineStartPipelineExecutionOutput

  # codepipeline.UpdatePipeline
  UpdatePipeline(input: AwsCodepipelineUpdatePipelineInput!): AwsCodepipelineUpdatePipelineOutput
}

input AwsCodepipelineAcknowledgeJobInput {
  jobId: String!
  nonce: String!
}

type AwsCodepipelineAcknowledgeJobOutput {
  status: String
}

input AwsCodepipelineAcknowledgeThirdPartyJobInput {
  jobId: String!
  nonce: String!
  clientToken: String!
}

type AwsCodepipelineAcknowledgeThirdPartyJobOutput {
  status: String
}

input AwsCodepipelineCreateCustomActionTypeInput {
  category: String!
  provider: String!
  version: String!
  settings: AwsCodepipelineSeInput
  configurationProperties: [AwsCodepipelineShInput]
  inputArtifactDetails: AwsCodepipelineSnInput!
  outputArtifactDetails: AwsCodepipelineSnInput!
}

type AwsCodepipelineCreateCustomActionTypeOutput {
  actionType: AwsCodepipelineSr!
}

input AwsCodepipelineCreatePipelineInput {
  pipeline: AwsCodepipelineSvInput!
}

type AwsCodepipelineCreatePipelineOutput {
  pipeline: AwsCodepipelineSv
}

input AwsCodepipelineDeleteCustomActionTypeInput {
  category: String!
  provider: String!
  version: String!
}

input AwsCodepipelineDeletePipelineInput {
  name: String!
}

input AwsCodepipelineDisableStageTransitionInput {
  pipelineName: String!
  stageName: String!
  transitionType: String!
  reason: String!
}

input AwsCodepipelineEnableStageTransitionInput {
  pipelineName: String!
  stageName: String!
  transitionType: String!
}

input AwsCodepipelineGetJobDetailsInput {
  jobId: String!
}

type AwsCodepipelineGetJobDetailsOutput {
  jobDetails: AwsCodepipelineGetJobDetailsOutputJobDetails
}

type AwsCodepipelineGetJobDetailsOutputJobDetails {
  id: String
  data: AwsCodepipelineS1x
  accountId: String
}

input AwsCodepipelineGetPipelineExecutionInput {
  pipelineName: String!
  pipelineExecutionId: String!
}

type AwsCodepipelineGetPipelineExecutionOutput {
  pipelineExecution: AwsCodepipelineGetPipelineExecutionOutputPipelineExecution
}

type AwsCodepipelineGetPipelineExecutionOutputPipelineExecution {
  pipelineName: String
  pipelineVersion: Int
  pipelineExecutionId: String
  status: String
  artifactRevisions: [AwsCodepipelineGetPipelineExecutionOutputPipelineExecutionArtifactRevisions]
}

type AwsCodepipelineGetPipelineExecutionOutputPipelineExecutionArtifactRevisions {
  name: String
  revisionId: String
  revisionChangeIdentifier: String
  revisionSummary: String
  created: Date
  revisionUrl: String
}

input AwsCodepipelineGetPipelineInput {
  name: String!
  version: Int
}

type AwsCodepipelineGetPipelineOutput {
  pipeline: AwsCodepipelineSv
  metadata: AwsCodepipelineGetPipelineOutputMetadata
}

type AwsCodepipelineGetPipelineOutputMetadata {
  pipelineArn: String
  created: Date
  updated: Date
}

input AwsCodepipelineGetPipelineStateInput {
  name: String!
}

type AwsCodepipelineGetPipelineStateOutput {
  pipelineName: String
  pipelineVersion: Int
  stageStates: [AwsCodepipelineGetPipelineStateOutputStageStates]
  created: Date
  updated: Date
}

type AwsCodepipelineGetPipelineStateOutputStageStates {
  stageName: String
  inboundTransitionState: AwsCodepipelineGetPipelineStateOutputStageStatesInboundTransitionState
  actionStates: [AwsCodepipelineGetPipelineStateOutputStageStatesActionStates]
  latestExecution: AwsCodepipelineGetPipelineStateOutputStageStatesLatestExecution
}

type AwsCodepipelineGetPipelineStateOutputStageStatesActionStates {
  actionName: String
  currentRevision: AwsCodepipelineS34
  latestExecution: AwsCodepipelineGetPipelineStateOutputStageStatesActionStatesLatestExecution
  entityUrl: String
  revisionUrl: String
}

type AwsCodepipelineGetPipelineStateOutputStageStatesActionStatesLatestExecution {
  status: String
  summary: String
  lastStatusChange: Date
  token: String
  lastUpdatedBy: String
  externalExecutionId: String
  externalExecutionUrl: String
  percentComplete: Int
  errorDetails: AwsCodepipelineGetPipelineStateOutputStageStatesActionStatesLatestExecutionErrorDetails
}

type AwsCodepipelineGetPipelineStateOutputStageStatesActionStatesLatestExecutionErrorDetails {
  code: String
  message: String
}

type AwsCodepipelineGetPipelineStateOutputStageStatesInboundTransitionState {
  enabled: Boolean
  lastChangedBy: String
  lastChangedAt: Date
  disabledReason: String
}

type AwsCodepipelineGetPipelineStateOutputStageStatesLatestExecution {
  pipelineExecutionId: String!
  status: String!
}

input AwsCodepipelineGetThirdPartyJobDetailsInput {
  jobId: String!
  clientToken: String!
}

type AwsCodepipelineGetThirdPartyJobDetailsOutput {
  jobDetails: AwsCodepipelineGetThirdPartyJobDetailsOutputJobDetails
}

type AwsCodepipelineGetThirdPartyJobDetailsOutputJobDetails {
  id: String
  data: AwsCodepipelineGetThirdPartyJobDetailsOutputJobDetailsData
  nonce: String
}

type AwsCodepipelineGetThirdPartyJobDetailsOutputJobDetailsData {
  actionTypeId: AwsCodepipelineSs
  actionConfiguration: AwsCodepipelineS1y
  pipelineContext: AwsCodepipelineS1z
  inputArtifacts: [AwsCodepipelineS22]
  outputArtifacts: [AwsCodepipelineS22]
  artifactCredentials: AwsCodepipelineS2a
  continuationToken: String
  encryptionKey: AwsCodepipelineS11
}

input AwsCodepipelineListActionTypesInput {
  actionOwnerFilter: String
  nextToken: String
}

type AwsCodepipelineListActionTypesOutput {
  actionTypes: [AwsCodepipelineSr]!
  nextToken: String
}

input AwsCodepipelineListPipelineExecutionsInput {
  pipelineName: String!
  maxResults: Int
  nextToken: String
}

type AwsCodepipelineListPipelineExecutionsOutput {
  pipelineExecutionSummaries: [AwsCodepipelineListPipelineExecutionsOutputPipelineExecutionSummaries]
  nextToken: String
}

type AwsCodepipelineListPipelineExecutionsOutputPipelineExecutionSummaries {
  pipelineExecutionId: String
  status: String
  startTime: Date
  lastUpdateTime: Date
}

input AwsCodepipelineListPipelinesInput {
  nextToken: String
}

type AwsCodepipelineListPipelinesOutput {
  pipelines: [AwsCodepipelineListPipelinesOutputPipelines]
  nextToken: String
}

type AwsCodepipelineListPipelinesOutputPipelines {
  name: String
  version: Int
  created: Date
  updated: Date
}

input AwsCodepipelinePollForJobsInput {
  actionTypeId: AwsCodepipelineSsInput!
  maxBatchSize: Int
  queryParam: JSON
}

type AwsCodepipelinePollForJobsOutput {
  jobs: [AwsCodepipelinePollForJobsOutputJobs]
}

type AwsCodepipelinePollForJobsOutputJobs {
  id: String
  data: AwsCodepipelineS1x
  nonce: String
  accountId: String
}

input AwsCodepipelinePollForThirdPartyJobsInput {
  actionTypeId: AwsCodepipelineSsInput!
  maxBatchSize: Int
}

type AwsCodepipelinePollForThirdPartyJobsOutput {
  jobs: [AwsCodepipelinePollForThirdPartyJobsOutputJobs]
}

type AwsCodepipelinePollForThirdPartyJobsOutputJobs {
  clientId: String
  jobId: String
}

input AwsCodepipelinePutActionRevisionInput {
  pipelineName: String!
  stageName: String!
  actionName: String!
  actionRevision: AwsCodepipelineS34Input!
}

type AwsCodepipelinePutActionRevisionOutput {
  newRevision: Boolean
  pipelineExecutionId: String
}

input AwsCodepipelinePutApprovalResultInput {
  pipelineName: String!
  stageName: String!
  actionName: String!
  result: AwsCodepipelinePutApprovalResultResultInput!
  token: String!
}

type AwsCodepipelinePutApprovalResultOutput {
  approvedAt: Date
}

input AwsCodepipelinePutApprovalResultResultInput {
  summary: String!
  status: String!
}

input AwsCodepipelinePutJobFailureResultInput {
  jobId: String!
  failureDetails: AwsCodepipelineS4jInput!
}

input AwsCodepipelinePutJobSuccessResultInput {
  jobId: String!
  currentRevision: AwsCodepipelineS4mInput
  continuationToken: String
  executionDetails: AwsCodepipelineS4oInput
}

input AwsCodepipelinePutThirdPartyJobFailureResultInput {
  jobId: String!
  clientToken: String!
  failureDetails: AwsCodepipelineS4jInput!
}

input AwsCodepipelinePutThirdPartyJobSuccessResultInput {
  jobId: String!
  clientToken: String!
  currentRevision: AwsCodepipelineS4mInput
  continuationToken: String
  executionDetails: AwsCodepipelineS4oInput
}

input AwsCodepipelineRetryStageExecutionInput {
  pipelineName: String!
  stageName: String!
  pipelineExecutionId: String!
  retryMode: String!
}

type AwsCodepipelineRetryStageExecutionOutput {
  pipelineExecutionId: String
}

type AwsCodepipelineS11 {
  id: String!
  type: String!
}

input AwsCodepipelineS11Input {
  id: String!
  type: String!
}

type AwsCodepipelineS1x {
  actionTypeId: AwsCodepipelineSs
  actionConfiguration: AwsCodepipelineS1y
  pipelineContext: AwsCodepipelineS1z
  inputArtifacts: [AwsCodepipelineS22]
  outputArtifacts: [AwsCodepipelineS22]
  artifactCredentials: AwsCodepipelineS2a
  continuationToken: String
  encryptionKey: AwsCodepipelineS11
}

type AwsCodepipelineS1y {
  configuration: JSON
}

type AwsCodepipelineS1z {
  pipelineName: String
  stage: AwsCodepipelineS1zStage
  action: AwsCodepipelineS1zAction
}

type AwsCodepipelineS1zAction {
  name: String
}

type AwsCodepipelineS1zStage {
  name: String
}

type AwsCodepipelineS22 {
  name: String
  revision: String
  location: AwsCodepipelineS22Location
}

type AwsCodepipelineS22Location {
  type: String
  s3Location: AwsCodepipelineS22LocationS3Location
}

type AwsCodepipelineS22LocationS3Location {
  bucketName: String!
  objectKey: String!
}

type AwsCodepipelineS2a {
  accessKeyId: String!
  secretAccessKey: String!
  sessionToken: String!
}

type AwsCodepipelineS34 {
  revisionId: String!
  revisionChangeId: String!
  created: Date!
}

input AwsCodepipelineS34Input {
  revisionId: String!
  revisionChangeId: String!
  created: Date!
}

input AwsCodepipelineS4jInput {
  type: String!
  message: String!
  externalExecutionId: String
}

input AwsCodepipelineS4mInput {
  revision: String!
  changeIdentifier: String!
  created: Date
  revisionSummary: String
}

input AwsCodepipelineS4oInput {
  summary: String
  externalExecutionId: String
  percentComplete: Int
}

type AwsCodepipelineSe {
  thirdPartyConfigurationUrl: String
  entityUrlTemplate: String
  executionUrlTemplate: String
  revisionUrlTemplate: String
}

input AwsCodepipelineSeInput {
  thirdPartyConfigurationUrl: String
  entityUrlTemplate: String
  executionUrlTemplate: String
  revisionUrlTemplate: String
}

type AwsCodepipelineSh {
  name: String!
  required: Boolean!
  key: Boolean!
  secret: Boolean!
  queryable: Boolean
  description: String
  type: String
}

input AwsCodepipelineShInput {
  name: String!
  required: Boolean!
  key: Boolean!
  secret: Boolean!
  queryable: Boolean
  description: String
  type: String
}

type AwsCodepipelineSn {
  minimumCount: Int!
  maximumCount: Int!
}

input AwsCodepipelineSnInput {
  minimumCount: Int!
  maximumCount: Int!
}

type AwsCodepipelineSr {
  id: AwsCodepipelineSs!
  settings: AwsCodepipelineSe
  actionConfigurationProperties: [AwsCodepipelineSh]
  inputArtifactDetails: AwsCodepipelineSn!
  outputArtifactDetails: AwsCodepipelineSn!
}

type AwsCodepipelineSs {
  category: String!
  owner: String!
  provider: String!
  version: String!
}

input AwsCodepipelineSsInput {
  category: String!
  owner: String!
  provider: String!
  version: String!
}

input AwsCodepipelineStartPipelineExecutionInput {
  name: String!
}

type AwsCodepipelineStartPipelineExecutionOutput {
  pipelineExecutionId: String
}

type AwsCodepipelineSv {
  name: String!
  roleArn: String!
  artifactStore: AwsCodepipelineSvArtifactStore!
  stages: [AwsCodepipelineSvStages]!
  version: Int
}

type AwsCodepipelineSvArtifactStore {
  type: String!
  location: String!
  encryptionKey: AwsCodepipelineS11
}

input AwsCodepipelineSvArtifactStoreInput {
  type: String!
  location: String!
  encryptionKey: AwsCodepipelineS11Input
}

input AwsCodepipelineSvInput {
  name: String!
  roleArn: String!
  artifactStore: AwsCodepipelineSvArtifactStoreInput!
  stages: [AwsCodepipelineSvStagesInput]!
  version: Int
}

type AwsCodepipelineSvStages {
  name: String!
  blockers: [AwsCodepipelineSvStagesBlockers]
  actions: [AwsCodepipelineSvStagesActions]!
}

type AwsCodepipelineSvStagesActions {
  name: String!
  actionTypeId: AwsCodepipelineSs!
  runOrder: Int
  configuration: JSON
  outputArtifacts: [AwsCodepipelineSvStagesActionsOutputArtifacts]
  inputArtifacts: [AwsCodepipelineSvStagesActionsInputArtifacts]
  roleArn: String
}

input AwsCodepipelineSvStagesActionsInput {
  name: String!
  actionTypeId: AwsCodepipelineSsInput!
  runOrder: Int
  configuration: JSON
  outputArtifacts: [AwsCodepipelineSvStagesActionsOutputArtifactsInput]
  inputArtifacts: [AwsCodepipelineSvStagesActionsInputArtifactsInput]
  roleArn: String
}

type AwsCodepipelineSvStagesActionsInputArtifacts {
  name: String!
}

input AwsCodepipelineSvStagesActionsInputArtifactsInput {
  name: String!
}

type AwsCodepipelineSvStagesActionsOutputArtifacts {
  name: String!
}

input AwsCodepipelineSvStagesActionsOutputArtifactsInput {
  name: String!
}

type AwsCodepipelineSvStagesBlockers {
  name: String!
  type: String!
}

input AwsCodepipelineSvStagesBlockersInput {
  name: String!
  type: String!
}

input AwsCodepipelineSvStagesInput {
  name: String!
  blockers: [AwsCodepipelineSvStagesBlockersInput]
  actions: [AwsCodepipelineSvStagesActionsInput]!
}

input AwsCodepipelineUpdatePipelineInput {
  pipeline: AwsCodepipelineSvInput!
}

type AwsCodepipelineUpdatePipelineOutput {
  pipeline: AwsCodepipelineSv
}

# AWS CodeStar (2017-04-19)
type AwsCodestar {
  # codestar.AssociateTeamMember
  AssociateTeamMember(input: AwsCodestarAssociateTeamMemberInput!): AwsCodestarAssociateTeamMemberOutput

  # codestar.CreateProject
  CreateProject(input: AwsCodestarCreateProjectInput!): AwsCodestarCreateProjectOutput

  # codestar.CreateUserProfile
  CreateUserProfile(input: AwsCodestarCreateUserProfileInput!): AwsCodestarCreateUserProfileOutput

  # codestar.DeleteProject
  DeleteProject(input: AwsCodestarDeleteProjectInput!): AwsCodestarDeleteProjectOutput

  # codestar.DeleteUserProfile
  DeleteUserProfile(input: AwsCodestarDeleteUserProfileInput!): AwsCodestarDeleteUserProfileOutput

  # codestar.DescribeProject
  DescribeProject(input: AwsCodestarDescribeProjectInput!): AwsCodestarDescribeProjectOutput

  # codestar.DescribeUserProfile
  DescribeUserProfile(input: AwsCodestarDescribeUserProfileInput!): AwsCodestarDescribeUserProfileOutput

  # codestar.DisassociateTeamMember
  DisassociateTeamMember(input: AwsCodestarDisassociateTeamMemberInput!): JSON

  # codestar.ListProjects
  ListProjects(input: AwsCodestarListProjectsInput): AwsCodestarListProjectsOutput

  # codestar.ListResources
  ListResources(input: AwsCodestarListResourcesInput!): AwsCodestarListResourcesOutput

  # codestar.ListTagsForProject
  ListTagsForProject(input: AwsCodestarListTagsForProjectInput!): AwsCodestarListTagsForProjectOutput

  # codestar.ListTeamMembers
  ListTeamMembers(input: AwsCodestarListTeamMembersInput!): AwsCodestarListTeamMembersOutput

  # codestar.ListUserProfiles
  ListUserProfiles(input: AwsCodestarListUserProfilesInput): AwsCodestarListUserProfilesOutput

  # codestar.TagProject
  TagProject(input: AwsCodestarTagProjectInput!): AwsCodestarTagProjectOutput

  # codestar.UntagProject
  UntagProject(input: AwsCodestarUntagProjectInput!): JSON

  # codestar.UpdateProject
  UpdateProject(input: AwsCodestarUpdateProjectInput!): JSON

  # codestar.UpdateTeamMember
  UpdateTeamMember(input: AwsCodestarUpdateTeamMemberInput!): AwsCodestarUpdateTeamMemberOutput

  # codestar.UpdateUserProfile
  UpdateUserProfile(input: AwsCodestarUpdateUserProfileInput!): AwsCodestarUpdateUserProfileOutput
}

input AwsCodestarAssociateTeamMemberInput {
  projectId: String!
  clientRequestToken: String
  userArn: String!
  projectRole: String!
  remoteAccessAllowed: Boolean
}

type AwsCodestarAssociateTeamMemberOutput {
  clientRequestToken: String
}

input AwsCodestarCreateProjectInput {
  name: String!
  id: String!
  description: String
  clientRequestToken: String
}

type AwsCodestarCreateProjectOutput {
  id: String!
  arn: String!
  clientRequestToken: String
  projectTemplateId: String
}

input AwsCodestarCreateUserProfileInput {
  userArn: String!
  displayName: String!
  emailAddress: String!
  sshPublicKey: String
}

type AwsCodestarCreateUserProfileOutput {
  userArn: String!
  displayName: String
  emailAddress: String
  sshPublicKey: String
  createdTimestamp: Date
  lastModifiedTimestamp: Date
}

input AwsCodestarDeleteProjectInput {
  id: String!
  clientRequestToken: String
  deleteStack: Boolean
}

type AwsCodestarDeleteProjectOutput {
  stackId: String
  projectArn: String
}

input AwsCodestarDeleteUserProfileInput {
  userArn: String!
}

type AwsCodestarDeleteUserProfileOutput {
  userArn: String!
}

input AwsCodestarDescribeProjectInput {
  id: String!
}

type AwsCodestarDescribeProjectOutput {
  name: String
  id: String
  arn: String
  description: String
  clientRequestToken: String
  createdTimeStamp: Date
  stackId: String
  projectTemplateId: String
}

input AwsCodestarDescribeUserProfileInput {
  userArn: String!
}

type AwsCodestarDescribeUserProfileOutput {
  userArn: String!
  displayName: String
  emailAddress: String
  sshPublicKey: String
  createdTimestamp: Date!
  lastModifiedTimestamp: Date!
}

input AwsCodestarDisassociateTeamMemberInput {
  projectId: String!
  userArn: String!
}

input AwsCodestarListProjectsInput {
  nextToken: String
  maxResults: Int
}

type AwsCodestarListProjectsOutput {
  projects: [AwsCodestarListProjectsOutputProjects]!
  nextToken: String
}

type AwsCodestarListProjectsOutputProjects {
  projectId: String
  projectArn: String
}

input AwsCodestarListResourcesInput {
  projectId: String!
  nextToken: String
  maxResults: Int
}

type AwsCodestarListResourcesOutput {
  resources: [AwsCodestarListResourcesOutputResources]
  nextToken: String
}

type AwsCodestarListResourcesOutputResources {
  id: String!
}

input AwsCodestarListTagsForProjectInput {
  id: String!
  nextToken: String
  maxResults: Int
}

type AwsCodestarListTagsForProjectOutput {
  tags: JSON
  nextToken: String
}

input AwsCodestarListTeamMembersInput {
  projectId: String!
  nextToken: String
  maxResults: Int
}

type AwsCodestarListTeamMembersOutput {
  teamMembers: [AwsCodestarListTeamMembersOutputTeamMembers]!
  nextToken: String
}

type AwsCodestarListTeamMembersOutputTeamMembers {
  userArn: String!
  projectRole: String!
  remoteAccessAllowed: Boolean
}

input AwsCodestarListUserProfilesInput {
  nextToken: String
  maxResults: Int
}

type AwsCodestarListUserProfilesOutput {
  userProfiles: [AwsCodestarListUserProfilesOutputUserProfiles]!
  nextToken: String
}

type AwsCodestarListUserProfilesOutputUserProfiles {
  userArn: String
  displayName: String
  emailAddress: String
  sshPublicKey: String
}

input AwsCodestarTagProjectInput {
  id: String!
  tags: JSON!
}

type AwsCodestarTagProjectOutput {
  tags: JSON
}

input AwsCodestarUntagProjectInput {
  id: String!
  tags: [String]!
}

input AwsCodestarUpdateProjectInput {
  id: String!
  name: String
  description: String
}

input AwsCodestarUpdateTeamMemberInput {
  projectId: String!
  userArn: String!
  projectRole: String
  remoteAccessAllowed: Boolean
}

type AwsCodestarUpdateTeamMemberOutput {
  userArn: String
  projectRole: String
  remoteAccessAllowed: Boolean
}

input AwsCodestarUpdateUserProfileInput {
  userArn: String!
  displayName: String
  emailAddress: String
  sshPublicKey: String
}

type AwsCodestarUpdateUserProfileOutput {
  userArn: String!
  displayName: String
  emailAddress: String
  sshPublicKey: String
  createdTimestamp: Date
  lastModifiedTimestamp: Date
}

# Amazon Cognito Identity (2014-06-30)
type AwsCognitoidentity {
  # cognitoidentity.CreateIdentityPool
  CreateIdentityPool(input: AwsCognitoidentityCreateIdentityPoolInput!): JSON

  # cognitoidentity.DeleteIdentities
  DeleteIdentities(input: AwsCognitoidentityDeleteIdentitiesInput!): AwsCognitoidentityDeleteIdentitiesOutput

  # cognitoidentity.DeleteIdentityPool
  DeleteIdentityPool(input: AwsCognitoidentityDeleteIdentityPoolInput!): JSON

  # cognitoidentity.DescribeIdentity
  DescribeIdentity(input: AwsCognitoidentityDescribeIdentityInput!): JSON

  # cognitoidentity.DescribeIdentityPool
  DescribeIdentityPool(input: AwsCognitoidentityDescribeIdentityPoolInput!): JSON

  # cognitoidentity.GetCredentialsForIdentity
  GetCredentialsForIdentity(input: AwsCognitoidentityGetCredentialsForIdentityInput!): AwsCognitoidentityGetCredentialsForIdentityOutput

  # cognitoidentity.GetId
  GetId(input: AwsCognitoidentityGetIdInput!): AwsCognitoidentityGetIdOutput

  # cognitoidentity.GetIdentityPoolRoles
  GetIdentityPoolRoles(input: AwsCognitoidentityGetIdentityPoolRolesInput!): AwsCognitoidentityGetIdentityPoolRolesOutput

  # cognitoidentity.GetOpenIdToken
  GetOpenIdToken(input: AwsCognitoidentityGetOpenIdTokenInput!): AwsCognitoidentityGetOpenIdTokenOutput

  # cognitoidentity.GetOpenIdTokenForDeveloperIdentity
  GetOpenIdTokenForDeveloperIdentity(input: AwsCognitoidentityGetOpenIdTokenForDeveloperIdentityInput!): AwsCognitoidentityGetOpenIdTokenForDeveloperIdentityOutput

  # cognitoidentity.ListIdentities
  ListIdentities(input: AwsCognitoidentityListIdentitiesInput!): AwsCognitoidentityListIdentitiesOutput

  # cognitoidentity.ListIdentityPools
  ListIdentityPools(input: AwsCognitoidentityListIdentityPoolsInput!): AwsCognitoidentityListIdentityPoolsOutput

  # cognitoidentity.LookupDeveloperIdentity
  LookupDeveloperIdentity(input: AwsCognitoidentityLookupDeveloperIdentityInput!): AwsCognitoidentityLookupDeveloperIdentityOutput

  # cognitoidentity.MergeDeveloperIdentities
  MergeDeveloperIdentities(input: AwsCognitoidentityMergeDeveloperIdentitiesInput!): AwsCognitoidentityMergeDeveloperIdentitiesOutput

  # cognitoidentity.SetIdentityPoolRoles
  SetIdentityPoolRoles(input: AwsCognitoidentitySetIdentityPoolRolesInput!): JSON

  # cognitoidentity.UnlinkDeveloperIdentity
  UnlinkDeveloperIdentity(input: AwsCognitoidentityUnlinkDeveloperIdentityInput!): JSON

  # cognitoidentity.UnlinkIdentity
  UnlinkIdentity(input: AwsCognitoidentityUnlinkIdentityInput!): JSON

  # cognitoidentity.UpdateIdentityPool
  UpdateIdentityPool(input: JSON): JSON
}

input AwsCognitoidentityCreateIdentityPoolInput {
  IdentityPoolName: String!
  AllowUnauthenticatedIdentities: Boolean!
  SupportedLoginProviders: JSON
  DeveloperProviderName: String
  OpenIdConnectProviderARNs: [String]
  CognitoIdentityProviders: [AwsCognitoidentitySaInput]
  SamlProviderARNs: [String]
}

input AwsCognitoidentityDeleteIdentitiesInput {
  IdentityIdsToDelete: [String]!
}

type AwsCognitoidentityDeleteIdentitiesOutput {
  UnprocessedIdentityIds: [AwsCognitoidentityDeleteIdentitiesOutputUnprocessedIdentityIds]
}

type AwsCognitoidentityDeleteIdentitiesOutputUnprocessedIdentityIds {
  IdentityId: String
  ErrorCode: String
}

input AwsCognitoidentityDeleteIdentityPoolInput {
  IdentityPoolId: String!
}

input AwsCognitoidentityDescribeIdentityInput {
  IdentityId: String!
}

input AwsCognitoidentityDescribeIdentityPoolInput {
  IdentityPoolId: String!
}

input AwsCognitoidentityGetCredentialsForIdentityInput {
  IdentityId: String!
  Logins: JSON
  CustomRoleArn: String
}

type AwsCognitoidentityGetCredentialsForIdentityOutput {
  IdentityId: String
  Credentials: AwsCognitoidentityGetCredentialsForIdentityOutputCredentials
}

type AwsCognitoidentityGetCredentialsForIdentityOutputCredentials {
  AccessKeyId: String
  SecretKey: String
  SessionToken: String
  Expiration: Date
}

input AwsCognitoidentityGetIdentityPoolRolesInput {
  IdentityPoolId: String!
}

type AwsCognitoidentityGetIdentityPoolRolesOutput {
  IdentityPoolId: String
  Roles: JSON
  RoleMappings: JSON
}

input AwsCognitoidentityGetIdInput {
  AccountId: String
  IdentityPoolId: String!
  Logins: JSON
}

type AwsCognitoidentityGetIdOutput {
  IdentityId: String
}

input AwsCognitoidentityGetOpenIdTokenForDeveloperIdentityInput {
  IdentityPoolId: String!
  IdentityId: String
  Logins: JSON!
  TokenDuration: JSON
}

type AwsCognitoidentityGetOpenIdTokenForDeveloperIdentityOutput {
  IdentityId: String
  Token: String
}

input AwsCognitoidentityGetOpenIdTokenInput {
  IdentityId: String!
  Logins: JSON
}

type AwsCognitoidentityGetOpenIdTokenOutput {
  IdentityId: String
  Token: String
}

input AwsCognitoidentityListIdentitiesInput {
  IdentityPoolId: String!
  MaxResults: Int!
  NextToken: String
  HideDisabled: Boolean
}

type AwsCognitoidentityListIdentitiesOutput {
  IdentityPoolId: String
  Identities: [AwsCognitoidentitySr]
  NextToken: String
}

input AwsCognitoidentityListIdentityPoolsInput {
  MaxResults: Int!
  NextToken: String
}

type AwsCognitoidentityListIdentityPoolsOutput {
  IdentityPools: [AwsCognitoidentityListIdentityPoolsOutputIdentityPools]
  NextToken: String
}

type AwsCognitoidentityListIdentityPoolsOutputIdentityPools {
  IdentityPoolId: String
  IdentityPoolName: String
}

input AwsCognitoidentityLookupDeveloperIdentityInput {
  IdentityPoolId: String!
  IdentityId: String
  DeveloperUserIdentifier: String
  MaxResults: Int
  NextToken: String
}

type AwsCognitoidentityLookupDeveloperIdentityOutput {
  IdentityId: String
  DeveloperUserIdentifierList: [String]
  NextToken: String
}

input AwsCognitoidentityMergeDeveloperIdentitiesInput {
  SourceUserIdentifier: String!
  DestinationUserIdentifier: String!
  DeveloperProviderName: String!
  IdentityPoolId: String!
}

type AwsCognitoidentityMergeDeveloperIdentitiesOutput {
  IdentityId: String
}

input AwsCognitoidentitySaInput {
  ProviderName: String
  ClientId: String
  ServerSideTokenCheck: Boolean
}

# Amazon Cognito Identity Provider (2016-04-18)
type AwsCognitoidentityserviceprovider {
  # cognitoidentityserviceprovider.AddCustomAttributes
  AddCustomAttributes(input: AwsCognitoidentityserviceproviderAddCustomAttributesInput!): JSON

  # cognitoidentityserviceprovider.AdminAddUserToGroup
  AdminAddUserToGroup(input: AwsCognitoidentityserviceproviderAdminAddUserToGroupInput!): JSON

  # cognitoidentityserviceprovider.AdminConfirmSignUp
  AdminConfirmSignUp(input: AwsCognitoidentityserviceproviderAdminConfirmSignUpInput!): JSON

  # cognitoidentityserviceprovider.AdminCreateUser
  AdminCreateUser(input: AwsCognitoidentityserviceproviderAdminCreateUserInput!): AwsCognitoidentityserviceproviderAdminCreateUserOutput

  # cognitoidentityserviceprovider.AdminDeleteUser
  AdminDeleteUser(input: AwsCognitoidentityserviceproviderAdminDeleteUserInput!): JSON

  # cognitoidentityserviceprovider.AdminDeleteUserAttributes
  AdminDeleteUserAttributes(input: AwsCognitoidentityserviceproviderAdminDeleteUserAttributesInput!): JSON

  # cognitoidentityserviceprovider.AdminDisableProviderForUser
  AdminDisableProviderForUser(input: AwsCognitoidentityserviceproviderAdminDisableProviderForUserInput!): JSON

  # cognitoidentityserviceprovider.AdminDisableUser
  AdminDisableUser(input: AwsCognitoidentityserviceproviderAdminDisableUserInput!): JSON

  # cognitoidentityserviceprovider.AdminEnableUser
  AdminEnableUser(input: AwsCognitoidentityserviceproviderAdminEnableUserInput!): JSON

  # cognitoidentityserviceprovider.AdminForgetDevice
  AdminForgetDevice(input: AwsCognitoidentityserviceproviderAdminForgetDeviceInput!): JSON

  # cognitoidentityserviceprovider.AdminGetDevice
  AdminGetDevice(input: AwsCognitoidentityserviceproviderAdminGetDeviceInput!): AwsCognitoidentityserviceproviderAdminGetDeviceOutput

  # cognitoidentityserviceprovider.AdminGetUser
  AdminGetUser(input: AwsCognitoidentityserviceproviderAdminGetUserInput!): AwsCognitoidentityserviceproviderAdminGetUserOutput

  # cognitoidentityserviceprovider.AdminInitiateAuth
  AdminInitiateAuth(input: AwsCognitoidentityserviceproviderAdminInitiateAuthInput!): AwsCognitoidentityserviceproviderAdminInitiateAuthOutput

  # cognitoidentityserviceprovider.AdminLinkProviderForUser
  AdminLinkProviderForUser(input: AwsCognitoidentityserviceproviderAdminLinkProviderForUserInput!): JSON

  # cognitoidentityserviceprovider.AdminListDevices
  AdminListDevices(input: AwsCognitoidentityserviceproviderAdminListDevicesInput!): AwsCognitoidentityserviceproviderAdminListDevicesOutput

  # cognitoidentityserviceprovider.AdminListGroupsForUser
  AdminListGroupsForUser(input: AwsCognitoidentityserviceproviderAdminListGroupsForUserInput!): AwsCognitoidentityserviceproviderAdminListGroupsForUserOutput

  # cognitoidentityserviceprovider.AdminListUserAuthEvents
  AdminListUserAuthEvents(input: AwsCognitoidentityserviceproviderAdminListUserAuthEventsInput!): AwsCognitoidentityserviceproviderAdminListUserAuthEventsOutput

  # cognitoidentityserviceprovider.AdminRemoveUserFromGroup
  AdminRemoveUserFromGroup(input: AwsCognitoidentityserviceproviderAdminRemoveUserFromGroupInput!): JSON

  # cognitoidentityserviceprovider.AdminResetUserPassword
  AdminResetUserPassword(input: AwsCognitoidentityserviceproviderAdminResetUserPasswordInput!): JSON

  # cognitoidentityserviceprovider.AdminRespondToAuthChallenge
  AdminRespondToAuthChallenge(input: AwsCognitoidentityserviceproviderAdminRespondToAuthChallengeInput!): AwsCognitoidentityserviceproviderAdminRespondToAuthChallengeOutput

  # cognitoidentityserviceprovider.AdminSetUserMFAPreference
  AdminSetUserMFAPreference(input: AwsCognitoidentityserviceproviderAdminSetUserMFAPreferenceInput!): JSON

  # cognitoidentityserviceprovider.AdminSetUserSettings
  AdminSetUserSettings(input: AwsCognitoidentityserviceproviderAdminSetUserSettingsInput!): JSON

  # cognitoidentityserviceprovider.AdminUpdateAuthEventFeedback
  AdminUpdateAuthEventFeedback(input: AwsCognitoidentityserviceproviderAdminUpdateAuthEventFeedbackInput!): JSON

  # cognitoidentityserviceprovider.AdminUpdateDeviceStatus
  AdminUpdateDeviceStatus(input: AwsCognitoidentityserviceproviderAdminUpdateDeviceStatusInput!): JSON

  # cognitoidentityserviceprovider.AdminUpdateUserAttributes
  AdminUpdateUserAttributes(input: AwsCognitoidentityserviceproviderAdminUpdateUserAttributesInput!): JSON

  # cognitoidentityserviceprovider.AdminUserGlobalSignOut
  AdminUserGlobalSignOut(input: AwsCognitoidentityserviceproviderAdminUserGlobalSignOutInput!): JSON

  # cognitoidentityserviceprovider.AssociateSoftwareToken
  AssociateSoftwareToken(input: AwsCognitoidentityserviceproviderAssociateSoftwareTokenInput): AwsCognitoidentityserviceproviderAssociateSoftwareTokenOutput

  # cognitoidentityserviceprovider.ChangePassword
  ChangePassword(input: AwsCognitoidentityserviceproviderChangePasswordInput!): JSON

  # cognitoidentityserviceprovider.ConfirmDevice
  ConfirmDevice(input: AwsCognitoidentityserviceproviderConfirmDeviceInput!): AwsCognitoidentityserviceproviderConfirmDeviceOutput

  # cognitoidentityserviceprovider.ConfirmForgotPassword
  ConfirmForgotPassword(input: AwsCognitoidentityserviceproviderConfirmForgotPasswordInput!): JSON

  # cognitoidentityserviceprovider.ConfirmSignUp
  ConfirmSignUp(input: AwsCognitoidentityserviceproviderConfirmSignUpInput!): JSON

  # cognitoidentityserviceprovider.CreateGroup
  CreateGroup(input: AwsCognitoidentityserviceproviderCreateGroupInput!): AwsCognitoidentityserviceproviderCreateGroupOutput

  # cognitoidentityserviceprovider.CreateIdentityProvider
  CreateIdentityProvider(input: AwsCognitoidentityserviceproviderCreateIdentityProviderInput!): AwsCognitoidentityserviceproviderCreateIdentityProviderOutput

  # cognitoidentityserviceprovider.CreateResourceServer
  CreateResourceServer(input: AwsCognitoidentityserviceproviderCreateResourceServerInput!): AwsCognitoidentityserviceproviderCreateResourceServerOutput

  # cognitoidentityserviceprovider.CreateUserImportJob
  CreateUserImportJob(input: AwsCognitoidentityserviceproviderCreateUserImportJobInput!): AwsCognitoidentityserviceproviderCreateUserImportJobOutput

  # cognitoidentityserviceprovider.CreateUserPool
  CreateUserPool(input: AwsCognitoidentityserviceproviderCreateUserPoolInput!): AwsCognitoidentityserviceproviderCreateUserPoolOutput

  # cognitoidentityserviceprovider.CreateUserPoolClient
  CreateUserPoolClient(input: AwsCognitoidentityserviceproviderCreateUserPoolClientInput!): AwsCognitoidentityserviceproviderCreateUserPoolClientOutput

  # cognitoidentityserviceprovider.CreateUserPoolDomain
  CreateUserPoolDomain(input: AwsCognitoidentityserviceproviderCreateUserPoolDomainInput!): JSON

  # cognitoidentityserviceprovider.DeleteGroup
  DeleteGroup(input: AwsCognitoidentityserviceproviderDeleteGroupInput!): JSON

  # cognitoidentityserviceprovider.DeleteIdentityProvider
  DeleteIdentityProvider(input: AwsCognitoidentityserviceproviderDeleteIdentityProviderInput!): JSON

  # cognitoidentityserviceprovider.DeleteResourceServer
  DeleteResourceServer(input: AwsCognitoidentityserviceproviderDeleteResourceServerInput!): JSON

  # cognitoidentityserviceprovider.DeleteUser
  DeleteUser(input: AwsCognitoidentityserviceproviderDeleteUserInput!): JSON

  # cognitoidentityserviceprovider.DeleteUserAttributes
  DeleteUserAttributes(input: AwsCognitoidentityserviceproviderDeleteUserAttributesInput!): JSON

  # cognitoidentityserviceprovider.DeleteUserPool
  DeleteUserPool(input: AwsCognitoidentityserviceproviderDeleteUserPoolInput!): JSON

  # cognitoidentityserviceprovider.DeleteUserPoolClient
  DeleteUserPoolClient(input: AwsCognitoidentityserviceproviderDeleteUserPoolClientInput!): JSON

  # cognitoidentityserviceprovider.DeleteUserPoolDomain
  DeleteUserPoolDomain(input: AwsCognitoidentityserviceproviderDeleteUserPoolDomainInput!): JSON

  # cognitoidentityserviceprovider.DescribeIdentityProvider
  DescribeIdentityProvider(input: AwsCognitoidentityserviceproviderDescribeIdentityProviderInput!): AwsCognitoidentityserviceproviderDescribeIdentityProviderOutput

  # cognitoidentityserviceprovider.DescribeResourceServer
  DescribeResourceServer(input: AwsCognitoidentityserviceproviderDescribeResourceServerInput!): AwsCognitoidentityserviceproviderDescribeResourceServerOutput

  # cognitoidentityserviceprovider.DescribeRiskConfiguration
  DescribeRiskConfiguration(input: AwsCognitoidentityserviceproviderDescribeRiskConfigurationInput!): AwsCognitoidentityserviceproviderDescribeRiskConfigurationOutput

  # cognitoidentityserviceprovider.DescribeUserImportJob
  DescribeUserImportJob(input: AwsCognitoidentityserviceproviderDescribeUserImportJobInput!): AwsCognitoidentityserviceproviderDescribeUserImportJobOutput

  # cognitoidentityserviceprovider.DescribeUserPool
  DescribeUserPool(input: AwsCognitoidentityserviceproviderDescribeUserPoolInput!): AwsCognitoidentityserviceproviderDescribeUserPoolOutput

  # cognitoidentityserviceprovider.DescribeUserPoolClient
  DescribeUserPoolClient(input: AwsCognitoidentityserviceproviderDescribeUserPoolClientInput!): AwsCognitoidentityserviceproviderDescribeUserPoolClientOutput

  # cognitoidentityserviceprovider.DescribeUserPoolDomain
  DescribeUserPoolDomain(input: AwsCognitoidentityserviceproviderDescribeUserPoolDomainInput!): AwsCognitoidentityserviceproviderDescribeUserPoolDomainOutput

  # cognitoidentityserviceprovider.ForgetDevice
  ForgetDevice(input: AwsCognitoidentityserviceproviderForgetDeviceInput!): JSON

  # cognitoidentityserviceprovider.ForgotPassword
  ForgotPassword(input: AwsCognitoidentityserviceproviderForgotPasswordInput!): AwsCognitoidentityserviceproviderForgotPasswordOutput

  # cognitoidentityserviceprovider.GetCSVHeader
  GetCSVHeader(input: AwsCognitoidentityserviceproviderGetCSVHeaderInput!): AwsCognitoidentityserviceproviderGetCSVHeaderOutput

  # cognitoidentityserviceprovider.GetDevice
  GetDevice(input: AwsCognitoidentityserviceproviderGetDeviceInput!): AwsCognitoidentityserviceproviderGetDeviceOutput

  # cognitoidentityserviceprovider.GetGroup
  GetGroup(input: AwsCognitoidentityserviceproviderGetGroupInput!): AwsCognitoidentityserviceproviderGetGroupOutput

  # cognitoidentityserviceprovider.GetIdentityProviderByIdentifier
  GetIdentityProviderByIdentifier(input: AwsCognitoidentityserviceproviderGetIdentityProviderByIdentifierInput!): AwsCognitoidentityserviceproviderGetIdentityProviderByIdentifierOutput

  # cognitoidentityserviceprovider.GetUICustomization
  GetUICustomization(input: AwsCognitoidentityserviceproviderGetUICustomizationInput!): AwsCognitoidentityserviceproviderGetUICustomizationOutput

  # cognitoidentityserviceprovider.GetUser
  GetUser(input: AwsCognitoidentityserviceproviderGetUserInput!): AwsCognitoidentityserviceproviderGetUserOutput

  # cognitoidentityserviceprovider.GetUserAttributeVerificationCode
  GetUserAttributeVerificationCode(input: AwsCognitoidentityserviceproviderGetUserAttributeVerificationCodeInput!): AwsCognitoidentityserviceproviderGetUserAttributeVerificationCodeOutput

  # cognitoidentityserviceprovider.GetUserPoolMfaConfig
  GetUserPoolMfaConfig(input: AwsCognitoidentityserviceproviderGetUserPoolMfaConfigInput!): AwsCognitoidentityserviceproviderGetUserPoolMfaConfigOutput

  # cognitoidentityserviceprovider.GlobalSignOut
  GlobalSignOut(input: AwsCognitoidentityserviceproviderGlobalSignOutInput!): JSON

  # cognitoidentityserviceprovider.InitiateAuth
  InitiateAuth(input: AwsCognitoidentityserviceproviderInitiateAuthInput!): AwsCognitoidentityserviceproviderInitiateAuthOutput

  # cognitoidentityserviceprovider.ListDevices
  ListDevices(input: AwsCognitoidentityserviceproviderListDevicesInput!): AwsCognitoidentityserviceproviderListDevicesOutput

  # cognitoidentityserviceprovider.ListGroups
  ListGroups(input: AwsCognitoidentityserviceproviderListGroupsInput!): AwsCognitoidentityserviceproviderListGroupsOutput

  # cognitoidentityserviceprovider.ListIdentityProviders
  ListIdentityProviders(input: AwsCognitoidentityserviceproviderListIdentityProvidersInput!): AwsCognitoidentityserviceproviderListIdentityProvidersOutput

  # cognitoidentityserviceprovider.ListResourceServers
  ListResourceServers(input: AwsCognitoidentityserviceproviderListResourceServersInput!): AwsCognitoidentityserviceproviderListResourceServersOutput

  # cognitoidentityserviceprovider.ListUserImportJobs
  ListUserImportJobs(input: AwsCognitoidentityserviceproviderListUserImportJobsInput!): AwsCognitoidentityserviceproviderListUserImportJobsOutput

  # cognitoidentityserviceprovider.ListUserPoolClients
  ListUserPoolClients(input: AwsCognitoidentityserviceproviderListUserPoolClientsInput!): AwsCognitoidentityserviceproviderListUserPoolClientsOutput

  # cognitoidentityserviceprovider.ListUserPools
  ListUserPools(input: AwsCognitoidentityserviceproviderListUserPoolsInput!): AwsCognitoidentityserviceproviderListUserPoolsOutput

  # cognitoidentityserviceprovider.ListUsers
  ListUsers(input: AwsCognitoidentityserviceproviderListUsersInput!): AwsCognitoidentityserviceproviderListUsersOutput

  # cognitoidentityserviceprovider.ListUsersInGroup
  ListUsersInGroup(input: AwsCognitoidentityserviceproviderListUsersInGroupInput!): AwsCognitoidentityserviceproviderListUsersInGroupOutput

  # cognitoidentityserviceprovider.ResendConfirmationCode
  ResendConfirmationCode(input: AwsCognitoidentityserviceproviderResendConfirmationCodeInput!): AwsCognitoidentityserviceproviderResendConfirmationCodeOutput

  # cognitoidentityserviceprovider.RespondToAuthChallenge
  RespondToAuthChallenge(input: AwsCognitoidentityserviceproviderRespondToAuthChallengeInput!): AwsCognitoidentityserviceproviderRespondToAuthChallengeOutput

  # cognitoidentityserviceprovider.SetRiskConfiguration
  SetRiskConfiguration(input: AwsCognitoidentityserviceproviderSetRiskConfigurationInput!): AwsCognitoidentityserviceproviderSetRiskConfigurationOutput

  # cognitoidentityserviceprovider.SetUICustomization
  SetUICustomization(input: AwsCognitoidentityserviceproviderSetUICustomizationInput!): AwsCognitoidentityserviceproviderSetUICustomizationOutput

  # cognitoidentityserviceprovider.SetUserMFAPreference
  SetUserMFAPreference(input: AwsCognitoidentityserviceproviderSetUserMFAPreferenceInput!): JSON

  # cognitoidentityserviceprovider.SetUserPoolMfaConfig
  SetUserPoolMfaConfig(input: AwsCognitoidentityserviceproviderSetUserPoolMfaConfigInput!): AwsCognitoidentityserviceproviderSetUserPoolMfaConfigOutput

  # cognitoidentityserviceprovider.SetUserSettings
  SetUserSettings(input: AwsCognitoidentityserviceproviderSetUserSettingsInput!): JSON

  # cognitoidentityserviceprovider.SignUp
  SignUp(input: AwsCognitoidentityserviceproviderSignUpInput!): AwsCognitoidentityserviceproviderSignUpOutput

  # cognitoidentityserviceprovider.StartUserImportJob
  StartUserImportJob(input: AwsCognitoidentityserviceproviderStartUserImportJobInput!): AwsCognitoidentityserviceproviderStartUserImportJobOutput

  # cognitoidentityserviceprovider.StopUserImportJob
  StopUserImportJob(input: AwsCognitoidentityserviceproviderStopUserImportJobInput!): AwsCognitoidentityserviceproviderStopUserImportJobOutput

  # cognitoidentityserviceprovider.UpdateAuthEventFeedback
  UpdateAuthEventFeedback(input: AwsCognitoidentityserviceproviderUpdateAuthEventFeedbackInput!): JSON

  # cognitoidentityserviceprovider.UpdateDeviceStatus
  UpdateDeviceStatus(input: AwsCognitoidentityserviceproviderUpdateDeviceStatusInput!): JSON

  # cognitoidentityserviceprovider.UpdateGroup
  UpdateGroup(input: AwsCognitoidentityserviceproviderUpdateGroupInput!): AwsCognitoidentityserviceproviderUpdateGroupOutput

  # cognitoidentityserviceprovider.UpdateIdentityProvider
  UpdateIdentityProvider(input: AwsCognitoidentityserviceproviderUpdateIdentityProviderInput!): AwsCognitoidentityserviceproviderUpdateIdentityProviderOutput

  # cognitoidentityserviceprovider.UpdateResourceServer
  UpdateResourceServer(input: AwsCognitoidentityserviceproviderUpdateResourceServerInput!): AwsCognitoidentityserviceproviderUpdateResourceServerOutput

  # cognitoidentityserviceprovider.UpdateUserAttributes
  UpdateUserAttributes(input: AwsCognitoidentityserviceproviderUpdateUserAttributesInput!): AwsCognitoidentityserviceproviderUpdateUserAttributesOutput

  # cognitoidentityserviceprovider.UpdateUserPool
  UpdateUserPool(input: AwsCognitoidentityserviceproviderUpdateUserPoolInput!): JSON

  # cognitoidentityserviceprovider.UpdateUserPoolClient
  UpdateUserPoolClient(input: AwsCognitoidentityserviceproviderUpdateUserPoolClientInput!): AwsCognitoidentityserviceproviderUpdateUserPoolClientOutput

  # cognitoidentityserviceprovider.VerifySoftwareToken
  VerifySoftwareToken(input: AwsCognitoidentityserviceproviderVerifySoftwareTokenInput!): AwsCognitoidentityserviceproviderVerifySoftwareTokenOutput

  # cognitoidentityserviceprovider.VerifyUserAttribute
  VerifyUserAttribute(input: AwsCognitoidentityserviceproviderVerifyUserAttributeInput!): JSON
}

input AwsCognitoidentityserviceproviderAddCustomAttributesInput {
  UserPoolId: String!
  CustomAttributes: [AwsCognitoidentityserviceproviderS4Input]!
}

input AwsCognitoidentityserviceproviderAdminAddUserToGroupInput {
  UserPoolId: String!
  Username: String!
  GroupName: String!
}

input AwsCognitoidentityserviceproviderAdminConfirmSignUpInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoidentityserviceproviderAdminCreateUserInput {
  UserPoolId: String!
  Username: String!
  UserAttributes: [AwsCognitoidentityserviceproviderSiInput]
  ValidationData: [AwsCognitoidentityserviceproviderSiInput]
  TemporaryPassword: String
  ForceAliasCreation: Boolean
  MessageAction: String
  DesiredDeliveryMediums: [String]
}

type AwsCognitoidentityserviceproviderAdminCreateUserOutput {
  User: AwsCognitoidentityserviceproviderSs
}

input AwsCognitoidentityserviceproviderAdminDeleteUserAttributesInput {
  UserPoolId: String!
  Username: String!
  UserAttributeNames: [String]!
}

input AwsCognitoidentityserviceproviderAdminDeleteUserInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoidentityserviceproviderAdminDisableProviderForUserInput {
  UserPoolId: String!
  User: AwsCognitoidentityserviceproviderS12Input!
}

input AwsCognitoidentityserviceproviderAdminDisableUserInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoidentityserviceproviderAdminEnableUserInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoidentityserviceproviderAdminForgetDeviceInput {
  UserPoolId: String!
  Username: String!
  DeviceKey: String!
}

input AwsCognitoidentityserviceproviderAdminGetDeviceInput {
  DeviceKey: String!
  UserPoolId: String!
  Username: String!
}

type AwsCognitoidentityserviceproviderAdminGetDeviceOutput {
  Device: AwsCognitoidentityserviceproviderS1d!
}

input AwsCognitoidentityserviceproviderAdminGetUserInput {
  UserPoolId: String!
  Username: String!
}

type AwsCognitoidentityserviceproviderAdminGetUserOutput {
  Username: String!
  UserAttributes: [AwsCognitoidentityserviceproviderSi]
  UserCreateDate: Date
  UserLastModifiedDate: Date
  Enabled: Boolean
  UserStatus: String
  MFAOptions: [AwsCognitoidentityserviceproviderSv]
  PreferredMfaSetting: String
  UserMFASettingList: [String]
}

input AwsCognitoidentityserviceproviderAdminInitiateAuthInput {
  UserPoolId: String!
  ClientId: String!
  AuthFlow: String!
  AuthParameters: JSON
  ClientMetadata: JSON
  AnalyticsMetadata: AwsCognitoidentityserviceproviderS1mInput
  ContextData: AwsCognitoidentityserviceproviderS1nInput
}

type AwsCognitoidentityserviceproviderAdminInitiateAuthOutput {
  ChallengeName: String
  Session: String
  ChallengeParameters: JSON
  AuthenticationResult: AwsCognitoidentityserviceproviderS1u
}

input AwsCognitoidentityserviceproviderAdminLinkProviderForUserInput {
  UserPoolId: String!
  DestinationUser: AwsCognitoidentityserviceproviderS12Input!
  SourceUser: AwsCognitoidentityserviceproviderS12Input!
}

input AwsCognitoidentityserviceproviderAdminListDevicesInput {
  UserPoolId: String!
  Username: String!
  Limit: Int
  PaginationToken: String
}

type AwsCognitoidentityserviceproviderAdminListDevicesOutput {
  Devices: [AwsCognitoidentityserviceproviderS1d]
  PaginationToken: String
}

input AwsCognitoidentityserviceproviderAdminListGroupsForUserInput {
  Username: String!
  UserPoolId: String!
  Limit: Int
  NextToken: String
}

type AwsCognitoidentityserviceproviderAdminListGroupsForUserOutput {
  Groups: [AwsCognitoidentityserviceproviderS29]
  NextToken: String
}

input AwsCognitoidentityserviceproviderAdminListUserAuthEventsInput {
  UserPoolId: String!
  Username: String!
  MaxResults: Int
  NextToken: String
}

type AwsCognitoidentityserviceproviderAdminListUserAuthEventsOutput {
  AuthEvents: [AwsCognitoidentityserviceproviderAdminListUserAuthEventsOutputAuthEvents]
  NextToken: String
}

type AwsCognitoidentityserviceproviderAdminListUserAuthEventsOutputAuthEvents {
  EventId: String
  EventType: String
  CreationDate: Date
  EventResponse: String
  EventRisk: AwsCognitoidentityserviceproviderAdminListUserAuthEventsOutputAuthEventsEventRisk
  ChallengeResponses: [AwsCognitoidentityserviceproviderAdminListUserAuthEventsOutputAuthEventsChallengeResponses]
  EventContextData: AwsCognitoidentityserviceproviderAdminListUserAuthEventsOutputAuthEventsEventContextData
  EventFeedback: AwsCognitoidentityserviceproviderAdminListUserAuthEventsOutputAuthEventsEventFeedback
}

type AwsCognitoidentityserviceproviderAdminListUserAuthEventsOutputAuthEventsChallengeResponses {
  ChallengeName: String
  ChallengeResponse: String
}

type AwsCognitoidentityserviceproviderAdminListUserAuthEventsOutputAuthEventsEventContextData {
  IpAddress: String
  DeviceName: String
  Timezone: String
  City: String
  Country: String
}

type AwsCognitoidentityserviceproviderAdminListUserAuthEventsOutputAuthEventsEventFeedback {
  FeedbackValue: String!
  Provider: String!
  FeedbackDate: Date
}

type AwsCognitoidentityserviceproviderAdminListUserAuthEventsOutputAuthEventsEventRisk {
  RiskDecision: String
  RiskLevel: String
}

input AwsCognitoidentityserviceproviderAdminRemoveUserFromGroupInput {
  UserPoolId: String!
  Username: String!
  GroupName: String!
}

input AwsCognitoidentityserviceproviderAdminResetUserPasswordInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoidentityserviceproviderAdminRespondToAuthChallengeInput {
  UserPoolId: String!
  ClientId: String!
  ChallengeName: String!
  ChallengeResponses: JSON
  Session: String
  AnalyticsMetadata: AwsCognitoidentityserviceproviderS1mInput
  ContextData: AwsCognitoidentityserviceproviderS1nInput
}

type AwsCognitoidentityserviceproviderAdminRespondToAuthChallengeOutput {
  ChallengeName: String
  Session: String
  ChallengeParameters: JSON
  AuthenticationResult: AwsCognitoidentityserviceproviderS1u
}

input AwsCognitoidentityserviceproviderAdminSetUserMFAPreferenceInput {
  SMSMfaSettings: AwsCognitoidentityserviceproviderS30Input
  SoftwareTokenMfaSettings: AwsCognitoidentityserviceproviderS31Input
  Username: String!
  UserPoolId: String!
}

input AwsCognitoidentityserviceproviderAdminSetUserSettingsInput {
  UserPoolId: String!
  Username: String!
  MFAOptions: [AwsCognitoidentityserviceproviderSvInput]!
}

input AwsCognitoidentityserviceproviderAdminUpdateAuthEventFeedbackInput {
  UserPoolId: String!
  Username: String!
  EventId: String!
  FeedbackValue: String!
}

input AwsCognitoidentityserviceproviderAdminUpdateDeviceStatusInput {
  UserPoolId: String!
  Username: String!
  DeviceKey: String!
  DeviceRememberedStatus: String
}

input AwsCognitoidentityserviceproviderAdminUpdateUserAttributesInput {
  UserPoolId: String!
  Username: String!
  UserAttributes: [AwsCognitoidentityserviceproviderSiInput]!
}

input AwsCognitoidentityserviceproviderAdminUserGlobalSignOutInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoidentityserviceproviderAssociateSoftwareTokenInput {
  AccessToken: String
  Session: String
}

type AwsCognitoidentityserviceproviderAssociateSoftwareTokenOutput {
  SecretCode: String
  Session: String
}

input AwsCognitoidentityserviceproviderChangePasswordInput {
  PreviousPassword: String!
  ProposedPassword: String!
  AccessToken: String!
}

input AwsCognitoidentityserviceproviderConfirmDeviceDeviceSecretVerifierConfigInput {
  PasswordVerifier: String
  Salt: String
}

input AwsCognitoidentityserviceproviderConfirmDeviceInput {
  AccessToken: String!
  DeviceKey: String!
  DeviceSecretVerifierConfig: AwsCognitoidentityserviceproviderConfirmDeviceDeviceSecretVerifierConfigInput
  DeviceName: String
}

type AwsCognitoidentityserviceproviderConfirmDeviceOutput {
  UserConfirmationNecessary: Boolean
}

input AwsCognitoidentityserviceproviderConfirmForgotPasswordInput {
  ClientId: String!
  SecretHash: String
  Username: String!
  ConfirmationCode: String!
  Password: String!
  AnalyticsMetadata: AwsCognitoidentityserviceproviderS1mInput
  UserContextData: AwsCognitoidentityserviceproviderS3rInput
}

input AwsCognitoidentityserviceproviderConfirmSignUpInput {
  ClientId: String!
  SecretHash: String
  Username: String!
  ConfirmationCode: String!
  ForceAliasCreation: Boolean
  AnalyticsMetadata: AwsCognitoidentityserviceproviderS1mInput
  UserContextData: AwsCognitoidentityserviceproviderS3rInput
}

input AwsCognitoidentityserviceproviderCreateGroupInput {
  GroupName: String!
  UserPoolId: String!
  Description: String
  RoleArn: String
  Precedence: Int
}

type AwsCognitoidentityserviceproviderCreateGroupOutput {
  Group: AwsCognitoidentityserviceproviderS29
}

input AwsCognitoidentityserviceproviderCreateIdentityProviderInput {
  UserPoolId: String!
  ProviderName: String!
  ProviderType: String!
  ProviderDetails: JSON!
  AttributeMapping: JSON
  IdpIdentifiers: [String]
}

type AwsCognitoidentityserviceproviderCreateIdentityProviderOutput {
  IdentityProvider: AwsCognitoidentityserviceproviderS46!
}

input AwsCognitoidentityserviceproviderCreateResourceServerInput {
  UserPoolId: String!
  Identifier: String!
  Name: String!
  Scopes: [AwsCognitoidentityserviceproviderS4aInput]
}

type AwsCognitoidentityserviceproviderCreateResourceServerOutput {
  ResourceServer: AwsCognitoidentityserviceproviderS4f!
}

input AwsCognitoidentityserviceproviderCreateUserImportJobInput {
  JobName: String!
  UserPoolId: String!
  CloudWatchLogsRoleArn: String!
}

type AwsCognitoidentityserviceproviderCreateUserImportJobOutput {
  UserImportJob: AwsCognitoidentityserviceproviderS4j
}

input AwsCognitoidentityserviceproviderCreateUserPoolClientInput {
  UserPoolId: String!
  ClientName: String!
  GenerateSecret: Boolean
  RefreshTokenValidity: Int
  ReadAttributes: [String]
  WriteAttributes: [String]
  ExplicitAuthFlows: [String]
  SupportedIdentityProviders: [String]
  CallbackURLs: [String]
  LogoutURLs: [String]
  DefaultRedirectURI: String
  AllowedOAuthFlows: [String]
  AllowedOAuthScopes: [String]
  AllowedOAuthFlowsUserPoolClient: Boolean
  AnalyticsConfiguration: AwsCognitoidentityserviceproviderS63Input
}

type AwsCognitoidentityserviceproviderCreateUserPoolClientOutput {
  UserPoolClient: AwsCognitoidentityserviceproviderS66
}

input AwsCognitoidentityserviceproviderCreateUserPoolDomainInput {
  Domain: String!
  UserPoolId: String!
}

input AwsCognitoidentityserviceproviderCreateUserPoolInput {
  PoolName: String!
  Policies: AwsCognitoidentityserviceproviderS4rInput
  LambdaConfig: AwsCognitoidentityserviceproviderS4uInput
  AutoVerifiedAttributes: [String]
  AliasAttributes: [String]
  UsernameAttributes: [String]
  SmsVerificationMessage: String
  EmailVerificationMessage: String
  EmailVerificationSubject: String
  VerificationMessageTemplate: AwsCognitoidentityserviceproviderS54Input
  SmsAuthenticationMessage: String
  MfaConfiguration: String
  DeviceConfiguration: AwsCognitoidentityserviceproviderS59Input
  EmailConfiguration: AwsCognitoidentityserviceproviderS5aInput
  SmsConfiguration: AwsCognitoidentityserviceproviderS5cInput
  UserPoolTags: JSON
  AdminCreateUserConfig: AwsCognitoidentityserviceproviderS5eInput
  Schema: [AwsCognitoidentityserviceproviderS4Input]
  UserPoolAddOns: AwsCognitoidentityserviceproviderS5iInput
}

type AwsCognitoidentityserviceproviderCreateUserPoolOutput {
  UserPool: AwsCognitoidentityserviceproviderS5l
}

input AwsCognitoidentityserviceproviderDeleteGroupInput {
  GroupName: String!
  UserPoolId: String!
}

input AwsCognitoidentityserviceproviderDeleteIdentityProviderInput {
  UserPoolId: String!
  ProviderName: String!
}

input AwsCognitoidentityserviceproviderDeleteResourceServerInput {
  UserPoolId: String!
  Identifier: String!
}

input AwsCognitoidentityserviceproviderDeleteUserAttributesInput {
  UserAttributeNames: [String]!
  AccessToken: String!
}

input AwsCognitoidentityserviceproviderDeleteUserInput {
  AccessToken: String!
}

input AwsCognitoidentityserviceproviderDeleteUserPoolClientInput {
  UserPoolId: String!
  ClientId: String!
}

input AwsCognitoidentityserviceproviderDeleteUserPoolDomainInput {
  Domain: String!
  UserPoolId: String!
}

input AwsCognitoidentityserviceproviderDeleteUserPoolInput {
  UserPoolId: String!
}

input AwsCognitoidentityserviceproviderDescribeIdentityProviderInput {
  UserPoolId: String!
  ProviderName: String!
}

type AwsCognitoidentityserviceproviderDescribeIdentityProviderOutput {
  IdentityProvider: AwsCognitoidentityserviceproviderS46!
}

input AwsCognitoidentityserviceproviderDescribeResourceServerInput {
  UserPoolId: String!
  Identifier: String!
}

type AwsCognitoidentityserviceproviderDescribeResourceServerOutput {
  ResourceServer: AwsCognitoidentityserviceproviderS4f!
}

input AwsCognitoidentityserviceproviderDescribeRiskConfigurationInput {
  UserPoolId: String!
  ClientId: String
}

type AwsCognitoidentityserviceproviderDescribeRiskConfigurationOutput {
  RiskConfiguration: AwsCognitoidentityserviceproviderS6r!
}

input AwsCognitoidentityserviceproviderDescribeUserImportJobInput {
  UserPoolId: String!
  JobId: String!
}

type AwsCognitoidentityserviceproviderDescribeUserImportJobOutput {
  UserImportJob: AwsCognitoidentityserviceproviderS4j
}

input AwsCognitoidentityserviceproviderDescribeUserPoolClientInput {
  UserPoolId: String!
  ClientId: String!
}

type AwsCognitoidentityserviceproviderDescribeUserPoolClientOutput {
  UserPoolClient: AwsCognitoidentityserviceproviderS66
}

input AwsCognitoidentityserviceproviderDescribeUserPoolDomainInput {
  Domain: String!
}

type AwsCognitoidentityserviceproviderDescribeUserPoolDomainOutput {
  DomainDescription: AwsCognitoidentityserviceproviderDescribeUserPoolDomainOutputDomainDescription
}

type AwsCognitoidentityserviceproviderDescribeUserPoolDomainOutputDomainDescription {
  UserPoolId: String
  AWSAccountId: String
  Domain: String
  S3Bucket: String
  CloudFrontDistribution: String
  Version: String
  Status: String
}

input AwsCognitoidentityserviceproviderDescribeUserPoolInput {
  UserPoolId: String!
}

type AwsCognitoidentityserviceproviderDescribeUserPoolOutput {
  UserPool: AwsCognitoidentityserviceproviderS5l
}

input AwsCognitoidentityserviceproviderForgetDeviceInput {
  AccessToken: String
  DeviceKey: String!
}

input AwsCognitoidentityserviceproviderForgotPasswordInput {
  ClientId: String!
  SecretHash: String
  UserContextData: AwsCognitoidentityserviceproviderS3rInput
  Username: String!
  AnalyticsMetadata: AwsCognitoidentityserviceproviderS1mInput
}

type AwsCognitoidentityserviceproviderForgotPasswordOutput {
  CodeDeliveryDetails: AwsCognitoidentityserviceproviderS7p
}

input AwsCognitoidentityserviceproviderGetCSVHeaderInput {
  UserPoolId: String!
}

type AwsCognitoidentityserviceproviderGetCSVHeaderOutput {
  UserPoolId: String
  CSVHeader: [String]
}

input AwsCognitoidentityserviceproviderGetDeviceInput {
  DeviceKey: String!
  AccessToken: String
}

type AwsCognitoidentityserviceproviderGetDeviceOutput {
  Device: AwsCognitoidentityserviceproviderS1d!
}

input AwsCognitoidentityserviceproviderGetGroupInput {
  GroupName: String!
  UserPoolId: String!
}

type AwsCognitoidentityserviceproviderGetGroupOutput {
  Group: AwsCognitoidentityserviceproviderS29
}

input AwsCognitoidentityserviceproviderGetIdentityProviderByIdentifierInput {
  UserPoolId: String!
  IdpIdentifier: String!
}

type AwsCognitoidentityserviceproviderGetIdentityProviderByIdentifierOutput {
  IdentityProvider: AwsCognitoidentityserviceproviderS46!
}

input AwsCognitoidentityserviceproviderGetUICustomizationInput {
  UserPoolId: String!
  ClientId: String
}

type AwsCognitoidentityserviceproviderGetUICustomizationOutput {
  UICustomization: AwsCognitoidentityserviceproviderS81!
}

input AwsCognitoidentityserviceproviderGetUserAttributeVerificationCodeInput {
  AccessToken: String!
  AttributeName: String!
}

type AwsCognitoidentityserviceproviderGetUserAttributeVerificationCodeOutput {
  CodeDeliveryDetails: AwsCognitoidentityserviceproviderS7p
}

input AwsCognitoidentityserviceproviderGetUserInput {
  AccessToken: String!
}

type AwsCognitoidentityserviceproviderGetUserOutput {
  Username: String!
  UserAttributes: [AwsCognitoidentityserviceproviderSi]!
  MFAOptions: [AwsCognitoidentityserviceproviderSv]
  PreferredMfaSetting: String
  UserMFASettingList: [String]
}

input AwsCognitoidentityserviceproviderGetUserPoolMfaConfigInput {
  UserPoolId: String!
}

type AwsCognitoidentityserviceproviderGetUserPoolMfaConfigOutput {
  SmsMfaConfiguration: AwsCognitoidentityserviceproviderS8b
  SoftwareTokenMfaConfiguration: AwsCognitoidentityserviceproviderS8c
  MfaConfiguration: String
}

input AwsCognitoidentityserviceproviderGlobalSignOutInput {
  AccessToken: String!
}

input AwsCognitoidentityserviceproviderInitiateAuthInput {
  AuthFlow: String!
  AuthParameters: JSON
  ClientMetadata: JSON
  ClientId: String!
  AnalyticsMetadata: AwsCognitoidentityserviceproviderS1mInput
  UserContextData: AwsCognitoidentityserviceproviderS3rInput
}

type AwsCognitoidentityserviceproviderInitiateAuthOutput {
  ChallengeName: String
  Session: String
  ChallengeParameters: JSON
  AuthenticationResult: AwsCognitoidentityserviceproviderS1u
}

input AwsCognitoidentityserviceproviderListDevicesInput {
  AccessToken: String!
  Limit: Int
  PaginationToken: String
}

type AwsCognitoidentityserviceproviderListDevicesOutput {
  Devices: [AwsCognitoidentityserviceproviderS1d]
  PaginationToken: String
}

input AwsCognitoidentityserviceproviderListGroupsInput {
  UserPoolId: String!
  Limit: Int
  NextToken: String
}

type AwsCognitoidentityserviceproviderListGroupsOutput {
  Groups: [AwsCognitoidentityserviceproviderS29]
  NextToken: String
}

input AwsCognitoidentityserviceproviderListIdentityProvidersInput {
  UserPoolId: String!
  MaxResults: Int
  NextToken: String
}

type AwsCognitoidentityserviceproviderListIdentityProvidersOutput {
  Providers: [AwsCognitoidentityserviceproviderListIdentityProvidersOutputProviders]!
  NextToken: String
}

type AwsCognitoidentityserviceproviderListIdentityProvidersOutputProviders {
  ProviderName: String
  ProviderType: String
  LastModifiedDate: Date
  CreationDate: Date
}

input AwsCognitoidentityserviceproviderListResourceServersInput {
  UserPoolId: String!
  MaxResults: Int
  NextToken: String
}

type AwsCognitoidentityserviceproviderListResourceServersOutput {
  ResourceServers: [AwsCognitoidentityserviceproviderS4f]!
  NextToken: String
}

input AwsCognitoidentityserviceproviderListUserImportJobsInput {
  UserPoolId: String!
  MaxResults: Int!
  PaginationToken: String
}

type AwsCognitoidentityserviceproviderListUserImportJobsOutput {
  UserImportJobs: [AwsCognitoidentityserviceproviderS4j]
  PaginationToken: String
}

input AwsCognitoidentityserviceproviderListUserPoolClientsInput {
  UserPoolId: String!
  MaxResults: Int
  NextToken: String
}

type AwsCognitoidentityserviceproviderListUserPoolClientsOutput {
  UserPoolClients: [AwsCognitoidentityserviceproviderListUserPoolClientsOutputUserPoolClients]
  NextToken: String
}

type AwsCognitoidentityserviceproviderListUserPoolClientsOutputUserPoolClients {
  ClientId: String
  UserPoolId: String
  ClientName: String
}

input AwsCognitoidentityserviceproviderListUserPoolsInput {
  NextToken: String
  MaxResults: Int!
}

type AwsCognitoidentityserviceproviderListUserPoolsOutput {
  UserPools: [AwsCognitoidentityserviceproviderListUserPoolsOutputUserPools]
  NextToken: String
}

type AwsCognitoidentityserviceproviderListUserPoolsOutputUserPools {
  Id: String
  Name: String
  LambdaConfig: AwsCognitoidentityserviceproviderS4u
  Status: String
  LastModifiedDate: Date
  CreationDate: Date
}

input AwsCognitoidentityserviceproviderListUsersInGroupInput {
  UserPoolId: String!
  GroupName: String!
  Limit: Int
  NextToken: String
}

type AwsCognitoidentityserviceproviderListUsersInGroupOutput {
  Users: [AwsCognitoidentityserviceproviderSs]
  NextToken: String
}

input AwsCognitoidentityserviceproviderListUsersInput {
  UserPoolId: String!
  AttributesToGet: [String]
  Limit: Int
  PaginationToken: String
  Filter: String
}

type AwsCognitoidentityserviceproviderListUsersOutput {
  Users: [AwsCognitoidentityserviceproviderSs]
  PaginationToken: String
}

input AwsCognitoidentityserviceproviderResendConfirmationCodeInput {
  ClientId: String!
  SecretHash: String
  UserContextData: AwsCognitoidentityserviceproviderS3rInput
  Username: String!
  AnalyticsMetadata: AwsCognitoidentityserviceproviderS1mInput
}

type AwsCognitoidentityserviceproviderResendConfirmationCodeOutput {
  CodeDeliveryDetails: AwsCognitoidentityserviceproviderS7p
}

input AwsCognitoidentityserviceproviderRespondToAuthChallengeInput {
  ClientId: String!
  ChallengeName: String!
  Session: String
  ChallengeResponses: JSON
  AnalyticsMetadata: AwsCognitoidentityserviceproviderS1mInput
  UserContextData: AwsCognitoidentityserviceproviderS3rInput
}

type AwsCognitoidentityserviceproviderRespondToAuthChallengeOutput {
  ChallengeName: String
  Session: String
  ChallengeParameters: JSON
  AuthenticationResult: AwsCognitoidentityserviceproviderS1u
}

input AwsCognitoidentityserviceproviderS12Input {
  ProviderName: String
  ProviderAttributeName: String
  ProviderAttributeValue: String
}

type AwsCognitoidentityserviceproviderS1d {
  DeviceKey: String
  DeviceAttributes: [AwsCognitoidentityserviceproviderSi]
  DeviceCreateDate: Date
  DeviceLastModifiedDate: Date
  DeviceLastAuthenticatedDate: Date
}

input AwsCognitoidentityserviceproviderS1mInput {
  AnalyticsEndpointId: String
}

input AwsCognitoidentityserviceproviderS1nHttpHeadersInput {
  headerName: String
  headerValue: String
}

input AwsCognitoidentityserviceproviderS1nInput {
  IpAddress: String!
  ServerName: String!
  ServerPath: String!
  HttpHeaders: [AwsCognitoidentityserviceproviderS1nHttpHeadersInput]!
  EncodedData: String
}

type AwsCognitoidentityserviceproviderS1u {
  AccessToken: String
  ExpiresIn: Int
  TokenType: String
  RefreshToken: String
  IdToken: String
  NewDeviceMetadata: AwsCognitoidentityserviceproviderS1uNewDeviceMetadata
}

type AwsCognitoidentityserviceproviderS1uNewDeviceMetadata {
  DeviceKey: String
  DeviceGroupKey: String
}

type AwsCognitoidentityserviceproviderS29 {
  GroupName: String
  UserPoolId: String
  Description: String
  RoleArn: String
  Precedence: Int
  LastModifiedDate: Date
  CreationDate: Date
}

input AwsCognitoidentityserviceproviderS30Input {
  Enabled: Boolean
  PreferredMfa: Boolean
}

input AwsCognitoidentityserviceproviderS31Input {
  Enabled: Boolean
  PreferredMfa: Boolean
}

input AwsCognitoidentityserviceproviderS3rInput {
  EncodedData: String
}

type AwsCognitoidentityserviceproviderS4 {
  Name: String
  AttributeDataType: String
  DeveloperOnlyAttribute: Boolean
  Mutable: Boolean
  Required: Boolean
  NumberAttributeConstraints: AwsCognitoidentityserviceproviderS4NumberAttributeConstraints
  StringAttributeConstraints: AwsCognitoidentityserviceproviderS4StringAttributeConstraints
}

type AwsCognitoidentityserviceproviderS46 {
  UserPoolId: String
  ProviderName: String
  ProviderType: String
  ProviderDetails: JSON
  AttributeMapping: JSON
  IdpIdentifiers: [String]
  LastModifiedDate: Date
  CreationDate: Date
}

type AwsCognitoidentityserviceproviderS4a {
  ScopeName: String!
  ScopeDescription: String!
}

input AwsCognitoidentityserviceproviderS4aInput {
  ScopeName: String!
  ScopeDescription: String!
}

type AwsCognitoidentityserviceproviderS4f {
  UserPoolId: String
  Identifier: String
  Name: String
  Scopes: [AwsCognitoidentityserviceproviderS4a]
}

input AwsCognitoidentityserviceproviderS4Input {
  Name: String
  AttributeDataType: String
  DeveloperOnlyAttribute: Boolean
  Mutable: Boolean
  Required: Boolean
  NumberAttributeConstraints: AwsCognitoidentityserviceproviderS4NumberAttributeConstraintsInput
  StringAttributeConstraints: AwsCognitoidentityserviceproviderS4StringAttributeConstraintsInput
}

type AwsCognitoidentityserviceproviderS4j {
  JobName: String
  JobId: String
  UserPoolId: String
  PreSignedUrl: String
  CreationDate: Date
  StartDate: Date
  CompletionDate: Date
  Status: String
  CloudWatchLogsRoleArn: String
  ImportedUsers: JSON
  SkippedUsers: JSON
  FailedUsers: JSON
  CompletionMessage: String
}

type AwsCognitoidentityserviceproviderS4NumberAttributeConstraints {
  MinValue: String
  MaxValue: String
}

input AwsCognitoidentityserviceproviderS4NumberAttributeConstraintsInput {
  MinValue: String
  MaxValue: String
}

type AwsCognitoidentityserviceproviderS4r {
  PasswordPolicy: AwsCognitoidentityserviceproviderS4rPasswordPolicy
}

input AwsCognitoidentityserviceproviderS4rInput {
  PasswordPolicy: AwsCognitoidentityserviceproviderS4rPasswordPolicyInput
}

type AwsCognitoidentityserviceproviderS4rPasswordPolicy {
  MinimumLength: Int
  RequireUppercase: Boolean
  RequireLowercase: Boolean
  RequireNumbers: Boolean
  RequireSymbols: Boolean
}

input AwsCognitoidentityserviceproviderS4rPasswordPolicyInput {
  MinimumLength: Int
  RequireUppercase: Boolean
  RequireLowercase: Boolean
  RequireNumbers: Boolean
  RequireSymbols: Boolean
}

type AwsCognitoidentityserviceproviderS4StringAttributeConstraints {
  MinLength: String
  MaxLength: String
}

input AwsCognitoidentityserviceproviderS4StringAttributeConstraintsInput {
  MinLength: String
  MaxLength: String
}

type AwsCognitoidentityserviceproviderS4u {
  PreSignUp: String
  CustomMessage: String
  PostConfirmation: String
  PreAuthentication: String
  PostAuthentication: String
  DefineAuthChallenge: String
  CreateAuthChallenge: String
  VerifyAuthChallengeResponse: String
  PreTokenGeneration: String
}

input AwsCognitoidentityserviceproviderS4uInput {
  PreSignUp: String
  CustomMessage: String
  PostConfirmation: String
  PreAuthentication: String
  PostAuthentication: String
  DefineAuthChallenge: String
  CreateAuthChallenge: String
  VerifyAuthChallengeResponse: String
  PreTokenGeneration: String
}

type AwsCognitoidentityserviceproviderS54 {
  SmsMessage: String
  EmailMessage: String
  EmailSubject: String
  EmailMessageByLink: String
  EmailSubjectByLink: String
  DefaultEmailOption: String
}

input AwsCognitoidentityserviceproviderS54Input {
  SmsMessage: String
  EmailMessage: String
  EmailSubject: String
  EmailMessageByLink: String
  EmailSubjectByLink: String
  DefaultEmailOption: String
}

type AwsCognitoidentityserviceproviderS59 {
  ChallengeRequiredOnNewDevice: Boolean
  DeviceOnlyRememberedOnUserPrompt: Boolean
}

input AwsCognitoidentityserviceproviderS59Input {
  ChallengeRequiredOnNewDevice: Boolean
  DeviceOnlyRememberedOnUserPrompt: Boolean
}

type AwsCognitoidentityserviceproviderS5a {
  SourceArn: String
  ReplyToEmailAddress: String
}

input AwsCognitoidentityserviceproviderS5aInput {
  SourceArn: String
  ReplyToEmailAddress: String
}

type AwsCognitoidentityserviceproviderS5c {
  SnsCallerArn: String!
  ExternalId: String
}

input AwsCognitoidentityserviceproviderS5cInput {
  SnsCallerArn: String!
  ExternalId: String
}

type AwsCognitoidentityserviceproviderS5e {
  AllowAdminCreateUserOnly: Boolean
  UnusedAccountValidityDays: Int
  InviteMessageTemplate: AwsCognitoidentityserviceproviderS5eInviteMessageTemplate
}

input AwsCognitoidentityserviceproviderS5eInput {
  AllowAdminCreateUserOnly: Boolean
  UnusedAccountValidityDays: Int
  InviteMessageTemplate: AwsCognitoidentityserviceproviderS5eInviteMessageTemplateInput
}

type AwsCognitoidentityserviceproviderS5eInviteMessageTemplate {
  SMSMessage: String
  EmailMessage: String
  EmailSubject: String
}

input AwsCognitoidentityserviceproviderS5eInviteMessageTemplateInput {
  SMSMessage: String
  EmailMessage: String
  EmailSubject: String
}

type AwsCognitoidentityserviceproviderS5i {
  AdvancedSecurityMode: String!
}

input AwsCognitoidentityserviceproviderS5iInput {
  AdvancedSecurityMode: String!
}

type AwsCognitoidentityserviceproviderS5l {
  Id: String
  Name: String
  Policies: AwsCognitoidentityserviceproviderS4r
  LambdaConfig: AwsCognitoidentityserviceproviderS4u
  Status: String
  LastModifiedDate: Date
  CreationDate: Date
  SchemaAttributes: [AwsCognitoidentityserviceproviderS4]
  AutoVerifiedAttributes: [String]
  AliasAttributes: [String]
  UsernameAttributes: [String]
  SmsVerificationMessage: String
  EmailVerificationMessage: String
  EmailVerificationSubject: String
  VerificationMessageTemplate: AwsCognitoidentityserviceproviderS54
  SmsAuthenticationMessage: String
  MfaConfiguration: String
  DeviceConfiguration: AwsCognitoidentityserviceproviderS59
  EstimatedNumberOfUsers: Int
  EmailConfiguration: AwsCognitoidentityserviceproviderS5a
  SmsConfiguration: AwsCognitoidentityserviceproviderS5c
  UserPoolTags: JSON
  SmsConfigurationFailure: String
  EmailConfigurationFailure: String
  AdminCreateUserConfig: AwsCognitoidentityserviceproviderS5e
  UserPoolAddOns: AwsCognitoidentityserviceproviderS5i
}

type AwsCognitoidentityserviceproviderS63 {
  ApplicationId: String!
  RoleArn: String!
  ExternalId: String!
  UserDataShared: Boolean
}

input AwsCognitoidentityserviceproviderS63Input {
  ApplicationId: String!
  RoleArn: String!
  ExternalId: String!
  UserDataShared: Boolean
}

type AwsCognitoidentityserviceproviderS66 {
  UserPoolId: String
  ClientName: String
  ClientId: String
  ClientSecret: String
  LastModifiedDate: Date
  CreationDate: Date
  RefreshTokenValidity: Int
  ReadAttributes: [String]
  WriteAttributes: [String]
  ExplicitAuthFlows: [String]
  SupportedIdentityProviders: [String]
  CallbackURLs: [String]
  LogoutURLs: [String]
  DefaultRedirectURI: String
  AllowedOAuthFlows: [String]
  AllowedOAuthScopes: [String]
  AllowedOAuthFlowsUserPoolClient: Boolean
  AnalyticsConfiguration: AwsCognitoidentityserviceproviderS63
}

type AwsCognitoidentityserviceproviderS6r {
  UserPoolId: String
  ClientId: String
  CompromisedCredentialsRiskConfiguration: AwsCognitoidentityserviceproviderS6s
  AccountTakeoverRiskConfiguration: AwsCognitoidentityserviceproviderS6x
  RiskExceptionConfiguration: AwsCognitoidentityserviceproviderS76
  LastModifiedDate: Date
}

type AwsCognitoidentityserviceproviderS6s {
  EventFilter: [String]
  Actions: AwsCognitoidentityserviceproviderS6sActions!
}

type AwsCognitoidentityserviceproviderS6sActions {
  EventAction: String!
}

input AwsCognitoidentityserviceproviderS6sActionsInput {
  EventAction: String!
}

input AwsCognitoidentityserviceproviderS6sInput {
  EventFilter: [String]
  Actions: AwsCognitoidentityserviceproviderS6sActionsInput!
}

type AwsCognitoidentityserviceproviderS6x {
  NotifyConfiguration: AwsCognitoidentityserviceproviderS6xNotifyConfiguration
  Actions: AwsCognitoidentityserviceproviderS6xActions!
}

type AwsCognitoidentityserviceproviderS6xActions {
  LowAction: AwsCognitoidentityserviceproviderS73
  MediumAction: AwsCognitoidentityserviceproviderS73
  HighAction: AwsCognitoidentityserviceproviderS73
}

input AwsCognitoidentityserviceproviderS6xActionsInput {
  LowAction: AwsCognitoidentityserviceproviderS73Input
  MediumAction: AwsCognitoidentityserviceproviderS73Input
  HighAction: AwsCognitoidentityserviceproviderS73Input
}

input AwsCognitoidentityserviceproviderS6xInput {
  NotifyConfiguration: AwsCognitoidentityserviceproviderS6xNotifyConfigurationInput
  Actions: AwsCognitoidentityserviceproviderS6xActionsInput!
}

type AwsCognitoidentityserviceproviderS6xNotifyConfiguration {
  From: String
  ReplyTo: String
  SourceArn: String!
  BlockEmail: AwsCognitoidentityserviceproviderS6z
  NoActionEmail: AwsCognitoidentityserviceproviderS6z
  MfaEmail: AwsCognitoidentityserviceproviderS6z
}

input AwsCognitoidentityserviceproviderS6xNotifyConfigurationInput {
  From: String
  ReplyTo: String
  SourceArn: String!
  BlockEmail: AwsCognitoidentityserviceproviderS6zInput
  NoActionEmail: AwsCognitoidentityserviceproviderS6zInput
  MfaEmail: AwsCognitoidentityserviceproviderS6zInput
}

type AwsCognitoidentityserviceproviderS6z {
  Subject: String!
  HtmlBody: String
  TextBody: String
}

input AwsCognitoidentityserviceproviderS6zInput {
  Subject: String!
  HtmlBody: String
  TextBody: String
}

type AwsCognitoidentityserviceproviderS73 {
  Notify: Boolean!
  EventAction: String!
}

input AwsCognitoidentityserviceproviderS73Input {
  Notify: Boolean!
  EventAction: String!
}

type AwsCognitoidentityserviceproviderS76 {
  BlockedIPRangeList: [String]
  SkippedIPRangeList: [String]
}

input AwsCognitoidentityserviceproviderS76Input {
  BlockedIPRangeList: [String]
  SkippedIPRangeList: [String]
}

type AwsCognitoidentityserviceproviderS7p {
  Destination: String
  DeliveryMedium: String
  AttributeName: String
}

type AwsCognitoidentityserviceproviderS81 {
  UserPoolId: String
  ClientId: String
  ImageUrl: String
  CSS: String
  CSSVersion: String
  LastModifiedDate: Date
  CreationDate: Date
}

type AwsCognitoidentityserviceproviderS8b {
  SmsAuthenticationMessage: String
  SmsConfiguration: AwsCognitoidentityserviceproviderS5c
}

input AwsCognitoidentityserviceproviderS8bInput {
  SmsAuthenticationMessage: String
  SmsConfiguration: AwsCognitoidentityserviceproviderS5cInput
}

type AwsCognitoidentityserviceproviderS8c {
  Enabled: Boolean
}

input AwsCognitoidentityserviceproviderS8cInput {
  Enabled: Boolean
}

input AwsCognitoidentityserviceproviderSetRiskConfigurationInput {
  UserPoolId: String!
  ClientId: String
  CompromisedCredentialsRiskConfiguration: AwsCognitoidentityserviceproviderS6sInput
  AccountTakeoverRiskConfiguration: AwsCognitoidentityserviceproviderS6xInput
  RiskExceptionConfiguration: AwsCognitoidentityserviceproviderS76Input
}

type AwsCognitoidentityserviceproviderSetRiskConfigurationOutput {
  RiskConfiguration: AwsCognitoidentityserviceproviderS6r!
}

input AwsCognitoidentityserviceproviderSetUICustomizationInput {
  UserPoolId: String!
  ClientId: String
  CSS: String
  ImageFile: JSON
}

type AwsCognitoidentityserviceproviderSetUICustomizationOutput {
  UICustomization: AwsCognitoidentityserviceproviderS81!
}

input AwsCognitoidentityserviceproviderSetUserMFAPreferenceInput {
  SMSMfaSettings: AwsCognitoidentityserviceproviderS30Input
  SoftwareTokenMfaSettings: AwsCognitoidentityserviceproviderS31Input
  AccessToken: String!
}

input AwsCognitoidentityserviceproviderSetUserPoolMfaConfigInput {
  UserPoolId: String!
  SmsMfaConfiguration: AwsCognitoidentityserviceproviderS8bInput
  SoftwareTokenMfaConfiguration: AwsCognitoidentityserviceproviderS8cInput
  MfaConfiguration: String
}

type AwsCognitoidentityserviceproviderSetUserPoolMfaConfigOutput {
  SmsMfaConfiguration: AwsCognitoidentityserviceproviderS8b
  SoftwareTokenMfaConfiguration: AwsCognitoidentityserviceproviderS8c
  MfaConfiguration: String
}

input AwsCognitoidentityserviceproviderSetUserSettingsInput {
  AccessToken: String!
  MFAOptions: [AwsCognitoidentityserviceproviderSvInput]!
}

type AwsCognitoidentityserviceproviderSi {
  Name: String!
  Value: String
}

input AwsCognitoidentityserviceproviderSignUpInput {
  ClientId: String!
  SecretHash: String
  Username: String!
  Password: String!
  UserAttributes: [AwsCognitoidentityserviceproviderSiInput]
  ValidationData: [AwsCognitoidentityserviceproviderSiInput]
  AnalyticsMetadata: AwsCognitoidentityserviceproviderS1mInput
  UserContextData: AwsCognitoidentityserviceproviderS3rInput
}

type AwsCognitoidentityserviceproviderSignUpOutput {
  UserConfirmed: Boolean!
  CodeDeliveryDetails: AwsCognitoidentityserviceproviderS7p
  UserSub: String!
}

input AwsCognitoidentityserviceproviderSiInput {
  Name: String!
  Value: String
}

type AwsCognitoidentityserviceproviderSs {
  Username: String
  Attributes: [AwsCognitoidentityserviceproviderSi]
  UserCreateDate: Date
  UserLastModifiedDate: Date
  Enabled: Boolean
  UserStatus: String
  MFAOptions: [AwsCognitoidentityserviceproviderSv]
}

input AwsCognitoidentityserviceproviderStartUserImportJobInput {
  UserPoolId: String!
  JobId: String!
}

type AwsCognitoidentityserviceproviderStartUserImportJobOutput {
  UserImportJob: AwsCognitoidentityserviceproviderS4j
}

input AwsCognitoidentityserviceproviderStopUserImportJobInput {
  UserPoolId: String!
  JobId: String!
}

type AwsCognitoidentityserviceproviderStopUserImportJobOutput {
  UserImportJob: AwsCognitoidentityserviceproviderS4j
}

type AwsCognitoidentityserviceproviderSv {
  DeliveryMedium: String
  AttributeName: String
}

input AwsCognitoidentityserviceproviderSvInput {
  DeliveryMedium: String
  AttributeName: String
}

input AwsCognitoidentityserviceproviderUpdateAuthEventFeedbackInput {
  UserPoolId: String!
  Username: String!
  EventId: String!
  FeedbackToken: String!
  FeedbackValue: String!
}

input AwsCognitoidentityserviceproviderUpdateDeviceStatusInput {
  AccessToken: String!
  DeviceKey: String!
  DeviceRememberedStatus: String
}

input AwsCognitoidentityserviceproviderUpdateGroupInput {
  GroupName: String!
  UserPoolId: String!
  Description: String
  RoleArn: String
  Precedence: Int
}

type AwsCognitoidentityserviceproviderUpdateGroupOutput {
  Group: AwsCognitoidentityserviceproviderS29
}

input AwsCognitoidentityserviceproviderUpdateIdentityProviderInput {
  UserPoolId: String!
  ProviderName: String!
  ProviderDetails: JSON
  AttributeMapping: JSON
  IdpIdentifiers: [String]
}

type AwsCognitoidentityserviceproviderUpdateIdentityProviderOutput {
  IdentityProvider: AwsCognitoidentityserviceproviderS46!
}

input AwsCognitoidentityserviceproviderUpdateResourceServerInput {
  UserPoolId: String!
  Identifier: String!
  Name: String!
  Scopes: [AwsCognitoidentityserviceproviderS4aInput]
}

type AwsCognitoidentityserviceproviderUpdateResourceServerOutput {
  ResourceServer: AwsCognitoidentityserviceproviderS4f!
}

input AwsCognitoidentityserviceproviderUpdateUserAttributesInput {
  UserAttributes: [AwsCognitoidentityserviceproviderSiInput]!
  AccessToken: String!
}

type AwsCognitoidentityserviceproviderUpdateUserAttributesOutput {
  CodeDeliveryDetailsList: [AwsCognitoidentityserviceproviderS7p]
}

input AwsCognitoidentityserviceproviderUpdateUserPoolClientInput {
  UserPoolId: String!
  ClientId: String!
  ClientName: String
  RefreshTokenValidity: Int
  ReadAttributes: [String]
  WriteAttributes: [String]
  ExplicitAuthFlows: [String]
  SupportedIdentityProviders: [String]
  CallbackURLs: [String]
  LogoutURLs: [String]
  DefaultRedirectURI: String
  AllowedOAuthFlows: [String]
  AllowedOAuthScopes: [String]
  AllowedOAuthFlowsUserPoolClient: Boolean
  AnalyticsConfiguration: AwsCognitoidentityserviceproviderS63Input
}

type AwsCognitoidentityserviceproviderUpdateUserPoolClientOutput {
  UserPoolClient: AwsCognitoidentityserviceproviderS66
}

input AwsCognitoidentityserviceproviderUpdateUserPoolInput {
  UserPoolId: String!
  Policies: AwsCognitoidentityserviceproviderS4rInput
  LambdaConfig: AwsCognitoidentityserviceproviderS4uInput
  AutoVerifiedAttributes: [String]
  SmsVerificationMessage: String
  EmailVerificationMessage: String
  EmailVerificationSubject: String
  VerificationMessageTemplate: AwsCognitoidentityserviceproviderS54Input
  SmsAuthenticationMessage: String
  MfaConfiguration: String
  DeviceConfiguration: AwsCognitoidentityserviceproviderS59Input
  EmailConfiguration: AwsCognitoidentityserviceproviderS5aInput
  SmsConfiguration: AwsCognitoidentityserviceproviderS5cInput
  UserPoolTags: JSON
  AdminCreateUserConfig: AwsCognitoidentityserviceproviderS5eInput
  UserPoolAddOns: AwsCognitoidentityserviceproviderS5iInput
}

input AwsCognitoidentityserviceproviderVerifySoftwareTokenInput {
  AccessToken: String
  Session: String
  UserCode: String!
  FriendlyDeviceName: String
}

type AwsCognitoidentityserviceproviderVerifySoftwareTokenOutput {
  Status: String
  Session: String
}

input AwsCognitoidentityserviceproviderVerifyUserAttributeInput {
  AccessToken: String!
  AttributeName: String!
  Code: String!
}

input AwsCognitoidentitySetIdentityPoolRolesInput {
  IdentityPoolId: String!
  Roles: JSON!
  RoleMappings: JSON
}

type AwsCognitoidentitySr {
  IdentityId: String
  Logins: [String]
  CreationDate: Date
  LastModifiedDate: Date
}

input AwsCognitoidentityUnlinkDeveloperIdentityInput {
  IdentityId: String!
  IdentityPoolId: String!
  DeveloperProviderName: String!
  DeveloperUserIdentifier: String!
}

input AwsCognitoidentityUnlinkIdentityInput {
  IdentityId: String!
  Logins: JSON!
  LoginsToRemove: [String]!
}

# Amazon Cognito Sync (2014-06-30)
type AwsCognitosync {
  # cognitosync.BulkPublish
  BulkPublish(input: AwsCognitosyncBulkPublishInput!): AwsCognitosyncBulkPublishOutput

  # cognitosync.DeleteDataset
  DeleteDataset(input: AwsCognitosyncDeleteDatasetInput!): AwsCognitosyncDeleteDatasetOutput

  # cognitosync.DescribeDataset
  DescribeDataset(input: AwsCognitosyncDescribeDatasetInput!): AwsCognitosyncDescribeDatasetOutput

  # cognitosync.DescribeIdentityPoolUsage
  DescribeIdentityPoolUsage(input: AwsCognitosyncDescribeIdentityPoolUsageInput!): AwsCognitosyncDescribeIdentityPoolUsageOutput

  # cognitosync.DescribeIdentityUsage
  DescribeIdentityUsage(input: AwsCognitosyncDescribeIdentityUsageInput!): AwsCognitosyncDescribeIdentityUsageOutput

  # cognitosync.GetBulkPublishDetails
  GetBulkPublishDetails(input: AwsCognitosyncGetBulkPublishDetailsInput!): AwsCognitosyncGetBulkPublishDetailsOutput

  # cognitosync.GetCognitoEvents
  GetCognitoEvents(input: AwsCognitosyncGetCognitoEventsInput!): AwsCognitosyncGetCognitoEventsOutput

  # cognitosync.GetIdentityPoolConfiguration
  GetIdentityPoolConfiguration(input: AwsCognitosyncGetIdentityPoolConfigurationInput!): AwsCognitosyncGetIdentityPoolConfigurationOutput

  # cognitosync.ListDatasets
  ListDatasets(input: AwsCognitosyncListDatasetsInput!): AwsCognitosyncListDatasetsOutput

  # cognitosync.ListIdentityPoolUsage
  ListIdentityPoolUsage(input: AwsCognitosyncListIdentityPoolUsageInput): AwsCognitosyncListIdentityPoolUsageOutput

  # cognitosync.ListRecords
  ListRecords(input: AwsCognitosyncListRecordsInput!): AwsCognitosyncListRecordsOutput

  # cognitosync.RegisterDevice
  RegisterDevice(input: AwsCognitosyncRegisterDeviceInput!): AwsCognitosyncRegisterDeviceOutput

  # cognitosync.SetCognitoEvents
  SetCognitoEvents(input: AwsCognitosyncSetCognitoEventsInput!): JSON

  # cognitosync.SetIdentityPoolConfiguration
  SetIdentityPoolConfiguration(input: AwsCognitosyncSetIdentityPoolConfigurationInput!): AwsCognitosyncSetIdentityPoolConfigurationOutput

  # cognitosync.SubscribeToDataset
  SubscribeToDataset(input: AwsCognitosyncSubscribeToDatasetInput!): JSON

  # cognitosync.UnsubscribeFromDataset
  UnsubscribeFromDataset(input: AwsCognitosyncUnsubscribeFromDatasetInput!): JSON

  # cognitosync.UpdateRecords
  UpdateRecords(input: AwsCognitosyncUpdateRecordsInput!): AwsCognitosyncUpdateRecordsOutput
}

input AwsCognitosyncBulkPublishInput {
  IdentityPoolId: String!
}

type AwsCognitosyncBulkPublishOutput {
  IdentityPoolId: String
}

input AwsCognitosyncDeleteDatasetInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
}

type AwsCognitosyncDeleteDatasetOutput {
  Dataset: AwsCognitosyncS8
}

input AwsCognitosyncDescribeDatasetInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
}

type AwsCognitosyncDescribeDatasetOutput {
  Dataset: AwsCognitosyncS8
}

input AwsCognitosyncDescribeIdentityPoolUsageInput {
  IdentityPoolId: String!
}

type AwsCognitosyncDescribeIdentityPoolUsageOutput {
  IdentityPoolUsage: AwsCognitosyncSg
}

input AwsCognitosyncDescribeIdentityUsageInput {
  IdentityPoolId: String!
  IdentityId: String!
}

type AwsCognitosyncDescribeIdentityUsageOutput {
  IdentityUsage: AwsCognitosyncDescribeIdentityUsageOutputIdentityUsage
}

type AwsCognitosyncDescribeIdentityUsageOutputIdentityUsage {
  IdentityId: String
  IdentityPoolId: String
  LastModifiedDate: Date
  DatasetCount: Int
  DataStorage: JSON
}

input AwsCognitosyncGetBulkPublishDetailsInput {
  IdentityPoolId: String!
}

type AwsCognitosyncGetBulkPublishDetailsOutput {
  IdentityPoolId: String
  BulkPublishStartTime: Date
  BulkPublishCompleteTime: Date
  BulkPublishStatus: String
  FailureMessage: String
}

input AwsCognitosyncGetCognitoEventsInput {
  IdentityPoolId: String!
}

type AwsCognitosyncGetCognitoEventsOutput {
  Events: JSON
}

input AwsCognitosyncGetIdentityPoolConfigurationInput {
  IdentityPoolId: String!
}

type AwsCognitosyncGetIdentityPoolConfigurationOutput {
  IdentityPoolId: String
  PushSync: AwsCognitosyncSv
  CognitoStreams: AwsCognitosyncSz
}

input AwsCognitosyncListDatasetsInput {
  IdentityPoolId: String!
  IdentityId: String!
  NextToken: String
  MaxResults: Int
}

type AwsCognitosyncListDatasetsOutput {
  Datasets: [AwsCognitosyncS8]
  Count: Int
  NextToken: String
}

input AwsCognitosyncListIdentityPoolUsageInput {
  NextToken: String
  MaxResults: Int
}

type AwsCognitosyncListIdentityPoolUsageOutput {
  IdentityPoolUsages: [AwsCognitosyncSg]
  MaxResults: Int
  Count: Int
  NextToken: String
}

input AwsCognitosyncListRecordsInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
  LastSyncCount: JSON
  NextToken: String
  MaxResults: Int
  SyncSessionToken: String
}

type AwsCognitosyncListRecordsOutput {
  Records: [AwsCognitosyncS1c]
  NextToken: String
  Count: Int
  DatasetSyncCount: JSON
  LastModifiedBy: String
  MergedDatasetNames: [String]
  DatasetExists: Boolean
  DatasetDeletedAfterRequestedSyncCount: Boolean
  SyncSessionToken: String
}

input AwsCognitosyncRegisterDeviceInput {
  IdentityPoolId: String!
  IdentityId: String!
  Platform: String!
  Token: String!
}

type AwsCognitosyncRegisterDeviceOutput {
  DeviceId: String
}

type AwsCognitosyncS1c {
  Key: String
  Value: String
  SyncCount: JSON
  LastModifiedDate: Date
  LastModifiedBy: String
  DeviceLastModifiedDate: Date
}

type AwsCognitosyncS8 {
  IdentityId: String
  DatasetName: String
  CreationDate: Date
  LastModifiedDate: Date
  LastModifiedBy: String
  DataStorage: JSON
  NumRecords: JSON
}

input AwsCognitosyncSetCognitoEventsInput {
  IdentityPoolId: String!
  Events: JSON!
}

input AwsCognitosyncSetIdentityPoolConfigurationInput {
  IdentityPoolId: String!
  PushSync: AwsCognitosyncSvInput
  CognitoStreams: AwsCognitosyncSzInput
}

type AwsCognitosyncSetIdentityPoolConfigurationOutput {
  IdentityPoolId: String
  PushSync: AwsCognitosyncSv
  CognitoStreams: AwsCognitosyncSz
}

type AwsCognitosyncSg {
  IdentityPoolId: String
  SyncSessionsCount: JSON
  DataStorage: JSON
  LastModifiedDate: Date
}

input AwsCognitosyncSubscribeToDatasetInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
  DeviceId: String!
}

type AwsCognitosyncSv {
  ApplicationArns: [String]
  RoleArn: String
}

input AwsCognitosyncSvInput {
  ApplicationArns: [String]
  RoleArn: String
}

type AwsCognitosyncSz {
  StreamName: String
  RoleArn: String
  StreamingStatus: String
}

input AwsCognitosyncSzInput {
  StreamName: String
  RoleArn: String
  StreamingStatus: String
}

input AwsCognitosyncUnsubscribeFromDatasetInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
  DeviceId: String!
}

input AwsCognitosyncUpdateRecordsInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
  DeviceId: String
  RecordPatches: [AwsCognitosyncUpdateRecordsRecordPatchesInput]
  SyncSessionToken: String!
  ClientContext: String
}

type AwsCognitosyncUpdateRecordsOutput {
  Records: [AwsCognitosyncS1c]
}

input AwsCognitosyncUpdateRecordsRecordPatchesInput {
  Op: String!
  Key: String!
  Value: String
  SyncCount: JSON!
  DeviceLastModifiedDate: Date
}

# Amazon Comprehend (2017-11-27)
type AwsComprehend {
  # comprehend.BatchDetectDominantLanguage
  BatchDetectDominantLanguage(input: AwsComprehendBatchDetectDominantLanguageInput!): AwsComprehendBatchDetectDominantLanguageOutput

  # comprehend.BatchDetectEntities
  BatchDetectEntities(input: AwsComprehendBatchDetectEntitiesInput!): AwsComprehendBatchDetectEntitiesOutput

  # comprehend.BatchDetectKeyPhrases
  BatchDetectKeyPhrases(input: AwsComprehendBatchDetectKeyPhrasesInput!): AwsComprehendBatchDetectKeyPhrasesOutput

  # comprehend.BatchDetectSentiment
  BatchDetectSentiment(input: AwsComprehendBatchDetectSentimentInput!): AwsComprehendBatchDetectSentimentOutput

  # comprehend.DescribeTopicsDetectionJob
  DescribeTopicsDetectionJob(input: AwsComprehendDescribeTopicsDetectionJobInput!): AwsComprehendDescribeTopicsDetectionJobOutput

  # comprehend.DetectDominantLanguage
  DetectDominantLanguage(input: AwsComprehendDetectDominantLanguageInput!): AwsComprehendDetectDominantLanguageOutput

  # comprehend.DetectEntities
  DetectEntities(input: AwsComprehendDetectEntitiesInput!): AwsComprehendDetectEntitiesOutput

  # comprehend.DetectKeyPhrases
  DetectKeyPhrases(input: AwsComprehendDetectKeyPhrasesInput!): AwsComprehendDetectKeyPhrasesOutput

  # comprehend.DetectSentiment
  DetectSentiment(input: AwsComprehendDetectSentimentInput!): AwsComprehendDetectSentimentOutput

  # comprehend.ListTopicsDetectionJobs
  ListTopicsDetectionJobs(input: AwsComprehendListTopicsDetectionJobsInput): AwsComprehendListTopicsDetectionJobsOutput

  # comprehend.StartTopicsDetectionJob
  StartTopicsDetectionJob(input: AwsComprehendStartTopicsDetectionJobInput!): AwsComprehendStartTopicsDetectionJobOutput
}

input AwsComprehendBatchDetectDominantLanguageInput {
  TextList: [String]!
}

type AwsComprehendBatchDetectDominantLanguageOutput {
  ResultList: [AwsComprehendBatchDetectDominantLanguageOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectDominantLanguageOutputResultList {
  Index: Int
  Languages: [AwsComprehendS8]
}

input AwsComprehendBatchDetectEntitiesInput {
  TextList: [String]!
  LanguageCode: String!
}

type AwsComprehendBatchDetectEntitiesOutput {
  ResultList: [AwsComprehendBatchDetectEntitiesOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectEntitiesOutputResultList {
  Index: Int
  Entities: [AwsComprehendSh]
}

input AwsComprehendBatchDetectKeyPhrasesInput {
  TextList: [String]!
  LanguageCode: String!
}

type AwsComprehendBatchDetectKeyPhrasesOutput {
  ResultList: [AwsComprehendBatchDetectKeyPhrasesOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectKeyPhrasesOutputResultList {
  Index: Int
  KeyPhrases: [AwsComprehendSo]
}

input AwsComprehendBatchDetectSentimentInput {
  TextList: [String]!
  LanguageCode: String!
}

type AwsComprehendBatchDetectSentimentOutput {
  ResultList: [AwsComprehendBatchDetectSentimentOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectSentimentOutputResultList {
  Index: Int
  Sentiment: String
  SentimentScore: AwsComprehendSv
}

input AwsComprehendDescribeTopicsDetectionJobInput {
  JobId: String!
}

type AwsComprehendDescribeTopicsDetectionJobOutput {
  TopicsDetectionJobProperties: AwsComprehendSz
}

input AwsComprehendDetectDominantLanguageInput {
  Text: String!
}

type AwsComprehendDetectDominantLanguageOutput {
  Languages: [AwsComprehendS8]
}

input AwsComprehendDetectEntitiesInput {
  Text: String!
  LanguageCode: String!
}

type AwsComprehendDetectEntitiesOutput {
  Entities: [AwsComprehendSh]
}

input AwsComprehendDetectKeyPhrasesInput {
  Text: String!
  LanguageCode: String!
}

type AwsComprehendDetectKeyPhrasesOutput {
  KeyPhrases: [AwsComprehendSo]
}

input AwsComprehendDetectSentimentInput {
  Text: String!
  LanguageCode: String!
}

type AwsComprehendDetectSentimentOutput {
  Sentiment: String
  SentimentScore: AwsComprehendSv
}

input AwsComprehendListTopicsDetectionJobsFilterInput {
  JobName: String
  JobStatus: String
  SubmitTimeBefore: Date
  SubmitTimeAfter: Date
}

input AwsComprehendListTopicsDetectionJobsInput {
  Filter: AwsComprehendListTopicsDetectionJobsFilterInput
  NextToken: String
  MaxResults: Int
}

type AwsComprehendListTopicsDetectionJobsOutput {
  TopicsDetectionJobPropertiesList: [AwsComprehendSz]
  NextToken: String
}

type AwsComprehendS14 {
  S3Uri: String!
  InputFormat: String
}

input AwsComprehendS14Input {
  S3Uri: String!
  InputFormat: String
}

type AwsComprehendS17 {
  S3Uri: String!
}

input AwsComprehendS17Input {
  S3Uri: String!
}

type AwsComprehendS8 {
  LanguageCode: String
  Score: Float
}

type AwsComprehendSb {
  Index: Int
  ErrorCode: String
  ErrorMessage: String
}

type AwsComprehendSh {
  Score: Float
  Type: String
  Text: String
  BeginOffset: Int
  EndOffset: Int
}

type AwsComprehendSo {
  Score: Float
  Text: String
  BeginOffset: Int
  EndOffset: Int
}

input AwsComprehendStartTopicsDetectionJobInput {
  InputDataConfig: AwsComprehendS14Input!
  OutputDataConfig: AwsComprehendS17Input!
  DataAccessRoleArn: String!
  JobName: String
  NumberOfTopics: Int
  ClientRequestToken: String
}

type AwsComprehendStartTopicsDetectionJobOutput {
  JobId: String
  JobStatus: String
}

type AwsComprehendSv {
  Positive: Float
  Negative: Float
  Neutral: Float
  Mixed: Float
}

type AwsComprehendSz {
  JobId: String
  JobName: String
  JobStatus: String
  Message: String
  SubmitTime: Date
  EndTime: Date
  InputDataConfig: AwsComprehendS14
  OutputDataConfig: AwsComprehendS17
  NumberOfTopics: Int
}

# AWS Config (2014-11-12)
type AwsConfigservice {
  # configservice.DeleteConfigRule
  DeleteConfigRule(input: AwsConfigserviceDeleteConfigRuleInput!): JSON

  # configservice.DeleteConfigurationRecorder
  DeleteConfigurationRecorder(input: AwsConfigserviceDeleteConfigurationRecorderInput!): JSON

  # configservice.DeleteDeliveryChannel
  DeleteDeliveryChannel(input: AwsConfigserviceDeleteDeliveryChannelInput!): JSON

  # configservice.DeleteEvaluationResults
  DeleteEvaluationResults(input: AwsConfigserviceDeleteEvaluationResultsInput!): JSON

  # configservice.DeliverConfigSnapshot
  DeliverConfigSnapshot(input: AwsConfigserviceDeliverConfigSnapshotInput!): AwsConfigserviceDeliverConfigSnapshotOutput

  # configservice.DescribeComplianceByConfigRule
  DescribeComplianceByConfigRule(input: AwsConfigserviceDescribeComplianceByConfigRuleInput): AwsConfigserviceDescribeComplianceByConfigRuleOutput

  # configservice.DescribeComplianceByResource
  DescribeComplianceByResource(input: AwsConfigserviceDescribeComplianceByResourceInput): AwsConfigserviceDescribeComplianceByResourceOutput

  # configservice.DescribeConfigRuleEvaluationStatus
  DescribeConfigRuleEvaluationStatus(input: AwsConfigserviceDescribeConfigRuleEvaluationStatusInput): AwsConfigserviceDescribeConfigRuleEvaluationStatusOutput

  # configservice.DescribeConfigRules
  DescribeConfigRules(input: AwsConfigserviceDescribeConfigRulesInput): AwsConfigserviceDescribeConfigRulesOutput

  # configservice.DescribeConfigurationRecorderStatus
  DescribeConfigurationRecorderStatus(input: AwsConfigserviceDescribeConfigurationRecorderStatusInput): AwsConfigserviceDescribeConfigurationRecorderStatusOutput

  # configservice.DescribeConfigurationRecorders
  DescribeConfigurationRecorders(input: AwsConfigserviceDescribeConfigurationRecordersInput): AwsConfigserviceDescribeConfigurationRecordersOutput

  # configservice.DescribeDeliveryChannelStatus
  DescribeDeliveryChannelStatus(input: AwsConfigserviceDescribeDeliveryChannelStatusInput): AwsConfigserviceDescribeDeliveryChannelStatusOutput

  # configservice.DescribeDeliveryChannels
  DescribeDeliveryChannels(input: AwsConfigserviceDescribeDeliveryChannelsInput): AwsConfigserviceDescribeDeliveryChannelsOutput

  # configservice.GetComplianceDetailsByConfigRule
  GetComplianceDetailsByConfigRule(input: AwsConfigserviceGetComplianceDetailsByConfigRuleInput!): AwsConfigserviceGetComplianceDetailsByConfigRuleOutput

  # configservice.GetComplianceDetailsByResource
  GetComplianceDetailsByResource(input: AwsConfigserviceGetComplianceDetailsByResourceInput!): AwsConfigserviceGetComplianceDetailsByResourceOutput

  # configservice.GetComplianceSummaryByConfigRule
  GetComplianceSummaryByConfigRule: AwsConfigserviceGetComplianceSummaryByConfigRuleOutput

  # configservice.GetComplianceSummaryByResourceType
  GetComplianceSummaryByResourceType(input: AwsConfigserviceGetComplianceSummaryByResourceTypeInput): AwsConfigserviceGetComplianceSummaryByResourceTypeOutput

  # configservice.GetDiscoveredResourceCounts
  GetDiscoveredResourceCounts(input: AwsConfigserviceGetDiscoveredResourceCountsInput): AwsConfigserviceGetDiscoveredResourceCountsOutput

  # configservice.GetResourceConfigHistory
  GetResourceConfigHistory(input: AwsConfigserviceGetResourceConfigHistoryInput!): AwsConfigserviceGetResourceConfigHistoryOutput

  # configservice.ListDiscoveredResources
  ListDiscoveredResources(input: AwsConfigserviceListDiscoveredResourcesInput!): AwsConfigserviceListDiscoveredResourcesOutput

  # configservice.PutConfigRule
  PutConfigRule(input: AwsConfigservicePutConfigRuleInput!): JSON

  # configservice.PutConfigurationRecorder
  PutConfigurationRecorder(input: AwsConfigservicePutConfigurationRecorderInput!): JSON

  # configservice.PutDeliveryChannel
  PutDeliveryChannel(input: AwsConfigservicePutDeliveryChannelInput!): JSON

  # configservice.PutEvaluations
  PutEvaluations(input: AwsConfigservicePutEvaluationsInput!): AwsConfigservicePutEvaluationsOutput

  # configservice.StartConfigRulesEvaluation
  StartConfigRulesEvaluation(input: AwsConfigserviceStartConfigRulesEvaluationInput): JSON

  # configservice.StartConfigurationRecorder
  StartConfigurationRecorder(input: AwsConfigserviceStartConfigurationRecorderInput!): JSON

  # configservice.StopConfigurationRecorder
  StopConfigurationRecorder(input: AwsConfigserviceStopConfigurationRecorderInput!): JSON
}

input AwsConfigserviceDeleteConfigRuleInput {
  ConfigRuleName: String!
}

input AwsConfigserviceDeleteConfigurationRecorderInput {
  ConfigurationRecorderName: String!
}

input AwsConfigserviceDeleteDeliveryChannelInput {
  DeliveryChannelName: String!
}

input AwsConfigserviceDeleteEvaluationResultsInput {
  ConfigRuleName: String!
}

input AwsConfigserviceDeliverConfigSnapshotInput {
  deliveryChannelName: String!
}

type AwsConfigserviceDeliverConfigSnapshotOutput {
  configSnapshotId: String
}

input AwsConfigserviceDescribeComplianceByConfigRuleInput {
  ConfigRuleNames: [String]
  ComplianceTypes: [String]
  NextToken: String
}

type AwsConfigserviceDescribeComplianceByConfigRuleOutput {
  ComplianceByConfigRules: [AwsConfigserviceDescribeComplianceByConfigRuleOutputComplianceByConfigRules]
  NextToken: String
}

type AwsConfigserviceDescribeComplianceByConfigRuleOutputComplianceByConfigRules {
  ConfigRuleName: String
  Compliance: AwsConfigserviceSj
}

input AwsConfigserviceDescribeComplianceByResourceInput {
  ResourceType: String
  ResourceId: String
  ComplianceTypes: [String]
  Limit: Int
  NextToken: String
}

type AwsConfigserviceDescribeComplianceByResourceOutput {
  ComplianceByResources: [AwsConfigserviceDescribeComplianceByResourceOutputComplianceByResources]
  NextToken: String
}

type AwsConfigserviceDescribeComplianceByResourceOutputComplianceByResources {
  ResourceType: String
  ResourceId: String
  Compliance: AwsConfigserviceSj
}

input AwsConfigserviceDescribeConfigRuleEvaluationStatusInput {
  ConfigRuleNames: [String]
  NextToken: String
  Limit: Int
}

type AwsConfigserviceDescribeConfigRuleEvaluationStatusOutput {
  ConfigRulesEvaluationStatus: [AwsConfigserviceDescribeConfigRuleEvaluationStatusOutputConfigRulesEvaluationStatus]
  NextToken: String
}

type AwsConfigserviceDescribeConfigRuleEvaluationStatusOutputConfigRulesEvaluationStatus {
  ConfigRuleName: String
  ConfigRuleArn: String
  ConfigRuleId: String
  LastSuccessfulInvocationTime: Date
  LastFailedInvocationTime: Date
  LastSuccessfulEvaluationTime: Date
  LastFailedEvaluationTime: Date
  FirstActivatedTime: Date
  LastErrorCode: String
  LastErrorMessage: String
  FirstEvaluationStarted: Boolean
}

input AwsConfigserviceDescribeConfigRulesInput {
  ConfigRuleNames: [String]
  NextToken: String
}

type AwsConfigserviceDescribeConfigRulesOutput {
  ConfigRules: [AwsConfigserviceS14]
  NextToken: String
}

input AwsConfigserviceDescribeConfigurationRecordersInput {
  ConfigurationRecorderNames: [String]
}

type AwsConfigserviceDescribeConfigurationRecordersOutput {
  ConfigurationRecorders: [AwsConfigserviceS1r]
}

input AwsConfigserviceDescribeConfigurationRecorderStatusInput {
  ConfigurationRecorderNames: [String]
}

type AwsConfigserviceDescribeConfigurationRecorderStatusOutput {
  ConfigurationRecordersStatus: [AwsConfigserviceDescribeConfigurationRecorderStatusOutputConfigurationRecordersStatus]
}

type AwsConfigserviceDescribeConfigurationRecorderStatusOutputConfigurationRecordersStatus {
  name: String
  lastStartTime: Date
  lastStopTime: Date
  recording: Boolean
  lastStatus: String
  lastErrorCode: String
  lastErrorMessage: String
  lastStatusChangeTime: Date
}

input AwsConfigserviceDescribeDeliveryChannelsInput {
  DeliveryChannelNames: [String]
}

type AwsConfigserviceDescribeDeliveryChannelsOutput {
  DeliveryChannels: [AwsConfigserviceS28]
}

input AwsConfigserviceDescribeDeliveryChannelStatusInput {
  DeliveryChannelNames: [String]
}

type AwsConfigserviceDescribeDeliveryChannelStatusOutput {
  DeliveryChannelsStatus: [AwsConfigserviceDescribeDeliveryChannelStatusOutputDeliveryChannelsStatus]
}

type AwsConfigserviceDescribeDeliveryChannelStatusOutputDeliveryChannelsStatus {
  name: String
  configSnapshotDeliveryInfo: AwsConfigserviceS22
  configHistoryDeliveryInfo: AwsConfigserviceS22
  configStreamDeliveryInfo: AwsConfigserviceDescribeDeliveryChannelStatusOutputDeliveryChannelsStatusConfigStreamDeliveryInfo
}

type AwsConfigserviceDescribeDeliveryChannelStatusOutputDeliveryChannelsStatusConfigStreamDeliveryInfo {
  lastStatus: String
  lastErrorCode: String
  lastErrorMessage: String
  lastStatusChangeTime: Date
}

input AwsConfigserviceGetComplianceDetailsByConfigRuleInput {
  ConfigRuleName: String!
  ComplianceTypes: [String]
  Limit: Int
  NextToken: String
}

type AwsConfigserviceGetComplianceDetailsByConfigRuleOutput {
  EvaluationResults: [AwsConfigserviceS2c]
  NextToken: String
}

input AwsConfigserviceGetComplianceDetailsByResourceInput {
  ResourceType: String!
  ResourceId: String!
  ComplianceTypes: [String]
  NextToken: String
}

type AwsConfigserviceGetComplianceDetailsByResourceOutput {
  EvaluationResults: [AwsConfigserviceS2c]
  NextToken: String
}

type AwsConfigserviceGetComplianceSummaryByConfigRuleOutput {
  ComplianceSummary: AwsConfigserviceS2j
}

input AwsConfigserviceGetComplianceSummaryByResourceTypeInput {
  ResourceTypes: [String]
}

type AwsConfigserviceGetComplianceSummaryByResourceTypeOutput {
  ComplianceSummariesByResourceType: [AwsConfigserviceGetComplianceSummaryByResourceTypeOutputComplianceSummariesByResourceType]
}

type AwsConfigserviceGetComplianceSummaryByResourceTypeOutputComplianceSummariesByResourceType {
  ResourceType: String
  ComplianceSummary: AwsConfigserviceS2j
}

input AwsConfigserviceGetDiscoveredResourceCountsInput {
  resourceTypes: [String]
  limit: Int
  nextToken: String
}

type AwsConfigserviceGetDiscoveredResourceCountsOutput {
  totalDiscoveredResources: JSON
  resourceCounts: [AwsConfigserviceGetDiscoveredResourceCountsOutputResourceCounts]
  nextToken: String
}

type AwsConfigserviceGetDiscoveredResourceCountsOutputResourceCounts {
  resourceType: String
  count: JSON
}

input AwsConfigserviceGetResourceConfigHistoryInput {
  resourceType: String!
  resourceId: String!
  laterTime: Date
  earlierTime: Date
  chronologicalOrder: String
  limit: Int
  nextToken: String
}

type AwsConfigserviceGetResourceConfigHistoryOutput {
  configurationItems: [AwsConfigserviceGetResourceConfigHistoryOutputConfigurationItems]
  nextToken: String
}

type AwsConfigserviceGetResourceConfigHistoryOutputConfigurationItems {
  version: String
  accountId: String
  configurationItemCaptureTime: Date
  configurationItemStatus: String
  configurationStateId: String
  configurationItemMD5Hash: String
  arn: String
  resourceType: String
  resourceId: String
  resourceName: String
  awsRegion: String
  availabilityZone: String
  resourceCreationTime: Date
  tags: JSON
  relatedEvents: [String]
  relationships: [AwsConfigserviceGetResourceConfigHistoryOutputConfigurationItemsRelationships]
  configuration: String
  supplementaryConfiguration: JSON
}

type AwsConfigserviceGetResourceConfigHistoryOutputConfigurationItemsRelationships {
  resourceType: String
  resourceId: String
  resourceName: String
  relationshipName: String
}

input AwsConfigserviceListDiscoveredResourcesInput {
  resourceType: String!
  resourceIds: [String]
  resourceName: String
  limit: Int
  includeDeletedResources: Boolean
  nextToken: String
}

type AwsConfigserviceListDiscoveredResourcesOutput {
  resourceIdentifiers: [AwsConfigserviceListDiscoveredResourcesOutputResourceIdentifiers]
  nextToken: String
}

type AwsConfigserviceListDiscoveredResourcesOutputResourceIdentifiers {
  resourceType: String
  resourceId: String
  resourceName: String
  resourceDeletionTime: Date
}

input AwsConfigservicePutConfigRuleInput {
  ConfigRule: AwsConfigserviceS14Input!
}

input AwsConfigservicePutConfigurationRecorderInput {
  ConfigurationRecorder: AwsConfigserviceS1rInput!
}

input AwsConfigservicePutDeliveryChannelInput {
  DeliveryChannel: AwsConfigserviceS28Input!
}

input AwsConfigservicePutEvaluationsInput {
  Evaluations: [AwsConfigserviceS3zInput]
  ResultToken: String!
  TestMode: Boolean
}

type AwsConfigservicePutEvaluationsOutput {
  FailedEvaluations: [AwsConfigserviceS3z]
}

type AwsConfigserviceS14 {
  ConfigRuleName: String
  ConfigRuleArn: String
  ConfigRuleId: String
  Description: String
  Scope: AwsConfigserviceS14Scope
  Source: AwsConfigserviceS14Source!
  InputParameters: String
  MaximumExecutionFrequency: String
  ConfigRuleState: String
}

input AwsConfigserviceS14Input {
  ConfigRuleName: String
  ConfigRuleArn: String
  ConfigRuleId: String
  Description: String
  Scope: AwsConfigserviceS14ScopeInput
  Source: AwsConfigserviceS14SourceInput!
  InputParameters: String
  MaximumExecutionFrequency: String
  ConfigRuleState: String
}

type AwsConfigserviceS14Scope {
  ComplianceResourceTypes: [String]
  TagKey: String
  TagValue: String
  ComplianceResourceId: String
}

input AwsConfigserviceS14ScopeInput {
  ComplianceResourceTypes: [String]
  TagKey: String
  TagValue: String
  ComplianceResourceId: String
}

type AwsConfigserviceS14Source {
  Owner: String!
  SourceIdentifier: String!
  SourceDetails: [AwsConfigserviceS14SourceSourceDetails]
}

input AwsConfigserviceS14SourceInput {
  Owner: String!
  SourceIdentifier: String!
  SourceDetails: [AwsConfigserviceS14SourceSourceDetailsInput]
}

type AwsConfigserviceS14SourceSourceDetails {
  EventSource: String
  MessageType: String
  MaximumExecutionFrequency: String
}

input AwsConfigserviceS14SourceSourceDetailsInput {
  EventSource: String
  MessageType: String
  MaximumExecutionFrequency: String
}

type AwsConfigserviceS1r {
  name: String
  roleARN: String
  recordingGroup: AwsConfigserviceS1rRecordingGroup
}

input AwsConfigserviceS1rInput {
  name: String
  roleARN: String
  recordingGroup: AwsConfigserviceS1rRecordingGroupInput
}

type AwsConfigserviceS1rRecordingGroup {
  allSupported: Boolean
  includeGlobalResourceTypes: Boolean
  resourceTypes: [String]
}

input AwsConfigserviceS1rRecordingGroupInput {
  allSupported: Boolean
  includeGlobalResourceTypes: Boolean
  resourceTypes: [String]
}

type AwsConfigserviceS22 {
  lastStatus: String
  lastErrorCode: String
  lastErrorMessage: String
  lastAttemptTime: Date
  lastSuccessfulTime: Date
  nextDeliveryTime: Date
}

type AwsConfigserviceS28 {
  name: String
  s3BucketName: String
  s3KeyPrefix: String
  snsTopicARN: String
  configSnapshotDeliveryProperties: AwsConfigserviceS28ConfigSnapshotDeliveryProperties
}

type AwsConfigserviceS28ConfigSnapshotDeliveryProperties {
  deliveryFrequency: String
}

input AwsConfigserviceS28ConfigSnapshotDeliveryPropertiesInput {
  deliveryFrequency: String
}

input AwsConfigserviceS28Input {
  name: String
  s3BucketName: String
  s3KeyPrefix: String
  snsTopicARN: String
  configSnapshotDeliveryProperties: AwsConfigserviceS28ConfigSnapshotDeliveryPropertiesInput
}

type AwsConfigserviceS2c {
  EvaluationResultIdentifier: AwsConfigserviceS2cEvaluationResultIdentifier
  ComplianceType: String
  ResultRecordedTime: Date
  ConfigRuleInvokedTime: Date
  Annotation: String
  ResultToken: String
}

type AwsConfigserviceS2cEvaluationResultIdentifier {
  EvaluationResultQualifier: AwsConfigserviceS2cEvaluationResultIdentifierEvaluationResultQualifier
  OrderingTimestamp: Date
}

type AwsConfigserviceS2cEvaluationResultIdentifierEvaluationResultQualifier {
  ConfigRuleName: String
  ResourceType: String
  ResourceId: String
}

type AwsConfigserviceS2j {
  CompliantResourceCount: AwsConfigserviceSk
  NonCompliantResourceCount: AwsConfigserviceSk
  ComplianceSummaryTimestamp: Date
}

type AwsConfigserviceS3z {
  ComplianceResourceType: String!
  ComplianceResourceId: String!
  ComplianceType: String!
  Annotation: String
  OrderingTimestamp: Date!
}

input AwsConfigserviceS3zInput {
  ComplianceResourceType: String!
  ComplianceResourceId: String!
  ComplianceType: String!
  Annotation: String
  OrderingTimestamp: Date!
}

type AwsConfigserviceSj {
  ComplianceType: String
  ComplianceContributorCount: AwsConfigserviceSk
}

type AwsConfigserviceSk {
  CappedCount: Int
  CapExceeded: Boolean
}

input AwsConfigserviceStartConfigRulesEvaluationInput {
  ConfigRuleNames: [String]
}

input AwsConfigserviceStartConfigurationRecorderInput {
  ConfigurationRecorderName: String!
}

input AwsConfigserviceStopConfigurationRecorderInput {
  ConfigurationRecorderName: String!
}

# AWS Cost Explorer Service (2017-10-25)
type AwsCostexplorer {
  # costexplorer.GetCostAndUsage
  GetCostAndUsage(input: AwsCostexplorerGetCostAndUsageInput): AwsCostexplorerGetCostAndUsageOutput

  # costexplorer.GetDimensionValues
  GetDimensionValues(input: AwsCostexplorerGetDimensionValuesInput!): AwsCostexplorerGetDimensionValuesOutput

  # costexplorer.GetReservationUtilization
  GetReservationUtilization(input: AwsCostexplorerGetReservationUtilizationInput!): AwsCostexplorerGetReservationUtilizationOutput

  # costexplorer.GetTags
  GetTags(input: AwsCostexplorerGetTagsInput!): AwsCostexplorerGetTagsOutput
}

input AwsCostexplorerGetCostAndUsageInput {
  TimePeriod: AwsCostexplorerS2Input
  Granularity: String
  Filter: AwsCostexplorerS5Input
  Metrics: [String]
  GroupBy: [AwsCostexplorerSfInput]
  NextPageToken: String
}

type AwsCostexplorerGetCostAndUsageOutput {
  NextPageToken: String
  GroupDefinitions: [AwsCostexplorerSf]
  ResultsByTime: [AwsCostexplorerGetCostAndUsageOutputResultsByTime]
}

type AwsCostexplorerGetCostAndUsageOutputResultsByTime {
  TimePeriod: AwsCostexplorerS2
  Total: JSON
  Groups: [AwsCostexplorerGetCostAndUsageOutputResultsByTimeGroups]
  Estimated: Boolean
}

type AwsCostexplorerGetCostAndUsageOutputResultsByTimeGroups {
  Keys: [String]
  Metrics: JSON
}

input AwsCostexplorerGetDimensionValuesInput {
  SearchString: String
  TimePeriod: AwsCostexplorerS2Input!
  Dimension: String!
  Context: String
  NextPageToken: String
}

type AwsCostexplorerGetDimensionValuesOutput {
  DimensionValues: [AwsCostexplorerGetDimensionValuesOutputDimensionValues]!
  ReturnSize: Int!
  TotalSize: Int!
  NextPageToken: String
}

type AwsCostexplorerGetDimensionValuesOutputDimensionValues {
  Value: String
  Attributes: JSON
}

input AwsCostexplorerGetReservationUtilizationInput {
  TimePeriod: AwsCostexplorerS2Input!
  GroupBy: [AwsCostexplorerSfInput]
  Granularity: String
  Filter: AwsCostexplorerS5Input
  NextPageToken: String
}

type AwsCostexplorerGetReservationUtilizationOutput {
  UtilizationsByTime: [AwsCostexplorerGetReservationUtilizationOutputUtilizationsByTime]!
  Total: AwsCostexplorerS1e
  NextPageToken: String
}

type AwsCostexplorerGetReservationUtilizationOutputUtilizationsByTime {
  TimePeriod: AwsCostexplorerS2
  Groups: [AwsCostexplorerGetReservationUtilizationOutputUtilizationsByTimeGroups]
  Total: AwsCostexplorerS1e
}

type AwsCostexplorerGetReservationUtilizationOutputUtilizationsByTimeGroups {
  Key: String
  Value: String
  Attributes: JSON
  Utilization: AwsCostexplorerS1e
}

input AwsCostexplorerGetTagsInput {
  SearchString: String
  TimePeriod: AwsCostexplorerS2Input!
  TagKey: String
  NextPageToken: String
}

type AwsCostexplorerGetTagsOutput {
  NextPageToken: String
  Tags: [String]!
  ReturnSize: Int!
  TotalSize: Int!
}

type AwsCostexplorerS1e {
  UtilizationPercentage: String
  PurchasedHours: String
  TotalActualHours: String
  UnusedHours: String
}

type AwsCostexplorerS2 {
  Start: String!
  End: String!
}

input AwsCostexplorerS2Input {
  Start: String!
  End: String!
}

input AwsCostexplorerS5DimensionsInput {
  Key: String
  Values: [String]
}

input AwsCostexplorerS5Input {
  Or: [JSON]
  And: [JSON]
  Not: JSON
  Dimensions: AwsCostexplorerS5DimensionsInput
  Tags: AwsCostexplorerS5TagsInput
}

input AwsCostexplorerS5TagsInput {
  Key: String
  Values: [String]
}

type AwsCostexplorerSf {
  Type: String
  Key: String
}

input AwsCostexplorerSfInput {
  Type: String
  Key: String
}

# AWS Cost and Usage Report Service (2017-01-06)
type AwsCur {
  # cur.DeleteReportDefinition
  DeleteReportDefinition(input: AwsCurDeleteReportDefinitionInput): AwsCurDeleteReportDefinitionOutput

  # cur.DescribeReportDefinitions
  DescribeReportDefinitions(input: AwsCurDescribeReportDefinitionsInput): AwsCurDescribeReportDefinitionsOutput

  # cur.PutReportDefinition
  PutReportDefinition(input: AwsCurPutReportDefinitionInput!): JSON
}

input AwsCurDeleteReportDefinitionInput {
  ReportName: String
}

type AwsCurDeleteReportDefinitionOutput {
  ResponseMessage: String
}

input AwsCurDescribeReportDefinitionsInput {
  MaxResults: Int
  NextToken: String
}

type AwsCurDescribeReportDefinitionsOutput {
  ReportDefinitions: [AwsCurSa]
  NextToken: String
}

input AwsCurPutReportDefinitionInput {
  ReportDefinition: AwsCurSaInput!
}

type AwsCurSa {
  ReportName: String!
  TimeUnit: String!
  Format: String!
  Compression: String!
  AdditionalSchemaElements: [String]!
  S3Bucket: String!
  S3Prefix: String!
  S3Region: String!
  AdditionalArtifacts: [String]
}

input AwsCurSaInput {
  ReportName: String!
  TimeUnit: String!
  Format: String!
  Compression: String!
  AdditionalSchemaElements: [String]!
  S3Bucket: String!
  S3Prefix: String!
  S3Region: String!
  AdditionalArtifacts: [String]
}

# AWS Data Pipeline (2012-10-29)
type AwsDatapipeline {
  # datapipeline.ActivatePipeline
  ActivatePipeline(input: AwsDatapipelineActivatePipelineInput!): JSON

  # datapipeline.AddTags
  AddTags(input: AwsDatapipelineAddTagsInput!): JSON

  # datapipeline.CreatePipeline
  CreatePipeline(input: AwsDatapipelineCreatePipelineInput!): AwsDatapipelineCreatePipelineOutput

  # datapipeline.DeactivatePipeline
  DeactivatePipeline(input: AwsDatapipelineDeactivatePipelineInput!): JSON

  # datapipeline.DeletePipeline
  DeletePipeline(input: AwsDatapipelineDeletePipelineInput!): JSON

  # datapipeline.DescribeObjects
  DescribeObjects(input: AwsDatapipelineDescribeObjectsInput!): AwsDatapipelineDescribeObjectsOutput

  # datapipeline.DescribePipelines
  DescribePipelines(input: AwsDatapipelineDescribePipelinesInput!): AwsDatapipelineDescribePipelinesOutput

  # datapipeline.EvaluateExpression
  EvaluateExpression(input: AwsDatapipelineEvaluateExpressionInput!): AwsDatapipelineEvaluateExpressionOutput

  # datapipeline.GetPipelineDefinition
  GetPipelineDefinition(input: AwsDatapipelineGetPipelineDefinitionInput!): AwsDatapipelineGetPipelineDefinitionOutput

  # datapipeline.ListPipelines
  ListPipelines(input: AwsDatapipelineListPipelinesInput): AwsDatapipelineListPipelinesOutput

  # datapipeline.PollForTask
  PollForTask(input: AwsDatapipelinePollForTaskInput!): AwsDatapipelinePollForTaskOutput

  # datapipeline.PutPipelineDefinition
  PutPipelineDefinition(input: AwsDatapipelinePutPipelineDefinitionInput!): AwsDatapipelinePutPipelineDefinitionOutput

  # datapipeline.QueryObjects
  QueryObjects(input: AwsDatapipelineQueryObjectsInput!): AwsDatapipelineQueryObjectsOutput

  # datapipeline.RemoveTags
  RemoveTags(input: AwsDatapipelineRemoveTagsInput!): JSON

  # datapipeline.ReportTaskProgress
  ReportTaskProgress(input: AwsDatapipelineReportTaskProgressInput!): AwsDatapipelineReportTaskProgressOutput

  # datapipeline.ReportTaskRunnerHeartbeat
  ReportTaskRunnerHeartbeat(input: AwsDatapipelineReportTaskRunnerHeartbeatInput!): AwsDatapipelineReportTaskRunnerHeartbeatOutput

  # datapipeline.SetStatus
  SetStatus(input: AwsDatapipelineSetStatusInput!): JSON

  # datapipeline.SetTaskStatus
  SetTaskStatus(input: AwsDatapipelineSetTaskStatusInput!): JSON

  # datapipeline.ValidatePipelineDefinition
  ValidatePipelineDefinition(input: AwsDatapipelineValidatePipelineDefinitionInput!): AwsDatapipelineValidatePipelineDefinitionOutput
}

input AwsDatapipelineActivatePipelineInput {
  pipelineId: String!
  parameterValues: [AwsDatapipelineS3Input]
  startTimestamp: Date
}

input AwsDatapipelineAddTagsInput {
  pipelineId: String!
  tags: [AwsDatapipelineSaInput]!
}

input AwsDatapipelineCreatePipelineInput {
  name: String!
  uniqueId: String!
  description: String
  tags: [AwsDatapipelineSaInput]
}

type AwsDatapipelineCreatePipelineOutput {
  pipelineId: String!
}

input AwsDatapipelineDeactivatePipelineInput {
  pipelineId: String!
  cancelActive: Boolean
}

input AwsDatapipelineDeletePipelineInput {
  pipelineId: String!
}

input AwsDatapipelineDescribeObjectsInput {
  pipelineId: String!
  objectIds: [String]!
  evaluateExpressions: Boolean
  marker: String
}

type AwsDatapipelineDescribeObjectsOutput {
  pipelineObjects: [AwsDatapipelineSr]!
  marker: String
  hasMoreResults: Boolean
}

input AwsDatapipelineDescribePipelinesInput {
  pipelineIds: [String]!
}

type AwsDatapipelineDescribePipelinesOutput {
  pipelineDescriptionList: [AwsDatapipelineDescribePipelinesOutputPipelineDescriptionList]!
}

type AwsDatapipelineDescribePipelinesOutputPipelineDescriptionList {
  pipelineId: String!
  name: String!
  fields: [AwsDatapipelineSs]!
  description: String
  tags: [AwsDatapipelineSa]
}

input AwsDatapipelineEvaluateExpressionInput {
  pipelineId: String!
  objectId: String!
  expression: String!
}

type AwsDatapipelineEvaluateExpressionOutput {
  evaluatedExpression: String!
}

input AwsDatapipelineGetPipelineDefinitionInput {
  pipelineId: String!
  version: String
}

type AwsDatapipelineGetPipelineDefinitionOutput {
  pipelineObjects: [AwsDatapipelineSr]
  parameterObjects: [AwsDatapipelineS13]
  parameterValues: [AwsDatapipelineS3]
}

input AwsDatapipelineListPipelinesInput {
  marker: String
}

type AwsDatapipelineListPipelinesOutput {
  pipelineIdList: [AwsDatapipelineListPipelinesOutputPipelineIdList]!
  marker: String
  hasMoreResults: Boolean
}

type AwsDatapipelineListPipelinesOutputPipelineIdList {
  id: String
  name: String
}

input AwsDatapipelinePollForTaskInput {
  workerGroup: String!
  hostname: String
  instanceIdentity: AwsDatapipelinePollForTaskInstanceIdentityInput
}

input AwsDatapipelinePollForTaskInstanceIdentityInput {
  document: String
  signature: String
}

type AwsDatapipelinePollForTaskOutput {
  taskObject: AwsDatapipelinePollForTaskOutputTaskObject
}

type AwsDatapipelinePollForTaskOutputTaskObject {
  taskId: String
  pipelineId: String
  attemptId: String
  objects: JSON
}

input AwsDatapipelinePutPipelineDefinitionInput {
  pipelineId: String!
  pipelineObjects: [AwsDatapipelineSrInput]!
  parameterObjects: [AwsDatapipelineS13Input]
  parameterValues: [AwsDatapipelineS3Input]
}

type AwsDatapipelinePutPipelineDefinitionOutput {
  validationErrors: [AwsDatapipelineS1l]
  validationWarnings: [AwsDatapipelineS1p]
  errored: Boolean!
}

input AwsDatapipelineQueryObjectsInput {
  pipelineId: String!
  query: AwsDatapipelineQueryObjectsQueryInput
  sphere: String!
  marker: String
  limit: Int
}

type AwsDatapipelineQueryObjectsOutput {
  ids: [String]
  marker: String
  hasMoreResults: Boolean
}

input AwsDatapipelineQueryObjectsQueryInput {
  selectors: [AwsDatapipelineQueryObjectsQuerySelectorsInput]
}

input AwsDatapipelineQueryObjectsQuerySelectorsInput {
  fieldName: String
  operator: AwsDatapipelineQueryObjectsQuerySelectorsOperatorInput
}

input AwsDatapipelineQueryObjectsQuerySelectorsOperatorInput {
  type: String
  values: [String]
}

input AwsDatapipelineRemoveTagsInput {
  pipelineId: String!
  tagKeys: [String]!
}

input AwsDatapipelineReportTaskProgressInput {
  taskId: String!
  fields: [AwsDatapipelineSsInput]
}

type AwsDatapipelineReportTaskProgressOutput {
  canceled: Boolean!
}

input AwsDatapipelineReportTaskRunnerHeartbeatInput {
  taskrunnerId: String!
  workerGroup: String
  hostname: String
}

type AwsDatapipelineReportTaskRunnerHeartbeatOutput {
  terminate: Boolean!
}

type AwsDatapipelineS13 {
  id: String!
  attributes: [AwsDatapipelineS13Attributes]!
}

type AwsDatapipelineS13Attributes {
  key: String!
  stringValue: String!
}

input AwsDatapipelineS13AttributesInput {
  key: String!
  stringValue: String!
}

input AwsDatapipelineS13Input {
  id: String!
  attributes: [AwsDatapipelineS13AttributesInput]!
}

type AwsDatapipelineS1l {
  id: String
  errors: [String]
}

type AwsDatapipelineS1p {
  id: String
  warnings: [String]
}

type AwsDatapipelineS3 {
  id: String!
  stringValue: String!
}

input AwsDatapipelineS3Input {
  id: String!
  stringValue: String!
}

type AwsDatapipelineSa {
  key: String!
  value: String!
}

input AwsDatapipelineSaInput {
  key: String!
  value: String!
}

input AwsDatapipelineSetStatusInput {
  pipelineId: String!
  objectIds: [String]!
  status: String!
}

input AwsDatapipelineSetTaskStatusInput {
  taskId: String!
  taskStatus: String!
  errorId: String
  errorMessage: String
  errorStackTrace: String
}

type AwsDatapipelineSr {
  id: String!
  name: String!
  fields: [AwsDatapipelineSs]!
}

input AwsDatapipelineSrInput {
  id: String!
  name: String!
  fields: [AwsDatapipelineSsInput]!
}

type AwsDatapipelineSs {
  key: String!
  stringValue: String
  refValue: String
}

input AwsDatapipelineSsInput {
  key: String!
  stringValue: String
  refValue: String
}

input AwsDatapipelineValidatePipelineDefinitionInput {
  pipelineId: String!
  pipelineObjects: [AwsDatapipelineSrInput]!
  parameterObjects: [AwsDatapipelineS13Input]
  parameterValues: [AwsDatapipelineS3Input]
}

type AwsDatapipelineValidatePipelineDefinitionOutput {
  validationErrors: [AwsDatapipelineS1l]
  validationWarnings: [AwsDatapipelineS1p]
  errored: Boolean!
}

# Amazon DynamoDB Accelerator (DAX) (2017-04-19)
type AwsDax {
  # dax.CreateCluster
  CreateCluster(input: AwsDaxCreateClusterInput!): AwsDaxCreateClusterOutput

  # dax.CreateParameterGroup
  CreateParameterGroup(input: AwsDaxCreateParameterGroupInput!): AwsDaxCreateParameterGroupOutput

  # dax.CreateSubnetGroup
  CreateSubnetGroup(input: AwsDaxCreateSubnetGroupInput!): AwsDaxCreateSubnetGroupOutput

  # dax.DecreaseReplicationFactor
  DecreaseReplicationFactor(input: AwsDaxDecreaseReplicationFactorInput!): AwsDaxDecreaseReplicationFactorOutput

  # dax.DeleteCluster
  DeleteCluster(input: AwsDaxDeleteClusterInput!): AwsDaxDeleteClusterOutput

  # dax.DeleteParameterGroup
  DeleteParameterGroup(input: AwsDaxDeleteParameterGroupInput!): AwsDaxDeleteParameterGroupOutput

  # dax.DeleteSubnetGroup
  DeleteSubnetGroup(input: AwsDaxDeleteSubnetGroupInput!): AwsDaxDeleteSubnetGroupOutput

  # dax.DescribeClusters
  DescribeClusters(input: AwsDaxDescribeClustersInput): AwsDaxDescribeClustersOutput

  # dax.DescribeDefaultParameters
  DescribeDefaultParameters(input: AwsDaxDescribeDefaultParametersInput): AwsDaxDescribeDefaultParametersOutput

  # dax.DescribeEvents
  DescribeEvents(input: AwsDaxDescribeEventsInput): AwsDaxDescribeEventsOutput

  # dax.DescribeParameterGroups
  DescribeParameterGroups(input: AwsDaxDescribeParameterGroupsInput): AwsDaxDescribeParameterGroupsOutput

  # dax.DescribeParameters
  DescribeParameters(input: AwsDaxDescribeParametersInput!): AwsDaxDescribeParametersOutput

  # dax.DescribeSubnetGroups
  DescribeSubnetGroups(input: AwsDaxDescribeSubnetGroupsInput): AwsDaxDescribeSubnetGroupsOutput

  # dax.IncreaseReplicationFactor
  IncreaseReplicationFactor(input: AwsDaxIncreaseReplicationFactorInput!): AwsDaxIncreaseReplicationFactorOutput

  # dax.ListTags
  ListTags(input: AwsDaxListTagsInput!): AwsDaxListTagsOutput

  # dax.RebootNode
  RebootNode(input: AwsDaxRebootNodeInput!): AwsDaxRebootNodeOutput

  # dax.TagResource
  TagResource(input: AwsDaxTagResourceInput!): AwsDaxTagResourceOutput

  # dax.UntagResource
  UntagResource(input: AwsDaxUntagResourceInput!): AwsDaxUntagResourceOutput

  # dax.UpdateCluster
  UpdateCluster(input: AwsDaxUpdateClusterInput!): AwsDaxUpdateClusterOutput

  # dax.UpdateParameterGroup
  UpdateParameterGroup(input: AwsDaxUpdateParameterGroupInput!): AwsDaxUpdateParameterGroupOutput

  # dax.UpdateSubnetGroup
  UpdateSubnetGroup(input: AwsDaxUpdateSubnetGroupInput!): AwsDaxUpdateSubnetGroupOutput
}

input AwsDaxCreateClusterInput {
  ClusterName: String!
  NodeType: String!
  Description: String
  ReplicationFactor: Int!
  AvailabilityZones: [String]
  SubnetGroupName: String
  SecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  NotificationTopicArn: String
  IamRoleArn: String!
  ParameterGroupName: String
  Tags: [AwsDaxS6Input]
}

type AwsDaxCreateClusterOutput {
  Cluster: AwsDaxS9
}

input AwsDaxCreateParameterGroupInput {
  ParameterGroupName: String!
  Description: String
}

type AwsDaxCreateParameterGroupOutput {
  ParameterGroup: AwsDaxSm
}

input AwsDaxCreateSubnetGroupInput {
  SubnetGroupName: String!
  Description: String
  SubnetIds: [String]!
}

type AwsDaxCreateSubnetGroupOutput {
  SubnetGroup: AwsDaxSq
}

input AwsDaxDecreaseReplicationFactorInput {
  ClusterName: String!
  NewReplicationFactor: Int!
  AvailabilityZones: [String]
  NodeIdsToRemove: [String]
}

type AwsDaxDecreaseReplicationFactorOutput {
  Cluster: AwsDaxS9
}

input AwsDaxDeleteClusterInput {
  ClusterName: String!
}

type AwsDaxDeleteClusterOutput {
  Cluster: AwsDaxS9
}

input AwsDaxDeleteParameterGroupInput {
  ParameterGroupName: String!
}

type AwsDaxDeleteParameterGroupOutput {
  DeletionMessage: String
}

input AwsDaxDeleteSubnetGroupInput {
  SubnetGroupName: String!
}

type AwsDaxDeleteSubnetGroupOutput {
  DeletionMessage: String
}

input AwsDaxDescribeClustersInput {
  ClusterNames: [String]
  MaxResults: Int
  NextToken: String
}

type AwsDaxDescribeClustersOutput {
  NextToken: String
  Clusters: [AwsDaxS9]
}

input AwsDaxDescribeDefaultParametersInput {
  MaxResults: Int
  NextToken: String
}

type AwsDaxDescribeDefaultParametersOutput {
  NextToken: String
  Parameters: [AwsDaxS17]
}

input AwsDaxDescribeEventsInput {
  SourceName: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  MaxResults: Int
  NextToken: String
}

type AwsDaxDescribeEventsOutput {
  NextToken: String
  Events: [AwsDaxDescribeEventsOutputEvents]
}

type AwsDaxDescribeEventsOutputEvents {
  SourceName: String
  SourceType: String
  Message: String
  Date: Date
}

input AwsDaxDescribeParameterGroupsInput {
  ParameterGroupNames: [String]
  MaxResults: Int
  NextToken: String
}

type AwsDaxDescribeParameterGroupsOutput {
  NextToken: String
  ParameterGroups: [AwsDaxSm]
}

input AwsDaxDescribeParametersInput {
  ParameterGroupName: String!
  Source: String
  MaxResults: Int
  NextToken: String
}

type AwsDaxDescribeParametersOutput {
  NextToken: String
  Parameters: [AwsDaxS17]
}

input AwsDaxDescribeSubnetGroupsInput {
  SubnetGroupNames: [String]
  MaxResults: Int
  NextToken: String
}

type AwsDaxDescribeSubnetGroupsOutput {
  NextToken: String
  SubnetGroups: [AwsDaxSq]
}

input AwsDaxIncreaseReplicationFactorInput {
  ClusterName: String!
  NewReplicationFactor: Int!
  AvailabilityZones: [String]
}

type AwsDaxIncreaseReplicationFactorOutput {
  Cluster: AwsDaxS9
}

input AwsDaxListTagsInput {
  ResourceName: String!
  NextToken: String
}

type AwsDaxListTagsOutput {
  Tags: [AwsDaxS6]
  NextToken: String
}

input AwsDaxRebootNodeInput {
  ClusterName: String!
  NodeId: String!
}

type AwsDaxRebootNodeOutput {
  Cluster: AwsDaxS9
}

type AwsDaxS17 {
  ParameterName: String
  ParameterType: String
  ParameterValue: String
  NodeTypeSpecificValues: [AwsDaxS17NodeTypeSpecificValues]
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  IsModifiable: String
  ChangeType: String
}

type AwsDaxS17NodeTypeSpecificValues {
  NodeType: String
  Value: String
}

type AwsDaxS6 {
  Key: String
  Value: String
}

input AwsDaxS6Input {
  Key: String
  Value: String
}

type AwsDaxS9 {
  ClusterName: String
  Description: String
  ClusterArn: String
  TotalNodes: Int
  ActiveNodes: Int
  NodeType: String
  Status: String
  ClusterDiscoveryEndpoint: AwsDaxSb
  NodeIdsToRemove: [String]
  Nodes: [AwsDaxS9Nodes]
  PreferredMaintenanceWindow: String
  NotificationConfiguration: AwsDaxS9NotificationConfiguration
  SubnetGroup: String
  SecurityGroups: [AwsDaxS9SecurityGroups]
  IamRoleArn: String
  ParameterGroup: AwsDaxS9ParameterGroup
}

type AwsDaxS9Nodes {
  NodeId: String
  Endpoint: AwsDaxSb
  NodeCreateTime: Date
  AvailabilityZone: String
  NodeStatus: String
  ParameterGroupStatus: String
}

type AwsDaxS9NotificationConfiguration {
  TopicArn: String
  TopicStatus: String
}

type AwsDaxS9ParameterGroup {
  ParameterGroupName: String
  ParameterApplyStatus: String
  NodeIdsToReboot: [String]
}

type AwsDaxS9SecurityGroups {
  SecurityGroupIdentifier: String
  Status: String
}

type AwsDaxSb {
  Address: String
  Port: Int
}

type AwsDaxSm {
  ParameterGroupName: String
  Description: String
}

type AwsDaxSq {
  SubnetGroupName: String
  Description: String
  VpcId: String
  Subnets: [AwsDaxSqSubnets]
}

type AwsDaxSqSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: String
}

input AwsDaxTagResourceInput {
  ResourceName: String!
  Tags: [AwsDaxS6Input]!
}

type AwsDaxTagResourceOutput {
  Tags: [AwsDaxS6]
}

input AwsDaxUntagResourceInput {
  ResourceName: String!
  TagKeys: [String]!
}

type AwsDaxUntagResourceOutput {
  Tags: [AwsDaxS6]
}

input AwsDaxUpdateClusterInput {
  ClusterName: String!
  Description: String
  PreferredMaintenanceWindow: String
  NotificationTopicArn: String
  NotificationTopicStatus: String
  ParameterGroupName: String
  SecurityGroupIds: [String]
}

type AwsDaxUpdateClusterOutput {
  Cluster: AwsDaxS9
}

input AwsDaxUpdateParameterGroupInput {
  ParameterGroupName: String!
  ParameterNameValues: [AwsDaxUpdateParameterGroupParameterNameValuesInput]!
}

type AwsDaxUpdateParameterGroupOutput {
  ParameterGroup: AwsDaxSm
}

input AwsDaxUpdateParameterGroupParameterNameValuesInput {
  ParameterName: String
  ParameterValue: String
}

input AwsDaxUpdateSubnetGroupInput {
  SubnetGroupName: String!
  Description: String
  SubnetIds: [String]
}

type AwsDaxUpdateSubnetGroupOutput {
  SubnetGroup: AwsDaxSq
}

# AWS Device Farm (2015-06-23)
type AwsDevicefarm {
  # devicefarm.CreateDevicePool
  CreateDevicePool(input: AwsDevicefarmCreateDevicePoolInput!): AwsDevicefarmCreateDevicePoolOutput

  # devicefarm.CreateNetworkProfile
  CreateNetworkProfile(input: AwsDevicefarmCreateNetworkProfileInput!): AwsDevicefarmCreateNetworkProfileOutput

  # devicefarm.CreateProject
  CreateProject(input: AwsDevicefarmCreateProjectInput!): AwsDevicefarmCreateProjectOutput

  # devicefarm.CreateRemoteAccessSession
  CreateRemoteAccessSession(input: AwsDevicefarmCreateRemoteAccessSessionInput!): AwsDevicefarmCreateRemoteAccessSessionOutput

  # devicefarm.CreateUpload
  CreateUpload(input: AwsDevicefarmCreateUploadInput!): AwsDevicefarmCreateUploadOutput

  # devicefarm.DeleteDevicePool
  DeleteDevicePool(input: AwsDevicefarmDeleteDevicePoolInput!): JSON

  # devicefarm.DeleteNetworkProfile
  DeleteNetworkProfile(input: AwsDevicefarmDeleteNetworkProfileInput!): JSON

  # devicefarm.DeleteProject
  DeleteProject(input: AwsDevicefarmDeleteProjectInput!): JSON

  # devicefarm.DeleteRemoteAccessSession
  DeleteRemoteAccessSession(input: AwsDevicefarmDeleteRemoteAccessSessionInput!): JSON

  # devicefarm.DeleteRun
  DeleteRun(input: AwsDevicefarmDeleteRunInput!): JSON

  # devicefarm.DeleteUpload
  DeleteUpload(input: AwsDevicefarmDeleteUploadInput!): JSON

  # devicefarm.GetAccountSettings
  GetAccountSettings(input: JSON): AwsDevicefarmGetAccountSettingsOutput

  # devicefarm.GetDevice
  GetDevice(input: AwsDevicefarmGetDeviceInput!): AwsDevicefarmGetDeviceOutput

  # devicefarm.GetDevicePool
  GetDevicePool(input: AwsDevicefarmGetDevicePoolInput!): AwsDevicefarmGetDevicePoolOutput

  # devicefarm.GetDevicePoolCompatibility
  GetDevicePoolCompatibility(input: AwsDevicefarmGetDevicePoolCompatibilityInput!): AwsDevicefarmGetDevicePoolCompatibilityOutput

  # devicefarm.GetJob
  GetJob(input: AwsDevicefarmGetJobInput!): AwsDevicefarmGetJobOutput

  # devicefarm.GetNetworkProfile
  GetNetworkProfile(input: AwsDevicefarmGetNetworkProfileInput!): AwsDevicefarmGetNetworkProfileOutput

  # devicefarm.GetOfferingStatus
  GetOfferingStatus(input: AwsDevicefarmGetOfferingStatusInput): AwsDevicefarmGetOfferingStatusOutput

  # devicefarm.GetProject
  GetProject(input: AwsDevicefarmGetProjectInput!): AwsDevicefarmGetProjectOutput

  # devicefarm.GetRemoteAccessSession
  GetRemoteAccessSession(input: AwsDevicefarmGetRemoteAccessSessionInput!): AwsDevicefarmGetRemoteAccessSessionOutput

  # devicefarm.GetRun
  GetRun(input: AwsDevicefarmGetRunInput!): AwsDevicefarmGetRunOutput

  # devicefarm.GetSuite
  GetSuite(input: AwsDevicefarmGetSuiteInput!): AwsDevicefarmGetSuiteOutput

  # devicefarm.GetTest
  GetTest(input: AwsDevicefarmGetTestInput!): AwsDevicefarmGetTestOutput

  # devicefarm.GetUpload
  GetUpload(input: AwsDevicefarmGetUploadInput!): AwsDevicefarmGetUploadOutput

  # devicefarm.InstallToRemoteAccessSession
  InstallToRemoteAccessSession(input: AwsDevicefarmInstallToRemoteAccessSessionInput!): AwsDevicefarmInstallToRemoteAccessSessionOutput

  # devicefarm.ListArtifacts
  ListArtifacts(input: AwsDevicefarmListArtifactsInput!): AwsDevicefarmListArtifactsOutput

  # devicefarm.ListDevicePools
  ListDevicePools(input: AwsDevicefarmListDevicePoolsInput!): AwsDevicefarmListDevicePoolsOutput

  # devicefarm.ListDevices
  ListDevices(input: AwsDevicefarmListDevicesInput): AwsDevicefarmListDevicesOutput

  # devicefarm.ListJobs
  ListJobs(input: AwsDevicefarmListJobsInput!): AwsDevicefarmListJobsOutput

  # devicefarm.ListNetworkProfiles
  ListNetworkProfiles(input: AwsDevicefarmListNetworkProfilesInput!): AwsDevicefarmListNetworkProfilesOutput

  # devicefarm.ListOfferingPromotions
  ListOfferingPromotions(input: AwsDevicefarmListOfferingPromotionsInput): AwsDevicefarmListOfferingPromotionsOutput

  # devicefarm.ListOfferingTransactions
  ListOfferingTransactions(input: AwsDevicefarmListOfferingTransactionsInput): AwsDevicefarmListOfferingTransactionsOutput

  # devicefarm.ListOfferings
  ListOfferings(input: AwsDevicefarmListOfferingsInput): AwsDevicefarmListOfferingsOutput

  # devicefarm.ListProjects
  ListProjects(input: AwsDevicefarmListProjectsInput): AwsDevicefarmListProjectsOutput

  # devicefarm.ListRemoteAccessSessions
  ListRemoteAccessSessions(input: AwsDevicefarmListRemoteAccessSessionsInput!): AwsDevicefarmListRemoteAccessSessionsOutput

  # devicefarm.ListRuns
  ListRuns(input: AwsDevicefarmListRunsInput!): AwsDevicefarmListRunsOutput

  # devicefarm.ListSamples
  ListSamples(input: AwsDevicefarmListSamplesInput!): AwsDevicefarmListSamplesOutput

  # devicefarm.ListSuites
  ListSuites(input: AwsDevicefarmListSuitesInput!): AwsDevicefarmListSuitesOutput

  # devicefarm.ListTests
  ListTests(input: AwsDevicefarmListTestsInput!): AwsDevicefarmListTestsOutput

  # devicefarm.ListUniqueProblems
  ListUniqueProblems(input: AwsDevicefarmListUniqueProblemsInput!): AwsDevicefarmListUniqueProblemsOutput

  # devicefarm.ListUploads
  ListUploads(input: AwsDevicefarmListUploadsInput!): AwsDevicefarmListUploadsOutput

  # devicefarm.PurchaseOffering
  PurchaseOffering(input: AwsDevicefarmPurchaseOfferingInput): AwsDevicefarmPurchaseOfferingOutput

  # devicefarm.RenewOffering
  RenewOffering(input: AwsDevicefarmRenewOfferingInput): AwsDevicefarmRenewOfferingOutput

  # devicefarm.ScheduleRun
  ScheduleRun(input: AwsDevicefarmScheduleRunInput!): AwsDevicefarmScheduleRunOutput

  # devicefarm.StopRemoteAccessSession
  StopRemoteAccessSession(input: AwsDevicefarmStopRemoteAccessSessionInput!): AwsDevicefarmStopRemoteAccessSessionOutput

  # devicefarm.StopRun
  StopRun(input: AwsDevicefarmStopRunInput!): AwsDevicefarmStopRunOutput

  # devicefarm.UpdateDevicePool
  UpdateDevicePool(input: AwsDevicefarmUpdateDevicePoolInput!): AwsDevicefarmUpdateDevicePoolOutput

  # devicefarm.UpdateNetworkProfile
  UpdateNetworkProfile(input: AwsDevicefarmUpdateNetworkProfileInput!): AwsDevicefarmUpdateNetworkProfileOutput

  # devicefarm.UpdateProject
  UpdateProject(input: AwsDevicefarmUpdateProjectInput!): AwsDevicefarmUpdateProjectOutput
}

input AwsDevicefarmCreateDevicePoolInput {
  projectArn: String!
  name: String!
  description: String
  rules: [AwsDevicefarmS5Input]!
}

type AwsDevicefarmCreateDevicePoolOutput {
  devicePool: AwsDevicefarmSb
}

input AwsDevicefarmCreateNetworkProfileInput {
  projectArn: String!
  name: String!
  description: String
  type: String
  uplinkBandwidthBits: JSON
  downlinkBandwidthBits: JSON
  uplinkDelayMs: JSON
  downlinkDelayMs: JSON
  uplinkJitterMs: JSON
  downlinkJitterMs: JSON
  uplinkLossPercent: Int
  downlinkLossPercent: Int
}

type AwsDevicefarmCreateNetworkProfileOutput {
  networkProfile: AwsDevicefarmSi
}

input AwsDevicefarmCreateProjectInput {
  name: String!
  defaultJobTimeoutMinutes: Int
}

type AwsDevicefarmCreateProjectOutput {
  project: AwsDevicefarmSm
}

input AwsDevicefarmCreateRemoteAccessSessionConfigurationInput {
  billingMethod: String
}

input AwsDevicefarmCreateRemoteAccessSessionInput {
  projectArn: String!
  deviceArn: String!
  sshPublicKey: String
  remoteDebugEnabled: Boolean
  name: String
  clientId: String
  configuration: AwsDevicefarmCreateRemoteAccessSessionConfigurationInput
}

type AwsDevicefarmCreateRemoteAccessSessionOutput {
  remoteAccessSession: AwsDevicefarmSv
}

input AwsDevicefarmCreateUploadInput {
  projectArn: String!
  name: String!
  type: String!
  contentType: String
}

type AwsDevicefarmCreateUploadOutput {
  upload: AwsDevicefarmS1b
}

input AwsDevicefarmDeleteDevicePoolInput {
  arn: String!
}

input AwsDevicefarmDeleteNetworkProfileInput {
  arn: String!
}

input AwsDevicefarmDeleteProjectInput {
  arn: String!
}

input AwsDevicefarmDeleteRemoteAccessSessionInput {
  arn: String!
}

input AwsDevicefarmDeleteRunInput {
  arn: String!
}

input AwsDevicefarmDeleteUploadInput {
  arn: String!
}

type AwsDevicefarmGetAccountSettingsOutput {
  accountSettings: AwsDevicefarmGetAccountSettingsOutputAccountSettings
}

type AwsDevicefarmGetAccountSettingsOutputAccountSettings {
  awsAccountNumber: String
  unmeteredDevices: JSON
  unmeteredRemoteAccessDevices: JSON
  maxJobTimeoutMinutes: Int
  trialMinutes: AwsDevicefarmGetAccountSettingsOutputAccountSettingsTrialMinutes
  maxSlots: JSON
  defaultJobTimeoutMinutes: Int
}

type AwsDevicefarmGetAccountSettingsOutputAccountSettingsTrialMinutes {
  total: JSON
  remaining: JSON
}

input AwsDevicefarmGetDeviceInput {
  arn: String!
}

type AwsDevicefarmGetDeviceOutput {
  device: AwsDevicefarmSy
}

input AwsDevicefarmGetDevicePoolCompatibilityInput {
  devicePoolArn: String!
  appArn: String
  testType: String
  test: AwsDevicefarmS24Input
}

type AwsDevicefarmGetDevicePoolCompatibilityOutput {
  compatibleDevices: [AwsDevicefarmS28]
  incompatibleDevices: [AwsDevicefarmS28]
}

input AwsDevicefarmGetDevicePoolInput {
  arn: String!
}

type AwsDevicefarmGetDevicePoolOutput {
  devicePool: AwsDevicefarmSb
}

input AwsDevicefarmGetJobInput {
  arn: String!
}

type AwsDevicefarmGetJobOutput {
  job: AwsDevicefarmS2e
}

input AwsDevicefarmGetNetworkProfileInput {
  arn: String!
}

type AwsDevicefarmGetNetworkProfileOutput {
  networkProfile: AwsDevicefarmSi
}

input AwsDevicefarmGetOfferingStatusInput {
  nextToken: String
}

type AwsDevicefarmGetOfferingStatusOutput {
  current: JSON
  nextPeriod: JSON
  nextToken: String
}

input AwsDevicefarmGetProjectInput {
  arn: String!
}

type AwsDevicefarmGetProjectOutput {
  project: AwsDevicefarmSm
}

input AwsDevicefarmGetRemoteAccessSessionInput {
  arn: String!
}

type AwsDevicefarmGetRemoteAccessSessionOutput {
  remoteAccessSession: AwsDevicefarmSv
}

input AwsDevicefarmGetRunInput {
  arn: String!
}

type AwsDevicefarmGetRunOutput {
  run: AwsDevicefarmS32
}

input AwsDevicefarmGetSuiteInput {
  arn: String!
}

type AwsDevicefarmGetSuiteOutput {
  suite: AwsDevicefarmS3a
}

input AwsDevicefarmGetTestInput {
  arn: String!
}

type AwsDevicefarmGetTestOutput {
  test: AwsDevicefarmS3d
}

input AwsDevicefarmGetUploadInput {
  arn: String!
}

type AwsDevicefarmGetUploadOutput {
  upload: AwsDevicefarmS1b
}

input AwsDevicefarmInstallToRemoteAccessSessionInput {
  remoteAccessSessionArn: String!
  appArn: String!
}

type AwsDevicefarmInstallToRemoteAccessSessionOutput {
  appUpload: AwsDevicefarmS1b
}

input AwsDevicefarmListArtifactsInput {
  arn: String!
  type: String!
  nextToken: String
}

type AwsDevicefarmListArtifactsOutput {
  artifacts: [AwsDevicefarmListArtifactsOutputArtifacts]
  nextToken: String
}

type AwsDevicefarmListArtifactsOutputArtifacts {
  arn: String
  name: String
  type: String
  extension: String
  url: String
}

input AwsDevicefarmListDevicePoolsInput {
  arn: String!
  type: String
  nextToken: String
}

type AwsDevicefarmListDevicePoolsOutput {
  devicePools: [AwsDevicefarmSb]
  nextToken: String
}

input AwsDevicefarmListDevicesInput {
  arn: String
  nextToken: String
}

type AwsDevicefarmListDevicesOutput {
  devices: [AwsDevicefarmSy]
  nextToken: String
}

input AwsDevicefarmListJobsInput {
  arn: String!
  nextToken: String
}

type AwsDevicefarmListJobsOutput {
  jobs: [AwsDevicefarmS2e]
  nextToken: String
}

input AwsDevicefarmListNetworkProfilesInput {
  arn: String!
  type: String
  nextToken: String
}

type AwsDevicefarmListNetworkProfilesOutput {
  networkProfiles: [AwsDevicefarmSi]
  nextToken: String
}

input AwsDevicefarmListOfferingPromotionsInput {
  nextToken: String
}

type AwsDevicefarmListOfferingPromotionsOutput {
  offeringPromotions: [AwsDevicefarmListOfferingPromotionsOutputOfferingPromotions]
  nextToken: String
}

type AwsDevicefarmListOfferingPromotionsOutputOfferingPromotions {
  id: String
  description: String
}

input AwsDevicefarmListOfferingsInput {
  nextToken: String
}

type AwsDevicefarmListOfferingsOutput {
  offerings: [AwsDevicefarmS2p]
  nextToken: String
}

input AwsDevicefarmListOfferingTransactionsInput {
  nextToken: String
}

type AwsDevicefarmListOfferingTransactionsOutput {
  offeringTransactions: [AwsDevicefarmS48]
  nextToken: String
}

input AwsDevicefarmListProjectsInput {
  arn: String
  nextToken: String
}

type AwsDevicefarmListProjectsOutput {
  projects: [AwsDevicefarmSm]
  nextToken: String
}

input AwsDevicefarmListRemoteAccessSessionsInput {
  arn: String!
  nextToken: String
}

type AwsDevicefarmListRemoteAccessSessionsOutput {
  remoteAccessSessions: [AwsDevicefarmSv]
  nextToken: String
}

input AwsDevicefarmListRunsInput {
  arn: String!
  nextToken: String
}

type AwsDevicefarmListRunsOutput {
  runs: [AwsDevicefarmS32]
  nextToken: String
}

input AwsDevicefarmListSamplesInput {
  arn: String!
  nextToken: String
}

type AwsDevicefarmListSamplesOutput {
  samples: [AwsDevicefarmListSamplesOutputSamples]
  nextToken: String
}

type AwsDevicefarmListSamplesOutputSamples {
  arn: String
  type: String
  url: String
}

input AwsDevicefarmListSuitesInput {
  arn: String!
  nextToken: String
}

type AwsDevicefarmListSuitesOutput {
  suites: [AwsDevicefarmS3a]
  nextToken: String
}

input AwsDevicefarmListTestsInput {
  arn: String!
  nextToken: String
}

type AwsDevicefarmListTestsOutput {
  tests: [AwsDevicefarmS3d]
  nextToken: String
}

input AwsDevicefarmListUniqueProblemsInput {
  arn: String!
  nextToken: String
}

type AwsDevicefarmListUniqueProblemsOutput {
  uniqueProblems: JSON
  nextToken: String
}

input AwsDevicefarmListUploadsInput {
  arn: String!
  nextToken: String
}

type AwsDevicefarmListUploadsOutput {
  uploads: [AwsDevicefarmS1b]
  nextToken: String
}

input AwsDevicefarmPurchaseOfferingInput {
  offeringId: String
  quantity: Int
  offeringPromotionId: String
}

type AwsDevicefarmPurchaseOfferingOutput {
  offeringTransaction: AwsDevicefarmS48
}

input AwsDevicefarmRenewOfferingInput {
  offeringId: String
  quantity: Int
}

type AwsDevicefarmRenewOfferingOutput {
  offeringTransaction: AwsDevicefarmS48
}

type AwsDevicefarmS16 {
  total: JSON
  metered: JSON
  unmetered: JSON
}

type AwsDevicefarmS1b {
  arn: String
  name: String
  created: Date
  type: String
  status: String
  url: String
  metadata: String
  contentType: String
  message: String
}

input AwsDevicefarmS24Input {
  type: String!
  testPackageArn: String
  filter: String
  parameters: JSON
}

type AwsDevicefarmS28 {
  device: AwsDevicefarmSy
  compatible: Boolean
  incompatibilityMessages: [AwsDevicefarmS28IncompatibilityMessages]
}

type AwsDevicefarmS28IncompatibilityMessages {
  message: String
  type: String
}

type AwsDevicefarmS2e {
  arn: String
  name: String
  type: String
  created: Date
  status: String
  result: String
  started: Date
  stopped: Date
  counters: AwsDevicefarmS2f
  message: String
  device: AwsDevicefarmSy
  deviceMinutes: AwsDevicefarmS16
}

type AwsDevicefarmS2f {
  total: Int
  passed: Int
  failed: Int
  warned: Int
  errored: Int
  stopped: Int
  skipped: Int
}

type AwsDevicefarmS2n {
  type: String
  offering: AwsDevicefarmS2p
  quantity: Int
  effectiveOn: Date
}

type AwsDevicefarmS2p {
  id: String
  description: String
  type: String
  platform: String
  recurringCharges: [AwsDevicefarmS2pRecurringCharges]
}

type AwsDevicefarmS2pRecurringCharges {
  cost: AwsDevicefarmS2t
  frequency: String
}

type AwsDevicefarmS2t {
  amount: JSON
  currencyCode: String
}

type AwsDevicefarmS32 {
  arn: String
  name: String
  type: String
  platform: String
  created: Date
  status: String
  result: String
  started: Date
  stopped: Date
  counters: AwsDevicefarmS2f
  message: String
  totalJobs: Int
  completedJobs: Int
  billingMethod: String
  deviceMinutes: AwsDevicefarmS16
  networkProfile: AwsDevicefarmSi
  parsingResultUrl: String
  resultCode: String
  customerArtifactPaths: AwsDevicefarmS34
}

type AwsDevicefarmS34 {
  iosPaths: [String]
  androidPaths: [String]
  deviceHostPaths: [String]
}

input AwsDevicefarmS34Input {
  iosPaths: [String]
  androidPaths: [String]
  deviceHostPaths: [String]
}

type AwsDevicefarmS3a {
  arn: String
  name: String
  type: String
  created: Date
  status: String
  result: String
  started: Date
  stopped: Date
  counters: AwsDevicefarmS2f
  message: String
  deviceMinutes: AwsDevicefarmS16
}

type AwsDevicefarmS3d {
  arn: String
  name: String
  type: String
  created: Date
  status: String
  result: String
  started: Date
  stopped: Date
  counters: AwsDevicefarmS2f
  message: String
  deviceMinutes: AwsDevicefarmS16
}

type AwsDevicefarmS48 {
  offeringStatus: AwsDevicefarmS2n
  transactionId: String
  offeringPromotionId: String
  createdOn: Date
  cost: AwsDevicefarmS2t
}

type AwsDevicefarmS5 {
  attribute: String
  operator: String
  value: String
}

input AwsDevicefarmS5Input {
  attribute: String
  operator: String
  value: String
}

type AwsDevicefarmSb {
  arn: String
  name: String
  description: String
  type: String
  rules: [AwsDevicefarmS5]
}

input AwsDevicefarmScheduleRunConfigurationInput {
  extraDataPackageArn: String
  networkProfileArn: String
  locale: String
  location: AwsDevicefarmScheduleRunConfigurationLocationInput
  customerArtifactPaths: AwsDevicefarmS34Input
  radios: AwsDevicefarmScheduleRunConfigurationRadiosInput
  auxiliaryApps: [String]
  billingMethod: String
}

input AwsDevicefarmScheduleRunConfigurationLocationInput {
  latitude: JSON!
  longitude: JSON!
}

input AwsDevicefarmScheduleRunConfigurationRadiosInput {
  wifi: Boolean
  bluetooth: Boolean
  nfc: Boolean
  gps: Boolean
}

input AwsDevicefarmScheduleRunExecutionConfigurationInput {
  jobTimeoutMinutes: Int
  accountsCleanup: Boolean
  appPackagesCleanup: Boolean
}

input AwsDevicefarmScheduleRunInput {
  projectArn: String!
  appArn: String
  devicePoolArn: String!
  name: String
  test: AwsDevicefarmS24Input!
  configuration: AwsDevicefarmScheduleRunConfigurationInput
  executionConfiguration: AwsDevicefarmScheduleRunExecutionConfigurationInput
}

type AwsDevicefarmScheduleRunOutput {
  run: AwsDevicefarmS32
}

type AwsDevicefarmSi {
  arn: String
  name: String
  description: String
  type: String
  uplinkBandwidthBits: JSON
  downlinkBandwidthBits: JSON
  uplinkDelayMs: JSON
  downlinkDelayMs: JSON
  uplinkJitterMs: JSON
  downlinkJitterMs: JSON
  uplinkLossPercent: Int
  downlinkLossPercent: Int
}

type AwsDevicefarmSm {
  arn: String
  name: String
  defaultJobTimeoutMinutes: Int
  created: Date
}

input AwsDevicefarmStopRemoteAccessSessionInput {
  arn: String!
}

type AwsDevicefarmStopRemoteAccessSessionOutput {
  remoteAccessSession: AwsDevicefarmSv
}

input AwsDevicefarmStopRunInput {
  arn: String!
}

type AwsDevicefarmStopRunOutput {
  run: AwsDevicefarmS32
}

type AwsDevicefarmSv {
  arn: String
  name: String
  created: Date
  status: String
  result: String
  message: String
  started: Date
  stopped: Date
  device: AwsDevicefarmSy
  remoteDebugEnabled: Boolean
  hostAddress: String
  clientId: String
  billingMethod: String
  deviceMinutes: AwsDevicefarmS16
  endpoint: String
  deviceUdid: String
}

type AwsDevicefarmSy {
  arn: String
  name: String
  manufacturer: String
  model: String
  formFactor: String
  platform: String
  os: String
  cpu: AwsDevicefarmSyCpu
  resolution: AwsDevicefarmSyResolution
  heapSize: JSON
  memory: JSON
  image: String
  carrier: String
  radio: String
  remoteAccessEnabled: Boolean
  remoteDebugEnabled: Boolean
  fleetType: String
  fleetName: String
}

type AwsDevicefarmSyCpu {
  frequency: String
  architecture: String
  clock: JSON
}

type AwsDevicefarmSyResolution {
  width: Int
  height: Int
}

input AwsDevicefarmUpdateDevicePoolInput {
  arn: String!
  name: String
  description: String
  rules: [AwsDevicefarmS5Input]
}

type AwsDevicefarmUpdateDevicePoolOutput {
  devicePool: AwsDevicefarmSb
}

input AwsDevicefarmUpdateNetworkProfileInput {
  arn: String!
  name: String
  description: String
  type: String
  uplinkBandwidthBits: JSON
  downlinkBandwidthBits: JSON
  uplinkDelayMs: JSON
  downlinkDelayMs: JSON
  uplinkJitterMs: JSON
  downlinkJitterMs: JSON
  uplinkLossPercent: Int
  downlinkLossPercent: Int
}

type AwsDevicefarmUpdateNetworkProfileOutput {
  networkProfile: AwsDevicefarmSi
}

input AwsDevicefarmUpdateProjectInput {
  arn: String!
  name: String
  defaultJobTimeoutMinutes: Int
}

type AwsDevicefarmUpdateProjectOutput {
  project: AwsDevicefarmSm
}

# AWS Direct Connect (2012-10-25)
type AwsDirectconnect {
  # directconnect.AllocateConnectionOnInterconnect
  AllocateConnectionOnInterconnect(input: AwsDirectconnectAllocateConnectionOnInterconnectInput!): JSON

  # directconnect.AllocateHostedConnection
  AllocateHostedConnection(input: AwsDirectconnectAllocateHostedConnectionInput!): JSON

  # directconnect.AllocatePrivateVirtualInterface
  AllocatePrivateVirtualInterface(input: AwsDirectconnectAllocatePrivateVirtualInterfaceInput!): JSON

  # directconnect.AllocatePublicVirtualInterface
  AllocatePublicVirtualInterface(input: AwsDirectconnectAllocatePublicVirtualInterfaceInput!): JSON

  # directconnect.AssociateConnectionWithLag
  AssociateConnectionWithLag(input: AwsDirectconnectAssociateConnectionWithLagInput!): JSON

  # directconnect.AssociateHostedConnection
  AssociateHostedConnection(input: AwsDirectconnectAssociateHostedConnectionInput!): JSON

  # directconnect.AssociateVirtualInterface
  AssociateVirtualInterface(input: AwsDirectconnectAssociateVirtualInterfaceInput!): JSON

  # directconnect.ConfirmConnection
  ConfirmConnection(input: AwsDirectconnectConfirmConnectionInput!): AwsDirectconnectConfirmConnectionOutput

  # directconnect.ConfirmPrivateVirtualInterface
  ConfirmPrivateVirtualInterface(input: AwsDirectconnectConfirmPrivateVirtualInterfaceInput!): AwsDirectconnectConfirmPrivateVirtualInterfaceOutput

  # directconnect.ConfirmPublicVirtualInterface
  ConfirmPublicVirtualInterface(input: AwsDirectconnectConfirmPublicVirtualInterfaceInput!): AwsDirectconnectConfirmPublicVirtualInterfaceOutput

  # directconnect.CreateBGPPeer
  CreateBGPPeer(input: AwsDirectconnectCreateBGPPeerInput): AwsDirectconnectCreateBGPPeerOutput

  # directconnect.CreateConnection
  CreateConnection(input: AwsDirectconnectCreateConnectionInput!): JSON

  # directconnect.CreateDirectConnectGateway
  CreateDirectConnectGateway(input: AwsDirectconnectCreateDirectConnectGatewayInput!): AwsDirectconnectCreateDirectConnectGatewayOutput

  # directconnect.CreateDirectConnectGatewayAssociation
  CreateDirectConnectGatewayAssociation(input: AwsDirectconnectCreateDirectConnectGatewayAssociationInput!): AwsDirectconnectCreateDirectConnectGatewayAssociationOutput

  # directconnect.CreateInterconnect
  CreateInterconnect(input: AwsDirectconnectCreateInterconnectInput!): JSON

  # directconnect.CreateLag
  CreateLag(input: AwsDirectconnectCreateLagInput!): JSON

  # directconnect.CreatePrivateVirtualInterface
  CreatePrivateVirtualInterface(input: AwsDirectconnectCreatePrivateVirtualInterfaceInput!): JSON

  # directconnect.CreatePublicVirtualInterface
  CreatePublicVirtualInterface(input: AwsDirectconnectCreatePublicVirtualInterfaceInput!): JSON

  # directconnect.DeleteBGPPeer
  DeleteBGPPeer(input: AwsDirectconnectDeleteBGPPeerInput): AwsDirectconnectDeleteBGPPeerOutput

  # directconnect.DeleteConnection
  DeleteConnection(input: AwsDirectconnectDeleteConnectionInput!): JSON

  # directconnect.DeleteDirectConnectGateway
  DeleteDirectConnectGateway(input: AwsDirectconnectDeleteDirectConnectGatewayInput!): AwsDirectconnectDeleteDirectConnectGatewayOutput

  # directconnect.DeleteDirectConnectGatewayAssociation
  DeleteDirectConnectGatewayAssociation(input: AwsDirectconnectDeleteDirectConnectGatewayAssociationInput!): AwsDirectconnectDeleteDirectConnectGatewayAssociationOutput

  # directconnect.DeleteInterconnect
  DeleteInterconnect(input: AwsDirectconnectDeleteInterconnectInput!): AwsDirectconnectDeleteInterconnectOutput

  # directconnect.DeleteLag
  DeleteLag(input: AwsDirectconnectDeleteLagInput!): JSON

  # directconnect.DeleteVirtualInterface
  DeleteVirtualInterface(input: AwsDirectconnectDeleteVirtualInterfaceInput!): AwsDirectconnectDeleteVirtualInterfaceOutput

  # directconnect.DescribeConnectionLoa
  DescribeConnectionLoa(input: AwsDirectconnectDescribeConnectionLoaInput!): AwsDirectconnectDescribeConnectionLoaOutput

  # directconnect.DescribeConnections
  DescribeConnections(input: AwsDirectconnectDescribeConnectionsInput): JSON

  # directconnect.DescribeConnectionsOnInterconnect
  DescribeConnectionsOnInterconnect(input: AwsDirectconnectDescribeConnectionsOnInterconnectInput!): JSON

  # directconnect.DescribeDirectConnectGatewayAssociations
  DescribeDirectConnectGatewayAssociations(input: AwsDirectconnectDescribeDirectConnectGatewayAssociationsInput): AwsDirectconnectDescribeDirectConnectGatewayAssociationsOutput

  # directconnect.DescribeDirectConnectGatewayAttachments
  DescribeDirectConnectGatewayAttachments(input: AwsDirectconnectDescribeDirectConnectGatewayAttachmentsInput): AwsDirectconnectDescribeDirectConnectGatewayAttachmentsOutput

  # directconnect.DescribeDirectConnectGateways
  DescribeDirectConnectGateways(input: AwsDirectconnectDescribeDirectConnectGatewaysInput): AwsDirectconnectDescribeDirectConnectGatewaysOutput

  # directconnect.DescribeHostedConnections
  DescribeHostedConnections(input: AwsDirectconnectDescribeHostedConnectionsInput!): JSON

  # directconnect.DescribeInterconnectLoa
  DescribeInterconnectLoa(input: AwsDirectconnectDescribeInterconnectLoaInput!): AwsDirectconnectDescribeInterconnectLoaOutput

  # directconnect.DescribeInterconnects
  DescribeInterconnects(input: AwsDirectconnectDescribeInterconnectsInput): AwsDirectconnectDescribeInterconnectsOutput

  # directconnect.DescribeLags
  DescribeLags(input: AwsDirectconnectDescribeLagsInput): AwsDirectconnectDescribeLagsOutput

  # directconnect.DescribeLoa
  DescribeLoa(input: AwsDirectconnectDescribeLoaInput!): JSON

  # directconnect.DescribeLocations
  DescribeLocations: AwsDirectconnectDescribeLocationsOutput

  # directconnect.DescribeTags
  DescribeTags(input: AwsDirectconnectDescribeTagsInput!): AwsDirectconnectDescribeTagsOutput

  # directconnect.DescribeVirtualGateways
  DescribeVirtualGateways: AwsDirectconnectDescribeVirtualGatewaysOutput

  # directconnect.DescribeVirtualInterfaces
  DescribeVirtualInterfaces(input: AwsDirectconnectDescribeVirtualInterfacesInput): AwsDirectconnectDescribeVirtualInterfacesOutput

  # directconnect.DisassociateConnectionFromLag
  DisassociateConnectionFromLag(input: AwsDirectconnectDisassociateConnectionFromLagInput!): JSON

  # directconnect.TagResource
  TagResource(input: AwsDirectconnectTagResourceInput!): JSON

  # directconnect.UntagResource
  UntagResource(input: AwsDirectconnectUntagResourceInput!): JSON

  # directconnect.UpdateLag
  UpdateLag(input: AwsDirectconnectUpdateLagInput!): JSON
}

input AwsDirectconnectAllocateConnectionOnInterconnectInput {
  bandwidth: String!
  connectionName: String!
  ownerAccount: String!
  interconnectId: String!
  vlan: Int!
}

input AwsDirectconnectAllocateHostedConnectionInput {
  connectionId: String!
  ownerAccount: String!
  bandwidth: String!
  connectionName: String!
  vlan: Int!
}

input AwsDirectconnectAllocatePrivateVirtualInterfaceInput {
  connectionId: String!
  ownerAccount: String!
  newPrivateVirtualInterfaceAllocation: AwsDirectconnectAllocatePrivateVirtualInterfaceNewPrivateVirtualInterfaceAllocationInput!
}

input AwsDirectconnectAllocatePrivateVirtualInterfaceNewPrivateVirtualInterfaceAllocationInput {
  virtualInterfaceName: String!
  vlan: Int!
  asn: Int!
  authKey: String
  amazonAddress: String
  addressFamily: String
  customerAddress: String
}

input AwsDirectconnectAllocatePublicVirtualInterfaceInput {
  connectionId: String!
  ownerAccount: String!
  newPublicVirtualInterfaceAllocation: AwsDirectconnectAllocatePublicVirtualInterfaceNewPublicVirtualInterfaceAllocationInput!
}

input AwsDirectconnectAllocatePublicVirtualInterfaceNewPublicVirtualInterfaceAllocationInput {
  virtualInterfaceName: String!
  vlan: Int!
  asn: Int!
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  routeFilterPrefixes: [AwsDirectconnectSxInput]
}

input AwsDirectconnectAssociateConnectionWithLagInput {
  connectionId: String!
  lagId: String!
}

input AwsDirectconnectAssociateHostedConnectionInput {
  connectionId: String!
  parentConnectionId: String!
}

input AwsDirectconnectAssociateVirtualInterfaceInput {
  virtualInterfaceId: String!
  connectionId: String!
}

input AwsDirectconnectConfirmConnectionInput {
  connectionId: String!
}

type AwsDirectconnectConfirmConnectionOutput {
  connectionState: String
}

input AwsDirectconnectConfirmPrivateVirtualInterfaceInput {
  virtualInterfaceId: String!
  virtualGatewayId: String
  directConnectGatewayId: String
}

type AwsDirectconnectConfirmPrivateVirtualInterfaceOutput {
  virtualInterfaceState: String
}

input AwsDirectconnectConfirmPublicVirtualInterfaceInput {
  virtualInterfaceId: String!
}

type AwsDirectconnectConfirmPublicVirtualInterfaceOutput {
  virtualInterfaceState: String
}

input AwsDirectconnectCreateBGPPeerInput {
  virtualInterfaceId: String
  newBGPPeer: AwsDirectconnectCreateBGPPeerNewBGPPeerInput
}

input AwsDirectconnectCreateBGPPeerNewBGPPeerInput {
  asn: Int
  authKey: String
  addressFamily: String
  amazonAddress: String
  customerAddress: String
}

type AwsDirectconnectCreateBGPPeerOutput {
  virtualInterface: AwsDirectconnectSp
}

input AwsDirectconnectCreateConnectionInput {
  location: String!
  bandwidth: String!
  connectionName: String!
  lagId: String
}

input AwsDirectconnectCreateDirectConnectGatewayAssociationInput {
  directConnectGatewayId: String!
  virtualGatewayId: String!
}

type AwsDirectconnectCreateDirectConnectGatewayAssociationOutput {
  directConnectGatewayAssociation: AwsDirectconnectS1r
}

input AwsDirectconnectCreateDirectConnectGatewayInput {
  directConnectGatewayName: String!
  amazonSideAsn: JSON
}

type AwsDirectconnectCreateDirectConnectGatewayOutput {
  directConnectGateway: AwsDirectconnectS1m
}

input AwsDirectconnectCreateInterconnectInput {
  interconnectName: String!
  bandwidth: String!
  location: String!
  lagId: String
}

input AwsDirectconnectCreateLagInput {
  numberOfConnections: Int!
  location: String!
  connectionsBandwidth: String!
  lagName: String!
  connectionId: String
}

input AwsDirectconnectCreatePrivateVirtualInterfaceInput {
  connectionId: String!
  newPrivateVirtualInterface: AwsDirectconnectCreatePrivateVirtualInterfaceNewPrivateVirtualInterfaceInput!
}

input AwsDirectconnectCreatePrivateVirtualInterfaceNewPrivateVirtualInterfaceInput {
  virtualInterfaceName: String!
  vlan: Int!
  asn: Int!
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  virtualGatewayId: String
  directConnectGatewayId: String
}

input AwsDirectconnectCreatePublicVirtualInterfaceInput {
  connectionId: String!
  newPublicVirtualInterface: AwsDirectconnectCreatePublicVirtualInterfaceNewPublicVirtualInterfaceInput!
}

input AwsDirectconnectCreatePublicVirtualInterfaceNewPublicVirtualInterfaceInput {
  virtualInterfaceName: String!
  vlan: Int!
  asn: Int!
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  routeFilterPrefixes: [AwsDirectconnectSxInput]
}

input AwsDirectconnectDeleteBGPPeerInput {
  virtualInterfaceId: String
  asn: Int
  customerAddress: String
}

type AwsDirectconnectDeleteBGPPeerOutput {
  virtualInterface: AwsDirectconnectSp
}

input AwsDirectconnectDeleteConnectionInput {
  connectionId: String!
}

input AwsDirectconnectDeleteDirectConnectGatewayAssociationInput {
  directConnectGatewayId: String!
  virtualGatewayId: String!
}

type AwsDirectconnectDeleteDirectConnectGatewayAssociationOutput {
  directConnectGatewayAssociation: AwsDirectconnectS1r
}

input AwsDirectconnectDeleteDirectConnectGatewayInput {
  directConnectGatewayId: String!
}

type AwsDirectconnectDeleteDirectConnectGatewayOutput {
  directConnectGateway: AwsDirectconnectS1m
}

input AwsDirectconnectDeleteInterconnectInput {
  interconnectId: String!
}

type AwsDirectconnectDeleteInterconnectOutput {
  interconnectState: String
}

input AwsDirectconnectDeleteLagInput {
  lagId: String!
}

input AwsDirectconnectDeleteVirtualInterfaceInput {
  virtualInterfaceId: String!
}

type AwsDirectconnectDeleteVirtualInterfaceOutput {
  virtualInterfaceState: String
}

input AwsDirectconnectDescribeConnectionLoaInput {
  connectionId: String!
  providerName: String
  loaContentType: String
}

type AwsDirectconnectDescribeConnectionLoaOutput {
  loa: AwsDirectconnectS2p
}

input AwsDirectconnectDescribeConnectionsInput {
  connectionId: String
}

input AwsDirectconnectDescribeConnectionsOnInterconnectInput {
  interconnectId: String!
}

input AwsDirectconnectDescribeDirectConnectGatewayAssociationsInput {
  directConnectGatewayId: String
  virtualGatewayId: String
  maxResults: Int
  nextToken: String
}

type AwsDirectconnectDescribeDirectConnectGatewayAssociationsOutput {
  directConnectGatewayAssociations: [AwsDirectconnectS1r]
  nextToken: String
}

input AwsDirectconnectDescribeDirectConnectGatewayAttachmentsInput {
  directConnectGatewayId: String
  virtualInterfaceId: String
  maxResults: Int
  nextToken: String
}

type AwsDirectconnectDescribeDirectConnectGatewayAttachmentsOutput {
  directConnectGatewayAttachments: [AwsDirectconnectDescribeDirectConnectGatewayAttachmentsOutputDirectConnectGatewayAttachments]
  nextToken: String
}

type AwsDirectconnectDescribeDirectConnectGatewayAttachmentsOutputDirectConnectGatewayAttachments {
  directConnectGatewayId: String
  virtualInterfaceId: String
  virtualInterfaceRegion: String
  virtualInterfaceOwnerAccount: String
  attachmentState: String
  stateChangeError: String
}

input AwsDirectconnectDescribeDirectConnectGatewaysInput {
  directConnectGatewayId: String
  maxResults: Int
  nextToken: String
}

type AwsDirectconnectDescribeDirectConnectGatewaysOutput {
  directConnectGateways: [AwsDirectconnectS1m]
  nextToken: String
}

input AwsDirectconnectDescribeHostedConnectionsInput {
  connectionId: String!
}

input AwsDirectconnectDescribeInterconnectLoaInput {
  interconnectId: String!
  providerName: String
  loaContentType: String
}

type AwsDirectconnectDescribeInterconnectLoaOutput {
  loa: AwsDirectconnectS2p
}

input AwsDirectconnectDescribeInterconnectsInput {
  interconnectId: String
}

type AwsDirectconnectDescribeInterconnectsOutput {
  interconnects: [AwsDirectconnectS1w]
}

input AwsDirectconnectDescribeLagsInput {
  lagId: String
}

type AwsDirectconnectDescribeLagsOutput {
  lags: [AwsDirectconnectS21]
}

input AwsDirectconnectDescribeLoaInput {
  connectionId: String!
  providerName: String
  loaContentType: String
}

type AwsDirectconnectDescribeLocationsOutput {
  locations: [AwsDirectconnectDescribeLocationsOutputLocations]
}

type AwsDirectconnectDescribeLocationsOutputLocations {
  locationCode: String
  locationName: String
}

input AwsDirectconnectDescribeTagsInput {
  resourceArns: [String]!
}

type AwsDirectconnectDescribeTagsOutput {
  resourceTags: [AwsDirectconnectDescribeTagsOutputResourceTags]
}

type AwsDirectconnectDescribeTagsOutputResourceTags {
  resourceArn: String
  tags: [AwsDirectconnectS3s]
}

type AwsDirectconnectDescribeVirtualGatewaysOutput {
  virtualGateways: [AwsDirectconnectDescribeVirtualGatewaysOutputVirtualGateways]
}

type AwsDirectconnectDescribeVirtualGatewaysOutputVirtualGateways {
  virtualGatewayId: String
  virtualGatewayState: String
}

input AwsDirectconnectDescribeVirtualInterfacesInput {
  connectionId: String
  virtualInterfaceId: String
}

type AwsDirectconnectDescribeVirtualInterfacesOutput {
  virtualInterfaces: [AwsDirectconnectSp]
}

input AwsDirectconnectDisassociateConnectionFromLagInput {
  connectionId: String!
  lagId: String!
}

type AwsDirectconnectS1m {
  directConnectGatewayId: String
  directConnectGatewayName: String
  amazonSideAsn: JSON
  ownerAccount: String
  directConnectGatewayState: String
  stateChangeError: String
}

type AwsDirectconnectS1r {
  directConnectGatewayId: String
  virtualGatewayId: String
  virtualGatewayRegion: String
  virtualGatewayOwnerAccount: String
  associationState: String
  stateChangeError: String
}

type AwsDirectconnectS1w {
  interconnectId: String
  interconnectName: String
  interconnectState: String
  region: String
  location: String
  bandwidth: String
  loaIssueTime: Date
  lagId: String
  awsDevice: String
}

type AwsDirectconnectS21 {
  connectionsBandwidth: String
  numberOfConnections: Int
  lagId: String
  ownerAccount: String
  lagName: String
  lagState: String
  location: String
  region: String
  minimumLinks: Int
  awsDevice: String
  connections: [AwsDirectconnectS7]
  allowsHostedConnections: Boolean
}

type AwsDirectconnectS2p {
  loaContent: JSON
  loaContentType: String
}

type AwsDirectconnectS3s {
  key: String!
  value: String
}

input AwsDirectconnectS3sInput {
  key: String!
  value: String
}

type AwsDirectconnectS7 {
  ownerAccount: String
  connectionId: String
  connectionName: String
  connectionState: String
  region: String
  location: String
  bandwidth: String
  vlan: Int
  partnerName: String
  loaIssueTime: Date
  lagId: String
  awsDevice: String
}

type AwsDirectconnectSp {
  ownerAccount: String
  virtualInterfaceId: String
  location: String
  connectionId: String
  virtualInterfaceType: String
  virtualInterfaceName: String
  vlan: Int
  asn: Int
  amazonSideAsn: JSON
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  virtualInterfaceState: String
  customerRouterConfig: String
  virtualGatewayId: String
  directConnectGatewayId: String
  routeFilterPrefixes: [AwsDirectconnectSx]
  bgpPeers: [AwsDirectconnectSpBgpPeers]
}

type AwsDirectconnectSpBgpPeers {
  asn: Int
  authKey: String
  addressFamily: String
  amazonAddress: String
  customerAddress: String
  bgpPeerState: String
  bgpStatus: String
}

type AwsDirectconnectSx {
  cidr: String
}

input AwsDirectconnectSxInput {
  cidr: String
}

input AwsDirectconnectTagResourceInput {
  resourceArn: String!
  tags: [AwsDirectconnectS3sInput]!
}

input AwsDirectconnectUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsDirectconnectUpdateLagInput {
  lagId: String!
  lagName: String
  minimumLinks: Int
}

# AWS Directory Service (2015-04-16)
type AwsDirectoryservice {
  # directoryservice.AddIpRoutes
  AddIpRoutes(input: AwsDirectoryserviceAddIpRoutesInput!): JSON

  # directoryservice.AddTagsToResource
  AddTagsToResource(input: AwsDirectoryserviceAddTagsToResourceInput!): JSON

  # directoryservice.CancelSchemaExtension
  CancelSchemaExtension(input: AwsDirectoryserviceCancelSchemaExtensionInput!): JSON

  # directoryservice.ConnectDirectory
  ConnectDirectory(input: AwsDirectoryserviceConnectDirectoryInput!): AwsDirectoryserviceConnectDirectoryOutput

  # directoryservice.CreateAlias
  CreateAlias(input: AwsDirectoryserviceCreateAliasInput!): AwsDirectoryserviceCreateAliasOutput

  # directoryservice.CreateComputer
  CreateComputer(input: AwsDirectoryserviceCreateComputerInput!): AwsDirectoryserviceCreateComputerOutput

  # directoryservice.CreateConditionalForwarder
  CreateConditionalForwarder(input: AwsDirectoryserviceCreateConditionalForwarderInput!): JSON

  # directoryservice.CreateDirectory
  CreateDirectory(input: AwsDirectoryserviceCreateDirectoryInput!): AwsDirectoryserviceCreateDirectoryOutput

  # directoryservice.CreateMicrosoftAD
  CreateMicrosoftAD(input: AwsDirectoryserviceCreateMicrosoftADInput!): AwsDirectoryserviceCreateMicrosoftADOutput

  # directoryservice.CreateSnapshot
  CreateSnapshot(input: AwsDirectoryserviceCreateSnapshotInput!): AwsDirectoryserviceCreateSnapshotOutput

  # directoryservice.CreateTrust
  CreateTrust(input: AwsDirectoryserviceCreateTrustInput!): AwsDirectoryserviceCreateTrustOutput

  # directoryservice.DeleteConditionalForwarder
  DeleteConditionalForwarder(input: AwsDirectoryserviceDeleteConditionalForwarderInput!): JSON

  # directoryservice.DeleteDirectory
  DeleteDirectory(input: AwsDirectoryserviceDeleteDirectoryInput!): AwsDirectoryserviceDeleteDirectoryOutput

  # directoryservice.DeleteSnapshot
  DeleteSnapshot(input: AwsDirectoryserviceDeleteSnapshotInput!): AwsDirectoryserviceDeleteSnapshotOutput

  # directoryservice.DeleteTrust
  DeleteTrust(input: AwsDirectoryserviceDeleteTrustInput!): AwsDirectoryserviceDeleteTrustOutput

  # directoryservice.DeregisterEventTopic
  DeregisterEventTopic(input: AwsDirectoryserviceDeregisterEventTopicInput!): JSON

  # directoryservice.DescribeConditionalForwarders
  DescribeConditionalForwarders(input: AwsDirectoryserviceDescribeConditionalForwardersInput!): AwsDirectoryserviceDescribeConditionalForwardersOutput

  # directoryservice.DescribeDirectories
  DescribeDirectories(input: AwsDirectoryserviceDescribeDirectoriesInput): AwsDirectoryserviceDescribeDirectoriesOutput

  # directoryservice.DescribeDomainControllers
  DescribeDomainControllers(input: AwsDirectoryserviceDescribeDomainControllersInput!): AwsDirectoryserviceDescribeDomainControllersOutput

  # directoryservice.DescribeEventTopics
  DescribeEventTopics(input: AwsDirectoryserviceDescribeEventTopicsInput): AwsDirectoryserviceDescribeEventTopicsOutput

  # directoryservice.DescribeSnapshots
  DescribeSnapshots(input: AwsDirectoryserviceDescribeSnapshotsInput): AwsDirectoryserviceDescribeSnapshotsOutput

  # directoryservice.DescribeTrusts
  DescribeTrusts(input: AwsDirectoryserviceDescribeTrustsInput): AwsDirectoryserviceDescribeTrustsOutput

  # directoryservice.DisableRadius
  DisableRadius(input: AwsDirectoryserviceDisableRadiusInput!): JSON

  # directoryservice.DisableSso
  DisableSso(input: AwsDirectoryserviceDisableSsoInput!): JSON

  # directoryservice.EnableRadius
  EnableRadius(input: AwsDirectoryserviceEnableRadiusInput!): JSON

  # directoryservice.EnableSso
  EnableSso(input: AwsDirectoryserviceEnableSsoInput!): JSON

  # directoryservice.GetDirectoryLimits
  GetDirectoryLimits(input: JSON): AwsDirectoryserviceGetDirectoryLimitsOutput

  # directoryservice.GetSnapshotLimits
  GetSnapshotLimits(input: AwsDirectoryserviceGetSnapshotLimitsInput!): AwsDirectoryserviceGetSnapshotLimitsOutput

  # directoryservice.ListIpRoutes
  ListIpRoutes(input: AwsDirectoryserviceListIpRoutesInput!): AwsDirectoryserviceListIpRoutesOutput

  # directoryservice.ListSchemaExtensions
  ListSchemaExtensions(input: AwsDirectoryserviceListSchemaExtensionsInput!): AwsDirectoryserviceListSchemaExtensionsOutput

  # directoryservice.ListTagsForResource
  ListTagsForResource(input: AwsDirectoryserviceListTagsForResourceInput!): AwsDirectoryserviceListTagsForResourceOutput

  # directoryservice.RegisterEventTopic
  RegisterEventTopic(input: AwsDirectoryserviceRegisterEventTopicInput!): JSON

  # directoryservice.RemoveIpRoutes
  RemoveIpRoutes(input: AwsDirectoryserviceRemoveIpRoutesInput!): JSON

  # directoryservice.RemoveTagsFromResource
  RemoveTagsFromResource(input: AwsDirectoryserviceRemoveTagsFromResourceInput!): JSON

  # directoryservice.RestoreFromSnapshot
  RestoreFromSnapshot(input: AwsDirectoryserviceRestoreFromSnapshotInput!): JSON

  # directoryservice.StartSchemaExtension
  StartSchemaExtension(input: AwsDirectoryserviceStartSchemaExtensionInput!): AwsDirectoryserviceStartSchemaExtensionOutput

  # directoryservice.UpdateConditionalForwarder
  UpdateConditionalForwarder(input: AwsDirectoryserviceUpdateConditionalForwarderInput!): JSON

  # directoryservice.UpdateNumberOfDomainControllers
  UpdateNumberOfDomainControllers(input: AwsDirectoryserviceUpdateNumberOfDomainControllersInput!): JSON

  # directoryservice.UpdateRadius
  UpdateRadius(input: AwsDirectoryserviceUpdateRadiusInput!): JSON

  # directoryservice.VerifyTrust
  VerifyTrust(input: AwsDirectoryserviceVerifyTrustInput!): AwsDirectoryserviceVerifyTrustOutput
}

input AwsDirectoryserviceAddIpRoutesInput {
  DirectoryId: String!
  IpRoutes: [AwsDirectoryserviceAddIpRoutesIpRoutesInput]!
  UpdateSecurityGroupForDirectoryControllers: Boolean
}

input AwsDirectoryserviceAddIpRoutesIpRoutesInput {
  CidrIp: String
  Description: String
}

input AwsDirectoryserviceAddTagsToResourceInput {
  ResourceId: String!
  Tags: [AwsDirectoryserviceSbInput]!
}

input AwsDirectoryserviceCancelSchemaExtensionInput {
  DirectoryId: String!
  SchemaExtensionId: String!
}

input AwsDirectoryserviceConnectDirectoryConnectSettingsInput {
  VpcId: String!
  SubnetIds: [String]!
  CustomerDnsIps: [String]!
  CustomerUserName: String!
}

input AwsDirectoryserviceConnectDirectoryInput {
  Name: String!
  ShortName: String
  Password: String!
  Description: String
  Size: String!
  ConnectSettings: AwsDirectoryserviceConnectDirectoryConnectSettingsInput!
}

type AwsDirectoryserviceConnectDirectoryOutput {
  DirectoryId: String
}

input AwsDirectoryserviceCreateAliasInput {
  DirectoryId: String!
  Alias: String!
}

type AwsDirectoryserviceCreateAliasOutput {
  DirectoryId: String
  Alias: String
}

input AwsDirectoryserviceCreateComputerInput {
  DirectoryId: String!
  ComputerName: String!
  Password: String!
  OrganizationalUnitDistinguishedName: String
  ComputerAttributes: [AwsDirectoryserviceS13Input]
}

type AwsDirectoryserviceCreateComputerOutput {
  Computer: AwsDirectoryserviceCreateComputerOutputComputer
}

type AwsDirectoryserviceCreateComputerOutputComputer {
  ComputerId: String
  ComputerName: String
  ComputerAttributes: [AwsDirectoryserviceS13]
}

input AwsDirectoryserviceCreateConditionalForwarderInput {
  DirectoryId: String!
  RemoteDomainName: String!
  DnsIpAddrs: [String]!
}

input AwsDirectoryserviceCreateDirectoryInput {
  Name: String!
  ShortName: String
  Password: String!
  Description: String
  Size: String!
  VpcSettings: AwsDirectoryserviceS1fInput
}

type AwsDirectoryserviceCreateDirectoryOutput {
  DirectoryId: String
}

input AwsDirectoryserviceCreateMicrosoftADInput {
  Name: String!
  ShortName: String
  Password: String!
  Description: String
  VpcSettings: AwsDirectoryserviceS1fInput!
}

type AwsDirectoryserviceCreateMicrosoftADOutput {
  DirectoryId: String
}

input AwsDirectoryserviceCreateSnapshotInput {
  DirectoryId: String!
  Name: String
}

type AwsDirectoryserviceCreateSnapshotOutput {
  SnapshotId: String
}

input AwsDirectoryserviceCreateTrustInput {
  DirectoryId: String!
  RemoteDomainName: String!
  TrustPassword: String!
  TrustDirection: String!
  TrustType: String
  ConditionalForwarderIpAddrs: [String]
}

type AwsDirectoryserviceCreateTrustOutput {
  TrustId: String
}

input AwsDirectoryserviceDeleteConditionalForwarderInput {
  DirectoryId: String!
  RemoteDomainName: String!
}

input AwsDirectoryserviceDeleteDirectoryInput {
  DirectoryId: String!
}

type AwsDirectoryserviceDeleteDirectoryOutput {
  DirectoryId: String
}

input AwsDirectoryserviceDeleteSnapshotInput {
  SnapshotId: String!
}

type AwsDirectoryserviceDeleteSnapshotOutput {
  SnapshotId: String
}

input AwsDirectoryserviceDeleteTrustInput {
  TrustId: String!
  DeleteAssociatedConditionalForwarder: Boolean
}

type AwsDirectoryserviceDeleteTrustOutput {
  TrustId: String
}

input AwsDirectoryserviceDeregisterEventTopicInput {
  DirectoryId: String!
  TopicName: String!
}

input AwsDirectoryserviceDescribeConditionalForwardersInput {
  DirectoryId: String!
  RemoteDomainNames: [String]
}

type AwsDirectoryserviceDescribeConditionalForwardersOutput {
  ConditionalForwarders: [AwsDirectoryserviceDescribeConditionalForwardersOutputConditionalForwarders]
}

type AwsDirectoryserviceDescribeConditionalForwardersOutputConditionalForwarders {
  RemoteDomainName: String
  DnsIpAddrs: [String]
  ReplicationScope: String
}

input AwsDirectoryserviceDescribeDirectoriesInput {
  DirectoryIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryserviceDescribeDirectoriesOutput {
  DirectoryDescriptions: [AwsDirectoryserviceDescribeDirectoriesOutputDirectoryDescriptions]
  NextToken: String
}

type AwsDirectoryserviceDescribeDirectoriesOutputDirectoryDescriptions {
  DirectoryId: String
  Name: String
  ShortName: String
  Size: String
  Alias: String
  AccessUrl: String
  Description: String
  DnsIpAddrs: [String]
  Stage: String
  LaunchTime: Date
  StageLastUpdatedDateTime: Date
  Type: String
  VpcSettings: AwsDirectoryserviceDescribeDirectoriesOutputDirectoryDescriptionsVpcSettings
  ConnectSettings: AwsDirectoryserviceDescribeDirectoriesOutputDirectoryDescriptionsConnectSettings
  RadiusSettings: AwsDirectoryserviceS2t
  RadiusStatus: String
  StageReason: String
  SsoEnabled: Boolean
  DesiredNumberOfDomainControllers: Int
}

type AwsDirectoryserviceDescribeDirectoriesOutputDirectoryDescriptionsConnectSettings {
  VpcId: String
  SubnetIds: [String]
  CustomerUserName: String
  SecurityGroupId: String
  AvailabilityZones: [String]
  ConnectIps: [String]
}

type AwsDirectoryserviceDescribeDirectoriesOutputDirectoryDescriptionsVpcSettings {
  VpcId: String
  SubnetIds: [String]
  SecurityGroupId: String
  AvailabilityZones: [String]
}

input AwsDirectoryserviceDescribeDomainControllersInput {
  DirectoryId: String!
  DomainControllerIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryserviceDescribeDomainControllersOutput {
  DomainControllers: [AwsDirectoryserviceDescribeDomainControllersOutputDomainControllers]
  NextToken: String
}

type AwsDirectoryserviceDescribeDomainControllersOutputDomainControllers {
  DirectoryId: String
  DomainControllerId: String
  DnsIpAddr: String
  VpcId: String
  SubnetId: String
  AvailabilityZone: String
  Status: String
  StatusReason: String
  LaunchTime: Date
  StatusLastUpdatedDateTime: Date
}

input AwsDirectoryserviceDescribeEventTopicsInput {
  DirectoryId: String
  TopicNames: [String]
}

type AwsDirectoryserviceDescribeEventTopicsOutput {
  EventTopics: [AwsDirectoryserviceDescribeEventTopicsOutputEventTopics]
}

type AwsDirectoryserviceDescribeEventTopicsOutputEventTopics {
  DirectoryId: String
  TopicName: String
  TopicArn: String
  CreatedDateTime: Date
  Status: String
}

input AwsDirectoryserviceDescribeSnapshotsInput {
  DirectoryId: String
  SnapshotIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryserviceDescribeSnapshotsOutput {
  Snapshots: [AwsDirectoryserviceDescribeSnapshotsOutputSnapshots]
  NextToken: String
}

type AwsDirectoryserviceDescribeSnapshotsOutputSnapshots {
  DirectoryId: String
  SnapshotId: String
  Type: String
  Name: String
  Status: String
  StartTime: Date
}

input AwsDirectoryserviceDescribeTrustsInput {
  DirectoryId: String
  TrustIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryserviceDescribeTrustsOutput {
  Trusts: [AwsDirectoryserviceDescribeTrustsOutputTrusts]
  NextToken: String
}

type AwsDirectoryserviceDescribeTrustsOutputTrusts {
  DirectoryId: String
  TrustId: String
  RemoteDomainName: String
  TrustType: String
  TrustDirection: String
  TrustState: String
  CreatedDateTime: Date
  LastUpdatedDateTime: Date
  StateLastUpdatedDateTime: Date
  TrustStateReason: String
}

input AwsDirectoryserviceDisableRadiusInput {
  DirectoryId: String!
}

input AwsDirectoryserviceDisableSsoInput {
  DirectoryId: String!
  UserName: String
  Password: String
}

input AwsDirectoryserviceEnableRadiusInput {
  DirectoryId: String!
  RadiusSettings: AwsDirectoryserviceS2tInput!
}

input AwsDirectoryserviceEnableSsoInput {
  DirectoryId: String!
  UserName: String
  Password: String
}

type AwsDirectoryserviceGetDirectoryLimitsOutput {
  DirectoryLimits: AwsDirectoryserviceGetDirectoryLimitsOutputDirectoryLimits
}

type AwsDirectoryserviceGetDirectoryLimitsOutputDirectoryLimits {
  CloudOnlyDirectoriesLimit: Int
  CloudOnlyDirectoriesCurrentCount: Int
  CloudOnlyDirectoriesLimitReached: Boolean
  CloudOnlyMicrosoftADLimit: Int
  CloudOnlyMicrosoftADCurrentCount: Int
  CloudOnlyMicrosoftADLimitReached: Boolean
  ConnectedDirectoriesLimit: Int
  ConnectedDirectoriesCurrentCount: Int
  ConnectedDirectoriesLimitReached: Boolean
}

input AwsDirectoryserviceGetSnapshotLimitsInput {
  DirectoryId: String!
}

type AwsDirectoryserviceGetSnapshotLimitsOutput {
  SnapshotLimits: AwsDirectoryserviceGetSnapshotLimitsOutputSnapshotLimits
}

type AwsDirectoryserviceGetSnapshotLimitsOutputSnapshotLimits {
  ManualSnapshotsLimit: Int
  ManualSnapshotsCurrentCount: Int
  ManualSnapshotsLimitReached: Boolean
}

input AwsDirectoryserviceListIpRoutesInput {
  DirectoryId: String!
  NextToken: String
  Limit: Int
}

type AwsDirectoryserviceListIpRoutesOutput {
  IpRoutesInfo: [AwsDirectoryserviceListIpRoutesOutputIpRoutesInfo]
  NextToken: String
}

type AwsDirectoryserviceListIpRoutesOutputIpRoutesInfo {
  DirectoryId: String
  CidrIp: String
  IpRouteStatusMsg: String
  AddedDateTime: Date
  IpRouteStatusReason: String
  Description: String
}

input AwsDirectoryserviceListSchemaExtensionsInput {
  DirectoryId: String!
  NextToken: String
  Limit: Int
}

type AwsDirectoryserviceListSchemaExtensionsOutput {
  SchemaExtensionsInfo: [AwsDirectoryserviceListSchemaExtensionsOutputSchemaExtensionsInfo]
  NextToken: String
}

type AwsDirectoryserviceListSchemaExtensionsOutputSchemaExtensionsInfo {
  DirectoryId: String
  SchemaExtensionId: String
  Description: String
  SchemaExtensionStatus: String
  SchemaExtensionStatusReason: String
  StartDateTime: Date
  EndDateTime: Date
}

input AwsDirectoryserviceListTagsForResourceInput {
  ResourceId: String!
  NextToken: String
  Limit: Int
}

type AwsDirectoryserviceListTagsForResourceOutput {
  Tags: [AwsDirectoryserviceSb]
  NextToken: String
}

input AwsDirectoryserviceRegisterEventTopicInput {
  DirectoryId: String!
  TopicName: String!
}

input AwsDirectoryserviceRemoveIpRoutesInput {
  DirectoryId: String!
  CidrIps: [String]!
}

input AwsDirectoryserviceRemoveTagsFromResourceInput {
  ResourceId: String!
  TagKeys: [String]!
}

input AwsDirectoryserviceRestoreFromSnapshotInput {
  SnapshotId: String!
}

type AwsDirectoryserviceS13 {
  Name: String
  Value: String
}

input AwsDirectoryserviceS13Input {
  Name: String
  Value: String
}

input AwsDirectoryserviceS1fInput {
  VpcId: String!
  SubnetIds: [String]!
}

type AwsDirectoryserviceS2t {
  RadiusServers: [String]
  RadiusPort: Int
  RadiusTimeout: Int
  RadiusRetries: Int
  SharedSecret: String
  AuthenticationProtocol: String
  DisplayLabel: String
  UseSameUsername: Boolean
}

input AwsDirectoryserviceS2tInput {
  RadiusServers: [String]
  RadiusPort: Int
  RadiusTimeout: Int
  RadiusRetries: Int
  SharedSecret: String
  AuthenticationProtocol: String
  DisplayLabel: String
  UseSameUsername: Boolean
}

type AwsDirectoryserviceSb {
  Key: String!
  Value: String!
}

input AwsDirectoryserviceSbInput {
  Key: String!
  Value: String!
}

input AwsDirectoryserviceStartSchemaExtensionInput {
  DirectoryId: String!
  CreateSnapshotBeforeSchemaExtension: Boolean!
  LdifContent: String!
  Description: String!
}

type AwsDirectoryserviceStartSchemaExtensionOutput {
  SchemaExtensionId: String
}

input AwsDirectoryserviceUpdateConditionalForwarderInput {
  DirectoryId: String!
  RemoteDomainName: String!
  DnsIpAddrs: [String]!
}

input AwsDirectoryserviceUpdateNumberOfDomainControllersInput {
  DirectoryId: String!
  DesiredNumber: Int!
}

input AwsDirectoryserviceUpdateRadiusInput {
  DirectoryId: String!
  RadiusSettings: AwsDirectoryserviceS2tInput!
}

input AwsDirectoryserviceVerifyTrustInput {
  TrustId: String!
}

type AwsDirectoryserviceVerifyTrustOutput {
  TrustId: String
}

# AWS Application Discovery Service (2015-11-01)
type AwsDiscovery {
  # discovery.AssociateConfigurationItemsToApplication
  AssociateConfigurationItemsToApplication(input: AwsDiscoveryAssociateConfigurationItemsToApplicationInput!): JSON

  # discovery.CreateApplication
  CreateApplication(input: AwsDiscoveryCreateApplicationInput!): AwsDiscoveryCreateApplicationOutput

  # discovery.CreateTags
  CreateTags(input: AwsDiscoveryCreateTagsInput!): JSON

  # discovery.DeleteApplications
  DeleteApplications(input: AwsDiscoveryDeleteApplicationsInput!): JSON

  # discovery.DeleteTags
  DeleteTags(input: AwsDiscoveryDeleteTagsInput!): JSON

  # discovery.DescribeAgents
  DescribeAgents(input: AwsDiscoveryDescribeAgentsInput): AwsDiscoveryDescribeAgentsOutput

  # discovery.DescribeConfigurations
  DescribeConfigurations(input: AwsDiscoveryDescribeConfigurationsInput!): AwsDiscoveryDescribeConfigurationsOutput

  # discovery.DescribeExportConfigurations
  DescribeExportConfigurations(input: AwsDiscoveryDescribeExportConfigurationsInput): AwsDiscoveryDescribeExportConfigurationsOutput

  # discovery.DescribeExportTasks
  DescribeExportTasks(input: AwsDiscoveryDescribeExportTasksInput): AwsDiscoveryDescribeExportTasksOutput

  # discovery.DescribeTags
  DescribeTags(input: AwsDiscoveryDescribeTagsInput): AwsDiscoveryDescribeTagsOutput

  # discovery.DisassociateConfigurationItemsFromApplication
  DisassociateConfigurationItemsFromApplication(input: AwsDiscoveryDisassociateConfigurationItemsFromApplicationInput!): JSON

  # discovery.ExportConfigurations
  ExportConfigurations: AwsDiscoveryExportConfigurationsOutput

  # discovery.GetDiscoverySummary
  GetDiscoverySummary(input: JSON): AwsDiscoveryGetDiscoverySummaryOutput

  # discovery.ListConfigurations
  ListConfigurations(input: AwsDiscoveryListConfigurationsInput!): AwsDiscoveryListConfigurationsOutput

  # discovery.ListServerNeighbors
  ListServerNeighbors(input: AwsDiscoveryListServerNeighborsInput!): AwsDiscoveryListServerNeighborsOutput

  # discovery.StartDataCollectionByAgentIds
  StartDataCollectionByAgentIds(input: AwsDiscoveryStartDataCollectionByAgentIdsInput!): AwsDiscoveryStartDataCollectionByAgentIdsOutput

  # discovery.StartExportTask
  StartExportTask(input: AwsDiscoveryStartExportTaskInput): AwsDiscoveryStartExportTaskOutput

  # discovery.StopDataCollectionByAgentIds
  StopDataCollectionByAgentIds(input: AwsDiscoveryStopDataCollectionByAgentIdsInput!): AwsDiscoveryStopDataCollectionByAgentIdsOutput

  # discovery.UpdateApplication
  UpdateApplication(input: AwsDiscoveryUpdateApplicationInput!): JSON
}

input AwsDiscoveryAssociateConfigurationItemsToApplicationInput {
  applicationConfigurationId: String!
  configurationIds: [String]!
}

input AwsDiscoveryCreateApplicationInput {
  name: String!
  description: String
}

type AwsDiscoveryCreateApplicationOutput {
  configurationId: String
}

input AwsDiscoveryCreateTagsInput {
  configurationIds: [String]!
  tags: [AwsDiscoverySaInput]!
}

input AwsDiscoveryDeleteApplicationsInput {
  configurationIds: [String]!
}

input AwsDiscoveryDeleteTagsInput {
  configurationIds: [String]!
  tags: [AwsDiscoverySaInput]
}

input AwsDiscoveryDescribeAgentsInput {
  agentIds: [String]
  filters: [AwsDiscoverySnInput]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeAgentsOutput {
  agentsInfo: [AwsDiscoveryDescribeAgentsOutputAgentsInfo]
  nextToken: String
}

type AwsDiscoveryDescribeAgentsOutputAgentsInfo {
  agentId: String
  hostName: String
  agentNetworkInfoList: [AwsDiscoveryDescribeAgentsOutputAgentsInfoAgentNetworkInfoList]
  connectorId: String
  version: String
  health: String
  lastHealthPingTime: String
  collectionStatus: String
  agentType: String
  registeredTime: String
}

type AwsDiscoveryDescribeAgentsOutputAgentsInfoAgentNetworkInfoList {
  ipAddress: String
  macAddress: String
}

input AwsDiscoveryDescribeConfigurationsInput {
  configurationIds: [String]!
}

type AwsDiscoveryDescribeConfigurationsOutput {
  configurations: [JSON]
}

input AwsDiscoveryDescribeExportConfigurationsInput {
  exportIds: [String]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeExportConfigurationsOutput {
  exportsInfo: [AwsDiscoveryS18]
  nextToken: String
}

input AwsDiscoveryDescribeExportTasksInput {
  exportIds: [String]
  filters: [AwsDiscoveryS1hInput]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeExportTasksOutput {
  exportsInfo: [AwsDiscoveryS18]
  nextToken: String
}

input AwsDiscoveryDescribeTagsFiltersInput {
  name: String!
  values: [String]!
}

input AwsDiscoveryDescribeTagsInput {
  filters: [AwsDiscoveryDescribeTagsFiltersInput]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeTagsOutput {
  tags: [AwsDiscoveryDescribeTagsOutputTags]
  nextToken: String
}

type AwsDiscoveryDescribeTagsOutputTags {
  configurationType: String
  configurationId: String
  key: String
  value: String
  timeOfCreation: Date
}

input AwsDiscoveryDisassociateConfigurationItemsFromApplicationInput {
  applicationConfigurationId: String!
  configurationIds: [String]!
}

type AwsDiscoveryExportConfigurationsOutput {
  exportId: String
}

type AwsDiscoveryGetDiscoverySummaryOutput {
  servers: JSON
  applications: JSON
  serversMappedToApplications: JSON
  serversMappedtoTags: JSON
  agentSummary: AwsDiscoveryGetDiscoverySummaryOutputAgentSummary
  connectorSummary: AwsDiscoveryGetDiscoverySummaryOutputConnectorSummary
}

type AwsDiscoveryGetDiscoverySummaryOutputAgentSummary {
  activeAgents: Int!
  healthyAgents: Int!
  blackListedAgents: Int!
  shutdownAgents: Int!
  unhealthyAgents: Int!
  totalAgents: Int!
  unknownAgents: Int!
}

type AwsDiscoveryGetDiscoverySummaryOutputConnectorSummary {
  activeConnectors: Int!
  healthyConnectors: Int!
  blackListedConnectors: Int!
  shutdownConnectors: Int!
  unhealthyConnectors: Int!
  totalConnectors: Int!
  unknownConnectors: Int!
}

input AwsDiscoveryListConfigurationsInput {
  configurationType: String!
  filters: [AwsDiscoverySnInput]
  maxResults: Int
  nextToken: String
  orderBy: [AwsDiscoveryListConfigurationsOrderByInput]
}

input AwsDiscoveryListConfigurationsOrderByInput {
  fieldName: String!
  sortOrder: String
}

type AwsDiscoveryListConfigurationsOutput {
  configurations: [JSON]
  nextToken: String
}

input AwsDiscoveryListServerNeighborsInput {
  configurationId: String!
  portInformationNeeded: Boolean
  neighborConfigurationIds: [String]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryListServerNeighborsOutput {
  neighbors: [AwsDiscoveryListServerNeighborsOutputNeighbors]!
  nextToken: String
  knownDependencyCount: JSON
}

type AwsDiscoveryListServerNeighborsOutputNeighbors {
  sourceServerId: String!
  destinationServerId: String!
  destinationPort: Int
  transportProtocol: String
  connectionsCount: JSON!
}

type AwsDiscoveryS18 {
  exportId: String!
  exportStatus: String!
  statusMessage: String!
  configurationsDownloadUrl: String
  exportRequestTime: Date!
  isTruncated: Boolean
  requestedStartTime: Date
  requestedEndTime: Date
}

input AwsDiscoveryS1hInput {
  name: String!
  values: [String]!
  condition: String!
}

type AwsDiscoveryS2e {
  agentId: String
  operationSucceeded: Boolean
  description: String
}

input AwsDiscoverySaInput {
  key: String!
  value: String!
}

input AwsDiscoverySnInput {
  name: String!
  values: [String]!
  condition: String!
}

input AwsDiscoveryStartDataCollectionByAgentIdsInput {
  agentIds: [String]!
}

type AwsDiscoveryStartDataCollectionByAgentIdsOutput {
  agentsConfigurationStatus: [AwsDiscoveryS2e]
}

input AwsDiscoveryStartExportTaskInput {
  exportDataFormat: [String]
  filters: [AwsDiscoveryS1hInput]
  startTime: Date
  endTime: Date
}

type AwsDiscoveryStartExportTaskOutput {
  exportId: String
}

input AwsDiscoveryStopDataCollectionByAgentIdsInput {
  agentIds: [String]!
}

type AwsDiscoveryStopDataCollectionByAgentIdsOutput {
  agentsConfigurationStatus: [AwsDiscoveryS2e]
}

input AwsDiscoveryUpdateApplicationInput {
  configurationId: String!
  name: String
  description: String
}

# AWS Database Migration Service (2016-01-01)
type AwsDms {
  # dms.AddTagsToResource
  AddTagsToResource(input: AwsDmsAddTagsToResourceInput!): JSON

  # dms.CreateEndpoint
  CreateEndpoint(input: AwsDmsCreateEndpointInput!): AwsDmsCreateEndpointOutput

  # dms.CreateEventSubscription
  CreateEventSubscription(input: AwsDmsCreateEventSubscriptionInput!): AwsDmsCreateEventSubscriptionOutput

  # dms.CreateReplicationInstance
  CreateReplicationInstance(input: AwsDmsCreateReplicationInstanceInput!): AwsDmsCreateReplicationInstanceOutput

  # dms.CreateReplicationSubnetGroup
  CreateReplicationSubnetGroup(input: AwsDmsCreateReplicationSubnetGroupInput!): AwsDmsCreateReplicationSubnetGroupOutput

  # dms.CreateReplicationTask
  CreateReplicationTask(input: AwsDmsCreateReplicationTaskInput!): AwsDmsCreateReplicationTaskOutput

  # dms.DeleteCertificate
  DeleteCertificate(input: AwsDmsDeleteCertificateInput!): AwsDmsDeleteCertificateOutput

  # dms.DeleteEndpoint
  DeleteEndpoint(input: AwsDmsDeleteEndpointInput!): AwsDmsDeleteEndpointOutput

  # dms.DeleteEventSubscription
  DeleteEventSubscription(input: AwsDmsDeleteEventSubscriptionInput!): AwsDmsDeleteEventSubscriptionOutput

  # dms.DeleteReplicationInstance
  DeleteReplicationInstance(input: AwsDmsDeleteReplicationInstanceInput!): AwsDmsDeleteReplicationInstanceOutput

  # dms.DeleteReplicationSubnetGroup
  DeleteReplicationSubnetGroup(input: AwsDmsDeleteReplicationSubnetGroupInput!): JSON

  # dms.DeleteReplicationTask
  DeleteReplicationTask(input: AwsDmsDeleteReplicationTaskInput!): AwsDmsDeleteReplicationTaskOutput

  # dms.DescribeAccountAttributes
  DescribeAccountAttributes(input: JSON): AwsDmsDescribeAccountAttributesOutput

  # dms.DescribeCertificates
  DescribeCertificates(input: AwsDmsDescribeCertificatesInput): AwsDmsDescribeCertificatesOutput

  # dms.DescribeConnections
  DescribeConnections(input: AwsDmsDescribeConnectionsInput): AwsDmsDescribeConnectionsOutput

  # dms.DescribeEndpointTypes
  DescribeEndpointTypes(input: AwsDmsDescribeEndpointTypesInput): AwsDmsDescribeEndpointTypesOutput

  # dms.DescribeEndpoints
  DescribeEndpoints(input: AwsDmsDescribeEndpointsInput): AwsDmsDescribeEndpointsOutput

  # dms.DescribeEventCategories
  DescribeEventCategories(input: AwsDmsDescribeEventCategoriesInput): AwsDmsDescribeEventCategoriesOutput

  # dms.DescribeEventSubscriptions
  DescribeEventSubscriptions(input: AwsDmsDescribeEventSubscriptionsInput): AwsDmsDescribeEventSubscriptionsOutput

  # dms.DescribeEvents
  DescribeEvents(input: AwsDmsDescribeEventsInput): AwsDmsDescribeEventsOutput

  # dms.DescribeOrderableReplicationInstances
  DescribeOrderableReplicationInstances(input: AwsDmsDescribeOrderableReplicationInstancesInput): AwsDmsDescribeOrderableReplicationInstancesOutput

  # dms.DescribeRefreshSchemasStatus
  DescribeRefreshSchemasStatus(input: AwsDmsDescribeRefreshSchemasStatusInput!): AwsDmsDescribeRefreshSchemasStatusOutput

  # dms.DescribeReplicationInstances
  DescribeReplicationInstances(input: AwsDmsDescribeReplicationInstancesInput): AwsDmsDescribeReplicationInstancesOutput

  # dms.DescribeReplicationSubnetGroups
  DescribeReplicationSubnetGroups(input: AwsDmsDescribeReplicationSubnetGroupsInput): AwsDmsDescribeReplicationSubnetGroupsOutput

  # dms.DescribeReplicationTaskAssessmentResults
  DescribeReplicationTaskAssessmentResults(input: AwsDmsDescribeReplicationTaskAssessmentResultsInput): AwsDmsDescribeReplicationTaskAssessmentResultsOutput

  # dms.DescribeReplicationTasks
  DescribeReplicationTasks(input: AwsDmsDescribeReplicationTasksInput): AwsDmsDescribeReplicationTasksOutput

  # dms.DescribeSchemas
  DescribeSchemas(input: AwsDmsDescribeSchemasInput!): AwsDmsDescribeSchemasOutput

  # dms.DescribeTableStatistics
  DescribeTableStatistics(input: AwsDmsDescribeTableStatisticsInput!): AwsDmsDescribeTableStatisticsOutput

  # dms.ImportCertificate
  ImportCertificate(input: AwsDmsImportCertificateInput!): AwsDmsImportCertificateOutput

  # dms.ListTagsForResource
  ListTagsForResource(input: AwsDmsListTagsForResourceInput!): AwsDmsListTagsForResourceOutput

  # dms.ModifyEndpoint
  ModifyEndpoint(input: AwsDmsModifyEndpointInput!): AwsDmsModifyEndpointOutput

  # dms.ModifyEventSubscription
  ModifyEventSubscription(input: AwsDmsModifyEventSubscriptionInput!): AwsDmsModifyEventSubscriptionOutput

  # dms.ModifyReplicationInstance
  ModifyReplicationInstance(input: AwsDmsModifyReplicationInstanceInput!): AwsDmsModifyReplicationInstanceOutput

  # dms.ModifyReplicationSubnetGroup
  ModifyReplicationSubnetGroup(input: AwsDmsModifyReplicationSubnetGroupInput!): AwsDmsModifyReplicationSubnetGroupOutput

  # dms.ModifyReplicationTask
  ModifyReplicationTask(input: AwsDmsModifyReplicationTaskInput!): AwsDmsModifyReplicationTaskOutput

  # dms.RefreshSchemas
  RefreshSchemas(input: AwsDmsRefreshSchemasInput!): AwsDmsRefreshSchemasOutput

  # dms.ReloadTables
  ReloadTables(input: AwsDmsReloadTablesInput!): AwsDmsReloadTablesOutput

  # dms.RemoveTagsFromResource
  RemoveTagsFromResource(input: AwsDmsRemoveTagsFromResourceInput!): JSON

  # dms.StartReplicationTask
  StartReplicationTask(input: AwsDmsStartReplicationTaskInput!): AwsDmsStartReplicationTaskOutput

  # dms.StartReplicationTaskAssessment
  StartReplicationTaskAssessment(input: AwsDmsStartReplicationTaskAssessmentInput!): AwsDmsStartReplicationTaskAssessmentOutput

  # dms.StopReplicationTask
  StopReplicationTask(input: AwsDmsStopReplicationTaskInput!): AwsDmsStopReplicationTaskOutput

  # dms.TestConnection
  TestConnection(input: AwsDmsTestConnectionInput!): AwsDmsTestConnectionOutput
}

input AwsDmsAddTagsToResourceInput {
  ResourceArn: String!
  Tags: [AwsDmsS3Input]!
}

input AwsDmsCreateEndpointInput {
  EndpointIdentifier: String!
  EndpointType: String!
  EngineName: String!
  Username: String
  Password: String
  ServerName: String
  Port: Int
  DatabaseName: String
  ExtraConnectionAttributes: String
  KmsKeyId: String
  Tags: [AwsDmsS3Input]
  CertificateArn: String
  SslMode: String
  DynamoDbSettings: AwsDmsSbInput
  S3Settings: AwsDmsScInput
  MongoDbSettings: AwsDmsSeInput
}

type AwsDmsCreateEndpointOutput {
  Endpoint: AwsDmsSj
}

input AwsDmsCreateEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String!
  SourceType: String
  EventCategories: [String]
  SourceIds: [String]
  Enabled: Boolean
  Tags: [AwsDmsS3Input]
}

type AwsDmsCreateEventSubscriptionOutput {
  EventSubscription: AwsDmsSp
}

input AwsDmsCreateReplicationInstanceInput {
  ReplicationInstanceIdentifier: String!
  AllocatedStorage: Int
  ReplicationInstanceClass: String!
  VpcSecurityGroupIds: [String]
  AvailabilityZone: String
  ReplicationSubnetGroupIdentifier: String
  PreferredMaintenanceWindow: String
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  Tags: [AwsDmsS3Input]
  KmsKeyId: String
  PubliclyAccessible: Boolean
}

type AwsDmsCreateReplicationInstanceOutput {
  ReplicationInstance: AwsDmsSu
}

input AwsDmsCreateReplicationSubnetGroupInput {
  ReplicationSubnetGroupIdentifier: String!
  ReplicationSubnetGroupDescription: String!
  SubnetIds: [String]!
  Tags: [AwsDmsS3Input]
}

type AwsDmsCreateReplicationSubnetGroupOutput {
  ReplicationSubnetGroup: AwsDmsSz
}

input AwsDmsCreateReplicationTaskInput {
  ReplicationTaskIdentifier: String!
  SourceEndpointArn: String!
  TargetEndpointArn: String!
  ReplicationInstanceArn: String!
  MigrationType: String!
  TableMappings: String!
  ReplicationTaskSettings: String
  CdcStartTime: Date
  Tags: [AwsDmsS3Input]
}

type AwsDmsCreateReplicationTaskOutput {
  ReplicationTask: AwsDmsS1c
}

input AwsDmsDeleteCertificateInput {
  CertificateArn: String!
}

type AwsDmsDeleteCertificateOutput {
  Certificate: AwsDmsS1h
}

input AwsDmsDeleteEndpointInput {
  EndpointArn: String!
}

type AwsDmsDeleteEndpointOutput {
  Endpoint: AwsDmsSj
}

input AwsDmsDeleteEventSubscriptionInput {
  SubscriptionName: String!
}

type AwsDmsDeleteEventSubscriptionOutput {
  EventSubscription: AwsDmsSp
}

input AwsDmsDeleteReplicationInstanceInput {
  ReplicationInstanceArn: String!
}

type AwsDmsDeleteReplicationInstanceOutput {
  ReplicationInstance: AwsDmsSu
}

input AwsDmsDeleteReplicationSubnetGroupInput {
  ReplicationSubnetGroupIdentifier: String!
}

input AwsDmsDeleteReplicationTaskInput {
  ReplicationTaskArn: String!
}

type AwsDmsDeleteReplicationTaskOutput {
  ReplicationTask: AwsDmsS1c
}

type AwsDmsDescribeAccountAttributesOutput {
  AccountQuotas: [AwsDmsDescribeAccountAttributesOutputAccountQuotas]
}

type AwsDmsDescribeAccountAttributesOutputAccountQuotas {
  AccountQuotaName: String
  Used: JSON
  Max: JSON
}

input AwsDmsDescribeCertificatesInput {
  Filters: [AwsDmsS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDmsDescribeCertificatesOutput {
  Marker: String
  Certificates: [AwsDmsS1h]
}

input AwsDmsDescribeConnectionsInput {
  Filters: [AwsDmsS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDmsDescribeConnectionsOutput {
  Marker: String
  Connections: [AwsDmsS26]
}

input AwsDmsDescribeEndpointsInput {
  Filters: [AwsDmsS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDmsDescribeEndpointsOutput {
  Marker: String
  Endpoints: [AwsDmsSj]
}

input AwsDmsDescribeEndpointTypesInput {
  Filters: [AwsDmsS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDmsDescribeEndpointTypesOutput {
  Marker: String
  SupportedEndpointTypes: [AwsDmsDescribeEndpointTypesOutputSupportedEndpointTypes]
}

type AwsDmsDescribeEndpointTypesOutputSupportedEndpointTypes {
  EngineName: String
  SupportsCDC: Boolean
  EndpointType: String
}

input AwsDmsDescribeEventCategoriesInput {
  SourceType: String
  Filters: [AwsDmsS1yInput]
}

type AwsDmsDescribeEventCategoriesOutput {
  EventCategoryGroupList: [AwsDmsDescribeEventCategoriesOutputEventCategoryGroupList]
}

type AwsDmsDescribeEventCategoriesOutputEventCategoryGroupList {
  SourceType: String
  EventCategories: [String]
}

input AwsDmsDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  EventCategories: [String]
  Filters: [AwsDmsS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDmsDescribeEventsOutput {
  Marker: String
  Events: [AwsDmsDescribeEventsOutputEvents]
}

type AwsDmsDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  EventCategories: [String]
  Date: Date
}

input AwsDmsDescribeEventSubscriptionsInput {
  SubscriptionName: String
  Filters: [AwsDmsS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDmsDescribeEventSubscriptionsOutput {
  Marker: String
  EventSubscriptionsList: [AwsDmsSp]
}

input AwsDmsDescribeOrderableReplicationInstancesInput {
  MaxRecords: Int
  Marker: String
}

type AwsDmsDescribeOrderableReplicationInstancesOutput {
  OrderableReplicationInstances: [AwsDmsDescribeOrderableReplicationInstancesOutputOrderableReplicationInstances]
  Marker: String
}

type AwsDmsDescribeOrderableReplicationInstancesOutputOrderableReplicationInstances {
  EngineVersion: String
  ReplicationInstanceClass: String
  StorageType: String
  MinAllocatedStorage: Int
  MaxAllocatedStorage: Int
  DefaultAllocatedStorage: Int
  IncludedAllocatedStorage: Int
}

input AwsDmsDescribeRefreshSchemasStatusInput {
  EndpointArn: String!
}

type AwsDmsDescribeRefreshSchemasStatusOutput {
  RefreshSchemasStatus: AwsDmsS2w
}

input AwsDmsDescribeReplicationInstancesInput {
  Filters: [AwsDmsS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDmsDescribeReplicationInstancesOutput {
  Marker: String
  ReplicationInstances: [AwsDmsSu]
}

input AwsDmsDescribeReplicationSubnetGroupsInput {
  Filters: [AwsDmsS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDmsDescribeReplicationSubnetGroupsOutput {
  Marker: String
  ReplicationSubnetGroups: [AwsDmsSz]
}

input AwsDmsDescribeReplicationTaskAssessmentResultsInput {
  ReplicationTaskArn: String
  MaxRecords: Int
  Marker: String
}

type AwsDmsDescribeReplicationTaskAssessmentResultsOutput {
  Marker: String
  BucketName: String
  ReplicationTaskAssessmentResults: [AwsDmsDescribeReplicationTaskAssessmentResultsOutputReplicationTaskAssessmentResults]
}

type AwsDmsDescribeReplicationTaskAssessmentResultsOutputReplicationTaskAssessmentResults {
  ReplicationTaskIdentifier: String
  ReplicationTaskArn: String
  ReplicationTaskLastAssessmentDate: Date
  AssessmentStatus: String
  AssessmentResultsFile: String
  AssessmentResults: String
  S3ObjectUrl: String
}

input AwsDmsDescribeReplicationTasksInput {
  Filters: [AwsDmsS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDmsDescribeReplicationTasksOutput {
  Marker: String
  ReplicationTasks: [AwsDmsS1c]
}

input AwsDmsDescribeSchemasInput {
  EndpointArn: String!
  MaxRecords: Int
  Marker: String
}

type AwsDmsDescribeSchemasOutput {
  Marker: String
  Schemas: [String]
}

input AwsDmsDescribeTableStatisticsInput {
  ReplicationTaskArn: String!
  MaxRecords: Int
  Marker: String
  Filters: [AwsDmsS1yInput]
}

type AwsDmsDescribeTableStatisticsOutput {
  ReplicationTaskArn: String
  TableStatistics: [AwsDmsDescribeTableStatisticsOutputTableStatistics]
  Marker: String
}

type AwsDmsDescribeTableStatisticsOutputTableStatistics {
  SchemaName: String
  TableName: String
  Inserts: JSON
  Deletes: JSON
  Updates: JSON
  Ddls: JSON
  FullLoadRows: JSON
  FullLoadCondtnlChkFailedRows: JSON
  FullLoadErrorRows: JSON
  LastUpdateTime: Date
  TableState: String
  ValidationPendingRecords: JSON
  ValidationFailedRecords: JSON
  ValidationSuspendedRecords: JSON
  ValidationState: String
}

input AwsDmsImportCertificateInput {
  CertificateIdentifier: String!
  CertificatePem: String
  CertificateWallet: JSON
  Tags: [AwsDmsS3Input]
}

type AwsDmsImportCertificateOutput {
  Certificate: AwsDmsS1h
}

input AwsDmsListTagsForResourceInput {
  ResourceArn: String!
}

type AwsDmsListTagsForResourceOutput {
  TagList: [AwsDmsS3]
}

input AwsDmsModifyEndpointInput {
  EndpointArn: String!
  EndpointIdentifier: String
  EndpointType: String
  EngineName: String
  Username: String
  Password: String
  ServerName: String
  Port: Int
  DatabaseName: String
  ExtraConnectionAttributes: String
  CertificateArn: String
  SslMode: String
  DynamoDbSettings: AwsDmsSbInput
  S3Settings: AwsDmsScInput
  MongoDbSettings: AwsDmsSeInput
}

type AwsDmsModifyEndpointOutput {
  Endpoint: AwsDmsSj
}

input AwsDmsModifyEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String
  SourceType: String
  EventCategories: [String]
  Enabled: Boolean
}

type AwsDmsModifyEventSubscriptionOutput {
  EventSubscription: AwsDmsSp
}

input AwsDmsModifyReplicationInstanceInput {
  ReplicationInstanceArn: String!
  AllocatedStorage: Int
  ApplyImmediately: Boolean
  ReplicationInstanceClass: String
  VpcSecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  MultiAZ: Boolean
  EngineVersion: String
  AllowMajorVersionUpgrade: Boolean
  AutoMinorVersionUpgrade: Boolean
  ReplicationInstanceIdentifier: String
}

type AwsDmsModifyReplicationInstanceOutput {
  ReplicationInstance: AwsDmsSu
}

input AwsDmsModifyReplicationSubnetGroupInput {
  ReplicationSubnetGroupIdentifier: String!
  ReplicationSubnetGroupDescription: String
  SubnetIds: [String]!
}

type AwsDmsModifyReplicationSubnetGroupOutput {
  ReplicationSubnetGroup: AwsDmsSz
}

input AwsDmsModifyReplicationTaskInput {
  ReplicationTaskArn: String!
  ReplicationTaskIdentifier: String
  MigrationType: String
  TableMappings: String
  ReplicationTaskSettings: String
  CdcStartTime: Date
}

type AwsDmsModifyReplicationTaskOutput {
  ReplicationTask: AwsDmsS1c
}

input AwsDmsRefreshSchemasInput {
  EndpointArn: String!
  ReplicationInstanceArn: String!
}

type AwsDmsRefreshSchemasOutput {
  RefreshSchemasStatus: AwsDmsS2w
}

input AwsDmsReloadTablesInput {
  ReplicationTaskArn: String!
  TablesToReload: [AwsDmsReloadTablesTablesToReloadInput]!
}

type AwsDmsReloadTablesOutput {
  ReplicationTaskArn: String
}

input AwsDmsReloadTablesTablesToReloadInput {
  SchemaName: String
  TableName: String
}

input AwsDmsRemoveTagsFromResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

type AwsDmsS1c {
  ReplicationTaskIdentifier: String
  SourceEndpointArn: String
  TargetEndpointArn: String
  ReplicationInstanceArn: String
  MigrationType: String
  TableMappings: String
  ReplicationTaskSettings: String
  Status: String
  LastFailureMessage: String
  StopReason: String
  ReplicationTaskCreationDate: Date
  ReplicationTaskStartDate: Date
  ReplicationTaskArn: String
  ReplicationTaskStats: AwsDmsS1cReplicationTaskStats
}

type AwsDmsS1cReplicationTaskStats {
  FullLoadProgressPercent: Int
  ElapsedTimeMillis: JSON
  TablesLoaded: Int
  TablesLoading: Int
  TablesQueued: Int
  TablesErrored: Int
}

type AwsDmsS1h {
  CertificateIdentifier: String
  CertificateCreationDate: Date
  CertificatePem: String
  CertificateWallet: JSON
  CertificateArn: String
  CertificateOwner: String
  ValidFromDate: Date
  ValidToDate: Date
  SigningAlgorithm: String
  KeyLength: Int
}

input AwsDmsS1yInput {
  Name: String!
  Values: [String]!
}

type AwsDmsS26 {
  ReplicationInstanceArn: String
  EndpointArn: String
  Status: String
  LastFailureMessage: String
  EndpointIdentifier: String
  ReplicationInstanceIdentifier: String
}

type AwsDmsS2w {
  EndpointArn: String
  ReplicationInstanceArn: String
  Status: String
  LastRefreshDate: Date
  LastFailureMessage: String
}

type AwsDmsS3 {
  Key: String
  Value: String
}

input AwsDmsS3Input {
  Key: String
  Value: String
}

type AwsDmsSb {
  ServiceAccessRoleArn: String!
}

input AwsDmsSbInput {
  ServiceAccessRoleArn: String!
}

type AwsDmsSc {
  ServiceAccessRoleArn: String
  ExternalTableDefinition: String
  CsvRowDelimiter: String
  CsvDelimiter: String
  BucketFolder: String
  BucketName: String
  CompressionType: String
}

input AwsDmsScInput {
  ServiceAccessRoleArn: String
  ExternalTableDefinition: String
  CsvRowDelimiter: String
  CsvDelimiter: String
  BucketFolder: String
  BucketName: String
  CompressionType: String
}

type AwsDmsSe {
  Username: String
  Password: String
  ServerName: String
  Port: Int
  DatabaseName: String
  AuthType: String
  AuthMechanism: String
  NestingLevel: String
  ExtractDocId: String
  DocsToInvestigate: String
  AuthSource: String
}

input AwsDmsSeInput {
  Username: String
  Password: String
  ServerName: String
  Port: Int
  DatabaseName: String
  AuthType: String
  AuthMechanism: String
  NestingLevel: String
  ExtractDocId: String
  DocsToInvestigate: String
  AuthSource: String
}

type AwsDmsSj {
  EndpointIdentifier: String
  EndpointType: String
  EngineName: String
  Username: String
  ServerName: String
  Port: Int
  DatabaseName: String
  ExtraConnectionAttributes: String
  Status: String
  KmsKeyId: String
  EndpointArn: String
  CertificateArn: String
  SslMode: String
  ExternalId: String
  DynamoDbSettings: AwsDmsSb
  S3Settings: AwsDmsSc
  MongoDbSettings: AwsDmsSe
}

type AwsDmsSp {
  CustomerAwsId: String
  CustSubscriptionId: String
  SnsTopicArn: String
  Status: String
  SubscriptionCreationTime: String
  SourceType: String
  SourceIdsList: [String]
  EventCategoriesList: [String]
  Enabled: Boolean
}

input AwsDmsStartReplicationTaskAssessmentInput {
  ReplicationTaskArn: String!
}

type AwsDmsStartReplicationTaskAssessmentOutput {
  ReplicationTask: AwsDmsS1c
}

input AwsDmsStartReplicationTaskInput {
  ReplicationTaskArn: String!
  StartReplicationTaskType: String!
  CdcStartTime: Date
}

type AwsDmsStartReplicationTaskOutput {
  ReplicationTask: AwsDmsS1c
}

input AwsDmsStopReplicationTaskInput {
  ReplicationTaskArn: String!
}

type AwsDmsStopReplicationTaskOutput {
  ReplicationTask: AwsDmsS1c
}

type AwsDmsSu {
  ReplicationInstanceIdentifier: String
  ReplicationInstanceClass: String
  ReplicationInstanceStatus: String
  AllocatedStorage: Int
  InstanceCreateTime: Date
  VpcSecurityGroups: [AwsDmsSuVpcSecurityGroups]
  AvailabilityZone: String
  ReplicationSubnetGroup: AwsDmsSz
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsDmsSuPendingModifiedValues
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  KmsKeyId: String
  ReplicationInstanceArn: String
  ReplicationInstancePublicIpAddress: String
  ReplicationInstancePrivateIpAddress: String
  ReplicationInstancePublicIpAddresses: [String]
  ReplicationInstancePrivateIpAddresses: [String]
  PubliclyAccessible: Boolean
  SecondaryAvailabilityZone: String
}

type AwsDmsSuPendingModifiedValues {
  ReplicationInstanceClass: String
  AllocatedStorage: Int
  MultiAZ: Boolean
  EngineVersion: String
}

type AwsDmsSuVpcSecurityGroups {
  VpcSecurityGroupId: String
  Status: String
}

type AwsDmsSz {
  ReplicationSubnetGroupIdentifier: String
  ReplicationSubnetGroupDescription: String
  VpcId: String
  SubnetGroupStatus: String
  Subnets: [AwsDmsSzSubnets]
}

type AwsDmsSzSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsDmsSzSubnetsSubnetAvailabilityZone
  SubnetStatus: String
}

type AwsDmsSzSubnetsSubnetAvailabilityZone {
  Name: String
}

input AwsDmsTestConnectionInput {
  ReplicationInstanceArn: String!
  EndpointArn: String!
}

type AwsDmsTestConnectionOutput {
  Connection: AwsDmsS26
}

# Amazon DynamoDB (2012-08-10)
type AwsDynamodb {
  # dynamodb.BatchGetItem
  BatchGetItem(input: AwsDynamodbBatchGetItemInput!): AwsDynamodbBatchGetItemOutput

  # dynamodb.BatchWriteItem
  BatchWriteItem(input: AwsDynamodbBatchWriteItemInput!): AwsDynamodbBatchWriteItemOutput

  # dynamodb.CreateBackup
  CreateBackup(input: AwsDynamodbCreateBackupInput!): AwsDynamodbCreateBackupOutput

  # dynamodb.CreateGlobalTable
  CreateGlobalTable(input: AwsDynamodbCreateGlobalTableInput!): AwsDynamodbCreateGlobalTableOutput

  # dynamodb.CreateTable
  CreateTable(input: AwsDynamodbCreateTableInput!): AwsDynamodbCreateTableOutput

  # dynamodb.DeleteBackup
  DeleteBackup(input: AwsDynamodbDeleteBackupInput!): AwsDynamodbDeleteBackupOutput

  # dynamodb.DeleteItem
  DeleteItem(input: AwsDynamodbDeleteItemInput!): AwsDynamodbDeleteItemOutput

  # dynamodb.DeleteTable
  DeleteTable(input: AwsDynamodbDeleteTableInput!): AwsDynamodbDeleteTableOutput

  # dynamodb.DescribeBackup
  DescribeBackup(input: AwsDynamodbDescribeBackupInput!): AwsDynamodbDescribeBackupOutput

  # dynamodb.DescribeContinuousBackups
  DescribeContinuousBackups(input: AwsDynamodbDescribeContinuousBackupsInput!): AwsDynamodbDescribeContinuousBackupsOutput

  # dynamodb.DescribeGlobalTable
  DescribeGlobalTable(input: AwsDynamodbDescribeGlobalTableInput!): AwsDynamodbDescribeGlobalTableOutput

  # dynamodb.DescribeLimits
  DescribeLimits(input: JSON): AwsDynamodbDescribeLimitsOutput

  # dynamodb.DescribeTable
  DescribeTable(input: AwsDynamodbDescribeTableInput!): AwsDynamodbDescribeTableOutput

  # dynamodb.DescribeTimeToLive
  DescribeTimeToLive(input: AwsDynamodbDescribeTimeToLiveInput!): AwsDynamodbDescribeTimeToLiveOutput

  # dynamodb.GetItem
  GetItem(input: AwsDynamodbGetItemInput!): AwsDynamodbGetItemOutput

  # dynamodb.ListBackups
  ListBackups(input: AwsDynamodbListBackupsInput): AwsDynamodbListBackupsOutput

  # dynamodb.ListGlobalTables
  ListGlobalTables(input: AwsDynamodbListGlobalTablesInput): AwsDynamodbListGlobalTablesOutput

  # dynamodb.ListTables
  ListTables(input: AwsDynamodbListTablesInput): AwsDynamodbListTablesOutput

  # dynamodb.ListTagsOfResource
  ListTagsOfResource(input: AwsDynamodbListTagsOfResourceInput!): AwsDynamodbListTagsOfResourceOutput

  # dynamodb.PutItem
  PutItem(input: AwsDynamodbPutItemInput!): AwsDynamodbPutItemOutput

  # dynamodb.Query
  Query(input: AwsDynamodbQueryInput!): AwsDynamodbQueryOutput

  # dynamodb.RestoreTableFromBackup
  RestoreTableFromBackup(input: AwsDynamodbRestoreTableFromBackupInput!): AwsDynamodbRestoreTableFromBackupOutput

  # dynamodb.Scan
  Scan(input: AwsDynamodbScanInput!): AwsDynamodbScanOutput

  # dynamodb.TagResource
  TagResource(input: AwsDynamodbTagResourceInput!): JSON

  # dynamodb.UntagResource
  UntagResource(input: AwsDynamodbUntagResourceInput!): JSON

  # dynamodb.UpdateGlobalTable
  UpdateGlobalTable(input: AwsDynamodbUpdateGlobalTableInput!): AwsDynamodbUpdateGlobalTableOutput

  # dynamodb.UpdateItem
  UpdateItem(input: AwsDynamodbUpdateItemInput!): AwsDynamodbUpdateItemOutput

  # dynamodb.UpdateTable
  UpdateTable(input: AwsDynamodbUpdateTableInput!): AwsDynamodbUpdateTableOutput

  # dynamodb.UpdateTimeToLive
  UpdateTimeToLive(input: AwsDynamodbUpdateTimeToLiveInput!): AwsDynamodbUpdateTimeToLiveOutput
}

input AwsDynamodbBatchGetItemInput {
  RequestItems: JSON!
  ReturnConsumedCapacity: String
}

type AwsDynamodbBatchGetItemOutput {
  Responses: JSON
  UnprocessedKeys: JSON
  ConsumedCapacity: [AwsDynamodbSu]
}

input AwsDynamodbBatchWriteItemInput {
  RequestItems: JSON!
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
}

type AwsDynamodbBatchWriteItemOutput {
  UnprocessedItems: JSON
  ItemCollectionMetrics: JSON
  ConsumedCapacity: [AwsDynamodbSu]
}

input AwsDynamodbCreateBackupInput {
  TableName: String!
  BackupName: String!
}

type AwsDynamodbCreateBackupOutput {
  BackupDetails: AwsDynamodbS1h
}

input AwsDynamodbCreateGlobalTableInput {
  GlobalTableName: String!
  ReplicationGroup: [AwsDynamodbS1nInput]!
}

type AwsDynamodbCreateGlobalTableOutput {
  GlobalTableDescription: AwsDynamodbS1r
}

input AwsDynamodbCreateTableGlobalSecondaryIndexesInput {
  IndexName: String!
  KeySchema: [AwsDynamodbS22Input]!
  Projection: AwsDynamodbS27Input!
  ProvisionedThroughput: AwsDynamodbS2dInput!
}

input AwsDynamodbCreateTableInput {
  AttributeDefinitions: [AwsDynamodbS1yInput]!
  TableName: String!
  KeySchema: [AwsDynamodbS22Input]!
  LocalSecondaryIndexes: [AwsDynamodbCreateTableLocalSecondaryIndexesInput]
  GlobalSecondaryIndexes: [AwsDynamodbCreateTableGlobalSecondaryIndexesInput]
  ProvisionedThroughput: AwsDynamodbS2dInput!
  StreamSpecification: AwsDynamodbS2fInput
}

input AwsDynamodbCreateTableLocalSecondaryIndexesInput {
  IndexName: String!
  KeySchema: [AwsDynamodbS22Input]!
  Projection: AwsDynamodbS27Input!
}

type AwsDynamodbCreateTableOutput {
  TableDescription: AwsDynamodbS2j
}

input AwsDynamodbDeleteBackupInput {
  BackupArn: String!
}

type AwsDynamodbDeleteBackupOutput {
  BackupDescription: AwsDynamodbS32
}

input AwsDynamodbDeleteItemInput {
  TableName: String!
  Key: JSON!
  Expected: JSON
  ConditionalOperator: String
  ReturnValues: String
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
  ConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
}

type AwsDynamodbDeleteItemOutput {
  Attributes: JSON
  ConsumedCapacity: AwsDynamodbSu
  ItemCollectionMetrics: AwsDynamodbS1a
}

input AwsDynamodbDeleteTableInput {
  TableName: String!
}

type AwsDynamodbDeleteTableOutput {
  TableDescription: AwsDynamodbS2j
}

input AwsDynamodbDescribeBackupInput {
  BackupArn: String!
}

type AwsDynamodbDescribeBackupOutput {
  BackupDescription: AwsDynamodbS32
}

input AwsDynamodbDescribeContinuousBackupsInput {
  TableName: String!
}

type AwsDynamodbDescribeContinuousBackupsOutput {
  ContinuousBackupsDescription: AwsDynamodbDescribeContinuousBackupsOutputContinuousBackupsDescription
}

type AwsDynamodbDescribeContinuousBackupsOutputContinuousBackupsDescription {
  ContinuousBackupsStatus: String!
}

input AwsDynamodbDescribeGlobalTableInput {
  GlobalTableName: String!
}

type AwsDynamodbDescribeGlobalTableOutput {
  GlobalTableDescription: AwsDynamodbS1r
}

type AwsDynamodbDescribeLimitsOutput {
  AccountMaxReadCapacityUnits: JSON
  AccountMaxWriteCapacityUnits: JSON
  TableMaxReadCapacityUnits: JSON
  TableMaxWriteCapacityUnits: JSON
}

input AwsDynamodbDescribeTableInput {
  TableName: String!
}

type AwsDynamodbDescribeTableOutput {
  Table: AwsDynamodbS2j
}

input AwsDynamodbDescribeTimeToLiveInput {
  TableName: String!
}

type AwsDynamodbDescribeTimeToLiveOutput {
  TimeToLiveDescription: AwsDynamodbS3b
}

input AwsDynamodbGetItemInput {
  TableName: String!
  Key: JSON!
  AttributesToGet: [String]
  ConsistentRead: Boolean
  ReturnConsumedCapacity: String
  ProjectionExpression: String
  ExpressionAttributeNames: JSON
}

type AwsDynamodbGetItemOutput {
  Item: JSON
  ConsumedCapacity: AwsDynamodbSu
}

input AwsDynamodbListBackupsInput {
  TableName: String
  Limit: Int
  TimeRangeLowerBound: Date
  TimeRangeUpperBound: Date
  ExclusiveStartBackupArn: String
}

type AwsDynamodbListBackupsOutput {
  BackupSummaries: [AwsDynamodbListBackupsOutputBackupSummaries]
  LastEvaluatedBackupArn: String
}

type AwsDynamodbListBackupsOutputBackupSummaries {
  TableName: String
  TableId: String
  TableArn: String
  BackupArn: String
  BackupName: String
  BackupCreationDateTime: Date
  BackupStatus: String
  BackupSizeBytes: JSON
}

input AwsDynamodbListGlobalTablesInput {
  ExclusiveStartGlobalTableName: String
  Limit: Int
  RegionName: String
}

type AwsDynamodbListGlobalTablesOutput {
  GlobalTables: [AwsDynamodbListGlobalTablesOutputGlobalTables]
  LastEvaluatedGlobalTableName: String
}

type AwsDynamodbListGlobalTablesOutputGlobalTables {
  GlobalTableName: String
  ReplicationGroup: [AwsDynamodbS1n]
}

input AwsDynamodbListTablesInput {
  ExclusiveStartTableName: String
  Limit: Int
}

type AwsDynamodbListTablesOutput {
  TableNames: [String]
  LastEvaluatedTableName: String
}

input AwsDynamodbListTagsOfResourceInput {
  ResourceArn: String!
  NextToken: String
}

type AwsDynamodbListTagsOfResourceOutput {
  Tags: [AwsDynamodbS4s]
  NextToken: String
}

input AwsDynamodbPutItemInput {
  TableName: String!
  Item: JSON!
  Expected: JSON
  ReturnValues: String
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
  ConditionalOperator: String
  ConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
}

type AwsDynamodbPutItemOutput {
  Attributes: JSON
  ConsumedCapacity: AwsDynamodbSu
  ItemCollectionMetrics: AwsDynamodbS1a
}

input AwsDynamodbQueryInput {
  TableName: String!
  IndexName: String
  Select: String
  AttributesToGet: [String]
  Limit: Int
  ConsistentRead: Boolean
  KeyConditions: JSON
  QueryFilter: JSON
  ConditionalOperator: String
  ScanIndexForward: Boolean
  ExclusiveStartKey: JSON
  ReturnConsumedCapacity: String
  ProjectionExpression: String
  FilterExpression: String
  KeyConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
}

type AwsDynamodbQueryOutput {
  Items: [JSON]
  Count: Int
  ScannedCount: Int
  LastEvaluatedKey: JSON
  ConsumedCapacity: AwsDynamodbSu
}

input AwsDynamodbRestoreTableFromBackupInput {
  TargetTableName: String!
  BackupArn: String!
}

type AwsDynamodbRestoreTableFromBackupOutput {
  TableDescription: AwsDynamodbS2j
}

type AwsDynamodbS1a {
  ItemCollectionKey: JSON
  SizeEstimateRangeGB: [JSON]
}

type AwsDynamodbS1h {
  BackupArn: String!
  BackupName: String!
  BackupSizeBytes: JSON
  BackupStatus: String!
  BackupCreationDateTime: Date!
}

type AwsDynamodbS1n {
  RegionName: String
}

input AwsDynamodbS1nInput {
  RegionName: String
}

type AwsDynamodbS1r {
  ReplicationGroup: [AwsDynamodbS1rReplicationGroup]
  GlobalTableArn: String
  CreationDateTime: Date
  GlobalTableStatus: String
  GlobalTableName: String
}

type AwsDynamodbS1rReplicationGroup {
  RegionName: String
}

type AwsDynamodbS1y {
  AttributeName: String!
  AttributeType: String!
}

input AwsDynamodbS1yInput {
  AttributeName: String!
  AttributeType: String!
}

type AwsDynamodbS22 {
  AttributeName: String!
  KeyType: String!
}

input AwsDynamodbS22Input {
  AttributeName: String!
  KeyType: String!
}

type AwsDynamodbS27 {
  ProjectionType: String
  NonKeyAttributes: [String]
}

input AwsDynamodbS27Input {
  ProjectionType: String
  NonKeyAttributes: [String]
}

type AwsDynamodbS2d {
  ReadCapacityUnits: JSON!
  WriteCapacityUnits: JSON!
}

input AwsDynamodbS2dInput {
  ReadCapacityUnits: JSON!
  WriteCapacityUnits: JSON!
}

type AwsDynamodbS2f {
  StreamEnabled: Boolean
  StreamViewType: String
}

input AwsDynamodbS2fInput {
  StreamEnabled: Boolean
  StreamViewType: String
}

type AwsDynamodbS2j {
  AttributeDefinitions: [AwsDynamodbS1y]
  TableName: String
  KeySchema: [AwsDynamodbS22]
  TableStatus: String
  CreationDateTime: Date
  ProvisionedThroughput: AwsDynamodbS2l
  TableSizeBytes: JSON
  ItemCount: JSON
  TableArn: String
  TableId: String
  LocalSecondaryIndexes: [AwsDynamodbS2jLocalSecondaryIndexes]
  GlobalSecondaryIndexes: [AwsDynamodbS2jGlobalSecondaryIndexes]
  StreamSpecification: AwsDynamodbS2f
  LatestStreamLabel: String
  LatestStreamArn: String
  RestoreSummary: AwsDynamodbS2jRestoreSummary
}

type AwsDynamodbS2jGlobalSecondaryIndexes {
  IndexName: String
  KeySchema: [AwsDynamodbS22]
  Projection: AwsDynamodbS27
  IndexStatus: String
  Backfilling: Boolean
  ProvisionedThroughput: AwsDynamodbS2l
  IndexSizeBytes: JSON
  ItemCount: JSON
  IndexArn: String
}

type AwsDynamodbS2jLocalSecondaryIndexes {
  IndexName: String
  KeySchema: [AwsDynamodbS22]
  Projection: AwsDynamodbS27
  IndexSizeBytes: JSON
  ItemCount: JSON
  IndexArn: String
}

type AwsDynamodbS2jRestoreSummary {
  SourceBackupArn: String
  SourceTableArn: String
  RestoreDateTime: Date!
  RestoreInProgress: Boolean!
}

type AwsDynamodbS2l {
  LastIncreaseDateTime: Date
  LastDecreaseDateTime: Date
  NumberOfDecreasesToday: JSON
  ReadCapacityUnits: JSON
  WriteCapacityUnits: JSON
}

type AwsDynamodbS32 {
  BackupDetails: AwsDynamodbS1h
  SourceTableDetails: AwsDynamodbS32SourceTableDetails
  SourceTableFeatureDetails: AwsDynamodbS32SourceTableFeatureDetails
}

type AwsDynamodbS32SourceTableDetails {
  TableName: String!
  TableId: String!
  TableArn: String
  TableSizeBytes: JSON
  KeySchema: [AwsDynamodbS22]!
  TableCreationDateTime: Date!
  ProvisionedThroughput: AwsDynamodbS2d!
  ItemCount: JSON
}

type AwsDynamodbS32SourceTableFeatureDetails {
  LocalSecondaryIndexes: [AwsDynamodbS32SourceTableFeatureDetailsLocalSecondaryIndexes]
  GlobalSecondaryIndexes: [AwsDynamodbS32SourceTableFeatureDetailsGlobalSecondaryIndexes]
  StreamDescription: AwsDynamodbS2f
  TimeToLiveDescription: AwsDynamodbS3b
}

type AwsDynamodbS32SourceTableFeatureDetailsGlobalSecondaryIndexes {
  IndexName: String
  KeySchema: [AwsDynamodbS22]
  Projection: AwsDynamodbS27
  ProvisionedThroughput: AwsDynamodbS2d
}

type AwsDynamodbS32SourceTableFeatureDetailsLocalSecondaryIndexes {
  IndexName: String
  KeySchema: [AwsDynamodbS22]
  Projection: AwsDynamodbS27
}

type AwsDynamodbS3b {
  TimeToLiveStatus: String
  AttributeName: String
}

type AwsDynamodbS4s {
  Key: String!
  Value: String!
}

input AwsDynamodbS4sInput {
  Key: String!
  Value: String!
}

type AwsDynamodbS5z {
  Enabled: Boolean!
  AttributeName: String!
}

input AwsDynamodbS5zInput {
  Enabled: Boolean!
  AttributeName: String!
}

input AwsDynamodbScanInput {
  TableName: String!
  IndexName: String
  AttributesToGet: [String]
  Limit: Int
  Select: String
  ScanFilter: JSON
  ConditionalOperator: String
  ExclusiveStartKey: JSON
  ReturnConsumedCapacity: String
  TotalSegments: Int
  Segment: Int
  ProjectionExpression: String
  FilterExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
  ConsistentRead: Boolean
}

type AwsDynamodbScanOutput {
  Items: [JSON]
  Count: Int
  ScannedCount: Int
  LastEvaluatedKey: JSON
  ConsumedCapacity: AwsDynamodbSu
}

# Amazon DynamoDB Streams (2012-08-10)
type AwsDynamodbstreams {
  # dynamodbstreams.DescribeStream
  DescribeStream(input: AwsDynamodbstreamsDescribeStreamInput!): AwsDynamodbstreamsDescribeStreamOutput

  # dynamodbstreams.GetRecords
  GetRecords(input: AwsDynamodbstreamsGetRecordsInput!): AwsDynamodbstreamsGetRecordsOutput

  # dynamodbstreams.GetShardIterator
  GetShardIterator(input: AwsDynamodbstreamsGetShardIteratorInput!): AwsDynamodbstreamsGetShardIteratorOutput

  # dynamodbstreams.ListStreams
  ListStreams(input: AwsDynamodbstreamsListStreamsInput): AwsDynamodbstreamsListStreamsOutput
}

input AwsDynamodbstreamsDescribeStreamInput {
  StreamArn: String!
  Limit: Int
  ExclusiveStartShardId: String
}

type AwsDynamodbstreamsDescribeStreamOutput {
  StreamDescription: AwsDynamodbstreamsDescribeStreamOutputStreamDescription
}

type AwsDynamodbstreamsDescribeStreamOutputStreamDescription {
  StreamArn: String
  StreamLabel: String
  StreamStatus: String
  StreamViewType: String
  CreationRequestDateTime: Date
  TableName: String
  KeySchema: [AwsDynamodbstreamsDescribeStreamOutputStreamDescriptionKeySchema]
  Shards: [AwsDynamodbstreamsDescribeStreamOutputStreamDescriptionShards]
  LastEvaluatedShardId: String
}

type AwsDynamodbstreamsDescribeStreamOutputStreamDescriptionKeySchema {
  AttributeName: String!
  KeyType: String!
}

type AwsDynamodbstreamsDescribeStreamOutputStreamDescriptionShards {
  ShardId: String
  SequenceNumberRange: AwsDynamodbstreamsDescribeStreamOutputStreamDescriptionShardsSequenceNumberRange
  ParentShardId: String
}

type AwsDynamodbstreamsDescribeStreamOutputStreamDescriptionShardsSequenceNumberRange {
  StartingSequenceNumber: String
  EndingSequenceNumber: String
}

input AwsDynamodbstreamsGetRecordsInput {
  ShardIterator: String!
  Limit: Int
}

type AwsDynamodbstreamsGetRecordsOutput {
  Records: [AwsDynamodbstreamsGetRecordsOutputRecords]
  NextShardIterator: String
}

type AwsDynamodbstreamsGetRecordsOutputRecords {
  eventID: String
  eventName: String
  eventVersion: String
  eventSource: String
  awsRegion: String
  dynamodb: AwsDynamodbstreamsGetRecordsOutputRecordsDynamodb
  userIdentity: AwsDynamodbstreamsGetRecordsOutputRecordsUserIdentity
}

type AwsDynamodbstreamsGetRecordsOutputRecordsDynamodb {
  ApproximateCreationDateTime: Date
  Keys: JSON
  NewImage: JSON
  OldImage: JSON
  SequenceNumber: String
  SizeBytes: JSON
  StreamViewType: String
}

type AwsDynamodbstreamsGetRecordsOutputRecordsUserIdentity {
  PrincipalId: String
  Type: String
}

input AwsDynamodbstreamsGetShardIteratorInput {
  StreamArn: String!
  ShardId: String!
  ShardIteratorType: String!
  SequenceNumber: String
}

type AwsDynamodbstreamsGetShardIteratorOutput {
  ShardIterator: String
}

input AwsDynamodbstreamsListStreamsInput {
  TableName: String
  Limit: Int
  ExclusiveStartStreamArn: String
}

type AwsDynamodbstreamsListStreamsOutput {
  Streams: [AwsDynamodbstreamsListStreamsOutputStreams]
  LastEvaluatedStreamArn: String
}

type AwsDynamodbstreamsListStreamsOutputStreams {
  StreamArn: String
  TableName: String
  StreamLabel: String
}

type AwsDynamodbSu {
  TableName: String
  CapacityUnits: JSON
  Table: AwsDynamodbSw
  LocalSecondaryIndexes: JSON
  GlobalSecondaryIndexes: JSON
}

type AwsDynamodbSw {
  CapacityUnits: JSON
}

input AwsDynamodbTagResourceInput {
  ResourceArn: String!
  Tags: [AwsDynamodbS4sInput]!
}

input AwsDynamodbUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsDynamodbUpdateGlobalTableInput {
  GlobalTableName: String!
  ReplicaUpdates: [AwsDynamodbUpdateGlobalTableReplicaUpdatesInput]!
}

type AwsDynamodbUpdateGlobalTableOutput {
  GlobalTableDescription: AwsDynamodbS1r
}

input AwsDynamodbUpdateGlobalTableReplicaUpdatesCreateInput {
  RegionName: String!
}

input AwsDynamodbUpdateGlobalTableReplicaUpdatesDeleteInput {
  RegionName: String!
}

input AwsDynamodbUpdateGlobalTableReplicaUpdatesInput {
  Create: AwsDynamodbUpdateGlobalTableReplicaUpdatesCreateInput
  Delete: AwsDynamodbUpdateGlobalTableReplicaUpdatesDeleteInput
}

input AwsDynamodbUpdateItemInput {
  TableName: String!
  Key: JSON!
  AttributeUpdates: JSON
  Expected: JSON
  ConditionalOperator: String
  ReturnValues: String
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
  UpdateExpression: String
  ConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
}

type AwsDynamodbUpdateItemOutput {
  Attributes: JSON
  ConsumedCapacity: AwsDynamodbSu
  ItemCollectionMetrics: AwsDynamodbS1a
}

input AwsDynamodbUpdateTableGlobalSecondaryIndexUpdatesCreateInput {
  IndexName: String!
  KeySchema: [AwsDynamodbS22Input]!
  Projection: AwsDynamodbS27Input!
  ProvisionedThroughput: AwsDynamodbS2dInput!
}

input AwsDynamodbUpdateTableGlobalSecondaryIndexUpdatesDeleteInput {
  IndexName: String!
}

input AwsDynamodbUpdateTableGlobalSecondaryIndexUpdatesInput {
  Update: AwsDynamodbUpdateTableGlobalSecondaryIndexUpdatesUpdateInput
  Create: AwsDynamodbUpdateTableGlobalSecondaryIndexUpdatesCreateInput
  Delete: AwsDynamodbUpdateTableGlobalSecondaryIndexUpdatesDeleteInput
}

input AwsDynamodbUpdateTableGlobalSecondaryIndexUpdatesUpdateInput {
  IndexName: String!
  ProvisionedThroughput: AwsDynamodbS2dInput!
}

input AwsDynamodbUpdateTableInput {
  AttributeDefinitions: [AwsDynamodbS1yInput]
  TableName: String!
  ProvisionedThroughput: AwsDynamodbS2dInput
  GlobalSecondaryIndexUpdates: [AwsDynamodbUpdateTableGlobalSecondaryIndexUpdatesInput]
  StreamSpecification: AwsDynamodbS2fInput
}

type AwsDynamodbUpdateTableOutput {
  TableDescription: AwsDynamodbS2j
}

input AwsDynamodbUpdateTimeToLiveInput {
  TableName: String!
  TimeToLiveSpecification: AwsDynamodbS5zInput!
}

type AwsDynamodbUpdateTimeToLiveOutput {
  TimeToLiveSpecification: AwsDynamodbS5z
}

# Amazon Elastic Compute Cloud (2016-11-15)
type AwsEc2 {
  # ec2.AcceptReservedInstancesExchangeQuote
  AcceptReservedInstancesExchangeQuote(input: AwsEc2AcceptReservedInstancesExchangeQuoteInput!): AwsEc2AcceptReservedInstancesExchangeQuoteOutput

  # ec2.AcceptVpcEndpointConnections
  AcceptVpcEndpointConnections(input: AwsEc2AcceptVpcEndpointConnectionsInput!): AwsEc2AcceptVpcEndpointConnectionsOutput

  # ec2.AcceptVpcPeeringConnection
  AcceptVpcPeeringConnection(input: AwsEc2AcceptVpcPeeringConnectionInput): AwsEc2AcceptVpcPeeringConnectionOutput

  # ec2.AllocateAddress
  AllocateAddress(input: AwsEc2AllocateAddressInput): AwsEc2AllocateAddressOutput

  # ec2.AllocateHosts
  AllocateHosts(input: AwsEc2AllocateHostsInput!): AwsEc2AllocateHostsOutput

  # ec2.AssignIpv6Addresses
  AssignIpv6Addresses(input: AwsEc2AssignIpv6AddressesInput!): AwsEc2AssignIpv6AddressesOutput

  # ec2.AssignPrivateIpAddresses
  AssignPrivateIpAddresses(input: AwsEc2AssignPrivateIpAddressesInput!): JSON

  # ec2.AssociateAddress
  AssociateAddress(input: AwsEc2AssociateAddressInput): AwsEc2AssociateAddressOutput

  # ec2.AssociateDhcpOptions
  AssociateDhcpOptions(input: AwsEc2AssociateDhcpOptionsInput!): JSON

  # ec2.AssociateIamInstanceProfile
  AssociateIamInstanceProfile(input: AwsEc2AssociateIamInstanceProfileInput!): AwsEc2AssociateIamInstanceProfileOutput

  # ec2.AssociateRouteTable
  AssociateRouteTable(input: AwsEc2AssociateRouteTableInput!): AwsEc2AssociateRouteTableOutput

  # ec2.AssociateSubnetCidrBlock
  AssociateSubnetCidrBlock(input: AwsEc2AssociateSubnetCidrBlockInput!): AwsEc2AssociateSubnetCidrBlockOutput

  # ec2.AssociateVpcCidrBlock
  AssociateVpcCidrBlock(input: AwsEc2AssociateVpcCidrBlockInput!): AwsEc2AssociateVpcCidrBlockOutput

  # ec2.AttachClassicLinkVpc
  AttachClassicLinkVpc(input: AwsEc2AttachClassicLinkVpcInput!): AwsEc2AttachClassicLinkVpcOutput

  # ec2.AttachInternetGateway
  AttachInternetGateway(input: AwsEc2AttachInternetGatewayInput!): JSON

  # ec2.AttachNetworkInterface
  AttachNetworkInterface(input: AwsEc2AttachNetworkInterfaceInput!): AwsEc2AttachNetworkInterfaceOutput

  # ec2.AttachVolume
  AttachVolume(input: AwsEc2AttachVolumeInput!): JSON

  # ec2.AttachVpnGateway
  AttachVpnGateway(input: AwsEc2AttachVpnGatewayInput!): AwsEc2AttachVpnGatewayOutput

  # ec2.AuthorizeSecurityGroupEgress
  AuthorizeSecurityGroupEgress(input: AwsEc2AuthorizeSecurityGroupEgressInput!): JSON

  # ec2.AuthorizeSecurityGroupIngress
  AuthorizeSecurityGroupIngress(input: AwsEc2AuthorizeSecurityGroupIngressInput): JSON

  # ec2.BundleInstance
  BundleInstance(input: AwsEc2BundleInstanceInput!): AwsEc2BundleInstanceOutput

  # ec2.CancelBundleTask
  CancelBundleTask(input: AwsEc2CancelBundleTaskInput!): AwsEc2CancelBundleTaskOutput

  # ec2.CancelConversionTask
  CancelConversionTask(input: AwsEc2CancelConversionTaskInput!): JSON

  # ec2.CancelExportTask
  CancelExportTask(input: AwsEc2CancelExportTaskInput!): JSON

  # ec2.CancelImportTask
  CancelImportTask(input: AwsEc2CancelImportTaskInput): AwsEc2CancelImportTaskOutput

  # ec2.CancelReservedInstancesListing
  CancelReservedInstancesListing(input: AwsEc2CancelReservedInstancesListingInput!): AwsEc2CancelReservedInstancesListingOutput

  # ec2.CancelSpotFleetRequests
  CancelSpotFleetRequests(input: AwsEc2CancelSpotFleetRequestsInput!): AwsEc2CancelSpotFleetRequestsOutput

  # ec2.CancelSpotInstanceRequests
  CancelSpotInstanceRequests(input: AwsEc2CancelSpotInstanceRequestsInput!): AwsEc2CancelSpotInstanceRequestsOutput

  # ec2.ConfirmProductInstance
  ConfirmProductInstance(input: AwsEc2ConfirmProductInstanceInput!): AwsEc2ConfirmProductInstanceOutput

  # ec2.CopyFpgaImage
  CopyFpgaImage(input: AwsEc2CopyFpgaImageInput!): AwsEc2CopyFpgaImageOutput

  # ec2.CopyImage
  CopyImage(input: AwsEc2CopyImageInput!): AwsEc2CopyImageOutput

  # ec2.CopySnapshot
  CopySnapshot(input: AwsEc2CopySnapshotInput!): AwsEc2CopySnapshotOutput

  # ec2.CreateCustomerGateway
  CreateCustomerGateway(input: AwsEc2CreateCustomerGatewayInput!): AwsEc2CreateCustomerGatewayOutput

  # ec2.CreateDefaultSubnet
  CreateDefaultSubnet(input: AwsEc2CreateDefaultSubnetInput!): AwsEc2CreateDefaultSubnetOutput

  # ec2.CreateDefaultVpc
  CreateDefaultVpc(input: AwsEc2CreateDefaultVpcInput): AwsEc2CreateDefaultVpcOutput

  # ec2.CreateDhcpOptions
  CreateDhcpOptions(input: AwsEc2CreateDhcpOptionsInput!): AwsEc2CreateDhcpOptionsOutput

  # ec2.CreateEgressOnlyInternetGateway
  CreateEgressOnlyInternetGateway(input: AwsEc2CreateEgressOnlyInternetGatewayInput!): AwsEc2CreateEgressOnlyInternetGatewayOutput

  # ec2.CreateFlowLogs
  CreateFlowLogs(input: AwsEc2CreateFlowLogsInput!): AwsEc2CreateFlowLogsOutput

  # ec2.CreateFpgaImage
  CreateFpgaImage(input: AwsEc2CreateFpgaImageInput!): AwsEc2CreateFpgaImageOutput

  # ec2.CreateImage
  CreateImage(input: AwsEc2CreateImageInput!): AwsEc2CreateImageOutput

  # ec2.CreateInstanceExportTask
  CreateInstanceExportTask(input: AwsEc2CreateInstanceExportTaskInput!): AwsEc2CreateInstanceExportTaskOutput

  # ec2.CreateInternetGateway
  CreateInternetGateway(input: AwsEc2CreateInternetGatewayInput): AwsEc2CreateInternetGatewayOutput

  # ec2.CreateKeyPair
  CreateKeyPair(input: AwsEc2CreateKeyPairInput!): AwsEc2CreateKeyPairOutput

  # ec2.CreateLaunchTemplate
  CreateLaunchTemplate(input: AwsEc2CreateLaunchTemplateInput!): AwsEc2CreateLaunchTemplateOutput

  # ec2.CreateLaunchTemplateVersion
  CreateLaunchTemplateVersion(input: AwsEc2CreateLaunchTemplateVersionInput!): AwsEc2CreateLaunchTemplateVersionOutput

  # ec2.CreateNatGateway
  CreateNatGateway(input: AwsEc2CreateNatGatewayInput!): AwsEc2CreateNatGatewayOutput

  # ec2.CreateNetworkAcl
  CreateNetworkAcl(input: AwsEc2CreateNetworkAclInput!): AwsEc2CreateNetworkAclOutput

  # ec2.CreateNetworkAclEntry
  CreateNetworkAclEntry(input: AwsEc2CreateNetworkAclEntryInput!): JSON

  # ec2.CreateNetworkInterface
  CreateNetworkInterface(input: AwsEc2CreateNetworkInterfaceInput!): AwsEc2CreateNetworkInterfaceOutput

  # ec2.CreateNetworkInterfacePermission
  CreateNetworkInterfacePermission(input: AwsEc2CreateNetworkInterfacePermissionInput!): AwsEc2CreateNetworkInterfacePermissionOutput

  # ec2.CreatePlacementGroup
  CreatePlacementGroup(input: AwsEc2CreatePlacementGroupInput!): JSON

  # ec2.CreateReservedInstancesListing
  CreateReservedInstancesListing(input: AwsEc2CreateReservedInstancesListingInput!): AwsEc2CreateReservedInstancesListingOutput

  # ec2.CreateRoute
  CreateRoute(input: AwsEc2CreateRouteInput!): AwsEc2CreateRouteOutput

  # ec2.CreateRouteTable
  CreateRouteTable(input: AwsEc2CreateRouteTableInput!): AwsEc2CreateRouteTableOutput

  # ec2.CreateSecurityGroup
  CreateSecurityGroup(input: AwsEc2CreateSecurityGroupInput!): AwsEc2CreateSecurityGroupOutput

  # ec2.CreateSnapshot
  CreateSnapshot(input: AwsEc2CreateSnapshotInput!): JSON

  # ec2.CreateSpotDatafeedSubscription
  CreateSpotDatafeedSubscription(input: AwsEc2CreateSpotDatafeedSubscriptionInput!): AwsEc2CreateSpotDatafeedSubscriptionOutput

  # ec2.CreateSubnet
  CreateSubnet(input: AwsEc2CreateSubnetInput!): AwsEc2CreateSubnetOutput

  # ec2.CreateTags
  CreateTags(input: AwsEc2CreateTagsInput!): JSON

  # ec2.CreateVolume
  CreateVolume(input: AwsEc2CreateVolumeInput!): JSON

  # ec2.CreateVpc
  CreateVpc(input: AwsEc2CreateVpcInput!): AwsEc2CreateVpcOutput

  # ec2.CreateVpcEndpoint
  CreateVpcEndpoint(input: AwsEc2CreateVpcEndpointInput!): AwsEc2CreateVpcEndpointOutput

  # ec2.CreateVpcEndpointConnectionNotification
  CreateVpcEndpointConnectionNotification(input: AwsEc2CreateVpcEndpointConnectionNotificationInput!): AwsEc2CreateVpcEndpointConnectionNotificationOutput

  # ec2.CreateVpcEndpointServiceConfiguration
  CreateVpcEndpointServiceConfiguration(input: AwsEc2CreateVpcEndpointServiceConfigurationInput!): AwsEc2CreateVpcEndpointServiceConfigurationOutput

  # ec2.CreateVpcPeeringConnection
  CreateVpcPeeringConnection(input: AwsEc2CreateVpcPeeringConnectionInput): AwsEc2CreateVpcPeeringConnectionOutput

  # ec2.CreateVpnConnection
  CreateVpnConnection(input: AwsEc2CreateVpnConnectionInput!): AwsEc2CreateVpnConnectionOutput

  # ec2.CreateVpnConnectionRoute
  CreateVpnConnectionRoute(input: AwsEc2CreateVpnConnectionRouteInput!): JSON

  # ec2.CreateVpnGateway
  CreateVpnGateway(input: AwsEc2CreateVpnGatewayInput!): AwsEc2CreateVpnGatewayOutput

  # ec2.DeleteCustomerGateway
  DeleteCustomerGateway(input: AwsEc2DeleteCustomerGatewayInput!): JSON

  # ec2.DeleteDhcpOptions
  DeleteDhcpOptions(input: AwsEc2DeleteDhcpOptionsInput!): JSON

  # ec2.DeleteEgressOnlyInternetGateway
  DeleteEgressOnlyInternetGateway(input: AwsEc2DeleteEgressOnlyInternetGatewayInput!): AwsEc2DeleteEgressOnlyInternetGatewayOutput

  # ec2.DeleteFlowLogs
  DeleteFlowLogs(input: AwsEc2DeleteFlowLogsInput!): AwsEc2DeleteFlowLogsOutput

  # ec2.DeleteFpgaImage
  DeleteFpgaImage(input: AwsEc2DeleteFpgaImageInput!): AwsEc2DeleteFpgaImageOutput

  # ec2.DeleteInternetGateway
  DeleteInternetGateway(input: AwsEc2DeleteInternetGatewayInput!): JSON

  # ec2.DeleteKeyPair
  DeleteKeyPair(input: AwsEc2DeleteKeyPairInput!): JSON

  # ec2.DeleteLaunchTemplate
  DeleteLaunchTemplate(input: AwsEc2DeleteLaunchTemplateInput): AwsEc2DeleteLaunchTemplateOutput

  # ec2.DeleteLaunchTemplateVersions
  DeleteLaunchTemplateVersions(input: AwsEc2DeleteLaunchTemplateVersionsInput!): AwsEc2DeleteLaunchTemplateVersionsOutput

  # ec2.DeleteNatGateway
  DeleteNatGateway(input: AwsEc2DeleteNatGatewayInput!): AwsEc2DeleteNatGatewayOutput

  # ec2.DeleteNetworkAcl
  DeleteNetworkAcl(input: AwsEc2DeleteNetworkAclInput!): JSON

  # ec2.DeleteNetworkAclEntry
  DeleteNetworkAclEntry(input: AwsEc2DeleteNetworkAclEntryInput!): JSON

  # ec2.DeleteNetworkInterface
  DeleteNetworkInterface(input: AwsEc2DeleteNetworkInterfaceInput!): JSON

  # ec2.DeleteNetworkInterfacePermission
  DeleteNetworkInterfacePermission(input: AwsEc2DeleteNetworkInterfacePermissionInput!): AwsEc2DeleteNetworkInterfacePermissionOutput

  # ec2.DeletePlacementGroup
  DeletePlacementGroup(input: AwsEc2DeletePlacementGroupInput!): JSON

  # ec2.DeleteRoute
  DeleteRoute(input: AwsEc2DeleteRouteInput!): JSON

  # ec2.DeleteRouteTable
  DeleteRouteTable(input: AwsEc2DeleteRouteTableInput!): JSON

  # ec2.DeleteSecurityGroup
  DeleteSecurityGroup(input: AwsEc2DeleteSecurityGroupInput): JSON

  # ec2.DeleteSnapshot
  DeleteSnapshot(input: AwsEc2DeleteSnapshotInput!): JSON

  # ec2.DeleteSpotDatafeedSubscription
  DeleteSpotDatafeedSubscription(input: AwsEc2DeleteSpotDatafeedSubscriptionInput): JSON

  # ec2.DeleteSubnet
  DeleteSubnet(input: AwsEc2DeleteSubnetInput!): JSON

  # ec2.DeleteTags
  DeleteTags(input: AwsEc2DeleteTagsInput!): JSON

  # ec2.DeleteVolume
  DeleteVolume(input: AwsEc2DeleteVolumeInput!): JSON

  # ec2.DeleteVpc
  DeleteVpc(input: AwsEc2DeleteVpcInput!): JSON

  # ec2.DeleteVpcEndpointConnectionNotifications
  DeleteVpcEndpointConnectionNotifications(input: AwsEc2DeleteVpcEndpointConnectionNotificationsInput!): AwsEc2DeleteVpcEndpointConnectionNotificationsOutput

  # ec2.DeleteVpcEndpointServiceConfigurations
  DeleteVpcEndpointServiceConfigurations(input: AwsEc2DeleteVpcEndpointServiceConfigurationsInput!): AwsEc2DeleteVpcEndpointServiceConfigurationsOutput

  # ec2.DeleteVpcEndpoints
  DeleteVpcEndpoints(input: AwsEc2DeleteVpcEndpointsInput!): AwsEc2DeleteVpcEndpointsOutput

  # ec2.DeleteVpcPeeringConnection
  DeleteVpcPeeringConnection(input: AwsEc2DeleteVpcPeeringConnectionInput!): AwsEc2DeleteVpcPeeringConnectionOutput

  # ec2.DeleteVpnConnection
  DeleteVpnConnection(input: AwsEc2DeleteVpnConnectionInput!): JSON

  # ec2.DeleteVpnConnectionRoute
  DeleteVpnConnectionRoute(input: AwsEc2DeleteVpnConnectionRouteInput!): JSON

  # ec2.DeleteVpnGateway
  DeleteVpnGateway(input: AwsEc2DeleteVpnGatewayInput!): JSON

  # ec2.DeregisterImage
  DeregisterImage(input: AwsEc2DeregisterImageInput!): JSON

  # ec2.DescribeAccountAttributes
  DescribeAccountAttributes(input: AwsEc2DescribeAccountAttributesInput): AwsEc2DescribeAccountAttributesOutput

  # ec2.DescribeAddresses
  DescribeAddresses(input: AwsEc2DescribeAddressesInput): AwsEc2DescribeAddressesOutput

  # ec2.DescribeAvailabilityZones
  DescribeAvailabilityZones(input: AwsEc2DescribeAvailabilityZonesInput): AwsEc2DescribeAvailabilityZonesOutput

  # ec2.DescribeBundleTasks
  DescribeBundleTasks(input: AwsEc2DescribeBundleTasksInput): AwsEc2DescribeBundleTasksOutput

  # ec2.DescribeClassicLinkInstances
  DescribeClassicLinkInstances(input: AwsEc2DescribeClassicLinkInstancesInput): AwsEc2DescribeClassicLinkInstancesOutput

  # ec2.DescribeConversionTasks
  DescribeConversionTasks(input: AwsEc2DescribeConversionTasksInput): AwsEc2DescribeConversionTasksOutput

  # ec2.DescribeCustomerGateways
  DescribeCustomerGateways(input: AwsEc2DescribeCustomerGatewaysInput): AwsEc2DescribeCustomerGatewaysOutput

  # ec2.DescribeDhcpOptions
  DescribeDhcpOptions(input: AwsEc2DescribeDhcpOptionsInput): AwsEc2DescribeDhcpOptionsOutput

  # ec2.DescribeEgressOnlyInternetGateways
  DescribeEgressOnlyInternetGateways(input: AwsEc2DescribeEgressOnlyInternetGatewaysInput): AwsEc2DescribeEgressOnlyInternetGatewaysOutput

  # ec2.DescribeElasticGpus
  DescribeElasticGpus(input: AwsEc2DescribeElasticGpusInput): AwsEc2DescribeElasticGpusOutput

  # ec2.DescribeExportTasks
  DescribeExportTasks(input: AwsEc2DescribeExportTasksInput): AwsEc2DescribeExportTasksOutput

  # ec2.DescribeFlowLogs
  DescribeFlowLogs(input: AwsEc2DescribeFlowLogsInput): AwsEc2DescribeFlowLogsOutput

  # ec2.DescribeFpgaImageAttribute
  DescribeFpgaImageAttribute(input: AwsEc2DescribeFpgaImageAttributeInput!): AwsEc2DescribeFpgaImageAttributeOutput

  # ec2.DescribeFpgaImages
  DescribeFpgaImages(input: AwsEc2DescribeFpgaImagesInput): AwsEc2DescribeFpgaImagesOutput

  # ec2.DescribeHostReservationOfferings
  DescribeHostReservationOfferings(input: AwsEc2DescribeHostReservationOfferingsInput): AwsEc2DescribeHostReservationOfferingsOutput

  # ec2.DescribeHostReservations
  DescribeHostReservations(input: AwsEc2DescribeHostReservationsInput): AwsEc2DescribeHostReservationsOutput

  # ec2.DescribeHosts
  DescribeHosts(input: AwsEc2DescribeHostsInput): AwsEc2DescribeHostsOutput

  # ec2.DescribeIamInstanceProfileAssociations
  DescribeIamInstanceProfileAssociations(input: AwsEc2DescribeIamInstanceProfileAssociationsInput): AwsEc2DescribeIamInstanceProfileAssociationsOutput

  # ec2.DescribeIdFormat
  DescribeIdFormat(input: AwsEc2DescribeIdFormatInput): AwsEc2DescribeIdFormatOutput

  # ec2.DescribeIdentityIdFormat
  DescribeIdentityIdFormat(input: AwsEc2DescribeIdentityIdFormatInput!): AwsEc2DescribeIdentityIdFormatOutput

  # ec2.DescribeImageAttribute
  DescribeImageAttribute(input: AwsEc2DescribeImageAttributeInput!): AwsEc2DescribeImageAttributeOutput

  # ec2.DescribeImages
  DescribeImages(input: AwsEc2DescribeImagesInput): AwsEc2DescribeImagesOutput

  # ec2.DescribeImportImageTasks
  DescribeImportImageTasks(input: AwsEc2DescribeImportImageTasksInput): AwsEc2DescribeImportImageTasksOutput

  # ec2.DescribeImportSnapshotTasks
  DescribeImportSnapshotTasks(input: AwsEc2DescribeImportSnapshotTasksInput): AwsEc2DescribeImportSnapshotTasksOutput

  # ec2.DescribeInstanceAttribute
  DescribeInstanceAttribute(input: AwsEc2DescribeInstanceAttributeInput!): AwsEc2DescribeInstanceAttributeOutput

  # ec2.DescribeInstanceCreditSpecifications
  DescribeInstanceCreditSpecifications(input: AwsEc2DescribeInstanceCreditSpecificationsInput): AwsEc2DescribeInstanceCreditSpecificationsOutput

  # ec2.DescribeInstanceStatus
  DescribeInstanceStatus(input: AwsEc2DescribeInstanceStatusInput): AwsEc2DescribeInstanceStatusOutput

  # ec2.DescribeInstances
  DescribeInstances(input: AwsEc2DescribeInstancesInput): AwsEc2DescribeInstancesOutput

  # ec2.DescribeInternetGateways
  DescribeInternetGateways(input: AwsEc2DescribeInternetGatewaysInput): AwsEc2DescribeInternetGatewaysOutput

  # ec2.DescribeKeyPairs
  DescribeKeyPairs(input: AwsEc2DescribeKeyPairsInput): AwsEc2DescribeKeyPairsOutput

  # ec2.DescribeLaunchTemplateVersions
  DescribeLaunchTemplateVersions(input: AwsEc2DescribeLaunchTemplateVersionsInput): AwsEc2DescribeLaunchTemplateVersionsOutput

  # ec2.DescribeLaunchTemplates
  DescribeLaunchTemplates(input: AwsEc2DescribeLaunchTemplatesInput): AwsEc2DescribeLaunchTemplatesOutput

  # ec2.DescribeMovingAddresses
  DescribeMovingAddresses(input: AwsEc2DescribeMovingAddressesInput): AwsEc2DescribeMovingAddressesOutput

  # ec2.DescribeNatGateways
  DescribeNatGateways(input: AwsEc2DescribeNatGatewaysInput): AwsEc2DescribeNatGatewaysOutput

  # ec2.DescribeNetworkAcls
  DescribeNetworkAcls(input: AwsEc2DescribeNetworkAclsInput): AwsEc2DescribeNetworkAclsOutput

  # ec2.DescribeNetworkInterfaceAttribute
  DescribeNetworkInterfaceAttribute(input: AwsEc2DescribeNetworkInterfaceAttributeInput!): AwsEc2DescribeNetworkInterfaceAttributeOutput

  # ec2.DescribeNetworkInterfacePermissions
  DescribeNetworkInterfacePermissions(input: AwsEc2DescribeNetworkInterfacePermissionsInput): AwsEc2DescribeNetworkInterfacePermissionsOutput

  # ec2.DescribeNetworkInterfaces
  DescribeNetworkInterfaces(input: AwsEc2DescribeNetworkInterfacesInput): AwsEc2DescribeNetworkInterfacesOutput

  # ec2.DescribePlacementGroups
  DescribePlacementGroups(input: AwsEc2DescribePlacementGroupsInput): AwsEc2DescribePlacementGroupsOutput

  # ec2.DescribePrefixLists
  DescribePrefixLists(input: AwsEc2DescribePrefixListsInput): AwsEc2DescribePrefixListsOutput

  # ec2.DescribeRegions
  DescribeRegions(input: AwsEc2DescribeRegionsInput): AwsEc2DescribeRegionsOutput

  # ec2.DescribeReservedInstances
  DescribeReservedInstances(input: AwsEc2DescribeReservedInstancesInput): AwsEc2DescribeReservedInstancesOutput

  # ec2.DescribeReservedInstancesListings
  DescribeReservedInstancesListings(input: AwsEc2DescribeReservedInstancesListingsInput): AwsEc2DescribeReservedInstancesListingsOutput

  # ec2.DescribeReservedInstancesModifications
  DescribeReservedInstancesModifications(input: AwsEc2DescribeReservedInstancesModificationsInput): AwsEc2DescribeReservedInstancesModificationsOutput

  # ec2.DescribeReservedInstancesOfferings
  DescribeReservedInstancesOfferings(input: AwsEc2DescribeReservedInstancesOfferingsInput): AwsEc2DescribeReservedInstancesOfferingsOutput

  # ec2.DescribeRouteTables
  DescribeRouteTables(input: AwsEc2DescribeRouteTablesInput): AwsEc2DescribeRouteTablesOutput

  # ec2.DescribeScheduledInstanceAvailability
  DescribeScheduledInstanceAvailability(input: AwsEc2DescribeScheduledInstanceAvailabilityInput!): AwsEc2DescribeScheduledInstanceAvailabilityOutput

  # ec2.DescribeScheduledInstances
  DescribeScheduledInstances(input: AwsEc2DescribeScheduledInstancesInput): AwsEc2DescribeScheduledInstancesOutput

  # ec2.DescribeSecurityGroupReferences
  DescribeSecurityGroupReferences(input: AwsEc2DescribeSecurityGroupReferencesInput!): AwsEc2DescribeSecurityGroupReferencesOutput

  # ec2.DescribeSecurityGroups
  DescribeSecurityGroups(input: AwsEc2DescribeSecurityGroupsInput): AwsEc2DescribeSecurityGroupsOutput

  # ec2.DescribeSnapshotAttribute
  DescribeSnapshotAttribute(input: AwsEc2DescribeSnapshotAttributeInput!): AwsEc2DescribeSnapshotAttributeOutput

  # ec2.DescribeSnapshots
  DescribeSnapshots(input: AwsEc2DescribeSnapshotsInput): AwsEc2DescribeSnapshotsOutput

  # ec2.DescribeSpotDatafeedSubscription
  DescribeSpotDatafeedSubscription(input: AwsEc2DescribeSpotDatafeedSubscriptionInput): AwsEc2DescribeSpotDatafeedSubscriptionOutput

  # ec2.DescribeSpotFleetInstances
  DescribeSpotFleetInstances(input: AwsEc2DescribeSpotFleetInstancesInput!): AwsEc2DescribeSpotFleetInstancesOutput

  # ec2.DescribeSpotFleetRequestHistory
  DescribeSpotFleetRequestHistory(input: AwsEc2DescribeSpotFleetRequestHistoryInput!): AwsEc2DescribeSpotFleetRequestHistoryOutput

  # ec2.DescribeSpotFleetRequests
  DescribeSpotFleetRequests(input: AwsEc2DescribeSpotFleetRequestsInput): AwsEc2DescribeSpotFleetRequestsOutput

  # ec2.DescribeSpotInstanceRequests
  DescribeSpotInstanceRequests(input: AwsEc2DescribeSpotInstanceRequestsInput): AwsEc2DescribeSpotInstanceRequestsOutput

  # ec2.DescribeSpotPriceHistory
  DescribeSpotPriceHistory(input: AwsEc2DescribeSpotPriceHistoryInput): AwsEc2DescribeSpotPriceHistoryOutput

  # ec2.DescribeStaleSecurityGroups
  DescribeStaleSecurityGroups(input: AwsEc2DescribeStaleSecurityGroupsInput!): AwsEc2DescribeStaleSecurityGroupsOutput

  # ec2.DescribeSubnets
  DescribeSubnets(input: AwsEc2DescribeSubnetsInput): AwsEc2DescribeSubnetsOutput

  # ec2.DescribeTags
  DescribeTags(input: AwsEc2DescribeTagsInput): AwsEc2DescribeTagsOutput

  # ec2.DescribeVolumeAttribute
  DescribeVolumeAttribute(input: AwsEc2DescribeVolumeAttributeInput!): AwsEc2DescribeVolumeAttributeOutput

  # ec2.DescribeVolumeStatus
  DescribeVolumeStatus(input: AwsEc2DescribeVolumeStatusInput): AwsEc2DescribeVolumeStatusOutput

  # ec2.DescribeVolumes
  DescribeVolumes(input: AwsEc2DescribeVolumesInput): AwsEc2DescribeVolumesOutput

  # ec2.DescribeVolumesModifications
  DescribeVolumesModifications(input: AwsEc2DescribeVolumesModificationsInput): AwsEc2DescribeVolumesModificationsOutput

  # ec2.DescribeVpcAttribute
  DescribeVpcAttribute(input: AwsEc2DescribeVpcAttributeInput!): AwsEc2DescribeVpcAttributeOutput

  # ec2.DescribeVpcClassicLink
  DescribeVpcClassicLink(input: AwsEc2DescribeVpcClassicLinkInput): AwsEc2DescribeVpcClassicLinkOutput

  # ec2.DescribeVpcClassicLinkDnsSupport
  DescribeVpcClassicLinkDnsSupport(input: AwsEc2DescribeVpcClassicLinkDnsSupportInput): AwsEc2DescribeVpcClassicLinkDnsSupportOutput

  # ec2.DescribeVpcEndpointConnectionNotifications
  DescribeVpcEndpointConnectionNotifications(input: AwsEc2DescribeVpcEndpointConnectionNotificationsInput): AwsEc2DescribeVpcEndpointConnectionNotificationsOutput

  # ec2.DescribeVpcEndpointConnections
  DescribeVpcEndpointConnections(input: AwsEc2DescribeVpcEndpointConnectionsInput): AwsEc2DescribeVpcEndpointConnectionsOutput

  # ec2.DescribeVpcEndpointServiceConfigurations
  DescribeVpcEndpointServiceConfigurations(input: AwsEc2DescribeVpcEndpointServiceConfigurationsInput): AwsEc2DescribeVpcEndpointServiceConfigurationsOutput

  # ec2.DescribeVpcEndpointServicePermissions
  DescribeVpcEndpointServicePermissions(input: AwsEc2DescribeVpcEndpointServicePermissionsInput!): AwsEc2DescribeVpcEndpointServicePermissionsOutput

  # ec2.DescribeVpcEndpointServices
  DescribeVpcEndpointServices(input: AwsEc2DescribeVpcEndpointServicesInput): AwsEc2DescribeVpcEndpointServicesOutput

  # ec2.DescribeVpcEndpoints
  DescribeVpcEndpoints(input: AwsEc2DescribeVpcEndpointsInput): AwsEc2DescribeVpcEndpointsOutput

  # ec2.DescribeVpcPeeringConnections
  DescribeVpcPeeringConnections(input: AwsEc2DescribeVpcPeeringConnectionsInput): AwsEc2DescribeVpcPeeringConnectionsOutput

  # ec2.DescribeVpcs
  DescribeVpcs(input: AwsEc2DescribeVpcsInput): AwsEc2DescribeVpcsOutput

  # ec2.DescribeVpnConnections
  DescribeVpnConnections(input: AwsEc2DescribeVpnConnectionsInput): AwsEc2DescribeVpnConnectionsOutput

  # ec2.DescribeVpnGateways
  DescribeVpnGateways(input: AwsEc2DescribeVpnGatewaysInput): AwsEc2DescribeVpnGatewaysOutput

  # ec2.DetachClassicLinkVpc
  DetachClassicLinkVpc(input: AwsEc2DetachClassicLinkVpcInput!): AwsEc2DetachClassicLinkVpcOutput

  # ec2.DetachInternetGateway
  DetachInternetGateway(input: AwsEc2DetachInternetGatewayInput!): JSON

  # ec2.DetachNetworkInterface
  DetachNetworkInterface(input: AwsEc2DetachNetworkInterfaceInput!): JSON

  # ec2.DetachVolume
  DetachVolume(input: AwsEc2DetachVolumeInput!): JSON

  # ec2.DetachVpnGateway
  DetachVpnGateway(input: AwsEc2DetachVpnGatewayInput!): JSON

  # ec2.DisableVgwRoutePropagation
  DisableVgwRoutePropagation(input: AwsEc2DisableVgwRoutePropagationInput!): JSON

  # ec2.DisableVpcClassicLink
  DisableVpcClassicLink(input: AwsEc2DisableVpcClassicLinkInput!): AwsEc2DisableVpcClassicLinkOutput

  # ec2.DisableVpcClassicLinkDnsSupport
  DisableVpcClassicLinkDnsSupport(input: AwsEc2DisableVpcClassicLinkDnsSupportInput): AwsEc2DisableVpcClassicLinkDnsSupportOutput

  # ec2.DisassociateAddress
  DisassociateAddress(input: AwsEc2DisassociateAddressInput): JSON

  # ec2.DisassociateIamInstanceProfile
  DisassociateIamInstanceProfile(input: AwsEc2DisassociateIamInstanceProfileInput!): AwsEc2DisassociateIamInstanceProfileOutput

  # ec2.DisassociateRouteTable
  DisassociateRouteTable(input: AwsEc2DisassociateRouteTableInput!): JSON

  # ec2.DisassociateSubnetCidrBlock
  DisassociateSubnetCidrBlock(input: AwsEc2DisassociateSubnetCidrBlockInput!): AwsEc2DisassociateSubnetCidrBlockOutput

  # ec2.DisassociateVpcCidrBlock
  DisassociateVpcCidrBlock(input: AwsEc2DisassociateVpcCidrBlockInput!): AwsEc2DisassociateVpcCidrBlockOutput

  # ec2.EnableVgwRoutePropagation
  EnableVgwRoutePropagation(input: AwsEc2EnableVgwRoutePropagationInput!): JSON

  # ec2.EnableVolumeIO
  EnableVolumeIO(input: AwsEc2EnableVolumeIOInput!): JSON

  # ec2.EnableVpcClassicLink
  EnableVpcClassicLink(input: AwsEc2EnableVpcClassicLinkInput!): AwsEc2EnableVpcClassicLinkOutput

  # ec2.EnableVpcClassicLinkDnsSupport
  EnableVpcClassicLinkDnsSupport(input: AwsEc2EnableVpcClassicLinkDnsSupportInput): AwsEc2EnableVpcClassicLinkDnsSupportOutput

  # ec2.GetConsoleOutput
  GetConsoleOutput(input: AwsEc2GetConsoleOutputInput!): AwsEc2GetConsoleOutputOutput

  # ec2.GetConsoleScreenshot
  GetConsoleScreenshot(input: AwsEc2GetConsoleScreenshotInput!): AwsEc2GetConsoleScreenshotOutput

  # ec2.GetHostReservationPurchasePreview
  GetHostReservationPurchasePreview(input: AwsEc2GetHostReservationPurchasePreviewInput!): AwsEc2GetHostReservationPurchasePreviewOutput

  # ec2.GetLaunchTemplateData
  GetLaunchTemplateData(input: AwsEc2GetLaunchTemplateDataInput!): AwsEc2GetLaunchTemplateDataOutput

  # ec2.GetPasswordData
  GetPasswordData(input: AwsEc2GetPasswordDataInput!): AwsEc2GetPasswordDataOutput

  # ec2.GetReservedInstancesExchangeQuote
  GetReservedInstancesExchangeQuote(input: AwsEc2GetReservedInstancesExchangeQuoteInput!): AwsEc2GetReservedInstancesExchangeQuoteOutput

  # ec2.ImportImage
  ImportImage(input: AwsEc2ImportImageInput): AwsEc2ImportImageOutput

  # ec2.ImportInstance
  ImportInstance(input: AwsEc2ImportInstanceInput!): AwsEc2ImportInstanceOutput

  # ec2.ImportKeyPair
  ImportKeyPair(input: AwsEc2ImportKeyPairInput!): AwsEc2ImportKeyPairOutput

  # ec2.ImportSnapshot
  ImportSnapshot(input: AwsEc2ImportSnapshotInput): AwsEc2ImportSnapshotOutput

  # ec2.ImportVolume
  ImportVolume(input: AwsEc2ImportVolumeInput!): AwsEc2ImportVolumeOutput

  # ec2.ModifyFpgaImageAttribute
  ModifyFpgaImageAttribute(input: AwsEc2ModifyFpgaImageAttributeInput!): AwsEc2ModifyFpgaImageAttributeOutput

  # ec2.ModifyHosts
  ModifyHosts(input: AwsEc2ModifyHostsInput!): AwsEc2ModifyHostsOutput

  # ec2.ModifyIdFormat
  ModifyIdFormat(input: AwsEc2ModifyIdFormatInput!): JSON

  # ec2.ModifyIdentityIdFormat
  ModifyIdentityIdFormat(input: AwsEc2ModifyIdentityIdFormatInput!): JSON

  # ec2.ModifyImageAttribute
  ModifyImageAttribute(input: AwsEc2ModifyImageAttributeInput!): JSON

  # ec2.ModifyInstanceAttribute
  ModifyInstanceAttribute(input: AwsEc2ModifyInstanceAttributeInput!): JSON

  # ec2.ModifyInstanceCreditSpecification
  ModifyInstanceCreditSpecification(input: AwsEc2ModifyInstanceCreditSpecificationInput!): AwsEc2ModifyInstanceCreditSpecificationOutput

  # ec2.ModifyInstancePlacement
  ModifyInstancePlacement(input: AwsEc2ModifyInstancePlacementInput!): AwsEc2ModifyInstancePlacementOutput

  # ec2.ModifyLaunchTemplate
  ModifyLaunchTemplate(input: AwsEc2ModifyLaunchTemplateInput): AwsEc2ModifyLaunchTemplateOutput

  # ec2.ModifyNetworkInterfaceAttribute
  ModifyNetworkInterfaceAttribute(input: AwsEc2ModifyNetworkInterfaceAttributeInput!): JSON

  # ec2.ModifyReservedInstances
  ModifyReservedInstances(input: AwsEc2ModifyReservedInstancesInput!): AwsEc2ModifyReservedInstancesOutput

  # ec2.ModifySnapshotAttribute
  ModifySnapshotAttribute(input: AwsEc2ModifySnapshotAttributeInput!): JSON

  # ec2.ModifySpotFleetRequest
  ModifySpotFleetRequest(input: AwsEc2ModifySpotFleetRequestInput!): AwsEc2ModifySpotFleetRequestOutput

  # ec2.ModifySubnetAttribute
  ModifySubnetAttribute(input: AwsEc2ModifySubnetAttributeInput!): JSON

  # ec2.ModifyVolume
  ModifyVolume(input: AwsEc2ModifyVolumeInput!): AwsEc2ModifyVolumeOutput

  # ec2.ModifyVolumeAttribute
  ModifyVolumeAttribute(input: AwsEc2ModifyVolumeAttributeInput!): JSON

  # ec2.ModifyVpcAttribute
  ModifyVpcAttribute(input: AwsEc2ModifyVpcAttributeInput!): JSON

  # ec2.ModifyVpcEndpoint
  ModifyVpcEndpoint(input: AwsEc2ModifyVpcEndpointInput!): AwsEc2ModifyVpcEndpointOutput

  # ec2.ModifyVpcEndpointConnectionNotification
  ModifyVpcEndpointConnectionNotification(input: AwsEc2ModifyVpcEndpointConnectionNotificationInput!): AwsEc2ModifyVpcEndpointConnectionNotificationOutput

  # ec2.ModifyVpcEndpointServiceConfiguration
  ModifyVpcEndpointServiceConfiguration(input: AwsEc2ModifyVpcEndpointServiceConfigurationInput!): AwsEc2ModifyVpcEndpointServiceConfigurationOutput

  # ec2.ModifyVpcEndpointServicePermissions
  ModifyVpcEndpointServicePermissions(input: AwsEc2ModifyVpcEndpointServicePermissionsInput!): AwsEc2ModifyVpcEndpointServicePermissionsOutput

  # ec2.ModifyVpcPeeringConnectionOptions
  ModifyVpcPeeringConnectionOptions(input: AwsEc2ModifyVpcPeeringConnectionOptionsInput!): AwsEc2ModifyVpcPeeringConnectionOptionsOutput

  # ec2.ModifyVpcTenancy
  ModifyVpcTenancy(input: AwsEc2ModifyVpcTenancyInput!): AwsEc2ModifyVpcTenancyOutput

  # ec2.MonitorInstances
  MonitorInstances(input: AwsEc2MonitorInstancesInput!): AwsEc2MonitorInstancesOutput

  # ec2.MoveAddressToVpc
  MoveAddressToVpc(input: AwsEc2MoveAddressToVpcInput!): AwsEc2MoveAddressToVpcOutput

  # ec2.PurchaseHostReservation
  PurchaseHostReservation(input: AwsEc2PurchaseHostReservationInput!): AwsEc2PurchaseHostReservationOutput

  # ec2.PurchaseReservedInstancesOffering
  PurchaseReservedInstancesOffering(input: AwsEc2PurchaseReservedInstancesOfferingInput!): AwsEc2PurchaseReservedInstancesOfferingOutput

  # ec2.PurchaseScheduledInstances
  PurchaseScheduledInstances(input: AwsEc2PurchaseScheduledInstancesInput!): AwsEc2PurchaseScheduledInstancesOutput

  # ec2.RebootInstances
  RebootInstances(input: AwsEc2RebootInstancesInput!): JSON

  # ec2.RegisterImage
  RegisterImage(input: AwsEc2RegisterImageInput!): AwsEc2RegisterImageOutput

  # ec2.RejectVpcEndpointConnections
  RejectVpcEndpointConnections(input: AwsEc2RejectVpcEndpointConnectionsInput!): AwsEc2RejectVpcEndpointConnectionsOutput

  # ec2.RejectVpcPeeringConnection
  RejectVpcPeeringConnection(input: AwsEc2RejectVpcPeeringConnectionInput!): AwsEc2RejectVpcPeeringConnectionOutput

  # ec2.ReleaseAddress
  ReleaseAddress(input: AwsEc2ReleaseAddressInput): JSON

  # ec2.ReleaseHosts
  ReleaseHosts(input: AwsEc2ReleaseHostsInput!): AwsEc2ReleaseHostsOutput

  # ec2.ReplaceIamInstanceProfileAssociation
  ReplaceIamInstanceProfileAssociation(input: AwsEc2ReplaceIamInstanceProfileAssociationInput!): AwsEc2ReplaceIamInstanceProfileAssociationOutput

  # ec2.ReplaceNetworkAclAssociation
  ReplaceNetworkAclAssociation(input: AwsEc2ReplaceNetworkAclAssociationInput!): AwsEc2ReplaceNetworkAclAssociationOutput

  # ec2.ReplaceNetworkAclEntry
  ReplaceNetworkAclEntry(input: AwsEc2ReplaceNetworkAclEntryInput!): JSON

  # ec2.ReplaceRoute
  ReplaceRoute(input: AwsEc2ReplaceRouteInput!): JSON

  # ec2.ReplaceRouteTableAssociation
  ReplaceRouteTableAssociation(input: AwsEc2ReplaceRouteTableAssociationInput!): AwsEc2ReplaceRouteTableAssociationOutput

  # ec2.ReportInstanceStatus
  ReportInstanceStatus(input: AwsEc2ReportInstanceStatusInput!): JSON

  # ec2.RequestSpotFleet
  RequestSpotFleet(input: AwsEc2RequestSpotFleetInput!): AwsEc2RequestSpotFleetOutput

  # ec2.RequestSpotInstances
  RequestSpotInstances(input: AwsEc2RequestSpotInstancesInput): AwsEc2RequestSpotInstancesOutput

  # ec2.ResetFpgaImageAttribute
  ResetFpgaImageAttribute(input: AwsEc2ResetFpgaImageAttributeInput!): AwsEc2ResetFpgaImageAttributeOutput

  # ec2.ResetImageAttribute
  ResetImageAttribute(input: AwsEc2ResetImageAttributeInput!): JSON

  # ec2.ResetInstanceAttribute
  ResetInstanceAttribute(input: AwsEc2ResetInstanceAttributeInput!): JSON

  # ec2.ResetNetworkInterfaceAttribute
  ResetNetworkInterfaceAttribute(input: AwsEc2ResetNetworkInterfaceAttributeInput!): JSON

  # ec2.ResetSnapshotAttribute
  ResetSnapshotAttribute(input: AwsEc2ResetSnapshotAttributeInput!): JSON

  # ec2.RestoreAddressToClassic
  RestoreAddressToClassic(input: AwsEc2RestoreAddressToClassicInput!): AwsEc2RestoreAddressToClassicOutput

  # ec2.RevokeSecurityGroupEgress
  RevokeSecurityGroupEgress(input: AwsEc2RevokeSecurityGroupEgressInput!): JSON

  # ec2.RevokeSecurityGroupIngress
  RevokeSecurityGroupIngress(input: AwsEc2RevokeSecurityGroupIngressInput): JSON

  # ec2.RunInstances
  RunInstances(input: AwsEc2RunInstancesInput!): JSON

  # ec2.RunScheduledInstances
  RunScheduledInstances(input: AwsEc2RunScheduledInstancesInput!): AwsEc2RunScheduledInstancesOutput

  # ec2.StartInstances
  StartInstances(input: AwsEc2StartInstancesInput!): AwsEc2StartInstancesOutput

  # ec2.StopInstances
  StopInstances(input: AwsEc2StopInstancesInput!): AwsEc2StopInstancesOutput

  # ec2.TerminateInstances
  TerminateInstances(input: AwsEc2TerminateInstancesInput!): AwsEc2TerminateInstancesOutput

  # ec2.UnassignIpv6Addresses
  UnassignIpv6Addresses(input: AwsEc2UnassignIpv6AddressesInput!): AwsEc2UnassignIpv6AddressesOutput

  # ec2.UnassignPrivateIpAddresses
  UnassignPrivateIpAddresses(input: AwsEc2UnassignPrivateIpAddressesInput!): JSON

  # ec2.UnmonitorInstances
  UnmonitorInstances(input: AwsEc2UnmonitorInstancesInput!): AwsEc2UnmonitorInstancesOutput

  # ec2.UpdateSecurityGroupRuleDescriptionsEgress
  UpdateSecurityGroupRuleDescriptionsEgress(input: AwsEc2UpdateSecurityGroupRuleDescriptionsEgressInput!): AwsEc2UpdateSecurityGroupRuleDescriptionsEgressOutput

  # ec2.UpdateSecurityGroupRuleDescriptionsIngress
  UpdateSecurityGroupRuleDescriptionsIngress(input: AwsEc2UpdateSecurityGroupRuleDescriptionsIngressInput!): AwsEc2UpdateSecurityGroupRuleDescriptionsIngressOutput
}

input AwsEc2AcceptReservedInstancesExchangeQuoteInput {
  DryRun: Boolean
  ReservedInstanceIds: [String]!
  TargetConfigurations: [AwsEc2S5Input]
}

type AwsEc2AcceptReservedInstancesExchangeQuoteOutput {
  ExchangeId: String
}

input AwsEc2AcceptVpcEndpointConnectionsInput {
  DryRun: Boolean
  ServiceId: String!
  VpcEndpointIds: [String]!
}

type AwsEc2AcceptVpcEndpointConnectionsOutput {
  Unsuccessful: [AwsEc2Sd]
}

input AwsEc2AcceptVpcPeeringConnectionInput {
  DryRun: Boolean
  VpcPeeringConnectionId: String
}

type AwsEc2AcceptVpcPeeringConnectionOutput {
  VpcPeeringConnection: AwsEc2Sh
}

input AwsEc2AllocateAddressInput {
  Domain: String
  Address: String
  DryRun: Boolean
}

type AwsEc2AllocateAddressOutput {
  PublicIp: String
  AllocationId: String
  Domain: String
}

input AwsEc2AllocateHostsInput {
  AutoPlacement: String
  AvailabilityZone: String!
  ClientToken: String
  InstanceType: String!
  Quantity: Int!
}

type AwsEc2AllocateHostsOutput {
  HostIds: [String]
}

input AwsEc2AssignIpv6AddressesInput {
  Ipv6AddressCount: Int
  Ipv6Addresses: [String]
  NetworkInterfaceId: String!
}

type AwsEc2AssignIpv6AddressesOutput {
  AssignedIpv6Addresses: [String]
  NetworkInterfaceId: String
}

input AwsEc2AssignPrivateIpAddressesInput {
  AllowReassignment: Boolean
  NetworkInterfaceId: String!
  PrivateIpAddresses: [String]
  SecondaryPrivateIpAddressCount: Int
}

input AwsEc2AssociateAddressInput {
  AllocationId: String
  InstanceId: String
  PublicIp: String
  AllowReassociation: Boolean
  DryRun: Boolean
  NetworkInterfaceId: String
  PrivateIpAddress: String
}

type AwsEc2AssociateAddressOutput {
  AssociationId: String
}

input AwsEc2AssociateDhcpOptionsInput {
  DhcpOptionsId: String!
  VpcId: String!
  DryRun: Boolean
}

input AwsEc2AssociateIamInstanceProfileInput {
  IamInstanceProfile: AwsEc2S19Input!
  InstanceId: String!
}

type AwsEc2AssociateIamInstanceProfileOutput {
  IamInstanceProfileAssociation: AwsEc2S1b
}

input AwsEc2AssociateRouteTableInput {
  DryRun: Boolean
  RouteTableId: String!
  SubnetId: String!
}

type AwsEc2AssociateRouteTableOutput {
  AssociationId: String
}

input AwsEc2AssociateSubnetCidrBlockInput {
  Ipv6CidrBlock: String!
  SubnetId: String!
}

type AwsEc2AssociateSubnetCidrBlockOutput {
  Ipv6CidrBlockAssociation: AwsEc2S1i
  SubnetId: String
}

input AwsEc2AssociateVpcCidrBlockInput {
  AmazonProvidedIpv6CidrBlock: Boolean
  CidrBlock: String
  VpcId: String!
}

type AwsEc2AssociateVpcCidrBlockOutput {
  Ipv6CidrBlockAssociation: AwsEc2S1n
  CidrBlockAssociation: AwsEc2S1q
  VpcId: String
}

input AwsEc2AttachClassicLinkVpcInput {
  DryRun: Boolean
  Groups: [String]!
  InstanceId: String!
  VpcId: String!
}

type AwsEc2AttachClassicLinkVpcOutput {
  Return: Boolean
}

input AwsEc2AttachInternetGatewayInput {
  DryRun: Boolean
  InternetGatewayId: String!
  VpcId: String!
}

input AwsEc2AttachNetworkInterfaceInput {
  DeviceIndex: Int!
  DryRun: Boolean
  InstanceId: String!
  NetworkInterfaceId: String!
}

type AwsEc2AttachNetworkInterfaceOutput {
  AttachmentId: String
}

input AwsEc2AttachVolumeInput {
  Device: String!
  InstanceId: String!
  VolumeId: String!
  DryRun: Boolean
}

input AwsEc2AttachVpnGatewayInput {
  VpcId: String!
  VpnGatewayId: String!
  DryRun: Boolean
}

type AwsEc2AttachVpnGatewayOutput {
  VpcAttachment: AwsEc2S22
}

input AwsEc2AuthorizeSecurityGroupEgressInput {
  DryRun: Boolean
  GroupId: String!
  IpPermissions: [AwsEc2S25Input]
  CidrIp: String
  FromPort: Int
  IpProtocol: String
  ToPort: Int
  SourceSecurityGroupName: String
  SourceSecurityGroupOwnerId: String
}

input AwsEc2AuthorizeSecurityGroupIngressInput {
  CidrIp: String
  FromPort: Int
  GroupId: String
  GroupName: String
  IpPermissions: [AwsEc2S25Input]
  IpProtocol: String
  SourceSecurityGroupName: String
  SourceSecurityGroupOwnerId: String
  ToPort: Int
  DryRun: Boolean
}

input AwsEc2BundleInstanceInput {
  InstanceId: String!
  Storage: AwsEc2S2hInput!
  DryRun: Boolean
}

type AwsEc2BundleInstanceOutput {
  BundleTask: AwsEc2S2l
}

input AwsEc2CancelBundleTaskInput {
  BundleId: String!
  DryRun: Boolean
}

type AwsEc2CancelBundleTaskOutput {
  BundleTask: AwsEc2S2l
}

input AwsEc2CancelConversionTaskInput {
  ConversionTaskId: String!
  DryRun: Boolean
  ReasonMessage: String
}

input AwsEc2CancelExportTaskInput {
  ExportTaskId: String!
}

input AwsEc2CancelImportTaskInput {
  CancelReason: String
  DryRun: Boolean
  ImportTaskId: String
}

type AwsEc2CancelImportTaskOutput {
  ImportTaskId: String
  PreviousState: String
  State: String
}

input AwsEc2CancelReservedInstancesListingInput {
  ReservedInstancesListingId: String!
}

type AwsEc2CancelReservedInstancesListingOutput {
  ReservedInstancesListings: [AwsEc2S2w]
}

input AwsEc2CancelSpotFleetRequestsInput {
  DryRun: Boolean
  SpotFleetRequestIds: [String]!
  TerminateInstances: Boolean!
}

type AwsEc2CancelSpotFleetRequestsOutput {
  SuccessfulFleetRequests: [AwsEc2CancelSpotFleetRequestsOutputSuccessfulFleetRequests]
  UnsuccessfulFleetRequests: [AwsEc2CancelSpotFleetRequestsOutputUnsuccessfulFleetRequests]
}

type AwsEc2CancelSpotFleetRequestsOutputSuccessfulFleetRequests {
  CurrentSpotFleetRequestState: String!
  PreviousSpotFleetRequestState: String!
  SpotFleetRequestId: String!
}

type AwsEc2CancelSpotFleetRequestsOutputUnsuccessfulFleetRequests {
  Error: AwsEc2CancelSpotFleetRequestsOutputUnsuccessfulFleetRequestsError!
  SpotFleetRequestId: String!
}

type AwsEc2CancelSpotFleetRequestsOutputUnsuccessfulFleetRequestsError {
  Code: String!
  Message: String!
}

input AwsEc2CancelSpotInstanceRequestsInput {
  DryRun: Boolean
  SpotInstanceRequestIds: [String]!
}

type AwsEc2CancelSpotInstanceRequestsOutput {
  CancelledSpotInstanceRequests: [AwsEc2CancelSpotInstanceRequestsOutputCancelledSpotInstanceRequests]
}

type AwsEc2CancelSpotInstanceRequestsOutputCancelledSpotInstanceRequests {
  SpotInstanceRequestId: String
  State: String
}

input AwsEc2ConfirmProductInstanceInput {
  InstanceId: String!
  ProductCode: String!
  DryRun: Boolean
}

type AwsEc2ConfirmProductInstanceOutput {
  OwnerId: String
  Return: Boolean
}

input AwsEc2CopyFpgaImageInput {
  DryRun: Boolean
  SourceFpgaImageId: String!
  Description: String
  Name: String
  SourceRegion: String!
  ClientToken: String
}

type AwsEc2CopyFpgaImageOutput {
  FpgaImageId: String
}

input AwsEc2CopyImageInput {
  ClientToken: String
  Description: String
  Encrypted: Boolean
  KmsKeyId: String
  Name: String!
  SourceImageId: String!
  SourceRegion: String!
  DryRun: Boolean
}

type AwsEc2CopyImageOutput {
  ImageId: String
}

input AwsEc2CopySnapshotInput {
  Description: String
  DestinationRegion: String
  Encrypted: Boolean
  KmsKeyId: String
  PresignedUrl: String
  SourceRegion: String!
  SourceSnapshotId: String!
  DryRun: Boolean
}

type AwsEc2CopySnapshotOutput {
  SnapshotId: String
}

input AwsEc2CreateCustomerGatewayInput {
  BgpAsn: Int!
  PublicIp: String!
  Type: String!
  DryRun: Boolean
}

type AwsEc2CreateCustomerGatewayOutput {
  CustomerGateway: AwsEc2S3x
}

input AwsEc2CreateDefaultSubnetInput {
  AvailabilityZone: String!
  DryRun: Boolean
}

type AwsEc2CreateDefaultSubnetOutput {
  Subnet: AwsEc2S40
}

input AwsEc2CreateDefaultVpcInput {
  DryRun: Boolean
}

type AwsEc2CreateDefaultVpcOutput {
  Vpc: AwsEc2S45
}

input AwsEc2CreateDhcpOptionsDhcpConfigurationsInput {
  Key: String
  Values: [String]
}

input AwsEc2CreateDhcpOptionsInput {
  DhcpConfigurations: [AwsEc2CreateDhcpOptionsDhcpConfigurationsInput]!
  DryRun: Boolean
}

type AwsEc2CreateDhcpOptionsOutput {
  DhcpOptions: AwsEc2S4e
}

input AwsEc2CreateEgressOnlyInternetGatewayInput {
  ClientToken: String
  DryRun: Boolean
  VpcId: String!
}

type AwsEc2CreateEgressOnlyInternetGatewayOutput {
  ClientToken: String
  EgressOnlyInternetGateway: AwsEc2S4l
}

input AwsEc2CreateFlowLogsInput {
  ClientToken: String
  DeliverLogsPermissionArn: String!
  LogGroupName: String!
  ResourceIds: [String]!
  ResourceType: String!
  TrafficType: String!
}

type AwsEc2CreateFlowLogsOutput {
  ClientToken: String
  FlowLogIds: [String]
  Unsuccessful: [AwsEc2Sd]
}

input AwsEc2CreateFpgaImageInput {
  DryRun: Boolean
  InputStorageLocation: AwsEc2S4uInput!
  LogsStorageLocation: AwsEc2S4uInput
  Description: String
  Name: String
  ClientToken: String
}

type AwsEc2CreateFpgaImageOutput {
  FpgaImageId: String
  FpgaImageGlobalId: String
}

input AwsEc2CreateImageInput {
  BlockDeviceMappings: [AwsEc2S4yInput]
  Description: String
  DryRun: Boolean
  InstanceId: String!
  Name: String!
  NoReboot: Boolean
}

type AwsEc2CreateImageOutput {
  ImageId: String
}

input AwsEc2CreateInstanceExportTaskExportToS3TaskInput {
  ContainerFormat: String
  DiskImageFormat: String
  S3Bucket: String
  S3Prefix: String
}

input AwsEc2CreateInstanceExportTaskInput {
  Description: String
  ExportToS3Task: AwsEc2CreateInstanceExportTaskExportToS3TaskInput
  InstanceId: String!
  TargetEnvironment: String
}

type AwsEc2CreateInstanceExportTaskOutput {
  ExportTask: AwsEc2S58
}

input AwsEc2CreateInternetGatewayInput {
  DryRun: Boolean
}

type AwsEc2CreateInternetGatewayOutput {
  InternetGateway: AwsEc2S5e
}

input AwsEc2CreateKeyPairInput {
  KeyName: String!
  DryRun: Boolean
}

type AwsEc2CreateKeyPairOutput {
  KeyFingerprint: String
  KeyMaterial: String
  KeyName: String
}

input AwsEc2CreateLaunchTemplateInput {
  DryRun: Boolean
  ClientToken: String
  LaunchTemplateName: String!
  VersionDescription: String
  LaunchTemplateData: AwsEc2S5kInput!
}

type AwsEc2CreateLaunchTemplateOutput {
  LaunchTemplate: AwsEc2S6d
}

input AwsEc2CreateLaunchTemplateVersionInput {
  DryRun: Boolean
  ClientToken: String
  LaunchTemplateId: String
  LaunchTemplateName: String
  SourceVersion: String
  VersionDescription: String
  LaunchTemplateData: AwsEc2S5kInput!
}

type AwsEc2CreateLaunchTemplateVersionOutput {
  LaunchTemplateVersion: AwsEc2S6g
}

input AwsEc2CreateNatGatewayInput {
  AllocationId: String!
  ClientToken: String
  SubnetId: String!
}

type AwsEc2CreateNatGatewayOutput {
  ClientToken: String
  NatGateway: AwsEc2S71
}

input AwsEc2CreateNetworkAclEntryInput {
  CidrBlock: String
  DryRun: Boolean
  Egress: Boolean!
  IcmpTypeCode: AwsEc2S7dInput
  Ipv6CidrBlock: String
  NetworkAclId: String!
  PortRange: AwsEc2S7eInput
  Protocol: String!
  RuleAction: String!
  RuleNumber: Int!
}

input AwsEc2CreateNetworkAclInput {
  DryRun: Boolean
  VpcId: String!
}

type AwsEc2CreateNetworkAclOutput {
  NetworkAcl: AwsEc2S78
}

input AwsEc2CreateNetworkInterfaceInput {
  Description: String
  DryRun: Boolean
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEc2S6oInput]
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEc2S5uInput]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String!
}

type AwsEc2CreateNetworkInterfaceOutput {
  NetworkInterface: AwsEc2S7j
}

input AwsEc2CreateNetworkInterfacePermissionInput {
  NetworkInterfaceId: String!
  AwsAccountId: String
  AwsService: String
  Permission: String!
  DryRun: Boolean
}

type AwsEc2CreateNetworkInterfacePermissionOutput {
  InterfacePermission: AwsEc2S7x
}

input AwsEc2CreatePlacementGroupInput {
  DryRun: Boolean
  GroupName: String!
  Strategy: String!
}

input AwsEc2CreateReservedInstancesListingInput {
  ClientToken: String!
  InstanceCount: Int!
  PriceSchedules: [AwsEc2CreateReservedInstancesListingPriceSchedulesInput]!
  ReservedInstancesId: String!
}

type AwsEc2CreateReservedInstancesListingOutput {
  ReservedInstancesListings: [AwsEc2S2w]
}

input AwsEc2CreateReservedInstancesListingPriceSchedulesInput {
  CurrencyCode: String
  Price: JSON
  Term: JSON
}

input AwsEc2CreateRouteInput {
  DestinationCidrBlock: String
  DestinationIpv6CidrBlock: String
  DryRun: Boolean
  EgressOnlyInternetGatewayId: String
  GatewayId: String
  InstanceId: String
  NatGatewayId: String
  NetworkInterfaceId: String
  RouteTableId: String!
  VpcPeeringConnectionId: String
}

type AwsEc2CreateRouteOutput {
  Return: Boolean
}

input AwsEc2CreateRouteTableInput {
  DryRun: Boolean
  VpcId: String!
}

type AwsEc2CreateRouteTableOutput {
  RouteTable: AwsEc2S8a
}

input AwsEc2CreateSecurityGroupInput {
  Description: String!
  GroupName: String!
  VpcId: String
  DryRun: Boolean
}

type AwsEc2CreateSecurityGroupOutput {
  GroupId: String
}

input AwsEc2CreateSnapshotInput {
  Description: String
  VolumeId: String!
  DryRun: Boolean
}

input AwsEc2CreateSpotDatafeedSubscriptionInput {
  Bucket: String!
  DryRun: Boolean
  Prefix: String
}

type AwsEc2CreateSpotDatafeedSubscriptionOutput {
  SpotDatafeedSubscription: AwsEc2S8q
}

input AwsEc2CreateSubnetInput {
  AvailabilityZone: String
  CidrBlock: String!
  Ipv6CidrBlock: String
  VpcId: String!
  DryRun: Boolean
}

type AwsEc2CreateSubnetOutput {
  Subnet: AwsEc2S40
}

input AwsEc2CreateTagsInput {
  DryRun: Boolean
  Resources: [String]!
  Tags: [AwsEc2SrInput]!
}

input AwsEc2CreateVolumeInput {
  AvailabilityZone: String!
  Encrypted: Boolean
  Iops: Int
  KmsKeyId: String
  Size: Int
  SnapshotId: String
  VolumeType: String
  DryRun: Boolean
  TagSpecifications: [AwsEc2S8yInput]
}

input AwsEc2CreateVpcEndpointConnectionNotificationInput {
  DryRun: Boolean
  ServiceId: String
  VpcEndpointId: String
  ConnectionNotificationArn: String!
  ConnectionEvents: [String]!
  ClientToken: String
}

type AwsEc2CreateVpcEndpointConnectionNotificationOutput {
  ConnectionNotification: AwsEc2S9g
  ClientToken: String
}

input AwsEc2CreateVpcEndpointInput {
  DryRun: Boolean
  VpcEndpointType: String
  VpcId: String!
  ServiceName: String!
  PolicyDocument: String
  RouteTableIds: [String]
  SubnetIds: [String]
  SecurityGroupIds: [String]
  ClientToken: String
  PrivateDnsEnabled: Boolean
}

type AwsEc2CreateVpcEndpointOutput {
  VpcEndpoint: AwsEc2S98
  ClientToken: String
}

input AwsEc2CreateVpcEndpointServiceConfigurationInput {
  DryRun: Boolean
  AcceptanceRequired: Boolean
  NetworkLoadBalancerArns: [String]!
  ClientToken: String
}

type AwsEc2CreateVpcEndpointServiceConfigurationOutput {
  ServiceConfiguration: AwsEc2S9l
  ClientToken: String
}

input AwsEc2CreateVpcInput {
  CidrBlock: String!
  AmazonProvidedIpv6CidrBlock: Boolean
  DryRun: Boolean
  InstanceTenancy: String
}

type AwsEc2CreateVpcOutput {
  Vpc: AwsEc2S45
}

input AwsEc2CreateVpcPeeringConnectionInput {
  DryRun: Boolean
  PeerOwnerId: String
  PeerVpcId: String
  VpcId: String
}

type AwsEc2CreateVpcPeeringConnectionOutput {
  VpcPeeringConnection: AwsEc2Sh
}

input AwsEc2CreateVpnConnectionInput {
  CustomerGatewayId: String!
  Type: String!
  VpnGatewayId: String!
  DryRun: Boolean
  Options: AwsEc2CreateVpnConnectionOptionsInput
}

input AwsEc2CreateVpnConnectionOptionsInput {
  StaticRoutesOnly: Boolean
  TunnelOptions: [AwsEc2CreateVpnConnectionOptionsTunnelOptionsInput]
}

input AwsEc2CreateVpnConnectionOptionsTunnelOptionsInput {
  TunnelInsideCidr: String
  PreSharedKey: String
}

type AwsEc2CreateVpnConnectionOutput {
  VpnConnection: AwsEc2S9x
}

input AwsEc2CreateVpnConnectionRouteInput {
  DestinationCidrBlock: String!
  VpnConnectionId: String!
}

input AwsEc2CreateVpnGatewayInput {
  AvailabilityZone: String
  Type: String!
  AmazonSideAsn: JSON
  DryRun: Boolean
}

type AwsEc2CreateVpnGatewayOutput {
  VpnGateway: AwsEc2Sa9
}

input AwsEc2DeleteCustomerGatewayInput {
  CustomerGatewayId: String!
  DryRun: Boolean
}

input AwsEc2DeleteDhcpOptionsInput {
  DhcpOptionsId: String!
  DryRun: Boolean
}

input AwsEc2DeleteEgressOnlyInternetGatewayInput {
  DryRun: Boolean
  EgressOnlyInternetGatewayId: String!
}

type AwsEc2DeleteEgressOnlyInternetGatewayOutput {
  ReturnCode: Boolean
}

input AwsEc2DeleteFlowLogsInput {
  FlowLogIds: [String]!
}

type AwsEc2DeleteFlowLogsOutput {
  Unsuccessful: [AwsEc2Sd]
}

input AwsEc2DeleteFpgaImageInput {
  DryRun: Boolean
  FpgaImageId: String!
}

type AwsEc2DeleteFpgaImageOutput {
  Return: Boolean
}

input AwsEc2DeleteInternetGatewayInput {
  DryRun: Boolean
  InternetGatewayId: String!
}

input AwsEc2DeleteKeyPairInput {
  KeyName: String!
  DryRun: Boolean
}

input AwsEc2DeleteLaunchTemplateInput {
  DryRun: Boolean
  LaunchTemplateId: String
  LaunchTemplateName: String
}

type AwsEc2DeleteLaunchTemplateOutput {
  LaunchTemplate: AwsEc2S6d
}

input AwsEc2DeleteLaunchTemplateVersionsInput {
  DryRun: Boolean
  LaunchTemplateId: String
  LaunchTemplateName: String
  Versions: [String]!
}

type AwsEc2DeleteLaunchTemplateVersionsOutput {
  SuccessfullyDeletedLaunchTemplateVersions: [AwsEc2DeleteLaunchTemplateVersionsOutputSuccessfullyDeletedLaunchTemplateVersions]
  UnsuccessfullyDeletedLaunchTemplateVersions: [AwsEc2DeleteLaunchTemplateVersionsOutputUnsuccessfullyDeletedLaunchTemplateVersions]
}

type AwsEc2DeleteLaunchTemplateVersionsOutputSuccessfullyDeletedLaunchTemplateVersions {
  LaunchTemplateId: String
  LaunchTemplateName: String
  VersionNumber: JSON
}

type AwsEc2DeleteLaunchTemplateVersionsOutputUnsuccessfullyDeletedLaunchTemplateVersions {
  LaunchTemplateId: String
  LaunchTemplateName: String
  VersionNumber: JSON
  ResponseError: AwsEc2DeleteLaunchTemplateVersionsOutputUnsuccessfullyDeletedLaunchTemplateVersionsResponseError
}

type AwsEc2DeleteLaunchTemplateVersionsOutputUnsuccessfullyDeletedLaunchTemplateVersionsResponseError {
  Code: String
  Message: String
}

input AwsEc2DeleteNatGatewayInput {
  NatGatewayId: String!
}

type AwsEc2DeleteNatGatewayOutput {
  NatGatewayId: String
}

input AwsEc2DeleteNetworkAclEntryInput {
  DryRun: Boolean
  Egress: Boolean!
  NetworkAclId: String!
  RuleNumber: Int!
}

input AwsEc2DeleteNetworkAclInput {
  DryRun: Boolean
  NetworkAclId: String!
}

input AwsEc2DeleteNetworkInterfaceInput {
  DryRun: Boolean
  NetworkInterfaceId: String!
}

input AwsEc2DeleteNetworkInterfacePermissionInput {
  NetworkInterfacePermissionId: String!
  Force: Boolean
  DryRun: Boolean
}

type AwsEc2DeleteNetworkInterfacePermissionOutput {
  Return: Boolean
}

input AwsEc2DeletePlacementGroupInput {
  DryRun: Boolean
  GroupName: String!
}

input AwsEc2DeleteRouteInput {
  DestinationCidrBlock: String
  DestinationIpv6CidrBlock: String
  DryRun: Boolean
  RouteTableId: String!
}

input AwsEc2DeleteRouteTableInput {
  DryRun: Boolean
  RouteTableId: String!
}

input AwsEc2DeleteSecurityGroupInput {
  GroupId: String
  GroupName: String
  DryRun: Boolean
}

input AwsEc2DeleteSnapshotInput {
  SnapshotId: String!
  DryRun: Boolean
}

input AwsEc2DeleteSpotDatafeedSubscriptionInput {
  DryRun: Boolean
}

input AwsEc2DeleteSubnetInput {
  SubnetId: String!
  DryRun: Boolean
}

input AwsEc2DeleteTagsInput {
  DryRun: Boolean
  Resources: [String]!
  Tags: [AwsEc2SrInput]
}

input AwsEc2DeleteVolumeInput {
  VolumeId: String!
  DryRun: Boolean
}

input AwsEc2DeleteVpcEndpointConnectionNotificationsInput {
  DryRun: Boolean
  ConnectionNotificationIds: [String]!
}

type AwsEc2DeleteVpcEndpointConnectionNotificationsOutput {
  Unsuccessful: [AwsEc2Sd]
}

input AwsEc2DeleteVpcEndpointServiceConfigurationsInput {
  DryRun: Boolean
  ServiceIds: [String]!
}

type AwsEc2DeleteVpcEndpointServiceConfigurationsOutput {
  Unsuccessful: [AwsEc2Sd]
}

input AwsEc2DeleteVpcEndpointsInput {
  DryRun: Boolean
  VpcEndpointIds: [String]!
}

type AwsEc2DeleteVpcEndpointsOutput {
  Unsuccessful: [AwsEc2Sd]
}

input AwsEc2DeleteVpcInput {
  VpcId: String!
  DryRun: Boolean
}

input AwsEc2DeleteVpcPeeringConnectionInput {
  DryRun: Boolean
  VpcPeeringConnectionId: String!
}

type AwsEc2DeleteVpcPeeringConnectionOutput {
  Return: Boolean
}

input AwsEc2DeleteVpnConnectionInput {
  VpnConnectionId: String!
  DryRun: Boolean
}

input AwsEc2DeleteVpnConnectionRouteInput {
  DestinationCidrBlock: String!
  VpnConnectionId: String!
}

input AwsEc2DeleteVpnGatewayInput {
  VpnGatewayId: String!
  DryRun: Boolean
}

input AwsEc2DeregisterImageInput {
  ImageId: String!
  DryRun: Boolean
}

input AwsEc2DescribeAccountAttributesInput {
  AttributeNames: [String]
  DryRun: Boolean
}

type AwsEc2DescribeAccountAttributesOutput {
  AccountAttributes: [AwsEc2DescribeAccountAttributesOutputAccountAttributes]
}

type AwsEc2DescribeAccountAttributesOutputAccountAttributes {
  AttributeName: String
  AttributeValues: [AwsEc2DescribeAccountAttributesOutputAccountAttributesAttributeValues]
}

type AwsEc2DescribeAccountAttributesOutputAccountAttributesAttributeValues {
  AttributeValue: String
}

input AwsEc2DescribeAddressesInput {
  Filters: [AwsEc2SbyInput]
  PublicIps: [String]
  AllocationIds: [String]
  DryRun: Boolean
}

type AwsEc2DescribeAddressesOutput {
  Addresses: [AwsEc2DescribeAddressesOutputAddresses]
}

type AwsEc2DescribeAddressesOutputAddresses {
  InstanceId: String
  PublicIp: String
  AllocationId: String
  AssociationId: String
  Domain: String
  NetworkInterfaceId: String
  NetworkInterfaceOwnerId: String
  PrivateIpAddress: String
}

input AwsEc2DescribeAvailabilityZonesInput {
  Filters: [AwsEc2SbyInput]
  ZoneNames: [String]
  DryRun: Boolean
}

type AwsEc2DescribeAvailabilityZonesOutput {
  AvailabilityZones: [AwsEc2DescribeAvailabilityZonesOutputAvailabilityZones]
}

type AwsEc2DescribeAvailabilityZonesOutputAvailabilityZones {
  State: String
  Messages: [AwsEc2DescribeAvailabilityZonesOutputAvailabilityZonesMessages]
  RegionName: String
  ZoneName: String
}

type AwsEc2DescribeAvailabilityZonesOutputAvailabilityZonesMessages {
  Message: String
}

input AwsEc2DescribeBundleTasksInput {
  BundleIds: [String]
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
}

type AwsEc2DescribeBundleTasksOutput {
  BundleTasks: [AwsEc2S2l]
}

input AwsEc2DescribeClassicLinkInstancesInput {
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
  InstanceIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeClassicLinkInstancesOutput {
  Instances: [AwsEc2DescribeClassicLinkInstancesOutputInstances]
  NextToken: String
}

type AwsEc2DescribeClassicLinkInstancesOutputInstances {
  Groups: [AwsEc2S7m]
  InstanceId: String
  Tags: [AwsEc2Sr]
  VpcId: String
}

input AwsEc2DescribeConversionTasksInput {
  ConversionTaskIds: [String]
  DryRun: Boolean
}

type AwsEc2DescribeConversionTasksOutput {
  ConversionTasks: [AwsEc2Scq]
}

input AwsEc2DescribeCustomerGatewaysInput {
  CustomerGatewayIds: [String]
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
}

type AwsEc2DescribeCustomerGatewaysOutput {
  CustomerGateways: [AwsEc2S3x]
}

input AwsEc2DescribeDhcpOptionsInput {
  DhcpOptionsIds: [String]
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
}

type AwsEc2DescribeDhcpOptionsOutput {
  DhcpOptions: [AwsEc2S4e]
}

input AwsEc2DescribeEgressOnlyInternetGatewaysInput {
  DryRun: Boolean
  EgressOnlyInternetGatewayIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeEgressOnlyInternetGatewaysOutput {
  EgressOnlyInternetGateways: [AwsEc2S4l]
  NextToken: String
}

input AwsEc2DescribeElasticGpusInput {
  ElasticGpuIds: [String]
  DryRun: Boolean
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeElasticGpusOutput {
  ElasticGpuSet: [AwsEc2DescribeElasticGpusOutputElasticGpuSet]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeElasticGpusOutputElasticGpuSet {
  ElasticGpuId: String
  AvailabilityZone: String
  ElasticGpuType: String
  ElasticGpuHealth: AwsEc2DescribeElasticGpusOutputElasticGpuSetElasticGpuHealth
  ElasticGpuState: String
  InstanceId: String
}

type AwsEc2DescribeElasticGpusOutputElasticGpuSetElasticGpuHealth {
  Status: String
}

input AwsEc2DescribeExportTasksInput {
  ExportTaskIds: [String]
}

type AwsEc2DescribeExportTasksOutput {
  ExportTasks: [AwsEc2S58]
}

input AwsEc2DescribeFlowLogsInput {
  Filter: [AwsEc2SbyInput]
  FlowLogIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeFlowLogsOutput {
  FlowLogs: [AwsEc2DescribeFlowLogsOutputFlowLogs]
  NextToken: String
}

type AwsEc2DescribeFlowLogsOutputFlowLogs {
  CreationTime: Date
  DeliverLogsErrorMessage: String
  DeliverLogsPermissionArn: String
  DeliverLogsStatus: String
  FlowLogId: String
  FlowLogStatus: String
  LogGroupName: String
  ResourceId: String
  TrafficType: String
}

input AwsEc2DescribeFpgaImageAttributeInput {
  DryRun: Boolean
  FpgaImageId: String!
  Attribute: String!
}

type AwsEc2DescribeFpgaImageAttributeOutput {
  FpgaImageAttribute: AwsEc2Sdu
}

input AwsEc2DescribeFpgaImagesInput {
  DryRun: Boolean
  FpgaImageIds: [String]
  Owners: [String]
  Filters: [AwsEc2SbyInput]
  NextToken: String
  MaxResults: Int
}

type AwsEc2DescribeFpgaImagesOutput {
  FpgaImages: [AwsEc2DescribeFpgaImagesOutputFpgaImages]
  NextToken: String
}

type AwsEc2DescribeFpgaImagesOutputFpgaImages {
  FpgaImageId: String
  FpgaImageGlobalId: String
  Name: String
  Description: String
  ShellVersion: String
  PciId: AwsEc2DescribeFpgaImagesOutputFpgaImagesPciId
  State: AwsEc2DescribeFpgaImagesOutputFpgaImagesState
  CreateTime: Date
  UpdateTime: Date
  OwnerId: String
  OwnerAlias: String
  ProductCodes: [AwsEc2Sdy]
  Tags: [AwsEc2Sr]
  Public: Boolean
}

type AwsEc2DescribeFpgaImagesOutputFpgaImagesPciId {
  DeviceId: String
  VendorId: String
  SubsystemId: String
  SubsystemVendorId: String
}

type AwsEc2DescribeFpgaImagesOutputFpgaImagesState {
  Code: String
  Message: String
}

input AwsEc2DescribeHostReservationOfferingsInput {
  Filter: [AwsEc2SbyInput]
  MaxDuration: Int
  MaxResults: Int
  MinDuration: Int
  NextToken: String
  OfferingId: String
}

type AwsEc2DescribeHostReservationOfferingsOutput {
  NextToken: String
  OfferingSet: [AwsEc2DescribeHostReservationOfferingsOutputOfferingSet]
}

type AwsEc2DescribeHostReservationOfferingsOutputOfferingSet {
  CurrencyCode: String
  Duration: Int
  HourlyPrice: String
  InstanceFamily: String
  OfferingId: String
  PaymentOption: String
  UpfrontPrice: String
}

input AwsEc2DescribeHostReservationsInput {
  Filter: [AwsEc2SbyInput]
  HostReservationIdSet: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeHostReservationsOutput {
  HostReservationSet: [AwsEc2DescribeHostReservationsOutputHostReservationSet]
  NextToken: String
}

type AwsEc2DescribeHostReservationsOutputHostReservationSet {
  Count: Int
  CurrencyCode: String
  Duration: Int
  End: Date
  HostIdSet: [String]
  HostReservationId: String
  HourlyPrice: String
  InstanceFamily: String
  OfferingId: String
  PaymentOption: String
  Start: Date
  State: String
  UpfrontPrice: String
}

input AwsEc2DescribeHostsInput {
  Filter: [AwsEc2SbyInput]
  HostIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeHostsOutput {
  Hosts: [AwsEc2DescribeHostsOutputHosts]
  NextToken: String
}

type AwsEc2DescribeHostsOutputHosts {
  AutoPlacement: String
  AvailabilityZone: String
  AvailableCapacity: AwsEc2DescribeHostsOutputHostsAvailableCapacity
  ClientToken: String
  HostId: String
  HostProperties: AwsEc2DescribeHostsOutputHostsHostProperties
  HostReservationId: String
  Instances: [AwsEc2DescribeHostsOutputHostsInstances]
  State: String
}

type AwsEc2DescribeHostsOutputHostsAvailableCapacity {
  AvailableInstanceCapacity: [AwsEc2DescribeHostsOutputHostsAvailableCapacityAvailableInstanceCapacity]
  AvailableVCpus: Int
}

type AwsEc2DescribeHostsOutputHostsAvailableCapacityAvailableInstanceCapacity {
  AvailableCapacity: Int
  InstanceType: String
  TotalCapacity: Int
}

type AwsEc2DescribeHostsOutputHostsHostProperties {
  Cores: Int
  InstanceType: String
  Sockets: Int
  TotalVCpus: Int
}

type AwsEc2DescribeHostsOutputHostsInstances {
  InstanceId: String
  InstanceType: String
}

input AwsEc2DescribeIamInstanceProfileAssociationsInput {
  AssociationIds: [String]
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeIamInstanceProfileAssociationsOutput {
  IamInstanceProfileAssociations: [AwsEc2S1b]
  NextToken: String
}

input AwsEc2DescribeIdentityIdFormatInput {
  PrincipalArn: String!
  Resource: String
}

type AwsEc2DescribeIdentityIdFormatOutput {
  Statuses: [AwsEc2Sf6]
}

input AwsEc2DescribeIdFormatInput {
  Resource: String
}

type AwsEc2DescribeIdFormatOutput {
  Statuses: [AwsEc2Sf6]
}

input AwsEc2DescribeImageAttributeInput {
  Attribute: String!
  ImageId: String!
  DryRun: Boolean
}

type AwsEc2DescribeImageAttributeOutput {
  BlockDeviceMappings: [AwsEc2S4y]
  ImageId: String
  LaunchPermissions: [AwsEc2Sfe]
  ProductCodes: [AwsEc2Sdy]
  Description: AwsEc2S4i
  KernelId: AwsEc2S4i
  RamdiskId: AwsEc2S4i
  SriovNetSupport: AwsEc2S4i
}

input AwsEc2DescribeImagesInput {
  ExecutableUsers: [String]
  Filters: [AwsEc2SbyInput]
  ImageIds: [String]
  Owners: [String]
  DryRun: Boolean
}

type AwsEc2DescribeImagesOutput {
  Images: [AwsEc2DescribeImagesOutputImages]
}

type AwsEc2DescribeImagesOutputImages {
  Architecture: String
  CreationDate: String
  ImageId: String
  ImageLocation: String
  ImageType: String
  Public: Boolean
  KernelId: String
  OwnerId: String
  Platform: String
  ProductCodes: [AwsEc2Sdy]
  RamdiskId: String
  State: String
  BlockDeviceMappings: [AwsEc2S4y]
  Description: String
  EnaSupport: Boolean
  Hypervisor: String
  ImageOwnerAlias: String
  Name: String
  RootDeviceName: String
  RootDeviceType: String
  SriovNetSupport: String
  StateReason: AwsEc2Sfr
  Tags: [AwsEc2Sr]
  VirtualizationType: String
}

input AwsEc2DescribeImportImageTasksInput {
  DryRun: Boolean
  Filters: [AwsEc2SbyInput]
  ImportTaskIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeImportImageTasksOutput {
  ImportImageTasks: [AwsEc2DescribeImportImageTasksOutputImportImageTasks]
  NextToken: String
}

type AwsEc2DescribeImportImageTasksOutputImportImageTasks {
  Architecture: String
  Description: String
  Hypervisor: String
  ImageId: String
  ImportTaskId: String
  LicenseType: String
  Platform: String
  Progress: String
  SnapshotDetails: [AwsEc2Sfy]
  Status: String
  StatusMessage: String
}

input AwsEc2DescribeImportSnapshotTasksInput {
  DryRun: Boolean
  Filters: [AwsEc2SbyInput]
  ImportTaskIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeImportSnapshotTasksOutput {
  ImportSnapshotTasks: [AwsEc2DescribeImportSnapshotTasksOutputImportSnapshotTasks]
  NextToken: String
}

type AwsEc2DescribeImportSnapshotTasksOutputImportSnapshotTasks {
  Description: String
  ImportTaskId: String
  SnapshotTaskDetail: AwsEc2Sg5
}

input AwsEc2DescribeInstanceAttributeInput {
  Attribute: String!
  DryRun: Boolean
  InstanceId: String!
}

type AwsEc2DescribeInstanceAttributeOutput {
  Groups: [AwsEc2S7m]
  BlockDeviceMappings: [AwsEc2Sg9]
  DisableApiTermination: AwsEc2Sgc
  EnaSupport: AwsEc2Sgc
  EbsOptimized: AwsEc2Sgc
  InstanceId: String
  InstanceInitiatedShutdownBehavior: AwsEc2S4i
  InstanceType: AwsEc2S4i
  KernelId: AwsEc2S4i
  ProductCodes: [AwsEc2Sdy]
  RamdiskId: AwsEc2S4i
  RootDeviceName: AwsEc2S4i
  SourceDestCheck: AwsEc2Sgc
  SriovNetSupport: AwsEc2S4i
  UserData: AwsEc2S4i
}

input AwsEc2DescribeInstanceCreditSpecificationsInput {
  DryRun: Boolean
  Filters: [AwsEc2SbyInput]
  InstanceIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeInstanceCreditSpecificationsOutput {
  InstanceCreditSpecifications: [AwsEc2DescribeInstanceCreditSpecificationsOutputInstanceCreditSpecifications]
  NextToken: String
}

type AwsEc2DescribeInstanceCreditSpecificationsOutputInstanceCreditSpecifications {
  InstanceId: String
  CpuCredits: String
}

input AwsEc2DescribeInstancesInput {
  Filters: [AwsEc2SbyInput]
  InstanceIds: [String]
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeInstancesOutput {
  Reservations: [AwsEc2Sgz]
  NextToken: String
}

input AwsEc2DescribeInstanceStatusInput {
  Filters: [AwsEc2SbyInput]
  InstanceIds: [String]
  MaxResults: Int
  NextToken: String
  DryRun: Boolean
  IncludeAllInstances: Boolean
}

type AwsEc2DescribeInstanceStatusOutput {
  InstanceStatuses: [AwsEc2DescribeInstanceStatusOutputInstanceStatuses]
  NextToken: String
}

type AwsEc2DescribeInstanceStatusOutputInstanceStatuses {
  AvailabilityZone: String
  Events: [AwsEc2DescribeInstanceStatusOutputInstanceStatusesEvents]
  InstanceId: String
  InstanceState: AwsEc2Sgo
  InstanceStatus: AwsEc2Sgq
  SystemStatus: AwsEc2Sgq
}

type AwsEc2DescribeInstanceStatusOutputInstanceStatusesEvents {
  Code: String
  Description: String
  NotAfter: Date
  NotBefore: Date
}

input AwsEc2DescribeInternetGatewaysInput {
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
  InternetGatewayIds: [String]
}

type AwsEc2DescribeInternetGatewaysOutput {
  InternetGateways: [AwsEc2S5e]
}

input AwsEc2DescribeKeyPairsInput {
  Filters: [AwsEc2SbyInput]
  KeyNames: [String]
  DryRun: Boolean
}

type AwsEc2DescribeKeyPairsOutput {
  KeyPairs: [AwsEc2DescribeKeyPairsOutputKeyPairs]
}

type AwsEc2DescribeKeyPairsOutputKeyPairs {
  KeyFingerprint: String
  KeyName: String
}

input AwsEc2DescribeLaunchTemplatesInput {
  DryRun: Boolean
  LaunchTemplateIds: [String]
  LaunchTemplateNames: [String]
  Filters: [AwsEc2SbyInput]
  NextToken: String
  MaxResults: Int
}

type AwsEc2DescribeLaunchTemplatesOutput {
  LaunchTemplates: [AwsEc2S6d]
  NextToken: String
}

input AwsEc2DescribeLaunchTemplateVersionsInput {
  DryRun: Boolean
  LaunchTemplateId: String
  LaunchTemplateName: String
  Versions: [String]
  MinVersion: String
  MaxVersion: String
  NextToken: String
  MaxResults: Int
  Filters: [AwsEc2SbyInput]
}

type AwsEc2DescribeLaunchTemplateVersionsOutput {
  LaunchTemplateVersions: [AwsEc2S6g]
  NextToken: String
}

input AwsEc2DescribeMovingAddressesInput {
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  PublicIps: [String]
}

type AwsEc2DescribeMovingAddressesOutput {
  MovingAddressStatuses: [AwsEc2DescribeMovingAddressesOutputMovingAddressStatuses]
  NextToken: String
}

type AwsEc2DescribeMovingAddressesOutputMovingAddressStatuses {
  MoveStatus: String
  PublicIp: String
}

input AwsEc2DescribeNatGatewaysInput {
  Filter: [AwsEc2SbyInput]
  MaxResults: Int
  NatGatewayIds: [String]
  NextToken: String
}

type AwsEc2DescribeNatGatewaysOutput {
  NatGateways: [AwsEc2S71]
  NextToken: String
}

input AwsEc2DescribeNetworkAclsInput {
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
  NetworkAclIds: [String]
}

type AwsEc2DescribeNetworkAclsOutput {
  NetworkAcls: [AwsEc2S78]
}

input AwsEc2DescribeNetworkInterfaceAttributeInput {
  Attribute: String
  DryRun: Boolean
  NetworkInterfaceId: String!
}

type AwsEc2DescribeNetworkInterfaceAttributeOutput {
  Attachment: AwsEc2S7l
  Description: AwsEc2S4i
  Groups: [AwsEc2S7m]
  NetworkInterfaceId: String
  SourceDestCheck: AwsEc2Sgc
}

input AwsEc2DescribeNetworkInterfacePermissionsInput {
  NetworkInterfacePermissionIds: [String]
  Filters: [AwsEc2SbyInput]
  NextToken: String
  MaxResults: Int
}

type AwsEc2DescribeNetworkInterfacePermissionsOutput {
  NetworkInterfacePermissions: [AwsEc2S7x]
  NextToken: String
}

input AwsEc2DescribeNetworkInterfacesInput {
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
  NetworkInterfaceIds: [String]
}

type AwsEc2DescribeNetworkInterfacesOutput {
  NetworkInterfaces: [AwsEc2S7j]
}

input AwsEc2DescribePlacementGroupsInput {
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
  GroupNames: [String]
}

type AwsEc2DescribePlacementGroupsOutput {
  PlacementGroups: [AwsEc2DescribePlacementGroupsOutputPlacementGroups]
}

type AwsEc2DescribePlacementGroupsOutputPlacementGroups {
  GroupName: String
  State: String
  Strategy: String
}

input AwsEc2DescribePrefixListsInput {
  DryRun: Boolean
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
  PrefixListIds: [String]
}

type AwsEc2DescribePrefixListsOutput {
  NextToken: String
  PrefixLists: [AwsEc2DescribePrefixListsOutputPrefixLists]
}

type AwsEc2DescribePrefixListsOutputPrefixLists {
  Cidrs: [String]
  PrefixListId: String
  PrefixListName: String
}

input AwsEc2DescribeRegionsInput {
  Filters: [AwsEc2SbyInput]
  RegionNames: [String]
  DryRun: Boolean
}

type AwsEc2DescribeRegionsOutput {
  Regions: [AwsEc2DescribeRegionsOutputRegions]
}

type AwsEc2DescribeRegionsOutputRegions {
  Endpoint: String
  RegionName: String
}

input AwsEc2DescribeReservedInstancesInput {
  Filters: [AwsEc2SbyInput]
  OfferingClass: String
  ReservedInstancesIds: [String]
  DryRun: Boolean
  OfferingType: String
}

input AwsEc2DescribeReservedInstancesListingsInput {
  Filters: [AwsEc2SbyInput]
  ReservedInstancesId: String
  ReservedInstancesListingId: String
}

type AwsEc2DescribeReservedInstancesListingsOutput {
  ReservedInstancesListings: [AwsEc2S2w]
}

input AwsEc2DescribeReservedInstancesModificationsInput {
  Filters: [AwsEc2SbyInput]
  ReservedInstancesModificationIds: [String]
  NextToken: String
}

type AwsEc2DescribeReservedInstancesModificationsOutput {
  NextToken: String
  ReservedInstancesModifications: [AwsEc2DescribeReservedInstancesModificationsOutputReservedInstancesModifications]
}

type AwsEc2DescribeReservedInstancesModificationsOutputReservedInstancesModifications {
  ClientToken: String
  CreateDate: Date
  EffectiveDate: Date
  ModificationResults: [AwsEc2DescribeReservedInstancesModificationsOutputReservedInstancesModificationsModificationResults]
  ReservedInstancesIds: [AwsEc2DescribeReservedInstancesModificationsOutputReservedInstancesModificationsReservedInstancesIds]
  ReservedInstancesModificationId: String
  Status: String
  StatusMessage: String
  UpdateDate: Date
}

type AwsEc2DescribeReservedInstancesModificationsOutputReservedInstancesModificationsModificationResults {
  ReservedInstancesId: String
  TargetConfiguration: AwsEc2Sjh
}

type AwsEc2DescribeReservedInstancesModificationsOutputReservedInstancesModificationsReservedInstancesIds {
  ReservedInstancesId: String
}

input AwsEc2DescribeReservedInstancesOfferingsInput {
  AvailabilityZone: String
  Filters: [AwsEc2SbyInput]
  IncludeMarketplace: Boolean
  InstanceType: String
  MaxDuration: JSON
  MaxInstanceCount: Int
  MinDuration: JSON
  OfferingClass: String
  ProductDescription: String
  ReservedInstancesOfferingIds: [String]
  DryRun: Boolean
  InstanceTenancy: String
  MaxResults: Int
  NextToken: String
  OfferingType: String
}

type AwsEc2DescribeReservedInstancesOfferingsOutput {
  ReservedInstancesOfferings: [AwsEc2DescribeReservedInstancesOfferingsOutputReservedInstancesOfferings]
  NextToken: String
}

type AwsEc2DescribeReservedInstancesOfferingsOutputReservedInstancesOfferings {
  AvailabilityZone: String
  Duration: JSON
  FixedPrice: Float
  InstanceType: String
  ProductDescription: String
  ReservedInstancesOfferingId: String
  UsagePrice: Float
  CurrencyCode: String
  InstanceTenancy: String
  Marketplace: Boolean
  OfferingClass: String
  OfferingType: String
  PricingDetails: [AwsEc2DescribeReservedInstancesOfferingsOutputReservedInstancesOfferingsPricingDetails]
  RecurringCharges: [AwsEc2Sj4]
  Scope: String
}

type AwsEc2DescribeReservedInstancesOfferingsOutputReservedInstancesOfferingsPricingDetails {
  Count: Int
  Price: JSON
}

type AwsEc2DescribeReservedInstancesOutput {
  ReservedInstances: [AwsEc2DescribeReservedInstancesOutputReservedInstances]
}

type AwsEc2DescribeReservedInstancesOutputReservedInstances {
  AvailabilityZone: String
  Duration: JSON
  End: Date
  FixedPrice: Float
  InstanceCount: Int
  InstanceType: String
  ProductDescription: String
  ReservedInstancesId: String
  Start: Date
  State: String
  UsagePrice: Float
  CurrencyCode: String
  InstanceTenancy: String
  OfferingClass: String
  OfferingType: String
  RecurringCharges: [AwsEc2Sj4]
  Scope: String
  Tags: [AwsEc2Sr]
}

input AwsEc2DescribeRouteTablesInput {
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
  RouteTableIds: [String]
}

type AwsEc2DescribeRouteTablesOutput {
  RouteTables: [AwsEc2S8a]
}

input AwsEc2DescribeScheduledInstanceAvailabilityFirstSlotStartTimeRangeInput {
  EarliestTime: Date!
  LatestTime: Date!
}

input AwsEc2DescribeScheduledInstanceAvailabilityInput {
  DryRun: Boolean
  Filters: [AwsEc2SbyInput]
  FirstSlotStartTimeRange: AwsEc2DescribeScheduledInstanceAvailabilityFirstSlotStartTimeRangeInput!
  MaxResults: Int
  MaxSlotDurationInHours: Int
  MinSlotDurationInHours: Int
  NextToken: String
  Recurrence: AwsEc2DescribeScheduledInstanceAvailabilityRecurrenceInput!
}

type AwsEc2DescribeScheduledInstanceAvailabilityOutput {
  NextToken: String
  ScheduledInstanceAvailabilitySet: [AwsEc2DescribeScheduledInstanceAvailabilityOutputScheduledInstanceAvailabilitySet]
}

type AwsEc2DescribeScheduledInstanceAvailabilityOutputScheduledInstanceAvailabilitySet {
  AvailabilityZone: String
  AvailableInstanceCount: Int
  FirstSlotStartTime: Date
  HourlyPrice: String
  InstanceType: String
  MaxTermDurationInDays: Int
  MinTermDurationInDays: Int
  NetworkPlatform: String
  Platform: String
  PurchaseToken: String
  Recurrence: AwsEc2Sk1
  SlotDurationInHours: Int
  TotalScheduledInstanceHours: Int
}

input AwsEc2DescribeScheduledInstanceAvailabilityRecurrenceInput {
  Frequency: String
  Interval: Int
  OccurrenceDays: [Int]
  OccurrenceRelativeToEnd: Boolean
  OccurrenceUnit: String
}

input AwsEc2DescribeScheduledInstancesInput {
  DryRun: Boolean
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
  ScheduledInstanceIds: [String]
  SlotStartTimeRange: AwsEc2DescribeScheduledInstancesSlotStartTimeRangeInput
}

type AwsEc2DescribeScheduledInstancesOutput {
  NextToken: String
  ScheduledInstanceSet: [AwsEc2Sk8]
}

input AwsEc2DescribeScheduledInstancesSlotStartTimeRangeInput {
  EarliestTime: Date
  LatestTime: Date
}

input AwsEc2DescribeSecurityGroupReferencesInput {
  DryRun: Boolean
  GroupId: [String]!
}

type AwsEc2DescribeSecurityGroupReferencesOutput {
  SecurityGroupReferenceSet: [AwsEc2DescribeSecurityGroupReferencesOutputSecurityGroupReferenceSet]
}

type AwsEc2DescribeSecurityGroupReferencesOutputSecurityGroupReferenceSet {
  GroupId: String!
  ReferencingVpcId: String!
  VpcPeeringConnectionId: String
}

input AwsEc2DescribeSecurityGroupsInput {
  Filters: [AwsEc2SbyInput]
  GroupIds: [String]
  GroupNames: [String]
  DryRun: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsEc2DescribeSecurityGroupsOutput {
  SecurityGroups: [AwsEc2DescribeSecurityGroupsOutputSecurityGroups]
  NextToken: String
}

type AwsEc2DescribeSecurityGroupsOutputSecurityGroups {
  Description: String
  GroupName: String
  IpPermissions: [AwsEc2S25]
  OwnerId: String
  GroupId: String
  IpPermissionsEgress: [AwsEc2S25]
  Tags: [AwsEc2Sr]
  VpcId: String
}

input AwsEc2DescribeSnapshotAttributeInput {
  Attribute: String!
  SnapshotId: String!
  DryRun: Boolean
}

type AwsEc2DescribeSnapshotAttributeOutput {
  CreateVolumePermissions: [AwsEc2Skm]
  ProductCodes: [AwsEc2Sdy]
  SnapshotId: String
}

input AwsEc2DescribeSnapshotsInput {
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
  OwnerIds: [String]
  RestorableByUserIds: [String]
  SnapshotIds: [String]
  DryRun: Boolean
}

type AwsEc2DescribeSnapshotsOutput {
  Snapshots: [AwsEc2S8m]
  NextToken: String
}

input AwsEc2DescribeSpotDatafeedSubscriptionInput {
  DryRun: Boolean
}

type AwsEc2DescribeSpotDatafeedSubscriptionOutput {
  SpotDatafeedSubscription: AwsEc2S8q
}

input AwsEc2DescribeSpotFleetInstancesInput {
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  SpotFleetRequestId: String!
}

type AwsEc2DescribeSpotFleetInstancesOutput {
  ActiveInstances: [AwsEc2DescribeSpotFleetInstancesOutputActiveInstances]!
  NextToken: String
  SpotFleetRequestId: String!
}

type AwsEc2DescribeSpotFleetInstancesOutputActiveInstances {
  InstanceId: String
  InstanceType: String
  SpotInstanceRequestId: String
  InstanceHealth: String
}

input AwsEc2DescribeSpotFleetRequestHistoryInput {
  DryRun: Boolean
  EventType: String
  MaxResults: Int
  NextToken: String
  SpotFleetRequestId: String!
  StartTime: Date!
}

type AwsEc2DescribeSpotFleetRequestHistoryOutput {
  HistoryRecords: [AwsEc2DescribeSpotFleetRequestHistoryOutputHistoryRecords]!
  LastEvaluatedTime: Date!
  NextToken: String
  SpotFleetRequestId: String!
  StartTime: Date!
}

type AwsEc2DescribeSpotFleetRequestHistoryOutputHistoryRecords {
  EventInformation: AwsEc2DescribeSpotFleetRequestHistoryOutputHistoryRecordsEventInformation!
  EventType: String!
  Timestamp: Date!
}

type AwsEc2DescribeSpotFleetRequestHistoryOutputHistoryRecordsEventInformation {
  EventDescription: String
  EventSubType: String
  InstanceId: String
}

input AwsEc2DescribeSpotFleetRequestsInput {
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  SpotFleetRequestIds: [String]
}

type AwsEc2DescribeSpotFleetRequestsOutput {
  NextToken: String
  SpotFleetRequestConfigs: [AwsEc2DescribeSpotFleetRequestsOutputSpotFleetRequestConfigs]!
}

type AwsEc2DescribeSpotFleetRequestsOutputSpotFleetRequestConfigs {
  ActivityStatus: String
  CreateTime: Date!
  SpotFleetRequestConfig: AwsEc2Slb!
  SpotFleetRequestId: String!
  SpotFleetRequestState: String!
}

input AwsEc2DescribeSpotInstanceRequestsInput {
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
  SpotInstanceRequestIds: [String]
}

type AwsEc2DescribeSpotInstanceRequestsOutput {
  SpotInstanceRequests: [AwsEc2Sm1]
}

input AwsEc2DescribeSpotPriceHistoryInput {
  Filters: [AwsEc2SbyInput]
  AvailabilityZone: String
  DryRun: Boolean
  EndTime: Date
  InstanceTypes: [String]
  MaxResults: Int
  NextToken: String
  ProductDescriptions: [String]
  StartTime: Date
}

type AwsEc2DescribeSpotPriceHistoryOutput {
  NextToken: String
  SpotPriceHistory: [AwsEc2DescribeSpotPriceHistoryOutputSpotPriceHistory]
}

type AwsEc2DescribeSpotPriceHistoryOutputSpotPriceHistory {
  AvailabilityZone: String
  InstanceType: String
  ProductDescription: String
  SpotPrice: String
  Timestamp: Date
}

input AwsEc2DescribeStaleSecurityGroupsInput {
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  VpcId: String!
}

type AwsEc2DescribeStaleSecurityGroupsOutput {
  NextToken: String
  StaleSecurityGroupSet: [AwsEc2DescribeStaleSecurityGroupsOutputStaleSecurityGroupSet]
}

type AwsEc2DescribeStaleSecurityGroupsOutputStaleSecurityGroupSet {
  Description: String
  GroupId: String!
  GroupName: String
  StaleIpPermissions: [AwsEc2Smh]
  StaleIpPermissionsEgress: [AwsEc2Smh]
  VpcId: String
}

input AwsEc2DescribeSubnetsInput {
  Filters: [AwsEc2SbyInput]
  SubnetIds: [String]
  DryRun: Boolean
}

type AwsEc2DescribeSubnetsOutput {
  Subnets: [AwsEc2S40]
}

input AwsEc2DescribeTagsInput {
  DryRun: Boolean
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeTagsOutput {
  NextToken: String
  Tags: [AwsEc2DescribeTagsOutputTags]
}

type AwsEc2DescribeTagsOutputTags {
  Key: String
  ResourceId: String
  ResourceType: String
  Value: String
}

input AwsEc2DescribeVolumeAttributeInput {
  Attribute: String
  VolumeId: String!
  DryRun: Boolean
}

type AwsEc2DescribeVolumeAttributeOutput {
  AutoEnableIO: AwsEc2Sgc
  ProductCodes: [AwsEc2Sdy]
  VolumeId: String
}

input AwsEc2DescribeVolumesInput {
  Filters: [AwsEc2SbyInput]
  VolumeIds: [String]
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
}

input AwsEc2DescribeVolumesModificationsInput {
  DryRun: Boolean
  VolumeIds: [String]
  Filters: [AwsEc2SbyInput]
  NextToken: String
  MaxResults: Int
}

type AwsEc2DescribeVolumesModificationsOutput {
  VolumesModifications: [AwsEc2Snh]
  NextToken: String
}

type AwsEc2DescribeVolumesOutput {
  Volumes: [AwsEc2S90]
  NextToken: String
}

input AwsEc2DescribeVolumeStatusInput {
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
  VolumeIds: [String]
  DryRun: Boolean
}

type AwsEc2DescribeVolumeStatusOutput {
  NextToken: String
  VolumeStatuses: [AwsEc2DescribeVolumeStatusOutputVolumeStatuses]
}

type AwsEc2DescribeVolumeStatusOutputVolumeStatuses {
  Actions: [AwsEc2DescribeVolumeStatusOutputVolumeStatusesActions]
  AvailabilityZone: String
  Events: [AwsEc2DescribeVolumeStatusOutputVolumeStatusesEvents]
  VolumeId: String
  VolumeStatus: AwsEc2DescribeVolumeStatusOutputVolumeStatusesVolumeStatus
}

type AwsEc2DescribeVolumeStatusOutputVolumeStatusesActions {
  Code: String
  Description: String
  EventId: String
  EventType: String
}

type AwsEc2DescribeVolumeStatusOutputVolumeStatusesEvents {
  Description: String
  EventId: String
  EventType: String
  NotAfter: Date
  NotBefore: Date
}

type AwsEc2DescribeVolumeStatusOutputVolumeStatusesVolumeStatus {
  Details: [AwsEc2DescribeVolumeStatusOutputVolumeStatusesVolumeStatusDetails]
  Status: String
}

type AwsEc2DescribeVolumeStatusOutputVolumeStatusesVolumeStatusDetails {
  Name: String
  Status: String
}

input AwsEc2DescribeVpcAttributeInput {
  Attribute: String!
  VpcId: String!
  DryRun: Boolean
}

type AwsEc2DescribeVpcAttributeOutput {
  VpcId: String
  EnableDnsHostnames: AwsEc2Sgc
  EnableDnsSupport: AwsEc2Sgc
}

input AwsEc2DescribeVpcClassicLinkDnsSupportInput {
  MaxResults: Int
  NextToken: String
  VpcIds: [String]
}

type AwsEc2DescribeVpcClassicLinkDnsSupportOutput {
  NextToken: String
  Vpcs: [AwsEc2DescribeVpcClassicLinkDnsSupportOutputVpcs]
}

type AwsEc2DescribeVpcClassicLinkDnsSupportOutputVpcs {
  ClassicLinkDnsSupported: Boolean
  VpcId: String
}

input AwsEc2DescribeVpcClassicLinkInput {
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
  VpcIds: [String]
}

type AwsEc2DescribeVpcClassicLinkOutput {
  Vpcs: [AwsEc2DescribeVpcClassicLinkOutputVpcs]
}

type AwsEc2DescribeVpcClassicLinkOutputVpcs {
  ClassicLinkEnabled: Boolean
  Tags: [AwsEc2Sr]
  VpcId: String
}

input AwsEc2DescribeVpcEndpointConnectionNotificationsInput {
  DryRun: Boolean
  ConnectionNotificationId: String
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeVpcEndpointConnectionNotificationsOutput {
  ConnectionNotificationSet: [AwsEc2S9g]
  NextToken: String
}

input AwsEc2DescribeVpcEndpointConnectionsInput {
  DryRun: Boolean
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeVpcEndpointConnectionsOutput {
  VpcEndpointConnections: [AwsEc2DescribeVpcEndpointConnectionsOutputVpcEndpointConnections]
  NextToken: String
}

type AwsEc2DescribeVpcEndpointConnectionsOutputVpcEndpointConnections {
  ServiceId: String
  VpcEndpointId: String
  VpcEndpointOwner: String
  VpcEndpointState: String
  CreationTimestamp: Date
}

input AwsEc2DescribeVpcEndpointServiceConfigurationsInput {
  DryRun: Boolean
  ServiceIds: [String]
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeVpcEndpointServiceConfigurationsOutput {
  ServiceConfigurations: [AwsEc2S9l]
  NextToken: String
}

input AwsEc2DescribeVpcEndpointServicePermissionsInput {
  DryRun: Boolean
  ServiceId: String!
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeVpcEndpointServicePermissionsOutput {
  AllowedPrincipals: [AwsEc2DescribeVpcEndpointServicePermissionsOutputAllowedPrincipals]
  NextToken: String
}

type AwsEc2DescribeVpcEndpointServicePermissionsOutputAllowedPrincipals {
  PrincipalType: String
  Principal: String
}

input AwsEc2DescribeVpcEndpointServicesInput {
  DryRun: Boolean
  ServiceNames: [String]
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeVpcEndpointServicesOutput {
  ServiceNames: [String]
  ServiceDetails: [AwsEc2DescribeVpcEndpointServicesOutputServiceDetails]
  NextToken: String
}

type AwsEc2DescribeVpcEndpointServicesOutputServiceDetails {
  ServiceName: String
  ServiceType: [AwsEc2S9m]
  AvailabilityZones: [String]
  Owner: String
  BaseEndpointDnsNames: [String]
  PrivateDnsName: String
  VpcEndpointPolicySupported: Boolean
  AcceptanceRequired: Boolean
}

input AwsEc2DescribeVpcEndpointsInput {
  DryRun: Boolean
  VpcEndpointIds: [String]
  Filters: [AwsEc2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEc2DescribeVpcEndpointsOutput {
  VpcEndpoints: [AwsEc2S98]
  NextToken: String
}

input AwsEc2DescribeVpcPeeringConnectionsInput {
  Filters: [AwsEc2SbyInput]
  DryRun: Boolean
  VpcPeeringConnectionIds: [String]
}

type AwsEc2DescribeVpcPeeringConnectionsOutput {
  VpcPeeringConnections: [AwsEc2Sh]
}

input AwsEc2DescribeVpcsInput {
  Filters: [AwsEc2SbyInput]
  VpcIds: [String]
  DryRun: Boolean
}

type AwsEc2DescribeVpcsOutput {
  Vpcs: [AwsEc2S45]
}

input AwsEc2DescribeVpnConnectionsInput {
  Filters: [AwsEc2SbyInput]
  VpnConnectionIds: [String]
  DryRun: Boolean
}

type AwsEc2DescribeVpnConnectionsOutput {
  VpnConnections: [AwsEc2S9x]
}

input AwsEc2DescribeVpnGatewaysInput {
  Filters: [AwsEc2SbyInput]
  VpnGatewayIds: [String]
  DryRun: Boolean
}

type AwsEc2DescribeVpnGatewaysOutput {
  VpnGateways: [AwsEc2Sa9]
}

input AwsEc2DetachClassicLinkVpcInput {
  DryRun: Boolean
  InstanceId: String!
  VpcId: String!
}

type AwsEc2DetachClassicLinkVpcOutput {
  Return: Boolean
}

input AwsEc2DetachInternetGatewayInput {
  DryRun: Boolean
  InternetGatewayId: String!
  VpcId: String!
}

input AwsEc2DetachNetworkInterfaceInput {
  AttachmentId: String!
  DryRun: Boolean
  Force: Boolean
}

input AwsEc2DetachVolumeInput {
  Device: String
  Force: Boolean
  InstanceId: String
  VolumeId: String!
  DryRun: Boolean
}

input AwsEc2DetachVpnGatewayInput {
  VpcId: String!
  VpnGatewayId: String!
  DryRun: Boolean
}

input AwsEc2DisableVgwRoutePropagationInput {
  GatewayId: String!
  RouteTableId: String!
}

input AwsEc2DisableVpcClassicLinkDnsSupportInput {
  VpcId: String
}

type AwsEc2DisableVpcClassicLinkDnsSupportOutput {
  Return: Boolean
}

input AwsEc2DisableVpcClassicLinkInput {
  DryRun: Boolean
  VpcId: String!
}

type AwsEc2DisableVpcClassicLinkOutput {
  Return: Boolean
}

input AwsEc2DisassociateAddressInput {
  AssociationId: String
  PublicIp: String
  DryRun: Boolean
}

input AwsEc2DisassociateIamInstanceProfileInput {
  AssociationId: String!
}

type AwsEc2DisassociateIamInstanceProfileOutput {
  IamInstanceProfileAssociation: AwsEc2S1b
}

input AwsEc2DisassociateRouteTableInput {
  AssociationId: String!
  DryRun: Boolean
}

input AwsEc2DisassociateSubnetCidrBlockInput {
  AssociationId: String!
}

type AwsEc2DisassociateSubnetCidrBlockOutput {
  Ipv6CidrBlockAssociation: AwsEc2S1i
  SubnetId: String
}

input AwsEc2DisassociateVpcCidrBlockInput {
  AssociationId: String!
}

type AwsEc2DisassociateVpcCidrBlockOutput {
  Ipv6CidrBlockAssociation: AwsEc2S1n
  CidrBlockAssociation: AwsEc2S1q
  VpcId: String
}

input AwsEc2EnableVgwRoutePropagationInput {
  GatewayId: String!
  RouteTableId: String!
}

input AwsEc2EnableVolumeIOInput {
  DryRun: Boolean
  VolumeId: String!
}

input AwsEc2EnableVpcClassicLinkDnsSupportInput {
  VpcId: String
}

type AwsEc2EnableVpcClassicLinkDnsSupportOutput {
  Return: Boolean
}

input AwsEc2EnableVpcClassicLinkInput {
  DryRun: Boolean
  VpcId: String!
}

type AwsEc2EnableVpcClassicLinkOutput {
  Return: Boolean
}

input AwsEc2GetConsoleOutputInput {
  InstanceId: String!
  DryRun: Boolean
}

type AwsEc2GetConsoleOutputOutput {
  InstanceId: String
  Output: String
  Timestamp: Date
}

input AwsEc2GetConsoleScreenshotInput {
  DryRun: Boolean
  InstanceId: String!
  WakeUp: Boolean
}

type AwsEc2GetConsoleScreenshotOutput {
  ImageData: String
  InstanceId: String
}

input AwsEc2GetHostReservationPurchasePreviewInput {
  HostIdSet: [String]!
  OfferingId: String!
}

type AwsEc2GetHostReservationPurchasePreviewOutput {
  CurrencyCode: String
  Purchase: [AwsEc2Sps]
  TotalHourlyPrice: String
  TotalUpfrontPrice: String
}

input AwsEc2GetLaunchTemplateDataInput {
  DryRun: Boolean
  InstanceId: String!
}

type AwsEc2GetLaunchTemplateDataOutput {
  LaunchTemplateData: AwsEc2S6h
}

input AwsEc2GetPasswordDataInput {
  InstanceId: String!
  DryRun: Boolean
}

type AwsEc2GetPasswordDataOutput {
  InstanceId: String
  PasswordData: String
  Timestamp: Date
}

input AwsEc2GetReservedInstancesExchangeQuoteInput {
  DryRun: Boolean
  ReservedInstanceIds: [String]!
  TargetConfigurations: [AwsEc2S5Input]
}

type AwsEc2GetReservedInstancesExchangeQuoteOutput {
  CurrencyCode: String
  IsValidExchange: Boolean
  OutputReservedInstancesWillExpireAt: Date
  PaymentDue: String
  ReservedInstanceValueRollup: AwsEc2Sq0
  ReservedInstanceValueSet: [AwsEc2GetReservedInstancesExchangeQuoteOutputReservedInstanceValueSet]
  TargetConfigurationValueRollup: AwsEc2Sq0
  TargetConfigurationValueSet: [AwsEc2GetReservedInstancesExchangeQuoteOutputTargetConfigurationValueSet]
  ValidationFailureReason: String
}

type AwsEc2GetReservedInstancesExchangeQuoteOutputReservedInstanceValueSet {
  ReservationValue: AwsEc2Sq0
  ReservedInstanceId: String
}

type AwsEc2GetReservedInstancesExchangeQuoteOutputTargetConfigurationValueSet {
  ReservationValue: AwsEc2Sq0
  TargetConfiguration: AwsEc2GetReservedInstancesExchangeQuoteOutputTargetConfigurationValueSetTargetConfiguration
}

type AwsEc2GetReservedInstancesExchangeQuoteOutputTargetConfigurationValueSetTargetConfiguration {
  InstanceCount: Int
  OfferingId: String
}

input AwsEc2ImportImageDiskContainersInput {
  Description: String
  DeviceName: String
  Format: String
  SnapshotId: String
  Url: String
  UserBucket: AwsEc2SqaInput
}

input AwsEc2ImportImageInput {
  Architecture: String
  ClientData: AwsEc2Sq7Input
  ClientToken: String
  Description: String
  DiskContainers: [AwsEc2ImportImageDiskContainersInput]
  DryRun: Boolean
  Hypervisor: String
  LicenseType: String
  Platform: String
  RoleName: String
}

type AwsEc2ImportImageOutput {
  Architecture: String
  Description: String
  Hypervisor: String
  ImageId: String
  ImportTaskId: String
  LicenseType: String
  Platform: String
  Progress: String
  SnapshotDetails: [AwsEc2Sfy]
  Status: String
  StatusMessage: String
}

input AwsEc2ImportInstanceDiskImagesInput {
  Description: String
  Image: AwsEc2SqfInput
  Volume: AwsEc2SqgInput
}

input AwsEc2ImportInstanceInput {
  Description: String
  DiskImages: [AwsEc2ImportInstanceDiskImagesInput]
  DryRun: Boolean
  LaunchSpecification: AwsEc2ImportInstanceLaunchSpecificationInput
  Platform: String!
}

input AwsEc2ImportInstanceLaunchSpecificationInput {
  AdditionalInfo: String
  Architecture: String
  GroupIds: [String]
  GroupNames: [String]
  InstanceInitiatedShutdownBehavior: String
  InstanceType: String
  Monitoring: Boolean
  Placement: AwsEc2Sh4Input
  PrivateIpAddress: String
  SubnetId: String
  UserData: AwsEc2ImportInstanceLaunchSpecificationUserDataInput
}

input AwsEc2ImportInstanceLaunchSpecificationUserDataInput {
  Data: String
}

type AwsEc2ImportInstanceOutput {
  ConversionTask: AwsEc2Scq
}

input AwsEc2ImportKeyPairInput {
  DryRun: Boolean
  KeyName: String!
  PublicKeyMaterial: JSON!
}

type AwsEc2ImportKeyPairOutput {
  KeyFingerprint: String
  KeyName: String
}

input AwsEc2ImportSnapshotDiskContainerInput {
  Description: String
  Format: String
  Url: String
  UserBucket: AwsEc2SqaInput
}

input AwsEc2ImportSnapshotInput {
  ClientData: AwsEc2Sq7Input
  ClientToken: String
  Description: String
  DiskContainer: AwsEc2ImportSnapshotDiskContainerInput
  DryRun: Boolean
  RoleName: String
}

type AwsEc2ImportSnapshotOutput {
  Description: String
  ImportTaskId: String
  SnapshotTaskDetail: AwsEc2Sg5
}

input AwsEc2ImportVolumeInput {
  AvailabilityZone: String!
  Description: String
  DryRun: Boolean
  Image: AwsEc2SqfInput!
  Volume: AwsEc2SqgInput!
}

type AwsEc2ImportVolumeOutput {
  ConversionTask: AwsEc2Scq
}

input AwsEc2ModifyFpgaImageAttributeInput {
  DryRun: Boolean
  FpgaImageId: String!
  Attribute: String
  OperationType: String
  UserIds: [String]
  UserGroups: [String]
  ProductCodes: [String]
  LoadPermission: AwsEc2ModifyFpgaImageAttributeLoadPermissionInput
  Description: String
  Name: String
}

input AwsEc2ModifyFpgaImageAttributeLoadPermissionInput {
  Add: [AwsEc2SqxInput]
  Remove: [AwsEc2SqxInput]
}

type AwsEc2ModifyFpgaImageAttributeOutput {
  FpgaImageAttribute: AwsEc2Sdu
}

input AwsEc2ModifyHostsInput {
  AutoPlacement: String!
  HostIds: [String]!
}

type AwsEc2ModifyHostsOutput {
  Successful: [String]
  Unsuccessful: [AwsEc2Sd]
}

input AwsEc2ModifyIdentityIdFormatInput {
  PrincipalArn: String!
  Resource: String!
  UseLongIds: Boolean!
}

input AwsEc2ModifyIdFormatInput {
  Resource: String!
  UseLongIds: Boolean!
}

input AwsEc2ModifyImageAttributeInput {
  Attribute: String
  Description: AwsEc2S4iInput
  ImageId: String!
  LaunchPermission: AwsEc2ModifyImageAttributeLaunchPermissionInput
  OperationType: String
  ProductCodes: [String]
  UserGroups: [String]
  UserIds: [String]
  Value: String
  DryRun: Boolean
}

input AwsEc2ModifyImageAttributeLaunchPermissionInput {
  Add: [AwsEc2SfeInput]
  Remove: [AwsEc2SfeInput]
}

input AwsEc2ModifyInstanceAttributeBlockDeviceMappingsEbsInput {
  DeleteOnTermination: Boolean
  VolumeId: String
}

input AwsEc2ModifyInstanceAttributeBlockDeviceMappingsInput {
  DeviceName: String
  Ebs: AwsEc2ModifyInstanceAttributeBlockDeviceMappingsEbsInput
  NoDevice: String
  VirtualName: String
}

input AwsEc2ModifyInstanceAttributeInput {
  SourceDestCheck: AwsEc2SgcInput
  Attribute: String
  BlockDeviceMappings: [AwsEc2ModifyInstanceAttributeBlockDeviceMappingsInput]
  DisableApiTermination: AwsEc2SgcInput
  DryRun: Boolean
  EbsOptimized: AwsEc2SgcInput
  EnaSupport: AwsEc2SgcInput
  Groups: [String]
  InstanceId: String!
  InstanceInitiatedShutdownBehavior: AwsEc2S4iInput
  InstanceType: AwsEc2S4iInput
  Kernel: AwsEc2S4iInput
  Ramdisk: AwsEc2S4iInput
  SriovNetSupport: AwsEc2S4iInput
  UserData: AwsEc2ModifyInstanceAttributeUserDataInput
  Value: String
}

input AwsEc2ModifyInstanceAttributeUserDataInput {
  Value: JSON
}

input AwsEc2ModifyInstanceCreditSpecificationInput {
  DryRun: Boolean
  ClientToken: String
  InstanceCreditSpecifications: [AwsEc2ModifyInstanceCreditSpecificationInstanceCreditSpecificationsInput]!
}

input AwsEc2ModifyInstanceCreditSpecificationInstanceCreditSpecificationsInput {
  InstanceId: String
  CpuCredits: String
}

type AwsEc2ModifyInstanceCreditSpecificationOutput {
  SuccessfulInstanceCreditSpecifications: [AwsEc2ModifyInstanceCreditSpecificationOutputSuccessfulInstanceCreditSpecifications]
  UnsuccessfulInstanceCreditSpecifications: [AwsEc2ModifyInstanceCreditSpecificationOutputUnsuccessfulInstanceCreditSpecifications]
}

type AwsEc2ModifyInstanceCreditSpecificationOutputSuccessfulInstanceCreditSpecifications {
  InstanceId: String
}

type AwsEc2ModifyInstanceCreditSpecificationOutputUnsuccessfulInstanceCreditSpecifications {
  InstanceId: String
  Error: AwsEc2ModifyInstanceCreditSpecificationOutputUnsuccessfulInstanceCreditSpecificationsError
}

type AwsEc2ModifyInstanceCreditSpecificationOutputUnsuccessfulInstanceCreditSpecificationsError {
  Code: String
  Message: String
}

input AwsEc2ModifyInstancePlacementInput {
  Affinity: String
  HostId: String
  InstanceId: String!
  Tenancy: String
}

type AwsEc2ModifyInstancePlacementOutput {
  Return: Boolean
}

input AwsEc2ModifyLaunchTemplateInput {
  DryRun: Boolean
  ClientToken: String
  LaunchTemplateId: String
  LaunchTemplateName: String
  DefaultVersion: String
}

type AwsEc2ModifyLaunchTemplateOutput {
  LaunchTemplate: AwsEc2S6d
}

input AwsEc2ModifyNetworkInterfaceAttributeAttachmentInput {
  AttachmentId: String
  DeleteOnTermination: Boolean
}

input AwsEc2ModifyNetworkInterfaceAttributeInput {
  Attachment: AwsEc2ModifyNetworkInterfaceAttributeAttachmentInput
  Description: AwsEc2S4iInput
  DryRun: Boolean
  Groups: [String]
  NetworkInterfaceId: String!
  SourceDestCheck: AwsEc2SgcInput
}

input AwsEc2ModifyReservedInstancesInput {
  ReservedInstancesIds: [String]!
  ClientToken: String
  TargetConfigurations: [AwsEc2SjhInput]!
}

type AwsEc2ModifyReservedInstancesOutput {
  ReservedInstancesModificationId: String
}

input AwsEc2ModifySnapshotAttributeCreateVolumePermissionInput {
  Add: [AwsEc2SkmInput]
  Remove: [AwsEc2SkmInput]
}

input AwsEc2ModifySnapshotAttributeInput {
  Attribute: String
  CreateVolumePermission: AwsEc2ModifySnapshotAttributeCreateVolumePermissionInput
  GroupNames: [String]
  OperationType: String
  SnapshotId: String!
  UserIds: [String]
  DryRun: Boolean
}

input AwsEc2ModifySpotFleetRequestInput {
  ExcessCapacityTerminationPolicy: String
  SpotFleetRequestId: String!
  TargetCapacity: Int
}

type AwsEc2ModifySpotFleetRequestOutput {
  Return: Boolean
}

input AwsEc2ModifySubnetAttributeInput {
  AssignIpv6AddressOnCreation: AwsEc2SgcInput
  MapPublicIpOnLaunch: AwsEc2SgcInput
  SubnetId: String!
}

input AwsEc2ModifyVolumeAttributeInput {
  AutoEnableIO: AwsEc2SgcInput
  VolumeId: String!
  DryRun: Boolean
}

input AwsEc2ModifyVolumeInput {
  DryRun: Boolean
  VolumeId: String!
  Size: Int
  VolumeType: String
  Iops: Int
}

type AwsEc2ModifyVolumeOutput {
  VolumeModification: AwsEc2Snh
}

input AwsEc2ModifyVpcAttributeInput {
  EnableDnsHostnames: AwsEc2SgcInput
  EnableDnsSupport: AwsEc2SgcInput
  VpcId: String!
}

input AwsEc2ModifyVpcEndpointConnectionNotificationInput {
  DryRun: Boolean
  ConnectionNotificationId: String!
  ConnectionNotificationArn: String
  ConnectionEvents: [String]
}

type AwsEc2ModifyVpcEndpointConnectionNotificationOutput {
  ReturnValue: Boolean
}

input AwsEc2ModifyVpcEndpointInput {
  DryRun: Boolean
  VpcEndpointId: String!
  ResetPolicy: Boolean
  PolicyDocument: String
  AddRouteTableIds: [String]
  RemoveRouteTableIds: [String]
  AddSubnetIds: [String]
  RemoveSubnetIds: [String]
  AddSecurityGroupIds: [String]
  RemoveSecurityGroupIds: [String]
  PrivateDnsEnabled: Boolean
}

type AwsEc2ModifyVpcEndpointOutput {
  Return: Boolean
}

input AwsEc2ModifyVpcEndpointServiceConfigurationInput {
  DryRun: Boolean
  ServiceId: String!
  AcceptanceRequired: Boolean
  AddNetworkLoadBalancerArns: [String]
  RemoveNetworkLoadBalancerArns: [String]
}

type AwsEc2ModifyVpcEndpointServiceConfigurationOutput {
  Return: Boolean
}

input AwsEc2ModifyVpcEndpointServicePermissionsInput {
  DryRun: Boolean
  ServiceId: String!
  AddAllowedPrincipals: [String]
  RemoveAllowedPrincipals: [String]
}

type AwsEc2ModifyVpcEndpointServicePermissionsOutput {
  ReturnValue: Boolean
}

input AwsEc2ModifyVpcPeeringConnectionOptionsInput {
  AccepterPeeringConnectionOptions: AwsEc2SsfInput
  DryRun: Boolean
  RequesterPeeringConnectionOptions: AwsEc2SsfInput
  VpcPeeringConnectionId: String!
}

type AwsEc2ModifyVpcPeeringConnectionOptionsOutput {
  AccepterPeeringConnectionOptions: AwsEc2Ssh
  RequesterPeeringConnectionOptions: AwsEc2Ssh
}

input AwsEc2ModifyVpcTenancyInput {
  VpcId: String!
  InstanceTenancy: String!
  DryRun: Boolean
}

type AwsEc2ModifyVpcTenancyOutput {
  ReturnValue: Boolean
}

input AwsEc2MonitorInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
}

type AwsEc2MonitorInstancesOutput {
  InstanceMonitorings: [AwsEc2Ssn]
}

input AwsEc2MoveAddressToVpcInput {
  DryRun: Boolean
  PublicIp: String!
}

type AwsEc2MoveAddressToVpcOutput {
  AllocationId: String
  Status: String
}

input AwsEc2PurchaseHostReservationInput {
  ClientToken: String
  CurrencyCode: String
  HostIdSet: [String]!
  LimitPrice: String
  OfferingId: String!
}

type AwsEc2PurchaseHostReservationOutput {
  ClientToken: String
  CurrencyCode: String
  Purchase: [AwsEc2Sps]
  TotalHourlyPrice: String
  TotalUpfrontPrice: String
}

input AwsEc2PurchaseReservedInstancesOfferingInput {
  InstanceCount: Int!
  ReservedInstancesOfferingId: String!
  DryRun: Boolean
  LimitPrice: AwsEc2PurchaseReservedInstancesOfferingLimitPriceInput
}

input AwsEc2PurchaseReservedInstancesOfferingLimitPriceInput {
  Amount: JSON
  CurrencyCode: String
}

type AwsEc2PurchaseReservedInstancesOfferingOutput {
  ReservedInstancesId: String
}

input AwsEc2PurchaseScheduledInstancesInput {
  ClientToken: String
  DryRun: Boolean
  PurchaseRequests: [AwsEc2PurchaseScheduledInstancesPurchaseRequestsInput]!
}

type AwsEc2PurchaseScheduledInstancesOutput {
  ScheduledInstanceSet: [AwsEc2Sk8]
}

input AwsEc2PurchaseScheduledInstancesPurchaseRequestsInput {
  InstanceCount: Int!
  PurchaseToken: String!
}

input AwsEc2RebootInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
}

input AwsEc2RegisterImageInput {
  ImageLocation: String
  Architecture: String
  BlockDeviceMappings: [AwsEc2S4yInput]
  Description: String
  DryRun: Boolean
  EnaSupport: Boolean
  KernelId: String
  Name: String!
  BillingProducts: [String]
  RamdiskId: String
  RootDeviceName: String
  SriovNetSupport: String
  VirtualizationType: String
}

type AwsEc2RegisterImageOutput {
  ImageId: String
}

input AwsEc2RejectVpcEndpointConnectionsInput {
  DryRun: Boolean
  ServiceId: String!
  VpcEndpointIds: [String]!
}

type AwsEc2RejectVpcEndpointConnectionsOutput {
  Unsuccessful: [AwsEc2Sd]
}

input AwsEc2RejectVpcPeeringConnectionInput {
  DryRun: Boolean
  VpcPeeringConnectionId: String!
}

type AwsEc2RejectVpcPeeringConnectionOutput {
  Return: Boolean
}

input AwsEc2ReleaseAddressInput {
  AllocationId: String
  PublicIp: String
  DryRun: Boolean
}

input AwsEc2ReleaseHostsInput {
  HostIds: [String]!
}

type AwsEc2ReleaseHostsOutput {
  Successful: [String]
  Unsuccessful: [AwsEc2Sd]
}

input AwsEc2ReplaceIamInstanceProfileAssociationInput {
  IamInstanceProfile: AwsEc2S19Input!
  AssociationId: String!
}

type AwsEc2ReplaceIamInstanceProfileAssociationOutput {
  IamInstanceProfileAssociation: AwsEc2S1b
}

input AwsEc2ReplaceNetworkAclAssociationInput {
  AssociationId: String!
  DryRun: Boolean
  NetworkAclId: String!
}

type AwsEc2ReplaceNetworkAclAssociationOutput {
  NewAssociationId: String
}

input AwsEc2ReplaceNetworkAclEntryInput {
  CidrBlock: String
  DryRun: Boolean
  Egress: Boolean!
  IcmpTypeCode: AwsEc2S7dInput
  Ipv6CidrBlock: String
  NetworkAclId: String!
  PortRange: AwsEc2S7eInput
  Protocol: String!
  RuleAction: String!
  RuleNumber: Int!
}

input AwsEc2ReplaceRouteInput {
  DestinationCidrBlock: String
  DestinationIpv6CidrBlock: String
  DryRun: Boolean
  EgressOnlyInternetGatewayId: String
  GatewayId: String
  InstanceId: String
  NatGatewayId: String
  NetworkInterfaceId: String
  RouteTableId: String!
  VpcPeeringConnectionId: String
}

input AwsEc2ReplaceRouteTableAssociationInput {
  AssociationId: String!
  DryRun: Boolean
  RouteTableId: String!
}

type AwsEc2ReplaceRouteTableAssociationOutput {
  NewAssociationId: String
}

input AwsEc2ReportInstanceStatusInput {
  Description: String
  DryRun: Boolean
  EndTime: Date
  Instances: [String]!
  ReasonCodes: [String]!
  StartTime: Date
  Status: String!
}

input AwsEc2RequestSpotFleetInput {
  DryRun: Boolean
  SpotFleetRequestConfig: AwsEc2SlbInput!
}

type AwsEc2RequestSpotFleetOutput {
  SpotFleetRequestId: String!
}

input AwsEc2RequestSpotInstancesInput {
  AvailabilityZoneGroup: String
  BlockDurationMinutes: Int
  ClientToken: String
  DryRun: Boolean
  InstanceCount: Int
  LaunchGroup: String
  LaunchSpecification: AwsEc2RequestSpotInstancesLaunchSpecificationInput
  SpotPrice: String
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

input AwsEc2RequestSpotInstancesLaunchSpecificationInput {
  SecurityGroupIds: [String]
  SecurityGroups: [String]
  AddressingType: String
  BlockDeviceMappings: [AwsEc2S4yInput]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEc2S19Input
  ImageId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  Monitoring: AwsEc2Sm4Input
  NetworkInterfaces: [AwsEc2SlhInput]
  Placement: AwsEc2SljInput
  RamdiskId: String
  SubnetId: String
  UserData: String
}

type AwsEc2RequestSpotInstancesOutput {
  SpotInstanceRequests: [AwsEc2Sm1]
}

input AwsEc2ResetFpgaImageAttributeInput {
  DryRun: Boolean
  FpgaImageId: String!
  Attribute: String
}

type AwsEc2ResetFpgaImageAttributeOutput {
  Return: Boolean
}

input AwsEc2ResetImageAttributeInput {
  Attribute: String!
  ImageId: String!
  DryRun: Boolean
}

input AwsEc2ResetInstanceAttributeInput {
  Attribute: String!
  DryRun: Boolean
  InstanceId: String!
}

input AwsEc2ResetNetworkInterfaceAttributeInput {
  DryRun: Boolean
  NetworkInterfaceId: String!
  SourceDestCheck: String
}

input AwsEc2ResetSnapshotAttributeInput {
  Attribute: String!
  SnapshotId: String!
  DryRun: Boolean
}

input AwsEc2RestoreAddressToClassicInput {
  DryRun: Boolean
  PublicIp: String!
}

type AwsEc2RestoreAddressToClassicOutput {
  PublicIp: String
  Status: String
}

input AwsEc2RevokeSecurityGroupEgressInput {
  DryRun: Boolean
  GroupId: String!
  IpPermissions: [AwsEc2S25Input]
  CidrIp: String
  FromPort: Int
  IpProtocol: String
  ToPort: Int
  SourceSecurityGroupName: String
  SourceSecurityGroupOwnerId: String
}

input AwsEc2RevokeSecurityGroupIngressInput {
  CidrIp: String
  FromPort: Int
  GroupId: String
  GroupName: String
  IpPermissions: [AwsEc2S25Input]
  IpProtocol: String
  SourceSecurityGroupName: String
  SourceSecurityGroupOwnerId: String
  ToPort: Int
  DryRun: Boolean
}

input AwsEc2RunInstancesInput {
  BlockDeviceMappings: [AwsEc2S4yInput]
  ImageId: String
  InstanceType: String
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEc2S6oInput]
  KernelId: String
  KeyName: String
  MaxCount: Int!
  MinCount: Int!
  Monitoring: AwsEc2Sm4Input
  Placement: AwsEc2Sh4Input
  RamdiskId: String
  SecurityGroupIds: [String]
  SecurityGroups: [String]
  SubnetId: String
  UserData: String
  AdditionalInfo: String
  ClientToken: String
  DisableApiTermination: Boolean
  DryRun: Boolean
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEc2S19Input
  InstanceInitiatedShutdownBehavior: String
  NetworkInterfaces: [AwsEc2SlhInput]
  PrivateIpAddress: String
  ElasticGpuSpecification: [AwsEc2S64Input]
  TagSpecifications: [AwsEc2S8yInput]
  LaunchTemplate: AwsEc2RunInstancesLaunchTemplateInput
  InstanceMarketOptions: AwsEc2RunInstancesInstanceMarketOptionsInput
  CreditSpecification: AwsEc2S6bInput
}

input AwsEc2RunInstancesInstanceMarketOptionsInput {
  MarketType: String
  SpotOptions: AwsEc2RunInstancesInstanceMarketOptionsSpotOptionsInput
}

input AwsEc2RunInstancesInstanceMarketOptionsSpotOptionsInput {
  MaxPrice: String
  SpotInstanceType: String
  BlockDurationMinutes: Int
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

input AwsEc2RunInstancesLaunchTemplateInput {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsEc2RunScheduledInstancesInput {
  ClientToken: String
  DryRun: Boolean
  InstanceCount: Int
  LaunchSpecification: AwsEc2RunScheduledInstancesLaunchSpecificationInput!
  ScheduledInstanceId: String!
}

input AwsEc2RunScheduledInstancesLaunchSpecificationBlockDeviceMappingsEbsInput {
  DeleteOnTermination: Boolean
  Encrypted: Boolean
  Iops: Int
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

input AwsEc2RunScheduledInstancesLaunchSpecificationBlockDeviceMappingsInput {
  DeviceName: String
  Ebs: AwsEc2RunScheduledInstancesLaunchSpecificationBlockDeviceMappingsEbsInput
  NoDevice: String
  VirtualName: String
}

input AwsEc2RunScheduledInstancesLaunchSpecificationIamInstanceProfileInput {
  Arn: String
  Name: String
}

input AwsEc2RunScheduledInstancesLaunchSpecificationInput {
  BlockDeviceMappings: [AwsEc2RunScheduledInstancesLaunchSpecificationBlockDeviceMappingsInput]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEc2RunScheduledInstancesLaunchSpecificationIamInstanceProfileInput
  ImageId: String!
  InstanceType: String
  KernelId: String
  KeyName: String
  Monitoring: AwsEc2RunScheduledInstancesLaunchSpecificationMonitoringInput
  NetworkInterfaces: [AwsEc2RunScheduledInstancesLaunchSpecificationNetworkInterfacesInput]
  Placement: AwsEc2RunScheduledInstancesLaunchSpecificationPlacementInput
  RamdiskId: String
  SecurityGroupIds: [String]
  SubnetId: String
  UserData: String
}

input AwsEc2RunScheduledInstancesLaunchSpecificationMonitoringInput {
  Enabled: Boolean
}

input AwsEc2RunScheduledInstancesLaunchSpecificationNetworkInterfacesInput {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEc2RunScheduledInstancesLaunchSpecificationNetworkInterfacesIpv6AddressesInput]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddressConfigs: [AwsEc2RunScheduledInstancesLaunchSpecificationNetworkInterfacesPrivateIpAddressConfigsInput]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

input AwsEc2RunScheduledInstancesLaunchSpecificationNetworkInterfacesIpv6AddressesInput {
  Ipv6Address: String
}

input AwsEc2RunScheduledInstancesLaunchSpecificationNetworkInterfacesPrivateIpAddressConfigsInput {
  Primary: Boolean
  PrivateIpAddress: String
}

input AwsEc2RunScheduledInstancesLaunchSpecificationPlacementInput {
  AvailabilityZone: String
  GroupName: String
}

type AwsEc2RunScheduledInstancesOutput {
  InstanceIdSet: [String]
}

type AwsEc2S19 {
  Arn: String
  Name: String
}

input AwsEc2S19Input {
  Arn: String
  Name: String
}

type AwsEc2S1b {
  AssociationId: String
  InstanceId: String
  IamInstanceProfile: AwsEc2S1c
  State: String
  Timestamp: Date
}

type AwsEc2S1c {
  Arn: String
  Id: String
}

type AwsEc2S1i {
  AssociationId: String
  Ipv6CidrBlock: String
  Ipv6CidrBlockState: AwsEc2S1iIpv6CidrBlockState
}

type AwsEc2S1iIpv6CidrBlockState {
  State: String
  StatusMessage: String
}

type AwsEc2S1n {
  AssociationId: String
  Ipv6CidrBlock: String
  Ipv6CidrBlockState: AwsEc2S1o
}

type AwsEc2S1o {
  State: String
  StatusMessage: String
}

type AwsEc2S1q {
  AssociationId: String
  CidrBlock: String
  CidrBlockState: AwsEc2S1o
}

type AwsEc2S1y {
  AttachTime: Date
  Device: String
  InstanceId: String
  State: String
  VolumeId: String
  DeleteOnTermination: Boolean
}

type AwsEc2S22 {
  State: String
  VpcId: String
}

type AwsEc2S25 {
  FromPort: Int
  IpProtocol: String
  IpRanges: [AwsEc2S25IpRanges]
  Ipv6Ranges: [AwsEc2S25Ipv6Ranges]
  PrefixListIds: [AwsEc2S25PrefixListIds]
  ToPort: Int
  UserIdGroupPairs: [AwsEc2S2e]
}

input AwsEc2S25Input {
  FromPort: Int
  IpProtocol: String
  IpRanges: [AwsEc2S25IpRangesInput]
  Ipv6Ranges: [AwsEc2S25Ipv6RangesInput]
  PrefixListIds: [AwsEc2S25PrefixListIdsInput]
  ToPort: Int
  UserIdGroupPairs: [AwsEc2S2eInput]
}

type AwsEc2S25IpRanges {
  CidrIp: String
  Description: String
}

input AwsEc2S25IpRangesInput {
  CidrIp: String
  Description: String
}

type AwsEc2S25Ipv6Ranges {
  CidrIpv6: String
  Description: String
}

input AwsEc2S25Ipv6RangesInput {
  CidrIpv6: String
  Description: String
}

type AwsEc2S25PrefixListIds {
  Description: String
  PrefixListId: String
}

input AwsEc2S25PrefixListIdsInput {
  Description: String
  PrefixListId: String
}

type AwsEc2S2e {
  Description: String
  GroupId: String
  GroupName: String
  PeeringStatus: String
  UserId: String
  VpcId: String
  VpcPeeringConnectionId: String
}

input AwsEc2S2eInput {
  Description: String
  GroupId: String
  GroupName: String
  PeeringStatus: String
  UserId: String
  VpcId: String
  VpcPeeringConnectionId: String
}

type AwsEc2S2h {
  S3: AwsEc2S2hS3
}

input AwsEc2S2hInput {
  S3: AwsEc2S2hS3Input
}

type AwsEc2S2hS3 {
  AWSAccessKeyId: String
  Bucket: String
  Prefix: String
  UploadPolicy: JSON
  UploadPolicySignature: String
}

input AwsEc2S2hS3Input {
  AWSAccessKeyId: String
  Bucket: String
  Prefix: String
  UploadPolicy: JSON
  UploadPolicySignature: String
}

type AwsEc2S2l {
  BundleId: String
  BundleTaskError: AwsEc2S2lBundleTaskError
  InstanceId: String
  Progress: String
  StartTime: Date
  State: String
  Storage: AwsEc2S2h
  UpdateTime: Date
}

type AwsEc2S2lBundleTaskError {
  Code: String
  Message: String
}

type AwsEc2S2w {
  ClientToken: String
  CreateDate: Date
  InstanceCounts: [AwsEc2S2wInstanceCounts]
  PriceSchedules: [AwsEc2S2wPriceSchedules]
  ReservedInstancesId: String
  ReservedInstancesListingId: String
  Status: String
  StatusMessage: String
  Tags: [AwsEc2Sr]
  UpdateDate: Date
}

type AwsEc2S2wInstanceCounts {
  InstanceCount: Int
  State: String
}

type AwsEc2S2wPriceSchedules {
  Active: Boolean
  CurrencyCode: String
  Price: JSON
  Term: JSON
}

type AwsEc2S3x {
  BgpAsn: String
  CustomerGatewayId: String
  IpAddress: String
  State: String
  Type: String
  Tags: [AwsEc2Sr]
}

type AwsEc2S40 {
  AvailabilityZone: String
  AvailableIpAddressCount: Int
  CidrBlock: String
  DefaultForAz: Boolean
  MapPublicIpOnLaunch: Boolean
  State: String
  SubnetId: String
  VpcId: String
  AssignIpv6AddressOnCreation: Boolean
  Ipv6CidrBlockAssociationSet: [AwsEc2S1i]
  Tags: [AwsEc2Sr]
}

type AwsEc2S45 {
  CidrBlock: String
  DhcpOptionsId: String
  State: String
  VpcId: String
  InstanceTenancy: String
  Ipv6CidrBlockAssociationSet: [AwsEc2S1n]
  CidrBlockAssociationSet: [AwsEc2S1q]
  IsDefault: Boolean
  Tags: [AwsEc2Sr]
}

type AwsEc2S4e {
  DhcpConfigurations: [AwsEc2S4eDhcpConfigurations]
  DhcpOptionsId: String
  Tags: [AwsEc2Sr]
}

type AwsEc2S4eDhcpConfigurations {
  Key: String
  Values: [AwsEc2S4i]
}

type AwsEc2S4i {
  Value: String
}

input AwsEc2S4iInput {
  Value: String
}

type AwsEc2S4l {
  Attachments: [AwsEc2S4m]
  EgressOnlyInternetGatewayId: String
}

type AwsEc2S4m {
  State: String
  VpcId: String
}

input AwsEc2S4uInput {
  Bucket: String
  Key: String
}

type AwsEc2S4y {
  DeviceName: String
  VirtualName: String
  Ebs: AwsEc2S4yEbs
  NoDevice: String
}

type AwsEc2S4yEbs {
  Encrypted: Boolean
  DeleteOnTermination: Boolean
  Iops: Int
  KmsKeyId: String
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

input AwsEc2S4yEbsInput {
  Encrypted: Boolean
  DeleteOnTermination: Boolean
  Iops: Int
  KmsKeyId: String
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

input AwsEc2S4yInput {
  DeviceName: String
  VirtualName: String
  Ebs: AwsEc2S4yEbsInput
  NoDevice: String
}

type AwsEc2S58 {
  Description: String
  ExportTaskId: String
  ExportToS3Task: AwsEc2S58ExportToS3Task
  InstanceExportDetails: AwsEc2S58InstanceExportDetails
  State: String
  StatusMessage: String
}

type AwsEc2S58ExportToS3Task {
  ContainerFormat: String
  DiskImageFormat: String
  S3Bucket: String
  S3Key: String
}

type AwsEc2S58InstanceExportDetails {
  InstanceId: String
  TargetEnvironment: String
}

type AwsEc2S5e {
  Attachments: [AwsEc2S4m]
  InternetGatewayId: String
  Tags: [AwsEc2Sr]
}

input AwsEc2S5Input {
  InstanceCount: Int
  OfferingId: String!
}

input AwsEc2S5kBlockDeviceMappingsEbsInput {
  Encrypted: Boolean
  DeleteOnTermination: Boolean
  Iops: Int
  KmsKeyId: String
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

input AwsEc2S5kBlockDeviceMappingsInput {
  DeviceName: String
  VirtualName: String
  Ebs: AwsEc2S5kBlockDeviceMappingsEbsInput
  NoDevice: String
}

input AwsEc2S5kIamInstanceProfileInput {
  Arn: String
  Name: String
}

input AwsEc2S5kInput {
  KernelId: String
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEc2S5kIamInstanceProfileInput
  BlockDeviceMappings: [AwsEc2S5kBlockDeviceMappingsInput]
  NetworkInterfaces: [AwsEc2S5kNetworkInterfacesInput]
  ImageId: String
  InstanceType: String
  KeyName: String
  Monitoring: AwsEc2S5kMonitoringInput
  Placement: AwsEc2S5kPlacementInput
  RamDiskId: String
  DisableApiTermination: Boolean
  InstanceInitiatedShutdownBehavior: String
  UserData: String
  TagSpecifications: [AwsEc2S5kTagSpecificationsInput]
  ElasticGpuSpecifications: [AwsEc2S64Input]
  SecurityGroupIds: [String]
  SecurityGroups: [String]
  InstanceMarketOptions: AwsEc2S5kInstanceMarketOptionsInput
  CreditSpecification: AwsEc2S6bInput
}

input AwsEc2S5kInstanceMarketOptionsInput {
  MarketType: String
  SpotOptions: AwsEc2S5kInstanceMarketOptionsSpotOptionsInput
}

input AwsEc2S5kInstanceMarketOptionsSpotOptionsInput {
  MaxPrice: String
  SpotInstanceType: String
  BlockDurationMinutes: Int
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

input AwsEc2S5kMonitoringInput {
  Enabled: Boolean
}

input AwsEc2S5kNetworkInterfacesInput {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEc2S5kNetworkInterfacesIpv6AddressesInput]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEc2S5uInput]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

input AwsEc2S5kNetworkInterfacesIpv6AddressesInput {
  Ipv6Address: String
}

input AwsEc2S5kPlacementInput {
  AvailabilityZone: String
  Affinity: String
  GroupName: String
  HostId: String
  Tenancy: String
  SpreadDomain: String
}

input AwsEc2S5kTagSpecificationsInput {
  ResourceType: String
  Tags: [AwsEc2SrInput]
}

type AwsEc2S5u {
  Primary: Boolean
  PrivateIpAddress: String!
}

input AwsEc2S5uInput {
  Primary: Boolean
  PrivateIpAddress: String!
}

input AwsEc2S64Input {
  Type: String!
}

input AwsEc2S6bInput {
  CpuCredits: String!
}

type AwsEc2S6d {
  LaunchTemplateId: String
  LaunchTemplateName: String
  CreateTime: Date
  CreatedBy: String
  DefaultVersionNumber: JSON
  LatestVersionNumber: JSON
  Tags: [AwsEc2Sr]
}

type AwsEc2S6g {
  LaunchTemplateId: String
  LaunchTemplateName: String
  VersionNumber: JSON
  VersionDescription: String
  CreateTime: Date
  CreatedBy: String
  DefaultVersion: Boolean
  LaunchTemplateData: AwsEc2S6h
}

type AwsEc2S6h {
  KernelId: String
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEc2S6hIamInstanceProfile
  BlockDeviceMappings: [AwsEc2S6hBlockDeviceMappings]
  NetworkInterfaces: [AwsEc2S6hNetworkInterfaces]
  ImageId: String
  InstanceType: String
  KeyName: String
  Monitoring: AwsEc2S6hMonitoring
  Placement: AwsEc2S6hPlacement
  RamDiskId: String
  DisableApiTermination: Boolean
  InstanceInitiatedShutdownBehavior: String
  UserData: String
  TagSpecifications: [AwsEc2S6hTagSpecifications]
  ElasticGpuSpecifications: [AwsEc2S6hElasticGpuSpecifications]
  SecurityGroupIds: [String]
  SecurityGroups: [String]
  InstanceMarketOptions: AwsEc2S6hInstanceMarketOptions
  CreditSpecification: AwsEc2S6hCreditSpecification
}

type AwsEc2S6hBlockDeviceMappings {
  DeviceName: String
  VirtualName: String
  Ebs: AwsEc2S6hBlockDeviceMappingsEbs
  NoDevice: String
}

type AwsEc2S6hBlockDeviceMappingsEbs {
  Encrypted: Boolean
  DeleteOnTermination: Boolean
  Iops: Int
  KmsKeyId: String
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

type AwsEc2S6hCreditSpecification {
  CpuCredits: String
}

type AwsEc2S6hElasticGpuSpecifications {
  Type: String
}

type AwsEc2S6hIamInstanceProfile {
  Arn: String
  Name: String
}

type AwsEc2S6hInstanceMarketOptions {
  MarketType: String
  SpotOptions: AwsEc2S6hInstanceMarketOptionsSpotOptions
}

type AwsEc2S6hInstanceMarketOptionsSpotOptions {
  MaxPrice: String
  SpotInstanceType: String
  BlockDurationMinutes: Int
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

type AwsEc2S6hMonitoring {
  Enabled: Boolean
}

type AwsEc2S6hNetworkInterfaces {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEc2S6o]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEc2S5u]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

type AwsEc2S6hPlacement {
  AvailabilityZone: String
  Affinity: String
  GroupName: String
  HostId: String
  Tenancy: String
  SpreadDomain: String
}

type AwsEc2S6hTagSpecifications {
  ResourceType: String
  Tags: [AwsEc2Sr]
}

type AwsEc2S6o {
  Ipv6Address: String
}

input AwsEc2S6oInput {
  Ipv6Address: String
}

type AwsEc2S71 {
  CreateTime: Date
  DeleteTime: Date
  FailureCode: String
  FailureMessage: String
  NatGatewayAddresses: [AwsEc2S71NatGatewayAddresses]
  NatGatewayId: String
  ProvisionedBandwidth: AwsEc2S71ProvisionedBandwidth
  State: String
  SubnetId: String
  VpcId: String
  Tags: [AwsEc2Sr]
}

type AwsEc2S71NatGatewayAddresses {
  AllocationId: String
  NetworkInterfaceId: String
  PrivateIp: String
  PublicIp: String
}

type AwsEc2S71ProvisionedBandwidth {
  ProvisionTime: Date
  Provisioned: String
  RequestTime: Date
  Requested: String
  Status: String
}

type AwsEc2S78 {
  Associations: [AwsEc2S78Associations]
  Entries: [AwsEc2S78Entries]
  IsDefault: Boolean
  NetworkAclId: String
  Tags: [AwsEc2Sr]
  VpcId: String
}

type AwsEc2S78Associations {
  NetworkAclAssociationId: String
  NetworkAclId: String
  SubnetId: String
}

type AwsEc2S78Entries {
  CidrBlock: String
  Egress: Boolean
  IcmpTypeCode: AwsEc2S7d
  Ipv6CidrBlock: String
  PortRange: AwsEc2S7e
  Protocol: String
  RuleAction: String
  RuleNumber: Int
}

type AwsEc2S7d {
  Code: Int
  Type: Int
}

input AwsEc2S7dInput {
  Code: Int
  Type: Int
}

type AwsEc2S7e {
  From: Int
  To: Int
}

input AwsEc2S7eInput {
  From: Int
  To: Int
}

type AwsEc2S7j {
  Association: AwsEc2S7k
  Attachment: AwsEc2S7l
  AvailabilityZone: String
  Description: String
  Groups: [AwsEc2S7m]
  InterfaceType: String
  Ipv6Addresses: [AwsEc2S7jIpv6Addresses]
  MacAddress: String
  NetworkInterfaceId: String
  OwnerId: String
  PrivateDnsName: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEc2S7jPrivateIpAddresses]
  RequesterId: String
  RequesterManaged: Boolean
  SourceDestCheck: Boolean
  Status: String
  SubnetId: String
  TagSet: [AwsEc2Sr]
  VpcId: String
}

type AwsEc2S7jIpv6Addresses {
  Ipv6Address: String
}

type AwsEc2S7jPrivateIpAddresses {
  Association: AwsEc2S7k
  Primary: Boolean
  PrivateDnsName: String
  PrivateIpAddress: String
}

type AwsEc2S7k {
  AllocationId: String
  AssociationId: String
  IpOwnerId: String
  PublicDnsName: String
  PublicIp: String
}

type AwsEc2S7l {
  AttachTime: Date
  AttachmentId: String
  DeleteOnTermination: Boolean
  DeviceIndex: Int
  InstanceId: String
  InstanceOwnerId: String
  Status: String
}

type AwsEc2S7m {
  GroupName: String
  GroupId: String
}

input AwsEc2S7mInput {
  GroupName: String
  GroupId: String
}

type AwsEc2S7x {
  NetworkInterfacePermissionId: String
  NetworkInterfaceId: String
  AwsAccountId: String
  AwsService: String
  Permission: String
  PermissionState: AwsEc2S7xPermissionState
}

type AwsEc2S7xPermissionState {
  State: String
  StatusMessage: String
}

type AwsEc2S8a {
  Associations: [AwsEc2S8aAssociations]
  PropagatingVgws: [AwsEc2S8aPropagatingVgws]
  RouteTableId: String
  Routes: [AwsEc2S8aRoutes]
  Tags: [AwsEc2Sr]
  VpcId: String
}

type AwsEc2S8aAssociations {
  Main: Boolean
  RouteTableAssociationId: String
  RouteTableId: String
  SubnetId: String
}

type AwsEc2S8aPropagatingVgws {
  GatewayId: String
}

type AwsEc2S8aRoutes {
  DestinationCidrBlock: String
  DestinationIpv6CidrBlock: String
  DestinationPrefixListId: String
  EgressOnlyInternetGatewayId: String
  GatewayId: String
  InstanceId: String
  InstanceOwnerId: String
  NatGatewayId: String
  NetworkInterfaceId: String
  Origin: String
  State: String
  VpcPeeringConnectionId: String
}

type AwsEc2S8m {
  DataEncryptionKeyId: String
  Description: String
  Encrypted: Boolean
  KmsKeyId: String
  OwnerId: String
  Progress: String
  SnapshotId: String
  StartTime: Date
  State: String
  StateMessage: String
  VolumeId: String
  VolumeSize: Int
  OwnerAlias: String
  Tags: [AwsEc2Sr]
}

type AwsEc2S8q {
  Bucket: String
  Fault: AwsEc2S8r
  OwnerId: String
  Prefix: String
  State: String
}

type AwsEc2S8r {
  Code: String
  Message: String
}

input AwsEc2S8yInput {
  ResourceType: String
  Tags: [AwsEc2SrInput]
}

type AwsEc2S90 {
  Attachments: [AwsEc2S1y]
  AvailabilityZone: String
  CreateTime: Date
  Encrypted: Boolean
  KmsKeyId: String
  Size: Int
  SnapshotId: String
  State: String
  VolumeId: String
  Iops: Int
  Tags: [AwsEc2Sr]
  VolumeType: String
}

type AwsEc2S98 {
  VpcEndpointId: String
  VpcEndpointType: String
  VpcId: String
  ServiceName: String
  State: String
  PolicyDocument: String
  RouteTableIds: [String]
  SubnetIds: [String]
  Groups: [AwsEc2S98Groups]
  PrivateDnsEnabled: Boolean
  NetworkInterfaceIds: [String]
  DnsEntries: [AwsEc2S98DnsEntries]
  CreationTimestamp: Date
}

type AwsEc2S98DnsEntries {
  DnsName: String
  HostedZoneId: String
}

type AwsEc2S98Groups {
  GroupId: String
  GroupName: String
}

type AwsEc2S9g {
  ConnectionNotificationId: String
  ServiceId: String
  VpcEndpointId: String
  ConnectionNotificationType: String
  ConnectionNotificationArn: String
  ConnectionEvents: [String]
  ConnectionNotificationState: String
}

type AwsEc2S9l {
  ServiceType: [AwsEc2S9m]
  ServiceId: String
  ServiceName: String
  ServiceState: String
  AvailabilityZones: [String]
  AcceptanceRequired: Boolean
  NetworkLoadBalancerArns: [String]
  BaseEndpointDnsNames: [String]
  PrivateDnsName: String
}

type AwsEc2S9m {
  ServiceType: String
}

type AwsEc2S9x {
  CustomerGatewayConfiguration: String
  CustomerGatewayId: String
  Category: String
  State: String
  Type: String
  VpnConnectionId: String
  VpnGatewayId: String
  Options: AwsEc2S9xOptions
  Routes: [AwsEc2S9xRoutes]
  Tags: [AwsEc2Sr]
  VgwTelemetry: [AwsEc2S9xVgwTelemetry]
}

type AwsEc2S9xOptions {
  StaticRoutesOnly: Boolean
}

type AwsEc2S9xRoutes {
  DestinationCidrBlock: String
  Source: String
  State: String
}

type AwsEc2S9xVgwTelemetry {
  AcceptedRouteCount: Int
  LastStatusChange: Date
  OutsideIpAddress: String
  Status: String
  StatusMessage: String
}

type AwsEc2Sa9 {
  AvailabilityZone: String
  State: String
  Type: String
  VpcAttachments: [AwsEc2S22]
  VpnGatewayId: String
  AmazonSideAsn: JSON
  Tags: [AwsEc2Sr]
}

input AwsEc2SbyInput {
  Name: String
  Values: [String]
}

type AwsEc2Scq {
  ConversionTaskId: String!
  ExpirationTime: String
  ImportInstance: AwsEc2ScqImportInstance
  ImportVolume: AwsEc2ScqImportVolume
  State: String!
  StatusMessage: String
  Tags: [AwsEc2Sr]
}

type AwsEc2ScqImportInstance {
  Description: String
  InstanceId: String
  Platform: String
  Volumes: [AwsEc2ScqImportInstanceVolumes]!
}

type AwsEc2ScqImportInstanceVolumes {
  AvailabilityZone: String!
  BytesConverted: JSON!
  Description: String
  Image: AwsEc2Scv!
  Status: String!
  StatusMessage: String
  Volume: AwsEc2Scw!
}

type AwsEc2ScqImportVolume {
  AvailabilityZone: String!
  BytesConverted: JSON!
  Description: String
  Image: AwsEc2Scv!
  Volume: AwsEc2Scw!
}

type AwsEc2Scv {
  Checksum: String
  Format: String!
  ImportManifestUrl: String!
  Size: JSON!
}

type AwsEc2Scw {
  Id: String!
  Size: JSON
}

type AwsEc2Sd {
  Error: AwsEc2SdError!
  ResourceId: String
}

type AwsEc2SdError {
  Code: String!
  Message: String!
}

type AwsEc2Sdu {
  FpgaImageId: String
  Name: String
  Description: String
  LoadPermissions: [AwsEc2SduLoadPermissions]
  ProductCodes: [AwsEc2Sdy]
}

type AwsEc2SduLoadPermissions {
  UserId: String
  Group: String
}

type AwsEc2Sdy {
  ProductCodeId: String
  ProductCodeType: String
}

type AwsEc2Sf6 {
  Deadline: Date
  Resource: String
  UseLongIds: Boolean
}

type AwsEc2Sfe {
  Group: String
  UserId: String
}

input AwsEc2SfeInput {
  Group: String
  UserId: String
}

type AwsEc2Sfr {
  Code: String
  Message: String
}

type AwsEc2Sfy {
  Description: String
  DeviceName: String
  DiskImageSize: JSON
  Format: String
  Progress: String
  SnapshotId: String
  Status: String
  StatusMessage: String
  Url: String
  UserBucket: AwsEc2Sg0
}

type AwsEc2Sg0 {
  S3Bucket: String
  S3Key: String
}

type AwsEc2Sg5 {
  Description: String
  DiskImageSize: JSON
  Format: String
  Progress: String
  SnapshotId: String
  Status: String
  StatusMessage: String
  Url: String
  UserBucket: AwsEc2Sg0
}

type AwsEc2Sg9 {
  DeviceName: String
  Ebs: AwsEc2Sg9Ebs
}

type AwsEc2Sg9Ebs {
  AttachTime: Date
  DeleteOnTermination: Boolean
  Status: String
  VolumeId: String
}

type AwsEc2Sgc {
  Value: Boolean
}

input AwsEc2SgcInput {
  Value: Boolean
}

type AwsEc2Sgo {
  Code: Int
  Name: String
}

type AwsEc2Sgq {
  Details: [AwsEc2SgqDetails]
  Status: String
}

type AwsEc2SgqDetails {
  ImpairedSince: Date
  Name: String
  Status: String
}

type AwsEc2Sgz {
  Groups: [AwsEc2S7m]
  Instances: [AwsEc2SgzInstances]
  OwnerId: String
  RequesterId: String
  ReservationId: String
}

type AwsEc2SgzInstances {
  AmiLaunchIndex: Int
  ImageId: String
  InstanceId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  LaunchTime: Date
  Monitoring: AwsEc2Sh2
  Placement: AwsEc2Sh4
  Platform: String
  PrivateDnsName: String
  PrivateIpAddress: String
  ProductCodes: [AwsEc2Sdy]
  PublicDnsName: String
  PublicIpAddress: String
  RamdiskId: String
  State: AwsEc2Sgo
  StateTransitionReason: String
  SubnetId: String
  VpcId: String
  Architecture: String
  BlockDeviceMappings: [AwsEc2Sg9]
  ClientToken: String
  EbsOptimized: Boolean
  EnaSupport: Boolean
  Hypervisor: String
  IamInstanceProfile: AwsEc2S1c
  InstanceLifecycle: String
  ElasticGpuAssociations: [AwsEc2SgzInstancesElasticGpuAssociations]
  NetworkInterfaces: [AwsEc2SgzInstancesNetworkInterfaces]
  RootDeviceName: String
  RootDeviceType: String
  SecurityGroups: [AwsEc2S7m]
  SourceDestCheck: Boolean
  SpotInstanceRequestId: String
  SriovNetSupport: String
  StateReason: AwsEc2Sfr
  Tags: [AwsEc2Sr]
  VirtualizationType: String
}

type AwsEc2SgzInstancesElasticGpuAssociations {
  ElasticGpuId: String
  ElasticGpuAssociationId: String
  ElasticGpuAssociationState: String
  ElasticGpuAssociationTime: String
}

type AwsEc2SgzInstancesNetworkInterfaces {
  Association: AwsEc2Sha
  Attachment: AwsEc2SgzInstancesNetworkInterfacesAttachment
  Description: String
  Groups: [AwsEc2S7m]
  Ipv6Addresses: [AwsEc2S6o]
  MacAddress: String
  NetworkInterfaceId: String
  OwnerId: String
  PrivateDnsName: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEc2SgzInstancesNetworkInterfacesPrivateIpAddresses]
  SourceDestCheck: Boolean
  Status: String
  SubnetId: String
  VpcId: String
}

type AwsEc2SgzInstancesNetworkInterfacesAttachment {
  AttachTime: Date
  AttachmentId: String
  DeleteOnTermination: Boolean
  DeviceIndex: Int
  Status: String
}

type AwsEc2SgzInstancesNetworkInterfacesPrivateIpAddresses {
  Association: AwsEc2Sha
  Primary: Boolean
  PrivateDnsName: String
  PrivateIpAddress: String
}

type AwsEc2Sh {
  AccepterVpcInfo: AwsEc2Si
  ExpirationTime: Date
  RequesterVpcInfo: AwsEc2Si
  Status: AwsEc2ShStatus
  Tags: [AwsEc2Sr]
  VpcPeeringConnectionId: String
}

type AwsEc2Sh2 {
  State: String
}

type AwsEc2Sh4 {
  AvailabilityZone: String
  Affinity: String
  GroupName: String
  HostId: String
  Tenancy: String
  SpreadDomain: String
}

input AwsEc2Sh4Input {
  AvailabilityZone: String
  Affinity: String
  GroupName: String
  HostId: String
  Tenancy: String
  SpreadDomain: String
}

type AwsEc2Sha {
  IpOwnerId: String
  PublicDnsName: String
  PublicIp: String
}

type AwsEc2ShStatus {
  Code: String
  Message: String
}

type AwsEc2Si {
  CidrBlock: String
  Ipv6CidrBlockSet: [AwsEc2SiIpv6CidrBlockSet]
  CidrBlockSet: [AwsEc2SiCidrBlockSet]
  OwnerId: String
  PeeringOptions: AwsEc2SiPeeringOptions
  VpcId: String
}

type AwsEc2SiCidrBlockSet {
  CidrBlock: String
}

type AwsEc2SiIpv6CidrBlockSet {
  Ipv6CidrBlock: String
}

type AwsEc2SiPeeringOptions {
  AllowDnsResolutionFromRemoteVpc: Boolean
  AllowEgressFromLocalClassicLinkToRemoteVpc: Boolean
  AllowEgressFromLocalVpcToRemoteClassicLink: Boolean
}

type AwsEc2Sj4 {
  Amount: JSON
  Frequency: String
}

type AwsEc2Sjh {
  AvailabilityZone: String
  InstanceCount: Int
  InstanceType: String
  Platform: String
  Scope: String
}

input AwsEc2SjhInput {
  AvailabilityZone: String
  InstanceCount: Int
  InstanceType: String
  Platform: String
  Scope: String
}

type AwsEc2Sk1 {
  Frequency: String
  Interval: Int
  OccurrenceDaySet: [Int]
  OccurrenceRelativeToEnd: Boolean
  OccurrenceUnit: String
}

type AwsEc2Sk8 {
  AvailabilityZone: String
  CreateDate: Date
  HourlyPrice: String
  InstanceCount: Int
  InstanceType: String
  NetworkPlatform: String
  NextSlotStartTime: Date
  Platform: String
  PreviousSlotEndTime: Date
  Recurrence: AwsEc2Sk1
  ScheduledInstanceId: String
  SlotDurationInHours: Int
  TermEndDate: Date
  TermStartDate: Date
  TotalScheduledInstanceHours: Int
}

type AwsEc2Skm {
  Group: String
  UserId: String
}

input AwsEc2SkmInput {
  Group: String
  UserId: String
}

type AwsEc2Slb {
  AllocationStrategy: String
  ClientToken: String
  ExcessCapacityTerminationPolicy: String
  FulfilledCapacity: JSON
  IamFleetRole: String!
  LaunchSpecifications: [AwsEc2SlbLaunchSpecifications]
  LaunchTemplateConfigs: [AwsEc2SlbLaunchTemplateConfigs]
  SpotPrice: String
  TargetCapacity: Int!
  TerminateInstancesWithExpiration: Boolean
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  ReplaceUnhealthyInstances: Boolean
  InstanceInterruptionBehavior: String
  LoadBalancersConfig: AwsEc2SlbLoadBalancersConfig
}

input AwsEc2SlbInput {
  AllocationStrategy: String
  ClientToken: String
  ExcessCapacityTerminationPolicy: String
  FulfilledCapacity: JSON
  IamFleetRole: String!
  LaunchSpecifications: [AwsEc2SlbLaunchSpecificationsInput]
  LaunchTemplateConfigs: [AwsEc2SlbLaunchTemplateConfigsInput]
  SpotPrice: String
  TargetCapacity: Int!
  TerminateInstancesWithExpiration: Boolean
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  ReplaceUnhealthyInstances: Boolean
  InstanceInterruptionBehavior: String
  LoadBalancersConfig: AwsEc2SlbLoadBalancersConfigInput
}

type AwsEc2SlbLaunchSpecifications {
  SecurityGroups: [AwsEc2S7m]
  AddressingType: String
  BlockDeviceMappings: [AwsEc2S4y]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEc2S19
  ImageId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  Monitoring: AwsEc2SlbLaunchSpecificationsMonitoring
  NetworkInterfaces: [AwsEc2Slh]
  Placement: AwsEc2Slj
  RamdiskId: String
  SpotPrice: String
  SubnetId: String
  UserData: String
  WeightedCapacity: JSON
  TagSpecifications: [AwsEc2SlbLaunchSpecificationsTagSpecifications]
}

input AwsEc2SlbLaunchSpecificationsInput {
  SecurityGroups: [AwsEc2S7mInput]
  AddressingType: String
  BlockDeviceMappings: [AwsEc2S4yInput]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEc2S19Input
  ImageId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  Monitoring: AwsEc2SlbLaunchSpecificationsMonitoringInput
  NetworkInterfaces: [AwsEc2SlhInput]
  Placement: AwsEc2SljInput
  RamdiskId: String
  SpotPrice: String
  SubnetId: String
  UserData: String
  WeightedCapacity: JSON
  TagSpecifications: [AwsEc2SlbLaunchSpecificationsTagSpecificationsInput]
}

type AwsEc2SlbLaunchSpecificationsMonitoring {
  Enabled: Boolean
}

input AwsEc2SlbLaunchSpecificationsMonitoringInput {
  Enabled: Boolean
}

type AwsEc2SlbLaunchSpecificationsTagSpecifications {
  ResourceType: String
  Tags: [AwsEc2Sr]
}

input AwsEc2SlbLaunchSpecificationsTagSpecificationsInput {
  ResourceType: String
  Tags: [AwsEc2SrInput]
}

type AwsEc2SlbLaunchTemplateConfigs {
  LaunchTemplateSpecification: AwsEc2SlbLaunchTemplateConfigsLaunchTemplateSpecification
  Overrides: [AwsEc2SlbLaunchTemplateConfigsOverrides]
}

input AwsEc2SlbLaunchTemplateConfigsInput {
  LaunchTemplateSpecification: AwsEc2SlbLaunchTemplateConfigsLaunchTemplateSpecificationInput
  Overrides: [AwsEc2SlbLaunchTemplateConfigsOverridesInput]
}

type AwsEc2SlbLaunchTemplateConfigsLaunchTemplateSpecification {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsEc2SlbLaunchTemplateConfigsLaunchTemplateSpecificationInput {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

type AwsEc2SlbLaunchTemplateConfigsOverrides {
  InstanceType: String
  SpotPrice: String
  SubnetId: String
  AvailabilityZone: String
  WeightedCapacity: JSON
}

input AwsEc2SlbLaunchTemplateConfigsOverridesInput {
  InstanceType: String
  SpotPrice: String
  SubnetId: String
  AvailabilityZone: String
  WeightedCapacity: JSON
}

type AwsEc2SlbLoadBalancersConfig {
  ClassicLoadBalancersConfig: AwsEc2SlbLoadBalancersConfigClassicLoadBalancersConfig
  TargetGroupsConfig: AwsEc2SlbLoadBalancersConfigTargetGroupsConfig
}

type AwsEc2SlbLoadBalancersConfigClassicLoadBalancersConfig {
  ClassicLoadBalancers: [AwsEc2SlbLoadBalancersConfigClassicLoadBalancersConfigClassicLoadBalancers]!
}

type AwsEc2SlbLoadBalancersConfigClassicLoadBalancersConfigClassicLoadBalancers {
  Name: String!
}

input AwsEc2SlbLoadBalancersConfigClassicLoadBalancersConfigClassicLoadBalancersInput {
  Name: String!
}

input AwsEc2SlbLoadBalancersConfigClassicLoadBalancersConfigInput {
  ClassicLoadBalancers: [AwsEc2SlbLoadBalancersConfigClassicLoadBalancersConfigClassicLoadBalancersInput]!
}

input AwsEc2SlbLoadBalancersConfigInput {
  ClassicLoadBalancersConfig: AwsEc2SlbLoadBalancersConfigClassicLoadBalancersConfigInput
  TargetGroupsConfig: AwsEc2SlbLoadBalancersConfigTargetGroupsConfigInput
}

type AwsEc2SlbLoadBalancersConfigTargetGroupsConfig {
  TargetGroups: [AwsEc2SlbLoadBalancersConfigTargetGroupsConfigTargetGroups]!
}

input AwsEc2SlbLoadBalancersConfigTargetGroupsConfigInput {
  TargetGroups: [AwsEc2SlbLoadBalancersConfigTargetGroupsConfigTargetGroupsInput]!
}

type AwsEc2SlbLoadBalancersConfigTargetGroupsConfigTargetGroups {
  Arn: String!
}

input AwsEc2SlbLoadBalancersConfigTargetGroupsConfigTargetGroupsInput {
  Arn: String!
}

type AwsEc2Slh {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEc2S6o]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEc2S5u]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

input AwsEc2SlhInput {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEc2S6oInput]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEc2S5uInput]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

type AwsEc2Slj {
  AvailabilityZone: String
  GroupName: String
  Tenancy: String
}

input AwsEc2SljInput {
  AvailabilityZone: String
  GroupName: String
  Tenancy: String
}

type AwsEc2Sm1 {
  ActualBlockHourlyPrice: String
  AvailabilityZoneGroup: String
  BlockDurationMinutes: Int
  CreateTime: Date
  Fault: AwsEc2S8r
  InstanceId: String
  LaunchGroup: String
  LaunchSpecification: AwsEc2Sm1LaunchSpecification
  LaunchedAvailabilityZone: String
  ProductDescription: String
  SpotInstanceRequestId: String
  SpotPrice: String
  State: String
  Status: AwsEc2Sm1Status
  Tags: [AwsEc2Sr]
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

type AwsEc2Sm1LaunchSpecification {
  UserData: String
  SecurityGroups: [AwsEc2S7m]
  AddressingType: String
  BlockDeviceMappings: [AwsEc2S4y]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEc2S19
  ImageId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  NetworkInterfaces: [AwsEc2Slh]
  Placement: AwsEc2Slj
  RamdiskId: String
  SubnetId: String
  Monitoring: AwsEc2Sm4
}

type AwsEc2Sm1Status {
  Code: String
  Message: String
  UpdateTime: Date
}

type AwsEc2Sm4 {
  Enabled: Boolean!
}

input AwsEc2Sm4Input {
  Enabled: Boolean!
}

type AwsEc2Smh {
  FromPort: Int
  IpProtocol: String
  IpRanges: [String]
  PrefixListIds: [String]
  ToPort: Int
  UserIdGroupPairs: [AwsEc2S2e]
}

type AwsEc2Snh {
  VolumeId: String
  ModificationState: String
  StatusMessage: String
  TargetSize: Int
  TargetIops: Int
  TargetVolumeType: String
  OriginalSize: Int
  OriginalIops: Int
  OriginalVolumeType: String
  Progress: JSON
  StartTime: Date
  EndTime: Date
}

type AwsEc2Sps {
  CurrencyCode: String
  Duration: Int
  HostIdSet: [String]
  HostReservationId: String
  HourlyPrice: String
  InstanceFamily: String
  PaymentOption: String
  UpfrontPrice: String
}

type AwsEc2Sq0 {
  HourlyPrice: String
  RemainingTotalValue: String
  RemainingUpfrontValue: String
}

input AwsEc2Sq7Input {
  Comment: String
  UploadEnd: Date
  UploadSize: JSON
  UploadStart: Date
}

input AwsEc2SqaInput {
  S3Bucket: String
  S3Key: String
}

input AwsEc2SqfInput {
  Bytes: JSON!
  Format: String!
  ImportManifestUrl: String!
}

input AwsEc2SqgInput {
  Size: JSON!
}

input AwsEc2SqxInput {
  Group: String
  UserId: String
}

type AwsEc2Sr {
  Key: String
  Value: String
}

input AwsEc2SrInput {
  Key: String
  Value: String
}

input AwsEc2SsfInput {
  AllowDnsResolutionFromRemoteVpc: Boolean
  AllowEgressFromLocalClassicLinkToRemoteVpc: Boolean
  AllowEgressFromLocalVpcToRemoteClassicLink: Boolean
}

type AwsEc2Ssh {
  AllowDnsResolutionFromRemoteVpc: Boolean
  AllowEgressFromLocalClassicLinkToRemoteVpc: Boolean
  AllowEgressFromLocalVpcToRemoteClassicLink: Boolean
}

type AwsEc2Ssn {
  InstanceId: String
  Monitoring: AwsEc2Sh2
}

input AwsEc2StartInstancesInput {
  InstanceIds: [String]!
  AdditionalInfo: String
  DryRun: Boolean
}

type AwsEc2StartInstancesOutput {
  StartingInstances: [AwsEc2Suv]
}

input AwsEc2StopInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
  Force: Boolean
}

type AwsEc2StopInstancesOutput {
  StoppingInstances: [AwsEc2Suv]
}

type AwsEc2Suv {
  CurrentState: AwsEc2Sgo
  InstanceId: String
  PreviousState: AwsEc2Sgo
}

input AwsEc2TerminateInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
}

type AwsEc2TerminateInstancesOutput {
  TerminatingInstances: [AwsEc2Suv]
}

input AwsEc2UnassignIpv6AddressesInput {
  Ipv6Addresses: [String]!
  NetworkInterfaceId: String!
}

type AwsEc2UnassignIpv6AddressesOutput {
  NetworkInterfaceId: String
  UnassignedIpv6Addresses: [String]
}

input AwsEc2UnassignPrivateIpAddressesInput {
  NetworkInterfaceId: String!
  PrivateIpAddresses: [String]!
}

input AwsEc2UnmonitorInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
}

type AwsEc2UnmonitorInstancesOutput {
  InstanceMonitorings: [AwsEc2Ssn]
}

input AwsEc2UpdateSecurityGroupRuleDescriptionsEgressInput {
  DryRun: Boolean
  GroupId: String
  GroupName: String
  IpPermissions: [AwsEc2S25Input]!
}

type AwsEc2UpdateSecurityGroupRuleDescriptionsEgressOutput {
  Return: Boolean
}

input AwsEc2UpdateSecurityGroupRuleDescriptionsIngressInput {
  DryRun: Boolean
  GroupId: String
  GroupName: String
  IpPermissions: [AwsEc2S25Input]!
}

type AwsEc2UpdateSecurityGroupRuleDescriptionsIngressOutput {
  Return: Boolean
}

# Amazon EC2 Container Registry (2015-09-21)
type AwsEcr {
  # ecr.BatchCheckLayerAvailability
  BatchCheckLayerAvailability(input: AwsEcrBatchCheckLayerAvailabilityInput!): AwsEcrBatchCheckLayerAvailabilityOutput

  # ecr.BatchDeleteImage
  BatchDeleteImage(input: AwsEcrBatchDeleteImageInput!): AwsEcrBatchDeleteImageOutput

  # ecr.BatchGetImage
  BatchGetImage(input: AwsEcrBatchGetImageInput!): AwsEcrBatchGetImageOutput

  # ecr.CompleteLayerUpload
  CompleteLayerUpload(input: AwsEcrCompleteLayerUploadInput!): AwsEcrCompleteLayerUploadOutput

  # ecr.CreateRepository
  CreateRepository(input: AwsEcrCreateRepositoryInput!): AwsEcrCreateRepositoryOutput

  # ecr.DeleteLifecyclePolicy
  DeleteLifecyclePolicy(input: AwsEcrDeleteLifecyclePolicyInput!): AwsEcrDeleteLifecyclePolicyOutput

  # ecr.DeleteRepository
  DeleteRepository(input: AwsEcrDeleteRepositoryInput!): AwsEcrDeleteRepositoryOutput

  # ecr.DeleteRepositoryPolicy
  DeleteRepositoryPolicy(input: AwsEcrDeleteRepositoryPolicyInput!): AwsEcrDeleteRepositoryPolicyOutput

  # ecr.DescribeImages
  DescribeImages(input: AwsEcrDescribeImagesInput!): AwsEcrDescribeImagesOutput

  # ecr.DescribeRepositories
  DescribeRepositories(input: AwsEcrDescribeRepositoriesInput): AwsEcrDescribeRepositoriesOutput

  # ecr.GetAuthorizationToken
  GetAuthorizationToken(input: AwsEcrGetAuthorizationTokenInput): AwsEcrGetAuthorizationTokenOutput

  # ecr.GetDownloadUrlForLayer
  GetDownloadUrlForLayer(input: AwsEcrGetDownloadUrlForLayerInput!): AwsEcrGetDownloadUrlForLayerOutput

  # ecr.GetLifecyclePolicy
  GetLifecyclePolicy(input: AwsEcrGetLifecyclePolicyInput!): AwsEcrGetLifecyclePolicyOutput

  # ecr.GetLifecyclePolicyPreview
  GetLifecyclePolicyPreview(input: AwsEcrGetLifecyclePolicyPreviewInput!): AwsEcrGetLifecyclePolicyPreviewOutput

  # ecr.GetRepositoryPolicy
  GetRepositoryPolicy(input: AwsEcrGetRepositoryPolicyInput!): AwsEcrGetRepositoryPolicyOutput

  # ecr.InitiateLayerUpload
  InitiateLayerUpload(input: AwsEcrInitiateLayerUploadInput!): AwsEcrInitiateLayerUploadOutput

  # ecr.ListImages
  ListImages(input: AwsEcrListImagesInput!): AwsEcrListImagesOutput

  # ecr.PutImage
  PutImage(input: AwsEcrPutImageInput!): AwsEcrPutImageOutput

  # ecr.PutLifecyclePolicy
  PutLifecyclePolicy(input: AwsEcrPutLifecyclePolicyInput!): AwsEcrPutLifecyclePolicyOutput

  # ecr.SetRepositoryPolicy
  SetRepositoryPolicy(input: AwsEcrSetRepositoryPolicyInput!): AwsEcrSetRepositoryPolicyOutput

  # ecr.StartLifecyclePolicyPreview
  StartLifecyclePolicyPreview(input: AwsEcrStartLifecyclePolicyPreviewInput!): AwsEcrStartLifecyclePolicyPreviewOutput

  # ecr.UploadLayerPart
  UploadLayerPart(input: AwsEcrUploadLayerPartInput!): AwsEcrUploadLayerPartOutput
}

input AwsEcrBatchCheckLayerAvailabilityInput {
  registryId: String
  repositoryName: String!
  layerDigests: [String]!
}

type AwsEcrBatchCheckLayerAvailabilityOutput {
  layers: [AwsEcrBatchCheckLayerAvailabilityOutputLayers]
  failures: [AwsEcrBatchCheckLayerAvailabilityOutputFailures]
}

type AwsEcrBatchCheckLayerAvailabilityOutputFailures {
  layerDigest: String
  failureCode: String
  failureReason: String
}

type AwsEcrBatchCheckLayerAvailabilityOutputLayers {
  layerDigest: String
  layerAvailability: String
  layerSize: JSON
  mediaType: String
}

input AwsEcrBatchDeleteImageInput {
  registryId: String
  repositoryName: String!
  imageIds: [AwsEcrSjInput]!
}

type AwsEcrBatchDeleteImageOutput {
  imageIds: [AwsEcrSj]
  failures: [AwsEcrSn]
}

input AwsEcrBatchGetImageInput {
  registryId: String
  repositoryName: String!
  imageIds: [AwsEcrSjInput]!
  acceptedMediaTypes: [String]
}

type AwsEcrBatchGetImageOutput {
  images: [AwsEcrSv]
  failures: [AwsEcrSn]
}

input AwsEcrCompleteLayerUploadInput {
  registryId: String
  repositoryName: String!
  uploadId: String!
  layerDigests: [String]!
}

type AwsEcrCompleteLayerUploadOutput {
  registryId: String
  repositoryName: String
  uploadId: String
  layerDigest: String
}

input AwsEcrCreateRepositoryInput {
  repositoryName: String!
}

type AwsEcrCreateRepositoryOutput {
  repository: AwsEcrS13
}

input AwsEcrDeleteLifecyclePolicyInput {
  registryId: String
  repositoryName: String!
}

type AwsEcrDeleteLifecyclePolicyOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
  lastEvaluatedAt: Date
}

input AwsEcrDeleteRepositoryInput {
  registryId: String
  repositoryName: String!
  force: Boolean
}

type AwsEcrDeleteRepositoryOutput {
  repository: AwsEcrS13
}

input AwsEcrDeleteRepositoryPolicyInput {
  registryId: String
  repositoryName: String!
}

type AwsEcrDeleteRepositoryPolicyOutput {
  registryId: String
  repositoryName: String
  policyText: String
}

input AwsEcrDescribeImagesFilterInput {
  tagStatus: String
}

input AwsEcrDescribeImagesInput {
  registryId: String
  repositoryName: String!
  imageIds: [AwsEcrSjInput]
  nextToken: String
  maxResults: Int
  filter: AwsEcrDescribeImagesFilterInput
}

type AwsEcrDescribeImagesOutput {
  imageDetails: [AwsEcrDescribeImagesOutputImageDetails]
  nextToken: String
}

type AwsEcrDescribeImagesOutputImageDetails {
  registryId: String
  repositoryName: String
  imageDigest: String
  imageTags: [String]
  imageSizeInBytes: JSON
  imagePushedAt: Date
}

input AwsEcrDescribeRepositoriesInput {
  registryId: String
  repositoryNames: [String]
  nextToken: String
  maxResults: Int
}

type AwsEcrDescribeRepositoriesOutput {
  repositories: [AwsEcrS13]
  nextToken: String
}

input AwsEcrGetAuthorizationTokenInput {
  registryIds: [String]
}

type AwsEcrGetAuthorizationTokenOutput {
  authorizationData: [AwsEcrGetAuthorizationTokenOutputAuthorizationData]
}

type AwsEcrGetAuthorizationTokenOutputAuthorizationData {
  authorizationToken: String
  expiresAt: Date
  proxyEndpoint: String
}

input AwsEcrGetDownloadUrlForLayerInput {
  registryId: String
  repositoryName: String!
  layerDigest: String!
}

type AwsEcrGetDownloadUrlForLayerOutput {
  downloadUrl: String
  layerDigest: String
}

input AwsEcrGetLifecyclePolicyInput {
  registryId: String
  repositoryName: String!
}

type AwsEcrGetLifecyclePolicyOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
  lastEvaluatedAt: Date
}

input AwsEcrGetLifecyclePolicyPreviewFilterInput {
  tagStatus: String
}

input AwsEcrGetLifecyclePolicyPreviewInput {
  registryId: String
  repositoryName: String!
  imageIds: [AwsEcrSjInput]
  nextToken: String
  maxResults: Int
  filter: AwsEcrGetLifecyclePolicyPreviewFilterInput
}

type AwsEcrGetLifecyclePolicyPreviewOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
  status: String
  nextToken: String
  previewResults: [AwsEcrGetLifecyclePolicyPreviewOutputPreviewResults]
  summary: AwsEcrGetLifecyclePolicyPreviewOutputSummary
}

type AwsEcrGetLifecyclePolicyPreviewOutputPreviewResults {
  imageTags: [String]
  imageDigest: String
  imagePushedAt: Date
  action: AwsEcrGetLifecyclePolicyPreviewOutputPreviewResultsAction
  appliedRulePriority: Int
}

type AwsEcrGetLifecyclePolicyPreviewOutputPreviewResultsAction {
  type: String
}

type AwsEcrGetLifecyclePolicyPreviewOutputSummary {
  expiringImageTotalCount: Int
}

input AwsEcrGetRepositoryPolicyInput {
  registryId: String
  repositoryName: String!
}

type AwsEcrGetRepositoryPolicyOutput {
  registryId: String
  repositoryName: String
  policyText: String
}

input AwsEcrInitiateLayerUploadInput {
  registryId: String
  repositoryName: String!
}

type AwsEcrInitiateLayerUploadOutput {
  uploadId: String
  partSize: JSON
}

input AwsEcrListImagesFilterInput {
  tagStatus: String
}

input AwsEcrListImagesInput {
  registryId: String
  repositoryName: String!
  nextToken: String
  maxResults: Int
  filter: AwsEcrListImagesFilterInput
}

type AwsEcrListImagesOutput {
  imageIds: [AwsEcrSj]
  nextToken: String
}

input AwsEcrPutImageInput {
  registryId: String
  repositoryName: String!
  imageManifest: String!
  imageTag: String
}

type AwsEcrPutImageOutput {
  image: AwsEcrSv
}

input AwsEcrPutLifecyclePolicyInput {
  registryId: String
  repositoryName: String!
  lifecyclePolicyText: String!
}

type AwsEcrPutLifecyclePolicyOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
}

type AwsEcrS13 {
  repositoryArn: String
  registryId: String
  repositoryName: String
  repositoryUri: String
  createdAt: Date
}

input AwsEcrSetRepositoryPolicyInput {
  registryId: String
  repositoryName: String!
  policyText: String!
  force: Boolean
}

type AwsEcrSetRepositoryPolicyOutput {
  registryId: String
  repositoryName: String
  policyText: String
}

type AwsEcrSj {
  imageDigest: String
  imageTag: String
}

input AwsEcrSjInput {
  imageDigest: String
  imageTag: String
}

type AwsEcrSn {
  imageId: AwsEcrSj
  failureCode: String
  failureReason: String
}

input AwsEcrStartLifecyclePolicyPreviewInput {
  registryId: String
  repositoryName: String!
  lifecyclePolicyText: String
}

type AwsEcrStartLifecyclePolicyPreviewOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
  status: String
}

type AwsEcrSv {
  registryId: String
  repositoryName: String
  imageId: AwsEcrSj
  imageManifest: String
}

input AwsEcrUploadLayerPartInput {
  registryId: String
  repositoryName: String!
  uploadId: String!
  partFirstByte: JSON!
  partLastByte: JSON!
  layerPartBlob: JSON!
}

type AwsEcrUploadLayerPartOutput {
  registryId: String
  repositoryName: String
  uploadId: String
  lastByteReceived: JSON
}

# Amazon EC2 Container Service (2014-11-13)
type AwsEcs {
  # ecs.CreateCluster
  CreateCluster(input: AwsEcsCreateClusterInput): AwsEcsCreateClusterOutput

  # ecs.CreateService
  CreateService(input: AwsEcsCreateServiceInput!): AwsEcsCreateServiceOutput

  # ecs.DeleteAttributes
  DeleteAttributes(input: AwsEcsDeleteAttributesInput!): AwsEcsDeleteAttributesOutput

  # ecs.DeleteCluster
  DeleteCluster(input: AwsEcsDeleteClusterInput!): AwsEcsDeleteClusterOutput

  # ecs.DeleteService
  DeleteService(input: AwsEcsDeleteServiceInput!): AwsEcsDeleteServiceOutput

  # ecs.DeregisterContainerInstance
  DeregisterContainerInstance(input: AwsEcsDeregisterContainerInstanceInput!): AwsEcsDeregisterContainerInstanceOutput

  # ecs.DeregisterTaskDefinition
  DeregisterTaskDefinition(input: AwsEcsDeregisterTaskDefinitionInput!): AwsEcsDeregisterTaskDefinitionOutput

  # ecs.DescribeClusters
  DescribeClusters(input: AwsEcsDescribeClustersInput): AwsEcsDescribeClustersOutput

  # ecs.DescribeContainerInstances
  DescribeContainerInstances(input: AwsEcsDescribeContainerInstancesInput!): AwsEcsDescribeContainerInstancesOutput

  # ecs.DescribeServices
  DescribeServices(input: AwsEcsDescribeServicesInput!): AwsEcsDescribeServicesOutput

  # ecs.DescribeTaskDefinition
  DescribeTaskDefinition(input: AwsEcsDescribeTaskDefinitionInput!): AwsEcsDescribeTaskDefinitionOutput

  # ecs.DescribeTasks
  DescribeTasks(input: AwsEcsDescribeTasksInput!): AwsEcsDescribeTasksOutput

  # ecs.DiscoverPollEndpoint
  DiscoverPollEndpoint(input: AwsEcsDiscoverPollEndpointInput): AwsEcsDiscoverPollEndpointOutput

  # ecs.ListAttributes
  ListAttributes(input: AwsEcsListAttributesInput!): AwsEcsListAttributesOutput

  # ecs.ListClusters
  ListClusters(input: AwsEcsListClustersInput): AwsEcsListClustersOutput

  # ecs.ListContainerInstances
  ListContainerInstances(input: AwsEcsListContainerInstancesInput): AwsEcsListContainerInstancesOutput

  # ecs.ListServices
  ListServices(input: AwsEcsListServicesInput): AwsEcsListServicesOutput

  # ecs.ListTaskDefinitionFamilies
  ListTaskDefinitionFamilies(input: AwsEcsListTaskDefinitionFamiliesInput): AwsEcsListTaskDefinitionFamiliesOutput

  # ecs.ListTaskDefinitions
  ListTaskDefinitions(input: AwsEcsListTaskDefinitionsInput): AwsEcsListTaskDefinitionsOutput

  # ecs.ListTasks
  ListTasks(input: AwsEcsListTasksInput): AwsEcsListTasksOutput

  # ecs.PutAttributes
  PutAttributes(input: AwsEcsPutAttributesInput!): AwsEcsPutAttributesOutput

  # ecs.RegisterContainerInstance
  RegisterContainerInstance(input: AwsEcsRegisterContainerInstanceInput): AwsEcsRegisterContainerInstanceOutput

  # ecs.RegisterTaskDefinition
  RegisterTaskDefinition(input: AwsEcsRegisterTaskDefinitionInput!): AwsEcsRegisterTaskDefinitionOutput

  # ecs.RunTask
  RunTask(input: AwsEcsRunTaskInput!): AwsEcsRunTaskOutput

  # ecs.StartTask
  StartTask(input: AwsEcsStartTaskInput!): AwsEcsStartTaskOutput

  # ecs.StopTask
  StopTask(input: AwsEcsStopTaskInput!): AwsEcsStopTaskOutput

  # ecs.SubmitContainerStateChange
  SubmitContainerStateChange(input: AwsEcsSubmitContainerStateChangeInput): AwsEcsSubmitContainerStateChangeOutput

  # ecs.SubmitTaskStateChange
  SubmitTaskStateChange(input: AwsEcsSubmitTaskStateChangeInput): AwsEcsSubmitTaskStateChangeOutput

  # ecs.UpdateContainerAgent
  UpdateContainerAgent(input: AwsEcsUpdateContainerAgentInput!): AwsEcsUpdateContainerAgentOutput

  # ecs.UpdateContainerInstancesState
  UpdateContainerInstancesState(input: AwsEcsUpdateContainerInstancesStateInput!): AwsEcsUpdateContainerInstancesStateOutput

  # ecs.UpdateService
  UpdateService(input: AwsEcsUpdateServiceInput!): AwsEcsUpdateServiceOutput
}

input AwsEcsCreateClusterInput {
  clusterName: String
}

type AwsEcsCreateClusterOutput {
  cluster: AwsEcsS4
}

input AwsEcsCreateServiceInput {
  cluster: String
  serviceName: String!
  taskDefinition: String!
  loadBalancers: [AwsEcsS9Input]
  desiredCount: Int!
  clientToken: String
  launchType: String
  platformVersion: String
  role: String
  deploymentConfiguration: AwsEcsSdInput
  placementConstraints: [AwsEcsSeInput]
  placementStrategy: [AwsEcsShInput]
  networkConfiguration: AwsEcsSkInput
}

type AwsEcsCreateServiceOutput {
  service: AwsEcsSp
}

input AwsEcsDeleteAttributesInput {
  cluster: String
  attributes: [AwsEcsSxInput]!
}

type AwsEcsDeleteAttributesOutput {
  attributes: [AwsEcsSx]
}

input AwsEcsDeleteClusterInput {
  cluster: String!
}

type AwsEcsDeleteClusterOutput {
  cluster: AwsEcsS4
}

input AwsEcsDeleteServiceInput {
  cluster: String
  service: String!
}

type AwsEcsDeleteServiceOutput {
  service: AwsEcsSp
}

input AwsEcsDeregisterContainerInstanceInput {
  cluster: String
  containerInstance: String!
  force: Boolean
}

type AwsEcsDeregisterContainerInstanceOutput {
  containerInstance: AwsEcsS17
}

input AwsEcsDeregisterTaskDefinitionInput {
  taskDefinition: String!
}

type AwsEcsDeregisterTaskDefinitionOutput {
  taskDefinition: AwsEcsS1k
}

input AwsEcsDescribeClustersInput {
  clusters: [String]
  include: [String]
}

type AwsEcsDescribeClustersOutput {
  clusters: [AwsEcsS4]
  failures: [AwsEcsS2q]
}

input AwsEcsDescribeContainerInstancesInput {
  cluster: String
  containerInstances: [String]!
}

type AwsEcsDescribeContainerInstancesOutput {
  containerInstances: [AwsEcsS17]
  failures: [AwsEcsS2q]
}

input AwsEcsDescribeServicesInput {
  cluster: String
  services: [String]!
}

type AwsEcsDescribeServicesOutput {
  services: [AwsEcsSp]
  failures: [AwsEcsS2q]
}

input AwsEcsDescribeTaskDefinitionInput {
  taskDefinition: String!
}

type AwsEcsDescribeTaskDefinitionOutput {
  taskDefinition: AwsEcsS1k
}

input AwsEcsDescribeTasksInput {
  cluster: String
  tasks: [String]!
}

type AwsEcsDescribeTasksOutput {
  tasks: [AwsEcsS33]
  failures: [AwsEcsS2q]
}

input AwsEcsDiscoverPollEndpointInput {
  containerInstance: String
  cluster: String
}

type AwsEcsDiscoverPollEndpointOutput {
  endpoint: String
  telemetryEndpoint: String
}

input AwsEcsListAttributesInput {
  cluster: String
  targetType: String!
  attributeName: String
  attributeValue: String
  nextToken: String
  maxResults: Int
}

type AwsEcsListAttributesOutput {
  attributes: [AwsEcsSx]
  nextToken: String
}

input AwsEcsListClustersInput {
  nextToken: String
  maxResults: Int
}

type AwsEcsListClustersOutput {
  clusterArns: [String]
  nextToken: String
}

input AwsEcsListContainerInstancesInput {
  cluster: String
  filter: String
  nextToken: String
  maxResults: Int
  status: String
}

type AwsEcsListContainerInstancesOutput {
  containerInstanceArns: [String]
  nextToken: String
}

input AwsEcsListServicesInput {
  cluster: String
  nextToken: String
  maxResults: Int
  launchType: String
}

type AwsEcsListServicesOutput {
  serviceArns: [String]
  nextToken: String
}

input AwsEcsListTaskDefinitionFamiliesInput {
  familyPrefix: String
  status: String
  nextToken: String
  maxResults: Int
}

type AwsEcsListTaskDefinitionFamiliesOutput {
  families: [String]
  nextToken: String
}

input AwsEcsListTaskDefinitionsInput {
  familyPrefix: String
  status: String
  sort: String
  nextToken: String
  maxResults: Int
}

type AwsEcsListTaskDefinitionsOutput {
  taskDefinitionArns: [String]
  nextToken: String
}

input AwsEcsListTasksInput {
  cluster: String
  containerInstance: String
  family: String
  nextToken: String
  maxResults: Int
  startedBy: String
  serviceName: String
  desiredStatus: String
  launchType: String
}

type AwsEcsListTasksOutput {
  taskArns: [String]
  nextToken: String
}

input AwsEcsPutAttributesInput {
  cluster: String
  attributes: [AwsEcsSxInput]!
}

type AwsEcsPutAttributesOutput {
  attributes: [AwsEcsSx]
}

input AwsEcsRegisterContainerInstanceInput {
  cluster: String
  instanceIdentityDocument: String
  instanceIdentityDocumentSignature: String
  totalResources: [AwsEcsS1aInput]
  versionInfo: AwsEcsS19Input
  containerInstanceArn: String
  attributes: [AwsEcsSxInput]
}

type AwsEcsRegisterContainerInstanceOutput {
  containerInstance: AwsEcsS17
}

input AwsEcsRegisterTaskDefinitionInput {
  family: String!
  taskRoleArn: String
  executionRoleArn: String
  networkMode: String
  containerDefinitions: [AwsEcsS1lInput]!
  volumes: [AwsEcsS2bInput]
  placementConstraints: [AwsEcsS2gInput]
  requiresCompatibilities: [String]
  cpu: String
  memory: String
}

type AwsEcsRegisterTaskDefinitionOutput {
  taskDefinition: AwsEcsS1k
}

input AwsEcsRunTaskInput {
  cluster: String
  taskDefinition: String!
  overrides: AwsEcsS34Input
  count: Int
  startedBy: String
  group: String
  placementConstraints: [AwsEcsSeInput]
  placementStrategy: [AwsEcsShInput]
  launchType: String
  platformVersion: String
  networkConfiguration: AwsEcsSkInput
}

type AwsEcsRunTaskOutput {
  tasks: [AwsEcsS33]
  failures: [AwsEcsS2q]
}

type AwsEcsS17 {
  containerInstanceArn: String
  ec2InstanceId: String
  version: JSON
  versionInfo: AwsEcsS19
  remainingResources: [AwsEcsS1a]
  registeredResources: [AwsEcsS1a]
  status: String
  agentConnected: Boolean
  runningTasksCount: Int
  pendingTasksCount: Int
  agentUpdateStatus: String
  attributes: [AwsEcsSx]
  registeredAt: Date
  attachments: [AwsEcsS1f]
}

type AwsEcsS19 {
  agentVersion: String
  agentHash: String
  dockerVersion: String
}

input AwsEcsS19Input {
  agentVersion: String
  agentHash: String
  dockerVersion: String
}

type AwsEcsS1a {
  name: String
  type: String
  doubleValue: JSON
  longValue: JSON
  integerValue: Int
  stringSetValue: [String]
}

input AwsEcsS1aInput {
  name: String
  type: String
  doubleValue: JSON
  longValue: JSON
  integerValue: Int
  stringSetValue: [String]
}

type AwsEcsS1f {
  id: String
  type: String
  status: String
  details: [AwsEcsS7]
}

type AwsEcsS1k {
  taskDefinitionArn: String
  containerDefinitions: [AwsEcsS1l]
  family: String
  taskRoleArn: String
  executionRoleArn: String
  networkMode: String
  revision: Int
  volumes: [AwsEcsS2b]
  status: String
  requiresAttributes: [AwsEcsSx]
  placementConstraints: [AwsEcsS2g]
  compatibilities: [String]
  requiresCompatibilities: [String]
  cpu: String
  memory: String
}

type AwsEcsS1l {
  name: String
  image: String
  cpu: Int
  memory: Int
  memoryReservation: Int
  links: [String]
  portMappings: [AwsEcsS1lPortMappings]
  essential: Boolean
  entryPoint: [String]
  command: [String]
  environment: [AwsEcsS7]
  mountPoints: [AwsEcsS1lMountPoints]
  volumesFrom: [AwsEcsS1lVolumesFrom]
  linuxParameters: AwsEcsS1lLinuxParameters
  hostname: String
  user: String
  workingDirectory: String
  disableNetworking: Boolean
  privileged: Boolean
  readonlyRootFilesystem: Boolean
  dnsServers: [String]
  dnsSearchDomains: [String]
  extraHosts: [AwsEcsS1lExtraHosts]
  dockerSecurityOptions: [String]
  dockerLabels: JSON
  ulimits: [AwsEcsS1lUlimits]
  logConfiguration: AwsEcsS1lLogConfiguration
}

type AwsEcsS1lExtraHosts {
  hostname: String!
  ipAddress: String!
}

input AwsEcsS1lExtraHostsInput {
  hostname: String!
  ipAddress: String!
}

input AwsEcsS1lInput {
  name: String
  image: String
  cpu: Int
  memory: Int
  memoryReservation: Int
  links: [String]
  portMappings: [AwsEcsS1lPortMappingsInput]
  essential: Boolean
  entryPoint: [String]
  command: [String]
  environment: [AwsEcsS7Input]
  mountPoints: [AwsEcsS1lMountPointsInput]
  volumesFrom: [AwsEcsS1lVolumesFromInput]
  linuxParameters: AwsEcsS1lLinuxParametersInput
  hostname: String
  user: String
  workingDirectory: String
  disableNetworking: Boolean
  privileged: Boolean
  readonlyRootFilesystem: Boolean
  dnsServers: [String]
  dnsSearchDomains: [String]
  extraHosts: [AwsEcsS1lExtraHostsInput]
  dockerSecurityOptions: [String]
  dockerLabels: JSON
  ulimits: [AwsEcsS1lUlimitsInput]
  logConfiguration: AwsEcsS1lLogConfigurationInput
}

type AwsEcsS1lLinuxParameters {
  capabilities: AwsEcsS1lLinuxParametersCapabilities
  devices: [AwsEcsS1lLinuxParametersDevices]
  initProcessEnabled: Boolean
}

type AwsEcsS1lLinuxParametersCapabilities {
  add: [String]
  drop: [String]
}

input AwsEcsS1lLinuxParametersCapabilitiesInput {
  add: [String]
  drop: [String]
}

type AwsEcsS1lLinuxParametersDevices {
  hostPath: String!
  containerPath: String
  permissions: [String]
}

input AwsEcsS1lLinuxParametersDevicesInput {
  hostPath: String!
  containerPath: String
  permissions: [String]
}

input AwsEcsS1lLinuxParametersInput {
  capabilities: AwsEcsS1lLinuxParametersCapabilitiesInput
  devices: [AwsEcsS1lLinuxParametersDevicesInput]
  initProcessEnabled: Boolean
}

type AwsEcsS1lLogConfiguration {
  logDriver: String!
  options: JSON
}

input AwsEcsS1lLogConfigurationInput {
  logDriver: String!
  options: JSON
}

type AwsEcsS1lMountPoints {
  sourceVolume: String
  containerPath: String
  readOnly: Boolean
}

input AwsEcsS1lMountPointsInput {
  sourceVolume: String
  containerPath: String
  readOnly: Boolean
}

type AwsEcsS1lPortMappings {
  containerPort: Int
  hostPort: Int
  protocol: String
}

input AwsEcsS1lPortMappingsInput {
  containerPort: Int
  hostPort: Int
  protocol: String
}

type AwsEcsS1lUlimits {
  name: String!
  softLimit: Int!
  hardLimit: Int!
}

input AwsEcsS1lUlimitsInput {
  name: String!
  softLimit: Int!
  hardLimit: Int!
}

type AwsEcsS1lVolumesFrom {
  sourceContainer: String
  readOnly: Boolean
}

input AwsEcsS1lVolumesFromInput {
  sourceContainer: String
  readOnly: Boolean
}

type AwsEcsS2b {
  name: String
  host: AwsEcsS2bHost
}

type AwsEcsS2bHost {
  sourcePath: String
}

input AwsEcsS2bHostInput {
  sourcePath: String
}

input AwsEcsS2bInput {
  name: String
  host: AwsEcsS2bHostInput
}

type AwsEcsS2g {
  type: String
  expression: String
}

input AwsEcsS2gInput {
  type: String
  expression: String
}

type AwsEcsS2q {
  arn: String
  reason: String
}

type AwsEcsS33 {
  taskArn: String
  clusterArn: String
  taskDefinitionArn: String
  containerInstanceArn: String
  overrides: AwsEcsS34
  lastStatus: String
  desiredStatus: String
  cpu: String
  memory: String
  containers: [AwsEcsS33Containers]
  startedBy: String
  version: JSON
  stoppedReason: String
  connectivity: String
  connectivityAt: Date
  pullStartedAt: Date
  pullStoppedAt: Date
  executionStoppedAt: Date
  createdAt: Date
  startedAt: Date
  stoppingAt: Date
  stoppedAt: Date
  group: String
  launchType: String
  platformVersion: String
  attachments: [AwsEcsS1f]
}

type AwsEcsS33Containers {
  containerArn: String
  taskArn: String
  name: String
  lastStatus: String
  exitCode: Int
  reason: String
  networkBindings: [AwsEcsS39]
  networkInterfaces: [AwsEcsS33ContainersNetworkInterfaces]
}

type AwsEcsS33ContainersNetworkInterfaces {
  attachmentId: String
  privateIpv4Address: String
  ipv6Address: String
}

type AwsEcsS34 {
  containerOverrides: [AwsEcsS34ContainerOverrides]
  taskRoleArn: String
  executionRoleArn: String
}

type AwsEcsS34ContainerOverrides {
  name: String
  command: [String]
  environment: [AwsEcsS7]
  cpu: Int
  memory: Int
  memoryReservation: Int
}

input AwsEcsS34ContainerOverridesInput {
  name: String
  command: [String]
  environment: [AwsEcsS7Input]
  cpu: Int
  memory: Int
  memoryReservation: Int
}

input AwsEcsS34Input {
  containerOverrides: [AwsEcsS34ContainerOverridesInput]
  taskRoleArn: String
  executionRoleArn: String
}

type AwsEcsS39 {
  bindIP: String
  containerPort: Int
  hostPort: Int
  protocol: String
}

input AwsEcsS39Input {
  bindIP: String
  containerPort: Int
  hostPort: Int
  protocol: String
}

type AwsEcsS4 {
  clusterArn: String
  clusterName: String
  status: String
  registeredContainerInstancesCount: Int
  runningTasksCount: Int
  pendingTasksCount: Int
  activeServicesCount: Int
  statistics: [AwsEcsS7]
}

type AwsEcsS7 {
  name: String
  value: String
}

input AwsEcsS7Input {
  name: String
  value: String
}

type AwsEcsS9 {
  targetGroupArn: String
  loadBalancerName: String
  containerName: String
  containerPort: Int
}

input AwsEcsS9Input {
  targetGroupArn: String
  loadBalancerName: String
  containerName: String
  containerPort: Int
}

type AwsEcsSd {
  maximumPercent: Int
  minimumHealthyPercent: Int
}

input AwsEcsSdInput {
  maximumPercent: Int
  minimumHealthyPercent: Int
}

type AwsEcsSe {
  type: String
  expression: String
}

input AwsEcsSeInput {
  type: String
  expression: String
}

type AwsEcsSh {
  type: String
  field: String
}

input AwsEcsShInput {
  type: String
  field: String
}

type AwsEcsSk {
  awsvpcConfiguration: AwsEcsSkAwsvpcConfiguration
}

type AwsEcsSkAwsvpcConfiguration {
  subnets: [String]!
  securityGroups: [String]
  assignPublicIp: String
}

input AwsEcsSkAwsvpcConfigurationInput {
  subnets: [String]!
  securityGroups: [String]
  assignPublicIp: String
}

input AwsEcsSkInput {
  awsvpcConfiguration: AwsEcsSkAwsvpcConfigurationInput
}

type AwsEcsSp {
  serviceArn: String
  serviceName: String
  clusterArn: String
  loadBalancers: [AwsEcsS9]
  status: String
  desiredCount: Int
  runningCount: Int
  pendingCount: Int
  launchType: String
  platformVersion: String
  taskDefinition: String
  deploymentConfiguration: AwsEcsSd
  deployments: [AwsEcsSpDeployments]
  roleArn: String
  events: [AwsEcsSpEvents]
  createdAt: Date
  placementConstraints: [AwsEcsSe]
  placementStrategy: [AwsEcsSh]
  networkConfiguration: AwsEcsSk
}

type AwsEcsSpDeployments {
  id: String
  status: String
  taskDefinition: String
  desiredCount: Int
  pendingCount: Int
  runningCount: Int
  createdAt: Date
  updatedAt: Date
  launchType: String
  platformVersion: String
  networkConfiguration: AwsEcsSk
}

type AwsEcsSpEvents {
  id: String
  createdAt: Date
  message: String
}

input AwsEcsStartTaskInput {
  cluster: String
  taskDefinition: String!
  overrides: AwsEcsS34Input
  containerInstances: [String]!
  startedBy: String
  group: String
  networkConfiguration: AwsEcsSkInput
}

type AwsEcsStartTaskOutput {
  tasks: [AwsEcsS33]
  failures: [AwsEcsS2q]
}

input AwsEcsStopTaskInput {
  cluster: String
  task: String!
  reason: String
}

type AwsEcsStopTaskOutput {
  task: AwsEcsS33
}

input AwsEcsSubmitContainerStateChangeInput {
  cluster: String
  task: String
  containerName: String
  status: String
  exitCode: Int
  reason: String
  networkBindings: [AwsEcsS39Input]
}

type AwsEcsSubmitContainerStateChangeOutput {
  acknowledgment: String
}

input AwsEcsSubmitTaskStateChangeAttachmentsInput {
  attachmentArn: String!
  status: String!
}

input AwsEcsSubmitTaskStateChangeContainersInput {
  containerName: String
  exitCode: Int
  networkBindings: [AwsEcsS39Input]
  reason: String
  status: String
}

input AwsEcsSubmitTaskStateChangeInput {
  cluster: String
  task: String
  status: String
  reason: String
  containers: [AwsEcsSubmitTaskStateChangeContainersInput]
  attachments: [AwsEcsSubmitTaskStateChangeAttachmentsInput]
  pullStartedAt: Date
  pullStoppedAt: Date
  executionStoppedAt: Date
}

type AwsEcsSubmitTaskStateChangeOutput {
  acknowledgment: String
}

type AwsEcsSx {
  name: String!
  value: String
  targetType: String
  targetId: String
}

input AwsEcsSxInput {
  name: String!
  value: String
  targetType: String
  targetId: String
}

input AwsEcsUpdateContainerAgentInput {
  cluster: String
  containerInstance: String!
}

type AwsEcsUpdateContainerAgentOutput {
  containerInstance: AwsEcsS17
}

input AwsEcsUpdateContainerInstancesStateInput {
  cluster: String
  containerInstances: [String]!
  status: String!
}

type AwsEcsUpdateContainerInstancesStateOutput {
  containerInstances: [AwsEcsS17]
  failures: [AwsEcsS2q]
}

input AwsEcsUpdateServiceInput {
  cluster: String
  service: String!
  desiredCount: Int
  taskDefinition: String
  deploymentConfiguration: AwsEcsSdInput
  networkConfiguration: AwsEcsSkInput
  platformVersion: String
  forceNewDeployment: Boolean
}

type AwsEcsUpdateServiceOutput {
  service: AwsEcsSp
}

# Amazon Elastic File System (2015-02-01)
type AwsEfs {
  # efs.CreateFileSystem
  CreateFileSystem(input: AwsEfsCreateFileSystemInput!): JSON

  # efs.CreateMountTarget
  CreateMountTarget(input: AwsEfsCreateMountTargetInput!): JSON

  # efs.CreateTags
  CreateTags(input: AwsEfsCreateTagsInput!): JSON

  # efs.DeleteFileSystem
  DeleteFileSystem(input: AwsEfsDeleteFileSystemInput!): JSON

  # efs.DeleteMountTarget
  DeleteMountTarget(input: AwsEfsDeleteMountTargetInput!): JSON

  # efs.DeleteTags
  DeleteTags(input: AwsEfsDeleteTagsInput!): JSON

  # efs.DescribeFileSystems
  DescribeFileSystems(input: AwsEfsDescribeFileSystemsInput): AwsEfsDescribeFileSystemsOutput

  # efs.DescribeMountTargetSecurityGroups
  DescribeMountTargetSecurityGroups(input: AwsEfsDescribeMountTargetSecurityGroupsInput!): AwsEfsDescribeMountTargetSecurityGroupsOutput

  # efs.DescribeMountTargets
  DescribeMountTargets(input: AwsEfsDescribeMountTargetsInput): AwsEfsDescribeMountTargetsOutput

  # efs.DescribeTags
  DescribeTags(input: AwsEfsDescribeTagsInput!): AwsEfsDescribeTagsOutput

  # efs.ModifyMountTargetSecurityGroups
  ModifyMountTargetSecurityGroups(input: AwsEfsModifyMountTargetSecurityGroupsInput!): JSON
}

input AwsEfsCreateFileSystemInput {
  CreationToken: String!
  PerformanceMode: String
  Encrypted: Boolean
  KmsKeyId: String
}

input AwsEfsCreateMountTargetInput {
  FileSystemId: String!
  SubnetId: String!
  IpAddress: String
  SecurityGroups: [String]
}

input AwsEfsCreateTagsInput {
  FileSystemId: String!
  Tags: [AwsEfsSoInput]!
}

input AwsEfsDeleteFileSystemInput {
  FileSystemId: String!
}

input AwsEfsDeleteMountTargetInput {
  MountTargetId: String!
}

input AwsEfsDeleteTagsInput {
  FileSystemId: String!
  TagKeys: [String]!
}

input AwsEfsDescribeFileSystemsInput {
  MaxItems: Int
  Marker: String
  CreationToken: String
  FileSystemId: String
}

type AwsEfsDescribeFileSystemsOutput {
  Marker: String
  FileSystems: [AwsEfsS6]
  NextMarker: String
}

input AwsEfsDescribeMountTargetSecurityGroupsInput {
  MountTargetId: String!
}

type AwsEfsDescribeMountTargetSecurityGroupsOutput {
  SecurityGroups: [String]!
}

input AwsEfsDescribeMountTargetsInput {
  MaxItems: Int
  Marker: String
  FileSystemId: String
  MountTargetId: String
}

type AwsEfsDescribeMountTargetsOutput {
  Marker: String
  MountTargets: [AwsEfsSk]
  NextMarker: String
}

input AwsEfsDescribeTagsInput {
  MaxItems: Int
  Marker: String
  FileSystemId: String!
}

type AwsEfsDescribeTagsOutput {
  Marker: String
  Tags: [AwsEfsSo]!
  NextMarker: String
}

input AwsEfsModifyMountTargetSecurityGroupsInput {
  MountTargetId: String!
  SecurityGroups: [String]
}

type AwsEfsS6 {
  OwnerId: String!
  CreationToken: String!
  FileSystemId: String!
  CreationTime: Date!
  LifeCycleState: String!
  Name: String
  NumberOfMountTargets: Int!
  SizeInBytes: AwsEfsS6SizeInBytes!
  PerformanceMode: String!
  Encrypted: Boolean
  KmsKeyId: String
}

type AwsEfsS6SizeInBytes {
  Value: JSON!
  Timestamp: Date
}

type AwsEfsSk {
  OwnerId: String
  MountTargetId: String!
  FileSystemId: String!
  SubnetId: String!
  LifeCycleState: String!
  IpAddress: String
  NetworkInterfaceId: String
}

type AwsEfsSo {
  Key: String!
  Value: String!
}

input AwsEfsSoInput {
  Key: String!
  Value: String!
}

# Amazon ElastiCache (2015-02-02)
type AwsElasticache {
  # elasticache.AddTagsToResource
  AddTagsToResource(input: AwsElasticacheAddTagsToResourceInput!): JSON

  # elasticache.AuthorizeCacheSecurityGroupIngress
  AuthorizeCacheSecurityGroupIngress(input: AwsElasticacheAuthorizeCacheSecurityGroupIngressInput!): AwsElasticacheAuthorizeCacheSecurityGroupIngressOutput

  # elasticache.CopySnapshot
  CopySnapshot(input: AwsElasticacheCopySnapshotInput!): AwsElasticacheCopySnapshotOutput

  # elasticache.CreateCacheCluster
  CreateCacheCluster(input: AwsElasticacheCreateCacheClusterInput!): AwsElasticacheCreateCacheClusterOutput

  # elasticache.CreateCacheParameterGroup
  CreateCacheParameterGroup(input: AwsElasticacheCreateCacheParameterGroupInput!): AwsElasticacheCreateCacheParameterGroupOutput

  # elasticache.CreateCacheSecurityGroup
  CreateCacheSecurityGroup(input: AwsElasticacheCreateCacheSecurityGroupInput!): AwsElasticacheCreateCacheSecurityGroupOutput

  # elasticache.CreateCacheSubnetGroup
  CreateCacheSubnetGroup(input: AwsElasticacheCreateCacheSubnetGroupInput!): AwsElasticacheCreateCacheSubnetGroupOutput

  # elasticache.CreateReplicationGroup
  CreateReplicationGroup(input: AwsElasticacheCreateReplicationGroupInput!): AwsElasticacheCreateReplicationGroupOutput

  # elasticache.CreateSnapshot
  CreateSnapshot(input: AwsElasticacheCreateSnapshotInput!): AwsElasticacheCreateSnapshotOutput

  # elasticache.DeleteCacheCluster
  DeleteCacheCluster(input: AwsElasticacheDeleteCacheClusterInput!): AwsElasticacheDeleteCacheClusterOutput

  # elasticache.DeleteCacheParameterGroup
  DeleteCacheParameterGroup(input: AwsElasticacheDeleteCacheParameterGroupInput!): JSON

  # elasticache.DeleteCacheSecurityGroup
  DeleteCacheSecurityGroup(input: AwsElasticacheDeleteCacheSecurityGroupInput!): JSON

  # elasticache.DeleteCacheSubnetGroup
  DeleteCacheSubnetGroup(input: AwsElasticacheDeleteCacheSubnetGroupInput!): JSON

  # elasticache.DeleteReplicationGroup
  DeleteReplicationGroup(input: AwsElasticacheDeleteReplicationGroupInput!): AwsElasticacheDeleteReplicationGroupOutput

  # elasticache.DeleteSnapshot
  DeleteSnapshot(input: AwsElasticacheDeleteSnapshotInput!): AwsElasticacheDeleteSnapshotOutput

  # elasticache.DescribeCacheClusters
  DescribeCacheClusters(input: AwsElasticacheDescribeCacheClustersInput): AwsElasticacheDescribeCacheClustersOutput

  # elasticache.DescribeCacheEngineVersions
  DescribeCacheEngineVersions(input: AwsElasticacheDescribeCacheEngineVersionsInput): AwsElasticacheDescribeCacheEngineVersionsOutput

  # elasticache.DescribeCacheParameterGroups
  DescribeCacheParameterGroups(input: AwsElasticacheDescribeCacheParameterGroupsInput): AwsElasticacheDescribeCacheParameterGroupsOutput

  # elasticache.DescribeCacheParameters
  DescribeCacheParameters(input: AwsElasticacheDescribeCacheParametersInput!): AwsElasticacheDescribeCacheParametersOutput

  # elasticache.DescribeCacheSecurityGroups
  DescribeCacheSecurityGroups(input: AwsElasticacheDescribeCacheSecurityGroupsInput): AwsElasticacheDescribeCacheSecurityGroupsOutput

  # elasticache.DescribeCacheSubnetGroups
  DescribeCacheSubnetGroups(input: AwsElasticacheDescribeCacheSubnetGroupsInput): AwsElasticacheDescribeCacheSubnetGroupsOutput

  # elasticache.DescribeEngineDefaultParameters
  DescribeEngineDefaultParameters(input: AwsElasticacheDescribeEngineDefaultParametersInput!): AwsElasticacheDescribeEngineDefaultParametersOutput

  # elasticache.DescribeEvents
  DescribeEvents(input: AwsElasticacheDescribeEventsInput): AwsElasticacheDescribeEventsOutput

  # elasticache.DescribeReplicationGroups
  DescribeReplicationGroups(input: AwsElasticacheDescribeReplicationGroupsInput): AwsElasticacheDescribeReplicationGroupsOutput

  # elasticache.DescribeReservedCacheNodes
  DescribeReservedCacheNodes(input: AwsElasticacheDescribeReservedCacheNodesInput): AwsElasticacheDescribeReservedCacheNodesOutput

  # elasticache.DescribeReservedCacheNodesOfferings
  DescribeReservedCacheNodesOfferings(input: AwsElasticacheDescribeReservedCacheNodesOfferingsInput): AwsElasticacheDescribeReservedCacheNodesOfferingsOutput

  # elasticache.DescribeSnapshots
  DescribeSnapshots(input: AwsElasticacheDescribeSnapshotsInput): AwsElasticacheDescribeSnapshotsOutput

  # elasticache.ListAllowedNodeTypeModifications
  ListAllowedNodeTypeModifications(input: AwsElasticacheListAllowedNodeTypeModificationsInput): AwsElasticacheListAllowedNodeTypeModificationsOutput

  # elasticache.ListTagsForResource
  ListTagsForResource(input: AwsElasticacheListTagsForResourceInput!): JSON

  # elasticache.ModifyCacheCluster
  ModifyCacheCluster(input: AwsElasticacheModifyCacheClusterInput!): AwsElasticacheModifyCacheClusterOutput

  # elasticache.ModifyCacheParameterGroup
  ModifyCacheParameterGroup(input: AwsElasticacheModifyCacheParameterGroupInput!): JSON

  # elasticache.ModifyCacheSubnetGroup
  ModifyCacheSubnetGroup(input: AwsElasticacheModifyCacheSubnetGroupInput!): AwsElasticacheModifyCacheSubnetGroupOutput

  # elasticache.ModifyReplicationGroup
  ModifyReplicationGroup(input: AwsElasticacheModifyReplicationGroupInput!): AwsElasticacheModifyReplicationGroupOutput

  # elasticache.ModifyReplicationGroupShardConfiguration
  ModifyReplicationGroupShardConfiguration(input: AwsElasticacheModifyReplicationGroupShardConfigurationInput!): AwsElasticacheModifyReplicationGroupShardConfigurationOutput

  # elasticache.PurchaseReservedCacheNodesOffering
  PurchaseReservedCacheNodesOffering(input: AwsElasticachePurchaseReservedCacheNodesOfferingInput!): AwsElasticachePurchaseReservedCacheNodesOfferingOutput

  # elasticache.RebootCacheCluster
  RebootCacheCluster(input: AwsElasticacheRebootCacheClusterInput!): AwsElasticacheRebootCacheClusterOutput

  # elasticache.RemoveTagsFromResource
  RemoveTagsFromResource(input: AwsElasticacheRemoveTagsFromResourceInput!): JSON

  # elasticache.ResetCacheParameterGroup
  ResetCacheParameterGroup(input: AwsElasticacheResetCacheParameterGroupInput!): JSON

  # elasticache.RevokeCacheSecurityGroupIngress
  RevokeCacheSecurityGroupIngress(input: AwsElasticacheRevokeCacheSecurityGroupIngressInput!): AwsElasticacheRevokeCacheSecurityGroupIngressOutput

  # elasticache.TestFailover
  TestFailover(input: AwsElasticacheTestFailoverInput!): AwsElasticacheTestFailoverOutput
}

input AwsElasticacheAddTagsToResourceInput {
  ResourceName: String!
  Tags: [AwsElasticacheS3Input]!
}

input AwsElasticacheAuthorizeCacheSecurityGroupIngressInput {
  CacheSecurityGroupName: String!
  EC2SecurityGroupName: String!
  EC2SecurityGroupOwnerId: String!
}

type AwsElasticacheAuthorizeCacheSecurityGroupIngressOutput {
  CacheSecurityGroup: AwsElasticacheS8
}

input AwsElasticacheCopySnapshotInput {
  SourceSnapshotName: String!
  TargetSnapshotName: String!
  TargetBucket: String
}

type AwsElasticacheCopySnapshotOutput {
  Snapshot: AwsElasticacheSd
}

input AwsElasticacheCreateCacheClusterInput {
  CacheClusterId: String!
  ReplicationGroupId: String
  AZMode: String
  PreferredAvailabilityZone: String
  PreferredAvailabilityZones: [String]
  NumCacheNodes: Int
  CacheNodeType: String
  Engine: String
  EngineVersion: String
  CacheParameterGroupName: String
  CacheSubnetGroupName: String
  CacheSecurityGroupNames: [String]
  SecurityGroupIds: [String]
  Tags: [AwsElasticacheS3Input]
  SnapshotArns: [String]
  SnapshotName: String
  PreferredMaintenanceWindow: String
  Port: Int
  NotificationTopicArn: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  AuthToken: String
}

type AwsElasticacheCreateCacheClusterOutput {
  CacheCluster: AwsElasticacheSu
}

input AwsElasticacheCreateCacheParameterGroupInput {
  CacheParameterGroupName: String!
  CacheParameterGroupFamily: String!
  Description: String!
}

type AwsElasticacheCreateCacheParameterGroupOutput {
  CacheParameterGroup: AwsElasticacheS19
}

input AwsElasticacheCreateCacheSecurityGroupInput {
  CacheSecurityGroupName: String!
  Description: String!
}

type AwsElasticacheCreateCacheSecurityGroupOutput {
  CacheSecurityGroup: AwsElasticacheS8
}

input AwsElasticacheCreateCacheSubnetGroupInput {
  CacheSubnetGroupName: String!
  CacheSubnetGroupDescription: String!
  SubnetIds: [String]!
}

type AwsElasticacheCreateCacheSubnetGroupOutput {
  CacheSubnetGroup: AwsElasticacheS1f
}

input AwsElasticacheCreateReplicationGroupInput {
  ReplicationGroupId: String!
  ReplicationGroupDescription: String!
  PrimaryClusterId: String
  AutomaticFailoverEnabled: Boolean
  NumCacheClusters: Int
  PreferredCacheClusterAZs: [String]
  NumNodeGroups: Int
  ReplicasPerNodeGroup: Int
  NodeGroupConfiguration: [AwsElasticacheSkInput]
  CacheNodeType: String
  Engine: String
  EngineVersion: String
  CacheParameterGroupName: String
  CacheSubnetGroupName: String
  CacheSecurityGroupNames: [String]
  SecurityGroupIds: [String]
  Tags: [AwsElasticacheS3Input]
  SnapshotArns: [String]
  SnapshotName: String
  PreferredMaintenanceWindow: String
  Port: Int
  NotificationTopicArn: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  AuthToken: String
  TransitEncryptionEnabled: Boolean
  AtRestEncryptionEnabled: Boolean
}

type AwsElasticacheCreateReplicationGroupOutput {
  ReplicationGroup: AwsElasticacheS1m
}

input AwsElasticacheCreateSnapshotInput {
  ReplicationGroupId: String
  CacheClusterId: String
  SnapshotName: String!
}

type AwsElasticacheCreateSnapshotOutput {
  Snapshot: AwsElasticacheSd
}

input AwsElasticacheDeleteCacheClusterInput {
  CacheClusterId: String!
  FinalSnapshotIdentifier: String
}

type AwsElasticacheDeleteCacheClusterOutput {
  CacheCluster: AwsElasticacheSu
}

input AwsElasticacheDeleteCacheParameterGroupInput {
  CacheParameterGroupName: String!
}

input AwsElasticacheDeleteCacheSecurityGroupInput {
  CacheSecurityGroupName: String!
}

input AwsElasticacheDeleteCacheSubnetGroupInput {
  CacheSubnetGroupName: String!
}

input AwsElasticacheDeleteReplicationGroupInput {
  ReplicationGroupId: String!
  RetainPrimaryCluster: Boolean
  FinalSnapshotIdentifier: String
}

type AwsElasticacheDeleteReplicationGroupOutput {
  ReplicationGroup: AwsElasticacheS1m
}

input AwsElasticacheDeleteSnapshotInput {
  SnapshotName: String!
}

type AwsElasticacheDeleteSnapshotOutput {
  Snapshot: AwsElasticacheSd
}

input AwsElasticacheDescribeCacheClustersInput {
  CacheClusterId: String
  MaxRecords: Int
  Marker: String
  ShowCacheNodeInfo: Boolean
  ShowCacheClustersNotInReplicationGroups: Boolean
}

type AwsElasticacheDescribeCacheClustersOutput {
  Marker: String
  CacheClusters: [AwsElasticacheSu]
}

input AwsElasticacheDescribeCacheEngineVersionsInput {
  Engine: String
  EngineVersion: String
  CacheParameterGroupFamily: String
  MaxRecords: Int
  Marker: String
  DefaultOnly: Boolean
}

type AwsElasticacheDescribeCacheEngineVersionsOutput {
  Marker: String
  CacheEngineVersions: [AwsElasticacheDescribeCacheEngineVersionsOutputCacheEngineVersions]
}

type AwsElasticacheDescribeCacheEngineVersionsOutputCacheEngineVersions {
  Engine: String
  EngineVersion: String
  CacheParameterGroupFamily: String
  CacheEngineDescription: String
  CacheEngineVersionDescription: String
}

input AwsElasticacheDescribeCacheParameterGroupsInput {
  CacheParameterGroupName: String
  MaxRecords: Int
  Marker: String
}

type AwsElasticacheDescribeCacheParameterGroupsOutput {
  Marker: String
  CacheParameterGroups: [AwsElasticacheS19]
}

input AwsElasticacheDescribeCacheParametersInput {
  CacheParameterGroupName: String!
  Source: String
  MaxRecords: Int
  Marker: String
}

type AwsElasticacheDescribeCacheParametersOutput {
  Marker: String
  Parameters: [AwsElasticacheS2k]
  CacheNodeTypeSpecificParameters: [AwsElasticacheS2n]
}

input AwsElasticacheDescribeCacheSecurityGroupsInput {
  CacheSecurityGroupName: String
  MaxRecords: Int
  Marker: String
}

type AwsElasticacheDescribeCacheSecurityGroupsOutput {
  Marker: String
  CacheSecurityGroups: [AwsElasticacheS8]
}

input AwsElasticacheDescribeCacheSubnetGroupsInput {
  CacheSubnetGroupName: String
  MaxRecords: Int
  Marker: String
}

type AwsElasticacheDescribeCacheSubnetGroupsOutput {
  Marker: String
  CacheSubnetGroups: [AwsElasticacheS1f]
}

input AwsElasticacheDescribeEngineDefaultParametersInput {
  CacheParameterGroupFamily: String!
  MaxRecords: Int
  Marker: String
}

type AwsElasticacheDescribeEngineDefaultParametersOutput {
  EngineDefaults: AwsElasticacheDescribeEngineDefaultParametersOutputEngineDefaults
}

type AwsElasticacheDescribeEngineDefaultParametersOutputEngineDefaults {
  CacheParameterGroupFamily: String
  Marker: String
  Parameters: [AwsElasticacheS2k]
  CacheNodeTypeSpecificParameters: [AwsElasticacheS2n]
}

input AwsElasticacheDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  MaxRecords: Int
  Marker: String
}

type AwsElasticacheDescribeEventsOutput {
  Marker: String
  Events: [AwsElasticacheDescribeEventsOutputEvents]
}

type AwsElasticacheDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  Date: Date
}

input AwsElasticacheDescribeReplicationGroupsInput {
  ReplicationGroupId: String
  MaxRecords: Int
  Marker: String
}

type AwsElasticacheDescribeReplicationGroupsOutput {
  Marker: String
  ReplicationGroups: [AwsElasticacheS1m]
}

input AwsElasticacheDescribeReservedCacheNodesInput {
  ReservedCacheNodeId: String
  ReservedCacheNodesOfferingId: String
  CacheNodeType: String
  Duration: String
  ProductDescription: String
  OfferingType: String
  MaxRecords: Int
  Marker: String
}

input AwsElasticacheDescribeReservedCacheNodesOfferingsInput {
  ReservedCacheNodesOfferingId: String
  CacheNodeType: String
  Duration: String
  ProductDescription: String
  OfferingType: String
  MaxRecords: Int
  Marker: String
}

type AwsElasticacheDescribeReservedCacheNodesOfferingsOutput {
  Marker: String
  ReservedCacheNodesOfferings: [AwsElasticacheDescribeReservedCacheNodesOfferingsOutputReservedCacheNodesOfferings]
}

type AwsElasticacheDescribeReservedCacheNodesOfferingsOutputReservedCacheNodesOfferings {
  ReservedCacheNodesOfferingId: String
  CacheNodeType: String
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  ProductDescription: String
  OfferingType: String
  RecurringCharges: [AwsElasticacheS3c]
}

type AwsElasticacheDescribeReservedCacheNodesOutput {
  Marker: String
  ReservedCacheNodes: [AwsElasticacheS3b]
}

input AwsElasticacheDescribeSnapshotsInput {
  ReplicationGroupId: String
  CacheClusterId: String
  SnapshotName: String
  SnapshotSource: String
  Marker: String
  MaxRecords: Int
  ShowNodeGroupConfig: Boolean
}

type AwsElasticacheDescribeSnapshotsOutput {
  Marker: String
  Snapshots: [AwsElasticacheSd]
}

input AwsElasticacheListAllowedNodeTypeModificationsInput {
  CacheClusterId: String
  ReplicationGroupId: String
}

type AwsElasticacheListAllowedNodeTypeModificationsOutput {
  ScaleUpModifications: [String]
}

input AwsElasticacheListTagsForResourceInput {
  ResourceName: String!
}

input AwsElasticacheModifyCacheClusterInput {
  CacheClusterId: String!
  NumCacheNodes: Int
  CacheNodeIdsToRemove: [String]
  AZMode: String
  NewAvailabilityZones: [String]
  CacheSecurityGroupNames: [String]
  SecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  NotificationTopicArn: String
  CacheParameterGroupName: String
  NotificationTopicStatus: String
  ApplyImmediately: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  CacheNodeType: String
}

type AwsElasticacheModifyCacheClusterOutput {
  CacheCluster: AwsElasticacheSu
}

input AwsElasticacheModifyCacheParameterGroupInput {
  CacheParameterGroupName: String!
  ParameterNameValues: [AwsElasticacheS3sInput]!
}

input AwsElasticacheModifyCacheSubnetGroupInput {
  CacheSubnetGroupName: String!
  CacheSubnetGroupDescription: String
  SubnetIds: [String]
}

type AwsElasticacheModifyCacheSubnetGroupOutput {
  CacheSubnetGroup: AwsElasticacheS1f
}

input AwsElasticacheModifyReplicationGroupInput {
  ReplicationGroupId: String!
  ReplicationGroupDescription: String
  PrimaryClusterId: String
  SnapshottingClusterId: String
  AutomaticFailoverEnabled: Boolean
  CacheSecurityGroupNames: [String]
  SecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  NotificationTopicArn: String
  CacheParameterGroupName: String
  NotificationTopicStatus: String
  ApplyImmediately: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  CacheNodeType: String
  NodeGroupId: String
}

type AwsElasticacheModifyReplicationGroupOutput {
  ReplicationGroup: AwsElasticacheS1m
}

input AwsElasticacheModifyReplicationGroupShardConfigurationInput {
  ReplicationGroupId: String!
  NodeGroupCount: Int!
  ApplyImmediately: Boolean!
  ReshardingConfiguration: [AwsElasticacheModifyReplicationGroupShardConfigurationReshardingConfigurationInput]
  NodeGroupsToRemove: [String]
}

type AwsElasticacheModifyReplicationGroupShardConfigurationOutput {
  ReplicationGroup: AwsElasticacheS1m
}

input AwsElasticacheModifyReplicationGroupShardConfigurationReshardingConfigurationInput {
  PreferredAvailabilityZones: [String]
}

input AwsElasticachePurchaseReservedCacheNodesOfferingInput {
  ReservedCacheNodesOfferingId: String!
  ReservedCacheNodeId: String
  CacheNodeCount: Int
}

type AwsElasticachePurchaseReservedCacheNodesOfferingOutput {
  ReservedCacheNode: AwsElasticacheS3b
}

input AwsElasticacheRebootCacheClusterInput {
  CacheClusterId: String!
  CacheNodeIdsToReboot: [String]!
}

type AwsElasticacheRebootCacheClusterOutput {
  CacheCluster: AwsElasticacheSu
}

input AwsElasticacheRemoveTagsFromResourceInput {
  ResourceName: String!
  TagKeys: [String]!
}

input AwsElasticacheResetCacheParameterGroupInput {
  CacheParameterGroupName: String!
  ResetAllParameters: Boolean
  ParameterNameValues: [AwsElasticacheS3sInput]
}

input AwsElasticacheRevokeCacheSecurityGroupIngressInput {
  CacheSecurityGroupName: String!
  EC2SecurityGroupName: String!
  EC2SecurityGroupOwnerId: String!
}

type AwsElasticacheRevokeCacheSecurityGroupIngressOutput {
  CacheSecurityGroup: AwsElasticacheS8
}

type AwsElasticacheS19 {
  CacheParameterGroupName: String
  CacheParameterGroupFamily: String
  Description: String
}

type AwsElasticacheS1f {
  CacheSubnetGroupName: String
  CacheSubnetGroupDescription: String
  VpcId: String
  Subnets: [AwsElasticacheS1fSubnets]
}

type AwsElasticacheS1fSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsElasticacheS1fSubnetsSubnetAvailabilityZone
}

type AwsElasticacheS1fSubnetsSubnetAvailabilityZone {
  Name: String
}

type AwsElasticacheS1m {
  ReplicationGroupId: String
  Description: String
  Status: String
  PendingModifiedValues: AwsElasticacheS1mPendingModifiedValues
  MemberClusters: [String]
  NodeGroups: [AwsElasticacheS1mNodeGroups]
  SnapshottingClusterId: String
  AutomaticFailover: String
  ConfigurationEndpoint: AwsElasticacheSv
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  ClusterEnabled: Boolean
  CacheNodeType: String
  AuthTokenEnabled: Boolean
  TransitEncryptionEnabled: Boolean
  AtRestEncryptionEnabled: Boolean
}

type AwsElasticacheS1mNodeGroups {
  NodeGroupId: String
  Status: String
  PrimaryEndpoint: AwsElasticacheSv
  Slots: String
  NodeGroupMembers: [AwsElasticacheS1mNodeGroupsNodeGroupMembers]
}

type AwsElasticacheS1mNodeGroupsNodeGroupMembers {
  CacheClusterId: String
  CacheNodeId: String
  ReadEndpoint: AwsElasticacheSv
  PreferredAvailabilityZone: String
  CurrentRole: String
}

type AwsElasticacheS1mPendingModifiedValues {
  PrimaryClusterId: String
  AutomaticFailoverStatus: String
  Resharding: AwsElasticacheS1mPendingModifiedValuesResharding
}

type AwsElasticacheS1mPendingModifiedValuesResharding {
  SlotMigration: AwsElasticacheS1mPendingModifiedValuesReshardingSlotMigration
}

type AwsElasticacheS1mPendingModifiedValuesReshardingSlotMigration {
  ProgressPercentage: JSON
}

type AwsElasticacheS2k {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ChangeType: String
}

type AwsElasticacheS2n {
  ParameterName: String
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  CacheNodeTypeSpecificValues: [AwsElasticacheS2nCacheNodeTypeSpecificValues]
  ChangeType: String
}

type AwsElasticacheS2nCacheNodeTypeSpecificValues {
  CacheNodeType: String
  Value: String
}

type AwsElasticacheS3b {
  ReservedCacheNodeId: String
  ReservedCacheNodesOfferingId: String
  CacheNodeType: String
  StartTime: Date
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CacheNodeCount: Int
  ProductDescription: String
  OfferingType: String
  State: String
  RecurringCharges: [AwsElasticacheS3c]
}

type AwsElasticacheS3c {
  RecurringChargeAmount: JSON
  RecurringChargeFrequency: String
}

input AwsElasticacheS3Input {
  Key: String
  Value: String
}

input AwsElasticacheS3sInput {
  ParameterName: String
  ParameterValue: String
}

type AwsElasticacheS8 {
  OwnerId: String
  CacheSecurityGroupName: String
  Description: String
  EC2SecurityGroups: [AwsElasticacheS8EC2SecurityGroups]
}

type AwsElasticacheS8EC2SecurityGroups {
  Status: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
}

type AwsElasticacheSd {
  SnapshotName: String
  ReplicationGroupId: String
  ReplicationGroupDescription: String
  CacheClusterId: String
  SnapshotStatus: String
  SnapshotSource: String
  CacheNodeType: String
  Engine: String
  EngineVersion: String
  NumCacheNodes: Int
  PreferredAvailabilityZone: String
  CacheClusterCreateTime: Date
  PreferredMaintenanceWindow: String
  TopicArn: String
  Port: Int
  CacheParameterGroupName: String
  CacheSubnetGroupName: String
  VpcId: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  NumNodeGroups: Int
  AutomaticFailover: String
  NodeSnapshots: [AwsElasticacheSdNodeSnapshots]
}

type AwsElasticacheSdNodeSnapshots {
  CacheClusterId: String
  NodeGroupId: String
  CacheNodeId: String
  NodeGroupConfiguration: AwsElasticacheSk
  CacheSize: String
  CacheNodeCreateTime: Date
  SnapshotCreateTime: Date
}

type AwsElasticacheSk {
  Slots: String
  ReplicaCount: Int
  PrimaryAvailabilityZone: String
  ReplicaAvailabilityZones: [String]
}

input AwsElasticacheSkInput {
  Slots: String
  ReplicaCount: Int
  PrimaryAvailabilityZone: String
  ReplicaAvailabilityZones: [String]
}

type AwsElasticacheSu {
  CacheClusterId: String
  ConfigurationEndpoint: AwsElasticacheSv
  ClientDownloadLandingPage: String
  CacheNodeType: String
  Engine: String
  EngineVersion: String
  CacheClusterStatus: String
  NumCacheNodes: Int
  PreferredAvailabilityZone: String
  CacheClusterCreateTime: Date
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsElasticacheSuPendingModifiedValues
  NotificationConfiguration: AwsElasticacheSuNotificationConfiguration
  CacheSecurityGroups: [AwsElasticacheSuCacheSecurityGroups]
  CacheParameterGroup: AwsElasticacheSuCacheParameterGroup
  CacheSubnetGroupName: String
  CacheNodes: [AwsElasticacheSuCacheNodes]
  AutoMinorVersionUpgrade: Boolean
  SecurityGroups: [AwsElasticacheSuSecurityGroups]
  ReplicationGroupId: String
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  AuthTokenEnabled: Boolean
  TransitEncryptionEnabled: Boolean
  AtRestEncryptionEnabled: Boolean
}

type AwsElasticacheSuCacheNodes {
  CacheNodeId: String
  CacheNodeStatus: String
  CacheNodeCreateTime: Date
  Endpoint: AwsElasticacheSv
  ParameterGroupStatus: String
  SourceCacheNodeId: String
  CustomerAvailabilityZone: String
}

type AwsElasticacheSuCacheParameterGroup {
  CacheParameterGroupName: String
  ParameterApplyStatus: String
  CacheNodeIdsToReboot: [String]
}

type AwsElasticacheSuCacheSecurityGroups {
  CacheSecurityGroupName: String
  Status: String
}

type AwsElasticacheSuNotificationConfiguration {
  TopicArn: String
  TopicStatus: String
}

type AwsElasticacheSuPendingModifiedValues {
  NumCacheNodes: Int
  CacheNodeIdsToRemove: [String]
  EngineVersion: String
  CacheNodeType: String
}

type AwsElasticacheSuSecurityGroups {
  SecurityGroupId: String
  Status: String
}

type AwsElasticacheSv {
  Address: String
  Port: Int
}

input AwsElasticacheTestFailoverInput {
  ReplicationGroupId: String!
  NodeGroupId: String!
}

type AwsElasticacheTestFailoverOutput {
  ReplicationGroup: AwsElasticacheS1m
}

# AWS Elastic Beanstalk (2010-12-01)
type AwsElasticbeanstalk {
  # elasticbeanstalk.AbortEnvironmentUpdate
  AbortEnvironmentUpdate(input: AwsElasticbeanstalkAbortEnvironmentUpdateInput): JSON

  # elasticbeanstalk.ApplyEnvironmentManagedAction
  ApplyEnvironmentManagedAction(input: AwsElasticbeanstalkApplyEnvironmentManagedActionInput!): AwsElasticbeanstalkApplyEnvironmentManagedActionOutput

  # elasticbeanstalk.CheckDNSAvailability
  CheckDNSAvailability(input: AwsElasticbeanstalkCheckDNSAvailabilityInput!): AwsElasticbeanstalkCheckDNSAvailabilityOutput

  # elasticbeanstalk.ComposeEnvironments
  ComposeEnvironments(input: AwsElasticbeanstalkComposeEnvironmentsInput): JSON

  # elasticbeanstalk.CreateApplication
  CreateApplication(input: AwsElasticbeanstalkCreateApplicationInput!): JSON

  # elasticbeanstalk.CreateApplicationVersion
  CreateApplicationVersion(input: AwsElasticbeanstalkCreateApplicationVersionInput!): JSON

  # elasticbeanstalk.CreateConfigurationTemplate
  CreateConfigurationTemplate(input: AwsElasticbeanstalkCreateConfigurationTemplateInput!): JSON

  # elasticbeanstalk.CreateEnvironment
  CreateEnvironment(input: AwsElasticbeanstalkCreateEnvironmentInput!): JSON

  # elasticbeanstalk.CreatePlatformVersion
  CreatePlatformVersion(input: AwsElasticbeanstalkCreatePlatformVersionInput!): AwsElasticbeanstalkCreatePlatformVersionOutput

  # elasticbeanstalk.CreateStorageLocation
  CreateStorageLocation: AwsElasticbeanstalkCreateStorageLocationOutput

  # elasticbeanstalk.DeleteApplication
  DeleteApplication(input: AwsElasticbeanstalkDeleteApplicationInput!): JSON

  # elasticbeanstalk.DeleteApplicationVersion
  DeleteApplicationVersion(input: AwsElasticbeanstalkDeleteApplicationVersionInput!): JSON

  # elasticbeanstalk.DeleteConfigurationTemplate
  DeleteConfigurationTemplate(input: AwsElasticbeanstalkDeleteConfigurationTemplateInput!): JSON

  # elasticbeanstalk.DeleteEnvironmentConfiguration
  DeleteEnvironmentConfiguration(input: AwsElasticbeanstalkDeleteEnvironmentConfigurationInput!): JSON

  # elasticbeanstalk.DeletePlatformVersion
  DeletePlatformVersion(input: AwsElasticbeanstalkDeletePlatformVersionInput): AwsElasticbeanstalkDeletePlatformVersionOutput

  # elasticbeanstalk.DescribeApplicationVersions
  DescribeApplicationVersions(input: AwsElasticbeanstalkDescribeApplicationVersionsInput): AwsElasticbeanstalkDescribeApplicationVersionsOutput

  # elasticbeanstalk.DescribeApplications
  DescribeApplications(input: AwsElasticbeanstalkDescribeApplicationsInput): AwsElasticbeanstalkDescribeApplicationsOutput

  # elasticbeanstalk.DescribeConfigurationOptions
  DescribeConfigurationOptions(input: AwsElasticbeanstalkDescribeConfigurationOptionsInput): AwsElasticbeanstalkDescribeConfigurationOptionsOutput

  # elasticbeanstalk.DescribeConfigurationSettings
  DescribeConfigurationSettings(input: AwsElasticbeanstalkDescribeConfigurationSettingsInput!): AwsElasticbeanstalkDescribeConfigurationSettingsOutput

  # elasticbeanstalk.DescribeEnvironmentHealth
  DescribeEnvironmentHealth(input: AwsElasticbeanstalkDescribeEnvironmentHealthInput): AwsElasticbeanstalkDescribeEnvironmentHealthOutput

  # elasticbeanstalk.DescribeEnvironmentManagedActionHistory
  DescribeEnvironmentManagedActionHistory(input: AwsElasticbeanstalkDescribeEnvironmentManagedActionHistoryInput): AwsElasticbeanstalkDescribeEnvironmentManagedActionHistoryOutput

  # elasticbeanstalk.DescribeEnvironmentManagedActions
  DescribeEnvironmentManagedActions(input: AwsElasticbeanstalkDescribeEnvironmentManagedActionsInput): AwsElasticbeanstalkDescribeEnvironmentManagedActionsOutput

  # elasticbeanstalk.DescribeEnvironmentResources
  DescribeEnvironmentResources(input: AwsElasticbeanstalkDescribeEnvironmentResourcesInput): AwsElasticbeanstalkDescribeEnvironmentResourcesOutput

  # elasticbeanstalk.DescribeEnvironments
  DescribeEnvironments(input: AwsElasticbeanstalkDescribeEnvironmentsInput): JSON

  # elasticbeanstalk.DescribeEvents
  DescribeEvents(input: AwsElasticbeanstalkDescribeEventsInput): AwsElasticbeanstalkDescribeEventsOutput

  # elasticbeanstalk.DescribeInstancesHealth
  DescribeInstancesHealth(input: AwsElasticbeanstalkDescribeInstancesHealthInput): AwsElasticbeanstalkDescribeInstancesHealthOutput

  # elasticbeanstalk.DescribePlatformVersion
  DescribePlatformVersion(input: AwsElasticbeanstalkDescribePlatformVersionInput): AwsElasticbeanstalkDescribePlatformVersionOutput

  # elasticbeanstalk.ListAvailableSolutionStacks
  ListAvailableSolutionStacks: AwsElasticbeanstalkListAvailableSolutionStacksOutput

  # elasticbeanstalk.ListPlatformVersions
  ListPlatformVersions(input: AwsElasticbeanstalkListPlatformVersionsInput): AwsElasticbeanstalkListPlatformVersionsOutput

  # elasticbeanstalk.ListTagsForResource
  ListTagsForResource(input: AwsElasticbeanstalkListTagsForResourceInput!): AwsElasticbeanstalkListTagsForResourceOutput

  # elasticbeanstalk.RebuildEnvironment
  RebuildEnvironment(input: AwsElasticbeanstalkRebuildEnvironmentInput): JSON

  # elasticbeanstalk.RequestEnvironmentInfo
  RequestEnvironmentInfo(input: AwsElasticbeanstalkRequestEnvironmentInfoInput!): JSON

  # elasticbeanstalk.RestartAppServer
  RestartAppServer(input: AwsElasticbeanstalkRestartAppServerInput): JSON

  # elasticbeanstalk.RetrieveEnvironmentInfo
  RetrieveEnvironmentInfo(input: AwsElasticbeanstalkRetrieveEnvironmentInfoInput!): AwsElasticbeanstalkRetrieveEnvironmentInfoOutput

  # elasticbeanstalk.SwapEnvironmentCNAMEs
  SwapEnvironmentCNAMEs(input: AwsElasticbeanstalkSwapEnvironmentCNAMEsInput): JSON

  # elasticbeanstalk.TerminateEnvironment
  TerminateEnvironment(input: AwsElasticbeanstalkTerminateEnvironmentInput): JSON

  # elasticbeanstalk.UpdateApplication
  UpdateApplication(input: AwsElasticbeanstalkUpdateApplicationInput!): JSON

  # elasticbeanstalk.UpdateApplicationResourceLifecycle
  UpdateApplicationResourceLifecycle(input: AwsElasticbeanstalkUpdateApplicationResourceLifecycleInput!): AwsElasticbeanstalkUpdateApplicationResourceLifecycleOutput

  # elasticbeanstalk.UpdateApplicationVersion
  UpdateApplicationVersion(input: AwsElasticbeanstalkUpdateApplicationVersionInput!): JSON

  # elasticbeanstalk.UpdateConfigurationTemplate
  UpdateConfigurationTemplate(input: AwsElasticbeanstalkUpdateConfigurationTemplateInput!): JSON

  # elasticbeanstalk.UpdateEnvironment
  UpdateEnvironment(input: AwsElasticbeanstalkUpdateEnvironmentInput): JSON

  # elasticbeanstalk.UpdateTagsForResource
  UpdateTagsForResource(input: AwsElasticbeanstalkUpdateTagsForResourceInput!): JSON

  # elasticbeanstalk.ValidateConfigurationSettings
  ValidateConfigurationSettings(input: AwsElasticbeanstalkValidateConfigurationSettingsInput!): AwsElasticbeanstalkValidateConfigurationSettingsOutput
}

input AwsElasticbeanstalkAbortEnvironmentUpdateInput {
  EnvironmentId: String
  EnvironmentName: String
}

input AwsElasticbeanstalkApplyEnvironmentManagedActionInput {
  EnvironmentName: String
  EnvironmentId: String
  ActionId: String!
}

type AwsElasticbeanstalkApplyEnvironmentManagedActionOutput {
  ActionId: String
  ActionDescription: String
  ActionType: String
  Status: String
}

input AwsElasticbeanstalkCheckDNSAvailabilityInput {
  CNAMEPrefix: String!
}

type AwsElasticbeanstalkCheckDNSAvailabilityOutput {
  Available: Boolean
  FullyQualifiedCNAME: String
}

input AwsElasticbeanstalkComposeEnvironmentsInput {
  ApplicationName: String
  GroupName: String
  VersionLabels: [String]
}

input AwsElasticbeanstalkCreateApplicationInput {
  ApplicationName: String!
  Description: String
  ResourceLifecycleConfig: AwsElasticbeanstalkS17Input
}

input AwsElasticbeanstalkCreateApplicationVersionBuildConfigurationInput {
  ArtifactName: String
  CodeBuildServiceRole: String!
  ComputeType: String
  Image: String!
  TimeoutInMinutes: Int
}

input AwsElasticbeanstalkCreateApplicationVersionInput {
  ApplicationName: String!
  VersionLabel: String!
  Description: String
  SourceBuildInformation: AwsElasticbeanstalkS1iInput
  SourceBundle: AwsElasticbeanstalkS1mInput
  BuildConfiguration: AwsElasticbeanstalkCreateApplicationVersionBuildConfigurationInput
  AutoCreateApplication: Boolean
  Process: Boolean
}

input AwsElasticbeanstalkCreateConfigurationTemplateInput {
  ApplicationName: String!
  TemplateName: String!
  SolutionStackName: String
  PlatformArn: String
  SourceConfiguration: AwsElasticbeanstalkCreateConfigurationTemplateSourceConfigurationInput
  EnvironmentId: String
  Description: String
  OptionSettings: [AwsElasticbeanstalkS1zInput]
}

input AwsElasticbeanstalkCreateConfigurationTemplateSourceConfigurationInput {
  ApplicationName: String
  TemplateName: String
}

input AwsElasticbeanstalkCreateEnvironmentInput {
  ApplicationName: String!
  EnvironmentName: String
  GroupName: String
  Description: String
  CNAMEPrefix: String
  Tier: AwsElasticbeanstalkS11Input
  Tags: [AwsElasticbeanstalkS29Input]
  VersionLabel: String
  TemplateName: String
  SolutionStackName: String
  PlatformArn: String
  OptionSettings: [AwsElasticbeanstalkS1zInput]
  OptionsToRemove: [AwsElasticbeanstalkS2cInput]
}

input AwsElasticbeanstalkCreatePlatformVersionInput {
  PlatformName: String!
  PlatformVersion: String!
  PlatformDefinitionBundle: AwsElasticbeanstalkS1mInput!
  EnvironmentName: String
  OptionSettings: [AwsElasticbeanstalkS1zInput]
}

type AwsElasticbeanstalkCreatePlatformVersionOutput {
  PlatformSummary: AwsElasticbeanstalkS2i
  Builder: AwsElasticbeanstalkCreatePlatformVersionOutputBuilder
}

type AwsElasticbeanstalkCreatePlatformVersionOutputBuilder {
  ARN: String
}

type AwsElasticbeanstalkCreateStorageLocationOutput {
  S3Bucket: String
}

input AwsElasticbeanstalkDeleteApplicationInput {
  ApplicationName: String!
  TerminateEnvByForce: Boolean
}

input AwsElasticbeanstalkDeleteApplicationVersionInput {
  ApplicationName: String!
  VersionLabel: String!
  DeleteSourceBundle: Boolean
}

input AwsElasticbeanstalkDeleteConfigurationTemplateInput {
  ApplicationName: String!
  TemplateName: String!
}

input AwsElasticbeanstalkDeleteEnvironmentConfigurationInput {
  ApplicationName: String!
  EnvironmentName: String!
}

input AwsElasticbeanstalkDeletePlatformVersionInput {
  PlatformArn: String
}

type AwsElasticbeanstalkDeletePlatformVersionOutput {
  PlatformSummary: AwsElasticbeanstalkS2i
}

input AwsElasticbeanstalkDescribeApplicationsInput {
  ApplicationNames: [String]
}

type AwsElasticbeanstalkDescribeApplicationsOutput {
  Applications: [AwsElasticbeanstalkS1e]
}

input AwsElasticbeanstalkDescribeApplicationVersionsInput {
  ApplicationName: String
  VersionLabels: [String]
  MaxRecords: Int
  NextToken: String
}

type AwsElasticbeanstalkDescribeApplicationVersionsOutput {
  ApplicationVersions: [AwsElasticbeanstalkS1v]
  NextToken: String
}

input AwsElasticbeanstalkDescribeConfigurationOptionsInput {
  ApplicationName: String
  TemplateName: String
  EnvironmentName: String
  SolutionStackName: String
  PlatformArn: String
  Options: [AwsElasticbeanstalkS2cInput]
}

type AwsElasticbeanstalkDescribeConfigurationOptionsOutput {
  SolutionStackName: String
  PlatformArn: String
  Options: [AwsElasticbeanstalkDescribeConfigurationOptionsOutputOptions]
}

type AwsElasticbeanstalkDescribeConfigurationOptionsOutputOptions {
  Namespace: String
  Name: String
  DefaultValue: String
  ChangeSeverity: String
  UserDefined: Boolean
  ValueType: String
  ValueOptions: [String]
  MinValue: Int
  MaxValue: Int
  MaxLength: Int
  Regex: AwsElasticbeanstalkDescribeConfigurationOptionsOutputOptionsRegex
}

type AwsElasticbeanstalkDescribeConfigurationOptionsOutputOptionsRegex {
  Pattern: String
  Label: String
}

input AwsElasticbeanstalkDescribeConfigurationSettingsInput {
  ApplicationName: String!
  TemplateName: String
  EnvironmentName: String
}

type AwsElasticbeanstalkDescribeConfigurationSettingsOutput {
  ConfigurationSettings: [AwsElasticbeanstalkS25]
}

input AwsElasticbeanstalkDescribeEnvironmentHealthInput {
  EnvironmentName: String
  EnvironmentId: String
  AttributeNames: [String]
}

type AwsElasticbeanstalkDescribeEnvironmentHealthOutput {
  EnvironmentName: String
  HealthStatus: String
  Status: String
  Color: String
  Causes: [String]
  ApplicationMetrics: AwsElasticbeanstalkS40
  InstancesHealth: AwsElasticbeanstalkDescribeEnvironmentHealthOutputInstancesHealth
  RefreshedAt: Date
}

type AwsElasticbeanstalkDescribeEnvironmentHealthOutputInstancesHealth {
  NoData: Int
  Unknown: Int
  Pending: Int
  Ok: Int
  Info: Int
  Warning: Int
  Degraded: Int
  Severe: Int
}

input AwsElasticbeanstalkDescribeEnvironmentManagedActionHistoryInput {
  EnvironmentId: String
  EnvironmentName: String
  NextToken: String
  MaxItems: Int
}

type AwsElasticbeanstalkDescribeEnvironmentManagedActionHistoryOutput {
  ManagedActionHistoryItems: [AwsElasticbeanstalkDescribeEnvironmentManagedActionHistoryOutputManagedActionHistoryItems]
  NextToken: String
}

type AwsElasticbeanstalkDescribeEnvironmentManagedActionHistoryOutputManagedActionHistoryItems {
  ActionId: String
  ActionType: String
  ActionDescription: String
  FailureType: String
  Status: String
  FailureDescription: String
  ExecutedTime: Date
  FinishedTime: Date
}

input AwsElasticbeanstalkDescribeEnvironmentManagedActionsInput {
  EnvironmentName: String
  EnvironmentId: String
  Status: String
}

type AwsElasticbeanstalkDescribeEnvironmentManagedActionsOutput {
  ManagedActions: [AwsElasticbeanstalkDescribeEnvironmentManagedActionsOutputManagedActions]
}

type AwsElasticbeanstalkDescribeEnvironmentManagedActionsOutputManagedActions {
  ActionId: String
  ActionDescription: String
  ActionType: String
  Status: String
  WindowStartTime: Date
}

input AwsElasticbeanstalkDescribeEnvironmentResourcesInput {
  EnvironmentId: String
  EnvironmentName: String
}

type AwsElasticbeanstalkDescribeEnvironmentResourcesOutput {
  EnvironmentResources: AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResources
}

type AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResources {
  EnvironmentName: String
  AutoScalingGroups: [AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesAutoScalingGroups]
  Instances: [AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesInstances]
  LaunchConfigurations: [AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLaunchConfigurations]
  LoadBalancers: [AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLoadBalancers]
  Triggers: [AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesTriggers]
  Queues: [AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesQueues]
}

type AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesAutoScalingGroups {
  Name: String
}

type AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesInstances {
  Id: String
}

type AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLaunchConfigurations {
  Name: String
}

type AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLoadBalancers {
  Name: String
}

type AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesQueues {
  Name: String
  URL: String
}

type AwsElasticbeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesTriggers {
  Name: String
}

input AwsElasticbeanstalkDescribeEnvironmentsInput {
  ApplicationName: String
  VersionLabel: String
  EnvironmentIds: [String]
  EnvironmentNames: [String]
  IncludeDeleted: Boolean
  IncludedDeletedBackTo: Date
  MaxRecords: Int
  NextToken: String
}

input AwsElasticbeanstalkDescribeEventsInput {
  ApplicationName: String
  VersionLabel: String
  TemplateName: String
  EnvironmentId: String
  EnvironmentName: String
  PlatformArn: String
  RequestId: String
  Severity: String
  StartTime: Date
  EndTime: Date
  MaxRecords: Int
  NextToken: String
}

type AwsElasticbeanstalkDescribeEventsOutput {
  Events: [AwsElasticbeanstalkDescribeEventsOutputEvents]
  NextToken: String
}

type AwsElasticbeanstalkDescribeEventsOutputEvents {
  EventDate: Date
  Message: String
  ApplicationName: String
  VersionLabel: String
  TemplateName: String
  EnvironmentName: String
  PlatformArn: String
  RequestId: String
  Severity: String
}

input AwsElasticbeanstalkDescribeInstancesHealthInput {
  EnvironmentName: String
  EnvironmentId: String
  AttributeNames: [String]
  NextToken: String
}

type AwsElasticbeanstalkDescribeInstancesHealthOutput {
  InstanceHealthList: [AwsElasticbeanstalkDescribeInstancesHealthOutputInstanceHealthList]
  RefreshedAt: Date
  NextToken: String
}

type AwsElasticbeanstalkDescribeInstancesHealthOutputInstanceHealthList {
  InstanceId: String
  HealthStatus: String
  Color: String
  Causes: [String]
  LaunchedAt: Date
  ApplicationMetrics: AwsElasticbeanstalkS40
  System: AwsElasticbeanstalkDescribeInstancesHealthOutputInstanceHealthListSystem
  Deployment: AwsElasticbeanstalkDescribeInstancesHealthOutputInstanceHealthListDeployment
  AvailabilityZone: String
  InstanceType: String
}

type AwsElasticbeanstalkDescribeInstancesHealthOutputInstanceHealthListDeployment {
  VersionLabel: String
  DeploymentId: JSON
  Status: String
  DeploymentTime: Date
}

type AwsElasticbeanstalkDescribeInstancesHealthOutputInstanceHealthListSystem {
  CPUUtilization: AwsElasticbeanstalkDescribeInstancesHealthOutputInstanceHealthListSystemCPUUtilization
  LoadAverage: [JSON]
}

type AwsElasticbeanstalkDescribeInstancesHealthOutputInstanceHealthListSystemCPUUtilization {
  User: JSON
  Nice: JSON
  System: JSON
  Idle: JSON
  IOWait: JSON
  IRQ: JSON
  SoftIRQ: JSON
}

input AwsElasticbeanstalkDescribePlatformVersionInput {
  PlatformArn: String
}

type AwsElasticbeanstalkDescribePlatformVersionOutput {
  PlatformDescription: AwsElasticbeanstalkDescribePlatformVersionOutputPlatformDescription
}

type AwsElasticbeanstalkDescribePlatformVersionOutputPlatformDescription {
  PlatformArn: String
  PlatformOwner: String
  PlatformName: String
  PlatformVersion: String
  SolutionStackName: String
  PlatformStatus: String
  DateCreated: Date
  DateUpdated: Date
  PlatformCategory: String
  Description: String
  Maintainer: String
  OperatingSystemName: String
  OperatingSystemVersion: String
  ProgrammingLanguages: [AwsElasticbeanstalkDescribePlatformVersionOutputPlatformDescriptionProgrammingLanguages]
  Frameworks: [AwsElasticbeanstalkDescribePlatformVersionOutputPlatformDescriptionFrameworks]
  CustomAmiList: [AwsElasticbeanstalkDescribePlatformVersionOutputPlatformDescriptionCustomAmiList]
  SupportedTierList: [String]
  SupportedAddonList: [String]
}

type AwsElasticbeanstalkDescribePlatformVersionOutputPlatformDescriptionCustomAmiList {
  VirtualizationType: String
  ImageId: String
}

type AwsElasticbeanstalkDescribePlatformVersionOutputPlatformDescriptionFrameworks {
  Name: String
  Version: String
}

type AwsElasticbeanstalkDescribePlatformVersionOutputPlatformDescriptionProgrammingLanguages {
  Name: String
  Version: String
}

type AwsElasticbeanstalkListAvailableSolutionStacksOutput {
  SolutionStacks: [String]
  SolutionStackDetails: [AwsElasticbeanstalkListAvailableSolutionStacksOutputSolutionStackDetails]
}

type AwsElasticbeanstalkListAvailableSolutionStacksOutputSolutionStackDetails {
  SolutionStackName: String
  PermittedFileTypes: [String]
}

input AwsElasticbeanstalkListPlatformVersionsFiltersInput {
  Type: String
  Operator: String
  Values: [String]
}

input AwsElasticbeanstalkListPlatformVersionsInput {
  Filters: [AwsElasticbeanstalkListPlatformVersionsFiltersInput]
  MaxRecords: Int
  NextToken: String
}

type AwsElasticbeanstalkListPlatformVersionsOutput {
  PlatformSummaryList: [AwsElasticbeanstalkS2i]
  NextToken: String
}

input AwsElasticbeanstalkListTagsForResourceInput {
  ResourceArn: String!
}

type AwsElasticbeanstalkListTagsForResourceOutput {
  ResourceArn: String
  ResourceTags: [AwsElasticbeanstalkS29]
}

input AwsElasticbeanstalkRebuildEnvironmentInput {
  EnvironmentId: String
  EnvironmentName: String
}

input AwsElasticbeanstalkRequestEnvironmentInfoInput {
  EnvironmentId: String
  EnvironmentName: String
  InfoType: String!
}

input AwsElasticbeanstalkRestartAppServerInput {
  EnvironmentId: String
  EnvironmentName: String
}

input AwsElasticbeanstalkRetrieveEnvironmentInfoInput {
  EnvironmentId: String
  EnvironmentName: String
  InfoType: String!
}

type AwsElasticbeanstalkRetrieveEnvironmentInfoOutput {
  EnvironmentInfo: [AwsElasticbeanstalkRetrieveEnvironmentInfoOutputEnvironmentInfo]
}

type AwsElasticbeanstalkRetrieveEnvironmentInfoOutputEnvironmentInfo {
  InfoType: String
  Ec2InstanceId: String
  SampleTimestamp: Date
  Message: String
}

input AwsElasticbeanstalkS11Input {
  Name: String
  Type: String
  Version: String
}

type AwsElasticbeanstalkS17 {
  ServiceRole: String
  VersionLifecycleConfig: AwsElasticbeanstalkS17VersionLifecycleConfig
}

input AwsElasticbeanstalkS17Input {
  ServiceRole: String
  VersionLifecycleConfig: AwsElasticbeanstalkS17VersionLifecycleConfigInput
}

type AwsElasticbeanstalkS17VersionLifecycleConfig {
  MaxCountRule: AwsElasticbeanstalkS17VersionLifecycleConfigMaxCountRule
  MaxAgeRule: AwsElasticbeanstalkS17VersionLifecycleConfigMaxAgeRule
}

input AwsElasticbeanstalkS17VersionLifecycleConfigInput {
  MaxCountRule: AwsElasticbeanstalkS17VersionLifecycleConfigMaxCountRuleInput
  MaxAgeRule: AwsElasticbeanstalkS17VersionLifecycleConfigMaxAgeRuleInput
}

type AwsElasticbeanstalkS17VersionLifecycleConfigMaxAgeRule {
  Enabled: Boolean!
  MaxAgeInDays: Int
  DeleteSourceFromS3: Boolean
}

input AwsElasticbeanstalkS17VersionLifecycleConfigMaxAgeRuleInput {
  Enabled: Boolean!
  MaxAgeInDays: Int
  DeleteSourceFromS3: Boolean
}

type AwsElasticbeanstalkS17VersionLifecycleConfigMaxCountRule {
  Enabled: Boolean!
  MaxCount: Int
  DeleteSourceFromS3: Boolean
}

input AwsElasticbeanstalkS17VersionLifecycleConfigMaxCountRuleInput {
  Enabled: Boolean!
  MaxCount: Int
  DeleteSourceFromS3: Boolean
}

type AwsElasticbeanstalkS1e {
  ApplicationName: String
  Description: String
  DateCreated: Date
  DateUpdated: Date
  Versions: [String]
  ConfigurationTemplates: [String]
  ResourceLifecycleConfig: AwsElasticbeanstalkS17
}

type AwsElasticbeanstalkS1i {
  SourceType: String!
  SourceRepository: String!
  SourceLocation: String!
}

input AwsElasticbeanstalkS1iInput {
  SourceType: String!
  SourceRepository: String!
  SourceLocation: String!
}

type AwsElasticbeanstalkS1m {
  S3Bucket: String
  S3Key: String
}

input AwsElasticbeanstalkS1mInput {
  S3Bucket: String
  S3Key: String
}

type AwsElasticbeanstalkS1v {
  ApplicationName: String
  Description: String
  VersionLabel: String
  SourceBuildInformation: AwsElasticbeanstalkS1i
  BuildArn: String
  SourceBundle: AwsElasticbeanstalkS1m
  DateCreated: Date
  DateUpdated: Date
  Status: String
}

type AwsElasticbeanstalkS1z {
  ResourceName: String
  Namespace: String
  OptionName: String
  Value: String
}

input AwsElasticbeanstalkS1zInput {
  ResourceName: String
  Namespace: String
  OptionName: String
  Value: String
}

type AwsElasticbeanstalkS25 {
  SolutionStackName: String
  PlatformArn: String
  ApplicationName: String
  TemplateName: String
  Description: String
  EnvironmentName: String
  DeploymentStatus: String
  DateCreated: Date
  DateUpdated: Date
  OptionSettings: [AwsElasticbeanstalkS1z]
}

type AwsElasticbeanstalkS29 {
  Key: String
  Value: String
}

input AwsElasticbeanstalkS29Input {
  Key: String
  Value: String
}

input AwsElasticbeanstalkS2cInput {
  ResourceName: String
  Namespace: String
  OptionName: String
}

type AwsElasticbeanstalkS2i {
  PlatformArn: String
  PlatformOwner: String
  PlatformStatus: String
  PlatformCategory: String
  OperatingSystemName: String
  OperatingSystemVersion: String
  SupportedTierList: [String]
  SupportedAddonList: [String]
}

type AwsElasticbeanstalkS40 {
  Duration: Int
  RequestCount: Int
  StatusCodes: AwsElasticbeanstalkS40StatusCodes
  Latency: AwsElasticbeanstalkS40Latency
}

type AwsElasticbeanstalkS40Latency {
  P999: JSON
  P99: JSON
  P95: JSON
  P90: JSON
  P85: JSON
  P75: JSON
  P50: JSON
  P10: JSON
}

type AwsElasticbeanstalkS40StatusCodes {
  Status2xx: Int
  Status3xx: Int
  Status4xx: Int
  Status5xx: Int
}

input AwsElasticbeanstalkSwapEnvironmentCNAMEsInput {
  SourceEnvironmentId: String
  SourceEnvironmentName: String
  DestinationEnvironmentId: String
  DestinationEnvironmentName: String
}

input AwsElasticbeanstalkTerminateEnvironmentInput {
  EnvironmentId: String
  EnvironmentName: String
  TerminateResources: Boolean
  ForceTerminate: Boolean
}

input AwsElasticbeanstalkUpdateApplicationInput {
  ApplicationName: String!
  Description: String
}

input AwsElasticbeanstalkUpdateApplicationResourceLifecycleInput {
  ApplicationName: String!
  ResourceLifecycleConfig: AwsElasticbeanstalkS17Input!
}

type AwsElasticbeanstalkUpdateApplicationResourceLifecycleOutput {
  ApplicationName: String
  ResourceLifecycleConfig: AwsElasticbeanstalkS17
}

input AwsElasticbeanstalkUpdateApplicationVersionInput {
  ApplicationName: String!
  VersionLabel: String!
  Description: String
}

input AwsElasticbeanstalkUpdateConfigurationTemplateInput {
  ApplicationName: String!
  TemplateName: String!
  Description: String
  OptionSettings: [AwsElasticbeanstalkS1zInput]
  OptionsToRemove: [AwsElasticbeanstalkS2cInput]
}

input AwsElasticbeanstalkUpdateEnvironmentInput {
  ApplicationName: String
  EnvironmentId: String
  EnvironmentName: String
  GroupName: String
  Description: String
  Tier: AwsElasticbeanstalkS11Input
  VersionLabel: String
  TemplateName: String
  SolutionStackName: String
  PlatformArn: String
  OptionSettings: [AwsElasticbeanstalkS1zInput]
  OptionsToRemove: [AwsElasticbeanstalkS2cInput]
}

input AwsElasticbeanstalkUpdateTagsForResourceInput {
  ResourceArn: String!
  TagsToAdd: [AwsElasticbeanstalkS29Input]
  TagsToRemove: [String]
}

input AwsElasticbeanstalkValidateConfigurationSettingsInput {
  ApplicationName: String!
  TemplateName: String
  EnvironmentName: String
  OptionSettings: [AwsElasticbeanstalkS1zInput]!
}

type AwsElasticbeanstalkValidateConfigurationSettingsOutput {
  Messages: [AwsElasticbeanstalkValidateConfigurationSettingsOutputMessages]
}

type AwsElasticbeanstalkValidateConfigurationSettingsOutputMessages {
  Message: String
  Severity: String
  Namespace: String
  OptionName: String
}

# Amazon Elastic Transcoder (2012-09-25)
type AwsElastictranscoder {
  # elastictranscoder.CancelJob
  CancelJob(input: AwsElastictranscoderCancelJobInput!): JSON

  # elastictranscoder.CreateJob
  CreateJob(input: AwsElastictranscoderCreateJobInput!): AwsElastictranscoderCreateJobOutput

  # elastictranscoder.CreatePipeline
  CreatePipeline(input: AwsElastictranscoderCreatePipelineInput!): AwsElastictranscoderCreatePipelineOutput

  # elastictranscoder.CreatePreset
  CreatePreset(input: AwsElastictranscoderCreatePresetInput!): AwsElastictranscoderCreatePresetOutput

  # elastictranscoder.DeletePipeline
  DeletePipeline(input: AwsElastictranscoderDeletePipelineInput!): JSON

  # elastictranscoder.DeletePreset
  DeletePreset(input: AwsElastictranscoderDeletePresetInput!): JSON

  # elastictranscoder.ListJobsByPipeline
  ListJobsByPipeline(input: AwsElastictranscoderListJobsByPipelineInput!): AwsElastictranscoderListJobsByPipelineOutput

  # elastictranscoder.ListJobsByStatus
  ListJobsByStatus(input: AwsElastictranscoderListJobsByStatusInput!): AwsElastictranscoderListJobsByStatusOutput

  # elastictranscoder.ListPipelines
  ListPipelines(input: AwsElastictranscoderListPipelinesInput): AwsElastictranscoderListPipelinesOutput

  # elastictranscoder.ListPresets
  ListPresets(input: AwsElastictranscoderListPresetsInput): AwsElastictranscoderListPresetsOutput

  # elastictranscoder.ReadJob
  ReadJob(input: AwsElastictranscoderReadJobInput!): AwsElastictranscoderReadJobOutput

  # elastictranscoder.ReadPipeline
  ReadPipeline(input: AwsElastictranscoderReadPipelineInput!): AwsElastictranscoderReadPipelineOutput

  # elastictranscoder.ReadPreset
  ReadPreset(input: AwsElastictranscoderReadPresetInput!): AwsElastictranscoderReadPresetOutput

  # elastictranscoder.TestRole
  TestRole(input: AwsElastictranscoderTestRoleInput!): AwsElastictranscoderTestRoleOutput

  # elastictranscoder.UpdatePipeline
  UpdatePipeline(input: AwsElastictranscoderUpdatePipelineInput!): AwsElastictranscoderUpdatePipelineOutput

  # elastictranscoder.UpdatePipelineNotifications
  UpdatePipelineNotifications(input: AwsElastictranscoderUpdatePipelineNotificationsInput!): AwsElastictranscoderUpdatePipelineNotificationsOutput

  # elastictranscoder.UpdatePipelineStatus
  UpdatePipelineStatus(input: AwsElastictranscoderUpdatePipelineStatusInput!): AwsElastictranscoderUpdatePipelineStatusOutput
}

input AwsElastictranscoderCancelJobInput {
  Id: String!
}

input AwsElastictranscoderCreateJobInput {
  PipelineId: String!
  Input: AwsElastictranscoderS5Input
  Inputs: [AwsElastictranscoderS5Input]
  Output: AwsElastictranscoderSuInput
  Outputs: [AwsElastictranscoderSuInput]
  OutputKeyPrefix: String
  Playlists: [AwsElastictranscoderCreateJobPlaylistsInput]
  UserMetadata: JSON
}

type AwsElastictranscoderCreateJobOutput {
  Job: AwsElastictranscoderS1y
}

input AwsElastictranscoderCreateJobPlaylistsInput {
  Name: String
  Format: String
  OutputKeys: [String]
  HlsContentProtection: AwsElastictranscoderS1mInput
  PlayReadyDrm: AwsElastictranscoderS1qInput
}

input AwsElastictranscoderCreatePipelineInput {
  Name: String!
  InputBucket: String!
  OutputBucket: String
  Role: String!
  AwsKmsKeyArn: String
  Notifications: AwsElastictranscoderS2aInput
  ContentConfig: AwsElastictranscoderS2cInput
  ThumbnailConfig: AwsElastictranscoderS2cInput
}

type AwsElastictranscoderCreatePipelineOutput {
  Pipeline: AwsElastictranscoderS2l
  Warnings: [AwsElastictranscoderS2n]
}

input AwsElastictranscoderCreatePresetInput {
  Name: String!
  Description: String
  Container: String!
  Video: AwsElastictranscoderS2rInput
  Audio: AwsElastictranscoderS37Input
  Thumbnails: AwsElastictranscoderS3iInput
}

type AwsElastictranscoderCreatePresetOutput {
  Preset: AwsElastictranscoderS3m
  Warning: String
}

input AwsElastictranscoderDeletePipelineInput {
  Id: String!
}

input AwsElastictranscoderDeletePresetInput {
  Id: String!
}

input AwsElastictranscoderListJobsByPipelineInput {
  PipelineId: String!
  Ascending: String
  PageToken: String
}

type AwsElastictranscoderListJobsByPipelineOutput {
  Jobs: [AwsElastictranscoderS1y]
  NextPageToken: String
}

input AwsElastictranscoderListJobsByStatusInput {
  Status: String!
  Ascending: String
  PageToken: String
}

type AwsElastictranscoderListJobsByStatusOutput {
  Jobs: [AwsElastictranscoderS1y]
  NextPageToken: String
}

input AwsElastictranscoderListPipelinesInput {
  Ascending: String
  PageToken: String
}

type AwsElastictranscoderListPipelinesOutput {
  Pipelines: [AwsElastictranscoderS2l]
  NextPageToken: String
}

input AwsElastictranscoderListPresetsInput {
  Ascending: String
  PageToken: String
}

type AwsElastictranscoderListPresetsOutput {
  Presets: [AwsElastictranscoderS3m]
  NextPageToken: String
}

input AwsElastictranscoderReadJobInput {
  Id: String!
}

type AwsElastictranscoderReadJobOutput {
  Job: AwsElastictranscoderS1y
}

input AwsElastictranscoderReadPipelineInput {
  Id: String!
}

type AwsElastictranscoderReadPipelineOutput {
  Pipeline: AwsElastictranscoderS2l
  Warnings: [AwsElastictranscoderS2n]
}

input AwsElastictranscoderReadPresetInput {
  Id: String!
}

type AwsElastictranscoderReadPresetOutput {
  Preset: AwsElastictranscoderS3m
}

type AwsElastictranscoderS11 {
  MergePolicy: String
  Artwork: [AwsElastictranscoderS11Artwork]
}

type AwsElastictranscoderS11Artwork {
  InputKey: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  PaddingPolicy: String
  AlbumArtFormat: String
  Encryption: AwsElastictranscoderSc
}

input AwsElastictranscoderS11ArtworkInput {
  InputKey: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  PaddingPolicy: String
  AlbumArtFormat: String
  Encryption: AwsElastictranscoderScInput
}

input AwsElastictranscoderS11Input {
  MergePolicy: String
  Artwork: [AwsElastictranscoderS11ArtworkInput]
}

type AwsElastictranscoderS19 {
  TimeSpan: AwsElastictranscoderSg
}

input AwsElastictranscoderS19Input {
  TimeSpan: AwsElastictranscoderSgInput
}

type AwsElastictranscoderS1b {
  MergePolicy: String
  CaptionSources: [AwsElastictranscoderSk]
  CaptionFormats: [AwsElastictranscoderS1bCaptionFormats]
}

type AwsElastictranscoderS1bCaptionFormats {
  Format: String
  Pattern: String
  Encryption: AwsElastictranscoderSc
}

input AwsElastictranscoderS1bCaptionFormatsInput {
  Format: String
  Pattern: String
  Encryption: AwsElastictranscoderScInput
}

input AwsElastictranscoderS1bInput {
  MergePolicy: String
  CaptionSources: [AwsElastictranscoderSkInput]
  CaptionFormats: [AwsElastictranscoderS1bCaptionFormatsInput]
}

type AwsElastictranscoderS1m {
  Method: String
  Key: String
  KeyMd5: String
  InitializationVector: String
  LicenseAcquisitionUrl: String
  KeyStoragePolicy: String
}

input AwsElastictranscoderS1mInput {
  Method: String
  Key: String
  KeyMd5: String
  InitializationVector: String
  LicenseAcquisitionUrl: String
  KeyStoragePolicy: String
}

type AwsElastictranscoderS1q {
  Format: String
  Key: String
  KeyMd5: String
  KeyId: String
  InitializationVector: String
  LicenseAcquisitionUrl: String
}

input AwsElastictranscoderS1qInput {
  Format: String
  Key: String
  KeyMd5: String
  KeyId: String
  InitializationVector: String
  LicenseAcquisitionUrl: String
}

type AwsElastictranscoderS1y {
  Id: String
  Arn: String
  PipelineId: String
  Input: AwsElastictranscoderS5
  Inputs: [AwsElastictranscoderS5]
  Output: AwsElastictranscoderS1z
  Outputs: [AwsElastictranscoderS1z]
  OutputKeyPrefix: String
  Playlists: [AwsElastictranscoderS1yPlaylists]
  Status: String
  UserMetadata: JSON
  Timing: AwsElastictranscoderS1yTiming
}

type AwsElastictranscoderS1yPlaylists {
  Name: String
  Format: String
  OutputKeys: [String]
  HlsContentProtection: AwsElastictranscoderS1m
  PlayReadyDrm: AwsElastictranscoderS1q
  Status: String
  StatusDetail: String
}

type AwsElastictranscoderS1yTiming {
  SubmitTimeMillis: JSON
  StartTimeMillis: JSON
  FinishTimeMillis: JSON
}

type AwsElastictranscoderS1z {
  Id: String
  Key: String
  ThumbnailPattern: String
  ThumbnailEncryption: AwsElastictranscoderSc
  Rotate: String
  PresetId: String
  SegmentDuration: String
  Status: String
  StatusDetail: String
  Duration: JSON
  Width: Int
  Height: Int
  FrameRate: String
  FileSize: JSON
  DurationMillis: JSON
  Watermarks: [AwsElastictranscoderSx]
  AlbumArt: AwsElastictranscoderS11
  Composition: [AwsElastictranscoderS19]
  Captions: AwsElastictranscoderS1b
  Encryption: AwsElastictranscoderSc
  AppliedColorSpaceConversion: String
}

type AwsElastictranscoderS2a {
  Progressing: String
  Completed: String
  Warning: String
  Error: String
}

input AwsElastictranscoderS2aInput {
  Progressing: String
  Completed: String
  Warning: String
  Error: String
}

type AwsElastictranscoderS2c {
  Bucket: String
  StorageClass: String
  Permissions: [AwsElastictranscoderS2cPermissions]
}

input AwsElastictranscoderS2cInput {
  Bucket: String
  StorageClass: String
  Permissions: [AwsElastictranscoderS2cPermissionsInput]
}

type AwsElastictranscoderS2cPermissions {
  GranteeType: String
  Grantee: String
  Access: [String]
}

input AwsElastictranscoderS2cPermissionsInput {
  GranteeType: String
  Grantee: String
  Access: [String]
}

type AwsElastictranscoderS2l {
  Id: String
  Arn: String
  Name: String
  Status: String
  InputBucket: String
  OutputBucket: String
  Role: String
  AwsKmsKeyArn: String
  Notifications: AwsElastictranscoderS2a
  ContentConfig: AwsElastictranscoderS2c
  ThumbnailConfig: AwsElastictranscoderS2c
}

type AwsElastictranscoderS2n {
  Code: String
  Message: String
}

type AwsElastictranscoderS2r {
  Codec: String
  CodecOptions: JSON
  KeyframesMaxDist: String
  FixedGOP: String
  BitRate: String
  FrameRate: String
  MaxFrameRate: String
  Resolution: String
  AspectRatio: String
  MaxWidth: String
  MaxHeight: String
  DisplayAspectRatio: String
  SizingPolicy: String
  PaddingPolicy: String
  Watermarks: [AwsElastictranscoderS2rWatermarks]
}

input AwsElastictranscoderS2rInput {
  Codec: String
  CodecOptions: JSON
  KeyframesMaxDist: String
  FixedGOP: String
  BitRate: String
  FrameRate: String
  MaxFrameRate: String
  Resolution: String
  AspectRatio: String
  MaxWidth: String
  MaxHeight: String
  DisplayAspectRatio: String
  SizingPolicy: String
  PaddingPolicy: String
  Watermarks: [AwsElastictranscoderS2rWatermarksInput]
}

type AwsElastictranscoderS2rWatermarks {
  Id: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  HorizontalAlign: String
  HorizontalOffset: String
  VerticalAlign: String
  VerticalOffset: String
  Opacity: String
  Target: String
}

input AwsElastictranscoderS2rWatermarksInput {
  Id: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  HorizontalAlign: String
  HorizontalOffset: String
  VerticalAlign: String
  VerticalOffset: String
  Opacity: String
  Target: String
}

type AwsElastictranscoderS37 {
  Codec: String
  SampleRate: String
  BitRate: String
  Channels: String
  AudioPackingMode: String
  CodecOptions: AwsElastictranscoderS37CodecOptions
}

type AwsElastictranscoderS37CodecOptions {
  Profile: String
  BitDepth: String
  BitOrder: String
  Signed: String
}

input AwsElastictranscoderS37CodecOptionsInput {
  Profile: String
  BitDepth: String
  BitOrder: String
  Signed: String
}

input AwsElastictranscoderS37Input {
  Codec: String
  SampleRate: String
  BitRate: String
  Channels: String
  AudioPackingMode: String
  CodecOptions: AwsElastictranscoderS37CodecOptionsInput
}

type AwsElastictranscoderS3i {
  Format: String
  Interval: String
  Resolution: String
  AspectRatio: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  PaddingPolicy: String
}

input AwsElastictranscoderS3iInput {
  Format: String
  Interval: String
  Resolution: String
  AspectRatio: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  PaddingPolicy: String
}

type AwsElastictranscoderS3m {
  Id: String
  Arn: String
  Name: String
  Description: String
  Container: String
  Audio: AwsElastictranscoderS37
  Video: AwsElastictranscoderS2r
  Thumbnails: AwsElastictranscoderS3i
  Type: String
}

type AwsElastictranscoderS5 {
  Key: String
  FrameRate: String
  Resolution: String
  AspectRatio: String
  Interlaced: String
  Container: String
  Encryption: AwsElastictranscoderSc
  TimeSpan: AwsElastictranscoderSg
  InputCaptions: AwsElastictranscoderS5InputCaptions
  DetectedProperties: AwsElastictranscoderS5DetectedProperties
}

type AwsElastictranscoderS5DetectedProperties {
  Width: Int
  Height: Int
  FrameRate: String
  FileSize: JSON
  DurationMillis: JSON
}

input AwsElastictranscoderS5DetectedPropertiesInput {
  Width: Int
  Height: Int
  FrameRate: String
  FileSize: JSON
  DurationMillis: JSON
}

input AwsElastictranscoderS5Input {
  Key: String
  FrameRate: String
  Resolution: String
  AspectRatio: String
  Interlaced: String
  Container: String
  Encryption: AwsElastictranscoderScInput
  TimeSpan: AwsElastictranscoderSgInput
  InputCaptions: AwsElastictranscoderS5InputCaptionsInput
  DetectedProperties: AwsElastictranscoderS5DetectedPropertiesInput
}

type AwsElastictranscoderS5InputCaptions {
  MergePolicy: String
  CaptionSources: [AwsElastictranscoderSk]
}

input AwsElastictranscoderS5InputCaptionsInput {
  MergePolicy: String
  CaptionSources: [AwsElastictranscoderSkInput]
}

type AwsElastictranscoderSc {
  Mode: String
  Key: String
  KeyMd5: String
  InitializationVector: String
}

input AwsElastictranscoderScInput {
  Mode: String
  Key: String
  KeyMd5: String
  InitializationVector: String
}

type AwsElastictranscoderSg {
  StartTime: String
  Duration: String
}

input AwsElastictranscoderSgInput {
  StartTime: String
  Duration: String
}

type AwsElastictranscoderSk {
  Key: String
  Language: String
  TimeOffset: String
  Label: String
  Encryption: AwsElastictranscoderSc
}

input AwsElastictranscoderSkInput {
  Key: String
  Language: String
  TimeOffset: String
  Label: String
  Encryption: AwsElastictranscoderScInput
}

input AwsElastictranscoderSuInput {
  Key: String
  ThumbnailPattern: String
  ThumbnailEncryption: AwsElastictranscoderScInput
  Rotate: String
  PresetId: String
  SegmentDuration: String
  Watermarks: [AwsElastictranscoderSxInput]
  AlbumArt: AwsElastictranscoderS11Input
  Composition: [AwsElastictranscoderS19Input]
  Captions: AwsElastictranscoderS1bInput
  Encryption: AwsElastictranscoderScInput
}

type AwsElastictranscoderSx {
  PresetWatermarkId: String
  InputKey: String
  Encryption: AwsElastictranscoderSc
}

input AwsElastictranscoderSxInput {
  PresetWatermarkId: String
  InputKey: String
  Encryption: AwsElastictranscoderScInput
}

input AwsElastictranscoderTestRoleInput {
  Role: String!
  InputBucket: String!
  OutputBucket: String!
  Topics: [String]!
}

type AwsElastictranscoderTestRoleOutput {
  Success: String
  Messages: [String]
}

input AwsElastictranscoderUpdatePipelineInput {
  Id: String!
  Name: String
  InputBucket: String
  Role: String
  AwsKmsKeyArn: String
  Notifications: AwsElastictranscoderS2aInput
  ContentConfig: AwsElastictranscoderS2cInput
  ThumbnailConfig: AwsElastictranscoderS2cInput
}

input AwsElastictranscoderUpdatePipelineNotificationsInput {
  Id: String!
  Notifications: AwsElastictranscoderS2aInput!
}

type AwsElastictranscoderUpdatePipelineNotificationsOutput {
  Pipeline: AwsElastictranscoderS2l
}

type AwsElastictranscoderUpdatePipelineOutput {
  Pipeline: AwsElastictranscoderS2l
  Warnings: [AwsElastictranscoderS2n]
}

input AwsElastictranscoderUpdatePipelineStatusInput {
  Id: String!
  Status: String!
}

type AwsElastictranscoderUpdatePipelineStatusOutput {
  Pipeline: AwsElastictranscoderS2l
}

# Elastic Load Balancing (2012-06-01)
type AwsElb {
  # elb.AddTags
  AddTags(input: AwsElbAddTagsInput!): JSON

  # elb.ApplySecurityGroupsToLoadBalancer
  ApplySecurityGroupsToLoadBalancer(input: AwsElbApplySecurityGroupsToLoadBalancerInput!): AwsElbApplySecurityGroupsToLoadBalancerOutput

  # elb.AttachLoadBalancerToSubnets
  AttachLoadBalancerToSubnets(input: AwsElbAttachLoadBalancerToSubnetsInput!): AwsElbAttachLoadBalancerToSubnetsOutput

  # elb.ConfigureHealthCheck
  ConfigureHealthCheck(input: AwsElbConfigureHealthCheckInput!): AwsElbConfigureHealthCheckOutput

  # elb.CreateAppCookieStickinessPolicy
  CreateAppCookieStickinessPolicy(input: AwsElbCreateAppCookieStickinessPolicyInput!): JSON

  # elb.CreateLBCookieStickinessPolicy
  CreateLBCookieStickinessPolicy(input: AwsElbCreateLBCookieStickinessPolicyInput!): JSON

  # elb.CreateLoadBalancer
  CreateLoadBalancer(input: AwsElbCreateLoadBalancerInput!): AwsElbCreateLoadBalancerOutput

  # elb.CreateLoadBalancerListeners
  CreateLoadBalancerListeners(input: AwsElbCreateLoadBalancerListenersInput!): JSON

  # elb.CreateLoadBalancerPolicy
  CreateLoadBalancerPolicy(input: AwsElbCreateLoadBalancerPolicyInput!): JSON

  # elb.DeleteLoadBalancer
  DeleteLoadBalancer(input: AwsElbDeleteLoadBalancerInput!): JSON

  # elb.DeleteLoadBalancerListeners
  DeleteLoadBalancerListeners(input: AwsElbDeleteLoadBalancerListenersInput!): JSON

  # elb.DeleteLoadBalancerPolicy
  DeleteLoadBalancerPolicy(input: AwsElbDeleteLoadBalancerPolicyInput!): JSON

  # elb.DeregisterInstancesFromLoadBalancer
  DeregisterInstancesFromLoadBalancer(input: AwsElbDeregisterInstancesFromLoadBalancerInput!): AwsElbDeregisterInstancesFromLoadBalancerOutput

  # elb.DescribeAccountLimits
  DescribeAccountLimits(input: AwsElbDescribeAccountLimitsInput): AwsElbDescribeAccountLimitsOutput

  # elb.DescribeInstanceHealth
  DescribeInstanceHealth(input: AwsElbDescribeInstanceHealthInput!): AwsElbDescribeInstanceHealthOutput

  # elb.DescribeLoadBalancerAttributes
  DescribeLoadBalancerAttributes(input: AwsElbDescribeLoadBalancerAttributesInput!): AwsElbDescribeLoadBalancerAttributesOutput

  # elb.DescribeLoadBalancerPolicies
  DescribeLoadBalancerPolicies(input: AwsElbDescribeLoadBalancerPoliciesInput): AwsElbDescribeLoadBalancerPoliciesOutput

  # elb.DescribeLoadBalancerPolicyTypes
  DescribeLoadBalancerPolicyTypes(input: AwsElbDescribeLoadBalancerPolicyTypesInput): AwsElbDescribeLoadBalancerPolicyTypesOutput

  # elb.DescribeLoadBalancers
  DescribeLoadBalancers(input: AwsElbDescribeLoadBalancersInput): AwsElbDescribeLoadBalancersOutput

  # elb.DescribeTags
  DescribeTags(input: AwsElbDescribeTagsInput!): AwsElbDescribeTagsOutput

  # elb.DetachLoadBalancerFromSubnets
  DetachLoadBalancerFromSubnets(input: AwsElbDetachLoadBalancerFromSubnetsInput!): AwsElbDetachLoadBalancerFromSubnetsOutput

  # elb.DisableAvailabilityZonesForLoadBalancer
  DisableAvailabilityZonesForLoadBalancer(input: AwsElbDisableAvailabilityZonesForLoadBalancerInput!): AwsElbDisableAvailabilityZonesForLoadBalancerOutput

  # elb.EnableAvailabilityZonesForLoadBalancer
  EnableAvailabilityZonesForLoadBalancer(input: AwsElbEnableAvailabilityZonesForLoadBalancerInput!): AwsElbEnableAvailabilityZonesForLoadBalancerOutput

  # elb.ModifyLoadBalancerAttributes
  ModifyLoadBalancerAttributes(input: AwsElbModifyLoadBalancerAttributesInput!): AwsElbModifyLoadBalancerAttributesOutput

  # elb.RegisterInstancesWithLoadBalancer
  RegisterInstancesWithLoadBalancer(input: AwsElbRegisterInstancesWithLoadBalancerInput!): AwsElbRegisterInstancesWithLoadBalancerOutput

  # elb.RemoveTags
  RemoveTags(input: AwsElbRemoveTagsInput!): JSON

  # elb.SetLoadBalancerListenerSSLCertificate
  SetLoadBalancerListenerSSLCertificate(input: AwsElbSetLoadBalancerListenerSSLCertificateInput!): JSON

  # elb.SetLoadBalancerPoliciesForBackendServer
  SetLoadBalancerPoliciesForBackendServer(input: AwsElbSetLoadBalancerPoliciesForBackendServerInput!): JSON

  # elb.SetLoadBalancerPoliciesOfListener
  SetLoadBalancerPoliciesOfListener(input: AwsElbSetLoadBalancerPoliciesOfListenerInput!): JSON
}

input AwsElbAddTagsInput {
  LoadBalancerNames: [String]!
  Tags: [AwsElbS4Input]!
}

input AwsElbApplySecurityGroupsToLoadBalancerInput {
  LoadBalancerName: String!
  SecurityGroups: [String]!
}

type AwsElbApplySecurityGroupsToLoadBalancerOutput {
  SecurityGroups: [String]
}

input AwsElbAttachLoadBalancerToSubnetsInput {
  LoadBalancerName: String!
  Subnets: [String]!
}

type AwsElbAttachLoadBalancerToSubnetsOutput {
  Subnets: [String]
}

input AwsElbConfigureHealthCheckInput {
  LoadBalancerName: String!
  HealthCheck: AwsElbSiInput!
}

type AwsElbConfigureHealthCheckOutput {
  HealthCheck: AwsElbSi
}

input AwsElbCreateAppCookieStickinessPolicyInput {
  LoadBalancerName: String!
  PolicyName: String!
  CookieName: String!
}

input AwsElbCreateLBCookieStickinessPolicyInput {
  LoadBalancerName: String!
  PolicyName: String!
  CookieExpirationPeriod: JSON
}

input AwsElbCreateLoadBalancerInput {
  LoadBalancerName: String!
  Listeners: [AwsElbSyInput]!
  AvailabilityZones: [String]
  Subnets: [String]
  SecurityGroups: [String]
  Scheme: String
  Tags: [AwsElbS4Input]
}

input AwsElbCreateLoadBalancerListenersInput {
  LoadBalancerName: String!
  Listeners: [AwsElbSyInput]!
}

type AwsElbCreateLoadBalancerOutput {
  DNSName: String
}

input AwsElbCreateLoadBalancerPolicyInput {
  LoadBalancerName: String!
  PolicyName: String!
  PolicyTypeName: String!
  PolicyAttributes: [AwsElbCreateLoadBalancerPolicyPolicyAttributesInput]
}

input AwsElbCreateLoadBalancerPolicyPolicyAttributesInput {
  AttributeName: String
  AttributeValue: String
}

input AwsElbDeleteLoadBalancerInput {
  LoadBalancerName: String!
}

input AwsElbDeleteLoadBalancerListenersInput {
  LoadBalancerName: String!
  LoadBalancerPorts: [Int]!
}

input AwsElbDeleteLoadBalancerPolicyInput {
  LoadBalancerName: String!
  PolicyName: String!
}

input AwsElbDeregisterInstancesFromLoadBalancerInput {
  LoadBalancerName: String!
  Instances: [AwsElbS1pInput]!
}

type AwsElbDeregisterInstancesFromLoadBalancerOutput {
  Instances: [AwsElbS1p]
}

input AwsElbDescribeAccountLimitsInput {
  Marker: String
  PageSize: Int
}

type AwsElbDescribeAccountLimitsOutput {
  Limits: [AwsElbDescribeAccountLimitsOutputLimits]
  NextMarker: String
}

type AwsElbDescribeAccountLimitsOutputLimits {
  Name: String
  Max: String
}

input AwsElbDescribeInstanceHealthInput {
  LoadBalancerName: String!
  Instances: [AwsElbS1pInput]
}

type AwsElbDescribeInstanceHealthOutput {
  InstanceStates: [AwsElbDescribeInstanceHealthOutputInstanceStates]
}

type AwsElbDescribeInstanceHealthOutputInstanceStates {
  InstanceId: String
  State: String
  ReasonCode: String
  Description: String
}

input AwsElbDescribeLoadBalancerAttributesInput {
  LoadBalancerName: String!
}

type AwsElbDescribeLoadBalancerAttributesOutput {
  LoadBalancerAttributes: AwsElbS2a
}

input AwsElbDescribeLoadBalancerPoliciesInput {
  LoadBalancerName: String
  PolicyNames: [String]
}

type AwsElbDescribeLoadBalancerPoliciesOutput {
  PolicyDescriptions: [AwsElbDescribeLoadBalancerPoliciesOutputPolicyDescriptions]
}

type AwsElbDescribeLoadBalancerPoliciesOutputPolicyDescriptions {
  PolicyName: String
  PolicyTypeName: String
  PolicyAttributeDescriptions: [AwsElbDescribeLoadBalancerPoliciesOutputPolicyDescriptionsPolicyAttributeDescriptions]
}

type AwsElbDescribeLoadBalancerPoliciesOutputPolicyDescriptionsPolicyAttributeDescriptions {
  AttributeName: String
  AttributeValue: String
}

input AwsElbDescribeLoadBalancerPolicyTypesInput {
  PolicyTypeNames: [String]
}

type AwsElbDescribeLoadBalancerPolicyTypesOutput {
  PolicyTypeDescriptions: [AwsElbDescribeLoadBalancerPolicyTypesOutputPolicyTypeDescriptions]
}

type AwsElbDescribeLoadBalancerPolicyTypesOutputPolicyTypeDescriptions {
  PolicyTypeName: String
  Description: String
  PolicyAttributeTypeDescriptions: [AwsElbDescribeLoadBalancerPolicyTypesOutputPolicyTypeDescriptionsPolicyAttributeTypeDescriptions]
}

type AwsElbDescribeLoadBalancerPolicyTypesOutputPolicyTypeDescriptionsPolicyAttributeTypeDescriptions {
  AttributeName: String
  AttributeType: String
  Description: String
  DefaultValue: String
  Cardinality: String
}

input AwsElbDescribeLoadBalancersInput {
  LoadBalancerNames: [String]
  Marker: String
  PageSize: Int
}

type AwsElbDescribeLoadBalancersOutput {
  LoadBalancerDescriptions: [AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptions]
  NextMarker: String
}

type AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptions {
  LoadBalancerName: String
  DNSName: String
  CanonicalHostedZoneName: String
  CanonicalHostedZoneNameID: String
  ListenerDescriptions: [AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptionsListenerDescriptions]
  Policies: AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptionsPolicies
  BackendServerDescriptions: [AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptionsBackendServerDescriptions]
  AvailabilityZones: [String]
  Subnets: [String]
  VPCId: String
  Instances: [AwsElbS1p]
  HealthCheck: AwsElbSi
  SourceSecurityGroup: AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptionsSourceSecurityGroup
  SecurityGroups: [String]
  CreatedTime: Date
  Scheme: String
}

type AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptionsBackendServerDescriptions {
  InstancePort: Int
  PolicyNames: [String]
}

type AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptionsListenerDescriptions {
  Listener: AwsElbSy
  PolicyNames: [String]
}

type AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptionsPolicies {
  AppCookieStickinessPolicies: [AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptionsPoliciesAppCookieStickinessPolicies]
  LBCookieStickinessPolicies: [AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptionsPoliciesLBCookieStickinessPolicies]
  OtherPolicies: [String]
}

type AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptionsPoliciesAppCookieStickinessPolicies {
  PolicyName: String
  CookieName: String
}

type AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptionsPoliciesLBCookieStickinessPolicies {
  PolicyName: String
  CookieExpirationPeriod: JSON
}

type AwsElbDescribeLoadBalancersOutputLoadBalancerDescriptionsSourceSecurityGroup {
  OwnerAlias: String
  GroupName: String
}

input AwsElbDescribeTagsInput {
  LoadBalancerNames: [String]!
}

type AwsElbDescribeTagsOutput {
  TagDescriptions: [AwsElbDescribeTagsOutputTagDescriptions]
}

type AwsElbDescribeTagsOutputTagDescriptions {
  LoadBalancerName: String
  Tags: [AwsElbS4]
}

input AwsElbDetachLoadBalancerFromSubnetsInput {
  LoadBalancerName: String!
  Subnets: [String]!
}

type AwsElbDetachLoadBalancerFromSubnetsOutput {
  Subnets: [String]
}

input AwsElbDisableAvailabilityZonesForLoadBalancerInput {
  LoadBalancerName: String!
  AvailabilityZones: [String]!
}

type AwsElbDisableAvailabilityZonesForLoadBalancerOutput {
  AvailabilityZones: [String]
}

input AwsElbEnableAvailabilityZonesForLoadBalancerInput {
  LoadBalancerName: String!
  AvailabilityZones: [String]!
}

type AwsElbEnableAvailabilityZonesForLoadBalancerOutput {
  AvailabilityZones: [String]
}

input AwsElbModifyLoadBalancerAttributesInput {
  LoadBalancerName: String!
  LoadBalancerAttributes: AwsElbS2aInput!
}

type AwsElbModifyLoadBalancerAttributesOutput {
  LoadBalancerName: String
  LoadBalancerAttributes: AwsElbS2a
}

input AwsElbRegisterInstancesWithLoadBalancerInput {
  LoadBalancerName: String!
  Instances: [AwsElbS1pInput]!
}

type AwsElbRegisterInstancesWithLoadBalancerOutput {
  Instances: [AwsElbS1p]
}

input AwsElbRemoveTagsInput {
  LoadBalancerNames: [String]!
  Tags: [AwsElbRemoveTagsTagsInput]!
}

input AwsElbRemoveTagsTagsInput {
  Key: String
}

type AwsElbS1p {
  InstanceId: String
}

input AwsElbS1pInput {
  InstanceId: String
}

type AwsElbS2a {
  CrossZoneLoadBalancing: AwsElbS2aCrossZoneLoadBalancing
  AccessLog: AwsElbS2aAccessLog
  ConnectionDraining: AwsElbS2aConnectionDraining
  ConnectionSettings: AwsElbS2aConnectionSettings
  AdditionalAttributes: [AwsElbS2aAdditionalAttributes]
}

type AwsElbS2aAccessLog {
  Enabled: Boolean!
  S3BucketName: String
  EmitInterval: Int
  S3BucketPrefix: String
}

input AwsElbS2aAccessLogInput {
  Enabled: Boolean!
  S3BucketName: String
  EmitInterval: Int
  S3BucketPrefix: String
}

type AwsElbS2aAdditionalAttributes {
  Key: String
  Value: String
}

input AwsElbS2aAdditionalAttributesInput {
  Key: String
  Value: String
}

type AwsElbS2aConnectionDraining {
  Enabled: Boolean!
  Timeout: Int
}

input AwsElbS2aConnectionDrainingInput {
  Enabled: Boolean!
  Timeout: Int
}

type AwsElbS2aConnectionSettings {
  IdleTimeout: Int!
}

input AwsElbS2aConnectionSettingsInput {
  IdleTimeout: Int!
}

type AwsElbS2aCrossZoneLoadBalancing {
  Enabled: Boolean!
}

input AwsElbS2aCrossZoneLoadBalancingInput {
  Enabled: Boolean!
}

input AwsElbS2aInput {
  CrossZoneLoadBalancing: AwsElbS2aCrossZoneLoadBalancingInput
  AccessLog: AwsElbS2aAccessLogInput
  ConnectionDraining: AwsElbS2aConnectionDrainingInput
  ConnectionSettings: AwsElbS2aConnectionSettingsInput
  AdditionalAttributes: [AwsElbS2aAdditionalAttributesInput]
}

type AwsElbS4 {
  Key: String!
  Value: String
}

input AwsElbS4Input {
  Key: String!
  Value: String
}

input AwsElbSetLoadBalancerListenerSSLCertificateInput {
  LoadBalancerName: String!
  LoadBalancerPort: Int!
  SSLCertificateId: String!
}

input AwsElbSetLoadBalancerPoliciesForBackendServerInput {
  LoadBalancerName: String!
  InstancePort: Int!
  PolicyNames: [String]!
}

input AwsElbSetLoadBalancerPoliciesOfListenerInput {
  LoadBalancerName: String!
  LoadBalancerPort: Int!
  PolicyNames: [String]!
}

type AwsElbSi {
  Target: String!
  Interval: Int!
  Timeout: Int!
  UnhealthyThreshold: Int!
  HealthyThreshold: Int!
}

input AwsElbSiInput {
  Target: String!
  Interval: Int!
  Timeout: Int!
  UnhealthyThreshold: Int!
  HealthyThreshold: Int!
}

type AwsElbSy {
  Protocol: String!
  LoadBalancerPort: Int!
  InstanceProtocol: String
  InstancePort: Int!
  SSLCertificateId: String
}

input AwsElbSyInput {
  Protocol: String!
  LoadBalancerPort: Int!
  InstanceProtocol: String
  InstancePort: Int!
  SSLCertificateId: String
}

# Elastic Load Balancing (2015-12-01)
type AwsElbv2 {
  # elbv2.AddListenerCertificates
  AddListenerCertificates(input: AwsElbv2AddListenerCertificatesInput!): AwsElbv2AddListenerCertificatesOutput

  # elbv2.AddTags
  AddTags(input: AwsElbv2AddTagsInput!): JSON

  # elbv2.CreateListener
  CreateListener(input: AwsElbv2CreateListenerInput!): AwsElbv2CreateListenerOutput

  # elbv2.CreateLoadBalancer
  CreateLoadBalancer(input: AwsElbv2CreateLoadBalancerInput!): AwsElbv2CreateLoadBalancerOutput

  # elbv2.CreateRule
  CreateRule(input: AwsElbv2CreateRuleInput!): AwsElbv2CreateRuleOutput

  # elbv2.CreateTargetGroup
  CreateTargetGroup(input: AwsElbv2CreateTargetGroupInput!): AwsElbv2CreateTargetGroupOutput

  # elbv2.DeleteListener
  DeleteListener(input: AwsElbv2DeleteListenerInput!): JSON

  # elbv2.DeleteLoadBalancer
  DeleteLoadBalancer(input: AwsElbv2DeleteLoadBalancerInput!): JSON

  # elbv2.DeleteRule
  DeleteRule(input: AwsElbv2DeleteRuleInput!): JSON

  # elbv2.DeleteTargetGroup
  DeleteTargetGroup(input: AwsElbv2DeleteTargetGroupInput!): JSON

  # elbv2.DeregisterTargets
  DeregisterTargets(input: AwsElbv2DeregisterTargetsInput!): JSON

  # elbv2.DescribeAccountLimits
  DescribeAccountLimits(input: AwsElbv2DescribeAccountLimitsInput): AwsElbv2DescribeAccountLimitsOutput

  # elbv2.DescribeListenerCertificates
  DescribeListenerCertificates(input: AwsElbv2DescribeListenerCertificatesInput!): AwsElbv2DescribeListenerCertificatesOutput

  # elbv2.DescribeListeners
  DescribeListeners(input: AwsElbv2DescribeListenersInput): AwsElbv2DescribeListenersOutput

  # elbv2.DescribeLoadBalancerAttributes
  DescribeLoadBalancerAttributes(input: AwsElbv2DescribeLoadBalancerAttributesInput!): AwsElbv2DescribeLoadBalancerAttributesOutput

  # elbv2.DescribeLoadBalancers
  DescribeLoadBalancers(input: AwsElbv2DescribeLoadBalancersInput): AwsElbv2DescribeLoadBalancersOutput

  # elbv2.DescribeRules
  DescribeRules(input: AwsElbv2DescribeRulesInput): AwsElbv2DescribeRulesOutput

  # elbv2.DescribeSSLPolicies
  DescribeSSLPolicies(input: AwsElbv2DescribeSSLPoliciesInput): AwsElbv2DescribeSSLPoliciesOutput

  # elbv2.DescribeTags
  DescribeTags(input: AwsElbv2DescribeTagsInput!): AwsElbv2DescribeTagsOutput

  # elbv2.DescribeTargetGroupAttributes
  DescribeTargetGroupAttributes(input: AwsElbv2DescribeTargetGroupAttributesInput!): AwsElbv2DescribeTargetGroupAttributesOutput

  # elbv2.DescribeTargetGroups
  DescribeTargetGroups(input: AwsElbv2DescribeTargetGroupsInput): AwsElbv2DescribeTargetGroupsOutput

  # elbv2.DescribeTargetHealth
  DescribeTargetHealth(input: AwsElbv2DescribeTargetHealthInput!): AwsElbv2DescribeTargetHealthOutput

  # elbv2.ModifyListener
  ModifyListener(input: AwsElbv2ModifyListenerInput!): AwsElbv2ModifyListenerOutput

  # elbv2.ModifyLoadBalancerAttributes
  ModifyLoadBalancerAttributes(input: AwsElbv2ModifyLoadBalancerAttributesInput!): AwsElbv2ModifyLoadBalancerAttributesOutput

  # elbv2.ModifyRule
  ModifyRule(input: AwsElbv2ModifyRuleInput!): AwsElbv2ModifyRuleOutput

  # elbv2.ModifyTargetGroup
  ModifyTargetGroup(input: AwsElbv2ModifyTargetGroupInput!): AwsElbv2ModifyTargetGroupOutput

  # elbv2.ModifyTargetGroupAttributes
  ModifyTargetGroupAttributes(input: AwsElbv2ModifyTargetGroupAttributesInput!): AwsElbv2ModifyTargetGroupAttributesOutput

  # elbv2.RegisterTargets
  RegisterTargets(input: AwsElbv2RegisterTargetsInput!): JSON

  # elbv2.RemoveListenerCertificates
  RemoveListenerCertificates(input: AwsElbv2RemoveListenerCertificatesInput!): JSON

  # elbv2.RemoveTags
  RemoveTags(input: AwsElbv2RemoveTagsInput!): JSON

  # elbv2.SetIpAddressType
  SetIpAddressType(input: AwsElbv2SetIpAddressTypeInput!): AwsElbv2SetIpAddressTypeOutput

  # elbv2.SetRulePriorities
  SetRulePriorities(input: AwsElbv2SetRulePrioritiesInput!): AwsElbv2SetRulePrioritiesOutput

  # elbv2.SetSecurityGroups
  SetSecurityGroups(input: AwsElbv2SetSecurityGroupsInput!): AwsElbv2SetSecurityGroupsOutput

  # elbv2.SetSubnets
  SetSubnets(input: AwsElbv2SetSubnetsInput!): AwsElbv2SetSubnetsOutput
}

input AwsElbv2AddListenerCertificatesInput {
  ListenerArn: String!
  Certificates: [AwsElbv2S3Input]!
}

type AwsElbv2AddListenerCertificatesOutput {
  Certificates: [AwsElbv2S3]
}

input AwsElbv2AddTagsInput {
  ResourceArns: [String]!
  Tags: [AwsElbv2SbInput]!
}

input AwsElbv2CreateListenerInput {
  LoadBalancerArn: String!
  Protocol: String!
  Port: Int!
  SslPolicy: String
  Certificates: [AwsElbv2S3Input]
  DefaultActions: [AwsElbv2SlInput]!
}

type AwsElbv2CreateListenerOutput {
  Listeners: [AwsElbv2Sq]
}

input AwsElbv2CreateLoadBalancerInput {
  Name: String!
  Subnets: [String]
  SubnetMappings: [AwsElbv2SwInput]
  SecurityGroups: [String]
  Scheme: String
  Tags: [AwsElbv2SbInput]
  Type: String
  IpAddressType: String
}

type AwsElbv2CreateLoadBalancerOutput {
  LoadBalancers: [AwsElbv2S15]
}

input AwsElbv2CreateRuleInput {
  ListenerArn: String!
  Conditions: [AwsElbv2S1lInput]!
  Priority: Int!
  Actions: [AwsElbv2SlInput]!
}

type AwsElbv2CreateRuleOutput {
  Rules: [AwsElbv2S1s]
}

input AwsElbv2CreateTargetGroupInput {
  Name: String!
  Protocol: String!
  Port: Int!
  VpcId: String!
  HealthCheckProtocol: String
  HealthCheckPort: String
  HealthCheckPath: String
  HealthCheckIntervalSeconds: Int
  HealthCheckTimeoutSeconds: Int
  HealthyThresholdCount: Int
  UnhealthyThresholdCount: Int
  Matcher: AwsElbv2S24Input
  TargetType: String
}

type AwsElbv2CreateTargetGroupOutput {
  TargetGroups: [AwsElbv2S28]
}

input AwsElbv2DeleteListenerInput {
  ListenerArn: String!
}

input AwsElbv2DeleteLoadBalancerInput {
  LoadBalancerArn: String!
}

input AwsElbv2DeleteRuleInput {
  RuleArn: String!
}

input AwsElbv2DeleteTargetGroupInput {
  TargetGroupArn: String!
}

input AwsElbv2DeregisterTargetsInput {
  TargetGroupArn: String!
  Targets: [AwsElbv2S2lInput]!
}

input AwsElbv2DescribeAccountLimitsInput {
  Marker: String
  PageSize: Int
}

type AwsElbv2DescribeAccountLimitsOutput {
  Limits: [AwsElbv2DescribeAccountLimitsOutputLimits]
  NextMarker: String
}

type AwsElbv2DescribeAccountLimitsOutputLimits {
  Name: String
  Max: String
}

input AwsElbv2DescribeListenerCertificatesInput {
  ListenerArn: String!
  Marker: String
  PageSize: Int
}

type AwsElbv2DescribeListenerCertificatesOutput {
  Certificates: [AwsElbv2S3]
  NextMarker: String
}

input AwsElbv2DescribeListenersInput {
  LoadBalancerArn: String
  ListenerArns: [String]
  Marker: String
  PageSize: Int
}

type AwsElbv2DescribeListenersOutput {
  Listeners: [AwsElbv2Sq]
  NextMarker: String
}

input AwsElbv2DescribeLoadBalancerAttributesInput {
  LoadBalancerArn: String!
}

type AwsElbv2DescribeLoadBalancerAttributesOutput {
  Attributes: [AwsElbv2S33]
}

input AwsElbv2DescribeLoadBalancersInput {
  LoadBalancerArns: [String]
  Names: [String]
  Marker: String
  PageSize: Int
}

type AwsElbv2DescribeLoadBalancersOutput {
  LoadBalancers: [AwsElbv2S15]
  NextMarker: String
}

input AwsElbv2DescribeRulesInput {
  ListenerArn: String
  RuleArns: [String]
  Marker: String
  PageSize: Int
}

type AwsElbv2DescribeRulesOutput {
  Rules: [AwsElbv2S1s]
  NextMarker: String
}

input AwsElbv2DescribeSSLPoliciesInput {
  Names: [String]
  Marker: String
  PageSize: Int
}

type AwsElbv2DescribeSSLPoliciesOutput {
  SslPolicies: [AwsElbv2DescribeSSLPoliciesOutputSslPolicies]
  NextMarker: String
}

type AwsElbv2DescribeSSLPoliciesOutputSslPolicies {
  SslProtocols: [String]
  Ciphers: [AwsElbv2DescribeSSLPoliciesOutputSslPoliciesCiphers]
  Name: String
}

type AwsElbv2DescribeSSLPoliciesOutputSslPoliciesCiphers {
  Name: String
  Priority: Int
}

input AwsElbv2DescribeTagsInput {
  ResourceArns: [String]!
}

type AwsElbv2DescribeTagsOutput {
  TagDescriptions: [AwsElbv2DescribeTagsOutputTagDescriptions]
}

type AwsElbv2DescribeTagsOutputTagDescriptions {
  ResourceArn: String
  Tags: [AwsElbv2Sb]
}

input AwsElbv2DescribeTargetGroupAttributesInput {
  TargetGroupArn: String!
}

type AwsElbv2DescribeTargetGroupAttributesOutput {
  Attributes: [AwsElbv2S3u]
}

input AwsElbv2DescribeTargetGroupsInput {
  LoadBalancerArn: String
  TargetGroupArns: [String]
  Names: [String]
  Marker: String
  PageSize: Int
}

type AwsElbv2DescribeTargetGroupsOutput {
  TargetGroups: [AwsElbv2S28]
  NextMarker: String
}

input AwsElbv2DescribeTargetHealthInput {
  TargetGroupArn: String!
  Targets: [AwsElbv2S2lInput]
}

type AwsElbv2DescribeTargetHealthOutput {
  TargetHealthDescriptions: [AwsElbv2DescribeTargetHealthOutputTargetHealthDescriptions]
}

type AwsElbv2DescribeTargetHealthOutputTargetHealthDescriptions {
  Target: AwsElbv2S2l
  HealthCheckPort: String
  TargetHealth: AwsElbv2DescribeTargetHealthOutputTargetHealthDescriptionsTargetHealth
}

type AwsElbv2DescribeTargetHealthOutputTargetHealthDescriptionsTargetHealth {
  State: String
  Reason: String
  Description: String
}

input AwsElbv2ModifyListenerInput {
  ListenerArn: String!
  Port: Int
  Protocol: String
  SslPolicy: String
  Certificates: [AwsElbv2S3Input]
  DefaultActions: [AwsElbv2SlInput]
}

type AwsElbv2ModifyListenerOutput {
  Listeners: [AwsElbv2Sq]
}

input AwsElbv2ModifyLoadBalancerAttributesInput {
  LoadBalancerArn: String!
  Attributes: [AwsElbv2S33Input]!
}

type AwsElbv2ModifyLoadBalancerAttributesOutput {
  Attributes: [AwsElbv2S33]
}

input AwsElbv2ModifyRuleInput {
  RuleArn: String!
  Conditions: [AwsElbv2S1lInput]
  Actions: [AwsElbv2SlInput]
}

type AwsElbv2ModifyRuleOutput {
  Rules: [AwsElbv2S1s]
}

input AwsElbv2ModifyTargetGroupAttributesInput {
  TargetGroupArn: String!
  Attributes: [AwsElbv2S3uInput]!
}

type AwsElbv2ModifyTargetGroupAttributesOutput {
  Attributes: [AwsElbv2S3u]
}

input AwsElbv2ModifyTargetGroupInput {
  TargetGroupArn: String!
  HealthCheckProtocol: String
  HealthCheckPort: String
  HealthCheckPath: String
  HealthCheckIntervalSeconds: Int
  HealthCheckTimeoutSeconds: Int
  HealthyThresholdCount: Int
  UnhealthyThresholdCount: Int
  Matcher: AwsElbv2S24Input
}

type AwsElbv2ModifyTargetGroupOutput {
  TargetGroups: [AwsElbv2S28]
}

input AwsElbv2RegisterTargetsInput {
  TargetGroupArn: String!
  Targets: [AwsElbv2S2lInput]!
}

input AwsElbv2RemoveListenerCertificatesInput {
  ListenerArn: String!
  Certificates: [AwsElbv2S3Input]!
}

input AwsElbv2RemoveTagsInput {
  ResourceArns: [String]!
  TagKeys: [String]!
}

type AwsElbv2S15 {
  LoadBalancerArn: String
  DNSName: String
  CanonicalHostedZoneId: String
  CreatedTime: Date
  LoadBalancerName: String
  Scheme: String
  VpcId: String
  State: AwsElbv2S15State
  Type: String
  AvailabilityZones: [AwsElbv2S1e]
  SecurityGroups: [String]
  IpAddressType: String
}

type AwsElbv2S15State {
  Code: String
  Reason: String
}

type AwsElbv2S1e {
  ZoneName: String
  SubnetId: String
  LoadBalancerAddresses: [AwsElbv2S1eLoadBalancerAddresses]
}

type AwsElbv2S1eLoadBalancerAddresses {
  IpAddress: String
  AllocationId: String
}

type AwsElbv2S1l {
  Field: String
  Values: [String]
}

input AwsElbv2S1lInput {
  Field: String
  Values: [String]
}

type AwsElbv2S1s {
  RuleArn: String
  Priority: String
  Conditions: [AwsElbv2S1l]
  Actions: [AwsElbv2Sl]
  IsDefault: Boolean
}

type AwsElbv2S24 {
  HttpCode: String!
}

input AwsElbv2S24Input {
  HttpCode: String!
}

type AwsElbv2S28 {
  TargetGroupArn: String
  TargetGroupName: String
  Protocol: String
  Port: Int
  VpcId: String
  HealthCheckProtocol: String
  HealthCheckPort: String
  HealthCheckIntervalSeconds: Int
  HealthCheckTimeoutSeconds: Int
  HealthyThresholdCount: Int
  UnhealthyThresholdCount: Int
  HealthCheckPath: String
  Matcher: AwsElbv2S24
  LoadBalancerArns: [String]
  TargetType: String
}

type AwsElbv2S2l {
  Id: String!
  Port: Int
  AvailabilityZone: String
}

input AwsElbv2S2lInput {
  Id: String!
  Port: Int
  AvailabilityZone: String
}

type AwsElbv2S3 {
  CertificateArn: String
  IsDefault: Boolean
}

type AwsElbv2S33 {
  Key: String
  Value: String
}

input AwsElbv2S33Input {
  Key: String
  Value: String
}

input AwsElbv2S3Input {
  CertificateArn: String
  IsDefault: Boolean
}

type AwsElbv2S3u {
  Key: String
  Value: String
}

input AwsElbv2S3uInput {
  Key: String
  Value: String
}

type AwsElbv2Sb {
  Key: String!
  Value: String
}

input AwsElbv2SbInput {
  Key: String!
  Value: String
}

input AwsElbv2SetIpAddressTypeInput {
  LoadBalancerArn: String!
  IpAddressType: String!
}

type AwsElbv2SetIpAddressTypeOutput {
  IpAddressType: String
}

input AwsElbv2SetRulePrioritiesInput {
  RulePriorities: [AwsElbv2SetRulePrioritiesRulePrioritiesInput]!
}

type AwsElbv2SetRulePrioritiesOutput {
  Rules: [AwsElbv2S1s]
}

input AwsElbv2SetRulePrioritiesRulePrioritiesInput {
  RuleArn: String
  Priority: Int
}

input AwsElbv2SetSecurityGroupsInput {
  LoadBalancerArn: String!
  SecurityGroups: [String]!
}

type AwsElbv2SetSecurityGroupsOutput {
  SecurityGroupIds: [String]
}

input AwsElbv2SetSubnetsInput {
  LoadBalancerArn: String!
  Subnets: [String]!
  SubnetMappings: [AwsElbv2SwInput]
}

type AwsElbv2SetSubnetsOutput {
  AvailabilityZones: [AwsElbv2S1e]
}

type AwsElbv2Sl {
  Type: String!
  TargetGroupArn: String!
}

input AwsElbv2SlInput {
  Type: String!
  TargetGroupArn: String!
}

type AwsElbv2Sq {
  ListenerArn: String
  LoadBalancerArn: String
  Port: Int
  Protocol: String
  Certificates: [AwsElbv2S3]
  SslPolicy: String
  DefaultActions: [AwsElbv2Sl]
}

input AwsElbv2SwInput {
  SubnetId: String
  AllocationId: String
}

# Amazon Elastic MapReduce (2009-03-31)
type AwsEmr {
  # emr.AddInstanceFleet
  AddInstanceFleet(input: AwsEmrAddInstanceFleetInput!): AwsEmrAddInstanceFleetOutput

  # emr.AddInstanceGroups
  AddInstanceGroups(input: AwsEmrAddInstanceGroupsInput!): AwsEmrAddInstanceGroupsOutput

  # emr.AddJobFlowSteps
  AddJobFlowSteps(input: AwsEmrAddJobFlowStepsInput!): AwsEmrAddJobFlowStepsOutput

  # emr.AddTags
  AddTags(input: AwsEmrAddTagsInput!): JSON

  # emr.CancelSteps
  CancelSteps(input: AwsEmrCancelStepsInput): AwsEmrCancelStepsOutput

  # emr.CreateSecurityConfiguration
  CreateSecurityConfiguration(input: AwsEmrCreateSecurityConfigurationInput!): AwsEmrCreateSecurityConfigurationOutput

  # emr.DeleteSecurityConfiguration
  DeleteSecurityConfiguration(input: AwsEmrDeleteSecurityConfigurationInput!): JSON

  # emr.DescribeCluster
  DescribeCluster(input: AwsEmrDescribeClusterInput!): AwsEmrDescribeClusterOutput

  # emr.DescribeJobFlows
  DescribeJobFlows(input: AwsEmrDescribeJobFlowsInput): AwsEmrDescribeJobFlowsOutput

  # emr.DescribeSecurityConfiguration
  DescribeSecurityConfiguration(input: AwsEmrDescribeSecurityConfigurationInput!): AwsEmrDescribeSecurityConfigurationOutput

  # emr.DescribeStep
  DescribeStep(input: AwsEmrDescribeStepInput!): AwsEmrDescribeStepOutput

  # emr.ListBootstrapActions
  ListBootstrapActions(input: AwsEmrListBootstrapActionsInput!): AwsEmrListBootstrapActionsOutput

  # emr.ListClusters
  ListClusters(input: AwsEmrListClustersInput): AwsEmrListClustersOutput

  # emr.ListInstanceFleets
  ListInstanceFleets(input: AwsEmrListInstanceFleetsInput!): AwsEmrListInstanceFleetsOutput

  # emr.ListInstanceGroups
  ListInstanceGroups(input: AwsEmrListInstanceGroupsInput!): AwsEmrListInstanceGroupsOutput

  # emr.ListInstances
  ListInstances(input: AwsEmrListInstancesInput!): AwsEmrListInstancesOutput

  # emr.ListSecurityConfigurations
  ListSecurityConfigurations(input: AwsEmrListSecurityConfigurationsInput): AwsEmrListSecurityConfigurationsOutput

  # emr.ListSteps
  ListSteps(input: AwsEmrListStepsInput!): AwsEmrListStepsOutput

  # emr.ModifyInstanceFleet
  ModifyInstanceFleet(input: AwsEmrModifyInstanceFleetInput!): JSON

  # emr.ModifyInstanceGroups
  ModifyInstanceGroups(input: AwsEmrModifyInstanceGroupsInput): JSON

  # emr.PutAutoScalingPolicy
  PutAutoScalingPolicy(input: AwsEmrPutAutoScalingPolicyInput!): AwsEmrPutAutoScalingPolicyOutput

  # emr.RemoveAutoScalingPolicy
  RemoveAutoScalingPolicy(input: AwsEmrRemoveAutoScalingPolicyInput!): JSON

  # emr.RemoveTags
  RemoveTags(input: AwsEmrRemoveTagsInput!): JSON

  # emr.RunJobFlow
  RunJobFlow(input: AwsEmrRunJobFlowInput!): AwsEmrRunJobFlowOutput

  # emr.SetTerminationProtection
  SetTerminationProtection(input: AwsEmrSetTerminationProtectionInput!): JSON

  # emr.SetVisibleToAllUsers
  SetVisibleToAllUsers(input: AwsEmrSetVisibleToAllUsersInput!): JSON

  # emr.TerminateJobFlows
  TerminateJobFlows(input: AwsEmrTerminateJobFlowsInput!): JSON
}

input AwsEmrAddInstanceFleetInput {
  ClusterId: String!
  InstanceFleet: AwsEmrS3Input!
}

type AwsEmrAddInstanceFleetOutput {
  ClusterId: String
  InstanceFleetId: String
}

input AwsEmrAddInstanceGroupsInput {
  InstanceGroups: [AwsEmrSqInput]!
  JobFlowId: String!
}

type AwsEmrAddInstanceGroupsOutput {
  JobFlowId: String
  InstanceGroupIds: [String]
}

input AwsEmrAddJobFlowStepsInput {
  JobFlowId: String!
  Steps: [AwsEmrS1cInput]!
}

type AwsEmrAddJobFlowStepsOutput {
  StepIds: [String]
}

input AwsEmrAddTagsInput {
  ResourceId: String!
  Tags: [AwsEmrS1nInput]!
}

input AwsEmrCancelStepsInput {
  ClusterId: String
  StepIds: [String]
}

type AwsEmrCancelStepsOutput {
  CancelStepsInfoList: [AwsEmrCancelStepsOutputCancelStepsInfoList]
}

type AwsEmrCancelStepsOutputCancelStepsInfoList {
  StepId: String
  Status: String
  Reason: String
}

input AwsEmrCreateSecurityConfigurationInput {
  Name: String!
  SecurityConfiguration: String!
}

type AwsEmrCreateSecurityConfigurationOutput {
  Name: String!
  CreationDateTime: Date!
}

input AwsEmrDeleteSecurityConfigurationInput {
  Name: String!
}

input AwsEmrDescribeClusterInput {
  ClusterId: String!
}

type AwsEmrDescribeClusterOutput {
  Cluster: AwsEmrDescribeClusterOutputCluster
}

type AwsEmrDescribeClusterOutputCluster {
  Id: String
  Name: String
  Status: AwsEmrS25
  Ec2InstanceAttributes: AwsEmrDescribeClusterOutputClusterEc2InstanceAttributes
  InstanceCollectionType: String
  LogUri: String
  RequestedAmiVersion: String
  RunningAmiVersion: String
  ReleaseLabel: String
  AutoTerminate: Boolean
  TerminationProtected: Boolean
  VisibleToAllUsers: Boolean
  Applications: [AwsEmrS2f]
  Tags: [AwsEmrS1n]
  ServiceRole: String
  NormalizedInstanceHours: Int
  MasterPublicDnsName: String
  Configurations: [AwsEmrSh]
  SecurityConfiguration: String
  AutoScalingRole: String
  ScaleDownBehavior: String
  CustomAmiId: String
  EbsRootVolumeSize: Int
  RepoUpgradeOnBoot: String
  KerberosAttributes: AwsEmrS2j
}

type AwsEmrDescribeClusterOutputClusterEc2InstanceAttributes {
  Ec2KeyName: String
  Ec2SubnetId: String
  RequestedEc2SubnetIds: [String]
  Ec2AvailabilityZone: String
  RequestedEc2AvailabilityZones: [String]
  IamInstanceProfile: String
  EmrManagedMasterSecurityGroup: String
  EmrManagedSlaveSecurityGroup: String
  ServiceAccessSecurityGroup: String
  AdditionalMasterSecurityGroups: [String]
  AdditionalSlaveSecurityGroups: [String]
}

input AwsEmrDescribeJobFlowsInput {
  CreatedAfter: Date
  CreatedBefore: Date
  JobFlowIds: [String]
  JobFlowStates: [String]
}

type AwsEmrDescribeJobFlowsOutput {
  JobFlows: [AwsEmrDescribeJobFlowsOutputJobFlows]
}

type AwsEmrDescribeJobFlowsOutputJobFlows {
  JobFlowId: String!
  Name: String!
  LogUri: String
  AmiVersion: String
  ExecutionStatusDetail: AwsEmrDescribeJobFlowsOutputJobFlowsExecutionStatusDetail!
  Instances: AwsEmrDescribeJobFlowsOutputJobFlowsInstances!
  Steps: [AwsEmrDescribeJobFlowsOutputJobFlowsSteps]
  BootstrapActions: [AwsEmrDescribeJobFlowsOutputJobFlowsBootstrapActions]
  SupportedProducts: [String]
  VisibleToAllUsers: Boolean
  JobFlowRole: String
  ServiceRole: String
  AutoScalingRole: String
  ScaleDownBehavior: String
}

type AwsEmrDescribeJobFlowsOutputJobFlowsBootstrapActions {
  BootstrapActionConfig: AwsEmrS32
}

type AwsEmrDescribeJobFlowsOutputJobFlowsExecutionStatusDetail {
  State: String!
  CreationDateTime: Date!
  StartDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
  LastStateChangeReason: String
}

type AwsEmrDescribeJobFlowsOutputJobFlowsInstances {
  MasterInstanceType: String!
  MasterPublicDnsName: String
  MasterInstanceId: String
  SlaveInstanceType: String!
  InstanceCount: Int!
  InstanceGroups: [AwsEmrDescribeJobFlowsOutputJobFlowsInstancesInstanceGroups]
  NormalizedInstanceHours: Int
  Ec2KeyName: String
  Ec2SubnetId: String
  Placement: AwsEmrS2v
  KeepJobFlowAliveWhenNoSteps: Boolean
  TerminationProtected: Boolean
  HadoopVersion: String
}

type AwsEmrDescribeJobFlowsOutputJobFlowsInstancesInstanceGroups {
  InstanceGroupId: String
  Name: String
  Market: String!
  InstanceRole: String!
  BidPrice: String
  InstanceType: String!
  InstanceRequestCount: Int!
  InstanceRunningCount: Int!
  State: String!
  LastStateChangeReason: String
  CreationDateTime: Date!
  StartDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

type AwsEmrDescribeJobFlowsOutputJobFlowsSteps {
  StepConfig: AwsEmrS1c!
  ExecutionStatusDetail: AwsEmrDescribeJobFlowsOutputJobFlowsStepsExecutionStatusDetail!
}

type AwsEmrDescribeJobFlowsOutputJobFlowsStepsExecutionStatusDetail {
  State: String!
  CreationDateTime: Date!
  StartDateTime: Date
  EndDateTime: Date
  LastStateChangeReason: String
}

input AwsEmrDescribeSecurityConfigurationInput {
  Name: String!
}

type AwsEmrDescribeSecurityConfigurationOutput {
  Name: String
  SecurityConfiguration: String
  CreationDateTime: Date
}

input AwsEmrDescribeStepInput {
  ClusterId: String!
  StepId: String!
}

type AwsEmrDescribeStepOutput {
  Step: AwsEmrDescribeStepOutputStep
}

type AwsEmrDescribeStepOutputStep {
  Id: String
  Name: String
  Config: AwsEmrS3a
  ActionOnFailure: String
  Status: AwsEmrS3b
}

input AwsEmrListBootstrapActionsInput {
  ClusterId: String!
  Marker: String
}

type AwsEmrListBootstrapActionsOutput {
  BootstrapActions: [AwsEmrListBootstrapActionsOutputBootstrapActions]
  Marker: String
}

type AwsEmrListBootstrapActionsOutputBootstrapActions {
  Name: String
  ScriptPath: String
  Args: [String]
}

input AwsEmrListClustersInput {
  CreatedAfter: Date
  CreatedBefore: Date
  ClusterStates: [String]
  Marker: String
}

type AwsEmrListClustersOutput {
  Clusters: [AwsEmrListClustersOutputClusters]
  Marker: String
}

type AwsEmrListClustersOutputClusters {
  Id: String
  Name: String
  Status: AwsEmrS25
  NormalizedInstanceHours: Int
}

input AwsEmrListInstanceFleetsInput {
  ClusterId: String!
  Marker: String
}

type AwsEmrListInstanceFleetsOutput {
  InstanceFleets: [AwsEmrListInstanceFleetsOutputInstanceFleets]
  Marker: String
}

type AwsEmrListInstanceFleetsOutputInstanceFleets {
  Id: String
  Name: String
  Status: AwsEmrListInstanceFleetsOutputInstanceFleetsStatus
  InstanceFleetType: String
  TargetOnDemandCapacity: Int
  TargetSpotCapacity: Int
  ProvisionedOnDemandCapacity: Int
  ProvisionedSpotCapacity: Int
  InstanceTypeSpecifications: [AwsEmrListInstanceFleetsOutputInstanceFleetsInstanceTypeSpecifications]
  LaunchSpecifications: AwsEmrSk
}

type AwsEmrListInstanceFleetsOutputInstanceFleetsInstanceTypeSpecifications {
  InstanceType: String
  WeightedCapacity: Int
  BidPrice: String
  BidPriceAsPercentageOfOnDemandPrice: JSON
  Configurations: [AwsEmrSh]
  EbsBlockDevices: [AwsEmrS42]
  EbsOptimized: Boolean
}

type AwsEmrListInstanceFleetsOutputInstanceFleetsStatus {
  State: String
  StateChangeReason: AwsEmrListInstanceFleetsOutputInstanceFleetsStatusStateChangeReason
  Timeline: AwsEmrListInstanceFleetsOutputInstanceFleetsStatusTimeline
}

type AwsEmrListInstanceFleetsOutputInstanceFleetsStatusStateChangeReason {
  Code: String
  Message: String
}

type AwsEmrListInstanceFleetsOutputInstanceFleetsStatusTimeline {
  CreationDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

input AwsEmrListInstanceGroupsInput {
  ClusterId: String!
  Marker: String
}

type AwsEmrListInstanceGroupsOutput {
  InstanceGroups: [AwsEmrListInstanceGroupsOutputInstanceGroups]
  Marker: String
}

type AwsEmrListInstanceGroupsOutputInstanceGroups {
  Id: String
  Name: String
  Market: String
  InstanceGroupType: String
  BidPrice: String
  InstanceType: String
  RequestedInstanceCount: Int
  RunningInstanceCount: Int
  Status: AwsEmrListInstanceGroupsOutputInstanceGroupsStatus
  Configurations: [AwsEmrSh]
  EbsBlockDevices: [AwsEmrS42]
  EbsOptimized: Boolean
  ShrinkPolicy: AwsEmrS4e
  AutoScalingPolicy: AwsEmrS4i
}

type AwsEmrListInstanceGroupsOutputInstanceGroupsStatus {
  State: String
  StateChangeReason: AwsEmrListInstanceGroupsOutputInstanceGroupsStatusStateChangeReason
  Timeline: AwsEmrListInstanceGroupsOutputInstanceGroupsStatusTimeline
}

type AwsEmrListInstanceGroupsOutputInstanceGroupsStatusStateChangeReason {
  Code: String
  Message: String
}

type AwsEmrListInstanceGroupsOutputInstanceGroupsStatusTimeline {
  CreationDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

input AwsEmrListInstancesInput {
  ClusterId: String!
  InstanceGroupId: String
  InstanceGroupTypes: [String]
  InstanceFleetId: String
  InstanceFleetType: String
  InstanceStates: [String]
  Marker: String
}

type AwsEmrListInstancesOutput {
  Instances: [AwsEmrListInstancesOutputInstances]
  Marker: String
}

type AwsEmrListInstancesOutputInstances {
  Id: String
  Ec2InstanceId: String
  PublicDnsName: String
  PublicIpAddress: String
  PrivateDnsName: String
  PrivateIpAddress: String
  Status: AwsEmrListInstancesOutputInstancesStatus
  InstanceGroupId: String
  InstanceFleetId: String
  Market: String
  InstanceType: String
  EbsVolumes: [AwsEmrListInstancesOutputInstancesEbsVolumes]
}

type AwsEmrListInstancesOutputInstancesEbsVolumes {
  Device: String
  VolumeId: String
}

type AwsEmrListInstancesOutputInstancesStatus {
  State: String
  StateChangeReason: AwsEmrListInstancesOutputInstancesStatusStateChangeReason
  Timeline: AwsEmrListInstancesOutputInstancesStatusTimeline
}

type AwsEmrListInstancesOutputInstancesStatusStateChangeReason {
  Code: String
  Message: String
}

type AwsEmrListInstancesOutputInstancesStatusTimeline {
  CreationDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

input AwsEmrListSecurityConfigurationsInput {
  Marker: String
}

type AwsEmrListSecurityConfigurationsOutput {
  SecurityConfigurations: [AwsEmrListSecurityConfigurationsOutputSecurityConfigurations]
  Marker: String
}

type AwsEmrListSecurityConfigurationsOutputSecurityConfigurations {
  Name: String
  CreationDateTime: Date
}

input AwsEmrListStepsInput {
  ClusterId: String!
  StepStates: [String]
  StepIds: [String]
  Marker: String
}

type AwsEmrListStepsOutput {
  Steps: [AwsEmrListStepsOutputSteps]
  Marker: String
}

type AwsEmrListStepsOutputSteps {
  Id: String
  Name: String
  Config: AwsEmrS3a
  ActionOnFailure: String
  Status: AwsEmrS3b
}

input AwsEmrModifyInstanceFleetInput {
  ClusterId: String!
  InstanceFleet: AwsEmrModifyInstanceFleetInstanceFleetInput!
}

input AwsEmrModifyInstanceFleetInstanceFleetInput {
  InstanceFleetId: String!
  TargetOnDemandCapacity: Int
  TargetSpotCapacity: Int
}

input AwsEmrModifyInstanceGroupsInput {
  ClusterId: String
  InstanceGroups: [AwsEmrModifyInstanceGroupsInstanceGroupsInput]
}

input AwsEmrModifyInstanceGroupsInstanceGroupsInput {
  InstanceGroupId: String!
  InstanceCount: Int
  EC2InstanceIdsToTerminate: [String]
  ShrinkPolicy: AwsEmrS4eInput
}

input AwsEmrPutAutoScalingPolicyInput {
  ClusterId: String!
  InstanceGroupId: String!
  AutoScalingPolicy: AwsEmrSuInput!
}

type AwsEmrPutAutoScalingPolicyOutput {
  ClusterId: String
  InstanceGroupId: String
  AutoScalingPolicy: AwsEmrS4i
}

input AwsEmrRemoveAutoScalingPolicyInput {
  ClusterId: String!
  InstanceGroupId: String!
}

input AwsEmrRemoveTagsInput {
  ResourceId: String!
  TagKeys: [String]!
}

input AwsEmrRunJobFlowInput {
  Name: String!
  LogUri: String
  AdditionalInfo: String
  AmiVersion: String
  ReleaseLabel: String
  Instances: AwsEmrRunJobFlowInstancesInput!
  Steps: [AwsEmrS1cInput]
  BootstrapActions: [AwsEmrS32Input]
  SupportedProducts: [String]
  NewSupportedProducts: [AwsEmrRunJobFlowNewSupportedProductsInput]
  Applications: [AwsEmrS2fInput]
  Configurations: [AwsEmrShInput]
  VisibleToAllUsers: Boolean
  JobFlowRole: String
  ServiceRole: String
  Tags: [AwsEmrS1nInput]
  SecurityConfiguration: String
  AutoScalingRole: String
  ScaleDownBehavior: String
  CustomAmiId: String
  EbsRootVolumeSize: Int
  RepoUpgradeOnBoot: String
  KerberosAttributes: AwsEmrS2jInput
}

input AwsEmrRunJobFlowInstancesInput {
  MasterInstanceType: String
  SlaveInstanceType: String
  InstanceCount: Int
  InstanceGroups: [AwsEmrSqInput]
  InstanceFleets: [AwsEmrS3Input]
  Ec2KeyName: String
  Placement: AwsEmrS2vInput
  KeepJobFlowAliveWhenNoSteps: Boolean
  TerminationProtected: Boolean
  HadoopVersion: String
  Ec2SubnetId: String
  Ec2SubnetIds: [String]
  EmrManagedMasterSecurityGroup: String
  EmrManagedSlaveSecurityGroup: String
  ServiceAccessSecurityGroup: String
  AdditionalMasterSecurityGroups: [String]
  AdditionalSlaveSecurityGroups: [String]
}

input AwsEmrRunJobFlowNewSupportedProductsInput {
  Name: String
  Args: [String]
}

type AwsEmrRunJobFlowOutput {
  JobFlowId: String
}

type AwsEmrS1c {
  Name: String!
  ActionOnFailure: String
  HadoopJarStep: AwsEmrS1cHadoopJarStep!
}

type AwsEmrS1cHadoopJarStep {
  Properties: [AwsEmrS1cHadoopJarStepProperties]
  Jar: String!
  MainClass: String
  Args: [String]
}

input AwsEmrS1cHadoopJarStepInput {
  Properties: [AwsEmrS1cHadoopJarStepPropertiesInput]
  Jar: String!
  MainClass: String
  Args: [String]
}

type AwsEmrS1cHadoopJarStepProperties {
  Key: String
  Value: String
}

input AwsEmrS1cHadoopJarStepPropertiesInput {
  Key: String
  Value: String
}

input AwsEmrS1cInput {
  Name: String!
  ActionOnFailure: String
  HadoopJarStep: AwsEmrS1cHadoopJarStepInput!
}

type AwsEmrS1n {
  Key: String
  Value: String
}

input AwsEmrS1nInput {
  Key: String
  Value: String
}

type AwsEmrS25 {
  State: String
  StateChangeReason: AwsEmrS25StateChangeReason
  Timeline: AwsEmrS25Timeline
}

type AwsEmrS25StateChangeReason {
  Code: String
  Message: String
}

type AwsEmrS25Timeline {
  CreationDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

type AwsEmrS2f {
  Name: String
  Version: String
  Args: [String]
  AdditionalInfo: JSON
}

input AwsEmrS2fInput {
  Name: String
  Version: String
  Args: [String]
  AdditionalInfo: JSON
}

type AwsEmrS2j {
  Realm: String!
  KdcAdminPassword: String!
  CrossRealmTrustPrincipalPassword: String
  ADDomainJoinUser: String
  ADDomainJoinPassword: String
}

input AwsEmrS2jInput {
  Realm: String!
  KdcAdminPassword: String!
  CrossRealmTrustPrincipalPassword: String
  ADDomainJoinUser: String
  ADDomainJoinPassword: String
}

type AwsEmrS2v {
  AvailabilityZone: String
  AvailabilityZones: [String]
}

input AwsEmrS2vInput {
  AvailabilityZone: String
  AvailabilityZones: [String]
}

type AwsEmrS32 {
  Name: String!
  ScriptBootstrapAction: AwsEmrS32ScriptBootstrapAction!
}

input AwsEmrS32Input {
  Name: String!
  ScriptBootstrapAction: AwsEmrS32ScriptBootstrapActionInput!
}

type AwsEmrS32ScriptBootstrapAction {
  Path: String!
  Args: [String]
}

input AwsEmrS32ScriptBootstrapActionInput {
  Path: String!
  Args: [String]
}

type AwsEmrS3a {
  Jar: String
  Properties: JSON
  MainClass: String
  Args: [String]
}

type AwsEmrS3b {
  State: String
  StateChangeReason: AwsEmrS3bStateChangeReason
  FailureDetails: AwsEmrS3bFailureDetails
  Timeline: AwsEmrS3bTimeline
}

type AwsEmrS3bFailureDetails {
  Reason: String
  Message: String
  LogFile: String
}

type AwsEmrS3bStateChangeReason {
  Code: String
  Message: String
}

type AwsEmrS3bTimeline {
  CreationDateTime: Date
  StartDateTime: Date
  EndDateTime: Date
}

input AwsEmrS3Input {
  Name: String
  InstanceFleetType: String!
  TargetOnDemandCapacity: Int
  TargetSpotCapacity: Int
  InstanceTypeConfigs: [AwsEmrS3InstanceTypeConfigsInput]
  LaunchSpecifications: AwsEmrSkInput
}

input AwsEmrS3InstanceTypeConfigsInput {
  InstanceType: String!
  WeightedCapacity: Int
  BidPrice: String
  BidPriceAsPercentageOfOnDemandPrice: JSON
  EbsConfiguration: AwsEmrSaInput
  Configurations: [AwsEmrShInput]
}

type AwsEmrS42 {
  VolumeSpecification: AwsEmrSd
  Device: String
}

type AwsEmrS4e {
  DecommissionTimeout: Int
  InstanceResizePolicy: AwsEmrS4eInstanceResizePolicy
}

input AwsEmrS4eInput {
  DecommissionTimeout: Int
  InstanceResizePolicy: AwsEmrS4eInstanceResizePolicyInput
}

type AwsEmrS4eInstanceResizePolicy {
  InstancesToTerminate: [String]
  InstancesToProtect: [String]
  InstanceTerminationTimeout: Int
}

input AwsEmrS4eInstanceResizePolicyInput {
  InstancesToTerminate: [String]
  InstancesToProtect: [String]
  InstanceTerminationTimeout: Int
}

type AwsEmrS4i {
  Status: AwsEmrS4iStatus
  Constraints: AwsEmrSv
  Rules: [AwsEmrSw]
}

type AwsEmrS4iStatus {
  State: String
  StateChangeReason: AwsEmrS4iStatusStateChangeReason
}

type AwsEmrS4iStatusStateChangeReason {
  Code: String
  Message: String
}

input AwsEmrSaEbsBlockDeviceConfigsInput {
  VolumeSpecification: AwsEmrSdInput!
  VolumesPerInstance: Int
}

input AwsEmrSaInput {
  EbsBlockDeviceConfigs: [AwsEmrSaEbsBlockDeviceConfigsInput]
  EbsOptimized: Boolean
}

type AwsEmrSd {
  VolumeType: String!
  Iops: Int
  SizeInGB: Int!
}

input AwsEmrSdInput {
  VolumeType: String!
  Iops: Int
  SizeInGB: Int!
}

input AwsEmrSetTerminationProtectionInput {
  JobFlowIds: [String]!
  TerminationProtected: Boolean!
}

input AwsEmrSetVisibleToAllUsersInput {
  JobFlowIds: [String]!
  VisibleToAllUsers: Boolean!
}

type AwsEmrSh {
  Classification: String
  Configurations: JSON
  Properties: JSON
}

input AwsEmrShInput {
  Classification: String
  Configurations: JSON
  Properties: JSON
}

type AwsEmrSk {
  SpotSpecification: AwsEmrSkSpotSpecification!
}

input AwsEmrSkInput {
  SpotSpecification: AwsEmrSkSpotSpecificationInput!
}

type AwsEmrSkSpotSpecification {
  TimeoutDurationMinutes: Int!
  TimeoutAction: String!
  BlockDurationMinutes: Int
}

input AwsEmrSkSpotSpecificationInput {
  TimeoutDurationMinutes: Int!
  TimeoutAction: String!
  BlockDurationMinutes: Int
}

input AwsEmrSqInput {
  Name: String
  Market: String
  InstanceRole: String!
  BidPrice: String
  InstanceType: String!
  InstanceCount: Int!
  Configurations: [AwsEmrShInput]
  EbsConfiguration: AwsEmrSaInput
  AutoScalingPolicy: AwsEmrSuInput
}

input AwsEmrSuInput {
  Constraints: AwsEmrSvInput!
  Rules: [AwsEmrSwInput]!
}

type AwsEmrSv {
  MinCapacity: Int!
  MaxCapacity: Int!
}

input AwsEmrSvInput {
  MinCapacity: Int!
  MaxCapacity: Int!
}

type AwsEmrSw {
  Name: String!
  Description: String
  Action: AwsEmrSwAction!
  Trigger: AwsEmrSwTrigger!
}

type AwsEmrSwAction {
  Market: String
  SimpleScalingPolicyConfiguration: AwsEmrSwActionSimpleScalingPolicyConfiguration!
}

input AwsEmrSwActionInput {
  Market: String
  SimpleScalingPolicyConfiguration: AwsEmrSwActionSimpleScalingPolicyConfigurationInput!
}

type AwsEmrSwActionSimpleScalingPolicyConfiguration {
  AdjustmentType: String
  ScalingAdjustment: Int!
  CoolDown: Int
}

input AwsEmrSwActionSimpleScalingPolicyConfigurationInput {
  AdjustmentType: String
  ScalingAdjustment: Int!
  CoolDown: Int
}

input AwsEmrSwInput {
  Name: String!
  Description: String
  Action: AwsEmrSwActionInput!
  Trigger: AwsEmrSwTriggerInput!
}

type AwsEmrSwTrigger {
  CloudWatchAlarmDefinition: AwsEmrSwTriggerCloudWatchAlarmDefinition!
}

type AwsEmrSwTriggerCloudWatchAlarmDefinition {
  ComparisonOperator: String!
  EvaluationPeriods: Int
  MetricName: String!
  Namespace: String
  Period: Int!
  Statistic: String
  Threshold: JSON!
  Unit: String
  Dimensions: [AwsEmrSwTriggerCloudWatchAlarmDefinitionDimensions]
}

type AwsEmrSwTriggerCloudWatchAlarmDefinitionDimensions {
  Key: String
  Value: String
}

input AwsEmrSwTriggerCloudWatchAlarmDefinitionDimensionsInput {
  Key: String
  Value: String
}

input AwsEmrSwTriggerCloudWatchAlarmDefinitionInput {
  ComparisonOperator: String!
  EvaluationPeriods: Int
  MetricName: String!
  Namespace: String
  Period: Int!
  Statistic: String
  Threshold: JSON!
  Unit: String
  Dimensions: [AwsEmrSwTriggerCloudWatchAlarmDefinitionDimensionsInput]
}

input AwsEmrSwTriggerInput {
  CloudWatchAlarmDefinition: AwsEmrSwTriggerCloudWatchAlarmDefinitionInput!
}

input AwsEmrTerminateJobFlowsInput {
  JobFlowIds: [String]!
}

# Amazon Elasticsearch Service (2015-01-01)
type AwsEs {
  # es.AddTags
  AddTags(input: AwsEsAddTagsInput!): JSON

  # es.CreateElasticsearchDomain
  CreateElasticsearchDomain(input: AwsEsCreateElasticsearchDomainInput!): AwsEsCreateElasticsearchDomainOutput

  # es.DeleteElasticsearchDomain
  DeleteElasticsearchDomain(input: AwsEsDeleteElasticsearchDomainInput!): AwsEsDeleteElasticsearchDomainOutput

  # es.DeleteElasticsearchServiceRole
  DeleteElasticsearchServiceRole: JSON

  # es.DescribeElasticsearchDomain
  DescribeElasticsearchDomain(input: AwsEsDescribeElasticsearchDomainInput!): AwsEsDescribeElasticsearchDomainOutput

  # es.DescribeElasticsearchDomainConfig
  DescribeElasticsearchDomainConfig(input: AwsEsDescribeElasticsearchDomainConfigInput!): AwsEsDescribeElasticsearchDomainConfigOutput

  # es.DescribeElasticsearchDomains
  DescribeElasticsearchDomains(input: AwsEsDescribeElasticsearchDomainsInput!): AwsEsDescribeElasticsearchDomainsOutput

  # es.DescribeElasticsearchInstanceTypeLimits
  DescribeElasticsearchInstanceTypeLimits(input: AwsEsDescribeElasticsearchInstanceTypeLimitsInput!): AwsEsDescribeElasticsearchInstanceTypeLimitsOutput

  # es.ListDomainNames
  ListDomainNames: AwsEsListDomainNamesOutput

  # es.ListElasticsearchInstanceTypes
  ListElasticsearchInstanceTypes(input: AwsEsListElasticsearchInstanceTypesInput!): AwsEsListElasticsearchInstanceTypesOutput

  # es.ListElasticsearchVersions
  ListElasticsearchVersions(input: AwsEsListElasticsearchVersionsInput): AwsEsListElasticsearchVersionsOutput

  # es.ListTags
  ListTags(input: AwsEsListTagsInput!): AwsEsListTagsOutput

  # es.RemoveTags
  RemoveTags(input: AwsEsRemoveTagsInput!): JSON

  # es.UpdateElasticsearchDomainConfig
  UpdateElasticsearchDomainConfig(input: AwsEsUpdateElasticsearchDomainConfigInput!): AwsEsUpdateElasticsearchDomainConfigOutput
}

input AwsEsAddTagsInput {
  ARN: String!
  TagList: [AwsEsS3Input]!
}

input AwsEsCreateElasticsearchDomainInput {
  DomainName: String!
  ElasticsearchVersion: String
  ElasticsearchClusterConfig: AwsEsSaInput
  EBSOptions: AwsEsSeInput
  AccessPolicies: String
  SnapshotOptions: AwsEsShInput
  VPCOptions: AwsEsSiInput
  AdvancedOptions: JSON
  LogPublishingOptions: JSON
}

type AwsEsCreateElasticsearchDomainOutput {
  DomainStatus: AwsEsSr
}

input AwsEsDeleteElasticsearchDomainInput {
  DomainName: String!
}

type AwsEsDeleteElasticsearchDomainOutput {
  DomainStatus: AwsEsSr
}

input AwsEsDescribeElasticsearchDomainConfigInput {
  DomainName: String!
}

type AwsEsDescribeElasticsearchDomainConfigOutput {
  DomainConfig: AwsEsS12!
}

input AwsEsDescribeElasticsearchDomainInput {
  DomainName: String!
}

type AwsEsDescribeElasticsearchDomainOutput {
  DomainStatus: AwsEsSr!
}

input AwsEsDescribeElasticsearchDomainsInput {
  DomainNames: [String]!
}

type AwsEsDescribeElasticsearchDomainsOutput {
  DomainStatusList: [AwsEsSr]!
}

input AwsEsDescribeElasticsearchInstanceTypeLimitsInput {
  DomainName: String
  InstanceType: String!
  ElasticsearchVersion: String!
}

type AwsEsDescribeElasticsearchInstanceTypeLimitsOutput {
  LimitsByRole: JSON
}

type AwsEsListDomainNamesOutput {
  DomainNames: [AwsEsListDomainNamesOutputDomainNames]
}

type AwsEsListDomainNamesOutputDomainNames {
  DomainName: String
}

input AwsEsListElasticsearchInstanceTypesInput {
  ElasticsearchVersion: String!
  DomainName: String
  MaxResults: Int
  NextToken: String
}

type AwsEsListElasticsearchInstanceTypesOutput {
  ElasticsearchInstanceTypes: [String]
  NextToken: String
}

input AwsEsListElasticsearchVersionsInput {
  MaxResults: Int
  NextToken: String
}

type AwsEsListElasticsearchVersionsOutput {
  ElasticsearchVersions: [String]
  NextToken: String
}

input AwsEsListTagsInput {
  ARN: String!
}

type AwsEsListTagsOutput {
  TagList: [AwsEsS3]
}

input AwsEsRemoveTagsInput {
  ARN: String!
  TagKeys: [String]!
}

type AwsEsS12 {
  ElasticsearchVersion: AwsEsS12ElasticsearchVersion
  ElasticsearchClusterConfig: AwsEsS12ElasticsearchClusterConfig
  EBSOptions: AwsEsS12EBSOptions
  AccessPolicies: AwsEsS12AccessPolicies
  SnapshotOptions: AwsEsS12SnapshotOptions
  VPCOptions: AwsEsS12VPCOptions
  AdvancedOptions: AwsEsS12AdvancedOptions
  LogPublishingOptions: AwsEsS12LogPublishingOptions
}

type AwsEsS12AccessPolicies {
  Options: String!
  Status: AwsEsS14!
}

type AwsEsS12AdvancedOptions {
  Options: JSON!
  Status: AwsEsS14!
}

type AwsEsS12EBSOptions {
  Options: AwsEsSe!
  Status: AwsEsS14!
}

type AwsEsS12ElasticsearchClusterConfig {
  Options: AwsEsSa!
  Status: AwsEsS14!
}

type AwsEsS12ElasticsearchVersion {
  Options: String!
  Status: AwsEsS14!
}

type AwsEsS12LogPublishingOptions {
  Options: JSON
  Status: AwsEsS14
}

type AwsEsS12SnapshotOptions {
  Options: AwsEsSh!
  Status: AwsEsS14!
}

type AwsEsS12VPCOptions {
  Options: AwsEsSv!
  Status: AwsEsS14!
}

type AwsEsS14 {
  CreationDate: Date!
  UpdateDate: Date!
  UpdateVersion: Int
  State: String!
  PendingDeletion: Boolean
}

type AwsEsS3 {
  Key: String!
  Value: String!
}

input AwsEsS3Input {
  Key: String!
  Value: String!
}

type AwsEsSa {
  InstanceType: String
  InstanceCount: Int
  DedicatedMasterEnabled: Boolean
  ZoneAwarenessEnabled: Boolean
  DedicatedMasterType: String
  DedicatedMasterCount: Int
}

input AwsEsSaInput {
  InstanceType: String
  InstanceCount: Int
  DedicatedMasterEnabled: Boolean
  ZoneAwarenessEnabled: Boolean
  DedicatedMasterType: String
  DedicatedMasterCount: Int
}

type AwsEsSe {
  EBSEnabled: Boolean
  VolumeType: String
  VolumeSize: Int
  Iops: Int
}

input AwsEsSeInput {
  EBSEnabled: Boolean
  VolumeType: String
  VolumeSize: Int
  Iops: Int
}

type AwsEsSh {
  AutomatedSnapshotStartHour: Int
}

input AwsEsShInput {
  AutomatedSnapshotStartHour: Int
}

input AwsEsSiInput {
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

type AwsEsSr {
  DomainId: String!
  DomainName: String!
  ARN: String!
  Created: Boolean
  Deleted: Boolean
  Endpoint: String
  Endpoints: JSON
  Processing: Boolean
  ElasticsearchVersion: String
  ElasticsearchClusterConfig: AwsEsSa!
  EBSOptions: AwsEsSe
  AccessPolicies: String
  SnapshotOptions: AwsEsSh
  VPCOptions: AwsEsSv
  AdvancedOptions: JSON
  LogPublishingOptions: JSON
}

type AwsEsSv {
  VPCId: String
  SubnetIds: [String]
  AvailabilityZones: [String]
  SecurityGroupIds: [String]
}

input AwsEsUpdateElasticsearchDomainConfigInput {
  DomainName: String!
  ElasticsearchClusterConfig: AwsEsSaInput
  EBSOptions: AwsEsSeInput
  SnapshotOptions: AwsEsShInput
  VPCOptions: AwsEsSiInput
  AdvancedOptions: JSON
  AccessPolicies: String
  LogPublishingOptions: JSON
}

type AwsEsUpdateElasticsearchDomainConfigOutput {
  DomainConfig: AwsEsS12!
}

# Amazon Kinesis Firehose (2015-08-04)
type AwsFirehose {
  # firehose.CreateDeliveryStream
  CreateDeliveryStream(input: AwsFirehoseCreateDeliveryStreamInput!): AwsFirehoseCreateDeliveryStreamOutput

  # firehose.DeleteDeliveryStream
  DeleteDeliveryStream(input: AwsFirehoseDeleteDeliveryStreamInput!): JSON

  # firehose.DescribeDeliveryStream
  DescribeDeliveryStream(input: AwsFirehoseDescribeDeliveryStreamInput!): AwsFirehoseDescribeDeliveryStreamOutput

  # firehose.ListDeliveryStreams
  ListDeliveryStreams(input: AwsFirehoseListDeliveryStreamsInput): AwsFirehoseListDeliveryStreamsOutput

  # firehose.PutRecord
  PutRecord(input: AwsFirehosePutRecordInput!): AwsFirehosePutRecordOutput

  # firehose.PutRecordBatch
  PutRecordBatch(input: AwsFirehosePutRecordBatchInput!): AwsFirehosePutRecordBatchOutput

  # firehose.UpdateDestination
  UpdateDestination(input: AwsFirehoseUpdateDestinationInput!): JSON
}

input AwsFirehoseCreateDeliveryStreamElasticsearchDestinationConfigurationInput {
  RoleARN: String!
  DomainARN: String!
  IndexName: String!
  TypeName: String!
  IndexRotationPeriod: String
  BufferingHints: AwsFirehoseS1cInput
  RetryOptions: AwsFirehoseS1fInput
  S3BackupMode: String
  S3Configuration: AwsFirehoseS7Input!
  ProcessingConfiguration: AwsFirehoseSnInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

input AwsFirehoseCreateDeliveryStreamExtendedS3DestinationConfigurationInput {
  RoleARN: String!
  BucketARN: String!
  Prefix: String
  BufferingHints: AwsFirehoseSaInput
  CompressionFormat: String
  EncryptionConfiguration: AwsFirehoseSeInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
  ProcessingConfiguration: AwsFirehoseSnInput
  S3BackupMode: String
  S3BackupConfiguration: AwsFirehoseS7Input
}

input AwsFirehoseCreateDeliveryStreamInput {
  DeliveryStreamName: String!
  DeliveryStreamType: String
  KinesisStreamSourceConfiguration: AwsFirehoseCreateDeliveryStreamKinesisStreamSourceConfigurationInput
  S3DestinationConfiguration: AwsFirehoseS7Input
  ExtendedS3DestinationConfiguration: AwsFirehoseCreateDeliveryStreamExtendedS3DestinationConfigurationInput
  RedshiftDestinationConfiguration: AwsFirehoseCreateDeliveryStreamRedshiftDestinationConfigurationInput
  ElasticsearchDestinationConfiguration: AwsFirehoseCreateDeliveryStreamElasticsearchDestinationConfigurationInput
  SplunkDestinationConfiguration: AwsFirehoseCreateDeliveryStreamSplunkDestinationConfigurationInput
}

input AwsFirehoseCreateDeliveryStreamKinesisStreamSourceConfigurationInput {
  KinesisStreamARN: String!
  RoleARN: String!
}

type AwsFirehoseCreateDeliveryStreamOutput {
  DeliveryStreamARN: String
}

input AwsFirehoseCreateDeliveryStreamRedshiftDestinationConfigurationInput {
  RoleARN: String!
  ClusterJDBCURL: String!
  CopyCommand: AwsFirehoseSyInput!
  Username: String!
  Password: String!
  RetryOptions: AwsFirehoseS14Input
  S3Configuration: AwsFirehoseS7Input!
  ProcessingConfiguration: AwsFirehoseSnInput
  S3BackupMode: String
  S3BackupConfiguration: AwsFirehoseS7Input
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

input AwsFirehoseCreateDeliveryStreamSplunkDestinationConfigurationInput {
  HECEndpoint: String!
  HECEndpointType: String!
  HECToken: String!
  HECAcknowledgmentTimeoutInSeconds: Int
  RetryOptions: AwsFirehoseS1nInput
  S3BackupMode: String
  S3Configuration: AwsFirehoseS7Input!
  ProcessingConfiguration: AwsFirehoseSnInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

input AwsFirehoseDeleteDeliveryStreamInput {
  DeliveryStreamName: String!
}

input AwsFirehoseDescribeDeliveryStreamInput {
  DeliveryStreamName: String!
  Limit: Int
  ExclusiveStartDestinationId: String
}

type AwsFirehoseDescribeDeliveryStreamOutput {
  DeliveryStreamDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescription!
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescription {
  DeliveryStreamName: String!
  DeliveryStreamARN: String!
  DeliveryStreamStatus: String!
  DeliveryStreamType: String!
  VersionId: String!
  CreateTimestamp: Date
  LastUpdateTimestamp: Date
  Source: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionSource
  Destinations: [AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinations]!
  HasMoreDestinations: Boolean!
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinations {
  DestinationId: String!
  S3DestinationDescription: AwsFirehoseS27
  ExtendedS3DestinationDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsExtendedS3DestinationDescription
  RedshiftDestinationDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsRedshiftDestinationDescription
  ElasticsearchDestinationDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsElasticsearchDestinationDescription
  SplunkDestinationDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsSplunkDestinationDescription
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsElasticsearchDestinationDescription {
  RoleARN: String
  DomainARN: String
  IndexName: String
  TypeName: String
  IndexRotationPeriod: String
  BufferingHints: AwsFirehoseS1c
  RetryOptions: AwsFirehoseS1f
  S3BackupMode: String
  S3DestinationDescription: AwsFirehoseS27
  ProcessingConfiguration: AwsFirehoseSn
  CloudWatchLoggingOptions: AwsFirehoseSi
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsExtendedS3DestinationDescription {
  RoleARN: String!
  BucketARN: String!
  Prefix: String
  BufferingHints: AwsFirehoseSa!
  CompressionFormat: String!
  EncryptionConfiguration: AwsFirehoseSe!
  CloudWatchLoggingOptions: AwsFirehoseSi
  ProcessingConfiguration: AwsFirehoseSn
  S3BackupMode: String
  S3BackupDescription: AwsFirehoseS27
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsRedshiftDestinationDescription {
  RoleARN: String!
  ClusterJDBCURL: String!
  CopyCommand: AwsFirehoseSy!
  Username: String!
  RetryOptions: AwsFirehoseS14
  S3DestinationDescription: AwsFirehoseS27!
  ProcessingConfiguration: AwsFirehoseSn
  S3BackupMode: String
  S3BackupDescription: AwsFirehoseS27
  CloudWatchLoggingOptions: AwsFirehoseSi
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsSplunkDestinationDescription {
  HECEndpoint: String
  HECEndpointType: String
  HECToken: String
  HECAcknowledgmentTimeoutInSeconds: Int
  RetryOptions: AwsFirehoseS1n
  S3BackupMode: String
  S3DestinationDescription: AwsFirehoseS27
  ProcessingConfiguration: AwsFirehoseSn
  CloudWatchLoggingOptions: AwsFirehoseSi
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionSource {
  KinesisStreamSourceDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionSourceKinesisStreamSourceDescription
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionSourceKinesisStreamSourceDescription {
  KinesisStreamARN: String
  RoleARN: String
  DeliveryStartTimestamp: Date
}

input AwsFirehoseListDeliveryStreamsInput {
  Limit: Int
  DeliveryStreamType: String
  ExclusiveStartDeliveryStreamName: String
}

type AwsFirehoseListDeliveryStreamsOutput {
  DeliveryStreamNames: [String]!
  HasMoreDeliveryStreams: Boolean!
}

input AwsFirehosePutRecordBatchInput {
  DeliveryStreamName: String!
  Records: [AwsFirehoseS2hInput]!
}

type AwsFirehosePutRecordBatchOutput {
  FailedPutCount: Int!
  RequestResponses: [AwsFirehosePutRecordBatchOutputRequestResponses]!
}

type AwsFirehosePutRecordBatchOutputRequestResponses {
  RecordId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsFirehosePutRecordInput {
  DeliveryStreamName: String!
  Record: AwsFirehoseS2hInput!
}

type AwsFirehosePutRecordOutput {
  RecordId: String!
}

type AwsFirehoseS14 {
  DurationInSeconds: Int
}

input AwsFirehoseS14Input {
  DurationInSeconds: Int
}

type AwsFirehoseS1c {
  IntervalInSeconds: Int
  SizeInMBs: Int
}

input AwsFirehoseS1cInput {
  IntervalInSeconds: Int
  SizeInMBs: Int
}

type AwsFirehoseS1f {
  DurationInSeconds: Int
}

input AwsFirehoseS1fInput {
  DurationInSeconds: Int
}

type AwsFirehoseS1n {
  DurationInSeconds: Int
}

input AwsFirehoseS1nInput {
  DurationInSeconds: Int
}

type AwsFirehoseS27 {
  RoleARN: String!
  BucketARN: String!
  Prefix: String
  BufferingHints: AwsFirehoseSa!
  CompressionFormat: String!
  EncryptionConfiguration: AwsFirehoseSe!
  CloudWatchLoggingOptions: AwsFirehoseSi
}

input AwsFirehoseS2hInput {
  Data: JSON!
}

input AwsFirehoseS2uInput {
  RoleARN: String
  BucketARN: String
  Prefix: String
  BufferingHints: AwsFirehoseSaInput
  CompressionFormat: String
  EncryptionConfiguration: AwsFirehoseSeInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

input AwsFirehoseS7Input {
  RoleARN: String!
  BucketARN: String!
  Prefix: String
  BufferingHints: AwsFirehoseSaInput
  CompressionFormat: String
  EncryptionConfiguration: AwsFirehoseSeInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

type AwsFirehoseSa {
  SizeInMBs: Int
  IntervalInSeconds: Int
}

input AwsFirehoseSaInput {
  SizeInMBs: Int
  IntervalInSeconds: Int
}

type AwsFirehoseSe {
  NoEncryptionConfig: String
  KMSEncryptionConfig: AwsFirehoseSeKMSEncryptionConfig
}

input AwsFirehoseSeInput {
  NoEncryptionConfig: String
  KMSEncryptionConfig: AwsFirehoseSeKMSEncryptionConfigInput
}

type AwsFirehoseSeKMSEncryptionConfig {
  AWSKMSKeyARN: String!
}

input AwsFirehoseSeKMSEncryptionConfigInput {
  AWSKMSKeyARN: String!
}

type AwsFirehoseSi {
  Enabled: Boolean
  LogGroupName: String
  LogStreamName: String
}

input AwsFirehoseSiInput {
  Enabled: Boolean
  LogGroupName: String
  LogStreamName: String
}

type AwsFirehoseSn {
  Enabled: Boolean
  Processors: [AwsFirehoseSnProcessors]
}

input AwsFirehoseSnInput {
  Enabled: Boolean
  Processors: [AwsFirehoseSnProcessorsInput]
}

type AwsFirehoseSnProcessors {
  Type: String!
  Parameters: [AwsFirehoseSnProcessorsParameters]
}

input AwsFirehoseSnProcessorsInput {
  Type: String!
  Parameters: [AwsFirehoseSnProcessorsParametersInput]
}

type AwsFirehoseSnProcessorsParameters {
  ParameterName: String!
  ParameterValue: String!
}

input AwsFirehoseSnProcessorsParametersInput {
  ParameterName: String!
  ParameterValue: String!
}

type AwsFirehoseSy {
  DataTableName: String!
  DataTableColumns: String
  CopyOptions: String
}

input AwsFirehoseSyInput {
  DataTableName: String!
  DataTableColumns: String
  CopyOptions: String
}

input AwsFirehoseUpdateDestinationElasticsearchDestinationUpdateInput {
  RoleARN: String
  DomainARN: String
  IndexName: String
  TypeName: String
  IndexRotationPeriod: String
  BufferingHints: AwsFirehoseS1cInput
  RetryOptions: AwsFirehoseS1fInput
  S3Update: AwsFirehoseS2uInput
  ProcessingConfiguration: AwsFirehoseSnInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

input AwsFirehoseUpdateDestinationExtendedS3DestinationUpdateInput {
  RoleARN: String
  BucketARN: String
  Prefix: String
  BufferingHints: AwsFirehoseSaInput
  CompressionFormat: String
  EncryptionConfiguration: AwsFirehoseSeInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
  ProcessingConfiguration: AwsFirehoseSnInput
  S3BackupMode: String
  S3BackupUpdate: AwsFirehoseS2uInput
}

input AwsFirehoseUpdateDestinationInput {
  DeliveryStreamName: String!
  CurrentDeliveryStreamVersionId: String!
  DestinationId: String!
  S3DestinationUpdate: AwsFirehoseS2uInput
  ExtendedS3DestinationUpdate: AwsFirehoseUpdateDestinationExtendedS3DestinationUpdateInput
  RedshiftDestinationUpdate: AwsFirehoseUpdateDestinationRedshiftDestinationUpdateInput
  ElasticsearchDestinationUpdate: AwsFirehoseUpdateDestinationElasticsearchDestinationUpdateInput
  SplunkDestinationUpdate: AwsFirehoseUpdateDestinationSplunkDestinationUpdateInput
}

input AwsFirehoseUpdateDestinationRedshiftDestinationUpdateInput {
  RoleARN: String
  ClusterJDBCURL: String
  CopyCommand: AwsFirehoseSyInput
  Username: String
  Password: String
  RetryOptions: AwsFirehoseS14Input
  S3Update: AwsFirehoseS2uInput
  ProcessingConfiguration: AwsFirehoseSnInput
  S3BackupMode: String
  S3BackupUpdate: AwsFirehoseS2uInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

input AwsFirehoseUpdateDestinationSplunkDestinationUpdateInput {
  HECEndpoint: String
  HECEndpointType: String
  HECToken: String
  HECAcknowledgmentTimeoutInSeconds: Int
  RetryOptions: AwsFirehoseS1nInput
  S3BackupMode: String
  S3Update: AwsFirehoseS2uInput
  ProcessingConfiguration: AwsFirehoseSnInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

# Amazon GameLift (2015-10-01)
type AwsGamelift {
  # gamelift.AcceptMatch
  AcceptMatch(input: AwsGameliftAcceptMatchInput!): JSON

  # gamelift.CreateAlias
  CreateAlias(input: AwsGameliftCreateAliasInput!): AwsGameliftCreateAliasOutput

  # gamelift.CreateBuild
  CreateBuild(input: AwsGameliftCreateBuildInput): AwsGameliftCreateBuildOutput

  # gamelift.CreateFleet
  CreateFleet(input: AwsGameliftCreateFleetInput!): AwsGameliftCreateFleetOutput

  # gamelift.CreateGameSession
  CreateGameSession(input: AwsGameliftCreateGameSessionInput!): AwsGameliftCreateGameSessionOutput

  # gamelift.CreateGameSessionQueue
  CreateGameSessionQueue(input: AwsGameliftCreateGameSessionQueueInput!): AwsGameliftCreateGameSessionQueueOutput

  # gamelift.CreateMatchmakingConfiguration
  CreateMatchmakingConfiguration(input: AwsGameliftCreateMatchmakingConfigurationInput!): AwsGameliftCreateMatchmakingConfigurationOutput

  # gamelift.CreateMatchmakingRuleSet
  CreateMatchmakingRuleSet(input: AwsGameliftCreateMatchmakingRuleSetInput!): AwsGameliftCreateMatchmakingRuleSetOutput

  # gamelift.CreatePlayerSession
  CreatePlayerSession(input: AwsGameliftCreatePlayerSessionInput!): AwsGameliftCreatePlayerSessionOutput

  # gamelift.CreatePlayerSessions
  CreatePlayerSessions(input: AwsGameliftCreatePlayerSessionsInput!): AwsGameliftCreatePlayerSessionsOutput

  # gamelift.CreateVpcPeeringAuthorization
  CreateVpcPeeringAuthorization(input: AwsGameliftCreateVpcPeeringAuthorizationInput!): AwsGameliftCreateVpcPeeringAuthorizationOutput

  # gamelift.CreateVpcPeeringConnection
  CreateVpcPeeringConnection(input: AwsGameliftCreateVpcPeeringConnectionInput!): JSON

  # gamelift.DeleteAlias
  DeleteAlias(input: AwsGameliftDeleteAliasInput!): JSON

  # gamelift.DeleteBuild
  DeleteBuild(input: AwsGameliftDeleteBuildInput!): JSON

  # gamelift.DeleteFleet
  DeleteFleet(input: AwsGameliftDeleteFleetInput!): JSON

  # gamelift.DeleteGameSessionQueue
  DeleteGameSessionQueue(input: AwsGameliftDeleteGameSessionQueueInput!): JSON

  # gamelift.DeleteMatchmakingConfiguration
  DeleteMatchmakingConfiguration(input: AwsGameliftDeleteMatchmakingConfigurationInput!): JSON

  # gamelift.DeleteScalingPolicy
  DeleteScalingPolicy(input: AwsGameliftDeleteScalingPolicyInput!): JSON

  # gamelift.DeleteVpcPeeringAuthorization
  DeleteVpcPeeringAuthorization(input: AwsGameliftDeleteVpcPeeringAuthorizationInput!): JSON

  # gamelift.DeleteVpcPeeringConnection
  DeleteVpcPeeringConnection(input: AwsGameliftDeleteVpcPeeringConnectionInput!): JSON

  # gamelift.DescribeAlias
  DescribeAlias(input: AwsGameliftDescribeAliasInput!): AwsGameliftDescribeAliasOutput

  # gamelift.DescribeBuild
  DescribeBuild(input: AwsGameliftDescribeBuildInput!): AwsGameliftDescribeBuildOutput

  # gamelift.DescribeEC2InstanceLimits
  DescribeEC2InstanceLimits(input: AwsGameliftDescribeEC2InstanceLimitsInput): AwsGameliftDescribeEC2InstanceLimitsOutput

  # gamelift.DescribeFleetAttributes
  DescribeFleetAttributes(input: AwsGameliftDescribeFleetAttributesInput): AwsGameliftDescribeFleetAttributesOutput

  # gamelift.DescribeFleetCapacity
  DescribeFleetCapacity(input: AwsGameliftDescribeFleetCapacityInput): AwsGameliftDescribeFleetCapacityOutput

  # gamelift.DescribeFleetEvents
  DescribeFleetEvents(input: AwsGameliftDescribeFleetEventsInput!): AwsGameliftDescribeFleetEventsOutput

  # gamelift.DescribeFleetPortSettings
  DescribeFleetPortSettings(input: AwsGameliftDescribeFleetPortSettingsInput!): AwsGameliftDescribeFleetPortSettingsOutput

  # gamelift.DescribeFleetUtilization
  DescribeFleetUtilization(input: AwsGameliftDescribeFleetUtilizationInput): AwsGameliftDescribeFleetUtilizationOutput

  # gamelift.DescribeGameSessionDetails
  DescribeGameSessionDetails(input: AwsGameliftDescribeGameSessionDetailsInput): AwsGameliftDescribeGameSessionDetailsOutput

  # gamelift.DescribeGameSessionPlacement
  DescribeGameSessionPlacement(input: AwsGameliftDescribeGameSessionPlacementInput!): AwsGameliftDescribeGameSessionPlacementOutput

  # gamelift.DescribeGameSessionQueues
  DescribeGameSessionQueues(input: AwsGameliftDescribeGameSessionQueuesInput): AwsGameliftDescribeGameSessionQueuesOutput

  # gamelift.DescribeGameSessions
  DescribeGameSessions(input: AwsGameliftDescribeGameSessionsInput): AwsGameliftDescribeGameSessionsOutput

  # gamelift.DescribeInstances
  DescribeInstances(input: AwsGameliftDescribeInstancesInput!): AwsGameliftDescribeInstancesOutput

  # gamelift.DescribeMatchmaking
  DescribeMatchmaking(input: AwsGameliftDescribeMatchmakingInput!): AwsGameliftDescribeMatchmakingOutput

  # gamelift.DescribeMatchmakingConfigurations
  DescribeMatchmakingConfigurations(input: AwsGameliftDescribeMatchmakingConfigurationsInput): AwsGameliftDescribeMatchmakingConfigurationsOutput

  # gamelift.DescribeMatchmakingRuleSets
  DescribeMatchmakingRuleSets(input: AwsGameliftDescribeMatchmakingRuleSetsInput): AwsGameliftDescribeMatchmakingRuleSetsOutput

  # gamelift.DescribePlayerSessions
  DescribePlayerSessions(input: AwsGameliftDescribePlayerSessionsInput): AwsGameliftDescribePlayerSessionsOutput

  # gamelift.DescribeRuntimeConfiguration
  DescribeRuntimeConfiguration(input: AwsGameliftDescribeRuntimeConfigurationInput!): AwsGameliftDescribeRuntimeConfigurationOutput

  # gamelift.DescribeScalingPolicies
  DescribeScalingPolicies(input: AwsGameliftDescribeScalingPoliciesInput!): AwsGameliftDescribeScalingPoliciesOutput

  # gamelift.DescribeVpcPeeringAuthorizations
  DescribeVpcPeeringAuthorizations(input: JSON): AwsGameliftDescribeVpcPeeringAuthorizationsOutput

  # gamelift.DescribeVpcPeeringConnections
  DescribeVpcPeeringConnections(input: AwsGameliftDescribeVpcPeeringConnectionsInput): AwsGameliftDescribeVpcPeeringConnectionsOutput

  # gamelift.GetGameSessionLogUrl
  GetGameSessionLogUrl(input: AwsGameliftGetGameSessionLogUrlInput!): AwsGameliftGetGameSessionLogUrlOutput

  # gamelift.GetInstanceAccess
  GetInstanceAccess(input: AwsGameliftGetInstanceAccessInput!): AwsGameliftGetInstanceAccessOutput

  # gamelift.ListAliases
  ListAliases(input: AwsGameliftListAliasesInput): AwsGameliftListAliasesOutput

  # gamelift.ListBuilds
  ListBuilds(input: AwsGameliftListBuildsInput): AwsGameliftListBuildsOutput

  # gamelift.ListFleets
  ListFleets(input: AwsGameliftListFleetsInput): AwsGameliftListFleetsOutput

  # gamelift.PutScalingPolicy
  PutScalingPolicy(input: AwsGameliftPutScalingPolicyInput!): AwsGameliftPutScalingPolicyOutput

  # gamelift.RequestUploadCredentials
  RequestUploadCredentials(input: AwsGameliftRequestUploadCredentialsInput!): AwsGameliftRequestUploadCredentialsOutput

  # gamelift.ResolveAlias
  ResolveAlias(input: AwsGameliftResolveAliasInput!): AwsGameliftResolveAliasOutput

  # gamelift.SearchGameSessions
  SearchGameSessions(input: AwsGameliftSearchGameSessionsInput): AwsGameliftSearchGameSessionsOutput

  # gamelift.StartGameSessionPlacement
  StartGameSessionPlacement(input: AwsGameliftStartGameSessionPlacementInput!): AwsGameliftStartGameSessionPlacementOutput

  # gamelift.StartMatchmaking
  StartMatchmaking(input: AwsGameliftStartMatchmakingInput!): AwsGameliftStartMatchmakingOutput

  # gamelift.StopGameSessionPlacement
  StopGameSessionPlacement(input: AwsGameliftStopGameSessionPlacementInput!): AwsGameliftStopGameSessionPlacementOutput

  # gamelift.StopMatchmaking
  StopMatchmaking(input: AwsGameliftStopMatchmakingInput!): JSON

  # gamelift.UpdateAlias
  UpdateAlias(input: AwsGameliftUpdateAliasInput!): AwsGameliftUpdateAliasOutput

  # gamelift.UpdateBuild
  UpdateBuild(input: AwsGameliftUpdateBuildInput!): AwsGameliftUpdateBuildOutput

  # gamelift.UpdateFleetAttributes
  UpdateFleetAttributes(input: AwsGameliftUpdateFleetAttributesInput!): AwsGameliftUpdateFleetAttributesOutput

  # gamelift.UpdateFleetCapacity
  UpdateFleetCapacity(input: AwsGameliftUpdateFleetCapacityInput!): AwsGameliftUpdateFleetCapacityOutput

  # gamelift.UpdateFleetPortSettings
  UpdateFleetPortSettings(input: AwsGameliftUpdateFleetPortSettingsInput!): AwsGameliftUpdateFleetPortSettingsOutput

  # gamelift.UpdateGameSession
  UpdateGameSession(input: AwsGameliftUpdateGameSessionInput!): AwsGameliftUpdateGameSessionOutput

  # gamelift.UpdateGameSessionQueue
  UpdateGameSessionQueue(input: AwsGameliftUpdateGameSessionQueueInput!): AwsGameliftUpdateGameSessionQueueOutput

  # gamelift.UpdateMatchmakingConfiguration
  UpdateMatchmakingConfiguration(input: AwsGameliftUpdateMatchmakingConfigurationInput!): AwsGameliftUpdateMatchmakingConfigurationOutput

  # gamelift.UpdateRuntimeConfiguration
  UpdateRuntimeConfiguration(input: AwsGameliftUpdateRuntimeConfigurationInput!): AwsGameliftUpdateRuntimeConfigurationOutput

  # gamelift.ValidateMatchmakingRuleSet
  ValidateMatchmakingRuleSet(input: AwsGameliftValidateMatchmakingRuleSetInput!): AwsGameliftValidateMatchmakingRuleSetOutput
}

input AwsGameliftAcceptMatchInput {
  TicketId: String!
  PlayerIds: [String]!
  AcceptanceType: String!
}

input AwsGameliftCreateAliasInput {
  Name: String!
  Description: String
  RoutingStrategy: AwsGameliftSaInput!
}

type AwsGameliftCreateAliasOutput {
  Alias: AwsGameliftSf
}

input AwsGameliftCreateBuildInput {
  Name: String
  Version: String
  StorageLocation: AwsGameliftSkInput
  OperatingSystem: String
}

type AwsGameliftCreateBuildOutput {
  Build: AwsGameliftSo
  UploadCredentials: AwsGameliftSs
  StorageLocation: AwsGameliftSk
}

input AwsGameliftCreateFleetInput {
  Name: String!
  Description: String
  BuildId: String!
  ServerLaunchPath: String
  ServerLaunchParameters: String
  LogPaths: [String]
  EC2InstanceType: String!
  EC2InboundPermissions: [AwsGameliftSwInput]
  NewGameSessionProtectionPolicy: String
  RuntimeConfiguration: AwsGameliftS12Input
  ResourceCreationLimitPolicy: AwsGameliftS18Input
  MetricGroups: [String]
  PeerVpcAwsAccountId: String
  PeerVpcId: String
}

type AwsGameliftCreateFleetOutput {
  FleetAttributes: AwsGameliftS1d
}

input AwsGameliftCreateGameSessionInput {
  FleetId: String
  AliasId: String
  MaximumPlayerSessionCount: Int!
  Name: String
  GameProperties: [AwsGameliftS1gInput]
  CreatorId: String
  GameSessionId: String
  IdempotencyToken: String
  GameSessionData: String
}

type AwsGameliftCreateGameSessionOutput {
  GameSession: AwsGameliftS1n
}

input AwsGameliftCreateGameSessionQueueInput {
  Name: String!
  TimeoutInSeconds: Int
  PlayerLatencyPolicies: [AwsGameliftS1tInput]
  Destinations: [AwsGameliftS1vInput]
}

type AwsGameliftCreateGameSessionQueueOutput {
  GameSessionQueue: AwsGameliftS1y
}

input AwsGameliftCreateMatchmakingConfigurationInput {
  Name: String!
  Description: String
  GameSessionQueueArns: [String]!
  RequestTimeoutSeconds: Int!
  AcceptanceTimeoutSeconds: Int
  AcceptanceRequired: Boolean!
  RuleSetName: String!
  NotificationTarget: String
  AdditionalPlayerCount: Int
  CustomEventData: String
  GameProperties: [AwsGameliftS1gInput]
  GameSessionData: String
}

type AwsGameliftCreateMatchmakingConfigurationOutput {
  Configuration: AwsGameliftS27
}

input AwsGameliftCreateMatchmakingRuleSetInput {
  Name: String!
  RuleSetBody: String!
}

type AwsGameliftCreateMatchmakingRuleSetOutput {
  RuleSet: AwsGameliftS2b!
}

input AwsGameliftCreatePlayerSessionInput {
  GameSessionId: String!
  PlayerId: String!
  PlayerData: String
}

type AwsGameliftCreatePlayerSessionOutput {
  PlayerSession: AwsGameliftS2f
}

input AwsGameliftCreatePlayerSessionsInput {
  GameSessionId: String!
  PlayerIds: [String]!
  PlayerDataMap: JSON
}

type AwsGameliftCreatePlayerSessionsOutput {
  PlayerSessions: [AwsGameliftS2f]
}

input AwsGameliftCreateVpcPeeringAuthorizationInput {
  GameLiftAwsAccountId: String!
  PeerVpcId: String!
}

type AwsGameliftCreateVpcPeeringAuthorizationOutput {
  VpcPeeringAuthorization: AwsGameliftS2p
}

input AwsGameliftCreateVpcPeeringConnectionInput {
  FleetId: String!
  PeerVpcAwsAccountId: String!
  PeerVpcId: String!
}

input AwsGameliftDeleteAliasInput {
  AliasId: String!
}

input AwsGameliftDeleteBuildInput {
  BuildId: String!
}

input AwsGameliftDeleteFleetInput {
  FleetId: String!
}

input AwsGameliftDeleteGameSessionQueueInput {
  Name: String!
}

input AwsGameliftDeleteMatchmakingConfigurationInput {
  Name: String!
}

input AwsGameliftDeleteScalingPolicyInput {
  Name: String!
  FleetId: String!
}

input AwsGameliftDeleteVpcPeeringAuthorizationInput {
  GameLiftAwsAccountId: String!
  PeerVpcId: String!
}

input AwsGameliftDeleteVpcPeeringConnectionInput {
  FleetId: String!
  VpcPeeringConnectionId: String!
}

input AwsGameliftDescribeAliasInput {
  AliasId: String!
}

type AwsGameliftDescribeAliasOutput {
  Alias: AwsGameliftSf
}

input AwsGameliftDescribeBuildInput {
  BuildId: String!
}

type AwsGameliftDescribeBuildOutput {
  Build: AwsGameliftSo
}

input AwsGameliftDescribeEC2InstanceLimitsInput {
  EC2InstanceType: String
}

type AwsGameliftDescribeEC2InstanceLimitsOutput {
  EC2InstanceLimits: [AwsGameliftDescribeEC2InstanceLimitsOutputEC2InstanceLimits]
}

type AwsGameliftDescribeEC2InstanceLimitsOutputEC2InstanceLimits {
  EC2InstanceType: String
  CurrentInstances: Int
  InstanceLimit: Int
}

input AwsGameliftDescribeFleetAttributesInput {
  FleetIds: [String]
  Limit: Int
  NextToken: String
}

type AwsGameliftDescribeFleetAttributesOutput {
  FleetAttributes: [AwsGameliftS1d]
  NextToken: String
}

input AwsGameliftDescribeFleetCapacityInput {
  FleetIds: [String]
  Limit: Int
  NextToken: String
}

type AwsGameliftDescribeFleetCapacityOutput {
  FleetCapacity: [AwsGameliftDescribeFleetCapacityOutputFleetCapacity]
  NextToken: String
}

type AwsGameliftDescribeFleetCapacityOutputFleetCapacity {
  FleetId: String
  InstanceType: String
  InstanceCounts: AwsGameliftDescribeFleetCapacityOutputFleetCapacityInstanceCounts
}

type AwsGameliftDescribeFleetCapacityOutputFleetCapacityInstanceCounts {
  DESIRED: Int
  MINIMUM: Int
  MAXIMUM: Int
  PENDING: Int
  ACTIVE: Int
  IDLE: Int
  TERMINATING: Int
}

input AwsGameliftDescribeFleetEventsInput {
  FleetId: String!
  StartTime: Date
  EndTime: Date
  Limit: Int
  NextToken: String
}

type AwsGameliftDescribeFleetEventsOutput {
  Events: [AwsGameliftDescribeFleetEventsOutputEvents]
  NextToken: String
}

type AwsGameliftDescribeFleetEventsOutputEvents {
  EventId: String
  ResourceId: String
  EventCode: String
  Message: String
  EventTime: Date
  PreSignedLogUrl: String
}

input AwsGameliftDescribeFleetPortSettingsInput {
  FleetId: String!
}

type AwsGameliftDescribeFleetPortSettingsOutput {
  InboundPermissions: [AwsGameliftSw]
}

input AwsGameliftDescribeFleetUtilizationInput {
  FleetIds: [String]
  Limit: Int
  NextToken: String
}

type AwsGameliftDescribeFleetUtilizationOutput {
  FleetUtilization: [AwsGameliftDescribeFleetUtilizationOutputFleetUtilization]
  NextToken: String
}

type AwsGameliftDescribeFleetUtilizationOutputFleetUtilization {
  FleetId: String
  ActiveServerProcessCount: Int
  ActiveGameSessionCount: Int
  CurrentPlayerSessionCount: Int
  MaximumPlayerSessionCount: Int
}

input AwsGameliftDescribeGameSessionDetailsInput {
  FleetId: String
  GameSessionId: String
  AliasId: String
  StatusFilter: String
  Limit: Int
  NextToken: String
}

type AwsGameliftDescribeGameSessionDetailsOutput {
  GameSessionDetails: [AwsGameliftDescribeGameSessionDetailsOutputGameSessionDetails]
  NextToken: String
}

type AwsGameliftDescribeGameSessionDetailsOutputGameSessionDetails {
  GameSession: AwsGameliftS1n
  ProtectionPolicy: String
}

input AwsGameliftDescribeGameSessionPlacementInput {
  PlacementId: String!
}

type AwsGameliftDescribeGameSessionPlacementOutput {
  GameSessionPlacement: AwsGameliftS42
}

input AwsGameliftDescribeGameSessionQueuesInput {
  Names: [String]
  Limit: Int
  NextToken: String
}

type AwsGameliftDescribeGameSessionQueuesOutput {
  GameSessionQueues: [AwsGameliftS1y]
  NextToken: String
}

input AwsGameliftDescribeGameSessionsInput {
  FleetId: String
  GameSessionId: String
  AliasId: String
  StatusFilter: String
  Limit: Int
  NextToken: String
}

type AwsGameliftDescribeGameSessionsOutput {
  GameSessions: [AwsGameliftS1n]
  NextToken: String
}

input AwsGameliftDescribeInstancesInput {
  FleetId: String!
  InstanceId: String
  Limit: Int
  NextToken: String
}

type AwsGameliftDescribeInstancesOutput {
  Instances: [AwsGameliftDescribeInstancesOutputInstances]
  NextToken: String
}

type AwsGameliftDescribeInstancesOutputInstances {
  FleetId: String
  InstanceId: String
  IpAddress: String
  OperatingSystem: String
  Type: String
  Status: String
  CreationTime: Date
}

input AwsGameliftDescribeMatchmakingConfigurationsInput {
  Names: [String]
  RuleSetName: String
  Limit: Int
  NextToken: String
}

type AwsGameliftDescribeMatchmakingConfigurationsOutput {
  Configurations: [AwsGameliftS27]
  NextToken: String
}

input AwsGameliftDescribeMatchmakingInput {
  TicketIds: [String]!
}

type AwsGameliftDescribeMatchmakingOutput {
  TicketList: [AwsGameliftS4q]
}

input AwsGameliftDescribeMatchmakingRuleSetsInput {
  Names: [String]
  Limit: Int
  NextToken: String
}

type AwsGameliftDescribeMatchmakingRuleSetsOutput {
  RuleSets: [AwsGameliftS2b]!
  NextToken: String
}

input AwsGameliftDescribePlayerSessionsInput {
  GameSessionId: String
  PlayerId: String
  PlayerSessionId: String
  PlayerSessionStatusFilter: String
  Limit: Int
  NextToken: String
}

type AwsGameliftDescribePlayerSessionsOutput {
  PlayerSessions: [AwsGameliftS2f]
  NextToken: String
}

input AwsGameliftDescribeRuntimeConfigurationInput {
  FleetId: String!
}

type AwsGameliftDescribeRuntimeConfigurationOutput {
  RuntimeConfiguration: AwsGameliftS12
}

input AwsGameliftDescribeScalingPoliciesInput {
  FleetId: String!
  StatusFilter: String
  Limit: Int
  NextToken: String
}

type AwsGameliftDescribeScalingPoliciesOutput {
  ScalingPolicies: [AwsGameliftDescribeScalingPoliciesOutputScalingPolicies]
  NextToken: String
}

type AwsGameliftDescribeScalingPoliciesOutputScalingPolicies {
  FleetId: String
  Name: String
  Status: String
  ScalingAdjustment: Int
  ScalingAdjustmentType: String
  ComparisonOperator: String
  Threshold: JSON
  EvaluationPeriods: Int
  MetricName: String
}

type AwsGameliftDescribeVpcPeeringAuthorizationsOutput {
  VpcPeeringAuthorizations: [AwsGameliftS2p]
}

input AwsGameliftDescribeVpcPeeringConnectionsInput {
  FleetId: String
}

type AwsGameliftDescribeVpcPeeringConnectionsOutput {
  VpcPeeringConnections: [AwsGameliftDescribeVpcPeeringConnectionsOutputVpcPeeringConnections]
}

type AwsGameliftDescribeVpcPeeringConnectionsOutputVpcPeeringConnections {
  FleetId: String
  IpV4CidrBlock: String
  VpcPeeringConnectionId: String
  Status: AwsGameliftDescribeVpcPeeringConnectionsOutputVpcPeeringConnectionsStatus
  PeerVpcId: String
  GameLiftVpcId: String
}

type AwsGameliftDescribeVpcPeeringConnectionsOutputVpcPeeringConnectionsStatus {
  Code: String
  Message: String
}

input AwsGameliftGetGameSessionLogUrlInput {
  GameSessionId: String!
}

type AwsGameliftGetGameSessionLogUrlOutput {
  PreSignedUrl: String
}

input AwsGameliftGetInstanceAccessInput {
  FleetId: String!
  InstanceId: String!
}

type AwsGameliftGetInstanceAccessOutput {
  InstanceAccess: AwsGameliftGetInstanceAccessOutputInstanceAccess
}

type AwsGameliftGetInstanceAccessOutputInstanceAccess {
  FleetId: String
  InstanceId: String
  IpAddress: String
  OperatingSystem: String
  Credentials: AwsGameliftGetInstanceAccessOutputInstanceAccessCredentials
}

type AwsGameliftGetInstanceAccessOutputInstanceAccessCredentials {
  UserName: String
  Secret: String
}

input AwsGameliftListAliasesInput {
  RoutingStrategyType: String
  Name: String
  Limit: Int
  NextToken: String
}

type AwsGameliftListAliasesOutput {
  Aliases: [AwsGameliftSf]
  NextToken: String
}

input AwsGameliftListBuildsInput {
  Status: String
  Limit: Int
  NextToken: String
}

type AwsGameliftListBuildsOutput {
  Builds: [AwsGameliftSo]
  NextToken: String
}

input AwsGameliftListFleetsInput {
  BuildId: String
  Limit: Int
  NextToken: String
}

type AwsGameliftListFleetsOutput {
  FleetIds: [String]
  NextToken: String
}

input AwsGameliftPutScalingPolicyInput {
  Name: String!
  FleetId: String!
  ScalingAdjustment: Int!
  ScalingAdjustmentType: String!
  Threshold: JSON!
  ComparisonOperator: String!
  EvaluationPeriods: Int!
  MetricName: String!
}

type AwsGameliftPutScalingPolicyOutput {
  Name: String
}

input AwsGameliftRequestUploadCredentialsInput {
  BuildId: String!
}

type AwsGameliftRequestUploadCredentialsOutput {
  UploadCredentials: AwsGameliftSs
  StorageLocation: AwsGameliftSk
}

input AwsGameliftResolveAliasInput {
  AliasId: String!
}

type AwsGameliftResolveAliasOutput {
  FleetId: String
}

type AwsGameliftS12 {
  ServerProcesses: [AwsGameliftS12ServerProcesses]
  MaxConcurrentGameSessionActivations: Int
  GameSessionActivationTimeoutSeconds: Int
}

input AwsGameliftS12Input {
  ServerProcesses: [AwsGameliftS12ServerProcessesInput]
  MaxConcurrentGameSessionActivations: Int
  GameSessionActivationTimeoutSeconds: Int
}

type AwsGameliftS12ServerProcesses {
  LaunchPath: String!
  Parameters: String
  ConcurrentExecutions: Int!
}

input AwsGameliftS12ServerProcessesInput {
  LaunchPath: String!
  Parameters: String
  ConcurrentExecutions: Int!
}

type AwsGameliftS18 {
  NewGameSessionsPerCreator: Int
  PolicyPeriodInMinutes: Int
}

input AwsGameliftS18Input {
  NewGameSessionsPerCreator: Int
  PolicyPeriodInMinutes: Int
}

type AwsGameliftS1d {
  FleetId: String
  FleetArn: String
  Description: String
  Name: String
  CreationTime: Date
  TerminationTime: Date
  Status: String
  BuildId: String
  ServerLaunchPath: String
  ServerLaunchParameters: String
  LogPaths: [String]
  NewGameSessionProtectionPolicy: String
  OperatingSystem: String
  ResourceCreationLimitPolicy: AwsGameliftS18
  MetricGroups: [String]
}

type AwsGameliftS1g {
  Key: String!
  Value: String!
}

input AwsGameliftS1gInput {
  Key: String!
  Value: String!
}

type AwsGameliftS1n {
  GameSessionId: String
  Name: String
  FleetId: String
  CreationTime: Date
  TerminationTime: Date
  CurrentPlayerSessionCount: Int
  MaximumPlayerSessionCount: Int
  Status: String
  GameProperties: [AwsGameliftS1g]
  IpAddress: String
  Port: Int
  PlayerSessionCreationPolicy: String
  CreatorId: String
  GameSessionData: String
}

type AwsGameliftS1t {
  MaximumIndividualPlayerLatencyMilliseconds: Int
  PolicyDurationSeconds: Int
}

input AwsGameliftS1tInput {
  MaximumIndividualPlayerLatencyMilliseconds: Int
  PolicyDurationSeconds: Int
}

type AwsGameliftS1v {
  DestinationArn: String
}

input AwsGameliftS1vInput {
  DestinationArn: String
}

type AwsGameliftS1y {
  Name: String
  GameSessionQueueArn: String
  TimeoutInSeconds: Int
  PlayerLatencyPolicies: [AwsGameliftS1t]
  Destinations: [AwsGameliftS1v]
}

type AwsGameliftS27 {
  Name: String
  Description: String
  GameSessionQueueArns: [String]
  RequestTimeoutSeconds: Int
  AcceptanceTimeoutSeconds: Int
  AcceptanceRequired: Boolean
  RuleSetName: String
  NotificationTarget: String
  AdditionalPlayerCount: Int
  CustomEventData: String
  CreationTime: Date
  GameProperties: [AwsGameliftS1g]
  GameSessionData: String
}

type AwsGameliftS2b {
  RuleSetName: String
  RuleSetBody: String!
  CreationTime: Date
}

type AwsGameliftS2f {
  PlayerSessionId: String
  PlayerId: String
  GameSessionId: String
  FleetId: String
  CreationTime: Date
  TerminationTime: Date
  Status: String
  IpAddress: String
  Port: Int
  PlayerData: String
}

type AwsGameliftS2p {
  GameLiftAwsAccountId: String
  PeerVpcAwsAccountId: String
  PeerVpcId: String
  CreationTime: Date
  ExpirationTime: Date
}

type AwsGameliftS42 {
  PlacementId: String
  GameSessionQueueName: String
  Status: String
  GameProperties: [AwsGameliftS1g]
  MaximumPlayerSessionCount: Int
  GameSessionName: String
  GameSessionId: String
  GameSessionArn: String
  GameSessionRegion: String
  PlayerLatencies: [AwsGameliftS44]
  StartTime: Date
  EndTime: Date
  IpAddress: String
  Port: Int
  PlacedPlayerSessions: [AwsGameliftS42PlacedPlayerSessions]
  GameSessionData: String
}

type AwsGameliftS42PlacedPlayerSessions {
  PlayerId: String
  PlayerSessionId: String
}

type AwsGameliftS44 {
  PlayerId: String
  RegionIdentifier: String
  LatencyInMilliseconds: Float
}

input AwsGameliftS44Input {
  PlayerId: String
  RegionIdentifier: String
  LatencyInMilliseconds: Float
}

type AwsGameliftS4q {
  TicketId: String
  ConfigurationName: String
  Status: String
  StatusReason: String
  StatusMessage: String
  StartTime: Date
  EndTime: Date
  Players: [AwsGameliftS4t]
  GameSessionConnectionInfo: AwsGameliftS4qGameSessionConnectionInfo
  EstimatedWaitTime: Int
}

type AwsGameliftS4qGameSessionConnectionInfo {
  GameSessionArn: String
  IpAddress: String
  Port: Int
  MatchedPlayerSessions: [AwsGameliftS4qGameSessionConnectionInfoMatchedPlayerSessions]
}

type AwsGameliftS4qGameSessionConnectionInfoMatchedPlayerSessions {
  PlayerId: String
  PlayerSessionId: String
}

type AwsGameliftS4t {
  PlayerId: String
  PlayerAttributes: JSON
  Team: String
  LatencyInMs: JSON
}

input AwsGameliftS4tInput {
  PlayerId: String
  PlayerAttributes: JSON
  Team: String
  LatencyInMs: JSON
}

type AwsGameliftSa {
  Type: String
  FleetId: String
  Message: String
}

input AwsGameliftSaInput {
  Type: String
  FleetId: String
  Message: String
}

input AwsGameliftSearchGameSessionsInput {
  FleetId: String
  AliasId: String
  FilterExpression: String
  SortExpression: String
  Limit: Int
  NextToken: String
}

type AwsGameliftSearchGameSessionsOutput {
  GameSessions: [AwsGameliftS1n]
  NextToken: String
}

type AwsGameliftSf {
  AliasId: String
  Name: String
  AliasArn: String
  Description: String
  RoutingStrategy: AwsGameliftSa
  CreationTime: Date
  LastUpdatedTime: Date
}

type AwsGameliftSk {
  Bucket: String
  Key: String
  RoleArn: String
}

input AwsGameliftSkInput {
  Bucket: String
  Key: String
  RoleArn: String
}

type AwsGameliftSo {
  BuildId: String
  Name: String
  Version: String
  Status: String
  SizeOnDisk: JSON
  OperatingSystem: String
  CreationTime: Date
}

type AwsGameliftSs {
  AccessKeyId: String
  SecretAccessKey: String
  SessionToken: String
}

input AwsGameliftStartGameSessionPlacementDesiredPlayerSessionsInput {
  PlayerId: String
  PlayerData: String
}

input AwsGameliftStartGameSessionPlacementInput {
  PlacementId: String!
  GameSessionQueueName: String!
  GameProperties: [AwsGameliftS1gInput]
  MaximumPlayerSessionCount: Int!
  GameSessionName: String
  PlayerLatencies: [AwsGameliftS44Input]
  DesiredPlayerSessions: [AwsGameliftStartGameSessionPlacementDesiredPlayerSessionsInput]
  GameSessionData: String
}

type AwsGameliftStartGameSessionPlacementOutput {
  GameSessionPlacement: AwsGameliftS42
}

input AwsGameliftStartMatchmakingInput {
  TicketId: String
  ConfigurationName: String!
  Players: [AwsGameliftS4tInput]!
}

type AwsGameliftStartMatchmakingOutput {
  MatchmakingTicket: AwsGameliftS4q
}

input AwsGameliftStopGameSessionPlacementInput {
  PlacementId: String!
}

type AwsGameliftStopGameSessionPlacementOutput {
  GameSessionPlacement: AwsGameliftS42
}

input AwsGameliftStopMatchmakingInput {
  TicketId: String!
}

type AwsGameliftSw {
  FromPort: Int!
  ToPort: Int!
  IpRange: String!
  Protocol: String!
}

input AwsGameliftSwInput {
  FromPort: Int!
  ToPort: Int!
  IpRange: String!
  Protocol: String!
}

input AwsGameliftUpdateAliasInput {
  AliasId: String!
  Name: String
  Description: String
  RoutingStrategy: AwsGameliftSaInput
}

type AwsGameliftUpdateAliasOutput {
  Alias: AwsGameliftSf
}

input AwsGameliftUpdateBuildInput {
  BuildId: String!
  Name: String
  Version: String
}

type AwsGameliftUpdateBuildOutput {
  Build: AwsGameliftSo
}

input AwsGameliftUpdateFleetAttributesInput {
  FleetId: String!
  Name: String
  Description: String
  NewGameSessionProtectionPolicy: String
  ResourceCreationLimitPolicy: AwsGameliftS18Input
  MetricGroups: [String]
}

type AwsGameliftUpdateFleetAttributesOutput {
  FleetId: String
}

input AwsGameliftUpdateFleetCapacityInput {
  FleetId: String!
  DesiredInstances: Int
  MinSize: Int
  MaxSize: Int
}

type AwsGameliftUpdateFleetCapacityOutput {
  FleetId: String
}

input AwsGameliftUpdateFleetPortSettingsInput {
  FleetId: String!
  InboundPermissionAuthorizations: [AwsGameliftSwInput]
  InboundPermissionRevocations: [AwsGameliftSwInput]
}

type AwsGameliftUpdateFleetPortSettingsOutput {
  FleetId: String
}

input AwsGameliftUpdateGameSessionInput {
  GameSessionId: String!
  MaximumPlayerSessionCount: Int
  Name: String
  PlayerSessionCreationPolicy: String
  ProtectionPolicy: String
}

type AwsGameliftUpdateGameSessionOutput {
  GameSession: AwsGameliftS1n
}

input AwsGameliftUpdateGameSessionQueueInput {
  Name: String!
  TimeoutInSeconds: Int
  PlayerLatencyPolicies: [AwsGameliftS1tInput]
  Destinations: [AwsGameliftS1vInput]
}

type AwsGameliftUpdateGameSessionQueueOutput {
  GameSessionQueue: AwsGameliftS1y
}

input AwsGameliftUpdateMatchmakingConfigurationInput {
  Name: String!
  Description: String
  GameSessionQueueArns: [String]
  RequestTimeoutSeconds: Int
  AcceptanceTimeoutSeconds: Int
  AcceptanceRequired: Boolean
  RuleSetName: String
  NotificationTarget: String
  AdditionalPlayerCount: Int
  CustomEventData: String
  GameProperties: [AwsGameliftS1gInput]
  GameSessionData: String
}

type AwsGameliftUpdateMatchmakingConfigurationOutput {
  Configuration: AwsGameliftS27
}

input AwsGameliftUpdateRuntimeConfigurationInput {
  FleetId: String!
  RuntimeConfiguration: AwsGameliftS12Input!
}

type AwsGameliftUpdateRuntimeConfigurationOutput {
  RuntimeConfiguration: AwsGameliftS12
}

input AwsGameliftValidateMatchmakingRuleSetInput {
  RuleSetBody: String!
}

type AwsGameliftValidateMatchmakingRuleSetOutput {
  Valid: Boolean
}

# Amazon Glacier (2012-06-01)
type AwsGlacier {
  # glacier.AbortMultipartUpload
  AbortMultipartUpload(input: AwsGlacierAbortMultipartUploadInput!): JSON

  # glacier.AbortVaultLock
  AbortVaultLock(input: AwsGlacierAbortVaultLockInput!): JSON

  # glacier.AddTagsToVault
  AddTagsToVault(input: AwsGlacierAddTagsToVaultInput!): JSON

  # glacier.CompleteMultipartUpload
  CompleteMultipartUpload(input: AwsGlacierCompleteMultipartUploadInput!): JSON

  # glacier.CompleteVaultLock
  CompleteVaultLock(input: AwsGlacierCompleteVaultLockInput!): JSON

  # glacier.CreateVault
  CreateVault(input: AwsGlacierCreateVaultInput!): AwsGlacierCreateVaultOutput

  # glacier.DeleteArchive
  DeleteArchive(input: AwsGlacierDeleteArchiveInput!): JSON

  # glacier.DeleteVault
  DeleteVault(input: AwsGlacierDeleteVaultInput!): JSON

  # glacier.DeleteVaultAccessPolicy
  DeleteVaultAccessPolicy(input: AwsGlacierDeleteVaultAccessPolicyInput!): JSON

  # glacier.DeleteVaultNotifications
  DeleteVaultNotifications(input: AwsGlacierDeleteVaultNotificationsInput!): JSON

  # glacier.DescribeJob
  DescribeJob(input: AwsGlacierDescribeJobInput!): JSON

  # glacier.DescribeVault
  DescribeVault(input: AwsGlacierDescribeVaultInput!): JSON

  # glacier.GetDataRetrievalPolicy
  GetDataRetrievalPolicy(input: AwsGlacierGetDataRetrievalPolicyInput!): AwsGlacierGetDataRetrievalPolicyOutput

  # glacier.GetJobOutput
  GetJobOutput(input: AwsGlacierGetJobOutputInput!): AwsGlacierGetJobOutputOutput

  # glacier.GetVaultAccessPolicy
  GetVaultAccessPolicy(input: AwsGlacierGetVaultAccessPolicyInput!): AwsGlacierGetVaultAccessPolicyOutput

  # glacier.GetVaultLock
  GetVaultLock(input: AwsGlacierGetVaultLockInput!): AwsGlacierGetVaultLockOutput

  # glacier.GetVaultNotifications
  GetVaultNotifications(input: AwsGlacierGetVaultNotificationsInput!): AwsGlacierGetVaultNotificationsOutput

  # glacier.InitiateJob
  InitiateJob(input: AwsGlacierInitiateJobInput!): AwsGlacierInitiateJobOutput

  # glacier.InitiateMultipartUpload
  InitiateMultipartUpload(input: AwsGlacierInitiateMultipartUploadInput!): AwsGlacierInitiateMultipartUploadOutput

  # glacier.InitiateVaultLock
  InitiateVaultLock(input: AwsGlacierInitiateVaultLockInput!): AwsGlacierInitiateVaultLockOutput

  # glacier.ListJobs
  ListJobs(input: AwsGlacierListJobsInput!): AwsGlacierListJobsOutput

  # glacier.ListMultipartUploads
  ListMultipartUploads(input: AwsGlacierListMultipartUploadsInput!): AwsGlacierListMultipartUploadsOutput

  # glacier.ListParts
  ListParts(input: AwsGlacierListPartsInput!): AwsGlacierListPartsOutput

  # glacier.ListProvisionedCapacity
  ListProvisionedCapacity(input: AwsGlacierListProvisionedCapacityInput!): AwsGlacierListProvisionedCapacityOutput

  # glacier.ListTagsForVault
  ListTagsForVault(input: AwsGlacierListTagsForVaultInput!): AwsGlacierListTagsForVaultOutput

  # glacier.ListVaults
  ListVaults(input: AwsGlacierListVaultsInput!): AwsGlacierListVaultsOutput

  # glacier.PurchaseProvisionedCapacity
  PurchaseProvisionedCapacity(input: AwsGlacierPurchaseProvisionedCapacityInput!): AwsGlacierPurchaseProvisionedCapacityOutput

  # glacier.RemoveTagsFromVault
  RemoveTagsFromVault(input: AwsGlacierRemoveTagsFromVaultInput!): JSON

  # glacier.SetDataRetrievalPolicy
  SetDataRetrievalPolicy(input: AwsGlacierSetDataRetrievalPolicyInput!): JSON

  # glacier.SetVaultAccessPolicy
  SetVaultAccessPolicy(input: AwsGlacierSetVaultAccessPolicyInput!): JSON

  # glacier.SetVaultNotifications
  SetVaultNotifications(input: AwsGlacierSetVaultNotificationsInput!): JSON

  # glacier.UploadArchive
  UploadArchive(input: AwsGlacierUploadArchiveInput!): JSON

  # glacier.UploadMultipartPart
  UploadMultipartPart(input: AwsGlacierUploadMultipartPartInput!): AwsGlacierUploadMultipartPartOutput
}

input AwsGlacierAbortMultipartUploadInput {
  accountId: String!
  vaultName: String!
  uploadId: String!
}

input AwsGlacierAbortVaultLockInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierAddTagsToVaultInput {
  accountId: String!
  vaultName: String!
  Tags: JSON
}

input AwsGlacierCompleteMultipartUploadInput {
  accountId: String!
  vaultName: String!
  uploadId: String!
  archiveSize: String
  checksum: String
}

input AwsGlacierCompleteVaultLockInput {
  accountId: String!
  vaultName: String!
  lockId: String!
}

input AwsGlacierCreateVaultInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierCreateVaultOutput {
  location: String
}

input AwsGlacierDeleteArchiveInput {
  accountId: String!
  vaultName: String!
  archiveId: String!
}

input AwsGlacierDeleteVaultAccessPolicyInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierDeleteVaultInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierDeleteVaultNotificationsInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierDescribeJobInput {
  accountId: String!
  vaultName: String!
  jobId: String!
}

input AwsGlacierDescribeVaultInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierGetDataRetrievalPolicyInput {
  accountId: String!
}

type AwsGlacierGetDataRetrievalPolicyOutput {
  Policy: AwsGlacierS1e
}

input AwsGlacierGetJobOutputInput {
  accountId: String!
  vaultName: String!
  jobId: String!
  range: String
}

type AwsGlacierGetJobOutputOutput {
  body: JSON
  checksum: String
  status: Int
  contentRange: String
  acceptRanges: String
  contentType: String
  archiveDescription: String
}

input AwsGlacierGetVaultAccessPolicyInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierGetVaultAccessPolicyOutput {
  policy: AwsGlacierS1o
}

input AwsGlacierGetVaultLockInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierGetVaultLockOutput {
  Policy: String
  State: String
  ExpirationDate: String
  CreationDate: String
}

input AwsGlacierGetVaultNotificationsInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierGetVaultNotificationsOutput {
  vaultNotificationConfig: AwsGlacierS1t
}

input AwsGlacierInitiateJobInput {
  accountId: String!
  vaultName: String!
  jobParameters: AwsGlacierInitiateJobJobParametersInput
}

input AwsGlacierInitiateJobJobParametersInput {
  Format: String
  Type: String
  ArchiveId: String
  Description: String
  SNSTopic: String
  RetrievalByteRange: String
  Tier: String
  InventoryRetrievalParameters: AwsGlacierInitiateJobJobParametersInventoryRetrievalParametersInput
  SelectParameters: AwsGlacierSpInput
  OutputLocation: AwsGlacierSxInput
}

input AwsGlacierInitiateJobJobParametersInventoryRetrievalParametersInput {
  StartDate: String
  EndDate: String
  Limit: String
  Marker: String
}

type AwsGlacierInitiateJobOutput {
  location: String
  jobId: String
  jobOutputPath: String
}

input AwsGlacierInitiateMultipartUploadInput {
  accountId: String!
  vaultName: String!
  archiveDescription: String
  partSize: String
}

type AwsGlacierInitiateMultipartUploadOutput {
  location: String
  uploadId: String
}

input AwsGlacierInitiateVaultLockInput {
  accountId: String!
  vaultName: String!
  policy: AwsGlacierInitiateVaultLockPolicyInput
}

type AwsGlacierInitiateVaultLockOutput {
  lockId: String
}

input AwsGlacierInitiateVaultLockPolicyInput {
  Policy: String
}

input AwsGlacierListJobsInput {
  accountId: String!
  vaultName: String!
  limit: String
  marker: String
  statuscode: String
  completed: String
}

type AwsGlacierListJobsOutput {
  JobList: [AwsGlacierSi]
  Marker: String
}

input AwsGlacierListMultipartUploadsInput {
  accountId: String!
  vaultName: String!
  marker: String
  limit: String
}

type AwsGlacierListMultipartUploadsOutput {
  UploadsList: [AwsGlacierListMultipartUploadsOutputUploadsList]
  Marker: String
}

type AwsGlacierListMultipartUploadsOutputUploadsList {
  MultipartUploadId: String
  VaultARN: String
  ArchiveDescription: String
  PartSizeInBytes: JSON
  CreationDate: String
}

input AwsGlacierListPartsInput {
  accountId: String!
  vaultName: String!
  uploadId: String!
  marker: String
  limit: String
}

type AwsGlacierListPartsOutput {
  MultipartUploadId: String
  VaultARN: String
  ArchiveDescription: String
  PartSizeInBytes: JSON
  CreationDate: String
  Parts: [AwsGlacierListPartsOutputParts]
  Marker: String
}

type AwsGlacierListPartsOutputParts {
  RangeInBytes: String
  SHA256TreeHash: String
}

input AwsGlacierListProvisionedCapacityInput {
  accountId: String!
}

type AwsGlacierListProvisionedCapacityOutput {
  ProvisionedCapacityList: [AwsGlacierListProvisionedCapacityOutputProvisionedCapacityList]
}

type AwsGlacierListProvisionedCapacityOutputProvisionedCapacityList {
  CapacityId: String
  StartDate: String
  ExpirationDate: String
}

input AwsGlacierListTagsForVaultInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierListTagsForVaultOutput {
  Tags: JSON
}

input AwsGlacierListVaultsInput {
  accountId: String!
  marker: String
  limit: String
}

type AwsGlacierListVaultsOutput {
  VaultList: [AwsGlacierS1a]
  Marker: String
}

input AwsGlacierPurchaseProvisionedCapacityInput {
  accountId: String!
}

type AwsGlacierPurchaseProvisionedCapacityOutput {
  capacityId: String
}

input AwsGlacierRemoveTagsFromVaultInput {
  accountId: String!
  vaultName: String!
  TagKeys: [String]
}

type AwsGlacierS1a {
  VaultARN: String
  VaultName: String
  CreationDate: String
  LastInventoryDate: String
  NumberOfArchives: JSON
  SizeInBytes: JSON
}

type AwsGlacierS1e {
  Rules: [AwsGlacierS1eRules]
}

input AwsGlacierS1eInput {
  Rules: [AwsGlacierS1eRulesInput]
}

type AwsGlacierS1eRules {
  Strategy: String
  BytesPerHour: JSON
}

input AwsGlacierS1eRulesInput {
  Strategy: String
  BytesPerHour: JSON
}

type AwsGlacierS1o {
  Policy: String
}

input AwsGlacierS1oInput {
  Policy: String
}

type AwsGlacierS1t {
  SNSTopic: String
  Events: [String]
}

input AwsGlacierS1tInput {
  SNSTopic: String
  Events: [String]
}

input AwsGlacierSetDataRetrievalPolicyInput {
  accountId: String!
  Policy: AwsGlacierS1eInput
}

input AwsGlacierSetVaultAccessPolicyInput {
  accountId: String!
  vaultName: String!
  policy: AwsGlacierS1oInput
}

input AwsGlacierSetVaultNotificationsInput {
  accountId: String!
  vaultName: String!
  vaultNotificationConfig: AwsGlacierS1tInput
}

type AwsGlacierSi {
  JobId: String
  JobDescription: String
  Action: String
  ArchiveId: String
  VaultARN: String
  CreationDate: String
  Completed: Boolean
  StatusCode: String
  StatusMessage: String
  ArchiveSizeInBytes: JSON
  InventorySizeInBytes: JSON
  SNSTopic: String
  CompletionDate: String
  SHA256TreeHash: String
  ArchiveSHA256TreeHash: String
  RetrievalByteRange: String
  Tier: String
  InventoryRetrievalParameters: AwsGlacierSiInventoryRetrievalParameters
  JobOutputPath: String
  SelectParameters: AwsGlacierSp
  OutputLocation: AwsGlacierSx
}

type AwsGlacierSiInventoryRetrievalParameters {
  Format: String
  StartDate: String
  EndDate: String
  Limit: String
  Marker: String
}

type AwsGlacierSp {
  InputSerialization: AwsGlacierSpInputSerialization
  ExpressionType: String
  Expression: String
  OutputSerialization: AwsGlacierSpOutputSerialization
}

input AwsGlacierSpInput {
  InputSerialization: AwsGlacierSpInputSerializationInput
  ExpressionType: String
  Expression: String
  OutputSerialization: AwsGlacierSpOutputSerializationInput
}

type AwsGlacierSpInputSerialization {
  csv: AwsGlacierSpInputSerializationCsv
}

type AwsGlacierSpInputSerializationCsv {
  FileHeaderInfo: String
  Comments: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsGlacierSpInputSerializationCsvInput {
  FileHeaderInfo: String
  Comments: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsGlacierSpInputSerializationInput {
  csv: AwsGlacierSpInputSerializationCsvInput
}

type AwsGlacierSpOutputSerialization {
  csv: AwsGlacierSpOutputSerializationCsv
}

type AwsGlacierSpOutputSerializationCsv {
  QuoteFields: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsGlacierSpOutputSerializationCsvInput {
  QuoteFields: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsGlacierSpOutputSerializationInput {
  csv: AwsGlacierSpOutputSerializationCsvInput
}

type AwsGlacierSx {
  S3: AwsGlacierSxS3
}

input AwsGlacierSxInput {
  S3: AwsGlacierSxS3Input
}

type AwsGlacierSxS3 {
  BucketName: String
  Prefix: String
  Encryption: AwsGlacierSxS3Encryption
  CannedACL: String
  AccessControlList: [AwsGlacierSxS3AccessControlList]
  Tagging: JSON
  UserMetadata: JSON
  StorageClass: String
}

type AwsGlacierSxS3AccessControlList {
  Grantee: AwsGlacierSxS3AccessControlListGrantee
  Permission: String
}

type AwsGlacierSxS3AccessControlListGrantee {
  Type: String!
  DisplayName: String
  URI: String
  ID: String
  EmailAddress: String
}

input AwsGlacierSxS3AccessControlListGranteeInput {
  Type: String!
  DisplayName: String
  URI: String
  ID: String
  EmailAddress: String
}

input AwsGlacierSxS3AccessControlListInput {
  Grantee: AwsGlacierSxS3AccessControlListGranteeInput
  Permission: String
}

type AwsGlacierSxS3Encryption {
  EncryptionType: String
  KMSKeyId: String
  KMSContext: String
}

input AwsGlacierSxS3EncryptionInput {
  EncryptionType: String
  KMSKeyId: String
  KMSContext: String
}

input AwsGlacierSxS3Input {
  BucketName: String
  Prefix: String
  Encryption: AwsGlacierSxS3EncryptionInput
  CannedACL: String
  AccessControlList: [AwsGlacierSxS3AccessControlListInput]
  Tagging: JSON
  UserMetadata: JSON
  StorageClass: String
}

input AwsGlacierUploadArchiveInput {
  vaultName: String!
  accountId: String!
  archiveDescription: String
  checksum: String
  body: JSON
}

input AwsGlacierUploadMultipartPartInput {
  accountId: String!
  vaultName: String!
  uploadId: String!
  checksum: String
  range: String
  body: JSON
}

type AwsGlacierUploadMultipartPartOutput {
  checksum: String
}

# AWS Glue (2017-03-31)
type AwsGlue {
  # glue.BatchCreatePartition
  BatchCreatePartition(input: AwsGlueBatchCreatePartitionInput!): AwsGlueBatchCreatePartitionOutput

  # glue.BatchDeleteConnection
  BatchDeleteConnection(input: AwsGlueBatchDeleteConnectionInput!): AwsGlueBatchDeleteConnectionOutput

  # glue.BatchDeletePartition
  BatchDeletePartition(input: AwsGlueBatchDeletePartitionInput!): AwsGlueBatchDeletePartitionOutput

  # glue.BatchDeleteTable
  BatchDeleteTable(input: AwsGlueBatchDeleteTableInput!): AwsGlueBatchDeleteTableOutput

  # glue.BatchGetPartition
  BatchGetPartition(input: AwsGlueBatchGetPartitionInput!): AwsGlueBatchGetPartitionOutput

  # glue.BatchStopJobRun
  BatchStopJobRun(input: AwsGlueBatchStopJobRunInput!): AwsGlueBatchStopJobRunOutput

  # glue.CreateClassifier
  CreateClassifier(input: AwsGlueCreateClassifierInput): JSON

  # glue.CreateConnection
  CreateConnection(input: AwsGlueCreateConnectionInput!): JSON

  # glue.CreateCrawler
  CreateCrawler(input: AwsGlueCreateCrawlerInput!): JSON

  # glue.CreateDatabase
  CreateDatabase(input: AwsGlueCreateDatabaseInput!): JSON

  # glue.CreateDevEndpoint
  CreateDevEndpoint(input: AwsGlueCreateDevEndpointInput!): AwsGlueCreateDevEndpointOutput

  # glue.CreateJob
  CreateJob(input: AwsGlueCreateJobInput!): AwsGlueCreateJobOutput

  # glue.CreatePartition
  CreatePartition(input: AwsGlueCreatePartitionInput!): JSON

  # glue.CreateScript
  CreateScript(input: AwsGlueCreateScriptInput): AwsGlueCreateScriptOutput

  # glue.CreateTable
  CreateTable(input: AwsGlueCreateTableInput!): JSON

  # glue.CreateTrigger
  CreateTrigger(input: AwsGlueCreateTriggerInput!): AwsGlueCreateTriggerOutput

  # glue.CreateUserDefinedFunction
  CreateUserDefinedFunction(input: AwsGlueCreateUserDefinedFunctionInput!): JSON

  # glue.DeleteClassifier
  DeleteClassifier(input: AwsGlueDeleteClassifierInput!): JSON

  # glue.DeleteConnection
  DeleteConnection(input: AwsGlueDeleteConnectionInput!): JSON

  # glue.DeleteCrawler
  DeleteCrawler(input: AwsGlueDeleteCrawlerInput!): JSON

  # glue.DeleteDatabase
  DeleteDatabase(input: AwsGlueDeleteDatabaseInput!): JSON

  # glue.DeleteDevEndpoint
  DeleteDevEndpoint(input: AwsGlueDeleteDevEndpointInput!): JSON

  # glue.DeleteJob
  DeleteJob(input: AwsGlueDeleteJobInput!): AwsGlueDeleteJobOutput

  # glue.DeletePartition
  DeletePartition(input: AwsGlueDeletePartitionInput!): JSON

  # glue.DeleteTable
  DeleteTable(input: AwsGlueDeleteTableInput!): JSON

  # glue.DeleteTrigger
  DeleteTrigger(input: AwsGlueDeleteTriggerInput!): AwsGlueDeleteTriggerOutput

  # glue.DeleteUserDefinedFunction
  DeleteUserDefinedFunction(input: AwsGlueDeleteUserDefinedFunctionInput!): JSON

  # glue.GetCatalogImportStatus
  GetCatalogImportStatus(input: AwsGlueGetCatalogImportStatusInput): AwsGlueGetCatalogImportStatusOutput

  # glue.GetClassifier
  GetClassifier(input: AwsGlueGetClassifierInput!): AwsGlueGetClassifierOutput

  # glue.GetClassifiers
  GetClassifiers(input: AwsGlueGetClassifiersInput): AwsGlueGetClassifiersOutput

  # glue.GetConnection
  GetConnection(input: AwsGlueGetConnectionInput!): AwsGlueGetConnectionOutput

  # glue.GetConnections
  GetConnections(input: AwsGlueGetConnectionsInput): AwsGlueGetConnectionsOutput

  # glue.GetCrawler
  GetCrawler(input: AwsGlueGetCrawlerInput!): AwsGlueGetCrawlerOutput

  # glue.GetCrawlerMetrics
  GetCrawlerMetrics(input: AwsGlueGetCrawlerMetricsInput): AwsGlueGetCrawlerMetricsOutput

  # glue.GetCrawlers
  GetCrawlers(input: AwsGlueGetCrawlersInput): AwsGlueGetCrawlersOutput

  # glue.GetDatabase
  GetDatabase(input: AwsGlueGetDatabaseInput!): AwsGlueGetDatabaseOutput

  # glue.GetDatabases
  GetDatabases(input: AwsGlueGetDatabasesInput): AwsGlueGetDatabasesOutput

  # glue.GetDataflowGraph
  GetDataflowGraph(input: AwsGlueGetDataflowGraphInput): AwsGlueGetDataflowGraphOutput

  # glue.GetDevEndpoint
  GetDevEndpoint(input: AwsGlueGetDevEndpointInput!): AwsGlueGetDevEndpointOutput

  # glue.GetDevEndpoints
  GetDevEndpoints(input: AwsGlueGetDevEndpointsInput): AwsGlueGetDevEndpointsOutput

  # glue.GetJob
  GetJob(input: AwsGlueGetJobInput!): AwsGlueGetJobOutput

  # glue.GetJobRun
  GetJobRun(input: AwsGlueGetJobRunInput!): AwsGlueGetJobRunOutput

  # glue.GetJobRuns
  GetJobRuns(input: AwsGlueGetJobRunsInput!): AwsGlueGetJobRunsOutput

  # glue.GetJobs
  GetJobs(input: AwsGlueGetJobsInput): AwsGlueGetJobsOutput

  # glue.GetMapping
  GetMapping(input: AwsGlueGetMappingInput!): AwsGlueGetMappingOutput

  # glue.GetPartition
  GetPartition(input: AwsGlueGetPartitionInput!): AwsGlueGetPartitionOutput

  # glue.GetPartitions
  GetPartitions(input: AwsGlueGetPartitionsInput!): AwsGlueGetPartitionsOutput

  # glue.GetPlan
  GetPlan(input: AwsGlueGetPlanInput!): AwsGlueGetPlanOutput

  # glue.GetTable
  GetTable(input: AwsGlueGetTableInput!): AwsGlueGetTableOutput

  # glue.GetTableVersions
  GetTableVersions(input: AwsGlueGetTableVersionsInput!): AwsGlueGetTableVersionsOutput

  # glue.GetTables
  GetTables(input: AwsGlueGetTablesInput!): AwsGlueGetTablesOutput

  # glue.GetTrigger
  GetTrigger(input: AwsGlueGetTriggerInput!): AwsGlueGetTriggerOutput

  # glue.GetTriggers
  GetTriggers(input: AwsGlueGetTriggersInput): AwsGlueGetTriggersOutput

  # glue.GetUserDefinedFunction
  GetUserDefinedFunction(input: AwsGlueGetUserDefinedFunctionInput!): AwsGlueGetUserDefinedFunctionOutput

  # glue.GetUserDefinedFunctions
  GetUserDefinedFunctions(input: AwsGlueGetUserDefinedFunctionsInput!): AwsGlueGetUserDefinedFunctionsOutput

  # glue.ImportCatalogToGlue
  ImportCatalogToGlue(input: AwsGlueImportCatalogToGlueInput): JSON

  # glue.ResetJobBookmark
  ResetJobBookmark(input: AwsGlueResetJobBookmarkInput!): AwsGlueResetJobBookmarkOutput

  # glue.StartCrawler
  StartCrawler(input: AwsGlueStartCrawlerInput!): JSON

  # glue.StartCrawlerSchedule
  StartCrawlerSchedule(input: AwsGlueStartCrawlerScheduleInput!): JSON

  # glue.StartJobRun
  StartJobRun(input: AwsGlueStartJobRunInput!): AwsGlueStartJobRunOutput

  # glue.StartTrigger
  StartTrigger(input: AwsGlueStartTriggerInput!): AwsGlueStartTriggerOutput

  # glue.StopCrawler
  StopCrawler(input: AwsGlueStopCrawlerInput!): JSON

  # glue.StopCrawlerSchedule
  StopCrawlerSchedule(input: AwsGlueStopCrawlerScheduleInput!): JSON

  # glue.StopTrigger
  StopTrigger(input: AwsGlueStopTriggerInput!): AwsGlueStopTriggerOutput

  # glue.UpdateClassifier
  UpdateClassifier(input: AwsGlueUpdateClassifierInput): JSON

  # glue.UpdateConnection
  UpdateConnection(input: AwsGlueUpdateConnectionInput!): JSON

  # glue.UpdateCrawler
  UpdateCrawler(input: AwsGlueUpdateCrawlerInput!): JSON

  # glue.UpdateCrawlerSchedule
  UpdateCrawlerSchedule(input: AwsGlueUpdateCrawlerScheduleInput!): JSON

  # glue.UpdateDatabase
  UpdateDatabase(input: AwsGlueUpdateDatabaseInput!): JSON

  # glue.UpdateDevEndpoint
  UpdateDevEndpoint(input: AwsGlueUpdateDevEndpointInput!): JSON

  # glue.UpdateJob
  UpdateJob(input: AwsGlueUpdateJobInput!): AwsGlueUpdateJobOutput

  # glue.UpdatePartition
  UpdatePartition(input: AwsGlueUpdatePartitionInput!): JSON

  # glue.UpdateTable
  UpdateTable(input: AwsGlueUpdateTableInput!): JSON

  # glue.UpdateTrigger
  UpdateTrigger(input: AwsGlueUpdateTriggerInput!): AwsGlueUpdateTriggerOutput

  # glue.UpdateUserDefinedFunction
  UpdateUserDefinedFunction(input: AwsGlueUpdateUserDefinedFunctionInput!): JSON
}

input AwsGlueBatchCreatePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionInputList: [AwsGlueS5Input]!
}

type AwsGlueBatchCreatePartitionOutput {
  Errors: [AwsGlueSv]
}

input AwsGlueBatchDeleteConnectionInput {
  CatalogId: String
  ConnectionNameList: [String]!
}

type AwsGlueBatchDeleteConnectionOutput {
  Succeeded: [String]
  Errors: JSON
}

input AwsGlueBatchDeletePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionsToDelete: [AwsGlueS15Input]!
}

type AwsGlueBatchDeletePartitionOutput {
  Errors: [AwsGlueSv]
}

input AwsGlueBatchDeleteTableInput {
  CatalogId: String
  DatabaseName: String!
  TablesToDelete: [String]!
}

type AwsGlueBatchDeleteTableOutput {
  Errors: [AwsGlueBatchDeleteTableOutputErrors]
}

type AwsGlueBatchDeleteTableOutputErrors {
  TableName: String
  ErrorDetail: AwsGlueSx
}

input AwsGlueBatchGetPartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionsToGet: [AwsGlueS15Input]!
}

type AwsGlueBatchGetPartitionOutput {
  Partitions: [AwsGlueS1g]
  UnprocessedKeys: [AwsGlueS15]
}

input AwsGlueBatchStopJobRunInput {
  JobName: String!
  JobRunIds: [String]!
}

type AwsGlueBatchStopJobRunOutput {
  SuccessfulSubmissions: [AwsGlueBatchStopJobRunOutputSuccessfulSubmissions]
  Errors: [AwsGlueBatchStopJobRunOutputErrors]
}

type AwsGlueBatchStopJobRunOutputErrors {
  JobName: String
  JobRunId: String
  ErrorDetail: AwsGlueSx
}

type AwsGlueBatchStopJobRunOutputSuccessfulSubmissions {
  JobName: String
  JobRunId: String
}

input AwsGlueCreateClassifierGrokClassifierInput {
  Classification: String!
  Name: String!
  GrokPattern: String!
  CustomPatterns: String
}

input AwsGlueCreateClassifierInput {
  GrokClassifier: AwsGlueCreateClassifierGrokClassifierInput
  XMLClassifier: AwsGlueCreateClassifierXMLClassifierInput
}

input AwsGlueCreateClassifierXMLClassifierInput {
  Classification: String!
  Name: String!
  RowTag: String
}

input AwsGlueCreateConnectionInput {
  CatalogId: String
  ConnectionInput: AwsGlueS1yInput!
}

input AwsGlueCreateCrawlerInput {
  Name: String!
  Role: String!
  DatabaseName: String!
  Description: String
  Targets: AwsGlueS29Input!
  Schedule: String
  Classifiers: [String]
  TablePrefix: String
  SchemaChangePolicy: AwsGlueS2kInput
  Configuration: String
}

input AwsGlueCreateDatabaseInput {
  CatalogId: String
  DatabaseInput: AwsGlueS2qInput!
}

input AwsGlueCreateDevEndpointInput {
  EndpointName: String!
  RoleArn: String!
  SecurityGroupIds: [String]
  SubnetId: String
  PublicKey: String!
  NumberOfNodes: Int
  ExtraPythonLibsS3Path: String
  ExtraJarsS3Path: String
}

type AwsGlueCreateDevEndpointOutput {
  EndpointName: String
  Status: String
  SecurityGroupIds: [String]
  SubnetId: String
  RoleArn: String
  YarnEndpointAddress: String
  ZeppelinRemoteSparkInterpreterPort: Int
  NumberOfNodes: Int
  AvailabilityZone: String
  VpcId: String
  ExtraPythonLibsS3Path: String
  ExtraJarsS3Path: String
  FailureReason: String
  CreatedTimestamp: Date
}

input AwsGlueCreateJobInput {
  Name: String!
  Description: String
  LogUri: String
  Role: String!
  ExecutionProperty: AwsGlueS33Input
  Command: AwsGlueS35Input!
  DefaultArguments: JSON
  Connections: AwsGlueS38Input
  MaxRetries: Int
  AllocatedCapacity: Int
}

type AwsGlueCreateJobOutput {
  Name: String
}

input AwsGlueCreatePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionInput: AwsGlueS5Input!
}

input AwsGlueCreateScriptInput {
  DagNodes: [AwsGlueS3eInput]
  DagEdges: [AwsGlueS3mInput]
}

type AwsGlueCreateScriptOutput {
  PythonScript: String
}

input AwsGlueCreateTableInput {
  CatalogId: String
  DatabaseName: String!
  TableInput: AwsGlueS3rInput!
}

input AwsGlueCreateTriggerInput {
  Name: String!
  Type: String!
  Schedule: String
  Predicate: AwsGlueS3yInput
  Actions: [AwsGlueS44Input]!
  Description: String
}

type AwsGlueCreateTriggerOutput {
  Name: String
}

input AwsGlueCreateUserDefinedFunctionInput {
  CatalogId: String
  DatabaseName: String!
  FunctionInput: AwsGlueS48Input!
}

input AwsGlueDeleteClassifierInput {
  Name: String!
}

input AwsGlueDeleteConnectionInput {
  CatalogId: String
  ConnectionName: String!
}

input AwsGlueDeleteCrawlerInput {
  Name: String!
}

input AwsGlueDeleteDatabaseInput {
  CatalogId: String
  Name: String!
}

input AwsGlueDeleteDevEndpointInput {
  EndpointName: String!
}

input AwsGlueDeleteJobInput {
  JobName: String!
}

type AwsGlueDeleteJobOutput {
  JobName: String
}

input AwsGlueDeletePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionValues: [String]!
}

input AwsGlueDeleteTableInput {
  CatalogId: String
  DatabaseName: String!
  Name: String!
}

input AwsGlueDeleteTriggerInput {
  Name: String!
}

type AwsGlueDeleteTriggerOutput {
  Name: String
}

input AwsGlueDeleteUserDefinedFunctionInput {
  CatalogId: String
  DatabaseName: String!
  FunctionName: String!
}

input AwsGlueGetCatalogImportStatusInput {
  CatalogId: String
}

type AwsGlueGetCatalogImportStatusOutput {
  ImportStatus: AwsGlueGetCatalogImportStatusOutputImportStatus
}

type AwsGlueGetCatalogImportStatusOutputImportStatus {
  ImportCompleted: Boolean
  ImportTime: Date
  ImportedBy: String
}

input AwsGlueGetClassifierInput {
  Name: String!
}

type AwsGlueGetClassifierOutput {
  Classifier: AwsGlueS53
}

input AwsGlueGetClassifiersInput {
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetClassifiersOutput {
  Classifiers: [AwsGlueS53]
  NextToken: String
}

input AwsGlueGetConnectionInput {
  CatalogId: String
  Name: String!
}

type AwsGlueGetConnectionOutput {
  Connection: AwsGlueS5e
}

input AwsGlueGetConnectionsFilterInput {
  MatchCriteria: [String]
  ConnectionType: String
}

input AwsGlueGetConnectionsInput {
  CatalogId: String
  Filter: AwsGlueGetConnectionsFilterInput
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetConnectionsOutput {
  ConnectionList: [AwsGlueS5e]
  NextToken: String
}

input AwsGlueGetCrawlerInput {
  Name: String!
}

input AwsGlueGetCrawlerMetricsInput {
  CrawlerNameList: [String]
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetCrawlerMetricsOutput {
  CrawlerMetricsList: [AwsGlueGetCrawlerMetricsOutputCrawlerMetricsList]
  NextToken: String
}

type AwsGlueGetCrawlerMetricsOutputCrawlerMetricsList {
  CrawlerName: String
  TimeLeftSeconds: JSON
  StillEstimating: Boolean
  LastRuntimeSeconds: JSON
  MedianRuntimeSeconds: JSON
  TablesCreated: Int
  TablesUpdated: Int
  TablesDeleted: Int
}

type AwsGlueGetCrawlerOutput {
  Crawler: AwsGlueS5l
}

input AwsGlueGetCrawlersInput {
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetCrawlersOutput {
  Crawlers: [AwsGlueS5l]
  NextToken: String
}

input AwsGlueGetDatabaseInput {
  CatalogId: String
  Name: String!
}

type AwsGlueGetDatabaseOutput {
  Database: AwsGlueS66
}

input AwsGlueGetDatabasesInput {
  CatalogId: String
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetDatabasesOutput {
  DatabaseList: [AwsGlueS66]!
  NextToken: String
}

input AwsGlueGetDataflowGraphInput {
  PythonScript: String
}

type AwsGlueGetDataflowGraphOutput {
  DagNodes: [AwsGlueS3e]
  DagEdges: [AwsGlueS3m]
}

input AwsGlueGetDevEndpointInput {
  EndpointName: String!
}

type AwsGlueGetDevEndpointOutput {
  DevEndpoint: AwsGlueS6e
}

input AwsGlueGetDevEndpointsInput {
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetDevEndpointsOutput {
  DevEndpoints: [AwsGlueS6e]
  NextToken: String
}

input AwsGlueGetJobInput {
  JobName: String!
}

type AwsGlueGetJobOutput {
  Job: AwsGlueS6k
}

input AwsGlueGetJobRunInput {
  JobName: String!
  RunId: String!
  PredecessorsIncluded: Boolean
}

type AwsGlueGetJobRunOutput {
  JobRun: AwsGlueS6o
}

input AwsGlueGetJobRunsInput {
  JobName: String!
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetJobRunsOutput {
  JobRuns: [AwsGlueS6o]
  NextToken: String
}

input AwsGlueGetJobsInput {
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetJobsOutput {
  Jobs: [AwsGlueS6k]
  NextToken: String
}

input AwsGlueGetMappingInput {
  Source: AwsGlueS70Input!
  Sinks: [AwsGlueS70Input]
  Location: AwsGlueS72Input
}

type AwsGlueGetMappingOutput {
  Mapping: [AwsGlueS74]!
}

input AwsGlueGetPartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionValues: [String]!
}

type AwsGlueGetPartitionOutput {
  Partition: AwsGlueS1g
}

input AwsGlueGetPartitionsInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  Expression: String
  NextToken: String
  Segment: AwsGlueGetPartitionsSegmentInput
  MaxResults: Int
}

type AwsGlueGetPartitionsOutput {
  Partitions: [AwsGlueS1g]
  NextToken: String
}

input AwsGlueGetPartitionsSegmentInput {
  SegmentNumber: Int!
  TotalSegments: Int!
}

input AwsGlueGetPlanInput {
  Mapping: [AwsGlueS74Input]!
  Source: AwsGlueS70Input!
  Sinks: [AwsGlueS70Input]
  Location: AwsGlueS72Input
}

type AwsGlueGetPlanOutput {
  PythonScript: String
}

input AwsGlueGetTableInput {
  CatalogId: String
  DatabaseName: String!
  Name: String!
}

type AwsGlueGetTableOutput {
  Table: AwsGlueS7k
}

input AwsGlueGetTablesInput {
  CatalogId: String
  DatabaseName: String!
  Expression: String
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetTablesOutput {
  TableList: [AwsGlueS7k]
  NextToken: String
}

input AwsGlueGetTableVersionsInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetTableVersionsOutput {
  TableVersions: [AwsGlueGetTableVersionsOutputTableVersions]
  NextToken: String
}

type AwsGlueGetTableVersionsOutputTableVersions {
  Table: AwsGlueS7k
  VersionId: String
}

input AwsGlueGetTriggerInput {
  Name: String!
}

type AwsGlueGetTriggerOutput {
  Trigger: AwsGlueS7w
}

input AwsGlueGetTriggersInput {
  NextToken: String
  DependentJobName: String
  MaxResults: Int
}

type AwsGlueGetTriggersOutput {
  Triggers: [AwsGlueS7w]
  NextToken: String
}

input AwsGlueGetUserDefinedFunctionInput {
  CatalogId: String
  DatabaseName: String!
  FunctionName: String!
}

type AwsGlueGetUserDefinedFunctionOutput {
  UserDefinedFunction: AwsGlueS83
}

input AwsGlueGetUserDefinedFunctionsInput {
  CatalogId: String
  DatabaseName: String!
  Pattern: String!
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetUserDefinedFunctionsOutput {
  UserDefinedFunctions: [AwsGlueS83]
  NextToken: String
}

input AwsGlueImportCatalogToGlueInput {
  CatalogId: String
}

input AwsGlueResetJobBookmarkInput {
  JobName: String!
}

type AwsGlueResetJobBookmarkOutput {
  JobBookmarkEntry: AwsGlueResetJobBookmarkOutputJobBookmarkEntry
}

type AwsGlueResetJobBookmarkOutputJobBookmarkEntry {
  JobName: String
  Version: Int
  Run: Int
  Attempt: Int
  JobBookmark: String
}

type AwsGlueS15 {
  Values: [String]!
}

input AwsGlueS15Input {
  Values: [String]!
}

type AwsGlueS1g {
  Values: [String]
  DatabaseName: String
  TableName: String
  CreationTime: Date
  LastAccessTime: Date
  StorageDescriptor: AwsGlueS9
  Parameters: JSON
  LastAnalyzedTime: Date
}

input AwsGlueS1yInput {
  Name: String
  Description: String
  ConnectionType: String
  MatchCriteria: [String]
  ConnectionProperties: JSON
  PhysicalConnectionRequirements: AwsGlueS23Input
}

type AwsGlueS23 {
  SubnetId: String
  SecurityGroupIdList: [String]
  AvailabilityZone: String
}

input AwsGlueS23Input {
  SubnetId: String
  SecurityGroupIdList: [String]
  AvailabilityZone: String
}

type AwsGlueS29 {
  S3Targets: [AwsGlueS29S3Targets]
  JdbcTargets: [AwsGlueS29JdbcTargets]
}

input AwsGlueS29Input {
  S3Targets: [AwsGlueS29S3TargetsInput]
  JdbcTargets: [AwsGlueS29JdbcTargetsInput]
}

type AwsGlueS29JdbcTargets {
  ConnectionName: String
  Path: String
  Exclusions: [String]
}

input AwsGlueS29JdbcTargetsInput {
  ConnectionName: String
  Path: String
  Exclusions: [String]
}

type AwsGlueS29S3Targets {
  Path: String
  Exclusions: [String]
}

input AwsGlueS29S3TargetsInput {
  Path: String
  Exclusions: [String]
}

type AwsGlueS2k {
  UpdateBehavior: String
  DeleteBehavior: String
}

input AwsGlueS2kInput {
  UpdateBehavior: String
  DeleteBehavior: String
}

input AwsGlueS2qInput {
  Name: String!
  Description: String
  LocationUri: String
  Parameters: JSON
}

type AwsGlueS33 {
  MaxConcurrentRuns: Int
}

input AwsGlueS33Input {
  MaxConcurrentRuns: Int
}

type AwsGlueS35 {
  Name: String
  ScriptLocation: String
}

input AwsGlueS35Input {
  Name: String
  ScriptLocation: String
}

type AwsGlueS38 {
  Connections: [String]
}

input AwsGlueS38Input {
  Connections: [String]
}

type AwsGlueS3e {
  Id: String!
  NodeType: String!
  Args: [AwsGlueS3i]!
  LineNumber: Int
}

input AwsGlueS3eInput {
  Id: String!
  NodeType: String!
  Args: [AwsGlueS3iInput]!
  LineNumber: Int
}

type AwsGlueS3i {
  Name: String!
  Value: String!
  Param: Boolean
}

input AwsGlueS3iInput {
  Name: String!
  Value: String!
  Param: Boolean
}

type AwsGlueS3m {
  Source: String!
  Target: String!
  TargetParameter: String
}

input AwsGlueS3mInput {
  Source: String!
  Target: String!
  TargetParameter: String
}

input AwsGlueS3rInput {
  Name: String!
  Description: String
  Owner: String
  LastAccessTime: Date
  LastAnalyzedTime: Date
  Retention: Int
  StorageDescriptor: AwsGlueS9Input
  PartitionKeys: [AwsGlueSaInput]
  ViewOriginalText: String
  ViewExpandedText: String
  TableType: String
  Parameters: JSON
}

type AwsGlueS3y {
  Logical: String
  Conditions: [AwsGlueS3yConditions]
}

type AwsGlueS3yConditions {
  LogicalOperator: String
  JobName: String
  State: String
}

input AwsGlueS3yConditionsInput {
  LogicalOperator: String
  JobName: String
  State: String
}

input AwsGlueS3yInput {
  Logical: String
  Conditions: [AwsGlueS3yConditionsInput]
}

type AwsGlueS44 {
  JobName: String
  Arguments: JSON
}

input AwsGlueS44Input {
  JobName: String
  Arguments: JSON
}

input AwsGlueS48Input {
  FunctionName: String
  ClassName: String
  OwnerName: String
  OwnerType: String
  ResourceUris: [AwsGlueS4aInput]
}

type AwsGlueS4a {
  ResourceType: String
  Uri: String
}

input AwsGlueS4aInput {
  ResourceType: String
  Uri: String
}

type AwsGlueS53 {
  GrokClassifier: AwsGlueS53GrokClassifier
  XMLClassifier: AwsGlueS53XMLClassifier
}

type AwsGlueS53GrokClassifier {
  Name: String!
  Classification: String!
  CreationTime: Date
  LastUpdated: Date
  Version: JSON
  GrokPattern: String!
  CustomPatterns: String
}

type AwsGlueS53XMLClassifier {
  Name: String!
  Classification: String!
  CreationTime: Date
  LastUpdated: Date
  Version: JSON
  RowTag: String
}

type AwsGlueS5e {
  Name: String
  Description: String
  ConnectionType: String
  MatchCriteria: [String]
  ConnectionProperties: JSON
  PhysicalConnectionRequirements: AwsGlueS23
  CreationTime: Date
  LastUpdatedTime: Date
  LastUpdatedBy: String
}

input AwsGlueS5Input {
  Values: [String]
  LastAccessTime: Date
  StorageDescriptor: AwsGlueS9Input
  Parameters: JSON
  LastAnalyzedTime: Date
}

type AwsGlueS5l {
  Name: String
  Role: String
  Targets: AwsGlueS29
  DatabaseName: String
  Description: String
  Classifiers: [String]
  SchemaChangePolicy: AwsGlueS2k
  State: String
  TablePrefix: String
  Schedule: AwsGlueS5lSchedule
  CrawlElapsedTime: JSON
  CreationTime: Date
  LastUpdated: Date
  LastCrawl: AwsGlueS5lLastCrawl
  Version: JSON
  Configuration: String
}

type AwsGlueS5lLastCrawl {
  Status: String
  ErrorMessage: String
  LogGroup: String
  LogStream: String
  MessagePrefix: String
  StartTime: Date
}

type AwsGlueS5lSchedule {
  ScheduleExpression: String
  State: String
}

type AwsGlueS66 {
  Name: String!
  Description: String
  LocationUri: String
  Parameters: JSON
  CreateTime: Date
}

type AwsGlueS6e {
  EndpointName: String
  RoleArn: String
  SecurityGroupIds: [String]
  SubnetId: String
  YarnEndpointAddress: String
  ZeppelinRemoteSparkInterpreterPort: Int
  PublicAddress: String
  Status: String
  NumberOfNodes: Int
  AvailabilityZone: String
  VpcId: String
  ExtraPythonLibsS3Path: String
  ExtraJarsS3Path: String
  FailureReason: String
  LastUpdateStatus: String
  CreatedTimestamp: Date
  LastModifiedTimestamp: Date
  PublicKey: String
}

type AwsGlueS6k {
  Name: String
  Description: String
  LogUri: String
  Role: String
  CreatedOn: Date
  LastModifiedOn: Date
  ExecutionProperty: AwsGlueS33
  Command: AwsGlueS35
  DefaultArguments: JSON
  Connections: AwsGlueS38
  MaxRetries: Int
  AllocatedCapacity: Int
}

type AwsGlueS6o {
  Id: String
  Attempt: Int
  PreviousRunId: String
  TriggerName: String
  JobName: String
  StartedOn: Date
  LastModifiedOn: Date
  CompletedOn: Date
  JobRunState: String
  Arguments: JSON
  ErrorMessage: String
  PredecessorRuns: [AwsGlueS6oPredecessorRuns]
  AllocatedCapacity: Int
}

type AwsGlueS6oPredecessorRuns {
  JobName: String
  RunId: String
}

input AwsGlueS70Input {
  DatabaseName: String!
  TableName: String!
}

input AwsGlueS72Input {
  Jdbc: [AwsGlueS3iInput]
  S3: [AwsGlueS3iInput]
}

type AwsGlueS74 {
  SourceTable: String
  SourcePath: String
  SourceType: String
  TargetTable: String
  TargetPath: String
  TargetType: String
}

input AwsGlueS74Input {
  SourceTable: String
  SourcePath: String
  SourceType: String
  TargetTable: String
  TargetPath: String
  TargetType: String
}

type AwsGlueS7k {
  Name: String!
  DatabaseName: String
  Description: String
  Owner: String
  CreateTime: Date
  UpdateTime: Date
  LastAccessTime: Date
  LastAnalyzedTime: Date
  Retention: Int
  StorageDescriptor: AwsGlueS9
  PartitionKeys: [AwsGlueSa]
  ViewOriginalText: String
  ViewExpandedText: String
  TableType: String
  Parameters: JSON
  CreatedBy: String
}

type AwsGlueS7w {
  Name: String
  Id: String
  Type: String
  State: String
  Description: String
  Schedule: String
  Actions: [AwsGlueS44]
  Predicate: AwsGlueS3y
}

type AwsGlueS83 {
  FunctionName: String
  ClassName: String
  OwnerName: String
  OwnerType: String
  CreateTime: Date
  ResourceUris: [AwsGlueS4a]
}

type AwsGlueS9 {
  Columns: [AwsGlueSa]
  Location: String
  InputFormat: String
  OutputFormat: String
  Compressed: Boolean
  NumberOfBuckets: Int
  SerdeInfo: AwsGlueS9SerdeInfo
  BucketColumns: [String]
  SortColumns: [AwsGlueS9SortColumns]
  Parameters: JSON
  SkewedInfo: AwsGlueS9SkewedInfo
  StoredAsSubDirectories: Boolean
}

input AwsGlueS9Input {
  Columns: [AwsGlueSaInput]
  Location: String
  InputFormat: String
  OutputFormat: String
  Compressed: Boolean
  NumberOfBuckets: Int
  SerdeInfo: AwsGlueS9SerdeInfoInput
  BucketColumns: [String]
  SortColumns: [AwsGlueS9SortColumnsInput]
  Parameters: JSON
  SkewedInfo: AwsGlueS9SkewedInfoInput
  StoredAsSubDirectories: Boolean
}

type AwsGlueS9SerdeInfo {
  Name: String
  SerializationLibrary: String
  Parameters: JSON
}

input AwsGlueS9SerdeInfoInput {
  Name: String
  SerializationLibrary: String
  Parameters: JSON
}

type AwsGlueS9SkewedInfo {
  SkewedColumnNames: [String]
  SkewedColumnValues: [String]
  SkewedColumnValueLocationMaps: JSON
}

input AwsGlueS9SkewedInfoInput {
  SkewedColumnNames: [String]
  SkewedColumnValues: [String]
  SkewedColumnValueLocationMaps: JSON
}

type AwsGlueS9SortColumns {
  Column: String!
  SortOrder: Int!
}

input AwsGlueS9SortColumnsInput {
  Column: String!
  SortOrder: Int!
}

type AwsGlueSa {
  Name: String!
  Type: String
  Comment: String
}

input AwsGlueSaInput {
  Name: String!
  Type: String
  Comment: String
}

input AwsGlueStartCrawlerInput {
  Name: String!
}

input AwsGlueStartCrawlerScheduleInput {
  CrawlerName: String!
}

input AwsGlueStartJobRunInput {
  JobName: String!
  JobRunId: String
  Arguments: JSON
  AllocatedCapacity: Int
}

type AwsGlueStartJobRunOutput {
  JobRunId: String
}

input AwsGlueStartTriggerInput {
  Name: String!
}

type AwsGlueStartTriggerOutput {
  Name: String
}

input AwsGlueStopCrawlerInput {
  Name: String!
}

input AwsGlueStopCrawlerScheduleInput {
  CrawlerName: String!
}

input AwsGlueStopTriggerInput {
  Name: String!
}

type AwsGlueStopTriggerOutput {
  Name: String
}

type AwsGlueSv {
  PartitionValues: [String]
  ErrorDetail: AwsGlueSx
}

type AwsGlueSx {
  ErrorCode: String
  ErrorMessage: String
}

input AwsGlueUpdateClassifierGrokClassifierInput {
  Name: String!
  Classification: String
  GrokPattern: String
  CustomPatterns: String
}

input AwsGlueUpdateClassifierInput {
  GrokClassifier: AwsGlueUpdateClassifierGrokClassifierInput
  XMLClassifier: AwsGlueUpdateClassifierXMLClassifierInput
}

input AwsGlueUpdateClassifierXMLClassifierInput {
  Name: String!
  Classification: String
  RowTag: String
}

input AwsGlueUpdateConnectionInput {
  CatalogId: String
  Name: String!
  ConnectionInput: AwsGlueS1yInput!
}

input AwsGlueUpdateCrawlerInput {
  Name: String!
  Role: String
  DatabaseName: String
  Description: String
  Targets: AwsGlueS29Input
  Schedule: String
  Classifiers: [String]
  TablePrefix: String
  SchemaChangePolicy: AwsGlueS2kInput
  Configuration: String
}

input AwsGlueUpdateCrawlerScheduleInput {
  CrawlerName: String!
  Schedule: String
}

input AwsGlueUpdateDatabaseInput {
  CatalogId: String
  Name: String!
  DatabaseInput: AwsGlueS2qInput!
}

input AwsGlueUpdateDevEndpointCustomLibrariesInput {
  ExtraPythonLibsS3Path: String
  ExtraJarsS3Path: String
}

input AwsGlueUpdateDevEndpointInput {
  EndpointName: String!
  PublicKey: String
  CustomLibraries: AwsGlueUpdateDevEndpointCustomLibrariesInput
  UpdateEtlLibraries: Boolean
}

input AwsGlueUpdateJobInput {
  JobName: String!
  JobUpdate: AwsGlueUpdateJobJobUpdateInput!
}

input AwsGlueUpdateJobJobUpdateInput {
  Description: String
  LogUri: String
  Role: String
  ExecutionProperty: AwsGlueS33Input
  Command: AwsGlueS35Input
  DefaultArguments: JSON
  Connections: AwsGlueS38Input
  MaxRetries: Int
  AllocatedCapacity: Int
}

type AwsGlueUpdateJobOutput {
  JobName: String
}

input AwsGlueUpdatePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionValueList: [String]!
  PartitionInput: AwsGlueS5Input!
}

input AwsGlueUpdateTableInput {
  CatalogId: String
  DatabaseName: String!
  TableInput: AwsGlueS3rInput!
}

input AwsGlueUpdateTriggerInput {
  Name: String!
  TriggerUpdate: AwsGlueUpdateTriggerTriggerUpdateInput!
}

type AwsGlueUpdateTriggerOutput {
  Trigger: AwsGlueS7w
}

input AwsGlueUpdateTriggerTriggerUpdateInput {
  Name: String
  Description: String
  Schedule: String
  Actions: [AwsGlueS44Input]
  Predicate: AwsGlueS3yInput
}

input AwsGlueUpdateUserDefinedFunctionInput {
  CatalogId: String
  DatabaseName: String!
  FunctionName: String!
  FunctionInput: AwsGlueS48Input!
}

# AWS Greengrass (2017-06-07)
type AwsGreengrass {
  # greengrass.AssociateRoleToGroup
  AssociateRoleToGroup(input: AwsGreengrassAssociateRoleToGroupInput!): AwsGreengrassAssociateRoleToGroupOutput

  # greengrass.AssociateServiceRoleToAccount
  AssociateServiceRoleToAccount(input: AwsGreengrassAssociateServiceRoleToAccountInput): AwsGreengrassAssociateServiceRoleToAccountOutput

  # greengrass.CreateCoreDefinition
  CreateCoreDefinition(input: AwsGreengrassCreateCoreDefinitionInput): AwsGreengrassCreateCoreDefinitionOutput

  # greengrass.CreateCoreDefinitionVersion
  CreateCoreDefinitionVersion(input: AwsGreengrassCreateCoreDefinitionVersionInput!): AwsGreengrassCreateCoreDefinitionVersionOutput

  # greengrass.CreateDeployment
  CreateDeployment(input: AwsGreengrassCreateDeploymentInput!): AwsGreengrassCreateDeploymentOutput

  # greengrass.CreateDeviceDefinition
  CreateDeviceDefinition(input: AwsGreengrassCreateDeviceDefinitionInput): AwsGreengrassCreateDeviceDefinitionOutput

  # greengrass.CreateDeviceDefinitionVersion
  CreateDeviceDefinitionVersion(input: AwsGreengrassCreateDeviceDefinitionVersionInput!): AwsGreengrassCreateDeviceDefinitionVersionOutput

  # greengrass.CreateFunctionDefinition
  CreateFunctionDefinition(input: AwsGreengrassCreateFunctionDefinitionInput): AwsGreengrassCreateFunctionDefinitionOutput

  # greengrass.CreateFunctionDefinitionVersion
  CreateFunctionDefinitionVersion(input: AwsGreengrassCreateFunctionDefinitionVersionInput!): AwsGreengrassCreateFunctionDefinitionVersionOutput

  # greengrass.CreateGroup
  CreateGroup(input: AwsGreengrassCreateGroupInput): AwsGreengrassCreateGroupOutput

  # greengrass.CreateGroupCertificateAuthority
  CreateGroupCertificateAuthority(input: AwsGreengrassCreateGroupCertificateAuthorityInput!): AwsGreengrassCreateGroupCertificateAuthorityOutput

  # greengrass.CreateGroupVersion
  CreateGroupVersion(input: AwsGreengrassCreateGroupVersionInput!): AwsGreengrassCreateGroupVersionOutput

  # greengrass.CreateLoggerDefinition
  CreateLoggerDefinition(input: AwsGreengrassCreateLoggerDefinitionInput): AwsGreengrassCreateLoggerDefinitionOutput

  # greengrass.CreateLoggerDefinitionVersion
  CreateLoggerDefinitionVersion(input: AwsGreengrassCreateLoggerDefinitionVersionInput!): AwsGreengrassCreateLoggerDefinitionVersionOutput

  # greengrass.CreateResourceDefinition
  CreateResourceDefinition(input: AwsGreengrassCreateResourceDefinitionInput): AwsGreengrassCreateResourceDefinitionOutput

  # greengrass.CreateResourceDefinitionVersion
  CreateResourceDefinitionVersion(input: AwsGreengrassCreateResourceDefinitionVersionInput!): AwsGreengrassCreateResourceDefinitionVersionOutput

  # greengrass.CreateSoftwareUpdateJob
  CreateSoftwareUpdateJob(input: AwsGreengrassCreateSoftwareUpdateJobInput): AwsGreengrassCreateSoftwareUpdateJobOutput

  # greengrass.CreateSubscriptionDefinition
  CreateSubscriptionDefinition(input: AwsGreengrassCreateSubscriptionDefinitionInput): AwsGreengrassCreateSubscriptionDefinitionOutput

  # greengrass.CreateSubscriptionDefinitionVersion
  CreateSubscriptionDefinitionVersion(input: AwsGreengrassCreateSubscriptionDefinitionVersionInput!): AwsGreengrassCreateSubscriptionDefinitionVersionOutput

  # greengrass.DeleteCoreDefinition
  DeleteCoreDefinition(input: AwsGreengrassDeleteCoreDefinitionInput!): JSON

  # greengrass.DeleteDeviceDefinition
  DeleteDeviceDefinition(input: AwsGreengrassDeleteDeviceDefinitionInput!): JSON

  # greengrass.DeleteFunctionDefinition
  DeleteFunctionDefinition(input: AwsGreengrassDeleteFunctionDefinitionInput!): JSON

  # greengrass.DeleteGroup
  DeleteGroup(input: AwsGreengrassDeleteGroupInput!): JSON

  # greengrass.DeleteLoggerDefinition
  DeleteLoggerDefinition(input: AwsGreengrassDeleteLoggerDefinitionInput!): JSON

  # greengrass.DeleteResourceDefinition
  DeleteResourceDefinition(input: AwsGreengrassDeleteResourceDefinitionInput!): JSON

  # greengrass.DeleteSubscriptionDefinition
  DeleteSubscriptionDefinition(input: AwsGreengrassDeleteSubscriptionDefinitionInput!): JSON

  # greengrass.DisassociateRoleFromGroup
  DisassociateRoleFromGroup(input: AwsGreengrassDisassociateRoleFromGroupInput!): AwsGreengrassDisassociateRoleFromGroupOutput

  # greengrass.DisassociateServiceRoleFromAccount
  DisassociateServiceRoleFromAccount(input: JSON): AwsGreengrassDisassociateServiceRoleFromAccountOutput

  # greengrass.GetAssociatedRole
  GetAssociatedRole(input: AwsGreengrassGetAssociatedRoleInput!): AwsGreengrassGetAssociatedRoleOutput

  # greengrass.GetConnectivityInfo
  GetConnectivityInfo(input: AwsGreengrassGetConnectivityInfoInput!): AwsGreengrassGetConnectivityInfoOutput

  # greengrass.GetCoreDefinition
  GetCoreDefinition(input: AwsGreengrassGetCoreDefinitionInput!): AwsGreengrassGetCoreDefinitionOutput

  # greengrass.GetCoreDefinitionVersion
  GetCoreDefinitionVersion(input: AwsGreengrassGetCoreDefinitionVersionInput!): AwsGreengrassGetCoreDefinitionVersionOutput

  # greengrass.GetDeploymentStatus
  GetDeploymentStatus(input: AwsGreengrassGetDeploymentStatusInput!): AwsGreengrassGetDeploymentStatusOutput

  # greengrass.GetDeviceDefinition
  GetDeviceDefinition(input: AwsGreengrassGetDeviceDefinitionInput!): AwsGreengrassGetDeviceDefinitionOutput

  # greengrass.GetDeviceDefinitionVersion
  GetDeviceDefinitionVersion(input: AwsGreengrassGetDeviceDefinitionVersionInput!): AwsGreengrassGetDeviceDefinitionVersionOutput

  # greengrass.GetFunctionDefinition
  GetFunctionDefinition(input: AwsGreengrassGetFunctionDefinitionInput!): AwsGreengrassGetFunctionDefinitionOutput

  # greengrass.GetFunctionDefinitionVersion
  GetFunctionDefinitionVersion(input: AwsGreengrassGetFunctionDefinitionVersionInput!): AwsGreengrassGetFunctionDefinitionVersionOutput

  # greengrass.GetGroup
  GetGroup(input: AwsGreengrassGetGroupInput!): AwsGreengrassGetGroupOutput

  # greengrass.GetGroupCertificateAuthority
  GetGroupCertificateAuthority(input: AwsGreengrassGetGroupCertificateAuthorityInput!): AwsGreengrassGetGroupCertificateAuthorityOutput

  # greengrass.GetGroupCertificateConfiguration
  GetGroupCertificateConfiguration(input: AwsGreengrassGetGroupCertificateConfigurationInput!): AwsGreengrassGetGroupCertificateConfigurationOutput

  # greengrass.GetGroupVersion
  GetGroupVersion(input: AwsGreengrassGetGroupVersionInput!): AwsGreengrassGetGroupVersionOutput

  # greengrass.GetLoggerDefinition
  GetLoggerDefinition(input: AwsGreengrassGetLoggerDefinitionInput!): AwsGreengrassGetLoggerDefinitionOutput

  # greengrass.GetLoggerDefinitionVersion
  GetLoggerDefinitionVersion(input: AwsGreengrassGetLoggerDefinitionVersionInput!): AwsGreengrassGetLoggerDefinitionVersionOutput

  # greengrass.GetResourceDefinition
  GetResourceDefinition(input: AwsGreengrassGetResourceDefinitionInput!): AwsGreengrassGetResourceDefinitionOutput

  # greengrass.GetResourceDefinitionVersion
  GetResourceDefinitionVersion(input: AwsGreengrassGetResourceDefinitionVersionInput!): AwsGreengrassGetResourceDefinitionVersionOutput

  # greengrass.GetServiceRoleForAccount
  GetServiceRoleForAccount(input: JSON): AwsGreengrassGetServiceRoleForAccountOutput

  # greengrass.GetSubscriptionDefinition
  GetSubscriptionDefinition(input: AwsGreengrassGetSubscriptionDefinitionInput!): AwsGreengrassGetSubscriptionDefinitionOutput

  # greengrass.GetSubscriptionDefinitionVersion
  GetSubscriptionDefinitionVersion(input: AwsGreengrassGetSubscriptionDefinitionVersionInput!): AwsGreengrassGetSubscriptionDefinitionVersionOutput

  # greengrass.ListCoreDefinitionVersions
  ListCoreDefinitionVersions(input: AwsGreengrassListCoreDefinitionVersionsInput!): AwsGreengrassListCoreDefinitionVersionsOutput

  # greengrass.ListCoreDefinitions
  ListCoreDefinitions(input: AwsGreengrassListCoreDefinitionsInput): AwsGreengrassListCoreDefinitionsOutput

  # greengrass.ListDeployments
  ListDeployments(input: AwsGreengrassListDeploymentsInput!): AwsGreengrassListDeploymentsOutput

  # greengrass.ListDeviceDefinitionVersions
  ListDeviceDefinitionVersions(input: AwsGreengrassListDeviceDefinitionVersionsInput!): AwsGreengrassListDeviceDefinitionVersionsOutput

  # greengrass.ListDeviceDefinitions
  ListDeviceDefinitions(input: AwsGreengrassListDeviceDefinitionsInput): AwsGreengrassListDeviceDefinitionsOutput

  # greengrass.ListFunctionDefinitionVersions
  ListFunctionDefinitionVersions(input: AwsGreengrassListFunctionDefinitionVersionsInput!): AwsGreengrassListFunctionDefinitionVersionsOutput

  # greengrass.ListFunctionDefinitions
  ListFunctionDefinitions(input: AwsGreengrassListFunctionDefinitionsInput): AwsGreengrassListFunctionDefinitionsOutput

  # greengrass.ListGroupCertificateAuthorities
  ListGroupCertificateAuthorities(input: AwsGreengrassListGroupCertificateAuthoritiesInput!): AwsGreengrassListGroupCertificateAuthoritiesOutput

  # greengrass.ListGroupVersions
  ListGroupVersions(input: AwsGreengrassListGroupVersionsInput!): AwsGreengrassListGroupVersionsOutput

  # greengrass.ListGroups
  ListGroups(input: AwsGreengrassListGroupsInput): AwsGreengrassListGroupsOutput

  # greengrass.ListLoggerDefinitionVersions
  ListLoggerDefinitionVersions(input: AwsGreengrassListLoggerDefinitionVersionsInput!): AwsGreengrassListLoggerDefinitionVersionsOutput

  # greengrass.ListLoggerDefinitions
  ListLoggerDefinitions(input: AwsGreengrassListLoggerDefinitionsInput): AwsGreengrassListLoggerDefinitionsOutput

  # greengrass.ListResourceDefinitionVersions
  ListResourceDefinitionVersions(input: AwsGreengrassListResourceDefinitionVersionsInput!): AwsGreengrassListResourceDefinitionVersionsOutput

  # greengrass.ListResourceDefinitions
  ListResourceDefinitions(input: AwsGreengrassListResourceDefinitionsInput): AwsGreengrassListResourceDefinitionsOutput

  # greengrass.ListSubscriptionDefinitionVersions
  ListSubscriptionDefinitionVersions(input: AwsGreengrassListSubscriptionDefinitionVersionsInput!): AwsGreengrassListSubscriptionDefinitionVersionsOutput

  # greengrass.ListSubscriptionDefinitions
  ListSubscriptionDefinitions(input: AwsGreengrassListSubscriptionDefinitionsInput): AwsGreengrassListSubscriptionDefinitionsOutput

  # greengrass.ResetDeployments
  ResetDeployments(input: AwsGreengrassResetDeploymentsInput!): AwsGreengrassResetDeploymentsOutput

  # greengrass.UpdateConnectivityInfo
  UpdateConnectivityInfo(input: AwsGreengrassUpdateConnectivityInfoInput!): AwsGreengrassUpdateConnectivityInfoOutput

  # greengrass.UpdateCoreDefinition
  UpdateCoreDefinition(input: AwsGreengrassUpdateCoreDefinitionInput!): JSON

  # greengrass.UpdateDeviceDefinition
  UpdateDeviceDefinition(input: AwsGreengrassUpdateDeviceDefinitionInput!): JSON

  # greengrass.UpdateFunctionDefinition
  UpdateFunctionDefinition(input: AwsGreengrassUpdateFunctionDefinitionInput!): JSON

  # greengrass.UpdateGroup
  UpdateGroup(input: AwsGreengrassUpdateGroupInput!): JSON

  # greengrass.UpdateGroupCertificateConfiguration
  UpdateGroupCertificateConfiguration(input: AwsGreengrassUpdateGroupCertificateConfigurationInput!): AwsGreengrassUpdateGroupCertificateConfigurationOutput

  # greengrass.UpdateLoggerDefinition
  UpdateLoggerDefinition(input: AwsGreengrassUpdateLoggerDefinitionInput!): JSON

  # greengrass.UpdateResourceDefinition
  UpdateResourceDefinition(input: AwsGreengrassUpdateResourceDefinitionInput!): JSON

  # greengrass.UpdateSubscriptionDefinition
  UpdateSubscriptionDefinition(input: AwsGreengrassUpdateSubscriptionDefinitionInput!): JSON
}

input AwsGreengrassAssociateRoleToGroupInput {
  GroupId: String!
  RoleArn: String
}

type AwsGreengrassAssociateRoleToGroupOutput {
  AssociatedAt: String
}

input AwsGreengrassAssociateServiceRoleToAccountInput {
  RoleArn: String
}

type AwsGreengrassAssociateServiceRoleToAccountOutput {
  AssociatedAt: String
}

input AwsGreengrassCreateCoreDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS7Input
  Name: String
}

type AwsGreengrassCreateCoreDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateCoreDefinitionVersionInput {
  AmznClientToken: String
  CoreDefinitionId: String!
  Cores: [AwsGreengrassS8Input]
}

type AwsGreengrassCreateCoreDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateDeploymentInput {
  AmznClientToken: String
  DeploymentId: String
  DeploymentType: String
  GroupId: String!
  GroupVersionId: String
}

type AwsGreengrassCreateDeploymentOutput {
  DeploymentArn: String
  DeploymentId: String
}

input AwsGreengrassCreateDeviceDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassSiInput
  Name: String
}

type AwsGreengrassCreateDeviceDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateDeviceDefinitionVersionInput {
  AmznClientToken: String
  DeviceDefinitionId: String!
  Devices: [AwsGreengrassSjInput]
}

type AwsGreengrassCreateDeviceDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateFunctionDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassSpInput
  Name: String
}

type AwsGreengrassCreateFunctionDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateFunctionDefinitionVersionInput {
  AmznClientToken: String
  FunctionDefinitionId: String!
  Functions: [AwsGreengrassSqInput]
}

type AwsGreengrassCreateFunctionDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateGroupCertificateAuthorityInput {
  AmznClientToken: String
  GroupId: String!
}

type AwsGreengrassCreateGroupCertificateAuthorityOutput {
  GroupCertificateAuthorityArn: String
}

input AwsGreengrassCreateGroupInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS13Input
  Name: String
}

type AwsGreengrassCreateGroupOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateGroupVersionInput {
  AmznClientToken: String
  CoreDefinitionVersionArn: String
  DeviceDefinitionVersionArn: String
  FunctionDefinitionVersionArn: String
  GroupId: String!
  LoggerDefinitionVersionArn: String
  ResourceDefinitionVersionArn: String
  SubscriptionDefinitionVersionArn: String
}

type AwsGreengrassCreateGroupVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateLoggerDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS1aInput
  Name: String
}

type AwsGreengrassCreateLoggerDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateLoggerDefinitionVersionInput {
  AmznClientToken: String
  LoggerDefinitionId: String!
  Loggers: [AwsGreengrassS1bInput]
}

type AwsGreengrassCreateLoggerDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateResourceDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS1kInput
  Name: String
}

type AwsGreengrassCreateResourceDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateResourceDefinitionVersionInput {
  AmznClientToken: String
  ResourceDefinitionId: String!
  Resources: [AwsGreengrassS1lInput]
}

type AwsGreengrassCreateResourceDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateSoftwareUpdateJobInput {
  AmznClientToken: String
  S3UrlSignerRole: String
  SoftwareToUpdate: String
  UpdateAgentLogLevel: String
  UpdateTargets: [String]
  UpdateTargetsArchitecture: String
  UpdateTargetsOperatingSystem: String
}

type AwsGreengrassCreateSoftwareUpdateJobOutput {
  IotJobArn: String
  IotJobId: String
}

input AwsGreengrassCreateSubscriptionDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS23Input
  Name: String
}

type AwsGreengrassCreateSubscriptionDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateSubscriptionDefinitionVersionInput {
  AmznClientToken: String
  SubscriptionDefinitionId: String!
  Subscriptions: [AwsGreengrassS24Input]
}

type AwsGreengrassCreateSubscriptionDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassDeleteCoreDefinitionInput {
  CoreDefinitionId: String!
}

input AwsGreengrassDeleteDeviceDefinitionInput {
  DeviceDefinitionId: String!
}

input AwsGreengrassDeleteFunctionDefinitionInput {
  FunctionDefinitionId: String!
}

input AwsGreengrassDeleteGroupInput {
  GroupId: String!
}

input AwsGreengrassDeleteLoggerDefinitionInput {
  LoggerDefinitionId: String!
}

input AwsGreengrassDeleteResourceDefinitionInput {
  ResourceDefinitionId: String!
}

input AwsGreengrassDeleteSubscriptionDefinitionInput {
  SubscriptionDefinitionId: String!
}

input AwsGreengrassDisassociateRoleFromGroupInput {
  GroupId: String!
}

type AwsGreengrassDisassociateRoleFromGroupOutput {
  DisassociatedAt: String
}

type AwsGreengrassDisassociateServiceRoleFromAccountOutput {
  DisassociatedAt: String
}

input AwsGreengrassGetAssociatedRoleInput {
  GroupId: String!
}

type AwsGreengrassGetAssociatedRoleOutput {
  AssociatedAt: String
  RoleArn: String
}

input AwsGreengrassGetConnectivityInfoInput {
  ThingName: String!
}

type AwsGreengrassGetConnectivityInfoOutput {
  ConnectivityInfo: [AwsGreengrassS2v]
  Message: String
}

input AwsGreengrassGetCoreDefinitionInput {
  CoreDefinitionId: String!
}

type AwsGreengrassGetCoreDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetCoreDefinitionVersionInput {
  CoreDefinitionId: String!
  CoreDefinitionVersionId: String!
}

type AwsGreengrassGetCoreDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS7
  Id: String
  Version: String
}

input AwsGreengrassGetDeploymentStatusInput {
  DeploymentId: String!
  GroupId: String!
}

type AwsGreengrassGetDeploymentStatusOutput {
  DeploymentStatus: String
  DeploymentType: String
  ErrorDetails: [AwsGreengrassGetDeploymentStatusOutputErrorDetails]
  ErrorMessage: String
  UpdatedAt: String
}

type AwsGreengrassGetDeploymentStatusOutputErrorDetails {
  DetailedErrorCode: String
  DetailedErrorMessage: String
}

input AwsGreengrassGetDeviceDefinitionInput {
  DeviceDefinitionId: String!
}

type AwsGreengrassGetDeviceDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetDeviceDefinitionVersionInput {
  DeviceDefinitionId: String!
  DeviceDefinitionVersionId: String!
}

type AwsGreengrassGetDeviceDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassSi
  Id: String
  Version: String
}

input AwsGreengrassGetFunctionDefinitionInput {
  FunctionDefinitionId: String!
}

type AwsGreengrassGetFunctionDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetFunctionDefinitionVersionInput {
  FunctionDefinitionId: String!
  FunctionDefinitionVersionId: String!
}

type AwsGreengrassGetFunctionDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassSp
  Id: String
  Version: String
}

input AwsGreengrassGetGroupCertificateAuthorityInput {
  CertificateAuthorityId: String!
  GroupId: String!
}

type AwsGreengrassGetGroupCertificateAuthorityOutput {
  GroupCertificateAuthorityArn: String
  GroupCertificateAuthorityId: String
  PemEncodedCertificate: String
}

input AwsGreengrassGetGroupCertificateConfigurationInput {
  GroupId: String!
}

type AwsGreengrassGetGroupCertificateConfigurationOutput {
  CertificateAuthorityExpiryInMilliseconds: String
  CertificateExpiryInMilliseconds: String
  GroupId: String
}

input AwsGreengrassGetGroupInput {
  GroupId: String!
}

type AwsGreengrassGetGroupOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetGroupVersionInput {
  GroupId: String!
  GroupVersionId: String!
}

type AwsGreengrassGetGroupVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS13
  Id: String
  Version: String
}

input AwsGreengrassGetLoggerDefinitionInput {
  LoggerDefinitionId: String!
}

type AwsGreengrassGetLoggerDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetLoggerDefinitionVersionInput {
  LoggerDefinitionId: String!
  LoggerDefinitionVersionId: String!
}

type AwsGreengrassGetLoggerDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS1a
  Id: String
  Version: String
}

input AwsGreengrassGetResourceDefinitionInput {
  ResourceDefinitionId: String!
}

type AwsGreengrassGetResourceDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetResourceDefinitionVersionInput {
  ResourceDefinitionId: String!
  ResourceDefinitionVersionId: String!
}

type AwsGreengrassGetResourceDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS1k
  Id: String
  Version: String
}

type AwsGreengrassGetServiceRoleForAccountOutput {
  AssociatedAt: String
  RoleArn: String
}

input AwsGreengrassGetSubscriptionDefinitionInput {
  SubscriptionDefinitionId: String!
}

type AwsGreengrassGetSubscriptionDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetSubscriptionDefinitionVersionInput {
  SubscriptionDefinitionId: String!
  SubscriptionDefinitionVersionId: String!
}

type AwsGreengrassGetSubscriptionDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS23
  Id: String
  Version: String
}

input AwsGreengrassListCoreDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListCoreDefinitionsOutput {
  Definitions: [AwsGreengrassS45]
  NextToken: String
}

input AwsGreengrassListCoreDefinitionVersionsInput {
  CoreDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListCoreDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassListDeploymentsInput {
  GroupId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListDeploymentsOutput {
  Deployments: [AwsGreengrassListDeploymentsOutputDeployments]
  NextToken: String
}

type AwsGreengrassListDeploymentsOutputDeployments {
  CreatedAt: String
  DeploymentArn: String
  DeploymentId: String
  DeploymentType: String
  GroupArn: String
}

input AwsGreengrassListDeviceDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListDeviceDefinitionsOutput {
  Definitions: [AwsGreengrassS45]
  NextToken: String
}

input AwsGreengrassListDeviceDefinitionVersionsInput {
  DeviceDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListDeviceDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassListFunctionDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListFunctionDefinitionsOutput {
  Definitions: [AwsGreengrassS45]
  NextToken: String
}

input AwsGreengrassListFunctionDefinitionVersionsInput {
  FunctionDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListFunctionDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassListGroupCertificateAuthoritiesInput {
  GroupId: String!
}

type AwsGreengrassListGroupCertificateAuthoritiesOutput {
  GroupCertificateAuthorities: [AwsGreengrassListGroupCertificateAuthoritiesOutputGroupCertificateAuthorities]
}

type AwsGreengrassListGroupCertificateAuthoritiesOutputGroupCertificateAuthorities {
  GroupCertificateAuthorityArn: String
  GroupCertificateAuthorityId: String
}

input AwsGreengrassListGroupsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListGroupsOutput {
  Groups: [AwsGreengrassListGroupsOutputGroups]
  NextToken: String
}

type AwsGreengrassListGroupsOutputGroups {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassListGroupVersionsInput {
  GroupId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListGroupVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassListLoggerDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListLoggerDefinitionsOutput {
  Definitions: [AwsGreengrassS45]
  NextToken: String
}

input AwsGreengrassListLoggerDefinitionVersionsInput {
  LoggerDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListLoggerDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassListResourceDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListResourceDefinitionsOutput {
  Definitions: [AwsGreengrassS45]
  NextToken: String
}

input AwsGreengrassListResourceDefinitionVersionsInput {
  MaxResults: String
  NextToken: String
  ResourceDefinitionId: String!
}

type AwsGreengrassListResourceDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassListSubscriptionDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListSubscriptionDefinitionsOutput {
  Definitions: [AwsGreengrassS45]
  NextToken: String
}

input AwsGreengrassListSubscriptionDefinitionVersionsInput {
  MaxResults: String
  NextToken: String
  SubscriptionDefinitionId: String!
}

type AwsGreengrassListSubscriptionDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassResetDeploymentsInput {
  AmznClientToken: String
  Force: Boolean
  GroupId: String!
}

type AwsGreengrassResetDeploymentsOutput {
  DeploymentArn: String
  DeploymentId: String
}

type AwsGreengrassS13 {
  CoreDefinitionVersionArn: String
  DeviceDefinitionVersionArn: String
  FunctionDefinitionVersionArn: String
  LoggerDefinitionVersionArn: String
  ResourceDefinitionVersionArn: String
  SubscriptionDefinitionVersionArn: String
}

input AwsGreengrassS13Input {
  CoreDefinitionVersionArn: String
  DeviceDefinitionVersionArn: String
  FunctionDefinitionVersionArn: String
  LoggerDefinitionVersionArn: String
  ResourceDefinitionVersionArn: String
  SubscriptionDefinitionVersionArn: String
}

type AwsGreengrassS1a {
  Loggers: [AwsGreengrassS1b]
}

input AwsGreengrassS1aInput {
  Loggers: [AwsGreengrassS1bInput]
}

type AwsGreengrassS1b {
  Component: String
  Id: String
  Level: String
  Space: Int
  Type: String
}

input AwsGreengrassS1bInput {
  Component: String
  Id: String
  Level: String
  Space: Int
  Type: String
}

type AwsGreengrassS1k {
  Resources: [AwsGreengrassS1l]
}

input AwsGreengrassS1kInput {
  Resources: [AwsGreengrassS1lInput]
}

type AwsGreengrassS1l {
  Id: String
  Name: String
  ResourceDataContainer: AwsGreengrassS1lResourceDataContainer
}

input AwsGreengrassS1lInput {
  Id: String
  Name: String
  ResourceDataContainer: AwsGreengrassS1lResourceDataContainerInput
}

type AwsGreengrassS1lResourceDataContainer {
  LocalDeviceResourceData: AwsGreengrassS1lResourceDataContainerLocalDeviceResourceData
  LocalVolumeResourceData: AwsGreengrassS1lResourceDataContainerLocalVolumeResourceData
}

input AwsGreengrassS1lResourceDataContainerInput {
  LocalDeviceResourceData: AwsGreengrassS1lResourceDataContainerLocalDeviceResourceDataInput
  LocalVolumeResourceData: AwsGreengrassS1lResourceDataContainerLocalVolumeResourceDataInput
}

type AwsGreengrassS1lResourceDataContainerLocalDeviceResourceData {
  GroupOwnerSetting: AwsGreengrassS1p
  SourcePath: String
}

input AwsGreengrassS1lResourceDataContainerLocalDeviceResourceDataInput {
  GroupOwnerSetting: AwsGreengrassS1pInput
  SourcePath: String
}

type AwsGreengrassS1lResourceDataContainerLocalVolumeResourceData {
  DestinationPath: String
  GroupOwnerSetting: AwsGreengrassS1p
  SourcePath: String
}

input AwsGreengrassS1lResourceDataContainerLocalVolumeResourceDataInput {
  DestinationPath: String
  GroupOwnerSetting: AwsGreengrassS1pInput
  SourcePath: String
}

type AwsGreengrassS1p {
  AutoAddGroupOwner: Boolean
  GroupOwner: String
}

input AwsGreengrassS1pInput {
  AutoAddGroupOwner: Boolean
  GroupOwner: String
}

type AwsGreengrassS23 {
  Subscriptions: [AwsGreengrassS24]
}

input AwsGreengrassS23Input {
  Subscriptions: [AwsGreengrassS24Input]
}

type AwsGreengrassS24 {
  Id: String
  Source: String
  Subject: String
  Target: String
}

input AwsGreengrassS24Input {
  Id: String
  Source: String
  Subject: String
  Target: String
}

type AwsGreengrassS2v {
  HostAddress: String
  Id: String
  Metadata: String
  PortNumber: Int
}

input AwsGreengrassS2vInput {
  HostAddress: String
  Id: String
  Metadata: String
  PortNumber: Int
}

type AwsGreengrassS41 {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

type AwsGreengrassS45 {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

type AwsGreengrassS7 {
  Cores: [AwsGreengrassS8]
}

input AwsGreengrassS7Input {
  Cores: [AwsGreengrassS8Input]
}

type AwsGreengrassS8 {
  CertificateArn: String
  Id: String
  SyncShadow: Boolean
  ThingArn: String
}

input AwsGreengrassS8Input {
  CertificateArn: String
  Id: String
  SyncShadow: Boolean
  ThingArn: String
}

type AwsGreengrassSi {
  Devices: [AwsGreengrassSj]
}

input AwsGreengrassSiInput {
  Devices: [AwsGreengrassSjInput]
}

type AwsGreengrassSj {
  CertificateArn: String
  Id: String
  SyncShadow: Boolean
  ThingArn: String
}

input AwsGreengrassSjInput {
  CertificateArn: String
  Id: String
  SyncShadow: Boolean
  ThingArn: String
}

type AwsGreengrassSp {
  Functions: [AwsGreengrassSq]
}

input AwsGreengrassSpInput {
  Functions: [AwsGreengrassSqInput]
}

type AwsGreengrassSq {
  FunctionArn: String
  FunctionConfiguration: AwsGreengrassSqFunctionConfiguration
  Id: String
}

type AwsGreengrassSqFunctionConfiguration {
  Environment: AwsGreengrassSqFunctionConfigurationEnvironment
  ExecArgs: String
  Executable: String
  MemorySize: Int
  Pinned: Boolean
  Timeout: Int
}

type AwsGreengrassSqFunctionConfigurationEnvironment {
  AccessSysfs: Boolean
  ResourceAccessPolicies: [AwsGreengrassSqFunctionConfigurationEnvironmentResourceAccessPolicies]
  Variables: JSON
}

input AwsGreengrassSqFunctionConfigurationEnvironmentInput {
  AccessSysfs: Boolean
  ResourceAccessPolicies: [AwsGreengrassSqFunctionConfigurationEnvironmentResourceAccessPoliciesInput]
  Variables: JSON
}

type AwsGreengrassSqFunctionConfigurationEnvironmentResourceAccessPolicies {
  Permission: String
  ResourceId: String
}

input AwsGreengrassSqFunctionConfigurationEnvironmentResourceAccessPoliciesInput {
  Permission: String
  ResourceId: String
}

input AwsGreengrassSqFunctionConfigurationInput {
  Environment: AwsGreengrassSqFunctionConfigurationEnvironmentInput
  ExecArgs: String
  Executable: String
  MemorySize: Int
  Pinned: Boolean
  Timeout: Int
}

input AwsGreengrassSqInput {
  FunctionArn: String
  FunctionConfiguration: AwsGreengrassSqFunctionConfigurationInput
  Id: String
}

input AwsGreengrassUpdateConnectivityInfoInput {
  ConnectivityInfo: [AwsGreengrassS2vInput]
  ThingName: String!
}

type AwsGreengrassUpdateConnectivityInfoOutput {
  Message: String
  Version: String
}

input AwsGreengrassUpdateCoreDefinitionInput {
  CoreDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateDeviceDefinitionInput {
  DeviceDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateFunctionDefinitionInput {
  FunctionDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateGroupCertificateConfigurationInput {
  CertificateExpiryInMilliseconds: String
  GroupId: String!
}

type AwsGreengrassUpdateGroupCertificateConfigurationOutput {
  CertificateAuthorityExpiryInMilliseconds: String
  CertificateExpiryInMilliseconds: String
  GroupId: String
}

input AwsGreengrassUpdateGroupInput {
  GroupId: String!
  Name: String
}

input AwsGreengrassUpdateLoggerDefinitionInput {
  LoggerDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateResourceDefinitionInput {
  Name: String
  ResourceDefinitionId: String!
}

input AwsGreengrassUpdateSubscriptionDefinitionInput {
  Name: String
  SubscriptionDefinitionId: String!
}

# Amazon GuardDuty (2017-11-28)
type AwsGuardduty {
  # guardduty.AcceptInvitation
  AcceptInvitation(input: AwsGuarddutyAcceptInvitationInput!): JSON

  # guardduty.ArchiveFindings
  ArchiveFindings(input: AwsGuarddutyArchiveFindingsInput!): JSON

  # guardduty.CreateDetector
  CreateDetector(input: AwsGuarddutyCreateDetectorInput): AwsGuarddutyCreateDetectorOutput

  # guardduty.CreateIPSet
  CreateIPSet(input: AwsGuarddutyCreateIPSetInput!): AwsGuarddutyCreateIPSetOutput

  # guardduty.CreateMembers
  CreateMembers(input: AwsGuarddutyCreateMembersInput!): AwsGuarddutyCreateMembersOutput

  # guardduty.CreateSampleFindings
  CreateSampleFindings(input: AwsGuarddutyCreateSampleFindingsInput!): JSON

  # guardduty.CreateThreatIntelSet
  CreateThreatIntelSet(input: AwsGuarddutyCreateThreatIntelSetInput!): AwsGuarddutyCreateThreatIntelSetOutput

  # guardduty.DeclineInvitations
  DeclineInvitations(input: AwsGuarddutyDeclineInvitationsInput): AwsGuarddutyDeclineInvitationsOutput

  # guardduty.DeleteDetector
  DeleteDetector(input: AwsGuarddutyDeleteDetectorInput!): JSON

  # guardduty.DeleteIPSet
  DeleteIPSet(input: AwsGuarddutyDeleteIPSetInput!): JSON

  # guardduty.DeleteInvitations
  DeleteInvitations(input: AwsGuarddutyDeleteInvitationsInput): AwsGuarddutyDeleteInvitationsOutput

  # guardduty.DeleteMembers
  DeleteMembers(input: AwsGuarddutyDeleteMembersInput!): AwsGuarddutyDeleteMembersOutput

  # guardduty.DeleteThreatIntelSet
  DeleteThreatIntelSet(input: AwsGuarddutyDeleteThreatIntelSetInput!): JSON

  # guardduty.DisassociateFromMasterAccount
  DisassociateFromMasterAccount(input: AwsGuarddutyDisassociateFromMasterAccountInput!): JSON

  # guardduty.DisassociateMembers
  DisassociateMembers(input: AwsGuarddutyDisassociateMembersInput!): AwsGuarddutyDisassociateMembersOutput

  # guardduty.GetDetector
  GetDetector(input: AwsGuarddutyGetDetectorInput!): AwsGuarddutyGetDetectorOutput

  # guardduty.GetFindings
  GetFindings(input: AwsGuarddutyGetFindingsInput!): AwsGuarddutyGetFindingsOutput

  # guardduty.GetFindingsStatistics
  GetFindingsStatistics(input: AwsGuarddutyGetFindingsStatisticsInput!): AwsGuarddutyGetFindingsStatisticsOutput

  # guardduty.GetIPSet
  GetIPSet(input: AwsGuarddutyGetIPSetInput!): AwsGuarddutyGetIPSetOutput

  # guardduty.GetInvitationsCount
  GetInvitationsCount(input: JSON): AwsGuarddutyGetInvitationsCountOutput

  # guardduty.GetMasterAccount
  GetMasterAccount(input: AwsGuarddutyGetMasterAccountInput!): AwsGuarddutyGetMasterAccountOutput

  # guardduty.GetMembers
  GetMembers(input: AwsGuarddutyGetMembersInput!): AwsGuarddutyGetMembersOutput

  # guardduty.GetThreatIntelSet
  GetThreatIntelSet(input: AwsGuarddutyGetThreatIntelSetInput!): AwsGuarddutyGetThreatIntelSetOutput

  # guardduty.InviteMembers
  InviteMembers(input: AwsGuarddutyInviteMembersInput!): AwsGuarddutyInviteMembersOutput

  # guardduty.ListDetectors
  ListDetectors(input: AwsGuarddutyListDetectorsInput): AwsGuarddutyListDetectorsOutput

  # guardduty.ListFindings
  ListFindings(input: AwsGuarddutyListFindingsInput!): AwsGuarddutyListFindingsOutput

  # guardduty.ListIPSets
  ListIPSets(input: AwsGuarddutyListIPSetsInput!): AwsGuarddutyListIPSetsOutput

  # guardduty.ListInvitations
  ListInvitations(input: AwsGuarddutyListInvitationsInput): AwsGuarddutyListInvitationsOutput

  # guardduty.ListMembers
  ListMembers(input: AwsGuarddutyListMembersInput!): AwsGuarddutyListMembersOutput

  # guardduty.ListThreatIntelSets
  ListThreatIntelSets(input: AwsGuarddutyListThreatIntelSetsInput!): AwsGuarddutyListThreatIntelSetsOutput

  # guardduty.StartMonitoringMembers
  StartMonitoringMembers(input: AwsGuarddutyStartMonitoringMembersInput!): AwsGuarddutyStartMonitoringMembersOutput

  # guardduty.StopMonitoringMembers
  StopMonitoringMembers(input: AwsGuarddutyStopMonitoringMembersInput!): AwsGuarddutyStopMonitoringMembersOutput

  # guardduty.UnarchiveFindings
  UnarchiveFindings(input: AwsGuarddutyUnarchiveFindingsInput!): JSON

  # guardduty.UpdateDetector
  UpdateDetector(input: AwsGuarddutyUpdateDetectorInput!): JSON

  # guardduty.UpdateFindingsFeedback
  UpdateFindingsFeedback(input: AwsGuarddutyUpdateFindingsFeedbackInput!): JSON

  # guardduty.UpdateIPSet
  UpdateIPSet(input: AwsGuarddutyUpdateIPSetInput!): JSON

  # guardduty.UpdateThreatIntelSet
  UpdateThreatIntelSet(input: AwsGuarddutyUpdateThreatIntelSetInput!): JSON
}

input AwsGuarddutyAcceptInvitationInput {
  DetectorId: String!
  InvitationId: String
  MasterId: String
}

input AwsGuarddutyArchiveFindingsInput {
  DetectorId: String!
  FindingIds: [String]
}

input AwsGuarddutyCreateDetectorInput {
  Enable: Boolean
}

type AwsGuarddutyCreateDetectorOutput {
  DetectorId: String
}

input AwsGuarddutyCreateIPSetInput {
  Activate: Boolean
  DetectorId: String!
  Format: String
  Location: String
  Name: String
}

type AwsGuarddutyCreateIPSetOutput {
  IpSetId: String
}

input AwsGuarddutyCreateMembersAccountDetailsInput {
  AccountId: String
  Email: String
}

input AwsGuarddutyCreateMembersInput {
  AccountDetails: [AwsGuarddutyCreateMembersAccountDetailsInput]
  DetectorId: String!
}

type AwsGuarddutyCreateMembersOutput {
  UnprocessedAccounts: [AwsGuarddutySr]
}

input AwsGuarddutyCreateSampleFindingsInput {
  DetectorId: String!
  FindingTypes: [String]
}

input AwsGuarddutyCreateThreatIntelSetInput {
  Activate: Boolean
  DetectorId: String!
  Format: String
  Location: String
  Name: String
}

type AwsGuarddutyCreateThreatIntelSetOutput {
  ThreatIntelSetId: String
}

input AwsGuarddutyDeclineInvitationsInput {
  AccountIds: [String]
}

type AwsGuarddutyDeclineInvitationsOutput {
  UnprocessedAccounts: [AwsGuarddutySr]
}

input AwsGuarddutyDeleteDetectorInput {
  DetectorId: String!
}

input AwsGuarddutyDeleteInvitationsInput {
  AccountIds: [String]
}

type AwsGuarddutyDeleteInvitationsOutput {
  UnprocessedAccounts: [AwsGuarddutySr]
}

input AwsGuarddutyDeleteIPSetInput {
  DetectorId: String!
  IpSetId: String!
}

input AwsGuarddutyDeleteMembersInput {
  AccountIds: [String]
  DetectorId: String!
}

type AwsGuarddutyDeleteMembersOutput {
  UnprocessedAccounts: [AwsGuarddutySr]
}

input AwsGuarddutyDeleteThreatIntelSetInput {
  DetectorId: String!
  ThreatIntelSetId: String!
}

input AwsGuarddutyDisassociateFromMasterAccountInput {
  DetectorId: String!
}

input AwsGuarddutyDisassociateMembersInput {
  AccountIds: [String]
  DetectorId: String!
}

type AwsGuarddutyDisassociateMembersOutput {
  UnprocessedAccounts: [AwsGuarddutySr]
}

input AwsGuarddutyGetDetectorInput {
  DetectorId: String!
}

type AwsGuarddutyGetDetectorOutput {
  CreatedAt: String
  ServiceRole: String
  Status: String
  UpdatedAt: String
}

input AwsGuarddutyGetFindingsInput {
  DetectorId: String!
  FindingIds: [String]
  SortCriteria: AwsGuarddutyS1pInput
}

type AwsGuarddutyGetFindingsOutput {
  Findings: [AwsGuarddutyGetFindingsOutputFindings]
}

type AwsGuarddutyGetFindingsOutputFindings {
  AccountId: String
  Arn: String
  Confidence: JSON
  CreatedAt: String
  Description: String
  Id: String
  Partition: String
  Region: String
  Resource: AwsGuarddutyGetFindingsOutputFindingsResource
  SchemaVersion: String
  Service: AwsGuarddutyGetFindingsOutputFindingsService
  Severity: JSON
  Title: String
  Type: String
  UpdatedAt: String
}

type AwsGuarddutyGetFindingsOutputFindingsResource {
  InstanceDetails: AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetails
  ResourceType: String
}

type AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetails {
  AvailabilityZone: String
  IamInstanceProfile: AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetailsIamInstanceProfile
  ImageId: String
  InstanceId: String
  InstanceState: String
  InstanceType: String
  LaunchTime: String
  NetworkInterfaces: [AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfaces]
  Platform: String
  ProductCodes: [AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetailsProductCodes]
  Tags: [AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetailsTags]
}

type AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetailsIamInstanceProfile {
  Arn: String
  Id: String
}

type AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfaces {
  Ipv6Addresses: [String]
  PrivateDnsName: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfacesPrivateIpAddresses]
  PublicDnsName: String
  PublicIp: String
  SecurityGroups: [AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfacesSecurityGroups]
  SubnetId: String
  VpcId: String
}

type AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfacesPrivateIpAddresses {
  PrivateDnsName: String
  PrivateIpAddress: String
}

type AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfacesSecurityGroups {
  GroupId: String
  GroupName: String
}

type AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetailsProductCodes {
  Code: String
  ProductType: String
}

type AwsGuarddutyGetFindingsOutputFindingsResourceInstanceDetailsTags {
  Key: String
  Value: String
}

type AwsGuarddutyGetFindingsOutputFindingsService {
  Action: AwsGuarddutyGetFindingsOutputFindingsServiceAction
  Archived: Boolean
  Count: Int
  DetectorId: String
  EventFirstSeen: String
  EventLastSeen: String
  ResourceRole: String
  ServiceName: String
  UserFeedback: String
}

type AwsGuarddutyGetFindingsOutputFindingsServiceAction {
  ActionType: String
  AwsApiCallAction: AwsGuarddutyGetFindingsOutputFindingsServiceActionAwsApiCallAction
  DnsRequestAction: AwsGuarddutyGetFindingsOutputFindingsServiceActionDnsRequestAction
  NetworkConnectionAction: AwsGuarddutyGetFindingsOutputFindingsServiceActionNetworkConnectionAction
}

type AwsGuarddutyGetFindingsOutputFindingsServiceActionAwsApiCallAction {
  Api: String
  CallerType: String
  DomainDetails: JSON
  RemoteIpDetails: AwsGuarddutyS2g
  ServiceName: String
}

type AwsGuarddutyGetFindingsOutputFindingsServiceActionDnsRequestAction {
  Domain: String
}

type AwsGuarddutyGetFindingsOutputFindingsServiceActionNetworkConnectionAction {
  Blocked: Boolean
  ConnectionDirection: String
  LocalPortDetails: AwsGuarddutyGetFindingsOutputFindingsServiceActionNetworkConnectionActionLocalPortDetails
  Protocol: String
  RemoteIpDetails: AwsGuarddutyS2g
  RemotePortDetails: AwsGuarddutyGetFindingsOutputFindingsServiceActionNetworkConnectionActionRemotePortDetails
}

type AwsGuarddutyGetFindingsOutputFindingsServiceActionNetworkConnectionActionLocalPortDetails {
  Port: Int
  PortName: String
}

type AwsGuarddutyGetFindingsOutputFindingsServiceActionNetworkConnectionActionRemotePortDetails {
  Port: Int
  PortName: String
}

input AwsGuarddutyGetFindingsStatisticsInput {
  DetectorId: String!
  FindingCriteria: AwsGuarddutyS2tInput
  FindingStatisticTypes: [String]
}

type AwsGuarddutyGetFindingsStatisticsOutput {
  FindingStatistics: AwsGuarddutyGetFindingsStatisticsOutputFindingStatistics
}

type AwsGuarddutyGetFindingsStatisticsOutputFindingStatistics {
  CountBySeverity: JSON
}

type AwsGuarddutyGetInvitationsCountOutput {
  InvitationsCount: Int
}

input AwsGuarddutyGetIPSetInput {
  DetectorId: String!
  IpSetId: String!
}

type AwsGuarddutyGetIPSetOutput {
  Format: String
  Location: String
  Name: String
  Status: String
}

input AwsGuarddutyGetMasterAccountInput {
  DetectorId: String!
}

type AwsGuarddutyGetMasterAccountOutput {
  Master: AwsGuarddutyGetMasterAccountOutputMaster
}

type AwsGuarddutyGetMasterAccountOutputMaster {
  AccountId: String
  InvitationId: String
  InvitedAt: String
  RelationshipStatus: String
}

input AwsGuarddutyGetMembersInput {
  AccountIds: [String]
  DetectorId: String!
}

type AwsGuarddutyGetMembersOutput {
  Members: [AwsGuarddutyS3f]
  UnprocessedAccounts: [AwsGuarddutySr]
}

input AwsGuarddutyGetThreatIntelSetInput {
  DetectorId: String!
  ThreatIntelSetId: String!
}

type AwsGuarddutyGetThreatIntelSetOutput {
  Format: String
  Location: String
  Name: String
  Status: String
}

input AwsGuarddutyInviteMembersInput {
  AccountIds: [String]
  DetectorId: String!
  Message: String
}

type AwsGuarddutyInviteMembersOutput {
  UnprocessedAccounts: [AwsGuarddutySr]
}

input AwsGuarddutyListDetectorsInput {
  MaxResults: Int
  NextToken: String
}

type AwsGuarddutyListDetectorsOutput {
  DetectorIds: [String]
  NextToken: String
}

input AwsGuarddutyListFindingsInput {
  DetectorId: String!
  FindingCriteria: AwsGuarddutyS2tInput
  MaxResults: Int
  NextToken: String
  SortCriteria: AwsGuarddutyS1pInput
}

type AwsGuarddutyListFindingsOutput {
  FindingIds: [String]
  NextToken: String
}

input AwsGuarddutyListInvitationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsGuarddutyListInvitationsOutput {
  Invitations: [AwsGuarddutyListInvitationsOutputInvitations]
  NextToken: String
}

type AwsGuarddutyListInvitationsOutputInvitations {
  AccountId: String
  InvitationId: String
  InvitedAt: String
  RelationshipStatus: String
}

input AwsGuarddutyListIPSetsInput {
  DetectorId: String!
  MaxResults: Int
  NextToken: String
}

type AwsGuarddutyListIPSetsOutput {
  IpSetIds: [String]
  NextToken: String
}

input AwsGuarddutyListMembersInput {
  DetectorId: String!
  MaxResults: Int
  NextToken: String
  OnlyAssociated: String
}

type AwsGuarddutyListMembersOutput {
  Members: [AwsGuarddutyS3f]
  NextToken: String
}

input AwsGuarddutyListThreatIntelSetsInput {
  DetectorId: String!
  MaxResults: Int
  NextToken: String
}

type AwsGuarddutyListThreatIntelSetsOutput {
  NextToken: String
  ThreatIntelSetIds: [String]
}

input AwsGuarddutyS1pInput {
  AttributeName: String
  OrderBy: String
}

type AwsGuarddutyS2g {
  City: AwsGuarddutyS2gCity
  Country: AwsGuarddutyS2gCountry
  GeoLocation: AwsGuarddutyS2gGeoLocation
  IpAddressV4: String
  Organization: AwsGuarddutyS2gOrganization
}

type AwsGuarddutyS2gCity {
  CityName: String
}

type AwsGuarddutyS2gCountry {
  CountryCode: String
  CountryName: String
}

type AwsGuarddutyS2gGeoLocation {
  Lat: JSON
  Lon: JSON
}

type AwsGuarddutyS2gOrganization {
  Asn: String
  AsnOrg: String
  Isp: String
  Org: String
}

input AwsGuarddutyS2tInput {
  Criterion: JSON
}

type AwsGuarddutyS3f {
  AccountId: String
  DetectorId: String
  Email: String
  InvitedAt: String
  MasterId: String
  RelationshipStatus: String
  UpdatedAt: String
}

type AwsGuarddutySr {
  AccountId: String
  Result: String
}

input AwsGuarddutyStartMonitoringMembersInput {
  AccountIds: [String]
  DetectorId: String!
}

type AwsGuarddutyStartMonitoringMembersOutput {
  UnprocessedAccounts: [AwsGuarddutySr]
}

input AwsGuarddutyStopMonitoringMembersInput {
  AccountIds: [String]
  DetectorId: String!
}

type AwsGuarddutyStopMonitoringMembersOutput {
  UnprocessedAccounts: [AwsGuarddutySr]
}

input AwsGuarddutyUnarchiveFindingsInput {
  DetectorId: String!
  FindingIds: [String]
}

input AwsGuarddutyUpdateDetectorInput {
  DetectorId: String!
  Enable: Boolean
}

input AwsGuarddutyUpdateFindingsFeedbackInput {
  Comments: String
  DetectorId: String!
  Feedback: String
  FindingIds: [String]
}

input AwsGuarddutyUpdateIPSetInput {
  Activate: Boolean
  DetectorId: String!
  IpSetId: String!
  Location: String
  Name: String
}

input AwsGuarddutyUpdateThreatIntelSetInput {
  Activate: Boolean
  DetectorId: String!
  Location: String
  Name: String
  ThreatIntelSetId: String!
}

# AWS Health APIs and Notifications (2016-08-04)
type AwsHealth {
  # health.DescribeAffectedEntities
  DescribeAffectedEntities(input: AwsHealthDescribeAffectedEntitiesInput!): AwsHealthDescribeAffectedEntitiesOutput

  # health.DescribeEntityAggregates
  DescribeEntityAggregates(input: AwsHealthDescribeEntityAggregatesInput): AwsHealthDescribeEntityAggregatesOutput

  # health.DescribeEventAggregates
  DescribeEventAggregates(input: AwsHealthDescribeEventAggregatesInput!): AwsHealthDescribeEventAggregatesOutput

  # health.DescribeEventDetails
  DescribeEventDetails(input: AwsHealthDescribeEventDetailsInput!): AwsHealthDescribeEventDetailsOutput

  # health.DescribeEventTypes
  DescribeEventTypes(input: AwsHealthDescribeEventTypesInput): AwsHealthDescribeEventTypesOutput

  # health.DescribeEvents
  DescribeEvents(input: AwsHealthDescribeEventsInput): AwsHealthDescribeEventsOutput
}

input AwsHealthDescribeAffectedEntitiesFilterInput {
  eventArns: [String]!
  entityArns: [String]
  entityValues: [String]
  lastUpdatedTimes: [AwsHealthS9Input]
  tags: [JSON]
  statusCodes: [String]
}

input AwsHealthDescribeAffectedEntitiesInput {
  filter: AwsHealthDescribeAffectedEntitiesFilterInput!
  locale: String
  nextToken: String
  maxResults: Int
}

type AwsHealthDescribeAffectedEntitiesOutput {
  entities: [AwsHealthDescribeAffectedEntitiesOutputEntities]
  nextToken: String
}

type AwsHealthDescribeAffectedEntitiesOutputEntities {
  entityArn: String
  eventArn: String
  entityValue: String
  awsAccountId: String
  lastUpdatedTime: Date
  statusCode: String
  tags: JSON
}

input AwsHealthDescribeEntityAggregatesInput {
  eventArns: [String]
}

type AwsHealthDescribeEntityAggregatesOutput {
  entityAggregates: [AwsHealthDescribeEntityAggregatesOutputEntityAggregates]
}

type AwsHealthDescribeEntityAggregatesOutputEntityAggregates {
  eventArn: String
  count: Int
}

input AwsHealthDescribeEventAggregatesInput {
  filter: AwsHealthSwInput
  aggregateField: String!
  maxResults: Int
  nextToken: String
}

type AwsHealthDescribeEventAggregatesOutput {
  eventAggregates: [AwsHealthDescribeEventAggregatesOutputEventAggregates]
  nextToken: String
}

type AwsHealthDescribeEventAggregatesOutputEventAggregates {
  aggregateValue: String
  count: Int
}

input AwsHealthDescribeEventDetailsInput {
  eventArns: [String]!
  locale: String
}

type AwsHealthDescribeEventDetailsOutput {
  successfulSet: [AwsHealthDescribeEventDetailsOutputSuccessfulSet]
  failedSet: [AwsHealthDescribeEventDetailsOutputFailedSet]
}

type AwsHealthDescribeEventDetailsOutputFailedSet {
  eventArn: String
  errorName: String
  errorMessage: String
}

type AwsHealthDescribeEventDetailsOutputSuccessfulSet {
  event: AwsHealthS1i
  eventDescription: AwsHealthDescribeEventDetailsOutputSuccessfulSetEventDescription
  eventMetadata: JSON
}

type AwsHealthDescribeEventDetailsOutputSuccessfulSetEventDescription {
  latestDescription: String
}

input AwsHealthDescribeEventsInput {
  filter: AwsHealthSwInput
  nextToken: String
  maxResults: Int
  locale: String
}

type AwsHealthDescribeEventsOutput {
  events: [AwsHealthS1i]
  nextToken: String
}

input AwsHealthDescribeEventTypesFilterInput {
  eventTypeCodes: [String]
  services: [String]
  eventTypeCategories: [String]
}

input AwsHealthDescribeEventTypesInput {
  filter: AwsHealthDescribeEventTypesFilterInput
  locale: String
  nextToken: String
  maxResults: Int
}

type AwsHealthDescribeEventTypesOutput {
  eventTypes: [AwsHealthDescribeEventTypesOutputEventTypes]
  nextToken: String
}

type AwsHealthDescribeEventTypesOutputEventTypes {
  service: String
  code: String
  category: String
}

type AwsHealthS1i {
  arn: String
  service: String
  eventTypeCode: String
  eventTypeCategory: String
  region: String
  availabilityZone: String
  startTime: Date
  endTime: Date
  lastUpdatedTime: Date
  statusCode: String
}

input AwsHealthS9Input {
  from: Date
  to: Date
}

input AwsHealthSwInput {
  eventArns: [String]
  eventTypeCodes: [String]
  services: [String]
  regions: [String]
  availabilityZones: [String]
  startTimes: [AwsHealthS9Input]
  endTimes: [AwsHealthS9Input]
  lastUpdatedTimes: [AwsHealthS9Input]
  entityArns: [String]
  entityValues: [String]
  eventTypeCategories: [String]
  tags: [JSON]
  eventStatusCodes: [String]
}

# AWS Identity and Access Management (2010-05-08)
type AwsIam {
  # iam.AddClientIDToOpenIDConnectProvider
  AddClientIDToOpenIDConnectProvider(input: AwsIamAddClientIDToOpenIDConnectProviderInput!): JSON

  # iam.AddRoleToInstanceProfile
  AddRoleToInstanceProfile(input: AwsIamAddRoleToInstanceProfileInput!): JSON

  # iam.AddUserToGroup
  AddUserToGroup(input: AwsIamAddUserToGroupInput!): JSON

  # iam.AttachGroupPolicy
  AttachGroupPolicy(input: AwsIamAttachGroupPolicyInput!): JSON

  # iam.AttachRolePolicy
  AttachRolePolicy(input: AwsIamAttachRolePolicyInput!): JSON

  # iam.AttachUserPolicy
  AttachUserPolicy(input: AwsIamAttachUserPolicyInput!): JSON

  # iam.ChangePassword
  ChangePassword(input: AwsIamChangePasswordInput!): JSON

  # iam.CreateAccessKey
  CreateAccessKey(input: AwsIamCreateAccessKeyInput): AwsIamCreateAccessKeyOutput

  # iam.CreateAccountAlias
  CreateAccountAlias(input: AwsIamCreateAccountAliasInput!): JSON

  # iam.CreateGroup
  CreateGroup(input: AwsIamCreateGroupInput!): AwsIamCreateGroupOutput

  # iam.CreateInstanceProfile
  CreateInstanceProfile(input: AwsIamCreateInstanceProfileInput!): AwsIamCreateInstanceProfileOutput

  # iam.CreateLoginProfile
  CreateLoginProfile(input: AwsIamCreateLoginProfileInput!): AwsIamCreateLoginProfileOutput

  # iam.CreateOpenIDConnectProvider
  CreateOpenIDConnectProvider(input: AwsIamCreateOpenIDConnectProviderInput!): AwsIamCreateOpenIDConnectProviderOutput

  # iam.CreatePolicy
  CreatePolicy(input: AwsIamCreatePolicyInput!): AwsIamCreatePolicyOutput

  # iam.CreatePolicyVersion
  CreatePolicyVersion(input: AwsIamCreatePolicyVersionInput!): AwsIamCreatePolicyVersionOutput

  # iam.CreateRole
  CreateRole(input: AwsIamCreateRoleInput!): AwsIamCreateRoleOutput

  # iam.CreateSAMLProvider
  CreateSAMLProvider(input: AwsIamCreateSAMLProviderInput!): AwsIamCreateSAMLProviderOutput

  # iam.CreateServiceLinkedRole
  CreateServiceLinkedRole(input: AwsIamCreateServiceLinkedRoleInput!): AwsIamCreateServiceLinkedRoleOutput

  # iam.CreateServiceSpecificCredential
  CreateServiceSpecificCredential(input: AwsIamCreateServiceSpecificCredentialInput!): AwsIamCreateServiceSpecificCredentialOutput

  # iam.CreateUser
  CreateUser(input: AwsIamCreateUserInput!): AwsIamCreateUserOutput

  # iam.CreateVirtualMFADevice
  CreateVirtualMFADevice(input: AwsIamCreateVirtualMFADeviceInput!): AwsIamCreateVirtualMFADeviceOutput

  # iam.DeactivateMFADevice
  DeactivateMFADevice(input: AwsIamDeactivateMFADeviceInput!): JSON

  # iam.DeleteAccessKey
  DeleteAccessKey(input: AwsIamDeleteAccessKeyInput!): JSON

  # iam.DeleteAccountAlias
  DeleteAccountAlias(input: AwsIamDeleteAccountAliasInput!): JSON

  # iam.DeleteAccountPasswordPolicy
  DeleteAccountPasswordPolicy: JSON

  # iam.DeleteGroup
  DeleteGroup(input: AwsIamDeleteGroupInput!): JSON

  # iam.DeleteGroupPolicy
  DeleteGroupPolicy(input: AwsIamDeleteGroupPolicyInput!): JSON

  # iam.DeleteInstanceProfile
  DeleteInstanceProfile(input: AwsIamDeleteInstanceProfileInput!): JSON

  # iam.DeleteLoginProfile
  DeleteLoginProfile(input: AwsIamDeleteLoginProfileInput!): JSON

  # iam.DeleteOpenIDConnectProvider
  DeleteOpenIDConnectProvider(input: AwsIamDeleteOpenIDConnectProviderInput!): JSON

  # iam.DeletePolicy
  DeletePolicy(input: AwsIamDeletePolicyInput!): JSON

  # iam.DeletePolicyVersion
  DeletePolicyVersion(input: AwsIamDeletePolicyVersionInput!): JSON

  # iam.DeleteRole
  DeleteRole(input: AwsIamDeleteRoleInput!): JSON

  # iam.DeleteRolePolicy
  DeleteRolePolicy(input: AwsIamDeleteRolePolicyInput!): JSON

  # iam.DeleteSAMLProvider
  DeleteSAMLProvider(input: AwsIamDeleteSAMLProviderInput!): JSON

  # iam.DeleteSSHPublicKey
  DeleteSSHPublicKey(input: AwsIamDeleteSSHPublicKeyInput!): JSON

  # iam.DeleteServerCertificate
  DeleteServerCertificate(input: AwsIamDeleteServerCertificateInput!): JSON

  # iam.DeleteServiceLinkedRole
  DeleteServiceLinkedRole(input: AwsIamDeleteServiceLinkedRoleInput!): AwsIamDeleteServiceLinkedRoleOutput

  # iam.DeleteServiceSpecificCredential
  DeleteServiceSpecificCredential(input: AwsIamDeleteServiceSpecificCredentialInput!): JSON

  # iam.DeleteSigningCertificate
  DeleteSigningCertificate(input: AwsIamDeleteSigningCertificateInput!): JSON

  # iam.DeleteUser
  DeleteUser(input: AwsIamDeleteUserInput!): JSON

  # iam.DeleteUserPolicy
  DeleteUserPolicy(input: AwsIamDeleteUserPolicyInput!): JSON

  # iam.DeleteVirtualMFADevice
  DeleteVirtualMFADevice(input: AwsIamDeleteVirtualMFADeviceInput!): JSON

  # iam.DetachGroupPolicy
  DetachGroupPolicy(input: AwsIamDetachGroupPolicyInput!): JSON

  # iam.DetachRolePolicy
  DetachRolePolicy(input: AwsIamDetachRolePolicyInput!): JSON

  # iam.DetachUserPolicy
  DetachUserPolicy(input: AwsIamDetachUserPolicyInput!): JSON

  # iam.EnableMFADevice
  EnableMFADevice(input: AwsIamEnableMFADeviceInput!): JSON

  # iam.GenerateCredentialReport
  GenerateCredentialReport: AwsIamGenerateCredentialReportOutput

  # iam.GetAccessKeyLastUsed
  GetAccessKeyLastUsed(input: AwsIamGetAccessKeyLastUsedInput!): AwsIamGetAccessKeyLastUsedOutput

  # iam.GetAccountAuthorizationDetails
  GetAccountAuthorizationDetails(input: AwsIamGetAccountAuthorizationDetailsInput): AwsIamGetAccountAuthorizationDetailsOutput

  # iam.GetAccountPasswordPolicy
  GetAccountPasswordPolicy: AwsIamGetAccountPasswordPolicyOutput

  # iam.GetAccountSummary
  GetAccountSummary: AwsIamGetAccountSummaryOutput

  # iam.GetContextKeysForCustomPolicy
  GetContextKeysForCustomPolicy(input: AwsIamGetContextKeysForCustomPolicyInput!): JSON

  # iam.GetContextKeysForPrincipalPolicy
  GetContextKeysForPrincipalPolicy(input: AwsIamGetContextKeysForPrincipalPolicyInput!): JSON

  # iam.GetCredentialReport
  GetCredentialReport: AwsIamGetCredentialReportOutput

  # iam.GetGroup
  GetGroup(input: AwsIamGetGroupInput!): AwsIamGetGroupOutput

  # iam.GetGroupPolicy
  GetGroupPolicy(input: AwsIamGetGroupPolicyInput!): AwsIamGetGroupPolicyOutput

  # iam.GetInstanceProfile
  GetInstanceProfile(input: AwsIamGetInstanceProfileInput!): AwsIamGetInstanceProfileOutput

  # iam.GetLoginProfile
  GetLoginProfile(input: AwsIamGetLoginProfileInput!): AwsIamGetLoginProfileOutput

  # iam.GetOpenIDConnectProvider
  GetOpenIDConnectProvider(input: AwsIamGetOpenIDConnectProviderInput!): AwsIamGetOpenIDConnectProviderOutput

  # iam.GetPolicy
  GetPolicy(input: AwsIamGetPolicyInput!): AwsIamGetPolicyOutput

  # iam.GetPolicyVersion
  GetPolicyVersion(input: AwsIamGetPolicyVersionInput!): AwsIamGetPolicyVersionOutput

  # iam.GetRole
  GetRole(input: AwsIamGetRoleInput!): AwsIamGetRoleOutput

  # iam.GetRolePolicy
  GetRolePolicy(input: AwsIamGetRolePolicyInput!): AwsIamGetRolePolicyOutput

  # iam.GetSAMLProvider
  GetSAMLProvider(input: AwsIamGetSAMLProviderInput!): AwsIamGetSAMLProviderOutput

  # iam.GetSSHPublicKey
  GetSSHPublicKey(input: AwsIamGetSSHPublicKeyInput!): AwsIamGetSSHPublicKeyOutput

  # iam.GetServerCertificate
  GetServerCertificate(input: AwsIamGetServerCertificateInput!): AwsIamGetServerCertificateOutput

  # iam.GetServiceLinkedRoleDeletionStatus
  GetServiceLinkedRoleDeletionStatus(input: AwsIamGetServiceLinkedRoleDeletionStatusInput!): AwsIamGetServiceLinkedRoleDeletionStatusOutput

  # iam.GetUser
  GetUser(input: AwsIamGetUserInput): AwsIamGetUserOutput

  # iam.GetUserPolicy
  GetUserPolicy(input: AwsIamGetUserPolicyInput!): AwsIamGetUserPolicyOutput

  # iam.ListAccessKeys
  ListAccessKeys(input: AwsIamListAccessKeysInput): AwsIamListAccessKeysOutput

  # iam.ListAccountAliases
  ListAccountAliases(input: AwsIamListAccountAliasesInput): AwsIamListAccountAliasesOutput

  # iam.ListAttachedGroupPolicies
  ListAttachedGroupPolicies(input: AwsIamListAttachedGroupPoliciesInput!): AwsIamListAttachedGroupPoliciesOutput

  # iam.ListAttachedRolePolicies
  ListAttachedRolePolicies(input: AwsIamListAttachedRolePoliciesInput!): AwsIamListAttachedRolePoliciesOutput

  # iam.ListAttachedUserPolicies
  ListAttachedUserPolicies(input: AwsIamListAttachedUserPoliciesInput!): AwsIamListAttachedUserPoliciesOutput

  # iam.ListEntitiesForPolicy
  ListEntitiesForPolicy(input: AwsIamListEntitiesForPolicyInput!): AwsIamListEntitiesForPolicyOutput

  # iam.ListGroupPolicies
  ListGroupPolicies(input: AwsIamListGroupPoliciesInput!): AwsIamListGroupPoliciesOutput

  # iam.ListGroups
  ListGroups(input: AwsIamListGroupsInput): AwsIamListGroupsOutput

  # iam.ListGroupsForUser
  ListGroupsForUser(input: AwsIamListGroupsForUserInput!): AwsIamListGroupsForUserOutput

  # iam.ListInstanceProfiles
  ListInstanceProfiles(input: AwsIamListInstanceProfilesInput): AwsIamListInstanceProfilesOutput

  # iam.ListInstanceProfilesForRole
  ListInstanceProfilesForRole(input: AwsIamListInstanceProfilesForRoleInput!): AwsIamListInstanceProfilesForRoleOutput

  # iam.ListMFADevices
  ListMFADevices(input: AwsIamListMFADevicesInput): AwsIamListMFADevicesOutput

  # iam.ListOpenIDConnectProviders
  ListOpenIDConnectProviders(input: JSON): AwsIamListOpenIDConnectProvidersOutput

  # iam.ListPolicies
  ListPolicies(input: AwsIamListPoliciesInput): AwsIamListPoliciesOutput

  # iam.ListPolicyVersions
  ListPolicyVersions(input: AwsIamListPolicyVersionsInput!): AwsIamListPolicyVersionsOutput

  # iam.ListRolePolicies
  ListRolePolicies(input: AwsIamListRolePoliciesInput!): AwsIamListRolePoliciesOutput

  # iam.ListRoles
  ListRoles(input: AwsIamListRolesInput): AwsIamListRolesOutput

  # iam.ListSAMLProviders
  ListSAMLProviders(input: JSON): AwsIamListSAMLProvidersOutput

  # iam.ListSSHPublicKeys
  ListSSHPublicKeys(input: AwsIamListSSHPublicKeysInput): AwsIamListSSHPublicKeysOutput

  # iam.ListServerCertificates
  ListServerCertificates(input: AwsIamListServerCertificatesInput): AwsIamListServerCertificatesOutput

  # iam.ListServiceSpecificCredentials
  ListServiceSpecificCredentials(input: AwsIamListServiceSpecificCredentialsInput): AwsIamListServiceSpecificCredentialsOutput

  # iam.ListSigningCertificates
  ListSigningCertificates(input: AwsIamListSigningCertificatesInput): AwsIamListSigningCertificatesOutput

  # iam.ListUserPolicies
  ListUserPolicies(input: AwsIamListUserPoliciesInput!): AwsIamListUserPoliciesOutput

  # iam.ListUsers
  ListUsers(input: AwsIamListUsersInput): AwsIamListUsersOutput

  # iam.ListVirtualMFADevices
  ListVirtualMFADevices(input: AwsIamListVirtualMFADevicesInput): AwsIamListVirtualMFADevicesOutput

  # iam.PutGroupPolicy
  PutGroupPolicy(input: AwsIamPutGroupPolicyInput!): JSON

  # iam.PutRolePolicy
  PutRolePolicy(input: AwsIamPutRolePolicyInput!): JSON

  # iam.PutUserPolicy
  PutUserPolicy(input: AwsIamPutUserPolicyInput!): JSON

  # iam.RemoveClientIDFromOpenIDConnectProvider
  RemoveClientIDFromOpenIDConnectProvider(input: AwsIamRemoveClientIDFromOpenIDConnectProviderInput!): JSON

  # iam.RemoveRoleFromInstanceProfile
  RemoveRoleFromInstanceProfile(input: AwsIamRemoveRoleFromInstanceProfileInput!): JSON

  # iam.RemoveUserFromGroup
  RemoveUserFromGroup(input: AwsIamRemoveUserFromGroupInput!): JSON

  # iam.ResetServiceSpecificCredential
  ResetServiceSpecificCredential(input: AwsIamResetServiceSpecificCredentialInput!): AwsIamResetServiceSpecificCredentialOutput

  # iam.ResyncMFADevice
  ResyncMFADevice(input: AwsIamResyncMFADeviceInput!): JSON

  # iam.SetDefaultPolicyVersion
  SetDefaultPolicyVersion(input: AwsIamSetDefaultPolicyVersionInput!): JSON

  # iam.SimulateCustomPolicy
  SimulateCustomPolicy(input: AwsIamSimulateCustomPolicyInput!): JSON

  # iam.SimulatePrincipalPolicy
  SimulatePrincipalPolicy(input: AwsIamSimulatePrincipalPolicyInput!): JSON

  # iam.UpdateAccessKey
  UpdateAccessKey(input: AwsIamUpdateAccessKeyInput!): JSON

  # iam.UpdateAccountPasswordPolicy
  UpdateAccountPasswordPolicy(input: AwsIamUpdateAccountPasswordPolicyInput): JSON

  # iam.UpdateAssumeRolePolicy
  UpdateAssumeRolePolicy(input: AwsIamUpdateAssumeRolePolicyInput!): JSON

  # iam.UpdateGroup
  UpdateGroup(input: AwsIamUpdateGroupInput!): JSON

  # iam.UpdateLoginProfile
  UpdateLoginProfile(input: AwsIamUpdateLoginProfileInput!): JSON

  # iam.UpdateOpenIDConnectProviderThumbprint
  UpdateOpenIDConnectProviderThumbprint(input: AwsIamUpdateOpenIDConnectProviderThumbprintInput!): JSON

  # iam.UpdateRoleDescription
  UpdateRoleDescription(input: AwsIamUpdateRoleDescriptionInput!): AwsIamUpdateRoleDescriptionOutput

  # iam.UpdateSAMLProvider
  UpdateSAMLProvider(input: AwsIamUpdateSAMLProviderInput!): AwsIamUpdateSAMLProviderOutput

  # iam.UpdateSSHPublicKey
  UpdateSSHPublicKey(input: AwsIamUpdateSSHPublicKeyInput!): JSON

  # iam.UpdateServerCertificate
  UpdateServerCertificate(input: AwsIamUpdateServerCertificateInput!): JSON

  # iam.UpdateServiceSpecificCredential
  UpdateServiceSpecificCredential(input: AwsIamUpdateServiceSpecificCredentialInput!): JSON

  # iam.UpdateSigningCertificate
  UpdateSigningCertificate(input: AwsIamUpdateSigningCertificateInput!): JSON

  # iam.UpdateUser
  UpdateUser(input: AwsIamUpdateUserInput!): JSON

  # iam.UploadSSHPublicKey
  UploadSSHPublicKey(input: AwsIamUploadSSHPublicKeyInput!): AwsIamUploadSSHPublicKeyOutput

  # iam.UploadServerCertificate
  UploadServerCertificate(input: AwsIamUploadServerCertificateInput!): AwsIamUploadServerCertificateOutput

  # iam.UploadSigningCertificate
  UploadSigningCertificate(input: AwsIamUploadSigningCertificateInput!): AwsIamUploadSigningCertificateOutput
}

input AwsIamAddClientIDToOpenIDConnectProviderInput {
  OpenIDConnectProviderArn: String!
  ClientID: String!
}

input AwsIamAddRoleToInstanceProfileInput {
  InstanceProfileName: String!
  RoleName: String!
}

input AwsIamAddUserToGroupInput {
  GroupName: String!
  UserName: String!
}

input AwsIamAttachGroupPolicyInput {
  GroupName: String!
  PolicyArn: String!
}

input AwsIamAttachRolePolicyInput {
  RoleName: String!
  PolicyArn: String!
}

input AwsIamAttachUserPolicyInput {
  UserName: String!
  PolicyArn: String!
}

input AwsIamChangePasswordInput {
  OldPassword: String!
  NewPassword: String!
}

input AwsIamCreateAccessKeyInput {
  UserName: String
}

type AwsIamCreateAccessKeyOutput {
  AccessKey: AwsIamCreateAccessKeyOutputAccessKey!
}

type AwsIamCreateAccessKeyOutputAccessKey {
  UserName: String!
  AccessKeyId: String!
  Status: String!
  SecretAccessKey: String!
  CreateDate: Date
}

input AwsIamCreateAccountAliasInput {
  AccountAlias: String!
}

input AwsIamCreateGroupInput {
  Path: String
  GroupName: String!
}

type AwsIamCreateGroupOutput {
  Group: AwsIamSs!
}

input AwsIamCreateInstanceProfileInput {
  InstanceProfileName: String!
  Path: String
}

type AwsIamCreateInstanceProfileOutput {
  InstanceProfile: AwsIamSw!
}

input AwsIamCreateLoginProfileInput {
  UserName: String!
  Password: String!
  PasswordResetRequired: Boolean
}

type AwsIamCreateLoginProfileOutput {
  LoginProfile: AwsIamS14!
}

input AwsIamCreateOpenIDConnectProviderInput {
  Url: String!
  ClientIDList: [String]
  ThumbprintList: [String]!
}

type AwsIamCreateOpenIDConnectProviderOutput {
  OpenIDConnectProviderArn: String
}

input AwsIamCreatePolicyInput {
  PolicyName: String!
  Path: String
  PolicyDocument: String!
  Description: String
}

type AwsIamCreatePolicyOutput {
  Policy: AwsIamS1g
}

input AwsIamCreatePolicyVersionInput {
  PolicyArn: String!
  PolicyDocument: String!
  SetAsDefault: Boolean
}

type AwsIamCreatePolicyVersionOutput {
  PolicyVersion: AwsIamS1l
}

input AwsIamCreateRoleInput {
  Path: String
  RoleName: String!
  AssumeRolePolicyDocument: String!
  Description: String
}

type AwsIamCreateRoleOutput {
  Role: AwsIamSy!
}

input AwsIamCreateSAMLProviderInput {
  SAMLMetadataDocument: String!
  Name: String!
}

type AwsIamCreateSAMLProviderOutput {
  SAMLProviderArn: String
}

input AwsIamCreateServiceLinkedRoleInput {
  AWSServiceName: String!
  Description: String
  CustomSuffix: String
}

type AwsIamCreateServiceLinkedRoleOutput {
  Role: AwsIamSy
}

input AwsIamCreateServiceSpecificCredentialInput {
  UserName: String!
  ServiceName: String!
}

type AwsIamCreateServiceSpecificCredentialOutput {
  ServiceSpecificCredential: AwsIamS1y
}

input AwsIamCreateUserInput {
  Path: String
  UserName: String!
}

type AwsIamCreateUserOutput {
  User: AwsIamS24
}

input AwsIamCreateVirtualMFADeviceInput {
  Path: String
  VirtualMFADeviceName: String!
}

type AwsIamCreateVirtualMFADeviceOutput {
  VirtualMFADevice: AwsIamS28!
}

input AwsIamDeactivateMFADeviceInput {
  UserName: String!
  SerialNumber: String!
}

input AwsIamDeleteAccessKeyInput {
  UserName: String
  AccessKeyId: String!
}

input AwsIamDeleteAccountAliasInput {
  AccountAlias: String!
}

input AwsIamDeleteGroupInput {
  GroupName: String!
}

input AwsIamDeleteGroupPolicyInput {
  GroupName: String!
  PolicyName: String!
}

input AwsIamDeleteInstanceProfileInput {
  InstanceProfileName: String!
}

input AwsIamDeleteLoginProfileInput {
  UserName: String!
}

input AwsIamDeleteOpenIDConnectProviderInput {
  OpenIDConnectProviderArn: String!
}

input AwsIamDeletePolicyInput {
  PolicyArn: String!
}

input AwsIamDeletePolicyVersionInput {
  PolicyArn: String!
  VersionId: String!
}

input AwsIamDeleteRoleInput {
  RoleName: String!
}

input AwsIamDeleteRolePolicyInput {
  RoleName: String!
  PolicyName: String!
}

input AwsIamDeleteSAMLProviderInput {
  SAMLProviderArn: String!
}

input AwsIamDeleteServerCertificateInput {
  ServerCertificateName: String!
}

input AwsIamDeleteServiceLinkedRoleInput {
  RoleName: String!
}

type AwsIamDeleteServiceLinkedRoleOutput {
  DeletionTaskId: String!
}

input AwsIamDeleteServiceSpecificCredentialInput {
  UserName: String
  ServiceSpecificCredentialId: String!
}

input AwsIamDeleteSigningCertificateInput {
  UserName: String
  CertificateId: String!
}

input AwsIamDeleteSSHPublicKeyInput {
  UserName: String!
  SSHPublicKeyId: String!
}

input AwsIamDeleteUserInput {
  UserName: String!
}

input AwsIamDeleteUserPolicyInput {
  UserName: String!
  PolicyName: String!
}

input AwsIamDeleteVirtualMFADeviceInput {
  SerialNumber: String!
}

input AwsIamDetachGroupPolicyInput {
  GroupName: String!
  PolicyArn: String!
}

input AwsIamDetachRolePolicyInput {
  RoleName: String!
  PolicyArn: String!
}

input AwsIamDetachUserPolicyInput {
  UserName: String!
  PolicyArn: String!
}

input AwsIamEnableMFADeviceInput {
  UserName: String!
  SerialNumber: String!
  AuthenticationCode1: String!
  AuthenticationCode2: String!
}

type AwsIamGenerateCredentialReportOutput {
  State: String
  Description: String
}

input AwsIamGetAccessKeyLastUsedInput {
  AccessKeyId: String!
}

type AwsIamGetAccessKeyLastUsedOutput {
  UserName: String
  AccessKeyLastUsed: AwsIamGetAccessKeyLastUsedOutputAccessKeyLastUsed
}

type AwsIamGetAccessKeyLastUsedOutputAccessKeyLastUsed {
  LastUsedDate: Date!
  ServiceName: String!
  Region: String!
}

input AwsIamGetAccountAuthorizationDetailsInput {
  Filter: [String]
  MaxItems: Int
  Marker: String
}

type AwsIamGetAccountAuthorizationDetailsOutput {
  UserDetailList: [AwsIamGetAccountAuthorizationDetailsOutputUserDetailList]
  GroupDetailList: [AwsIamGetAccountAuthorizationDetailsOutputGroupDetailList]
  RoleDetailList: [AwsIamGetAccountAuthorizationDetailsOutputRoleDetailList]
  Policies: [AwsIamGetAccountAuthorizationDetailsOutputPolicies]
  IsTruncated: Boolean
  Marker: String
}

type AwsIamGetAccountAuthorizationDetailsOutputGroupDetailList {
  Path: String
  GroupName: String
  GroupId: String
  Arn: String
  CreateDate: Date
  GroupPolicyList: [AwsIamS3l]
  AttachedManagedPolicies: [AwsIamS3o]
}

type AwsIamGetAccountAuthorizationDetailsOutputPolicies {
  PolicyName: String
  PolicyId: String
  Arn: String
  Path: String
  DefaultVersionId: String
  AttachmentCount: Int
  IsAttachable: Boolean
  Description: String
  CreateDate: Date
  UpdateDate: Date
  PolicyVersionList: [AwsIamS1l]
}

type AwsIamGetAccountAuthorizationDetailsOutputRoleDetailList {
  Path: String
  RoleName: String
  RoleId: String
  Arn: String
  CreateDate: Date
  AssumeRolePolicyDocument: String
  InstanceProfileList: [AwsIamSw]
  RolePolicyList: [AwsIamS3l]
  AttachedManagedPolicies: [AwsIamS3o]
}

type AwsIamGetAccountAuthorizationDetailsOutputUserDetailList {
  Path: String
  UserName: String
  UserId: String
  Arn: String
  CreateDate: Date
  UserPolicyList: [AwsIamS3l]
  GroupList: [String]
  AttachedManagedPolicies: [AwsIamS3o]
}

type AwsIamGetAccountPasswordPolicyOutput {
  PasswordPolicy: AwsIamGetAccountPasswordPolicyOutputPasswordPolicy!
}

type AwsIamGetAccountPasswordPolicyOutputPasswordPolicy {
  MinimumPasswordLength: Int
  RequireSymbols: Boolean
  RequireNumbers: Boolean
  RequireUppercaseCharacters: Boolean
  RequireLowercaseCharacters: Boolean
  AllowUsersToChangePassword: Boolean
  ExpirePasswords: Boolean
  MaxPasswordAge: Int
  PasswordReusePrevention: Int
  HardExpiry: Boolean
}

type AwsIamGetAccountSummaryOutput {
  SummaryMap: JSON
}

input AwsIamGetContextKeysForCustomPolicyInput {
  PolicyInputList: [String]!
}

input AwsIamGetContextKeysForPrincipalPolicyInput {
  PolicySourceArn: String!
  PolicyInputList: [String]
}

type AwsIamGetCredentialReportOutput {
  Content: JSON
  ReportFormat: String
  GeneratedTime: Date
}

input AwsIamGetGroupInput {
  GroupName: String!
  Marker: String
  MaxItems: Int
}

type AwsIamGetGroupOutput {
  Group: AwsIamSs!
  Users: [AwsIamS24]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamGetGroupPolicyInput {
  GroupName: String!
  PolicyName: String!
}

type AwsIamGetGroupPolicyOutput {
  GroupName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIamGetInstanceProfileInput {
  InstanceProfileName: String!
}

type AwsIamGetInstanceProfileOutput {
  InstanceProfile: AwsIamSw!
}

input AwsIamGetLoginProfileInput {
  UserName: String!
}

type AwsIamGetLoginProfileOutput {
  LoginProfile: AwsIamS14!
}

input AwsIamGetOpenIDConnectProviderInput {
  OpenIDConnectProviderArn: String!
}

type AwsIamGetOpenIDConnectProviderOutput {
  Url: String
  ClientIDList: [String]
  ThumbprintList: [String]
  CreateDate: Date
}

input AwsIamGetPolicyInput {
  PolicyArn: String!
}

type AwsIamGetPolicyOutput {
  Policy: AwsIamS1g
}

input AwsIamGetPolicyVersionInput {
  PolicyArn: String!
  VersionId: String!
}

type AwsIamGetPolicyVersionOutput {
  PolicyVersion: AwsIamS1l
}

input AwsIamGetRoleInput {
  RoleName: String!
}

type AwsIamGetRoleOutput {
  Role: AwsIamSy!
}

input AwsIamGetRolePolicyInput {
  RoleName: String!
  PolicyName: String!
}

type AwsIamGetRolePolicyOutput {
  RoleName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIamGetSAMLProviderInput {
  SAMLProviderArn: String!
}

type AwsIamGetSAMLProviderOutput {
  SAMLMetadataDocument: String
  CreateDate: Date
  ValidUntil: Date
}

input AwsIamGetServerCertificateInput {
  ServerCertificateName: String!
}

type AwsIamGetServerCertificateOutput {
  ServerCertificate: AwsIamGetServerCertificateOutputServerCertificate!
}

type AwsIamGetServerCertificateOutputServerCertificate {
  ServerCertificateMetadata: AwsIamS5b!
  CertificateBody: String!
  CertificateChain: String
}

input AwsIamGetServiceLinkedRoleDeletionStatusInput {
  DeletionTaskId: String!
}

type AwsIamGetServiceLinkedRoleDeletionStatusOutput {
  Status: String!
  Reason: AwsIamGetServiceLinkedRoleDeletionStatusOutputReason
}

type AwsIamGetServiceLinkedRoleDeletionStatusOutputReason {
  Reason: String
  RoleUsageList: [AwsIamGetServiceLinkedRoleDeletionStatusOutputReasonRoleUsageList]
}

type AwsIamGetServiceLinkedRoleDeletionStatusOutputReasonRoleUsageList {
  Region: String
  Resources: [String]
}

input AwsIamGetSSHPublicKeyInput {
  UserName: String!
  SSHPublicKeyId: String!
  Encoding: String!
}

type AwsIamGetSSHPublicKeyOutput {
  SSHPublicKey: AwsIamS55
}

input AwsIamGetUserInput {
  UserName: String
}

type AwsIamGetUserOutput {
  User: AwsIamS24!
}

input AwsIamGetUserPolicyInput {
  UserName: String!
  PolicyName: String!
}

type AwsIamGetUserPolicyOutput {
  UserName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIamListAccessKeysInput {
  UserName: String
  Marker: String
  MaxItems: Int
}

type AwsIamListAccessKeysOutput {
  AccessKeyMetadata: [AwsIamListAccessKeysOutputAccessKeyMetadata]!
  IsTruncated: Boolean
  Marker: String
}

type AwsIamListAccessKeysOutputAccessKeyMetadata {
  UserName: String
  AccessKeyId: String
  Status: String
  CreateDate: Date
}

input AwsIamListAccountAliasesInput {
  Marker: String
  MaxItems: Int
}

type AwsIamListAccountAliasesOutput {
  AccountAliases: [String]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListAttachedGroupPoliciesInput {
  GroupName: String!
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIamListAttachedGroupPoliciesOutput {
  AttachedPolicies: [AwsIamS3o]
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListAttachedRolePoliciesInput {
  RoleName: String!
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIamListAttachedRolePoliciesOutput {
  AttachedPolicies: [AwsIamS3o]
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListAttachedUserPoliciesInput {
  UserName: String!
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIamListAttachedUserPoliciesOutput {
  AttachedPolicies: [AwsIamS3o]
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListEntitiesForPolicyInput {
  PolicyArn: String!
  EntityFilter: String
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIamListEntitiesForPolicyOutput {
  PolicyGroups: [AwsIamListEntitiesForPolicyOutputPolicyGroups]
  PolicyUsers: [AwsIamListEntitiesForPolicyOutputPolicyUsers]
  PolicyRoles: [AwsIamListEntitiesForPolicyOutputPolicyRoles]
  IsTruncated: Boolean
  Marker: String
}

type AwsIamListEntitiesForPolicyOutputPolicyGroups {
  GroupName: String
  GroupId: String
}

type AwsIamListEntitiesForPolicyOutputPolicyRoles {
  RoleName: String
  RoleId: String
}

type AwsIamListEntitiesForPolicyOutputPolicyUsers {
  UserName: String
  UserId: String
}

input AwsIamListGroupPoliciesInput {
  GroupName: String!
  Marker: String
  MaxItems: Int
}

type AwsIamListGroupPoliciesOutput {
  PolicyNames: [String]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListGroupsForUserInput {
  UserName: String!
  Marker: String
  MaxItems: Int
}

type AwsIamListGroupsForUserOutput {
  Groups: [AwsIamSs]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListGroupsInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIamListGroupsOutput {
  Groups: [AwsIamSs]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListInstanceProfilesForRoleInput {
  RoleName: String!
  Marker: String
  MaxItems: Int
}

type AwsIamListInstanceProfilesForRoleOutput {
  InstanceProfiles: [AwsIamSw]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListInstanceProfilesInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIamListInstanceProfilesOutput {
  InstanceProfiles: [AwsIamSw]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListMFADevicesInput {
  UserName: String
  Marker: String
  MaxItems: Int
}

type AwsIamListMFADevicesOutput {
  MFADevices: [AwsIamListMFADevicesOutputMFADevices]!
  IsTruncated: Boolean
  Marker: String
}

type AwsIamListMFADevicesOutputMFADevices {
  UserName: String!
  SerialNumber: String!
  EnableDate: Date!
}

type AwsIamListOpenIDConnectProvidersOutput {
  OpenIDConnectProviderList: [AwsIamListOpenIDConnectProvidersOutputOpenIDConnectProviderList]
}

type AwsIamListOpenIDConnectProvidersOutputOpenIDConnectProviderList {
  Arn: String
}

input AwsIamListPoliciesInput {
  Scope: String
  OnlyAttached: Boolean
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIamListPoliciesOutput {
  Policies: [AwsIamS1g]
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListPolicyVersionsInput {
  PolicyArn: String!
  Marker: String
  MaxItems: Int
}

type AwsIamListPolicyVersionsOutput {
  Versions: [AwsIamS1l]
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListRolePoliciesInput {
  RoleName: String!
  Marker: String
  MaxItems: Int
}

type AwsIamListRolePoliciesOutput {
  PolicyNames: [String]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListRolesInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIamListRolesOutput {
  Roles: [AwsIamSy]!
  IsTruncated: Boolean
  Marker: String
}

type AwsIamListSAMLProvidersOutput {
  SAMLProviderList: [AwsIamListSAMLProvidersOutputSAMLProviderList]
}

type AwsIamListSAMLProvidersOutputSAMLProviderList {
  Arn: String
  ValidUntil: Date
  CreateDate: Date
}

input AwsIamListServerCertificatesInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIamListServerCertificatesOutput {
  ServerCertificateMetadataList: [AwsIamS5b]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListServiceSpecificCredentialsInput {
  UserName: String
  ServiceName: String
}

type AwsIamListServiceSpecificCredentialsOutput {
  ServiceSpecificCredentials: [AwsIamListServiceSpecificCredentialsOutputServiceSpecificCredentials]
}

type AwsIamListServiceSpecificCredentialsOutputServiceSpecificCredentials {
  UserName: String!
  Status: String!
  ServiceUserName: String!
  CreateDate: Date!
  ServiceSpecificCredentialId: String!
  ServiceName: String!
}

input AwsIamListSigningCertificatesInput {
  UserName: String
  Marker: String
  MaxItems: Int
}

type AwsIamListSigningCertificatesOutput {
  Certificates: [AwsIamS7p]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListSSHPublicKeysInput {
  UserName: String
  Marker: String
  MaxItems: Int
}

type AwsIamListSSHPublicKeysOutput {
  SSHPublicKeys: [AwsIamListSSHPublicKeysOutputSSHPublicKeys]
  IsTruncated: Boolean
  Marker: String
}

type AwsIamListSSHPublicKeysOutputSSHPublicKeys {
  UserName: String!
  SSHPublicKeyId: String!
  Status: String!
  UploadDate: Date!
}

input AwsIamListUserPoliciesInput {
  UserName: String!
  Marker: String
  MaxItems: Int
}

type AwsIamListUserPoliciesOutput {
  PolicyNames: [String]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListUsersInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIamListUsersOutput {
  Users: [AwsIamS24]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamListVirtualMFADevicesInput {
  AssignmentStatus: String
  Marker: String
  MaxItems: Int
}

type AwsIamListVirtualMFADevicesOutput {
  VirtualMFADevices: [AwsIamS28]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIamPutGroupPolicyInput {
  GroupName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIamPutRolePolicyInput {
  RoleName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIamPutUserPolicyInput {
  UserName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIamRemoveClientIDFromOpenIDConnectProviderInput {
  OpenIDConnectProviderArn: String!
  ClientID: String!
}

input AwsIamRemoveRoleFromInstanceProfileInput {
  InstanceProfileName: String!
  RoleName: String!
}

input AwsIamRemoveUserFromGroupInput {
  GroupName: String!
  UserName: String!
}

input AwsIamResetServiceSpecificCredentialInput {
  UserName: String
  ServiceSpecificCredentialId: String!
}

type AwsIamResetServiceSpecificCredentialOutput {
  ServiceSpecificCredential: AwsIamS1y
}

input AwsIamResyncMFADeviceInput {
  UserName: String!
  SerialNumber: String!
  AuthenticationCode1: String!
  AuthenticationCode2: String!
}

type AwsIamS14 {
  UserName: String!
  CreateDate: Date!
  PasswordResetRequired: Boolean
}

type AwsIamS1g {
  PolicyName: String
  PolicyId: String
  Arn: String
  Path: String
  DefaultVersionId: String
  AttachmentCount: Int
  IsAttachable: Boolean
  Description: String
  CreateDate: Date
  UpdateDate: Date
}

type AwsIamS1l {
  Document: String
  VersionId: String
  IsDefaultVersion: Boolean
  CreateDate: Date
}

type AwsIamS1y {
  CreateDate: Date!
  ServiceName: String!
  ServiceUserName: String!
  ServicePassword: String!
  ServiceSpecificCredentialId: String!
  UserName: String!
  Status: String!
}

type AwsIamS24 {
  Path: String!
  UserName: String!
  UserId: String!
  Arn: String!
  CreateDate: Date!
  PasswordLastUsed: Date
}

type AwsIamS28 {
  SerialNumber: String!
  Base32StringSeed: JSON
  QRCodePNG: JSON
  User: AwsIamS24
  EnableDate: Date
}

type AwsIamS3l {
  PolicyName: String
  PolicyDocument: String
}

type AwsIamS3o {
  PolicyName: String
  PolicyArn: String
}

type AwsIamS55 {
  UserName: String!
  SSHPublicKeyId: String!
  Fingerprint: String!
  SSHPublicKeyBody: String!
  Status: String!
  UploadDate: Date
}

type AwsIamS5b {
  Path: String!
  ServerCertificateName: String!
  ServerCertificateId: String!
  Arn: String!
  UploadDate: Date
  Expiration: Date
}

type AwsIamS7p {
  UserName: String!
  CertificateId: String!
  CertificateBody: String!
  Status: String!
  UploadDate: Date
}

input AwsIamS8dInput {
  ContextKeyName: String
  ContextKeyValues: [String]
  ContextKeyType: String
}

input AwsIamSetDefaultPolicyVersionInput {
  PolicyArn: String!
  VersionId: String!
}

input AwsIamSimulateCustomPolicyInput {
  PolicyInputList: [String]!
  ActionNames: [String]!
  ResourceArns: [String]
  ResourcePolicy: String
  ResourceOwner: String
  CallerArn: String
  ContextEntries: [AwsIamS8dInput]
  ResourceHandlingOption: String
  MaxItems: Int
  Marker: String
}

input AwsIamSimulatePrincipalPolicyInput {
  PolicySourceArn: String!
  PolicyInputList: [String]
  ActionNames: [String]!
  ResourceArns: [String]
  ResourcePolicy: String
  ResourceOwner: String
  CallerArn: String
  ContextEntries: [AwsIamS8dInput]
  ResourceHandlingOption: String
  MaxItems: Int
  Marker: String
}

type AwsIamSs {
  Path: String!
  GroupName: String!
  GroupId: String!
  Arn: String!
  CreateDate: Date!
}

type AwsIamSw {
  Path: String!
  InstanceProfileName: String!
  InstanceProfileId: String!
  Arn: String!
  CreateDate: Date!
  Roles: [AwsIamSy]!
}

type AwsIamSy {
  Path: String!
  RoleName: String!
  RoleId: String!
  Arn: String!
  CreateDate: Date!
  AssumeRolePolicyDocument: String
  Description: String
}

input AwsIamUpdateAccessKeyInput {
  UserName: String
  AccessKeyId: String!
  Status: String!
}

input AwsIamUpdateAccountPasswordPolicyInput {
  MinimumPasswordLength: Int
  RequireSymbols: Boolean
  RequireNumbers: Boolean
  RequireUppercaseCharacters: Boolean
  RequireLowercaseCharacters: Boolean
  AllowUsersToChangePassword: Boolean
  MaxPasswordAge: Int
  PasswordReusePrevention: Int
  HardExpiry: Boolean
}

input AwsIamUpdateAssumeRolePolicyInput {
  RoleName: String!
  PolicyDocument: String!
}

input AwsIamUpdateGroupInput {
  GroupName: String!
  NewPath: String
  NewGroupName: String
}

input AwsIamUpdateLoginProfileInput {
  UserName: String!
  Password: String
  PasswordResetRequired: Boolean
}

input AwsIamUpdateOpenIDConnectProviderThumbprintInput {
  OpenIDConnectProviderArn: String!
  ThumbprintList: [String]!
}

input AwsIamUpdateRoleDescriptionInput {
  RoleName: String!
  Description: String!
}

type AwsIamUpdateRoleDescriptionOutput {
  Role: AwsIamSy
}

input AwsIamUpdateSAMLProviderInput {
  SAMLMetadataDocument: String!
  SAMLProviderArn: String!
}

type AwsIamUpdateSAMLProviderOutput {
  SAMLProviderArn: String
}

input AwsIamUpdateServerCertificateInput {
  ServerCertificateName: String!
  NewPath: String
  NewServerCertificateName: String
}

input AwsIamUpdateServiceSpecificCredentialInput {
  UserName: String
  ServiceSpecificCredentialId: String!
  Status: String!
}

input AwsIamUpdateSigningCertificateInput {
  UserName: String
  CertificateId: String!
  Status: String!
}

input AwsIamUpdateSSHPublicKeyInput {
  UserName: String!
  SSHPublicKeyId: String!
  Status: String!
}

input AwsIamUpdateUserInput {
  UserName: String!
  NewPath: String
  NewUserName: String
}

input AwsIamUploadServerCertificateInput {
  Path: String
  ServerCertificateName: String!
  CertificateBody: String!
  PrivateKey: String!
  CertificateChain: String
}

type AwsIamUploadServerCertificateOutput {
  ServerCertificateMetadata: AwsIamS5b
}

input AwsIamUploadSigningCertificateInput {
  UserName: String
  CertificateBody: String!
}

type AwsIamUploadSigningCertificateOutput {
  Certificate: AwsIamS7p!
}

input AwsIamUploadSSHPublicKeyInput {
  UserName: String!
  SSHPublicKeyBody: String!
}

type AwsIamUploadSSHPublicKeyOutput {
  SSHPublicKey: AwsIamS55
}

# AWS Import/Export (2010-06-01)
type AwsImportexport {
  # importexport.CancelJob
  CancelJob(input: AwsImportexportCancelJobInput!): AwsImportexportCancelJobOutput

  # importexport.CreateJob
  CreateJob(input: AwsImportexportCreateJobInput!): AwsImportexportCreateJobOutput

  # importexport.GetShippingLabel
  GetShippingLabel(input: AwsImportexportGetShippingLabelInput!): AwsImportexportGetShippingLabelOutput

  # importexport.GetStatus
  GetStatus(input: AwsImportexportGetStatusInput!): AwsImportexportGetStatusOutput

  # importexport.ListJobs
  ListJobs(input: AwsImportexportListJobsInput): AwsImportexportListJobsOutput

  # importexport.UpdateJob
  UpdateJob(input: AwsImportexportUpdateJobInput!): AwsImportexportUpdateJobOutput
}

input AwsImportexportCancelJobInput {
  JobId: String!
  APIVersion: String
}

type AwsImportexportCancelJobOutput {
  Success: Boolean
}

input AwsImportexportCreateJobInput {
  JobType: String!
  Manifest: String!
  ManifestAddendum: String
  ValidateOnly: Boolean!
  APIVersion: String
}

type AwsImportexportCreateJobOutput {
  JobId: String
  JobType: String
  Signature: String
  SignatureFileContents: String
  WarningMessage: String
  ArtifactList: [AwsImportexportSf]
}

input AwsImportexportGetShippingLabelInput {
  jobIds: [String]!
  name: String
  company: String
  phoneNumber: String
  country: String
  stateOrProvince: String
  city: String
  postalCode: String
  street1: String
  street2: String
  street3: String
  APIVersion: String
}

type AwsImportexportGetShippingLabelOutput {
  ShippingLabelURL: String
  Warning: String
}

input AwsImportexportGetStatusInput {
  JobId: String!
  APIVersion: String
}

type AwsImportexportGetStatusOutput {
  JobId: String
  JobType: String
  LocationCode: String
  LocationMessage: String
  ProgressCode: String
  ProgressMessage: String
  Carrier: String
  TrackingNumber: String
  LogBucket: String
  LogKey: String
  ErrorCount: Int
  Signature: String
  SignatureFileContents: String
  CurrentManifest: String
  CreationDate: Date
  ArtifactList: [AwsImportexportSf]
}

input AwsImportexportListJobsInput {
  MaxJobs: Int
  Marker: String
  APIVersion: String
}

type AwsImportexportListJobsOutput {
  Jobs: [AwsImportexportListJobsOutputJobs]
  IsTruncated: Boolean
}

type AwsImportexportListJobsOutputJobs {
  JobId: String
  CreationDate: Date
  IsCanceled: Boolean
  JobType: String
}

type AwsImportexportSf {
  Description: String
  URL: String
}

input AwsImportexportUpdateJobInput {
  JobId: String!
  Manifest: String!
  JobType: String!
  ValidateOnly: Boolean!
  APIVersion: String
}

type AwsImportexportUpdateJobOutput {
  Success: Boolean
  WarningMessage: String
  ArtifactList: [AwsImportexportSf]
}

# Amazon Inspector (2016-02-16)
type AwsInspector {
  # inspector.AddAttributesToFindings
  AddAttributesToFindings(input: AwsInspectorAddAttributesToFindingsInput!): AwsInspectorAddAttributesToFindingsOutput

  # inspector.CreateAssessmentTarget
  CreateAssessmentTarget(input: AwsInspectorCreateAssessmentTargetInput!): AwsInspectorCreateAssessmentTargetOutput

  # inspector.CreateAssessmentTemplate
  CreateAssessmentTemplate(input: AwsInspectorCreateAssessmentTemplateInput!): AwsInspectorCreateAssessmentTemplateOutput

  # inspector.CreateResourceGroup
  CreateResourceGroup(input: AwsInspectorCreateResourceGroupInput!): AwsInspectorCreateResourceGroupOutput

  # inspector.DeleteAssessmentRun
  DeleteAssessmentRun(input: AwsInspectorDeleteAssessmentRunInput!): JSON

  # inspector.DeleteAssessmentTarget
  DeleteAssessmentTarget(input: AwsInspectorDeleteAssessmentTargetInput!): JSON

  # inspector.DeleteAssessmentTemplate
  DeleteAssessmentTemplate(input: AwsInspectorDeleteAssessmentTemplateInput!): JSON

  # inspector.DescribeAssessmentRuns
  DescribeAssessmentRuns(input: AwsInspectorDescribeAssessmentRunsInput!): AwsInspectorDescribeAssessmentRunsOutput

  # inspector.DescribeAssessmentTargets
  DescribeAssessmentTargets(input: AwsInspectorDescribeAssessmentTargetsInput!): AwsInspectorDescribeAssessmentTargetsOutput

  # inspector.DescribeAssessmentTemplates
  DescribeAssessmentTemplates(input: AwsInspectorDescribeAssessmentTemplatesInput!): AwsInspectorDescribeAssessmentTemplatesOutput

  # inspector.DescribeCrossAccountAccessRole
  DescribeCrossAccountAccessRole: AwsInspectorDescribeCrossAccountAccessRoleOutput

  # inspector.DescribeFindings
  DescribeFindings(input: AwsInspectorDescribeFindingsInput!): AwsInspectorDescribeFindingsOutput

  # inspector.DescribeResourceGroups
  DescribeResourceGroups(input: AwsInspectorDescribeResourceGroupsInput!): AwsInspectorDescribeResourceGroupsOutput

  # inspector.DescribeRulesPackages
  DescribeRulesPackages(input: AwsInspectorDescribeRulesPackagesInput!): AwsInspectorDescribeRulesPackagesOutput

  # inspector.GetAssessmentReport
  GetAssessmentReport(input: AwsInspectorGetAssessmentReportInput!): AwsInspectorGetAssessmentReportOutput

  # inspector.GetTelemetryMetadata
  GetTelemetryMetadata(input: AwsInspectorGetTelemetryMetadataInput!): AwsInspectorGetTelemetryMetadataOutput

  # inspector.ListAssessmentRunAgents
  ListAssessmentRunAgents(input: AwsInspectorListAssessmentRunAgentsInput!): AwsInspectorListAssessmentRunAgentsOutput

  # inspector.ListAssessmentRuns
  ListAssessmentRuns(input: AwsInspectorListAssessmentRunsInput): AwsInspectorListAssessmentRunsOutput

  # inspector.ListAssessmentTargets
  ListAssessmentTargets(input: AwsInspectorListAssessmentTargetsInput): AwsInspectorListAssessmentTargetsOutput

  # inspector.ListAssessmentTemplates
  ListAssessmentTemplates(input: AwsInspectorListAssessmentTemplatesInput): AwsInspectorListAssessmentTemplatesOutput

  # inspector.ListEventSubscriptions
  ListEventSubscriptions(input: AwsInspectorListEventSubscriptionsInput): AwsInspectorListEventSubscriptionsOutput

  # inspector.ListFindings
  ListFindings(input: AwsInspectorListFindingsInput): AwsInspectorListFindingsOutput

  # inspector.ListRulesPackages
  ListRulesPackages(input: AwsInspectorListRulesPackagesInput): AwsInspectorListRulesPackagesOutput

  # inspector.ListTagsForResource
  ListTagsForResource(input: AwsInspectorListTagsForResourceInput!): AwsInspectorListTagsForResourceOutput

  # inspector.PreviewAgents
  PreviewAgents(input: AwsInspectorPreviewAgentsInput!): AwsInspectorPreviewAgentsOutput

  # inspector.RegisterCrossAccountAccessRole
  RegisterCrossAccountAccessRole(input: AwsInspectorRegisterCrossAccountAccessRoleInput!): JSON

  # inspector.RemoveAttributesFromFindings
  RemoveAttributesFromFindings(input: AwsInspectorRemoveAttributesFromFindingsInput!): AwsInspectorRemoveAttributesFromFindingsOutput

  # inspector.SetTagsForResource
  SetTagsForResource(input: AwsInspectorSetTagsForResourceInput!): JSON

  # inspector.StartAssessmentRun
  StartAssessmentRun(input: AwsInspectorStartAssessmentRunInput!): AwsInspectorStartAssessmentRunOutput

  # inspector.StopAssessmentRun
  StopAssessmentRun(input: AwsInspectorStopAssessmentRunInput!): JSON

  # inspector.SubscribeToEvent
  SubscribeToEvent(input: AwsInspectorSubscribeToEventInput!): JSON

  # inspector.UnsubscribeFromEvent
  UnsubscribeFromEvent(input: AwsInspectorUnsubscribeFromEventInput!): JSON

  # inspector.UpdateAssessmentTarget
  UpdateAssessmentTarget(input: AwsInspectorUpdateAssessmentTargetInput!): JSON
}

input AwsInspectorAddAttributesToFindingsInput {
  findingArns: [String]!
  attributes: [AwsInspectorS5Input]!
}

type AwsInspectorAddAttributesToFindingsOutput {
  failedItems: JSON!
}

input AwsInspectorCreateAssessmentTargetInput {
  assessmentTargetName: String!
  resourceGroupArn: String!
}

type AwsInspectorCreateAssessmentTargetOutput {
  assessmentTargetArn: String!
}

input AwsInspectorCreateAssessmentTemplateInput {
  assessmentTargetArn: String!
  assessmentTemplateName: String!
  durationInSeconds: Int!
  rulesPackageArns: [String]!
  userAttributesForFindings: [AwsInspectorS5Input]
}

type AwsInspectorCreateAssessmentTemplateOutput {
  assessmentTemplateArn: String!
}

input AwsInspectorCreateResourceGroupInput {
  resourceGroupTags: [AwsInspectorSmInput]!
}

type AwsInspectorCreateResourceGroupOutput {
  resourceGroupArn: String!
}

input AwsInspectorDeleteAssessmentRunInput {
  assessmentRunArn: String!
}

input AwsInspectorDeleteAssessmentTargetInput {
  assessmentTargetArn: String!
}

input AwsInspectorDeleteAssessmentTemplateInput {
  assessmentTemplateArn: String!
}

input AwsInspectorDescribeAssessmentRunsInput {
  assessmentRunArns: [String]!
}

type AwsInspectorDescribeAssessmentRunsOutput {
  assessmentRuns: [AwsInspectorDescribeAssessmentRunsOutputAssessmentRuns]!
  failedItems: JSON!
}

type AwsInspectorDescribeAssessmentRunsOutputAssessmentRuns {
  arn: String!
  name: String!
  assessmentTemplateArn: String!
  state: String!
  durationInSeconds: Int!
  rulesPackageArns: [String]!
  userAttributesForFindings: [AwsInspectorS5]!
  createdAt: Date!
  startedAt: Date
  completedAt: Date
  stateChangedAt: Date!
  dataCollected: Boolean!
  stateChanges: [AwsInspectorDescribeAssessmentRunsOutputAssessmentRunsStateChanges]!
  notifications: [AwsInspectorDescribeAssessmentRunsOutputAssessmentRunsNotifications]!
  findingCounts: JSON!
}

type AwsInspectorDescribeAssessmentRunsOutputAssessmentRunsNotifications {
  date: Date!
  event: String!
  message: String
  error: Boolean!
  snsTopicArn: String
  snsPublishStatusCode: String
}

type AwsInspectorDescribeAssessmentRunsOutputAssessmentRunsStateChanges {
  stateChangedAt: Date!
  state: String!
}

input AwsInspectorDescribeAssessmentTargetsInput {
  assessmentTargetArns: [String]!
}

type AwsInspectorDescribeAssessmentTargetsOutput {
  assessmentTargets: [AwsInspectorDescribeAssessmentTargetsOutputAssessmentTargets]!
  failedItems: JSON!
}

type AwsInspectorDescribeAssessmentTargetsOutputAssessmentTargets {
  arn: String!
  name: String!
  resourceGroupArn: String!
  createdAt: Date!
  updatedAt: Date!
}

input AwsInspectorDescribeAssessmentTemplatesInput {
  assessmentTemplateArns: [String]!
}

type AwsInspectorDescribeAssessmentTemplatesOutput {
  assessmentTemplates: [AwsInspectorDescribeAssessmentTemplatesOutputAssessmentTemplates]!
  failedItems: JSON!
}

type AwsInspectorDescribeAssessmentTemplatesOutputAssessmentTemplates {
  arn: String!
  name: String!
  assessmentTargetArn: String!
  durationInSeconds: Int!
  rulesPackageArns: [String]!
  userAttributesForFindings: [AwsInspectorS5]!
  createdAt: Date!
}

type AwsInspectorDescribeCrossAccountAccessRoleOutput {
  roleArn: String!
  valid: Boolean!
  registeredAt: Date!
}

input AwsInspectorDescribeFindingsInput {
  findingArns: [String]!
  locale: String
}

type AwsInspectorDescribeFindingsOutput {
  findings: [AwsInspectorDescribeFindingsOutputFindings]!
  failedItems: JSON!
}

type AwsInspectorDescribeFindingsOutputFindings {
  arn: String!
  schemaVersion: Int
  service: String
  serviceAttributes: AwsInspectorDescribeFindingsOutputFindingsServiceAttributes
  assetType: String
  assetAttributes: AwsInspectorDescribeFindingsOutputFindingsAssetAttributes
  id: String
  title: String
  description: String
  recommendation: String
  severity: String
  numericSeverity: JSON
  confidence: Int
  indicatorOfCompromise: Boolean
  attributes: [AwsInspectorS5]!
  userAttributes: [AwsInspectorS5]!
  createdAt: Date!
  updatedAt: Date!
}

type AwsInspectorDescribeFindingsOutputFindingsAssetAttributes {
  schemaVersion: Int!
  agentId: String
  autoScalingGroup: String
  amiId: String
  hostname: String
  ipv4Addresses: [String]
}

type AwsInspectorDescribeFindingsOutputFindingsServiceAttributes {
  schemaVersion: Int!
  assessmentRunArn: String
  rulesPackageArn: String
}

input AwsInspectorDescribeResourceGroupsInput {
  resourceGroupArns: [String]!
}

type AwsInspectorDescribeResourceGroupsOutput {
  resourceGroups: [AwsInspectorDescribeResourceGroupsOutputResourceGroups]!
  failedItems: JSON!
}

type AwsInspectorDescribeResourceGroupsOutputResourceGroups {
  arn: String!
  tags: [AwsInspectorSm]!
  createdAt: Date!
}

input AwsInspectorDescribeRulesPackagesInput {
  rulesPackageArns: [String]!
  locale: String
}

type AwsInspectorDescribeRulesPackagesOutput {
  rulesPackages: [AwsInspectorDescribeRulesPackagesOutputRulesPackages]!
  failedItems: JSON!
}

type AwsInspectorDescribeRulesPackagesOutputRulesPackages {
  arn: String!
  name: String!
  version: String!
  provider: String!
  description: String
}

input AwsInspectorGetAssessmentReportInput {
  assessmentRunArn: String!
  reportFileFormat: String!
  reportType: String!
}

type AwsInspectorGetAssessmentReportOutput {
  status: String!
  url: String
}

input AwsInspectorGetTelemetryMetadataInput {
  assessmentRunArn: String!
}

type AwsInspectorGetTelemetryMetadataOutput {
  telemetryMetadata: [AwsInspectorS2q]!
}

input AwsInspectorListAssessmentRunAgentsFilterInput {
  agentHealths: [String]!
  agentHealthCodes: [String]!
}

input AwsInspectorListAssessmentRunAgentsInput {
  assessmentRunArn: String!
  filter: AwsInspectorListAssessmentRunAgentsFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListAssessmentRunAgentsOutput {
  assessmentRunAgents: [AwsInspectorListAssessmentRunAgentsOutputAssessmentRunAgents]!
  nextToken: String
}

type AwsInspectorListAssessmentRunAgentsOutputAssessmentRunAgents {
  agentId: String!
  assessmentRunArn: String!
  agentHealth: String!
  agentHealthCode: String!
  agentHealthDetails: String
  autoScalingGroup: String
  telemetryMetadata: [AwsInspectorS2q]!
}

input AwsInspectorListAssessmentRunsFilterInput {
  namePattern: String
  states: [String]
  durationRange: AwsInspectorS3aInput
  rulesPackageArns: [String]
  startTimeRange: AwsInspectorS3cInput
  completionTimeRange: AwsInspectorS3cInput
  stateChangeTimeRange: AwsInspectorS3cInput
}

input AwsInspectorListAssessmentRunsInput {
  assessmentTemplateArns: [String]
  filter: AwsInspectorListAssessmentRunsFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListAssessmentRunsOutput {
  assessmentRunArns: [String]!
  nextToken: String
}

input AwsInspectorListAssessmentTargetsFilterInput {
  assessmentTargetNamePattern: String
}

input AwsInspectorListAssessmentTargetsInput {
  filter: AwsInspectorListAssessmentTargetsFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListAssessmentTargetsOutput {
  assessmentTargetArns: [String]!
  nextToken: String
}

input AwsInspectorListAssessmentTemplatesFilterInput {
  namePattern: String
  durationRange: AwsInspectorS3aInput
  rulesPackageArns: [String]
}

input AwsInspectorListAssessmentTemplatesInput {
  assessmentTargetArns: [String]
  filter: AwsInspectorListAssessmentTemplatesFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListAssessmentTemplatesOutput {
  assessmentTemplateArns: [String]!
  nextToken: String
}

input AwsInspectorListEventSubscriptionsInput {
  resourceArn: String
  nextToken: String
  maxResults: Int
}

type AwsInspectorListEventSubscriptionsOutput {
  subscriptions: [AwsInspectorListEventSubscriptionsOutputSubscriptions]!
  nextToken: String
}

type AwsInspectorListEventSubscriptionsOutputSubscriptions {
  resourceArn: String!
  topicArn: String!
  eventSubscriptions: [AwsInspectorListEventSubscriptionsOutputSubscriptionsEventSubscriptions]!
}

type AwsInspectorListEventSubscriptionsOutputSubscriptionsEventSubscriptions {
  event: String!
  subscribedAt: Date!
}

input AwsInspectorListFindingsFilterInput {
  agentIds: [String]
  autoScalingGroups: [String]
  ruleNames: [String]
  severities: [String]
  rulesPackageArns: [String]
  attributes: [AwsInspectorS5Input]
  userAttributes: [AwsInspectorS5Input]
  creationTimeRange: AwsInspectorS3cInput
}

input AwsInspectorListFindingsInput {
  assessmentRunArns: [String]
  filter: AwsInspectorListFindingsFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListFindingsOutput {
  findingArns: [String]!
  nextToken: String
}

input AwsInspectorListRulesPackagesInput {
  nextToken: String
  maxResults: Int
}

type AwsInspectorListRulesPackagesOutput {
  rulesPackageArns: [String]!
  nextToken: String
}

input AwsInspectorListTagsForResourceInput {
  resourceArn: String!
}

type AwsInspectorListTagsForResourceOutput {
  tags: [AwsInspectorS44]!
}

input AwsInspectorPreviewAgentsInput {
  previewAgentsArn: String!
  nextToken: String
  maxResults: Int
}

type AwsInspectorPreviewAgentsOutput {
  agentPreviews: [AwsInspectorPreviewAgentsOutputAgentPreviews]!
  nextToken: String
}

type AwsInspectorPreviewAgentsOutputAgentPreviews {
  agentId: String!
  autoScalingGroup: String
}

input AwsInspectorRegisterCrossAccountAccessRoleInput {
  roleArn: String!
}

input AwsInspectorRemoveAttributesFromFindingsInput {
  findingArns: [String]!
  attributeKeys: [String]!
}

type AwsInspectorRemoveAttributesFromFindingsOutput {
  failedItems: JSON!
}

type AwsInspectorS2q {
  messageType: String!
  count: JSON!
  dataSize: JSON
}

input AwsInspectorS3aInput {
  minSeconds: Int
  maxSeconds: Int
}

input AwsInspectorS3cInput {
  beginDate: Date
  endDate: Date
}

type AwsInspectorS44 {
  key: String!
  value: String
}

input AwsInspectorS44Input {
  key: String!
  value: String
}

type AwsInspectorS5 {
  key: String!
  value: String
}

input AwsInspectorS5Input {
  key: String!
  value: String
}

input AwsInspectorSetTagsForResourceInput {
  resourceArn: String!
  tags: [AwsInspectorS44Input]
}

type AwsInspectorSm {
  key: String!
  value: String
}

input AwsInspectorSmInput {
  key: String!
  value: String
}

input AwsInspectorStartAssessmentRunInput {
  assessmentTemplateArn: String!
  assessmentRunName: String
}

type AwsInspectorStartAssessmentRunOutput {
  assessmentRunArn: String!
}

input AwsInspectorStopAssessmentRunInput {
  assessmentRunArn: String!
  stopAction: String
}

input AwsInspectorSubscribeToEventInput {
  resourceArn: String!
  event: String!
  topicArn: String!
}

input AwsInspectorUnsubscribeFromEventInput {
  resourceArn: String!
  event: String!
  topicArn: String!
}

input AwsInspectorUpdateAssessmentTargetInput {
  assessmentTargetArn: String!
  assessmentTargetName: String!
  resourceGroupArn: String!
}

# AWS IoT (2015-05-28)
type AwsIot {
  # iot.AcceptCertificateTransfer
  AcceptCertificateTransfer(input: AwsIotAcceptCertificateTransferInput!): JSON

  # iot.AddThingToThingGroup
  AddThingToThingGroup(input: AwsIotAddThingToThingGroupInput): JSON

  # iot.AssociateTargetsWithJob
  AssociateTargetsWithJob(input: AwsIotAssociateTargetsWithJobInput!): AwsIotAssociateTargetsWithJobOutput

  # iot.AttachPolicy
  AttachPolicy(input: AwsIotAttachPolicyInput!): JSON

  # iot.AttachPrincipalPolicy
  AttachPrincipalPolicy(input: AwsIotAttachPrincipalPolicyInput!): JSON

  # iot.AttachThingPrincipal
  AttachThingPrincipal(input: AwsIotAttachThingPrincipalInput!): JSON

  # iot.CancelCertificateTransfer
  CancelCertificateTransfer(input: AwsIotCancelCertificateTransferInput!): JSON

  # iot.CancelJob
  CancelJob(input: AwsIotCancelJobInput!): AwsIotCancelJobOutput

  # iot.ClearDefaultAuthorizer
  ClearDefaultAuthorizer(input: JSON): JSON

  # iot.CreateAuthorizer
  CreateAuthorizer(input: AwsIotCreateAuthorizerInput!): AwsIotCreateAuthorizerOutput

  # iot.CreateCertificateFromCsr
  CreateCertificateFromCsr(input: AwsIotCreateCertificateFromCsrInput!): AwsIotCreateCertificateFromCsrOutput

  # iot.CreateJob
  CreateJob(input: AwsIotCreateJobInput!): AwsIotCreateJobOutput

  # iot.CreateKeysAndCertificate
  CreateKeysAndCertificate(input: AwsIotCreateKeysAndCertificateInput): AwsIotCreateKeysAndCertificateOutput

  # iot.CreatePolicy
  CreatePolicy(input: AwsIotCreatePolicyInput!): AwsIotCreatePolicyOutput

  # iot.CreatePolicyVersion
  CreatePolicyVersion(input: AwsIotCreatePolicyVersionInput!): AwsIotCreatePolicyVersionOutput

  # iot.CreateRoleAlias
  CreateRoleAlias(input: AwsIotCreateRoleAliasInput!): AwsIotCreateRoleAliasOutput

  # iot.CreateThing
  CreateThing(input: AwsIotCreateThingInput!): AwsIotCreateThingOutput

  # iot.CreateThingGroup
  CreateThingGroup(input: AwsIotCreateThingGroupInput!): AwsIotCreateThingGroupOutput

  # iot.CreateThingType
  CreateThingType(input: AwsIotCreateThingTypeInput!): AwsIotCreateThingTypeOutput

  # iot.CreateTopicRule
  CreateTopicRule(input: AwsIotCreateTopicRuleInput!): JSON

  # iot.DeleteAuthorizer
  DeleteAuthorizer(input: AwsIotDeleteAuthorizerInput!): JSON

  # iot.DeleteCACertificate
  DeleteCACertificate(input: AwsIotDeleteCACertificateInput!): JSON

  # iot.DeleteCertificate
  DeleteCertificate(input: AwsIotDeleteCertificateInput!): JSON

  # iot.DeletePolicy
  DeletePolicy(input: AwsIotDeletePolicyInput!): JSON

  # iot.DeletePolicyVersion
  DeletePolicyVersion(input: AwsIotDeletePolicyVersionInput!): JSON

  # iot.DeleteRegistrationCode
  DeleteRegistrationCode(input: JSON): JSON

  # iot.DeleteRoleAlias
  DeleteRoleAlias(input: AwsIotDeleteRoleAliasInput!): JSON

  # iot.DeleteThing
  DeleteThing(input: AwsIotDeleteThingInput!): JSON

  # iot.DeleteThingGroup
  DeleteThingGroup(input: AwsIotDeleteThingGroupInput!): JSON

  # iot.DeleteThingType
  DeleteThingType(input: AwsIotDeleteThingTypeInput!): JSON

  # iot.DeleteTopicRule
  DeleteTopicRule(input: AwsIotDeleteTopicRuleInput!): JSON

  # iot.DeleteV2LoggingLevel
  DeleteV2LoggingLevel(input: AwsIotDeleteV2LoggingLevelInput!): JSON

  # iot.DeprecateThingType
  DeprecateThingType(input: AwsIotDeprecateThingTypeInput!): JSON

  # iot.DescribeAuthorizer
  DescribeAuthorizer(input: AwsIotDescribeAuthorizerInput!): AwsIotDescribeAuthorizerOutput

  # iot.DescribeCACertificate
  DescribeCACertificate(input: AwsIotDescribeCACertificateInput!): AwsIotDescribeCACertificateOutput

  # iot.DescribeCertificate
  DescribeCertificate(input: AwsIotDescribeCertificateInput!): AwsIotDescribeCertificateOutput

  # iot.DescribeDefaultAuthorizer
  DescribeDefaultAuthorizer(input: JSON): AwsIotDescribeDefaultAuthorizerOutput

  # iot.DescribeEndpoint
  DescribeEndpoint(input: AwsIotDescribeEndpointInput): AwsIotDescribeEndpointOutput

  # iot.DescribeEventConfigurations
  DescribeEventConfigurations(input: JSON): AwsIotDescribeEventConfigurationsOutput

  # iot.DescribeIndex
  DescribeIndex(input: AwsIotDescribeIndexInput!): AwsIotDescribeIndexOutput

  # iot.DescribeJob
  DescribeJob(input: AwsIotDescribeJobInput!): AwsIotDescribeJobOutput

  # iot.DescribeJobExecution
  DescribeJobExecution(input: AwsIotDescribeJobExecutionInput!): AwsIotDescribeJobExecutionOutput

  # iot.DescribeRoleAlias
  DescribeRoleAlias(input: AwsIotDescribeRoleAliasInput!): AwsIotDescribeRoleAliasOutput

  # iot.DescribeThing
  DescribeThing(input: AwsIotDescribeThingInput!): AwsIotDescribeThingOutput

  # iot.DescribeThingGroup
  DescribeThingGroup(input: AwsIotDescribeThingGroupInput!): AwsIotDescribeThingGroupOutput

  # iot.DescribeThingRegistrationTask
  DescribeThingRegistrationTask(input: AwsIotDescribeThingRegistrationTaskInput!): AwsIotDescribeThingRegistrationTaskOutput

  # iot.DescribeThingType
  DescribeThingType(input: AwsIotDescribeThingTypeInput!): AwsIotDescribeThingTypeOutput

  # iot.DetachPolicy
  DetachPolicy(input: AwsIotDetachPolicyInput!): JSON

  # iot.DetachPrincipalPolicy
  DetachPrincipalPolicy(input: AwsIotDetachPrincipalPolicyInput!): JSON

  # iot.DetachThingPrincipal
  DetachThingPrincipal(input: AwsIotDetachThingPrincipalInput!): JSON

  # iot.DisableTopicRule
  DisableTopicRule(input: AwsIotDisableTopicRuleInput!): JSON

  # iot.EnableTopicRule
  EnableTopicRule(input: AwsIotEnableTopicRuleInput!): JSON

  # iot.GetEffectivePolicies
  GetEffectivePolicies(input: AwsIotGetEffectivePoliciesInput): AwsIotGetEffectivePoliciesOutput

  # iot.GetIndexingConfiguration
  GetIndexingConfiguration(input: JSON): AwsIotGetIndexingConfigurationOutput

  # iot.GetJobDocument
  GetJobDocument(input: AwsIotGetJobDocumentInput!): AwsIotGetJobDocumentOutput

  # iot.GetLoggingOptions
  GetLoggingOptions(input: JSON): AwsIotGetLoggingOptionsOutput

  # iot.GetPolicy
  GetPolicy(input: AwsIotGetPolicyInput!): AwsIotGetPolicyOutput

  # iot.GetPolicyVersion
  GetPolicyVersion(input: AwsIotGetPolicyVersionInput!): AwsIotGetPolicyVersionOutput

  # iot.GetRegistrationCode
  GetRegistrationCode(input: JSON): AwsIotGetRegistrationCodeOutput

  # iot.GetTopicRule
  GetTopicRule(input: AwsIotGetTopicRuleInput!): AwsIotGetTopicRuleOutput

  # iot.GetV2LoggingOptions
  GetV2LoggingOptions(input: JSON): AwsIotGetV2LoggingOptionsOutput

  # iot.ListAttachedPolicies
  ListAttachedPolicies(input: AwsIotListAttachedPoliciesInput!): AwsIotListAttachedPoliciesOutput

  # iot.ListAuthorizers
  ListAuthorizers(input: AwsIotListAuthorizersInput): AwsIotListAuthorizersOutput

  # iot.ListCACertificates
  ListCACertificates(input: AwsIotListCACertificatesInput): AwsIotListCACertificatesOutput

  # iot.ListCertificates
  ListCertificates(input: AwsIotListCertificatesInput): AwsIotListCertificatesOutput

  # iot.ListCertificatesByCA
  ListCertificatesByCA(input: AwsIotListCertificatesByCAInput!): AwsIotListCertificatesByCAOutput

  # iot.ListIndices
  ListIndices(input: AwsIotListIndicesInput): AwsIotListIndicesOutput

  # iot.ListJobExecutionsForJob
  ListJobExecutionsForJob(input: AwsIotListJobExecutionsForJobInput!): AwsIotListJobExecutionsForJobOutput

  # iot.ListJobExecutionsForThing
  ListJobExecutionsForThing(input: AwsIotListJobExecutionsForThingInput!): AwsIotListJobExecutionsForThingOutput

  # iot.ListJobs
  ListJobs(input: AwsIotListJobsInput): AwsIotListJobsOutput

  # iot.ListOutgoingCertificates
  ListOutgoingCertificates(input: AwsIotListOutgoingCertificatesInput): AwsIotListOutgoingCertificatesOutput

  # iot.ListPolicies
  ListPolicies(input: AwsIotListPoliciesInput): AwsIotListPoliciesOutput

  # iot.ListPolicyPrincipals
  ListPolicyPrincipals(input: AwsIotListPolicyPrincipalsInput!): AwsIotListPolicyPrincipalsOutput

  # iot.ListPolicyVersions
  ListPolicyVersions(input: AwsIotListPolicyVersionsInput!): AwsIotListPolicyVersionsOutput

  # iot.ListPrincipalPolicies
  ListPrincipalPolicies(input: AwsIotListPrincipalPoliciesInput!): AwsIotListPrincipalPoliciesOutput

  # iot.ListPrincipalThings
  ListPrincipalThings(input: AwsIotListPrincipalThingsInput!): AwsIotListPrincipalThingsOutput

  # iot.ListRoleAliases
  ListRoleAliases(input: AwsIotListRoleAliasesInput): AwsIotListRoleAliasesOutput

  # iot.ListTargetsForPolicy
  ListTargetsForPolicy(input: AwsIotListTargetsForPolicyInput!): AwsIotListTargetsForPolicyOutput

  # iot.ListThingGroups
  ListThingGroups(input: AwsIotListThingGroupsInput): AwsIotListThingGroupsOutput

  # iot.ListThingGroupsForThing
  ListThingGroupsForThing(input: AwsIotListThingGroupsForThingInput!): AwsIotListThingGroupsForThingOutput

  # iot.ListThingPrincipals
  ListThingPrincipals(input: AwsIotListThingPrincipalsInput!): AwsIotListThingPrincipalsOutput

  # iot.ListThingRegistrationTaskReports
  ListThingRegistrationTaskReports(input: AwsIotListThingRegistrationTaskReportsInput!): AwsIotListThingRegistrationTaskReportsOutput

  # iot.ListThingRegistrationTasks
  ListThingRegistrationTasks(input: AwsIotListThingRegistrationTasksInput): AwsIotListThingRegistrationTasksOutput

  # iot.ListThingTypes
  ListThingTypes(input: AwsIotListThingTypesInput): AwsIotListThingTypesOutput

  # iot.ListThings
  ListThings(input: AwsIotListThingsInput): AwsIotListThingsOutput

  # iot.ListThingsInThingGroup
  ListThingsInThingGroup(input: AwsIotListThingsInThingGroupInput!): AwsIotListThingsInThingGroupOutput

  # iot.ListTopicRules
  ListTopicRules(input: AwsIotListTopicRulesInput): AwsIotListTopicRulesOutput

  # iot.ListV2LoggingLevels
  ListV2LoggingLevels(input: AwsIotListV2LoggingLevelsInput): AwsIotListV2LoggingLevelsOutput

  # iot.RegisterCACertificate
  RegisterCACertificate(input: AwsIotRegisterCACertificateInput!): AwsIotRegisterCACertificateOutput

  # iot.RegisterCertificate
  RegisterCertificate(input: AwsIotRegisterCertificateInput!): AwsIotRegisterCertificateOutput

  # iot.RegisterThing
  RegisterThing(input: AwsIotRegisterThingInput!): AwsIotRegisterThingOutput

  # iot.RejectCertificateTransfer
  RejectCertificateTransfer(input: AwsIotRejectCertificateTransferInput!): JSON

  # iot.RemoveThingFromThingGroup
  RemoveThingFromThingGroup(input: AwsIotRemoveThingFromThingGroupInput): JSON

  # iot.ReplaceTopicRule
  ReplaceTopicRule(input: AwsIotReplaceTopicRuleInput!): JSON

  # iot.SearchIndex
  SearchIndex(input: AwsIotSearchIndexInput!): AwsIotSearchIndexOutput

  # iot.SetDefaultAuthorizer
  SetDefaultAuthorizer(input: AwsIotSetDefaultAuthorizerInput!): AwsIotSetDefaultAuthorizerOutput

  # iot.SetDefaultPolicyVersion
  SetDefaultPolicyVersion(input: AwsIotSetDefaultPolicyVersionInput!): JSON

  # iot.SetLoggingOptions
  SetLoggingOptions(input: AwsIotSetLoggingOptionsInput!): JSON

  # iot.SetV2LoggingLevel
  SetV2LoggingLevel(input: AwsIotSetV2LoggingLevelInput!): JSON

  # iot.SetV2LoggingOptions
  SetV2LoggingOptions(input: AwsIotSetV2LoggingOptionsInput): JSON

  # iot.StartThingRegistrationTask
  StartThingRegistrationTask(input: AwsIotStartThingRegistrationTaskInput!): AwsIotStartThingRegistrationTaskOutput

  # iot.StopThingRegistrationTask
  StopThingRegistrationTask(input: AwsIotStopThingRegistrationTaskInput!): JSON

  # iot.TestAuthorization
  TestAuthorization(input: AwsIotTestAuthorizationInput!): AwsIotTestAuthorizationOutput

  # iot.TestInvokeAuthorizer
  TestInvokeAuthorizer(input: AwsIotTestInvokeAuthorizerInput!): AwsIotTestInvokeAuthorizerOutput

  # iot.TransferCertificate
  TransferCertificate(input: AwsIotTransferCertificateInput!): AwsIotTransferCertificateOutput

  # iot.UpdateAuthorizer
  UpdateAuthorizer(input: AwsIotUpdateAuthorizerInput!): AwsIotUpdateAuthorizerOutput

  # iot.UpdateCACertificate
  UpdateCACertificate(input: AwsIotUpdateCACertificateInput!): JSON

  # iot.UpdateCertificate
  UpdateCertificate(input: AwsIotUpdateCertificateInput!): JSON

  # iot.UpdateEventConfigurations
  UpdateEventConfigurations(input: AwsIotUpdateEventConfigurationsInput): JSON

  # iot.UpdateIndexingConfiguration
  UpdateIndexingConfiguration(input: AwsIotUpdateIndexingConfigurationInput): JSON

  # iot.UpdateRoleAlias
  UpdateRoleAlias(input: AwsIotUpdateRoleAliasInput!): AwsIotUpdateRoleAliasOutput

  # iot.UpdateThing
  UpdateThing(input: AwsIotUpdateThingInput!): JSON

  # iot.UpdateThingGroup
  UpdateThingGroup(input: AwsIotUpdateThingGroupInput!): AwsIotUpdateThingGroupOutput

  # iot.UpdateThingGroupsForThing
  UpdateThingGroupsForThing(input: AwsIotUpdateThingGroupsForThingInput): JSON
}

input AwsIotAcceptCertificateTransferInput {
  certificateId: String!
  setAsActive: Boolean
}

input AwsIotAddThingToThingGroupInput {
  thingGroupName: String
  thingGroupArn: String
  thingName: String
  thingArn: String
}

input AwsIotAssociateTargetsWithJobInput {
  targets: [String]!
  jobId: String!
  comment: String
}

type AwsIotAssociateTargetsWithJobOutput {
  jobArn: String
  jobId: String
  description: String
}

input AwsIotAttachPolicyInput {
  policyName: String!
  target: String!
}

input AwsIotAttachPrincipalPolicyInput {
  policyName: String!
  principal: String!
}

input AwsIotAttachThingPrincipalInput {
  thingName: String!
  principal: String!
}

input AwsIotCancelCertificateTransferInput {
  certificateId: String!
}

input AwsIotCancelJobInput {
  jobId: String!
  comment: String
}

type AwsIotCancelJobOutput {
  jobArn: String
  jobId: String
  description: String
}

input AwsIotCreateAuthorizerInput {
  authorizerName: String!
  authorizerFunctionArn: String!
  tokenKeyName: String!
  tokenSigningPublicKeys: JSON!
  status: String
}

type AwsIotCreateAuthorizerOutput {
  authorizerName: String
  authorizerArn: String
}

input AwsIotCreateCertificateFromCsrInput {
  certificateSigningRequest: String!
  setAsActive: Boolean
}

type AwsIotCreateCertificateFromCsrOutput {
  certificateArn: String
  certificateId: String
  certificatePem: String
}

input AwsIotCreateJobInput {
  jobId: String!
  targets: [String]!
  documentSource: String
  document: String
  description: String
  presignedUrlConfig: AwsIotS1cInput
  targetSelection: String
  jobExecutionsRolloutConfig: AwsIotS1gInput
  documentParameters: JSON
}

type AwsIotCreateJobOutput {
  jobArn: String
  jobId: String
  description: String
}

input AwsIotCreateKeysAndCertificateInput {
  setAsActive: Boolean
}

type AwsIotCreateKeysAndCertificateOutput {
  certificateArn: String
  certificateId: String
  certificatePem: String
  keyPair: AwsIotCreateKeysAndCertificateOutputKeyPair
}

type AwsIotCreateKeysAndCertificateOutputKeyPair {
  PublicKey: String
  PrivateKey: String
}

input AwsIotCreatePolicyInput {
  policyName: String!
  policyDocument: String!
}

type AwsIotCreatePolicyOutput {
  policyName: String
  policyArn: String
  policyDocument: String
  policyVersionId: String
}

input AwsIotCreatePolicyVersionInput {
  policyName: String!
  policyDocument: String!
  setAsDefault: Boolean
}

type AwsIotCreatePolicyVersionOutput {
  policyArn: String
  policyDocument: String
  policyVersionId: String
  isDefaultVersion: Boolean
}

input AwsIotCreateRoleAliasInput {
  roleAlias: String!
  roleArn: String!
  credentialDurationSeconds: Int
}

type AwsIotCreateRoleAliasOutput {
  roleAlias: String
  roleAliasArn: String
}

input AwsIotCreateThingGroupInput {
  thingGroupName: String!
  parentGroupName: String
  thingGroupProperties: AwsIotS2fInput
}

type AwsIotCreateThingGroupOutput {
  thingGroupName: String
  thingGroupArn: String
  thingGroupId: String
}

input AwsIotCreateThingInput {
  thingName: String!
  thingTypeName: String
  attributePayload: AwsIotS27Input
}

type AwsIotCreateThingOutput {
  thingName: String
  thingArn: String
  thingId: String
}

input AwsIotCreateThingTypeInput {
  thingTypeName: String!
  thingTypeProperties: AwsIotS2kInput
}

type AwsIotCreateThingTypeOutput {
  thingTypeName: String
  thingTypeArn: String
  thingTypeId: String
}

input AwsIotCreateTopicRuleInput {
  ruleName: String!
  topicRulePayload: AwsIotS2sInput!
}

# AWS IoT Data Plane (2015-05-28)
type AwsIotdata {
  # iotdata.DeleteThingShadow
  DeleteThingShadow(input: AwsIotdataDeleteThingShadowInput!): AwsIotdataDeleteThingShadowOutput

  # iotdata.GetThingShadow
  GetThingShadow(input: AwsIotdataGetThingShadowInput!): AwsIotdataGetThingShadowOutput

  # iotdata.Publish
  Publish(input: AwsIotdataPublishInput!): JSON

  # iotdata.UpdateThingShadow
  UpdateThingShadow(input: AwsIotdataUpdateThingShadowInput!): AwsIotdataUpdateThingShadowOutput
}

input AwsIotdataDeleteThingShadowInput {
  thingName: String!
}

type AwsIotdataDeleteThingShadowOutput {
  payload: JSON!
}

input AwsIotdataGetThingShadowInput {
  thingName: String!
}

type AwsIotdataGetThingShadowOutput {
  payload: JSON
}

input AwsIotdataPublishInput {
  topic: String!
  qos: Int
  payload: JSON
}

input AwsIotdataUpdateThingShadowInput {
  thingName: String!
  payload: JSON!
}

type AwsIotdataUpdateThingShadowOutput {
  payload: JSON
}

input AwsIotDeleteAuthorizerInput {
  authorizerName: String!
}

input AwsIotDeleteCACertificateInput {
  certificateId: String!
}

input AwsIotDeleteCertificateInput {
  certificateId: String!
  forceDelete: Boolean
}

input AwsIotDeletePolicyInput {
  policyName: String!
}

input AwsIotDeletePolicyVersionInput {
  policyName: String!
  policyVersionId: String!
}

input AwsIotDeleteRoleAliasInput {
  roleAlias: String!
}

input AwsIotDeleteThingGroupInput {
  thingGroupName: String!
  expectedVersion: JSON
}

input AwsIotDeleteThingInput {
  thingName: String!
  expectedVersion: JSON
}

input AwsIotDeleteThingTypeInput {
  thingTypeName: String!
}

input AwsIotDeleteTopicRuleInput {
  ruleName: String!
}

input AwsIotDeleteV2LoggingLevelInput {
  targetType: String!
  targetName: String!
}

input AwsIotDeprecateThingTypeInput {
  thingTypeName: String!
  undoDeprecate: Boolean
}

input AwsIotDescribeAuthorizerInput {
  authorizerName: String!
}

type AwsIotDescribeAuthorizerOutput {
  authorizerDescription: AwsIotS54
}

input AwsIotDescribeCACertificateInput {
  certificateId: String!
}

type AwsIotDescribeCACertificateOutput {
  certificateDescription: AwsIotDescribeCACertificateOutputCertificateDescription
  registrationConfig: AwsIotS5c
}

type AwsIotDescribeCACertificateOutputCertificateDescription {
  certificateArn: String
  certificateId: String
  status: String
  certificatePem: String
  ownedBy: String
  creationDate: Date
  autoRegistrationStatus: String
}

input AwsIotDescribeCertificateInput {
  certificateId: String!
}

type AwsIotDescribeCertificateOutput {
  certificateDescription: AwsIotDescribeCertificateOutputCertificateDescription
}

type AwsIotDescribeCertificateOutputCertificateDescription {
  certificateArn: String
  certificateId: String
  caCertificateId: String
  status: String
  certificatePem: String
  ownedBy: String
  previousOwnedBy: String
  creationDate: Date
  lastModifiedDate: Date
  transferData: AwsIotDescribeCertificateOutputCertificateDescriptionTransferData
}

type AwsIotDescribeCertificateOutputCertificateDescriptionTransferData {
  transferMessage: String
  rejectReason: String
  transferDate: Date
  acceptDate: Date
  rejectDate: Date
}

type AwsIotDescribeDefaultAuthorizerOutput {
  authorizerDescription: AwsIotS54
}

input AwsIotDescribeEndpointInput {
  endpointType: String
}

type AwsIotDescribeEndpointOutput {
  endpointAddress: String
}

type AwsIotDescribeEventConfigurationsOutput {
  eventConfigurations: JSON
  creationDate: Date
  lastModifiedDate: Date
}

input AwsIotDescribeIndexInput {
  indexName: String!
}

type AwsIotDescribeIndexOutput {
  indexName: String
  indexStatus: String
  schema: String
}

input AwsIotDescribeJobExecutionInput {
  jobId: String!
  thingName: String!
  executionNumber: JSON
}

type AwsIotDescribeJobExecutionOutput {
  execution: AwsIotDescribeJobExecutionOutputExecution
}

type AwsIotDescribeJobExecutionOutputExecution {
  jobId: String
  status: String
  statusDetails: AwsIotDescribeJobExecutionOutputExecutionStatusDetails
  thingArn: String
  queuedAt: Date
  startedAt: Date
  lastUpdatedAt: Date
  executionNumber: JSON
}

type AwsIotDescribeJobExecutionOutputExecutionStatusDetails {
  detailsMap: JSON
}

input AwsIotDescribeJobInput {
  jobId: String!
}

type AwsIotDescribeJobOutput {
  documentSource: String
  job: AwsIotDescribeJobOutputJob
}

type AwsIotDescribeJobOutputJob {
  jobArn: String
  jobId: String
  targetSelection: String
  status: String
  comment: String
  targets: [String]
  description: String
  presignedUrlConfig: AwsIotS1c
  jobExecutionsRolloutConfig: AwsIotS1g
  createdAt: Date
  lastUpdatedAt: Date
  completedAt: Date
  jobProcessDetails: AwsIotDescribeJobOutputJobJobProcessDetails
  documentParameters: JSON
}

type AwsIotDescribeJobOutputJobJobProcessDetails {
  processingTargets: [String]
  numberOfCanceledThings: Int
  numberOfSucceededThings: Int
  numberOfFailedThings: Int
  numberOfRejectedThings: Int
  numberOfQueuedThings: Int
  numberOfInProgressThings: Int
  numberOfRemovedThings: Int
}

input AwsIotDescribeRoleAliasInput {
  roleAlias: String!
}

type AwsIotDescribeRoleAliasOutput {
  roleAliasDescription: AwsIotDescribeRoleAliasOutputRoleAliasDescription
}

type AwsIotDescribeRoleAliasOutputRoleAliasDescription {
  roleAlias: String
  roleArn: String
  owner: String
  credentialDurationSeconds: Int
  creationDate: Date
  lastModifiedDate: Date
}

input AwsIotDescribeThingGroupInput {
  thingGroupName: String!
}

type AwsIotDescribeThingGroupOutput {
  thingGroupName: String
  thingGroupId: String
  thingGroupArn: String
  version: JSON
  thingGroupProperties: AwsIotS2f
  thingGroupMetadata: AwsIotDescribeThingGroupOutputThingGroupMetadata
}

type AwsIotDescribeThingGroupOutputThingGroupMetadata {
  parentGroupName: String
  rootToParentThingGroups: [AwsIotS70]
  creationDate: Date
}

input AwsIotDescribeThingInput {
  thingName: String!
}

type AwsIotDescribeThingOutput {
  defaultClientId: String
  thingName: String
  thingId: String
  thingArn: String
  thingTypeName: String
  attributes: JSON
  version: JSON
}

input AwsIotDescribeThingRegistrationTaskInput {
  taskId: String!
}

type AwsIotDescribeThingRegistrationTaskOutput {
  taskId: String
  creationDate: Date
  lastModifiedDate: Date
  templateBody: String
  inputFileBucket: String
  inputFileKey: String
  roleArn: String
  status: String
  message: String
  successCount: Int
  failureCount: Int
  percentageProgress: Int
}

input AwsIotDescribeThingTypeInput {
  thingTypeName: String!
}

type AwsIotDescribeThingTypeOutput {
  thingTypeName: String
  thingTypeId: String
  thingTypeArn: String
  thingTypeProperties: AwsIotS2k
  thingTypeMetadata: AwsIotS7d
}

input AwsIotDetachPolicyInput {
  policyName: String!
  target: String!
}

input AwsIotDetachPrincipalPolicyInput {
  policyName: String!
  principal: String!
}

input AwsIotDetachThingPrincipalInput {
  thingName: String!
  principal: String!
}

input AwsIotDisableTopicRuleInput {
  ruleName: String!
}

input AwsIotEnableTopicRuleInput {
  ruleName: String!
}

input AwsIotGetEffectivePoliciesInput {
  principal: String
  cognitoIdentityPoolId: String
  thingName: String
}

type AwsIotGetEffectivePoliciesOutput {
  effectivePolicies: [AwsIotGetEffectivePoliciesOutputEffectivePolicies]
}

type AwsIotGetEffectivePoliciesOutputEffectivePolicies {
  policyName: String
  policyArn: String
  policyDocument: String
}

type AwsIotGetIndexingConfigurationOutput {
  thingIndexingConfiguration: AwsIotS7t
}

input AwsIotGetJobDocumentInput {
  jobId: String!
}

type AwsIotGetJobDocumentOutput {
  document: String
}

type AwsIotGetLoggingOptionsOutput {
  roleArn: String
  logLevel: String
}

input AwsIotGetPolicyInput {
  policyName: String!
}

type AwsIotGetPolicyOutput {
  policyName: String
  policyArn: String
  policyDocument: String
  defaultVersionId: String
}

input AwsIotGetPolicyVersionInput {
  policyName: String!
  policyVersionId: String!
}

type AwsIotGetPolicyVersionOutput {
  policyArn: String
  policyName: String
  policyDocument: String
  policyVersionId: String
  isDefaultVersion: Boolean
}

type AwsIotGetRegistrationCodeOutput {
  registrationCode: String
}

input AwsIotGetTopicRuleInput {
  ruleName: String!
}

type AwsIotGetTopicRuleOutput {
  ruleArn: String
  rule: AwsIotGetTopicRuleOutputRule
}

type AwsIotGetTopicRuleOutputRule {
  ruleName: String
  sql: String
  description: String
  createdAt: Date
  actions: [AwsIotS2v]
  ruleDisabled: Boolean
  awsIotSqlVersion: String
}

type AwsIotGetV2LoggingOptionsOutput {
  roleArn: String
  defaultLogLevel: String
  disableAllLogs: Boolean
}

# AWS IoT Jobs Data Plane (2017-09-29)
type AwsIotjobsdataplane {
  # iotjobsdataplane.DescribeJobExecution
  DescribeJobExecution(input: AwsIotjobsdataplaneDescribeJobExecutionInput!): AwsIotjobsdataplaneDescribeJobExecutionOutput

  # iotjobsdataplane.GetPendingJobExecutions
  GetPendingJobExecutions(input: AwsIotjobsdataplaneGetPendingJobExecutionsInput!): AwsIotjobsdataplaneGetPendingJobExecutionsOutput

  # iotjobsdataplane.StartNextPendingJobExecution
  StartNextPendingJobExecution(input: AwsIotjobsdataplaneStartNextPendingJobExecutionInput!): AwsIotjobsdataplaneStartNextPendingJobExecutionOutput

  # iotjobsdataplane.UpdateJobExecution
  UpdateJobExecution(input: AwsIotjobsdataplaneUpdateJobExecutionInput!): AwsIotjobsdataplaneUpdateJobExecutionOutput
}

input AwsIotjobsdataplaneDescribeJobExecutionInput {
  jobId: String!
  thingName: String!
  includeJobDocument: Boolean
  executionNumber: JSON
}

type AwsIotjobsdataplaneDescribeJobExecutionOutput {
  execution: AwsIotjobsdataplaneS7
}

input AwsIotjobsdataplaneGetPendingJobExecutionsInput {
  thingName: String!
}

type AwsIotjobsdataplaneGetPendingJobExecutionsOutput {
  inProgressJobs: [AwsIotjobsdataplaneSk]
  queuedJobs: [AwsIotjobsdataplaneSk]
}

type AwsIotjobsdataplaneS7 {
  jobId: String
  thingName: String
  status: String
  statusDetails: JSON
  queuedAt: JSON
  startedAt: JSON
  lastUpdatedAt: JSON
  versionNumber: JSON
  executionNumber: JSON
  jobDocument: String
}

type AwsIotjobsdataplaneSk {
  jobId: String
  queuedAt: JSON
  startedAt: JSON
  lastUpdatedAt: JSON
  versionNumber: JSON
  executionNumber: JSON
}

input AwsIotjobsdataplaneStartNextPendingJobExecutionInput {
  thingName: String!
  statusDetails: JSON
}

type AwsIotjobsdataplaneStartNextPendingJobExecutionOutput {
  execution: AwsIotjobsdataplaneS7
}

input AwsIotjobsdataplaneUpdateJobExecutionInput {
  jobId: String!
  thingName: String!
  status: String!
  statusDetails: JSON
  expectedVersion: JSON
  includeJobExecutionState: Boolean
  includeJobDocument: Boolean
  executionNumber: JSON
}

type AwsIotjobsdataplaneUpdateJobExecutionOutput {
  executionState: AwsIotjobsdataplaneUpdateJobExecutionOutputExecutionState
  jobDocument: String
}

type AwsIotjobsdataplaneUpdateJobExecutionOutputExecutionState {
  status: String
  statusDetails: JSON
  versionNumber: JSON
}

input AwsIotListAttachedPoliciesInput {
  target: String!
  recursive: Boolean
  marker: String
  pageSize: Int
}

type AwsIotListAttachedPoliciesOutput {
  policies: [AwsIotS8k]
  nextMarker: String
}

input AwsIotListAuthorizersInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
  status: String
}

type AwsIotListAuthorizersOutput {
  authorizers: [AwsIotListAuthorizersOutputAuthorizers]
  nextMarker: String
}

type AwsIotListAuthorizersOutputAuthorizers {
  authorizerName: String
  authorizerArn: String
}

input AwsIotListCACertificatesInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListCACertificatesOutput {
  certificates: [AwsIotListCACertificatesOutputCertificates]
  nextMarker: String
}

type AwsIotListCACertificatesOutputCertificates {
  certificateArn: String
  certificateId: String
  status: String
  creationDate: Date
}

input AwsIotListCertificatesByCAInput {
  caCertificateId: String!
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListCertificatesByCAOutput {
  certificates: [AwsIotS8x]
  nextMarker: String
}

input AwsIotListCertificatesInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListCertificatesOutput {
  certificates: [AwsIotS8x]
  nextMarker: String
}

input AwsIotListIndicesInput {
  nextToken: String
  maxResults: Int
}

type AwsIotListIndicesOutput {
  indexNames: [String]
  nextToken: String
}

input AwsIotListJobExecutionsForJobInput {
  jobId: String!
  status: String
  maxResults: Int
  nextToken: String
}

type AwsIotListJobExecutionsForJobOutput {
  executionSummaries: [AwsIotListJobExecutionsForJobOutputExecutionSummaries]
  nextToken: String
}

type AwsIotListJobExecutionsForJobOutputExecutionSummaries {
  thingArn: String
  jobExecutionSummary: AwsIotS9b
}

input AwsIotListJobExecutionsForThingInput {
  thingName: String!
  status: String
  maxResults: Int
  nextToken: String
}

type AwsIotListJobExecutionsForThingOutput {
  executionSummaries: [AwsIotListJobExecutionsForThingOutputExecutionSummaries]
  nextToken: String
}

type AwsIotListJobExecutionsForThingOutputExecutionSummaries {
  jobId: String
  jobExecutionSummary: AwsIotS9b
}

input AwsIotListJobsInput {
  status: String
  targetSelection: String
  maxResults: Int
  nextToken: String
  thingGroupName: String
  thingGroupId: String
}

type AwsIotListJobsOutput {
  jobs: [AwsIotListJobsOutputJobs]
  nextToken: String
}

type AwsIotListJobsOutputJobs {
  jobArn: String
  jobId: String
  thingGroupId: String
  targetSelection: String
  status: String
  createdAt: Date
  lastUpdatedAt: Date
  completedAt: Date
}

input AwsIotListOutgoingCertificatesInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListOutgoingCertificatesOutput {
  outgoingCertificates: [AwsIotListOutgoingCertificatesOutputOutgoingCertificates]
  nextMarker: String
}

type AwsIotListOutgoingCertificatesOutputOutgoingCertificates {
  certificateArn: String
  certificateId: String
  transferredTo: String
  transferDate: Date
  transferMessage: String
  creationDate: Date
}

input AwsIotListPoliciesInput {
  marker: String
  pageSize: Int
  ascendingOrder: Boolean
}

type AwsIotListPoliciesOutput {
  policies: [AwsIotS8k]
  nextMarker: String
}

input AwsIotListPolicyPrincipalsInput {
  policyName: String!
  marker: String
  pageSize: Int
  ascendingOrder: Boolean
}

type AwsIotListPolicyPrincipalsOutput {
  principals: [String]
  nextMarker: String
}

input AwsIotListPolicyVersionsInput {
  policyName: String!
}

type AwsIotListPolicyVersionsOutput {
  policyVersions: [AwsIotListPolicyVersionsOutputPolicyVersions]
}

type AwsIotListPolicyVersionsOutputPolicyVersions {
  versionId: String
  isDefaultVersion: Boolean
  createDate: Date
}

input AwsIotListPrincipalPoliciesInput {
  principal: String!
  marker: String
  pageSize: Int
  ascendingOrder: Boolean
}

type AwsIotListPrincipalPoliciesOutput {
  policies: [AwsIotS8k]
  nextMarker: String
}

input AwsIotListPrincipalThingsInput {
  nextToken: String
  maxResults: Int
  principal: String!
}

type AwsIotListPrincipalThingsOutput {
  things: [String]
  nextToken: String
}

input AwsIotListRoleAliasesInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListRoleAliasesOutput {
  roleAliases: [String]
  nextMarker: String
}

input AwsIotListTargetsForPolicyInput {
  policyName: String!
  marker: String
  pageSize: Int
}

type AwsIotListTargetsForPolicyOutput {
  targets: [String]
  nextMarker: String
}

input AwsIotListThingGroupsForThingInput {
  thingName: String!
  nextToken: String
  maxResults: Int
}

type AwsIotListThingGroupsForThingOutput {
  thingGroups: [AwsIotS70]
  nextToken: String
}

input AwsIotListThingGroupsInput {
  nextToken: String
  maxResults: Int
  parentGroup: String
  namePrefixFilter: String
  recursive: Boolean
}

type AwsIotListThingGroupsOutput {
  thingGroups: [AwsIotS70]
  nextToken: String
}

input AwsIotListThingPrincipalsInput {
  thingName: String!
}

type AwsIotListThingPrincipalsOutput {
  principals: [String]
}

input AwsIotListThingRegistrationTaskReportsInput {
  taskId: String!
  reportType: String!
  nextToken: String
  maxResults: Int
}

type AwsIotListThingRegistrationTaskReportsOutput {
  resourceLinks: [String]
  reportType: String
  nextToken: String
}

input AwsIotListThingRegistrationTasksInput {
  nextToken: String
  maxResults: Int
  status: String
}

type AwsIotListThingRegistrationTasksOutput {
  taskIds: [String]
  nextToken: String
}

input AwsIotListThingsInput {
  nextToken: String
  maxResults: Int
  attributeName: String
  attributeValue: String
  thingTypeName: String
}

input AwsIotListThingsInThingGroupInput {
  thingGroupName: String!
  recursive: Boolean
  nextToken: String
  maxResults: Int
}

type AwsIotListThingsInThingGroupOutput {
  things: [String]
  nextToken: String
}

type AwsIotListThingsOutput {
  things: [AwsIotListThingsOutputThings]
  nextToken: String
}

type AwsIotListThingsOutputThings {
  thingName: String
  thingTypeName: String
  thingArn: String
  attributes: JSON
  version: JSON
}

input AwsIotListThingTypesInput {
  nextToken: String
  maxResults: Int
  thingTypeName: String
}

type AwsIotListThingTypesOutput {
  thingTypes: [AwsIotListThingTypesOutputThingTypes]
  nextToken: String
}

type AwsIotListThingTypesOutputThingTypes {
  thingTypeName: String
  thingTypeArn: String
  thingTypeProperties: AwsIotS2k
  thingTypeMetadata: AwsIotS7d
}

input AwsIotListTopicRulesInput {
  topic: String
  maxResults: Int
  nextToken: String
  ruleDisabled: Boolean
}

type AwsIotListTopicRulesOutput {
  rules: [AwsIotListTopicRulesOutputRules]
  nextToken: String
}

type AwsIotListTopicRulesOutputRules {
  ruleArn: String
  ruleName: String
  topicPattern: String
  createdAt: Date
  ruleDisabled: Boolean
}

input AwsIotListV2LoggingLevelsInput {
  targetType: String
  nextToken: String
  maxResults: Int
}

type AwsIotListV2LoggingLevelsOutput {
  logTargetConfigurations: [AwsIotListV2LoggingLevelsOutputLogTargetConfigurations]
  nextToken: String
}

type AwsIotListV2LoggingLevelsOutputLogTargetConfigurations {
  logTarget: AwsIotSba
  logLevel: String
}

input AwsIotRegisterCACertificateInput {
  caCertificate: String!
  verificationCertificate: String!
  setAsActive: Boolean
  allowAutoRegistration: Boolean
  registrationConfig: AwsIotS5cInput
}

type AwsIotRegisterCACertificateOutput {
  certificateArn: String
  certificateId: String
}

input AwsIotRegisterCertificateInput {
  certificatePem: String!
  caCertificatePem: String
  setAsActive: Boolean
  status: String
}

type AwsIotRegisterCertificateOutput {
  certificateArn: String
  certificateId: String
}

input AwsIotRegisterThingInput {
  templateBody: String!
  parameters: JSON
}

type AwsIotRegisterThingOutput {
  certificatePem: String
  resourceArns: JSON
}

input AwsIotRejectCertificateTransferInput {
  certificateId: String!
  rejectReason: String
}

input AwsIotRemoveThingFromThingGroupInput {
  thingGroupName: String
  thingGroupArn: String
  thingName: String
  thingArn: String
}

input AwsIotReplaceTopicRuleInput {
  ruleName: String!
  topicRulePayload: AwsIotS2sInput!
}

type AwsIotS1c {
  roleArn: String
  expiresInSec: JSON
}

input AwsIotS1cInput {
  roleArn: String
  expiresInSec: JSON
}

type AwsIotS1g {
  maximumPerMinute: Int
}

input AwsIotS1gInput {
  maximumPerMinute: Int
}

type AwsIotS27 {
  attributes: JSON
  merge: Boolean
}

input AwsIotS27Input {
  attributes: JSON
  merge: Boolean
}

type AwsIotS2f {
  thingGroupDescription: String
  attributePayload: AwsIotS27
}

input AwsIotS2fInput {
  thingGroupDescription: String
  attributePayload: AwsIotS27Input
}

type AwsIotS2k {
  thingTypeDescription: String
  searchableAttributes: [String]
}

input AwsIotS2kInput {
  thingTypeDescription: String
  searchableAttributes: [String]
}

input AwsIotS2sInput {
  sql: String!
  description: String
  actions: [AwsIotS2vInput]!
  ruleDisabled: Boolean
  awsIotSqlVersion: String
}

type AwsIotS2v {
  dynamoDB: AwsIotS2vDynamoDB
  dynamoDBv2: AwsIotS2vDynamoDBv2
  lambda: AwsIotS2vLambda
  sns: AwsIotS2vSns
  sqs: AwsIotS2vSqs
  kinesis: AwsIotS2vKinesis
  republish: AwsIotS2vRepublish
  s3: AwsIotS2vS3
  firehose: AwsIotS2vFirehose
  cloudwatchMetric: AwsIotS2vCloudwatchMetric
  cloudwatchAlarm: AwsIotS2vCloudwatchAlarm
  elasticsearch: AwsIotS2vElasticsearch
  salesforce: AwsIotS2vSalesforce
}

type AwsIotS2vCloudwatchAlarm {
  roleArn: String!
  alarmName: String!
  stateReason: String!
  stateValue: String!
}

input AwsIotS2vCloudwatchAlarmInput {
  roleArn: String!
  alarmName: String!
  stateReason: String!
  stateValue: String!
}

type AwsIotS2vCloudwatchMetric {
  roleArn: String!
  metricNamespace: String!
  metricName: String!
  metricValue: String!
  metricUnit: String!
  metricTimestamp: String
}

input AwsIotS2vCloudwatchMetricInput {
  roleArn: String!
  metricNamespace: String!
  metricName: String!
  metricValue: String!
  metricUnit: String!
  metricTimestamp: String
}

type AwsIotS2vDynamoDB {
  tableName: String!
  roleArn: String!
  operation: String
  hashKeyField: String!
  hashKeyValue: String!
  hashKeyType: String
  rangeKeyField: String
  rangeKeyValue: String
  rangeKeyType: String
  payloadField: String
}

input AwsIotS2vDynamoDBInput {
  tableName: String!
  roleArn: String!
  operation: String
  hashKeyField: String!
  hashKeyValue: String!
  hashKeyType: String
  rangeKeyField: String
  rangeKeyValue: String
  rangeKeyType: String
  payloadField: String
}

type AwsIotS2vDynamoDBv2 {
  roleArn: String
  putItem: AwsIotS2vDynamoDBv2PutItem
}

input AwsIotS2vDynamoDBv2Input {
  roleArn: String
  putItem: AwsIotS2vDynamoDBv2PutItemInput
}

type AwsIotS2vDynamoDBv2PutItem {
  tableName: String!
}

input AwsIotS2vDynamoDBv2PutItemInput {
  tableName: String!
}

type AwsIotS2vElasticsearch {
  roleArn: String!
  endpoint: String!
  index: String!
  type: String!
  id: String!
}

input AwsIotS2vElasticsearchInput {
  roleArn: String!
  endpoint: String!
  index: String!
  type: String!
  id: String!
}

type AwsIotS2vFirehose {
  roleArn: String!
  deliveryStreamName: String!
  separator: String
}

input AwsIotS2vFirehoseInput {
  roleArn: String!
  deliveryStreamName: String!
  separator: String
}

input AwsIotS2vInput {
  dynamoDB: AwsIotS2vDynamoDBInput
  dynamoDBv2: AwsIotS2vDynamoDBv2Input
  lambda: AwsIotS2vLambdaInput
  sns: AwsIotS2vSnsInput
  sqs: AwsIotS2vSqsInput
  kinesis: AwsIotS2vKinesisInput
  republish: AwsIotS2vRepublishInput
  s3: AwsIotS2vS3Input
  firehose: AwsIotS2vFirehoseInput
  cloudwatchMetric: AwsIotS2vCloudwatchMetricInput
  cloudwatchAlarm: AwsIotS2vCloudwatchAlarmInput
  elasticsearch: AwsIotS2vElasticsearchInput
  salesforce: AwsIotS2vSalesforceInput
}

type AwsIotS2vKinesis {
  roleArn: String!
  streamName: String!
  partitionKey: String
}

input AwsIotS2vKinesisInput {
  roleArn: String!
  streamName: String!
  partitionKey: String
}

type AwsIotS2vLambda {
  functionArn: String!
}

input AwsIotS2vLambdaInput {
  functionArn: String!
}

type AwsIotS2vRepublish {
  roleArn: String!
  topic: String!
}

input AwsIotS2vRepublishInput {
  roleArn: String!
  topic: String!
}

type AwsIotS2vS3 {
  roleArn: String!
  bucketName: String!
  key: String!
  cannedAcl: String
}

input AwsIotS2vS3Input {
  roleArn: String!
  bucketName: String!
  key: String!
  cannedAcl: String
}

type AwsIotS2vSalesforce {
  token: String!
  url: String!
}

input AwsIotS2vSalesforceInput {
  token: String!
  url: String!
}

type AwsIotS2vSns {
  targetArn: String!
  roleArn: String!
  messageFormat: String
}

input AwsIotS2vSnsInput {
  targetArn: String!
  roleArn: String!
  messageFormat: String
}

type AwsIotS2vSqs {
  roleArn: String!
  queueUrl: String!
  useBase64: Boolean
}

input AwsIotS2vSqsInput {
  roleArn: String!
  queueUrl: String!
  useBase64: Boolean
}

type AwsIotS54 {
  authorizerName: String
  authorizerArn: String
  authorizerFunctionArn: String
  tokenKeyName: String
  tokenSigningPublicKeys: JSON
  status: String
  creationDate: Date
  lastModifiedDate: Date
}

type AwsIotS5c {
  templateBody: String
  roleArn: String
}

input AwsIotS5cInput {
  templateBody: String
  roleArn: String
}

type AwsIotS70 {
  groupName: String
  groupArn: String
}

type AwsIotS7d {
  deprecated: Boolean
  deprecationDate: Date
  creationDate: Date
}

type AwsIotS7t {
  thingIndexingMode: String
}

input AwsIotS7tInput {
  thingIndexingMode: String
}

type AwsIotS8k {
  policyName: String
  policyArn: String
}

type AwsIotS8x {
  certificateArn: String
  certificateId: String
  status: String
  creationDate: Date
}

type AwsIotS9b {
  status: String
  queuedAt: Date
  startedAt: Date
  lastUpdatedAt: Date
  executionNumber: JSON
}

type AwsIotSba {
  targetType: String!
  targetName: String
}

input AwsIotSbaInput {
  targetType: String!
  targetName: String
}

type AwsIotSce {
  actionType: String
  resources: [String]
}

input AwsIotSceInput {
  actionType: String
  resources: [String]
}

input AwsIotSearchIndexInput {
  indexName: String
  queryString: String!
  nextToken: String
  maxResults: Int
  queryVersion: String
}

type AwsIotSearchIndexOutput {
  nextToken: String
  things: [AwsIotSearchIndexOutputThings]
}

type AwsIotSearchIndexOutputThings {
  thingName: String
  thingId: String
  thingTypeName: String
  thingGroupNames: [String]
  attributes: JSON
  shadow: String
}

input AwsIotSetDefaultAuthorizerInput {
  authorizerName: String!
}

type AwsIotSetDefaultAuthorizerOutput {
  authorizerName: String
  authorizerArn: String
}

input AwsIotSetDefaultPolicyVersionInput {
  policyName: String!
  policyVersionId: String!
}

input AwsIotSetLoggingOptionsInput {
  loggingOptionsPayload: AwsIotSetLoggingOptionsLoggingOptionsPayloadInput!
}

input AwsIotSetLoggingOptionsLoggingOptionsPayloadInput {
  roleArn: String!
  logLevel: String
}

input AwsIotSetV2LoggingLevelInput {
  logTarget: AwsIotSbaInput!
  logLevel: String!
}

input AwsIotSetV2LoggingOptionsInput {
  roleArn: String
  defaultLogLevel: String
  disableAllLogs: Boolean
}

input AwsIotStartThingRegistrationTaskInput {
  templateBody: String!
  inputFileBucket: String!
  inputFileKey: String!
  roleArn: String!
}

type AwsIotStartThingRegistrationTaskOutput {
  taskId: String
}

input AwsIotStopThingRegistrationTaskInput {
  taskId: String!
}

input AwsIotTestAuthorizationInput {
  principal: String
  cognitoIdentityPoolId: String
  authInfos: [AwsIotSceInput]!
  clientId: String
  policyNamesToAdd: [String]
  policyNamesToSkip: [String]
}

type AwsIotTestAuthorizationOutput {
  authResults: [AwsIotTestAuthorizationOutputAuthResults]
}

type AwsIotTestAuthorizationOutputAuthResults {
  authInfo: AwsIotSce
  allowed: AwsIotTestAuthorizationOutputAuthResultsAllowed
  denied: AwsIotTestAuthorizationOutputAuthResultsDenied
  authDecision: String
  missingContextValues: [String]
}

type AwsIotTestAuthorizationOutputAuthResultsAllowed {
  policies: [AwsIotS8k]
}

type AwsIotTestAuthorizationOutputAuthResultsDenied {
  implicitDeny: AwsIotTestAuthorizationOutputAuthResultsDeniedImplicitDeny
  explicitDeny: AwsIotTestAuthorizationOutputAuthResultsDeniedExplicitDeny
}

type AwsIotTestAuthorizationOutputAuthResultsDeniedExplicitDeny {
  policies: [AwsIotS8k]
}

type AwsIotTestAuthorizationOutputAuthResultsDeniedImplicitDeny {
  policies: [AwsIotS8k]
}

input AwsIotTestInvokeAuthorizerInput {
  authorizerName: String!
  token: String!
  tokenSignature: String!
}

type AwsIotTestInvokeAuthorizerOutput {
  isAuthenticated: Boolean
  principalId: String
  policyDocuments: [String]
  refreshAfterInSeconds: Int
  disconnectAfterInSeconds: Int
}

input AwsIotTransferCertificateInput {
  certificateId: String!
  targetAwsAccount: String!
  transferMessage: String
}

type AwsIotTransferCertificateOutput {
  transferredCertificateArn: String
}

input AwsIotUpdateAuthorizerInput {
  authorizerName: String!
  authorizerFunctionArn: String
  tokenKeyName: String
  tokenSigningPublicKeys: JSON
  status: String
}

type AwsIotUpdateAuthorizerOutput {
  authorizerName: String
  authorizerArn: String
}

input AwsIotUpdateCACertificateInput {
  certificateId: String!
  newStatus: String
  newAutoRegistrationStatus: String
  registrationConfig: AwsIotS5cInput
  removeAutoRegistration: Boolean
}

input AwsIotUpdateCertificateInput {
  certificateId: String!
  newStatus: String!
}

input AwsIotUpdateEventConfigurationsInput {
  eventConfigurations: JSON
}

input AwsIotUpdateIndexingConfigurationInput {
  thingIndexingConfiguration: AwsIotS7tInput
}

input AwsIotUpdateRoleAliasInput {
  roleAlias: String!
  roleArn: String
  credentialDurationSeconds: Int
}

type AwsIotUpdateRoleAliasOutput {
  roleAlias: String
  roleAliasArn: String
}

input AwsIotUpdateThingGroupInput {
  thingGroupName: String!
  thingGroupProperties: AwsIotS2fInput!
  expectedVersion: JSON
}

type AwsIotUpdateThingGroupOutput {
  version: JSON
}

input AwsIotUpdateThingGroupsForThingInput {
  thingName: String
  thingGroupsToAdd: [String]
  thingGroupsToRemove: [String]
}

input AwsIotUpdateThingInput {
  thingName: String!
  thingTypeName: String
  attributePayload: AwsIotS27Input
  expectedVersion: JSON
  removeThingType: Boolean
}

# Amazon Kinesis (2013-12-02)
type AwsKinesis {
  # kinesis.AddTagsToStream
  AddTagsToStream(input: AwsKinesisAddTagsToStreamInput!): JSON

  # kinesis.CreateStream
  CreateStream(input: AwsKinesisCreateStreamInput!): JSON

  # kinesis.DecreaseStreamRetentionPeriod
  DecreaseStreamRetentionPeriod(input: AwsKinesisDecreaseStreamRetentionPeriodInput!): JSON

  # kinesis.DeleteStream
  DeleteStream(input: AwsKinesisDeleteStreamInput!): JSON

  # kinesis.DescribeLimits
  DescribeLimits(input: JSON): AwsKinesisDescribeLimitsOutput

  # kinesis.DescribeStream
  DescribeStream(input: AwsKinesisDescribeStreamInput!): AwsKinesisDescribeStreamOutput

  # kinesis.DescribeStreamSummary
  DescribeStreamSummary(input: AwsKinesisDescribeStreamSummaryInput!): AwsKinesisDescribeStreamSummaryOutput

  # kinesis.DisableEnhancedMonitoring
  DisableEnhancedMonitoring(input: AwsKinesisDisableEnhancedMonitoringInput!): JSON

  # kinesis.EnableEnhancedMonitoring
  EnableEnhancedMonitoring(input: AwsKinesisEnableEnhancedMonitoringInput!): JSON

  # kinesis.GetRecords
  GetRecords(input: AwsKinesisGetRecordsInput!): AwsKinesisGetRecordsOutput

  # kinesis.GetShardIterator
  GetShardIterator(input: AwsKinesisGetShardIteratorInput!): AwsKinesisGetShardIteratorOutput

  # kinesis.IncreaseStreamRetentionPeriod
  IncreaseStreamRetentionPeriod(input: AwsKinesisIncreaseStreamRetentionPeriodInput!): JSON

  # kinesis.ListStreams
  ListStreams(input: AwsKinesisListStreamsInput): AwsKinesisListStreamsOutput

  # kinesis.ListTagsForStream
  ListTagsForStream(input: AwsKinesisListTagsForStreamInput!): AwsKinesisListTagsForStreamOutput

  # kinesis.MergeShards
  MergeShards(input: AwsKinesisMergeShardsInput!): JSON

  # kinesis.PutRecord
  PutRecord(input: AwsKinesisPutRecordInput!): AwsKinesisPutRecordOutput

  # kinesis.PutRecords
  PutRecords(input: AwsKinesisPutRecordsInput!): AwsKinesisPutRecordsOutput

  # kinesis.RemoveTagsFromStream
  RemoveTagsFromStream(input: AwsKinesisRemoveTagsFromStreamInput!): JSON

  # kinesis.SplitShard
  SplitShard(input: AwsKinesisSplitShardInput!): JSON

  # kinesis.StartStreamEncryption
  StartStreamEncryption(input: AwsKinesisStartStreamEncryptionInput!): JSON

  # kinesis.StopStreamEncryption
  StopStreamEncryption(input: AwsKinesisStopStreamEncryptionInput!): JSON

  # kinesis.UpdateShardCount
  UpdateShardCount(input: AwsKinesisUpdateShardCountInput!): AwsKinesisUpdateShardCountOutput
}

input AwsKinesisAddTagsToStreamInput {
  StreamName: String!
  Tags: JSON!
}

# Amazon Kinesis Analytics (2015-08-14)
type AwsKinesisanalytics {
  # kinesisanalytics.AddApplicationCloudWatchLoggingOption
  AddApplicationCloudWatchLoggingOption(input: AwsKinesisanalyticsAddApplicationCloudWatchLoggingOptionInput!): JSON

  # kinesisanalytics.AddApplicationInput
  AddApplicationInput(input: AwsKinesisanalyticsAddApplicationInputInput!): JSON

  # kinesisanalytics.AddApplicationInputProcessingConfiguration
  AddApplicationInputProcessingConfiguration(input: AwsKinesisanalyticsAddApplicationInputProcessingConfigurationInput!): JSON

  # kinesisanalytics.AddApplicationOutput
  AddApplicationOutput(input: AwsKinesisanalyticsAddApplicationOutputInput!): JSON

  # kinesisanalytics.AddApplicationReferenceDataSource
  AddApplicationReferenceDataSource(input: AwsKinesisanalyticsAddApplicationReferenceDataSourceInput!): JSON

  # kinesisanalytics.CreateApplication
  CreateApplication(input: AwsKinesisanalyticsCreateApplicationInput!): AwsKinesisanalyticsCreateApplicationOutput

  # kinesisanalytics.DeleteApplication
  DeleteApplication(input: AwsKinesisanalyticsDeleteApplicationInput!): JSON

  # kinesisanalytics.DeleteApplicationCloudWatchLoggingOption
  DeleteApplicationCloudWatchLoggingOption(input: AwsKinesisanalyticsDeleteApplicationCloudWatchLoggingOptionInput!): JSON

  # kinesisanalytics.DeleteApplicationInputProcessingConfiguration
  DeleteApplicationInputProcessingConfiguration(input: AwsKinesisanalyticsDeleteApplicationInputProcessingConfigurationInput!): JSON

  # kinesisanalytics.DeleteApplicationOutput
  DeleteApplicationOutput(input: AwsKinesisanalyticsDeleteApplicationOutputInput!): JSON

  # kinesisanalytics.DeleteApplicationReferenceDataSource
  DeleteApplicationReferenceDataSource(input: AwsKinesisanalyticsDeleteApplicationReferenceDataSourceInput!): JSON

  # kinesisanalytics.DescribeApplication
  DescribeApplication(input: AwsKinesisanalyticsDescribeApplicationInput!): AwsKinesisanalyticsDescribeApplicationOutput

  # kinesisanalytics.DiscoverInputSchema
  DiscoverInputSchema(input: AwsKinesisanalyticsDiscoverInputSchemaInput): AwsKinesisanalyticsDiscoverInputSchemaOutput

  # kinesisanalytics.ListApplications
  ListApplications(input: AwsKinesisanalyticsListApplicationsInput): AwsKinesisanalyticsListApplicationsOutput

  # kinesisanalytics.StartApplication
  StartApplication(input: AwsKinesisanalyticsStartApplicationInput!): JSON

  # kinesisanalytics.StopApplication
  StopApplication(input: AwsKinesisanalyticsStopApplicationInput!): JSON

  # kinesisanalytics.UpdateApplication
  UpdateApplication(input: AwsKinesisanalyticsUpdateApplicationInput!): JSON
}

input AwsKinesisanalyticsAddApplicationCloudWatchLoggingOptionInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  CloudWatchLoggingOption: AwsKinesisanalyticsS4Input!
}

input AwsKinesisanalyticsAddApplicationInputInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  Input: AwsKinesisanalyticsS9Input!
}

input AwsKinesisanalyticsAddApplicationInputProcessingConfigurationInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  InputId: String!
  InputProcessingConfiguration: AwsKinesisanalyticsSbInput!
}

input AwsKinesisanalyticsAddApplicationOutputInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  Output: AwsKinesisanalyticsS12Input!
}

input AwsKinesisanalyticsAddApplicationReferenceDataSourceInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  ReferenceDataSource: AwsKinesisanalyticsAddApplicationReferenceDataSourceReferenceDataSourceInput!
}

input AwsKinesisanalyticsAddApplicationReferenceDataSourceReferenceDataSourceInput {
  TableName: String!
  S3ReferenceDataSource: AwsKinesisanalyticsAddApplicationReferenceDataSourceReferenceDataSourceS3ReferenceDataSourceInput
  ReferenceSchema: AwsKinesisanalyticsSiInput!
}

input AwsKinesisanalyticsAddApplicationReferenceDataSourceReferenceDataSourceS3ReferenceDataSourceInput {
  BucketARN: String!
  FileKey: String!
  ReferenceRoleARN: String!
}

input AwsKinesisanalyticsCreateApplicationInput {
  ApplicationName: String!
  ApplicationDescription: String
  Inputs: [AwsKinesisanalyticsS9Input]
  Outputs: [AwsKinesisanalyticsS12Input]
  CloudWatchLoggingOptions: [AwsKinesisanalyticsS4Input]
  ApplicationCode: String
}

type AwsKinesisanalyticsCreateApplicationOutput {
  ApplicationSummary: AwsKinesisanalyticsS1l!
}

input AwsKinesisanalyticsDeleteApplicationCloudWatchLoggingOptionInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  CloudWatchLoggingOptionId: String!
}

input AwsKinesisanalyticsDeleteApplicationInput {
  ApplicationName: String!
  CreateTimestamp: Date!
}

input AwsKinesisanalyticsDeleteApplicationInputProcessingConfigurationInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  InputId: String!
}

input AwsKinesisanalyticsDeleteApplicationOutputInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  OutputId: String!
}

input AwsKinesisanalyticsDeleteApplicationReferenceDataSourceInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  ReferenceId: String!
}

input AwsKinesisanalyticsDescribeApplicationInput {
  ApplicationName: String!
}

type AwsKinesisanalyticsDescribeApplicationOutput {
  ApplicationDetail: AwsKinesisanalyticsDescribeApplicationOutputApplicationDetail!
}

type AwsKinesisanalyticsDescribeApplicationOutputApplicationDetail {
  ApplicationName: String!
  ApplicationDescription: String
  ApplicationARN: String!
  ApplicationStatus: String!
  CreateTimestamp: Date
  LastUpdateTimestamp: Date
  InputDescriptions: [AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailInputDescriptions]
  OutputDescriptions: [AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailOutputDescriptions]
  ReferenceDataSourceDescriptions: [AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailReferenceDataSourceDescriptions]
  CloudWatchLoggingOptionDescriptions: [AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailCloudWatchLoggingOptionDescriptions]
  ApplicationCode: String
  ApplicationVersionId: JSON!
}

type AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailCloudWatchLoggingOptionDescriptions {
  CloudWatchLoggingOptionId: String
  LogStreamARN: String!
  RoleARN: String!
}

type AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailInputDescriptions {
  InputId: String
  NamePrefix: String
  InAppStreamNames: [String]
  InputProcessingConfigurationDescription: AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsInputProcessingConfigurationDescription
  KinesisStreamsInputDescription: AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsKinesisStreamsInputDescription
  KinesisFirehoseInputDescription: AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsKinesisFirehoseInputDescription
  InputSchema: AwsKinesisanalyticsSi
  InputParallelism: AwsKinesisanalyticsSg
  InputStartingPositionConfiguration: AwsKinesisanalyticsS28
}

type AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsInputProcessingConfigurationDescription {
  InputLambdaProcessorDescription: AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsInputProcessingConfigurationDescriptionInputLambdaProcessorDescription
}

type AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsInputProcessingConfigurationDescriptionInputLambdaProcessorDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsKinesisFirehoseInputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsKinesisStreamsInputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailOutputDescriptions {
  OutputId: String
  Name: String
  KinesisStreamsOutputDescription: AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsKinesisStreamsOutputDescription
  KinesisFirehoseOutputDescription: AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsKinesisFirehoseOutputDescription
  DestinationSchema: AwsKinesisanalyticsS15
}

type AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsKinesisFirehoseOutputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsKinesisStreamsOutputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailReferenceDataSourceDescriptions {
  ReferenceId: String!
  TableName: String!
  S3ReferenceDataSourceDescription: AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailReferenceDataSourceDescriptionsS3ReferenceDataSourceDescription!
  ReferenceSchema: AwsKinesisanalyticsSi
}

type AwsKinesisanalyticsDescribeApplicationOutputApplicationDetailReferenceDataSourceDescriptionsS3ReferenceDataSourceDescription {
  BucketARN: String!
  FileKey: String!
  ReferenceRoleARN: String!
}

input AwsKinesisanalyticsDiscoverInputSchemaInput {
  ResourceARN: String
  RoleARN: String
  InputStartingPositionConfiguration: AwsKinesisanalyticsS28Input
  S3Configuration: AwsKinesisanalyticsDiscoverInputSchemaS3ConfigurationInput
  InputProcessingConfiguration: AwsKinesisanalyticsSbInput
}

type AwsKinesisanalyticsDiscoverInputSchemaOutput {
  InputSchema: AwsKinesisanalyticsSi
  ParsedInputRecords: [[String]]
  ProcessedInputRecords: [String]
  RawInputRecords: [String]
}

input AwsKinesisanalyticsDiscoverInputSchemaS3ConfigurationInput {
  RoleARN: String!
  BucketARN: String!
  FileKey: String!
}

input AwsKinesisanalyticsListApplicationsInput {
  Limit: Int
  ExclusiveStartApplicationName: String
}

type AwsKinesisanalyticsListApplicationsOutput {
  ApplicationSummaries: [AwsKinesisanalyticsS1l]!
  HasMoreApplications: Boolean!
}

input AwsKinesisanalyticsS12Input {
  Name: String!
  KinesisStreamsOutput: AwsKinesisanalyticsS12KinesisStreamsOutputInput
  KinesisFirehoseOutput: AwsKinesisanalyticsS12KinesisFirehoseOutputInput
  DestinationSchema: AwsKinesisanalyticsS15Input!
}

input AwsKinesisanalyticsS12KinesisFirehoseOutputInput {
  ResourceARN: String!
  RoleARN: String!
}

input AwsKinesisanalyticsS12KinesisStreamsOutputInput {
  ResourceARN: String!
  RoleARN: String!
}

type AwsKinesisanalyticsS15 {
  RecordFormatType: String
}

input AwsKinesisanalyticsS15Input {
  RecordFormatType: String
}

type AwsKinesisanalyticsS1l {
  ApplicationName: String!
  ApplicationARN: String!
  ApplicationStatus: String!
}

type AwsKinesisanalyticsS28 {
  InputStartingPosition: String
}

input AwsKinesisanalyticsS28Input {
  InputStartingPosition: String
}

input AwsKinesisanalyticsS4Input {
  LogStreamARN: String!
  RoleARN: String!
}

input AwsKinesisanalyticsS9Input {
  NamePrefix: String!
  InputProcessingConfiguration: AwsKinesisanalyticsSbInput
  KinesisStreamsInput: AwsKinesisanalyticsS9KinesisStreamsInputInput
  KinesisFirehoseInput: AwsKinesisanalyticsS9KinesisFirehoseInputInput
  InputParallelism: AwsKinesisanalyticsSgInput
  InputSchema: AwsKinesisanalyticsSiInput!
}

input AwsKinesisanalyticsS9KinesisFirehoseInputInput {
  ResourceARN: String!
  RoleARN: String!
}

input AwsKinesisanalyticsS9KinesisStreamsInputInput {
  ResourceARN: String!
  RoleARN: String!
}

input AwsKinesisanalyticsSbInput {
  InputLambdaProcessor: AwsKinesisanalyticsSbInputLambdaProcessorInput!
}

input AwsKinesisanalyticsSbInputLambdaProcessorInput {
  ResourceARN: String!
  RoleARN: String!
}

type AwsKinesisanalyticsSg {
  Count: Int
}

input AwsKinesisanalyticsSgInput {
  Count: Int
}

type AwsKinesisanalyticsSi {
  RecordFormat: AwsKinesisanalyticsSj!
  RecordEncoding: String
  RecordColumns: [AwsKinesisanalyticsSs]!
}

input AwsKinesisanalyticsSiInput {
  RecordFormat: AwsKinesisanalyticsSjInput!
  RecordEncoding: String
  RecordColumns: [AwsKinesisanalyticsSsInput]!
}

type AwsKinesisanalyticsSj {
  RecordFormatType: String!
  MappingParameters: AwsKinesisanalyticsSjMappingParameters
}

input AwsKinesisanalyticsSjInput {
  RecordFormatType: String!
  MappingParameters: AwsKinesisanalyticsSjMappingParametersInput
}

type AwsKinesisanalyticsSjMappingParameters {
  JSONMappingParameters: AwsKinesisanalyticsSjMappingParametersJSONMappingParameters
  CSVMappingParameters: AwsKinesisanalyticsSjMappingParametersCSVMappingParameters
}

type AwsKinesisanalyticsSjMappingParametersCSVMappingParameters {
  RecordRowDelimiter: String!
  RecordColumnDelimiter: String!
}

input AwsKinesisanalyticsSjMappingParametersCSVMappingParametersInput {
  RecordRowDelimiter: String!
  RecordColumnDelimiter: String!
}

input AwsKinesisanalyticsSjMappingParametersInput {
  JSONMappingParameters: AwsKinesisanalyticsSjMappingParametersJSONMappingParametersInput
  CSVMappingParameters: AwsKinesisanalyticsSjMappingParametersCSVMappingParametersInput
}

type AwsKinesisanalyticsSjMappingParametersJSONMappingParameters {
  RecordRowPath: String!
}

input AwsKinesisanalyticsSjMappingParametersJSONMappingParametersInput {
  RecordRowPath: String!
}

type AwsKinesisanalyticsSs {
  Name: String!
  Mapping: String
  SqlType: String!
}

input AwsKinesisanalyticsSsInput {
  Name: String!
  Mapping: String
  SqlType: String!
}

input AwsKinesisanalyticsStartApplicationInput {
  ApplicationName: String!
  InputConfigurations: [AwsKinesisanalyticsStartApplicationInputConfigurationsInput]!
}

input AwsKinesisanalyticsStartApplicationInputConfigurationsInput {
  Id: String!
  InputStartingPositionConfiguration: AwsKinesisanalyticsS28Input!
}

input AwsKinesisanalyticsStopApplicationInput {
  ApplicationName: String!
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateCloudWatchLoggingOptionUpdatesInput {
  CloudWatchLoggingOptionId: String!
  LogStreamARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateInput {
  InputUpdates: [AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesInput]
  ApplicationCodeUpdate: String
  OutputUpdates: [AwsKinesisanalyticsUpdateApplicationApplicationUpdateOutputUpdatesInput]
  ReferenceDataSourceUpdates: [AwsKinesisanalyticsUpdateApplicationApplicationUpdateReferenceDataSourceUpdatesInput]
  CloudWatchLoggingOptionUpdates: [AwsKinesisanalyticsUpdateApplicationApplicationUpdateCloudWatchLoggingOptionUpdatesInput]
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesInput {
  InputId: String!
  NamePrefixUpdate: String
  InputProcessingConfigurationUpdate: AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesInputProcessingConfigurationUpdateInput
  KinesisStreamsInputUpdate: AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesKinesisStreamsInputUpdateInput
  KinesisFirehoseInputUpdate: AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesKinesisFirehoseInputUpdateInput
  InputSchemaUpdate: AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesInputSchemaUpdateInput
  InputParallelismUpdate: AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesInputParallelismUpdateInput
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesInputParallelismUpdateInput {
  CountUpdate: Int
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesInputProcessingConfigurationUpdateInput {
  InputLambdaProcessorUpdate: AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesInputProcessingConfigurationUpdateInputLambdaProcessorUpdateInput!
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesInputProcessingConfigurationUpdateInputLambdaProcessorUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesInputSchemaUpdateInput {
  RecordFormatUpdate: AwsKinesisanalyticsSjInput
  RecordEncodingUpdate: String
  RecordColumnUpdates: [AwsKinesisanalyticsSsInput]
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesKinesisFirehoseInputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateInputUpdatesKinesisStreamsInputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateOutputUpdatesInput {
  OutputId: String!
  NameUpdate: String
  KinesisStreamsOutputUpdate: AwsKinesisanalyticsUpdateApplicationApplicationUpdateOutputUpdatesKinesisStreamsOutputUpdateInput
  KinesisFirehoseOutputUpdate: AwsKinesisanalyticsUpdateApplicationApplicationUpdateOutputUpdatesKinesisFirehoseOutputUpdateInput
  DestinationSchemaUpdate: AwsKinesisanalyticsS15Input
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateOutputUpdatesKinesisFirehoseOutputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateOutputUpdatesKinesisStreamsOutputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateReferenceDataSourceUpdatesInput {
  ReferenceId: String!
  TableNameUpdate: String
  S3ReferenceDataSourceUpdate: AwsKinesisanalyticsUpdateApplicationApplicationUpdateReferenceDataSourceUpdatesS3ReferenceDataSourceUpdateInput
  ReferenceSchemaUpdate: AwsKinesisanalyticsSiInput
}

input AwsKinesisanalyticsUpdateApplicationApplicationUpdateReferenceDataSourceUpdatesS3ReferenceDataSourceUpdateInput {
  BucketARNUpdate: String
  FileKeyUpdate: String
  ReferenceRoleARNUpdate: String
}

input AwsKinesisanalyticsUpdateApplicationInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  ApplicationUpdate: AwsKinesisanalyticsUpdateApplicationApplicationUpdateInput!
}

input AwsKinesisCreateStreamInput {
  StreamName: String!
  ShardCount: Int!
}

input AwsKinesisDecreaseStreamRetentionPeriodInput {
  StreamName: String!
  RetentionPeriodHours: Int!
}

input AwsKinesisDeleteStreamInput {
  StreamName: String!
}

type AwsKinesisDescribeLimitsOutput {
  ShardLimit: Int!
  OpenShardCount: Int!
}

input AwsKinesisDescribeStreamInput {
  StreamName: String!
  Limit: Int
  ExclusiveStartShardId: String
}

type AwsKinesisDescribeStreamOutput {
  StreamDescription: AwsKinesisDescribeStreamOutputStreamDescription!
}

type AwsKinesisDescribeStreamOutputStreamDescription {
  StreamName: String!
  StreamARN: String!
  StreamStatus: String!
  Shards: [AwsKinesisDescribeStreamOutputStreamDescriptionShards]!
  HasMoreShards: Boolean!
  RetentionPeriodHours: Int!
  StreamCreationTimestamp: Date!
  EnhancedMonitoring: [AwsKinesisSs]!
  EncryptionType: String
  KeyId: String
}

type AwsKinesisDescribeStreamOutputStreamDescriptionShards {
  ShardId: String!
  ParentShardId: String
  AdjacentParentShardId: String
  HashKeyRange: AwsKinesisDescribeStreamOutputStreamDescriptionShardsHashKeyRange!
  SequenceNumberRange: AwsKinesisDescribeStreamOutputStreamDescriptionShardsSequenceNumberRange!
}

type AwsKinesisDescribeStreamOutputStreamDescriptionShardsHashKeyRange {
  StartingHashKey: String!
  EndingHashKey: String!
}

type AwsKinesisDescribeStreamOutputStreamDescriptionShardsSequenceNumberRange {
  StartingSequenceNumber: String!
  EndingSequenceNumber: String
}

input AwsKinesisDescribeStreamSummaryInput {
  StreamName: String!
}

type AwsKinesisDescribeStreamSummaryOutput {
  StreamDescriptionSummary: AwsKinesisDescribeStreamSummaryOutputStreamDescriptionSummary!
}

type AwsKinesisDescribeStreamSummaryOutputStreamDescriptionSummary {
  StreamName: String!
  StreamARN: String!
  StreamStatus: String!
  RetentionPeriodHours: Int!
  StreamCreationTimestamp: Date!
  EnhancedMonitoring: [AwsKinesisSs]!
  EncryptionType: String
  KeyId: String
  OpenShardCount: Int!
}

input AwsKinesisDisableEnhancedMonitoringInput {
  StreamName: String!
  ShardLevelMetrics: [String]!
}

input AwsKinesisEnableEnhancedMonitoringInput {
  StreamName: String!
  ShardLevelMetrics: [String]!
}

input AwsKinesisGetRecordsInput {
  ShardIterator: String!
  Limit: Int
}

type AwsKinesisGetRecordsOutput {
  Records: [AwsKinesisGetRecordsOutputRecords]!
  NextShardIterator: String
  MillisBehindLatest: JSON
}

type AwsKinesisGetRecordsOutputRecords {
  SequenceNumber: String!
  ApproximateArrivalTimestamp: Date
  Data: JSON!
  PartitionKey: String!
  EncryptionType: String
}

input AwsKinesisGetShardIteratorInput {
  StreamName: String!
  ShardId: String!
  ShardIteratorType: String!
  StartingSequenceNumber: String
  Timestamp: Date
}

type AwsKinesisGetShardIteratorOutput {
  ShardIterator: String
}

input AwsKinesisIncreaseStreamRetentionPeriodInput {
  StreamName: String!
  RetentionPeriodHours: Int!
}

input AwsKinesisListStreamsInput {
  Limit: Int
  ExclusiveStartStreamName: String
}

type AwsKinesisListStreamsOutput {
  StreamNames: [String]!
  HasMoreStreams: Boolean!
}

input AwsKinesisListTagsForStreamInput {
  StreamName: String!
  ExclusiveStartTagKey: String
  Limit: Int
}

type AwsKinesisListTagsForStreamOutput {
  Tags: [AwsKinesisListTagsForStreamOutputTags]!
  HasMoreTags: Boolean!
}

type AwsKinesisListTagsForStreamOutputTags {
  Key: String!
  Value: String
}

input AwsKinesisMergeShardsInput {
  StreamName: String!
  ShardToMerge: String!
  AdjacentShardToMerge: String!
}

input AwsKinesisPutRecordInput {
  StreamName: String!
  Data: JSON!
  PartitionKey: String!
  ExplicitHashKey: String
  SequenceNumberForOrdering: String
}

type AwsKinesisPutRecordOutput {
  ShardId: String!
  SequenceNumber: String!
  EncryptionType: String
}

input AwsKinesisPutRecordsInput {
  Records: [AwsKinesisPutRecordsRecordsInput]!
  StreamName: String!
}

type AwsKinesisPutRecordsOutput {
  FailedRecordCount: Int
  Records: [AwsKinesisPutRecordsOutputRecords]!
  EncryptionType: String
}

type AwsKinesisPutRecordsOutputRecords {
  SequenceNumber: String
  ShardId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsKinesisPutRecordsRecordsInput {
  Data: JSON!
  ExplicitHashKey: String
  PartitionKey: String!
}

input AwsKinesisRemoveTagsFromStreamInput {
  StreamName: String!
  TagKeys: [String]!
}

input AwsKinesisSplitShardInput {
  StreamName: String!
  ShardToSplit: String!
  NewStartingHashKey: String!
}

type AwsKinesisSs {
  ShardLevelMetrics: [String]
}

input AwsKinesisStartStreamEncryptionInput {
  StreamName: String!
  EncryptionType: String!
  KeyId: String!
}

input AwsKinesisStopStreamEncryptionInput {
  StreamName: String!
  EncryptionType: String!
  KeyId: String!
}

input AwsKinesisUpdateShardCountInput {
  StreamName: String!
  TargetShardCount: Int!
  ScalingType: String!
}

type AwsKinesisUpdateShardCountOutput {
  StreamName: String
  CurrentShardCount: Int
  TargetShardCount: Int
}

# Amazon Kinesis Video Streams (2017-09-30)
type AwsKinesisvideo {
  # kinesisvideo.CreateStream
  CreateStream(input: AwsKinesisvideoCreateStreamInput!): AwsKinesisvideoCreateStreamOutput

  # kinesisvideo.DeleteStream
  DeleteStream(input: AwsKinesisvideoDeleteStreamInput!): JSON

  # kinesisvideo.DescribeStream
  DescribeStream(input: AwsKinesisvideoDescribeStreamInput): AwsKinesisvideoDescribeStreamOutput

  # kinesisvideo.GetDataEndpoint
  GetDataEndpoint(input: AwsKinesisvideoGetDataEndpointInput!): AwsKinesisvideoGetDataEndpointOutput

  # kinesisvideo.ListStreams
  ListStreams(input: AwsKinesisvideoListStreamsInput): AwsKinesisvideoListStreamsOutput

  # kinesisvideo.ListTagsForStream
  ListTagsForStream(input: AwsKinesisvideoListTagsForStreamInput): AwsKinesisvideoListTagsForStreamOutput

  # kinesisvideo.TagStream
  TagStream(input: AwsKinesisvideoTagStreamInput!): JSON

  # kinesisvideo.UntagStream
  UntagStream(input: AwsKinesisvideoUntagStreamInput!): JSON

  # kinesisvideo.UpdateDataRetention
  UpdateDataRetention(input: AwsKinesisvideoUpdateDataRetentionInput!): JSON

  # kinesisvideo.UpdateStream
  UpdateStream(input: AwsKinesisvideoUpdateStreamInput!): JSON
}

# Amazon Kinesis Video Streams Archived Media (2017-09-30)
type AwsKinesisvideoarchivedmedia {
  # kinesisvideoarchivedmedia.GetMediaForFragmentList
  GetMediaForFragmentList(input: AwsKinesisvideoarchivedmediaGetMediaForFragmentListInput!): AwsKinesisvideoarchivedmediaGetMediaForFragmentListOutput

  # kinesisvideoarchivedmedia.ListFragments
  ListFragments(input: AwsKinesisvideoarchivedmediaListFragmentsInput!): AwsKinesisvideoarchivedmediaListFragmentsOutput
}

input AwsKinesisvideoarchivedmediaGetMediaForFragmentListInput {
  StreamName: String!
  Fragments: [String]!
}

type AwsKinesisvideoarchivedmediaGetMediaForFragmentListOutput {
  ContentType: String
  Payload: JSON
}

input AwsKinesisvideoarchivedmediaListFragmentsFragmentSelectorInput {
  FragmentSelectorType: String!
  TimestampRange: AwsKinesisvideoarchivedmediaListFragmentsFragmentSelectorTimestampRangeInput!
}

input AwsKinesisvideoarchivedmediaListFragmentsFragmentSelectorTimestampRangeInput {
  StartTimestamp: Date!
  EndTimestamp: Date!
}

input AwsKinesisvideoarchivedmediaListFragmentsInput {
  StreamName: String!
  MaxResults: JSON
  NextToken: String
  FragmentSelector: AwsKinesisvideoarchivedmediaListFragmentsFragmentSelectorInput
}

type AwsKinesisvideoarchivedmediaListFragmentsOutput {
  Fragments: [AwsKinesisvideoarchivedmediaListFragmentsOutputFragments]
  NextToken: String
}

type AwsKinesisvideoarchivedmediaListFragmentsOutputFragments {
  FragmentNumber: String
  FragmentSizeInBytes: JSON
  ProducerTimestamp: Date
  ServerTimestamp: Date
  FragmentLengthInMilliseconds: JSON
}

input AwsKinesisvideoCreateStreamInput {
  DeviceName: String
  StreamName: String!
  MediaType: String
  KmsKeyId: String
  DataRetentionInHours: Int
}

type AwsKinesisvideoCreateStreamOutput {
  StreamARN: String
}

input AwsKinesisvideoDeleteStreamInput {
  StreamARN: String!
  CurrentVersion: String
}

input AwsKinesisvideoDescribeStreamInput {
  StreamName: String
  StreamARN: String
}

type AwsKinesisvideoDescribeStreamOutput {
  StreamInfo: AwsKinesisvideoSe
}

input AwsKinesisvideoGetDataEndpointInput {
  StreamName: String
  StreamARN: String
  APIName: String!
}

type AwsKinesisvideoGetDataEndpointOutput {
  DataEndpoint: String
}

input AwsKinesisvideoListStreamsInput {
  MaxResults: Int
  NextToken: String
  StreamNameCondition: AwsKinesisvideoListStreamsStreamNameConditionInput
}

type AwsKinesisvideoListStreamsOutput {
  StreamInfoList: [AwsKinesisvideoSe]
  NextToken: String
}

input AwsKinesisvideoListStreamsStreamNameConditionInput {
  ComparisonOperator: String
  ComparisonValue: String
}

input AwsKinesisvideoListTagsForStreamInput {
  NextToken: String
  StreamARN: String
  StreamName: String
}

type AwsKinesisvideoListTagsForStreamOutput {
  NextToken: String
  Tags: JSON
}

# Amazon Kinesis Video Streams Media (2017-09-30)
type AwsKinesisvideomedia {
  # kinesisvideomedia.GetMedia
  GetMedia(input: AwsKinesisvideomediaGetMediaInput!): AwsKinesisvideomediaGetMediaOutput
}

input AwsKinesisvideomediaGetMediaInput {
  StreamName: String
  StreamARN: String
  StartSelector: AwsKinesisvideomediaGetMediaStartSelectorInput!
}

type AwsKinesisvideomediaGetMediaOutput {
  ContentType: String
  Payload: JSON
}

input AwsKinesisvideomediaGetMediaStartSelectorInput {
  StartSelectorType: String!
  AfterFragmentNumber: String
  StartTimestamp: Date
  ContinuationToken: String
}

type AwsKinesisvideoSe {
  DeviceName: String
  StreamName: String
  StreamARN: String
  MediaType: String
  KmsKeyId: String
  Version: String
  Status: String
  CreationTime: Date
  DataRetentionInHours: Int
}

input AwsKinesisvideoTagStreamInput {
  StreamARN: String
  StreamName: String
  Tags: JSON!
}

input AwsKinesisvideoUntagStreamInput {
  StreamARN: String
  StreamName: String
  TagKeyList: [String]!
}

input AwsKinesisvideoUpdateDataRetentionInput {
  StreamName: String
  StreamARN: String
  CurrentVersion: String!
  Operation: String!
  DataRetentionChangeInHours: Int!
}

input AwsKinesisvideoUpdateStreamInput {
  StreamName: String
  StreamARN: String
  CurrentVersion: String!
  DeviceName: String
  MediaType: String
}

# AWS Key Management Service (2014-11-01)
type AwsKms {
  # kms.CancelKeyDeletion
  CancelKeyDeletion(input: AwsKmsCancelKeyDeletionInput!): AwsKmsCancelKeyDeletionOutput

  # kms.CreateAlias
  CreateAlias(input: AwsKmsCreateAliasInput!): JSON

  # kms.CreateGrant
  CreateGrant(input: AwsKmsCreateGrantInput!): AwsKmsCreateGrantOutput

  # kms.CreateKey
  CreateKey(input: AwsKmsCreateKeyInput): AwsKmsCreateKeyOutput

  # kms.Decrypt
  Decrypt(input: AwsKmsDecryptInput!): AwsKmsDecryptOutput

  # kms.DeleteAlias
  DeleteAlias(input: AwsKmsDeleteAliasInput!): JSON

  # kms.DeleteImportedKeyMaterial
  DeleteImportedKeyMaterial(input: AwsKmsDeleteImportedKeyMaterialInput!): JSON

  # kms.DescribeKey
  DescribeKey(input: AwsKmsDescribeKeyInput!): AwsKmsDescribeKeyOutput

  # kms.DisableKey
  DisableKey(input: AwsKmsDisableKeyInput!): JSON

  # kms.DisableKeyRotation
  DisableKeyRotation(input: AwsKmsDisableKeyRotationInput!): JSON

  # kms.EnableKey
  EnableKey(input: AwsKmsEnableKeyInput!): JSON

  # kms.EnableKeyRotation
  EnableKeyRotation(input: AwsKmsEnableKeyRotationInput!): JSON

  # kms.Encrypt
  Encrypt(input: AwsKmsEncryptInput!): AwsKmsEncryptOutput

  # kms.GenerateDataKey
  GenerateDataKey(input: AwsKmsGenerateDataKeyInput!): AwsKmsGenerateDataKeyOutput

  # kms.GenerateDataKeyWithoutPlaintext
  GenerateDataKeyWithoutPlaintext(input: AwsKmsGenerateDataKeyWithoutPlaintextInput!): AwsKmsGenerateDataKeyWithoutPlaintextOutput

  # kms.GenerateRandom
  GenerateRandom(input: AwsKmsGenerateRandomInput): AwsKmsGenerateRandomOutput

  # kms.GetKeyPolicy
  GetKeyPolicy(input: AwsKmsGetKeyPolicyInput!): AwsKmsGetKeyPolicyOutput

  # kms.GetKeyRotationStatus
  GetKeyRotationStatus(input: AwsKmsGetKeyRotationStatusInput!): AwsKmsGetKeyRotationStatusOutput

  # kms.GetParametersForImport
  GetParametersForImport(input: AwsKmsGetParametersForImportInput!): AwsKmsGetParametersForImportOutput

  # kms.ImportKeyMaterial
  ImportKeyMaterial(input: AwsKmsImportKeyMaterialInput!): JSON

  # kms.ListAliases
  ListAliases(input: AwsKmsListAliasesInput): AwsKmsListAliasesOutput

  # kms.ListGrants
  ListGrants(input: AwsKmsListGrantsInput!): JSON

  # kms.ListKeyPolicies
  ListKeyPolicies(input: AwsKmsListKeyPoliciesInput!): AwsKmsListKeyPoliciesOutput

  # kms.ListKeys
  ListKeys(input: AwsKmsListKeysInput): AwsKmsListKeysOutput

  # kms.ListResourceTags
  ListResourceTags(input: AwsKmsListResourceTagsInput!): AwsKmsListResourceTagsOutput

  # kms.ListRetirableGrants
  ListRetirableGrants(input: AwsKmsListRetirableGrantsInput!): JSON

  # kms.PutKeyPolicy
  PutKeyPolicy(input: AwsKmsPutKeyPolicyInput!): JSON

  # kms.ReEncrypt
  ReEncrypt(input: AwsKmsReEncryptInput!): AwsKmsReEncryptOutput

  # kms.RetireGrant
  RetireGrant(input: AwsKmsRetireGrantInput): JSON

  # kms.RevokeGrant
  RevokeGrant(input: AwsKmsRevokeGrantInput!): JSON

  # kms.ScheduleKeyDeletion
  ScheduleKeyDeletion(input: AwsKmsScheduleKeyDeletionInput!): AwsKmsScheduleKeyDeletionOutput

  # kms.TagResource
  TagResource(input: AwsKmsTagResourceInput!): JSON

  # kms.UntagResource
  UntagResource(input: AwsKmsUntagResourceInput!): JSON

  # kms.UpdateAlias
  UpdateAlias(input: AwsKmsUpdateAliasInput!): JSON

  # kms.UpdateKeyDescription
  UpdateKeyDescription(input: AwsKmsUpdateKeyDescriptionInput!): JSON
}

input AwsKmsCancelKeyDeletionInput {
  KeyId: String!
}

type AwsKmsCancelKeyDeletionOutput {
  KeyId: String
}

input AwsKmsCreateAliasInput {
  AliasName: String!
  TargetKeyId: String!
}

input AwsKmsCreateGrantInput {
  KeyId: String!
  GranteePrincipal: String!
  RetiringPrincipal: String
  Operations: [String]!
  Constraints: AwsKmsSaInput
  GrantTokens: [String]
  Name: String
}

type AwsKmsCreateGrantOutput {
  GrantToken: String
  GrantId: String
}

input AwsKmsCreateKeyInput {
  Policy: String
  Description: String
  KeyUsage: String
  Origin: String
  BypassPolicyLockoutSafetyCheck: Boolean
  Tags: [AwsKmsSpInput]
}

type AwsKmsCreateKeyOutput {
  KeyMetadata: AwsKmsSu
}

input AwsKmsDecryptInput {
  CiphertextBlob: JSON!
  EncryptionContext: JSON
  GrantTokens: [String]
}

type AwsKmsDecryptOutput {
  KeyId: String
  Plaintext: JSON
}

input AwsKmsDeleteAliasInput {
  AliasName: String!
}

input AwsKmsDeleteImportedKeyMaterialInput {
  KeyId: String!
}

input AwsKmsDescribeKeyInput {
  KeyId: String!
  GrantTokens: [String]
}

type AwsKmsDescribeKeyOutput {
  KeyMetadata: AwsKmsSu
}

input AwsKmsDisableKeyInput {
  KeyId: String!
}

input AwsKmsDisableKeyRotationInput {
  KeyId: String!
}

input AwsKmsEnableKeyInput {
  KeyId: String!
}

input AwsKmsEnableKeyRotationInput {
  KeyId: String!
}

input AwsKmsEncryptInput {
  KeyId: String!
  Plaintext: JSON!
  EncryptionContext: JSON
  GrantTokens: [String]
}

type AwsKmsEncryptOutput {
  CiphertextBlob: JSON
  KeyId: String
}

input AwsKmsGenerateDataKeyInput {
  KeyId: String!
  EncryptionContext: JSON
  NumberOfBytes: Int
  KeySpec: String
  GrantTokens: [String]
}

type AwsKmsGenerateDataKeyOutput {
  CiphertextBlob: JSON
  Plaintext: JSON
  KeyId: String
}

input AwsKmsGenerateDataKeyWithoutPlaintextInput {
  KeyId: String!
  EncryptionContext: JSON
  KeySpec: String
  NumberOfBytes: Int
  GrantTokens: [String]
}

type AwsKmsGenerateDataKeyWithoutPlaintextOutput {
  CiphertextBlob: JSON
  KeyId: String
}

input AwsKmsGenerateRandomInput {
  NumberOfBytes: Int
}

type AwsKmsGenerateRandomOutput {
  Plaintext: JSON
}

input AwsKmsGetKeyPolicyInput {
  KeyId: String!
  PolicyName: String!
}

type AwsKmsGetKeyPolicyOutput {
  Policy: String
}

input AwsKmsGetKeyRotationStatusInput {
  KeyId: String!
}

type AwsKmsGetKeyRotationStatusOutput {
  KeyRotationEnabled: Boolean
}

input AwsKmsGetParametersForImportInput {
  KeyId: String!
  WrappingAlgorithm: String!
  WrappingKeySpec: String!
}

type AwsKmsGetParametersForImportOutput {
  KeyId: String
  ImportToken: JSON
  PublicKey: JSON
  ParametersValidTo: Date
}

input AwsKmsImportKeyMaterialInput {
  KeyId: String!
  ImportToken: JSON!
  EncryptedKeyMaterial: JSON!
  ValidTo: Date
  ExpirationModel: String
}

input AwsKmsListAliasesInput {
  Limit: Int
  Marker: String
}

type AwsKmsListAliasesOutput {
  Aliases: [AwsKmsListAliasesOutputAliases]
  NextMarker: String
  Truncated: Boolean
}

type AwsKmsListAliasesOutputAliases {
  AliasName: String
  AliasArn: String
  TargetKeyId: String
}

input AwsKmsListGrantsInput {
  Limit: Int
  Marker: String
  KeyId: String!
}

input AwsKmsListKeyPoliciesInput {
  KeyId: String!
  Limit: Int
  Marker: String
}

type AwsKmsListKeyPoliciesOutput {
  PolicyNames: [String]
  NextMarker: String
  Truncated: Boolean
}

input AwsKmsListKeysInput {
  Limit: Int
  Marker: String
}

type AwsKmsListKeysOutput {
  Keys: [AwsKmsListKeysOutputKeys]
  NextMarker: String
  Truncated: Boolean
}

type AwsKmsListKeysOutputKeys {
  KeyId: String
  KeyArn: String
}

input AwsKmsListResourceTagsInput {
  KeyId: String!
  Limit: Int
  Marker: String
}

type AwsKmsListResourceTagsOutput {
  Tags: [AwsKmsSp]
  NextMarker: String
  Truncated: Boolean
}

input AwsKmsListRetirableGrantsInput {
  Limit: Int
  Marker: String
  RetiringPrincipal: String!
}

input AwsKmsPutKeyPolicyInput {
  KeyId: String!
  PolicyName: String!
  Policy: String!
  BypassPolicyLockoutSafetyCheck: Boolean
}

input AwsKmsReEncryptInput {
  CiphertextBlob: JSON!
  SourceEncryptionContext: JSON
  DestinationKeyId: String!
  DestinationEncryptionContext: JSON
  GrantTokens: [String]
}

type AwsKmsReEncryptOutput {
  CiphertextBlob: JSON
  SourceKeyId: String
  KeyId: String
}

input AwsKmsRetireGrantInput {
  GrantToken: String
  KeyId: String
  GrantId: String
}

input AwsKmsRevokeGrantInput {
  KeyId: String!
  GrantId: String!
}

input AwsKmsSaInput {
  EncryptionContextSubset: JSON
  EncryptionContextEquals: JSON
}

input AwsKmsScheduleKeyDeletionInput {
  KeyId: String!
  PendingWindowInDays: Int
}

type AwsKmsScheduleKeyDeletionOutput {
  KeyId: String
  DeletionDate: Date
}

type AwsKmsSp {
  TagKey: String!
  TagValue: String!
}

input AwsKmsSpInput {
  TagKey: String!
  TagValue: String!
}

type AwsKmsSu {
  AWSAccountId: String
  KeyId: String!
  Arn: String
  CreationDate: Date
  Enabled: Boolean
  Description: String
  KeyUsage: String
  KeyState: String
  DeletionDate: Date
  ValidTo: Date
  Origin: String
  ExpirationModel: String
  KeyManager: String
}

input AwsKmsTagResourceInput {
  KeyId: String!
  Tags: [AwsKmsSpInput]!
}

input AwsKmsUntagResourceInput {
  KeyId: String!
  TagKeys: [String]!
}

input AwsKmsUpdateAliasInput {
  AliasName: String!
  TargetKeyId: String!
}

input AwsKmsUpdateKeyDescriptionInput {
  KeyId: String!
  Description: String!
}

# AWS Lambda (2015-03-31)
type AwsLambda {
  # lambda.AddPermission
  AddPermission(input: AwsLambdaAddPermissionInput!): AwsLambdaAddPermissionOutput

  # lambda.CreateAlias
  CreateAlias(input: AwsLambdaCreateAliasInput!): JSON

  # lambda.CreateEventSourceMapping
  CreateEventSourceMapping(input: AwsLambdaCreateEventSourceMappingInput!): JSON

  # lambda.CreateFunction
  CreateFunction(input: AwsLambdaCreateFunctionInput!): JSON

  # lambda.DeleteAlias
  DeleteAlias(input: AwsLambdaDeleteAliasInput!): JSON

  # lambda.DeleteEventSourceMapping
  DeleteEventSourceMapping(input: AwsLambdaDeleteEventSourceMappingInput!): JSON

  # lambda.DeleteFunction
  DeleteFunction(input: AwsLambdaDeleteFunctionInput!): JSON

  # lambda.GetAccountSettings
  GetAccountSettings(input: JSON): AwsLambdaGetAccountSettingsOutput

  # lambda.GetAlias
  GetAlias(input: AwsLambdaGetAliasInput!): JSON

  # lambda.GetEventSourceMapping
  GetEventSourceMapping(input: AwsLambdaGetEventSourceMappingInput!): JSON

  # lambda.GetFunction
  GetFunction(input: AwsLambdaGetFunctionInput!): AwsLambdaGetFunctionOutput

  # lambda.GetFunctionConfiguration
  GetFunctionConfiguration(input: AwsLambdaGetFunctionConfigurationInput!): JSON

  # lambda.GetPolicy
  GetPolicy(input: AwsLambdaGetPolicyInput!): AwsLambdaGetPolicyOutput

  # lambda.Invoke
  Invoke(input: AwsLambdaInvokeInput!): AwsLambdaInvokeOutput

  # lambda.InvokeAsync
  InvokeAsync(input: AwsLambdaInvokeAsyncInput!): AwsLambdaInvokeAsyncOutput

  # lambda.ListAliases
  ListAliases(input: AwsLambdaListAliasesInput!): AwsLambdaListAliasesOutput

  # lambda.ListEventSourceMappings
  ListEventSourceMappings(input: AwsLambdaListEventSourceMappingsInput): AwsLambdaListEventSourceMappingsOutput

  # lambda.ListFunctions
  ListFunctions(input: AwsLambdaListFunctionsInput): AwsLambdaListFunctionsOutput

  # lambda.ListTags
  ListTags(input: AwsLambdaListTagsInput!): AwsLambdaListTagsOutput

  # lambda.ListVersionsByFunction
  ListVersionsByFunction(input: AwsLambdaListVersionsByFunctionInput!): AwsLambdaListVersionsByFunctionOutput

  # lambda.PublishVersion
  PublishVersion(input: AwsLambdaPublishVersionInput!): JSON

  # lambda.RemovePermission
  RemovePermission(input: AwsLambdaRemovePermissionInput!): JSON

  # lambda.TagResource
  TagResource(input: AwsLambdaTagResourceInput!): JSON

  # lambda.UntagResource
  UntagResource(input: AwsLambdaUntagResourceInput!): JSON

  # lambda.UpdateAlias
  UpdateAlias(input: AwsLambdaUpdateAliasInput!): JSON

  # lambda.UpdateEventSourceMapping
  UpdateEventSourceMapping(input: AwsLambdaUpdateEventSourceMappingInput!): JSON

  # lambda.UpdateFunctionCode
  UpdateFunctionCode(input: AwsLambdaUpdateFunctionCodeInput!): JSON

  # lambda.UpdateFunctionConfiguration
  UpdateFunctionConfiguration(input: AwsLambdaUpdateFunctionConfigurationInput!): JSON
}

input AwsLambdaAddPermissionInput {
  FunctionName: String!
  StatementId: String!
  Action: String!
  Principal: String!
  SourceArn: String
  SourceAccount: String
  EventSourceToken: String
  Qualifier: String
}

type AwsLambdaAddPermissionOutput {
  Statement: String
}

input AwsLambdaCreateAliasInput {
  FunctionName: String!
  Name: String!
  FunctionVersion: String!
  Description: String
  RoutingConfig: AwsLambdaSgInput
}

input AwsLambdaCreateEventSourceMappingInput {
  EventSourceArn: String!
  FunctionName: String!
  Enabled: Boolean
  BatchSize: Int
  StartingPosition: String!
  StartingPositionTimestamp: Date
}

input AwsLambdaCreateFunctionCodeInput {
  ZipFile: JSON
  S3Bucket: String
  S3Key: String
  S3ObjectVersion: String
}

input AwsLambdaCreateFunctionInput {
  FunctionName: String!
  Runtime: String!
  Role: String!
  Handler: String!
  Code: AwsLambdaCreateFunctionCodeInput!
  Description: String
  Timeout: Int
  MemorySize: Int
  Publish: Boolean
  VpcConfig: AwsLambdaS14Input
  DeadLetterConfig: AwsLambdaS19Input
  Environment: AwsLambdaS1bInput
  KMSKeyArn: String
  TracingConfig: AwsLambdaS1gInput
  Tags: JSON
}

input AwsLambdaDeleteAliasInput {
  FunctionName: String!
  Name: String!
}

input AwsLambdaDeleteEventSourceMappingInput {
  UUID: String!
}

input AwsLambdaDeleteFunctionInput {
  FunctionName: String!
  Qualifier: String
}

type AwsLambdaGetAccountSettingsOutput {
  AccountLimit: AwsLambdaGetAccountSettingsOutputAccountLimit
  AccountUsage: AwsLambdaGetAccountSettingsOutputAccountUsage
}

type AwsLambdaGetAccountSettingsOutputAccountLimit {
  TotalCodeSize: JSON
  CodeSizeUnzipped: JSON
  CodeSizeZipped: JSON
  ConcurrentExecutions: Int
}

type AwsLambdaGetAccountSettingsOutputAccountUsage {
  TotalCodeSize: JSON
  FunctionCount: JSON
}

input AwsLambdaGetAliasInput {
  FunctionName: String!
  Name: String!
}

input AwsLambdaGetEventSourceMappingInput {
  UUID: String!
}

input AwsLambdaGetFunctionConfigurationInput {
  FunctionName: String!
  Qualifier: String
}

input AwsLambdaGetFunctionInput {
  FunctionName: String!
  Qualifier: String
}

type AwsLambdaGetFunctionOutput {
  Configuration: AwsLambdaS1l
  Code: AwsLambdaGetFunctionOutputCode
  Tags: JSON
}

type AwsLambdaGetFunctionOutputCode {
  RepositoryType: String
  Location: String
}

input AwsLambdaGetPolicyInput {
  FunctionName: String!
  Qualifier: String
}

type AwsLambdaGetPolicyOutput {
  Policy: String
}

input AwsLambdaInvokeAsyncInput {
  FunctionName: String!
  InvokeArgs: JSON!
}

type AwsLambdaInvokeAsyncOutput {
  Status: Int
}

input AwsLambdaInvokeInput {
  FunctionName: String!
  InvocationType: String
  LogType: String
  ClientContext: String
  Payload: JSON
  Qualifier: String
}

type AwsLambdaInvokeOutput {
  StatusCode: Int
  FunctionError: String
  LogResult: String
  Payload: JSON
  ExecutedVersion: String
}

input AwsLambdaListAliasesInput {
  FunctionName: String!
  FunctionVersion: String
  Marker: String
  MaxItems: Int
}

type AwsLambdaListAliasesOutput {
  NextMarker: String
  Aliases: [AwsLambdaSk]
}

input AwsLambdaListEventSourceMappingsInput {
  EventSourceArn: String
  FunctionName: String
  Marker: String
  MaxItems: Int
}

type AwsLambdaListEventSourceMappingsOutput {
  NextMarker: String
  EventSourceMappings: [AwsLambdaSr]
}

input AwsLambdaListFunctionsInput {
  MasterRegion: String
  FunctionVersion: String
  Marker: String
  MaxItems: Int
}

type AwsLambdaListFunctionsOutput {
  NextMarker: String
  Functions: [AwsLambdaS1l]
}

input AwsLambdaListTagsInput {
  Resource: String!
}

type AwsLambdaListTagsOutput {
  Tags: JSON
}

input AwsLambdaListVersionsByFunctionInput {
  FunctionName: String!
  Marker: String
  MaxItems: Int
}

type AwsLambdaListVersionsByFunctionOutput {
  NextMarker: String
  Versions: [AwsLambdaS1l]
}

input AwsLambdaPublishVersionInput {
  FunctionName: String!
  CodeSha256: String
  Description: String
}

input AwsLambdaRemovePermissionInput {
  FunctionName: String!
  StatementId: String!
  Qualifier: String
}

input AwsLambdaS14Input {
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

type AwsLambdaS19 {
  TargetArn: String
}

input AwsLambdaS19Input {
  TargetArn: String
}

input AwsLambdaS1bInput {
  Variables: JSON
}

input AwsLambdaS1gInput {
  Mode: String
}

type AwsLambdaS1l {
  FunctionName: String
  FunctionArn: String
  Runtime: String
  Role: String
  Handler: String
  CodeSize: JSON
  Description: String
  Timeout: Int
  MemorySize: Int
  LastModified: String
  CodeSha256: String
  Version: String
  VpcConfig: AwsLambdaS1lVpcConfig
  DeadLetterConfig: AwsLambdaS19
  Environment: AwsLambdaS1lEnvironment
  KMSKeyArn: String
  TracingConfig: AwsLambdaS1lTracingConfig
  MasterArn: String
}

type AwsLambdaS1lEnvironment {
  Variables: JSON
  Error: AwsLambdaS1lEnvironmentError
}

type AwsLambdaS1lEnvironmentError {
  ErrorCode: String
  Message: String
}

type AwsLambdaS1lTracingConfig {
  Mode: String
}

type AwsLambdaS1lVpcConfig {
  SubnetIds: [String]
  SecurityGroupIds: [String]
  VpcId: String
}

type AwsLambdaSg {
  AdditionalVersionWeights: JSON
}

input AwsLambdaSgInput {
  AdditionalVersionWeights: JSON
}

type AwsLambdaSk {
  AliasArn: String
  Name: String
  FunctionVersion: String
  Description: String
  RoutingConfig: AwsLambdaSg
}

type AwsLambdaSr {
  UUID: String
  BatchSize: Int
  EventSourceArn: String
  FunctionArn: String
  LastModified: Date
  LastProcessingResult: String
  State: String
  StateTransitionReason: String
}

input AwsLambdaTagResourceInput {
  Resource: String!
  Tags: JSON!
}

input AwsLambdaUntagResourceInput {
  Resource: String!
  TagKeys: [String]!
}

input AwsLambdaUpdateAliasInput {
  FunctionName: String!
  Name: String!
  FunctionVersion: String
  Description: String
  RoutingConfig: AwsLambdaSgInput
}

input AwsLambdaUpdateEventSourceMappingInput {
  UUID: String!
  FunctionName: String
  Enabled: Boolean
  BatchSize: Int
}

input AwsLambdaUpdateFunctionCodeInput {
  FunctionName: String!
  ZipFile: JSON
  S3Bucket: String
  S3Key: String
  S3ObjectVersion: String
  Publish: Boolean
  DryRun: Boolean
}

input AwsLambdaUpdateFunctionConfigurationInput {
  FunctionName: String!
  Role: String
  Handler: String
  Description: String
  Timeout: Int
  MemorySize: Int
  VpcConfig: AwsLambdaS14Input
  Environment: AwsLambdaS1bInput
  Runtime: String
  DeadLetterConfig: AwsLambdaS19Input
  KMSKeyArn: String
  TracingConfig: AwsLambdaS1gInput
}

# Amazon Lex Model Building Service (2017-04-19)
type AwsLexmodelbuildingservice {
  # lexmodelbuildingservice.CreateBotVersion
  CreateBotVersion(input: AwsLexmodelbuildingserviceCreateBotVersionInput!): AwsLexmodelbuildingserviceCreateBotVersionOutput

  # lexmodelbuildingservice.CreateIntentVersion
  CreateIntentVersion(input: AwsLexmodelbuildingserviceCreateIntentVersionInput!): AwsLexmodelbuildingserviceCreateIntentVersionOutput

  # lexmodelbuildingservice.CreateSlotTypeVersion
  CreateSlotTypeVersion(input: AwsLexmodelbuildingserviceCreateSlotTypeVersionInput!): AwsLexmodelbuildingserviceCreateSlotTypeVersionOutput

  # lexmodelbuildingservice.DeleteBot
  DeleteBot(input: AwsLexmodelbuildingserviceDeleteBotInput!): JSON

  # lexmodelbuildingservice.DeleteBotAlias
  DeleteBotAlias(input: AwsLexmodelbuildingserviceDeleteBotAliasInput!): JSON

  # lexmodelbuildingservice.DeleteBotChannelAssociation
  DeleteBotChannelAssociation(input: AwsLexmodelbuildingserviceDeleteBotChannelAssociationInput!): JSON

  # lexmodelbuildingservice.DeleteBotVersion
  DeleteBotVersion(input: AwsLexmodelbuildingserviceDeleteBotVersionInput!): JSON

  # lexmodelbuildingservice.DeleteIntent
  DeleteIntent(input: AwsLexmodelbuildingserviceDeleteIntentInput!): JSON

  # lexmodelbuildingservice.DeleteIntentVersion
  DeleteIntentVersion(input: AwsLexmodelbuildingserviceDeleteIntentVersionInput!): JSON

  # lexmodelbuildingservice.DeleteSlotType
  DeleteSlotType(input: AwsLexmodelbuildingserviceDeleteSlotTypeInput!): JSON

  # lexmodelbuildingservice.DeleteSlotTypeVersion
  DeleteSlotTypeVersion(input: AwsLexmodelbuildingserviceDeleteSlotTypeVersionInput!): JSON

  # lexmodelbuildingservice.DeleteUtterances
  DeleteUtterances(input: AwsLexmodelbuildingserviceDeleteUtterancesInput!): JSON

  # lexmodelbuildingservice.GetBot
  GetBot(input: AwsLexmodelbuildingserviceGetBotInput!): AwsLexmodelbuildingserviceGetBotOutput

  # lexmodelbuildingservice.GetBotAlias
  GetBotAlias(input: AwsLexmodelbuildingserviceGetBotAliasInput!): AwsLexmodelbuildingserviceGetBotAliasOutput

  # lexmodelbuildingservice.GetBotAliases
  GetBotAliases(input: AwsLexmodelbuildingserviceGetBotAliasesInput!): AwsLexmodelbuildingserviceGetBotAliasesOutput

  # lexmodelbuildingservice.GetBotChannelAssociation
  GetBotChannelAssociation(input: AwsLexmodelbuildingserviceGetBotChannelAssociationInput!): AwsLexmodelbuildingserviceGetBotChannelAssociationOutput

  # lexmodelbuildingservice.GetBotChannelAssociations
  GetBotChannelAssociations(input: AwsLexmodelbuildingserviceGetBotChannelAssociationsInput!): AwsLexmodelbuildingserviceGetBotChannelAssociationsOutput

  # lexmodelbuildingservice.GetBotVersions
  GetBotVersions(input: AwsLexmodelbuildingserviceGetBotVersionsInput!): AwsLexmodelbuildingserviceGetBotVersionsOutput

  # lexmodelbuildingservice.GetBots
  GetBots(input: AwsLexmodelbuildingserviceGetBotsInput): AwsLexmodelbuildingserviceGetBotsOutput

  # lexmodelbuildingservice.GetBuiltinIntent
  GetBuiltinIntent(input: AwsLexmodelbuildingserviceGetBuiltinIntentInput!): AwsLexmodelbuildingserviceGetBuiltinIntentOutput

  # lexmodelbuildingservice.GetBuiltinIntents
  GetBuiltinIntents(input: AwsLexmodelbuildingserviceGetBuiltinIntentsInput): AwsLexmodelbuildingserviceGetBuiltinIntentsOutput

  # lexmodelbuildingservice.GetBuiltinSlotTypes
  GetBuiltinSlotTypes(input: AwsLexmodelbuildingserviceGetBuiltinSlotTypesInput): AwsLexmodelbuildingserviceGetBuiltinSlotTypesOutput

  # lexmodelbuildingservice.GetExport
  GetExport(input: AwsLexmodelbuildingserviceGetExportInput!): AwsLexmodelbuildingserviceGetExportOutput

  # lexmodelbuildingservice.GetIntent
  GetIntent(input: AwsLexmodelbuildingserviceGetIntentInput!): AwsLexmodelbuildingserviceGetIntentOutput

  # lexmodelbuildingservice.GetIntentVersions
  GetIntentVersions(input: AwsLexmodelbuildingserviceGetIntentVersionsInput!): AwsLexmodelbuildingserviceGetIntentVersionsOutput

  # lexmodelbuildingservice.GetIntents
  GetIntents(input: AwsLexmodelbuildingserviceGetIntentsInput): AwsLexmodelbuildingserviceGetIntentsOutput

  # lexmodelbuildingservice.GetSlotType
  GetSlotType(input: AwsLexmodelbuildingserviceGetSlotTypeInput!): AwsLexmodelbuildingserviceGetSlotTypeOutput

  # lexmodelbuildingservice.GetSlotTypeVersions
  GetSlotTypeVersions(input: AwsLexmodelbuildingserviceGetSlotTypeVersionsInput!): AwsLexmodelbuildingserviceGetSlotTypeVersionsOutput

  # lexmodelbuildingservice.GetSlotTypes
  GetSlotTypes(input: AwsLexmodelbuildingserviceGetSlotTypesInput): AwsLexmodelbuildingserviceGetSlotTypesOutput

  # lexmodelbuildingservice.GetUtterancesView
  GetUtterancesView(input: AwsLexmodelbuildingserviceGetUtterancesViewInput!): AwsLexmodelbuildingserviceGetUtterancesViewOutput

  # lexmodelbuildingservice.PutBot
  PutBot(input: AwsLexmodelbuildingservicePutBotInput!): AwsLexmodelbuildingservicePutBotOutput

  # lexmodelbuildingservice.PutBotAlias
  PutBotAlias(input: AwsLexmodelbuildingservicePutBotAliasInput!): AwsLexmodelbuildingservicePutBotAliasOutput

  # lexmodelbuildingservice.PutIntent
  PutIntent(input: AwsLexmodelbuildingservicePutIntentInput!): AwsLexmodelbuildingservicePutIntentOutput

  # lexmodelbuildingservice.PutSlotType
  PutSlotType(input: AwsLexmodelbuildingservicePutSlotTypeInput!): AwsLexmodelbuildingservicePutSlotTypeOutput
}

input AwsLexmodelbuildingserviceCreateBotVersionInput {
  name: String!
  checksum: String
}

type AwsLexmodelbuildingserviceCreateBotVersionOutput {
  name: String
  description: String
  intents: [AwsLexmodelbuildingserviceS6]
  clarificationPrompt: AwsLexmodelbuildingserviceSa
  abortStatement: AwsLexmodelbuildingserviceSh
  status: String
  failureReason: String
  lastUpdatedDate: Date
  createdDate: Date
  idleSessionTTLInSeconds: Int
  voiceId: String
  checksum: String
  version: String
  locale: String
  childDirected: Boolean
}

input AwsLexmodelbuildingserviceCreateIntentVersionInput {
  name: String!
  checksum: String
}

type AwsLexmodelbuildingserviceCreateIntentVersionOutput {
  name: String
  description: String
  slots: [AwsLexmodelbuildingserviceSp]
  sampleUtterances: [String]
  confirmationPrompt: AwsLexmodelbuildingserviceSa
  rejectionStatement: AwsLexmodelbuildingserviceSh
  followUpPrompt: AwsLexmodelbuildingserviceSy
  conclusionStatement: AwsLexmodelbuildingserviceSh
  dialogCodeHook: AwsLexmodelbuildingserviceSz
  fulfillmentActivity: AwsLexmodelbuildingserviceS12
  parentIntentSignature: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
}

input AwsLexmodelbuildingserviceCreateSlotTypeVersionInput {
  name: String!
  checksum: String
}

type AwsLexmodelbuildingserviceCreateSlotTypeVersionOutput {
  name: String
  description: String
  enumerationValues: [AwsLexmodelbuildingserviceS18]
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
  valueSelectionStrategy: String
}

input AwsLexmodelbuildingserviceDeleteBotAliasInput {
  name: String!
  botName: String!
}

input AwsLexmodelbuildingserviceDeleteBotChannelAssociationInput {
  name: String!
  botName: String!
  botAlias: String!
}

input AwsLexmodelbuildingserviceDeleteBotInput {
  name: String!
}

input AwsLexmodelbuildingserviceDeleteBotVersionInput {
  name: String!
  version: String!
}

input AwsLexmodelbuildingserviceDeleteIntentInput {
  name: String!
}

input AwsLexmodelbuildingserviceDeleteIntentVersionInput {
  name: String!
  version: String!
}

input AwsLexmodelbuildingserviceDeleteSlotTypeInput {
  name: String!
}

input AwsLexmodelbuildingserviceDeleteSlotTypeVersionInput {
  name: String!
  version: String!
}

input AwsLexmodelbuildingserviceDeleteUtterancesInput {
  botName: String!
  userId: String!
}

input AwsLexmodelbuildingserviceGetBotAliasesInput {
  botName: String!
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexmodelbuildingserviceGetBotAliasesOutput {
  BotAliases: [AwsLexmodelbuildingserviceGetBotAliasesOutputBotAliases]
  nextToken: String
}

type AwsLexmodelbuildingserviceGetBotAliasesOutputBotAliases {
  name: String
  description: String
  botVersion: String
  botName: String
  lastUpdatedDate: Date
  createdDate: Date
  checksum: String
}

input AwsLexmodelbuildingserviceGetBotAliasInput {
  name: String!
  botName: String!
}

type AwsLexmodelbuildingserviceGetBotAliasOutput {
  name: String
  description: String
  botVersion: String
  botName: String
  lastUpdatedDate: Date
  createdDate: Date
  checksum: String
}

input AwsLexmodelbuildingserviceGetBotChannelAssociationInput {
  name: String!
  botName: String!
  botAlias: String!
}

type AwsLexmodelbuildingserviceGetBotChannelAssociationOutput {
  name: String
  description: String
  botAlias: String
  botName: String
  createdDate: Date
  type: String
  botConfiguration: JSON
}

input AwsLexmodelbuildingserviceGetBotChannelAssociationsInput {
  botName: String!
  botAlias: String!
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexmodelbuildingserviceGetBotChannelAssociationsOutput {
  botChannelAssociations: [AwsLexmodelbuildingserviceGetBotChannelAssociationsOutputBotChannelAssociations]
  nextToken: String
}

type AwsLexmodelbuildingserviceGetBotChannelAssociationsOutputBotChannelAssociations {
  name: String
  description: String
  botAlias: String
  botName: String
  createdDate: Date
  type: String
  botConfiguration: JSON
}

input AwsLexmodelbuildingserviceGetBotInput {
  name: String!
  versionOrAlias: String!
}

type AwsLexmodelbuildingserviceGetBotOutput {
  name: String
  description: String
  intents: [AwsLexmodelbuildingserviceS6]
  clarificationPrompt: AwsLexmodelbuildingserviceSa
  abortStatement: AwsLexmodelbuildingserviceSh
  status: String
  failureReason: String
  lastUpdatedDate: Date
  createdDate: Date
  idleSessionTTLInSeconds: Int
  voiceId: String
  checksum: String
  version: String
  locale: String
  childDirected: Boolean
}

input AwsLexmodelbuildingserviceGetBotsInput {
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexmodelbuildingserviceGetBotsOutput {
  bots: [AwsLexmodelbuildingserviceS2b]
  nextToken: String
}

input AwsLexmodelbuildingserviceGetBotVersionsInput {
  name: String!
  nextToken: String
  maxResults: Int
}

type AwsLexmodelbuildingserviceGetBotVersionsOutput {
  bots: [AwsLexmodelbuildingserviceS2b]
  nextToken: String
}

input AwsLexmodelbuildingserviceGetBuiltinIntentInput {
  signature: String!
}

type AwsLexmodelbuildingserviceGetBuiltinIntentOutput {
  signature: String
  supportedLocales: [String]
  slots: [AwsLexmodelbuildingserviceGetBuiltinIntentOutputSlots]
}

type AwsLexmodelbuildingserviceGetBuiltinIntentOutputSlots {
  name: String
}

input AwsLexmodelbuildingserviceGetBuiltinIntentsInput {
  locale: String
  signatureContains: String
  nextToken: String
  maxResults: Int
}

type AwsLexmodelbuildingserviceGetBuiltinIntentsOutput {
  intents: [AwsLexmodelbuildingserviceGetBuiltinIntentsOutputIntents]
  nextToken: String
}

type AwsLexmodelbuildingserviceGetBuiltinIntentsOutputIntents {
  signature: String
  supportedLocales: [String]
}

input AwsLexmodelbuildingserviceGetBuiltinSlotTypesInput {
  locale: String
  signatureContains: String
  nextToken: String
  maxResults: Int
}

type AwsLexmodelbuildingserviceGetBuiltinSlotTypesOutput {
  slotTypes: [AwsLexmodelbuildingserviceGetBuiltinSlotTypesOutputSlotTypes]
  nextToken: String
}

type AwsLexmodelbuildingserviceGetBuiltinSlotTypesOutputSlotTypes {
  signature: String
  supportedLocales: [String]
}

input AwsLexmodelbuildingserviceGetExportInput {
  name: String!
  version: String!
  resourceType: String!
  exportType: String!
}

type AwsLexmodelbuildingserviceGetExportOutput {
  name: String
  version: String
  resourceType: String
  exportType: String
  exportStatus: String
  failureReason: String
  url: String
}

input AwsLexmodelbuildingserviceGetIntentInput {
  name: String!
  version: String!
}

type AwsLexmodelbuildingserviceGetIntentOutput {
  name: String
  description: String
  slots: [AwsLexmodelbuildingserviceSp]
  sampleUtterances: [String]
  confirmationPrompt: AwsLexmodelbuildingserviceSa
  rejectionStatement: AwsLexmodelbuildingserviceSh
  followUpPrompt: AwsLexmodelbuildingserviceSy
  conclusionStatement: AwsLexmodelbuildingserviceSh
  dialogCodeHook: AwsLexmodelbuildingserviceSz
  fulfillmentActivity: AwsLexmodelbuildingserviceS12
  parentIntentSignature: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
}

input AwsLexmodelbuildingserviceGetIntentsInput {
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexmodelbuildingserviceGetIntentsOutput {
  intents: [AwsLexmodelbuildingserviceS33]
  nextToken: String
}

input AwsLexmodelbuildingserviceGetIntentVersionsInput {
  name: String!
  nextToken: String
  maxResults: Int
}

type AwsLexmodelbuildingserviceGetIntentVersionsOutput {
  intents: [AwsLexmodelbuildingserviceS33]
  nextToken: String
}

input AwsLexmodelbuildingserviceGetSlotTypeInput {
  name: String!
  version: String!
}

type AwsLexmodelbuildingserviceGetSlotTypeOutput {
  name: String
  description: String
  enumerationValues: [AwsLexmodelbuildingserviceS18]
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
  valueSelectionStrategy: String
}

input AwsLexmodelbuildingserviceGetSlotTypesInput {
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexmodelbuildingserviceGetSlotTypesOutput {
  slotTypes: [AwsLexmodelbuildingserviceS3b]
  nextToken: String
}

input AwsLexmodelbuildingserviceGetSlotTypeVersionsInput {
  name: String!
  nextToken: String
  maxResults: Int
}

type AwsLexmodelbuildingserviceGetSlotTypeVersionsOutput {
  slotTypes: [AwsLexmodelbuildingserviceS3b]
  nextToken: String
}

input AwsLexmodelbuildingserviceGetUtterancesViewInput {
  botName: String!
  botVersions: [String]!
  statusType: String!
}

type AwsLexmodelbuildingserviceGetUtterancesViewOutput {
  botName: String
  utterances: [AwsLexmodelbuildingserviceGetUtterancesViewOutputUtterances]
}

type AwsLexmodelbuildingserviceGetUtterancesViewOutputUtterances {
  botVersion: String
  utterances: [AwsLexmodelbuildingserviceGetUtterancesViewOutputUtterancesUtterances]
}

type AwsLexmodelbuildingserviceGetUtterancesViewOutputUtterancesUtterances {
  utteranceString: String
  count: Int
  distinctUsers: Int
  firstUtteredDate: Date
  lastUtteredDate: Date
}

input AwsLexmodelbuildingservicePutBotAliasInput {
  name: String!
  description: String
  botVersion: String!
  botName: String!
  checksum: String
}

type AwsLexmodelbuildingservicePutBotAliasOutput {
  name: String
  description: String
  botVersion: String
  botName: String
  lastUpdatedDate: Date
  createdDate: Date
  checksum: String
}

input AwsLexmodelbuildingservicePutBotInput {
  name: String!
  description: String
  intents: [AwsLexmodelbuildingserviceS6Input]
  clarificationPrompt: AwsLexmodelbuildingserviceSaInput
  abortStatement: AwsLexmodelbuildingserviceShInput
  idleSessionTTLInSeconds: Int
  voiceId: String
  checksum: String
  processBehavior: String
  locale: String!
  childDirected: Boolean!
}

type AwsLexmodelbuildingservicePutBotOutput {
  name: String
  description: String
  intents: [AwsLexmodelbuildingserviceS6]
  clarificationPrompt: AwsLexmodelbuildingserviceSa
  abortStatement: AwsLexmodelbuildingserviceSh
  status: String
  failureReason: String
  lastUpdatedDate: Date
  createdDate: Date
  idleSessionTTLInSeconds: Int
  voiceId: String
  checksum: String
  version: String
  locale: String
  childDirected: Boolean
}

input AwsLexmodelbuildingservicePutIntentInput {
  name: String!
  description: String
  slots: [AwsLexmodelbuildingserviceSpInput]
  sampleUtterances: [String]
  confirmationPrompt: AwsLexmodelbuildingserviceSaInput
  rejectionStatement: AwsLexmodelbuildingserviceShInput
  followUpPrompt: AwsLexmodelbuildingserviceSyInput
  conclusionStatement: AwsLexmodelbuildingserviceShInput
  dialogCodeHook: AwsLexmodelbuildingserviceSzInput
  fulfillmentActivity: AwsLexmodelbuildingserviceS12Input
  parentIntentSignature: String
  checksum: String
}

type AwsLexmodelbuildingservicePutIntentOutput {
  name: String
  description: String
  slots: [AwsLexmodelbuildingserviceSp]
  sampleUtterances: [String]
  confirmationPrompt: AwsLexmodelbuildingserviceSa
  rejectionStatement: AwsLexmodelbuildingserviceSh
  followUpPrompt: AwsLexmodelbuildingserviceSy
  conclusionStatement: AwsLexmodelbuildingserviceSh
  dialogCodeHook: AwsLexmodelbuildingserviceSz
  fulfillmentActivity: AwsLexmodelbuildingserviceS12
  parentIntentSignature: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
}

input AwsLexmodelbuildingservicePutSlotTypeInput {
  name: String!
  description: String
  enumerationValues: [AwsLexmodelbuildingserviceS18Input]
  checksum: String
  valueSelectionStrategy: String
}

type AwsLexmodelbuildingservicePutSlotTypeOutput {
  name: String
  description: String
  enumerationValues: [AwsLexmodelbuildingserviceS18]
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
  valueSelectionStrategy: String
}

type AwsLexmodelbuildingserviceS12 {
  type: String!
  codeHook: AwsLexmodelbuildingserviceSz
}

input AwsLexmodelbuildingserviceS12Input {
  type: String!
  codeHook: AwsLexmodelbuildingserviceSzInput
}

type AwsLexmodelbuildingserviceS18 {
  value: String!
  synonyms: [String]
}

input AwsLexmodelbuildingserviceS18Input {
  value: String!
  synonyms: [String]
}

type AwsLexmodelbuildingserviceS2b {
  name: String
  description: String
  status: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
}

type AwsLexmodelbuildingserviceS33 {
  name: String
  description: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
}

type AwsLexmodelbuildingserviceS3b {
  name: String
  description: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
}

type AwsLexmodelbuildingserviceS6 {
  intentName: String!
  intentVersion: String!
}

input AwsLexmodelbuildingserviceS6Input {
  intentName: String!
  intentVersion: String!
}

type AwsLexmodelbuildingserviceSa {
  messages: [AwsLexmodelbuildingserviceSb]!
  maxAttempts: Int!
  responseCard: String
}

input AwsLexmodelbuildingserviceSaInput {
  messages: [AwsLexmodelbuildingserviceSbInput]!
  maxAttempts: Int!
  responseCard: String
}

type AwsLexmodelbuildingserviceSb {
  contentType: String!
  content: String!
}

input AwsLexmodelbuildingserviceSbInput {
  contentType: String!
  content: String!
}

type AwsLexmodelbuildingserviceSh {
  messages: [AwsLexmodelbuildingserviceSb]!
  responseCard: String
}

input AwsLexmodelbuildingserviceShInput {
  messages: [AwsLexmodelbuildingserviceSbInput]!
  responseCard: String
}

type AwsLexmodelbuildingserviceSp {
  name: String!
  description: String
  slotConstraint: String!
  slotType: String
  slotTypeVersion: String
  valueElicitationPrompt: AwsLexmodelbuildingserviceSa
  priority: Int
  sampleUtterances: [String]
  responseCard: String
}

input AwsLexmodelbuildingserviceSpInput {
  name: String!
  description: String
  slotConstraint: String!
  slotType: String
  slotTypeVersion: String
  valueElicitationPrompt: AwsLexmodelbuildingserviceSaInput
  priority: Int
  sampleUtterances: [String]
  responseCard: String
}

type AwsLexmodelbuildingserviceSy {
  prompt: AwsLexmodelbuildingserviceSa!
  rejectionStatement: AwsLexmodelbuildingserviceSh!
}

input AwsLexmodelbuildingserviceSyInput {
  prompt: AwsLexmodelbuildingserviceSaInput!
  rejectionStatement: AwsLexmodelbuildingserviceShInput!
}

type AwsLexmodelbuildingserviceSz {
  uri: String!
  messageVersion: String!
}

input AwsLexmodelbuildingserviceSzInput {
  uri: String!
  messageVersion: String!
}

# Amazon Lex Runtime Service (2016-11-28)
type AwsLexruntime {
  # lexruntime.PostContent
  PostContent(input: AwsLexruntimePostContentInput!): AwsLexruntimePostContentOutput

  # lexruntime.PostText
  PostText(input: AwsLexruntimePostTextInput!): AwsLexruntimePostTextOutput
}

input AwsLexruntimePostContentInput {
  botName: String!
  botAlias: String!
  userId: String!
  sessionAttributes: String
  requestAttributes: String
  contentType: String!
  accept: String
  inputStream: JSON!
}

type AwsLexruntimePostContentOutput {
  contentType: String
  intentName: String
  slots: String
  sessionAttributes: String
  message: String
  dialogState: String
  slotToElicit: String
  inputTranscript: String
  audioStream: JSON
}

input AwsLexruntimePostTextInput {
  botName: String!
  botAlias: String!
  userId: String!
  sessionAttributes: JSON
  requestAttributes: JSON
  inputText: String!
}

type AwsLexruntimePostTextOutput {
  intentName: String
  slots: JSON
  sessionAttributes: JSON
  message: String
  dialogState: String
  slotToElicit: String
  responseCard: AwsLexruntimePostTextOutputResponseCard
}

type AwsLexruntimePostTextOutputResponseCard {
  version: String
  contentType: String
  genericAttachments: [AwsLexruntimePostTextOutputResponseCardGenericAttachments]
}

type AwsLexruntimePostTextOutputResponseCardGenericAttachments {
  title: String
  subTitle: String
  attachmentLinkUrl: String
  imageUrl: String
  buttons: [AwsLexruntimePostTextOutputResponseCardGenericAttachmentsButtons]
}

type AwsLexruntimePostTextOutputResponseCardGenericAttachmentsButtons {
  text: String!
  value: String!
}

# Amazon Lightsail (2016-11-28)
type AwsLightsail {
  # lightsail.AllocateStaticIp
  AllocateStaticIp(input: AwsLightsailAllocateStaticIpInput!): AwsLightsailAllocateStaticIpOutput

  # lightsail.AttachDisk
  AttachDisk(input: AwsLightsailAttachDiskInput!): AwsLightsailAttachDiskOutput

  # lightsail.AttachInstancesToLoadBalancer
  AttachInstancesToLoadBalancer(input: AwsLightsailAttachInstancesToLoadBalancerInput!): AwsLightsailAttachInstancesToLoadBalancerOutput

  # lightsail.AttachLoadBalancerTlsCertificate
  AttachLoadBalancerTlsCertificate(input: AwsLightsailAttachLoadBalancerTlsCertificateInput!): AwsLightsailAttachLoadBalancerTlsCertificateOutput

  # lightsail.AttachStaticIp
  AttachStaticIp(input: AwsLightsailAttachStaticIpInput!): AwsLightsailAttachStaticIpOutput

  # lightsail.CloseInstancePublicPorts
  CloseInstancePublicPorts(input: AwsLightsailCloseInstancePublicPortsInput!): AwsLightsailCloseInstancePublicPortsOutput

  # lightsail.CreateDisk
  CreateDisk(input: AwsLightsailCreateDiskInput!): AwsLightsailCreateDiskOutput

  # lightsail.CreateDiskFromSnapshot
  CreateDiskFromSnapshot(input: AwsLightsailCreateDiskFromSnapshotInput!): AwsLightsailCreateDiskFromSnapshotOutput

  # lightsail.CreateDiskSnapshot
  CreateDiskSnapshot(input: AwsLightsailCreateDiskSnapshotInput!): AwsLightsailCreateDiskSnapshotOutput

  # lightsail.CreateDomain
  CreateDomain(input: AwsLightsailCreateDomainInput!): AwsLightsailCreateDomainOutput

  # lightsail.CreateDomainEntry
  CreateDomainEntry(input: AwsLightsailCreateDomainEntryInput!): AwsLightsailCreateDomainEntryOutput

  # lightsail.CreateInstanceSnapshot
  CreateInstanceSnapshot(input: AwsLightsailCreateInstanceSnapshotInput!): AwsLightsailCreateInstanceSnapshotOutput

  # lightsail.CreateInstances
  CreateInstances(input: AwsLightsailCreateInstancesInput!): AwsLightsailCreateInstancesOutput

  # lightsail.CreateInstancesFromSnapshot
  CreateInstancesFromSnapshot(input: AwsLightsailCreateInstancesFromSnapshotInput!): AwsLightsailCreateInstancesFromSnapshotOutput

  # lightsail.CreateKeyPair
  CreateKeyPair(input: AwsLightsailCreateKeyPairInput!): AwsLightsailCreateKeyPairOutput

  # lightsail.CreateLoadBalancer
  CreateLoadBalancer(input: AwsLightsailCreateLoadBalancerInput!): AwsLightsailCreateLoadBalancerOutput

  # lightsail.CreateLoadBalancerTlsCertificate
  CreateLoadBalancerTlsCertificate(input: AwsLightsailCreateLoadBalancerTlsCertificateInput!): AwsLightsailCreateLoadBalancerTlsCertificateOutput

  # lightsail.DeleteDisk
  DeleteDisk(input: AwsLightsailDeleteDiskInput!): AwsLightsailDeleteDiskOutput

  # lightsail.DeleteDiskSnapshot
  DeleteDiskSnapshot(input: AwsLightsailDeleteDiskSnapshotInput!): AwsLightsailDeleteDiskSnapshotOutput

  # lightsail.DeleteDomain
  DeleteDomain(input: AwsLightsailDeleteDomainInput!): AwsLightsailDeleteDomainOutput

  # lightsail.DeleteDomainEntry
  DeleteDomainEntry(input: AwsLightsailDeleteDomainEntryInput!): AwsLightsailDeleteDomainEntryOutput

  # lightsail.DeleteInstance
  DeleteInstance(input: AwsLightsailDeleteInstanceInput!): AwsLightsailDeleteInstanceOutput

  # lightsail.DeleteInstanceSnapshot
  DeleteInstanceSnapshot(input: AwsLightsailDeleteInstanceSnapshotInput!): AwsLightsailDeleteInstanceSnapshotOutput

  # lightsail.DeleteKeyPair
  DeleteKeyPair(input: AwsLightsailDeleteKeyPairInput!): AwsLightsailDeleteKeyPairOutput

  # lightsail.DeleteLoadBalancer
  DeleteLoadBalancer(input: AwsLightsailDeleteLoadBalancerInput!): AwsLightsailDeleteLoadBalancerOutput

  # lightsail.DeleteLoadBalancerTlsCertificate
  DeleteLoadBalancerTlsCertificate(input: AwsLightsailDeleteLoadBalancerTlsCertificateInput!): AwsLightsailDeleteLoadBalancerTlsCertificateOutput

  # lightsail.DetachDisk
  DetachDisk(input: AwsLightsailDetachDiskInput!): AwsLightsailDetachDiskOutput

  # lightsail.DetachInstancesFromLoadBalancer
  DetachInstancesFromLoadBalancer(input: AwsLightsailDetachInstancesFromLoadBalancerInput!): AwsLightsailDetachInstancesFromLoadBalancerOutput

  # lightsail.DetachStaticIp
  DetachStaticIp(input: AwsLightsailDetachStaticIpInput!): AwsLightsailDetachStaticIpOutput

  # lightsail.DownloadDefaultKeyPair
  DownloadDefaultKeyPair(input: JSON): AwsLightsailDownloadDefaultKeyPairOutput

  # lightsail.GetActiveNames
  GetActiveNames(input: AwsLightsailGetActiveNamesInput): AwsLightsailGetActiveNamesOutput

  # lightsail.GetBlueprints
  GetBlueprints(input: AwsLightsailGetBlueprintsInput): AwsLightsailGetBlueprintsOutput

  # lightsail.GetBundles
  GetBundles(input: AwsLightsailGetBundlesInput): AwsLightsailGetBundlesOutput

  # lightsail.GetDisk
  GetDisk(input: AwsLightsailGetDiskInput!): AwsLightsailGetDiskOutput

  # lightsail.GetDiskSnapshot
  GetDiskSnapshot(input: AwsLightsailGetDiskSnapshotInput!): AwsLightsailGetDiskSnapshotOutput

  # lightsail.GetDiskSnapshots
  GetDiskSnapshots(input: AwsLightsailGetDiskSnapshotsInput): AwsLightsailGetDiskSnapshotsOutput

  # lightsail.GetDisks
  GetDisks(input: AwsLightsailGetDisksInput): AwsLightsailGetDisksOutput

  # lightsail.GetDomain
  GetDomain(input: AwsLightsailGetDomainInput!): AwsLightsailGetDomainOutput

  # lightsail.GetDomains
  GetDomains(input: AwsLightsailGetDomainsInput): AwsLightsailGetDomainsOutput

  # lightsail.GetInstance
  GetInstance(input: AwsLightsailGetInstanceInput!): AwsLightsailGetInstanceOutput

  # lightsail.GetInstanceAccessDetails
  GetInstanceAccessDetails(input: AwsLightsailGetInstanceAccessDetailsInput!): AwsLightsailGetInstanceAccessDetailsOutput

  # lightsail.GetInstanceMetricData
  GetInstanceMetricData(input: AwsLightsailGetInstanceMetricDataInput!): AwsLightsailGetInstanceMetricDataOutput

  # lightsail.GetInstancePortStates
  GetInstancePortStates(input: AwsLightsailGetInstancePortStatesInput!): AwsLightsailGetInstancePortStatesOutput

  # lightsail.GetInstanceSnapshot
  GetInstanceSnapshot(input: AwsLightsailGetInstanceSnapshotInput!): AwsLightsailGetInstanceSnapshotOutput

  # lightsail.GetInstanceSnapshots
  GetInstanceSnapshots(input: AwsLightsailGetInstanceSnapshotsInput): AwsLightsailGetInstanceSnapshotsOutput

  # lightsail.GetInstanceState
  GetInstanceState(input: AwsLightsailGetInstanceStateInput!): AwsLightsailGetInstanceStateOutput

  # lightsail.GetInstances
  GetInstances(input: AwsLightsailGetInstancesInput): AwsLightsailGetInstancesOutput

  # lightsail.GetKeyPair
  GetKeyPair(input: AwsLightsailGetKeyPairInput!): AwsLightsailGetKeyPairOutput

  # lightsail.GetKeyPairs
  GetKeyPairs(input: AwsLightsailGetKeyPairsInput): AwsLightsailGetKeyPairsOutput

  # lightsail.GetLoadBalancer
  GetLoadBalancer(input: AwsLightsailGetLoadBalancerInput!): AwsLightsailGetLoadBalancerOutput

  # lightsail.GetLoadBalancerMetricData
  GetLoadBalancerMetricData(input: AwsLightsailGetLoadBalancerMetricDataInput!): AwsLightsailGetLoadBalancerMetricDataOutput

  # lightsail.GetLoadBalancerTlsCertificates
  GetLoadBalancerTlsCertificates(input: AwsLightsailGetLoadBalancerTlsCertificatesInput!): AwsLightsailGetLoadBalancerTlsCertificatesOutput

  # lightsail.GetLoadBalancers
  GetLoadBalancers(input: AwsLightsailGetLoadBalancersInput): AwsLightsailGetLoadBalancersOutput

  # lightsail.GetOperation
  GetOperation(input: AwsLightsailGetOperationInput!): AwsLightsailGetOperationOutput

  # lightsail.GetOperations
  GetOperations(input: AwsLightsailGetOperationsInput): AwsLightsailGetOperationsOutput

  # lightsail.GetOperationsForResource
  GetOperationsForResource(input: AwsLightsailGetOperationsForResourceInput!): AwsLightsailGetOperationsForResourceOutput

  # lightsail.GetRegions
  GetRegions(input: AwsLightsailGetRegionsInput): AwsLightsailGetRegionsOutput

  # lightsail.GetStaticIp
  GetStaticIp(input: AwsLightsailGetStaticIpInput!): AwsLightsailGetStaticIpOutput

  # lightsail.GetStaticIps
  GetStaticIps(input: AwsLightsailGetStaticIpsInput): AwsLightsailGetStaticIpsOutput

  # lightsail.ImportKeyPair
  ImportKeyPair(input: AwsLightsailImportKeyPairInput!): AwsLightsailImportKeyPairOutput

  # lightsail.IsVpcPeered
  IsVpcPeered(input: JSON): AwsLightsailIsVpcPeeredOutput

  # lightsail.OpenInstancePublicPorts
  OpenInstancePublicPorts(input: AwsLightsailOpenInstancePublicPortsInput!): AwsLightsailOpenInstancePublicPortsOutput

  # lightsail.PeerVpc
  PeerVpc(input: JSON): AwsLightsailPeerVpcOutput

  # lightsail.PutInstancePublicPorts
  PutInstancePublicPorts(input: AwsLightsailPutInstancePublicPortsInput!): AwsLightsailPutInstancePublicPortsOutput

  # lightsail.RebootInstance
  RebootInstance(input: AwsLightsailRebootInstanceInput!): AwsLightsailRebootInstanceOutput

  # lightsail.ReleaseStaticIp
  ReleaseStaticIp(input: AwsLightsailReleaseStaticIpInput!): AwsLightsailReleaseStaticIpOutput

  # lightsail.StartInstance
  StartInstance(input: AwsLightsailStartInstanceInput!): AwsLightsailStartInstanceOutput

  # lightsail.StopInstance
  StopInstance(input: AwsLightsailStopInstanceInput!): AwsLightsailStopInstanceOutput

  # lightsail.UnpeerVpc
  UnpeerVpc(input: JSON): AwsLightsailUnpeerVpcOutput

  # lightsail.UpdateDomainEntry
  UpdateDomainEntry(input: AwsLightsailUpdateDomainEntryInput!): AwsLightsailUpdateDomainEntryOutput

  # lightsail.UpdateLoadBalancerAttribute
  UpdateLoadBalancerAttribute(input: AwsLightsailUpdateLoadBalancerAttributeInput!): AwsLightsailUpdateLoadBalancerAttributeOutput
}

input AwsLightsailAllocateStaticIpInput {
  staticIpName: String!
}

type AwsLightsailAllocateStaticIpOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailAttachDiskInput {
  diskName: String!
  instanceName: String!
  diskPath: String!
}

type AwsLightsailAttachDiskOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailAttachInstancesToLoadBalancerInput {
  loadBalancerName: String!
  instanceNames: [String]!
}

type AwsLightsailAttachInstancesToLoadBalancerOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailAttachLoadBalancerTlsCertificateInput {
  loadBalancerName: String!
  certificateName: String!
}

type AwsLightsailAttachLoadBalancerTlsCertificateOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailAttachStaticIpInput {
  staticIpName: String!
  instanceName: String!
}

type AwsLightsailAttachStaticIpOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCloseInstancePublicPortsInput {
  portInfo: AwsLightsailSpInput!
  instanceName: String!
}

type AwsLightsailCloseInstancePublicPortsOutput {
  operation: AwsLightsailS5
}

input AwsLightsailCreateDiskFromSnapshotInput {
  diskName: String!
  diskSnapshotName: String!
  availabilityZone: String!
  sizeInGb: Int!
}

type AwsLightsailCreateDiskFromSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateDiskInput {
  diskName: String!
  availabilityZone: String!
  sizeInGb: Int!
}

type AwsLightsailCreateDiskOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateDiskSnapshotInput {
  diskName: String!
  diskSnapshotName: String!
}

type AwsLightsailCreateDiskSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateDomainEntryInput {
  domainName: String!
  domainEntry: AwsLightsailS14Input!
}

type AwsLightsailCreateDomainEntryOutput {
  operation: AwsLightsailS5
}

input AwsLightsailCreateDomainInput {
  domainName: String!
}

type AwsLightsailCreateDomainOutput {
  operation: AwsLightsailS5
}

input AwsLightsailCreateInstancesFromSnapshotInput {
  instanceNames: [String]!
  attachedDiskMapping: JSON
  availabilityZone: String!
  instanceSnapshotName: String!
  bundleId: String!
  userData: String
  keyPairName: String
}

type AwsLightsailCreateInstancesFromSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateInstancesInput {
  instanceNames: [String]!
  availabilityZone: String!
  customImageName: String
  blueprintId: String!
  bundleId: String!
  userData: String
  keyPairName: String
}

input AwsLightsailCreateInstanceSnapshotInput {
  instanceSnapshotName: String!
  instanceName: String!
}

type AwsLightsailCreateInstanceSnapshotOutput {
  operations: [AwsLightsailS5]
}

type AwsLightsailCreateInstancesOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateKeyPairInput {
  keyPairName: String!
}

type AwsLightsailCreateKeyPairOutput {
  keyPair: AwsLightsailS1l
  publicKeyBase64: String
  privateKeyBase64: String
  operation: AwsLightsailS5
}

input AwsLightsailCreateLoadBalancerInput {
  loadBalancerName: String!
  instancePort: Int!
  healthCheckPath: String
  certificateName: String
  certificateDomainName: String
  certificateAlternativeNames: [String]
}

type AwsLightsailCreateLoadBalancerOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateLoadBalancerTlsCertificateInput {
  loadBalancerName: String!
  certificateName: String!
  certificateDomainName: String!
  certificateAlternativeNames: [String]
}

type AwsLightsailCreateLoadBalancerTlsCertificateOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteDiskInput {
  diskName: String!
}

type AwsLightsailDeleteDiskOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteDiskSnapshotInput {
  diskSnapshotName: String!
}

type AwsLightsailDeleteDiskSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteDomainEntryInput {
  domainName: String!
  domainEntry: AwsLightsailS14Input!
}

type AwsLightsailDeleteDomainEntryOutput {
  operation: AwsLightsailS5
}

input AwsLightsailDeleteDomainInput {
  domainName: String!
}

type AwsLightsailDeleteDomainOutput {
  operation: AwsLightsailS5
}

input AwsLightsailDeleteInstanceInput {
  instanceName: String!
}

type AwsLightsailDeleteInstanceOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteInstanceSnapshotInput {
  instanceSnapshotName: String!
}

type AwsLightsailDeleteInstanceSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteKeyPairInput {
  keyPairName: String!
}

type AwsLightsailDeleteKeyPairOutput {
  operation: AwsLightsailS5
}

input AwsLightsailDeleteLoadBalancerInput {
  loadBalancerName: String!
}

type AwsLightsailDeleteLoadBalancerOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteLoadBalancerTlsCertificateInput {
  loadBalancerName: String!
  certificateName: String!
  force: Boolean
}

type AwsLightsailDeleteLoadBalancerTlsCertificateOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDetachDiskInput {
  diskName: String!
}

type AwsLightsailDetachDiskOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDetachInstancesFromLoadBalancerInput {
  loadBalancerName: String!
  instanceNames: [String]!
}

type AwsLightsailDetachInstancesFromLoadBalancerOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDetachStaticIpInput {
  staticIpName: String!
}

type AwsLightsailDetachStaticIpOutput {
  operations: [AwsLightsailS5]
}

type AwsLightsailDownloadDefaultKeyPairOutput {
  publicKeyBase64: String
  privateKeyBase64: String
}

input AwsLightsailGetActiveNamesInput {
  pageToken: String
}

type AwsLightsailGetActiveNamesOutput {
  activeNames: [String]
  nextPageToken: String
}

input AwsLightsailGetBlueprintsInput {
  includeInactive: Boolean
  pageToken: String
}

type AwsLightsailGetBlueprintsOutput {
  blueprints: [AwsLightsailGetBlueprintsOutputBlueprints]
  nextPageToken: String
}

type AwsLightsailGetBlueprintsOutputBlueprints {
  blueprintId: String
  name: String
  group: String
  type: String
  description: String
  isActive: Boolean
  minPower: Int
  version: String
  versionCode: String
  productUrl: String
  licenseUrl: String
  platform: String
}

input AwsLightsailGetBundlesInput {
  includeInactive: Boolean
  pageToken: String
}

type AwsLightsailGetBundlesOutput {
  bundles: [AwsLightsailGetBundlesOutputBundles]
  nextPageToken: String
}

type AwsLightsailGetBundlesOutputBundles {
  price: Float
  cpuCount: Int
  diskSizeInGb: Int
  bundleId: String
  instanceType: String
  isActive: Boolean
  name: String
  power: Int
  ramSizeInGb: Float
  transferPerMonthInGb: Int
  supportedPlatforms: [String]
}

input AwsLightsailGetDiskInput {
  diskName: String!
}

type AwsLightsailGetDiskOutput {
  disk: AwsLightsailS2y
}

input AwsLightsailGetDisksInput {
  pageToken: String
}

input AwsLightsailGetDiskSnapshotInput {
  diskSnapshotName: String!
}

type AwsLightsailGetDiskSnapshotOutput {
  diskSnapshot: AwsLightsailS32
}

input AwsLightsailGetDiskSnapshotsInput {
  pageToken: String
}

type AwsLightsailGetDiskSnapshotsOutput {
  diskSnapshots: [AwsLightsailS32]
  nextPageToken: String
}

type AwsLightsailGetDisksOutput {
  disks: [AwsLightsailS2y]
  nextPageToken: String
}

input AwsLightsailGetDomainInput {
  domainName: String!
}

type AwsLightsailGetDomainOutput {
  domain: AwsLightsailS3c
}

input AwsLightsailGetDomainsInput {
  pageToken: String
}

type AwsLightsailGetDomainsOutput {
  domains: [AwsLightsailS3c]
  nextPageToken: String
}

input AwsLightsailGetInstanceAccessDetailsInput {
  instanceName: String!
  protocol: String
}

type AwsLightsailGetInstanceAccessDetailsOutput {
  accessDetails: AwsLightsailGetInstanceAccessDetailsOutputAccessDetails
}

type AwsLightsailGetInstanceAccessDetailsOutputAccessDetails {
  certKey: String
  expiresAt: Date
  ipAddress: String
  password: String
  passwordData: AwsLightsailGetInstanceAccessDetailsOutputAccessDetailsPasswordData
  privateKey: String
  protocol: String
  instanceName: String
  username: String
}

type AwsLightsailGetInstanceAccessDetailsOutputAccessDetailsPasswordData {
  ciphertext: String
  keyPairName: String
}

input AwsLightsailGetInstanceInput {
  instanceName: String!
}

input AwsLightsailGetInstanceMetricDataInput {
  instanceName: String!
  metricName: String!
  period: Int!
  startTime: Date!
  endTime: Date!
  unit: String!
  statistics: [String]!
}

type AwsLightsailGetInstanceMetricDataOutput {
  metricName: String
  metricData: [AwsLightsailS47]
}

type AwsLightsailGetInstanceOutput {
  instance: AwsLightsailS3j
}

input AwsLightsailGetInstancePortStatesInput {
  instanceName: String!
}

type AwsLightsailGetInstancePortStatesOutput {
  portStates: [AwsLightsailGetInstancePortStatesOutputPortStates]
}

type AwsLightsailGetInstancePortStatesOutputPortStates {
  fromPort: Int
  toPort: Int
  protocol: String
  state: String
}

input AwsLightsailGetInstancesInput {
  pageToken: String
}

input AwsLightsailGetInstanceSnapshotInput {
  instanceSnapshotName: String!
}

type AwsLightsailGetInstanceSnapshotOutput {
  instanceSnapshot: AwsLightsailS4h
}

input AwsLightsailGetInstanceSnapshotsInput {
  pageToken: String
}

type AwsLightsailGetInstanceSnapshotsOutput {
  instanceSnapshots: [AwsLightsailS4h]
  nextPageToken: String
}

type AwsLightsailGetInstancesOutput {
  instances: [AwsLightsailS3j]
  nextPageToken: String
}

input AwsLightsailGetInstanceStateInput {
  instanceName: String!
}

type AwsLightsailGetInstanceStateOutput {
  state: AwsLightsailS3t
}

input AwsLightsailGetKeyPairInput {
  keyPairName: String!
}

type AwsLightsailGetKeyPairOutput {
  keyPair: AwsLightsailS1l
}

input AwsLightsailGetKeyPairsInput {
  pageToken: String
}

type AwsLightsailGetKeyPairsOutput {
  keyPairs: [AwsLightsailS1l]
  nextPageToken: String
}

input AwsLightsailGetLoadBalancerInput {
  loadBalancerName: String!
}

input AwsLightsailGetLoadBalancerMetricDataInput {
  loadBalancerName: String!
  metricName: String!
  period: Int!
  startTime: Date!
  endTime: Date!
  unit: String!
  statistics: [String]!
}

type AwsLightsailGetLoadBalancerMetricDataOutput {
  metricName: String
  metricData: [AwsLightsailS47]
}

type AwsLightsailGetLoadBalancerOutput {
  loadBalancer: AwsLightsailS4y
}

input AwsLightsailGetLoadBalancersInput {
  pageToken: String
}

type AwsLightsailGetLoadBalancersOutput {
  loadBalancers: [AwsLightsailS4y]
  nextPageToken: String
}

input AwsLightsailGetLoadBalancerTlsCertificatesInput {
  loadBalancerName: String!
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutput {
  tlsCertificates: [AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificates]
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificates {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  loadBalancerName: String
  isAttached: Boolean
  status: String
  domainName: String
  domainValidationRecords: [AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesDomainValidationRecords]
  failureReason: String
  issuedAt: Date
  issuer: String
  keyAlgorithm: String
  notAfter: Date
  notBefore: Date
  renewalSummary: AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesRenewalSummary
  revocationReason: String
  revokedAt: Date
  serial: String
  signatureAlgorithm: String
  subject: String
  subjectAlternativeNames: [String]
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesDomainValidationRecords {
  name: String
  type: String
  value: String
  validationStatus: String
  domainName: String
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesRenewalSummary {
  renewalStatus: String
  domainValidationOptions: [AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesRenewalSummaryDomainValidationOptions]
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesRenewalSummaryDomainValidationOptions {
  domainName: String
  validationStatus: String
}

input AwsLightsailGetOperationInput {
  operationId: String!
}

type AwsLightsailGetOperationOutput {
  operation: AwsLightsailS5
}

input AwsLightsailGetOperationsForResourceInput {
  resourceName: String!
  pageToken: String
}

type AwsLightsailGetOperationsForResourceOutput {
  operations: [AwsLightsailS5]
  nextPageCount: String
  nextPageToken: String
}

input AwsLightsailGetOperationsInput {
  pageToken: String
}

type AwsLightsailGetOperationsOutput {
  operations: [AwsLightsailS5]
  nextPageToken: String
}

input AwsLightsailGetRegionsInput {
  includeAvailabilityZones: Boolean
}

type AwsLightsailGetRegionsOutput {
  regions: [AwsLightsailGetRegionsOutputRegions]
}

type AwsLightsailGetRegionsOutputRegions {
  continentCode: String
  description: String
  displayName: String
  name: String
  availabilityZones: [AwsLightsailGetRegionsOutputRegionsAvailabilityZones]
}

type AwsLightsailGetRegionsOutputRegionsAvailabilityZones {
  zoneName: String
  state: String
}

input AwsLightsailGetStaticIpInput {
  staticIpName: String!
}

type AwsLightsailGetStaticIpOutput {
  staticIp: AwsLightsailS68
}

input AwsLightsailGetStaticIpsInput {
  pageToken: String
}

type AwsLightsailGetStaticIpsOutput {
  staticIps: [AwsLightsailS68]
  nextPageToken: String
}

input AwsLightsailImportKeyPairInput {
  keyPairName: String!
  publicKeyBase64: String!
}

type AwsLightsailImportKeyPairOutput {
  operation: AwsLightsailS5
}

type AwsLightsailIsVpcPeeredOutput {
  isPeered: Boolean
}

input AwsLightsailOpenInstancePublicPortsInput {
  portInfo: AwsLightsailSpInput!
  instanceName: String!
}

type AwsLightsailOpenInstancePublicPortsOutput {
  operation: AwsLightsailS5
}

type AwsLightsailPeerVpcOutput {
  operation: AwsLightsailS5
}

input AwsLightsailPutInstancePublicPortsInput {
  portInfos: [AwsLightsailSpInput]!
  instanceName: String!
}

type AwsLightsailPutInstancePublicPortsOutput {
  operation: AwsLightsailS5
}

input AwsLightsailRebootInstanceInput {
  instanceName: String!
}

type AwsLightsailRebootInstanceOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailReleaseStaticIpInput {
  staticIpName: String!
}

type AwsLightsailReleaseStaticIpOutput {
  operations: [AwsLightsailS5]
}

type AwsLightsailS14 {
  id: String
  name: String
  target: String
  isAlias: Boolean
  type: String
  options: JSON
}

input AwsLightsailS14Input {
  id: String
  name: String
  target: String
  isAlias: Boolean
  type: String
  options: JSON
}

type AwsLightsailS1l {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  fingerprint: String
}

type AwsLightsailS2y {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  sizeInGb: Int
  isSystemDisk: Boolean
  iops: Int
  path: String
  state: String
  attachedTo: String
  isAttached: Boolean
  attachmentState: String
  gbInUse: Int
}

type AwsLightsailS32 {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  sizeInGb: Int
  state: String
  progress: String
  fromDiskName: String
  fromDiskArn: String
}

type AwsLightsailS3c {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  domainEntries: [AwsLightsailS14]
}

type AwsLightsailS3j {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  blueprintId: String
  blueprintName: String
  bundleId: String
  isStaticIp: Boolean
  privateIpAddress: String
  publicIpAddress: String
  ipv6Address: String
  hardware: AwsLightsailS3jHardware
  networking: AwsLightsailS3jNetworking
  state: AwsLightsailS3t
  username: String
  sshKeyName: String
}

type AwsLightsailS3jHardware {
  cpuCount: Int
  disks: [AwsLightsailS2y]
  ramSizeInGb: Float
}

type AwsLightsailS3jNetworking {
  monthlyTransfer: AwsLightsailS3jNetworkingMonthlyTransfer
  ports: [AwsLightsailS3jNetworkingPorts]
}

type AwsLightsailS3jNetworkingMonthlyTransfer {
  gbPerMonthAllocated: Int
}

type AwsLightsailS3jNetworkingPorts {
  fromPort: Int
  toPort: Int
  protocol: String
  accessFrom: String
  accessType: String
  commonName: String
  accessDirection: String
}

type AwsLightsailS3t {
  code: Int
  name: String
}

type AwsLightsailS47 {
  average: JSON
  maximum: JSON
  minimum: JSON
  sampleCount: JSON
  sum: JSON
  timestamp: Date
  unit: String
}

type AwsLightsailS4h {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  state: String
  progress: String
  fromAttachedDisks: [AwsLightsailS2y]
  fromInstanceName: String
  fromInstanceArn: String
  fromBlueprintId: String
  fromBundleId: String
  sizeInGb: Int
}

type AwsLightsailS4y {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  dnsName: String
  state: String
  protocol: String
  publicPorts: [Int]
  healthCheckPath: String
  instancePort: Int
  instanceHealthSummary: [AwsLightsailS4yInstanceHealthSummary]
  tlsCertificateSummaries: [AwsLightsailS4yTlsCertificateSummaries]
  configurationOptions: JSON
}

type AwsLightsailS4yInstanceHealthSummary {
  instanceName: String
  instanceHealth: String
  instanceHealthReason: String
}

type AwsLightsailS4yTlsCertificateSummaries {
  name: String
  isAttached: Boolean
}

type AwsLightsailS5 {
  id: String
  resourceName: String
  resourceType: String
  createdAt: Date
  location: AwsLightsailS9
  isTerminal: Boolean
  operationDetails: String
  operationType: String
  status: String
  statusChangedAt: Date
  errorCode: String
  errorDetails: String
}

type AwsLightsailS68 {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  ipAddress: String
  attachedTo: String
  isAttached: Boolean
}

type AwsLightsailS9 {
  availabilityZone: String
  regionName: String
}

input AwsLightsailSpInput {
  fromPort: Int
  toPort: Int
  protocol: String
}

input AwsLightsailStartInstanceInput {
  instanceName: String!
}

type AwsLightsailStartInstanceOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailStopInstanceInput {
  instanceName: String!
  force: Boolean
}

type AwsLightsailStopInstanceOutput {
  operations: [AwsLightsailS5]
}

type AwsLightsailUnpeerVpcOutput {
  operation: AwsLightsailS5
}

input AwsLightsailUpdateDomainEntryInput {
  domainName: String!
  domainEntry: AwsLightsailS14Input!
}

type AwsLightsailUpdateDomainEntryOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailUpdateLoadBalancerAttributeInput {
  loadBalancerName: String!
  attributeName: String!
  attributeValue: String!
}

type AwsLightsailUpdateLoadBalancerAttributeOutput {
  operations: [AwsLightsailS5]
}

# Amazon Machine Learning (2014-12-12)
type AwsMachinelearning {
  # machinelearning.AddTags
  AddTags(input: AwsMachinelearningAddTagsInput!): AwsMachinelearningAddTagsOutput

  # machinelearning.CreateBatchPrediction
  CreateBatchPrediction(input: AwsMachinelearningCreateBatchPredictionInput!): AwsMachinelearningCreateBatchPredictionOutput

  # machinelearning.CreateDataSourceFromRDS
  CreateDataSourceFromRDS(input: AwsMachinelearningCreateDataSourceFromRDSInput!): AwsMachinelearningCreateDataSourceFromRDSOutput

  # machinelearning.CreateDataSourceFromRedshift
  CreateDataSourceFromRedshift(input: AwsMachinelearningCreateDataSourceFromRedshiftInput!): AwsMachinelearningCreateDataSourceFromRedshiftOutput

  # machinelearning.CreateDataSourceFromS3
  CreateDataSourceFromS3(input: AwsMachinelearningCreateDataSourceFromS3Input!): AwsMachinelearningCreateDataSourceFromS3Output

  # machinelearning.CreateEvaluation
  CreateEvaluation(input: AwsMachinelearningCreateEvaluationInput!): AwsMachinelearningCreateEvaluationOutput

  # machinelearning.CreateMLModel
  CreateMLModel(input: AwsMachinelearningCreateMLModelInput!): AwsMachinelearningCreateMLModelOutput

  # machinelearning.CreateRealtimeEndpoint
  CreateRealtimeEndpoint(input: AwsMachinelearningCreateRealtimeEndpointInput!): AwsMachinelearningCreateRealtimeEndpointOutput

  # machinelearning.DeleteBatchPrediction
  DeleteBatchPrediction(input: AwsMachinelearningDeleteBatchPredictionInput!): AwsMachinelearningDeleteBatchPredictionOutput

  # machinelearning.DeleteDataSource
  DeleteDataSource(input: AwsMachinelearningDeleteDataSourceInput!): AwsMachinelearningDeleteDataSourceOutput

  # machinelearning.DeleteEvaluation
  DeleteEvaluation(input: AwsMachinelearningDeleteEvaluationInput!): AwsMachinelearningDeleteEvaluationOutput

  # machinelearning.DeleteMLModel
  DeleteMLModel(input: AwsMachinelearningDeleteMLModelInput!): AwsMachinelearningDeleteMLModelOutput

  # machinelearning.DeleteRealtimeEndpoint
  DeleteRealtimeEndpoint(input: AwsMachinelearningDeleteRealtimeEndpointInput!): AwsMachinelearningDeleteRealtimeEndpointOutput

  # machinelearning.DeleteTags
  DeleteTags(input: AwsMachinelearningDeleteTagsInput!): AwsMachinelearningDeleteTagsOutput

  # machinelearning.DescribeBatchPredictions
  DescribeBatchPredictions(input: AwsMachinelearningDescribeBatchPredictionsInput): AwsMachinelearningDescribeBatchPredictionsOutput

  # machinelearning.DescribeDataSources
  DescribeDataSources(input: AwsMachinelearningDescribeDataSourcesInput): AwsMachinelearningDescribeDataSourcesOutput

  # machinelearning.DescribeEvaluations
  DescribeEvaluations(input: AwsMachinelearningDescribeEvaluationsInput): AwsMachinelearningDescribeEvaluationsOutput

  # machinelearning.DescribeMLModels
  DescribeMLModels(input: AwsMachinelearningDescribeMLModelsInput): AwsMachinelearningDescribeMLModelsOutput

  # machinelearning.DescribeTags
  DescribeTags(input: AwsMachinelearningDescribeTagsInput!): AwsMachinelearningDescribeTagsOutput

  # machinelearning.GetBatchPrediction
  GetBatchPrediction(input: AwsMachinelearningGetBatchPredictionInput!): AwsMachinelearningGetBatchPredictionOutput

  # machinelearning.GetDataSource
  GetDataSource(input: AwsMachinelearningGetDataSourceInput!): AwsMachinelearningGetDataSourceOutput

  # machinelearning.GetEvaluation
  GetEvaluation(input: AwsMachinelearningGetEvaluationInput!): AwsMachinelearningGetEvaluationOutput

  # machinelearning.GetMLModel
  GetMLModel(input: AwsMachinelearningGetMLModelInput!): AwsMachinelearningGetMLModelOutput

  # machinelearning.Predict
  Predict(input: AwsMachinelearningPredictInput!): AwsMachinelearningPredictOutput

  # machinelearning.UpdateBatchPrediction
  UpdateBatchPrediction(input: AwsMachinelearningUpdateBatchPredictionInput!): AwsMachinelearningUpdateBatchPredictionOutput

  # machinelearning.UpdateDataSource
  UpdateDataSource(input: AwsMachinelearningUpdateDataSourceInput!): AwsMachinelearningUpdateDataSourceOutput

  # machinelearning.UpdateEvaluation
  UpdateEvaluation(input: AwsMachinelearningUpdateEvaluationInput!): AwsMachinelearningUpdateEvaluationOutput

  # machinelearning.UpdateMLModel
  UpdateMLModel(input: AwsMachinelearningUpdateMLModelInput!): AwsMachinelearningUpdateMLModelOutput
}

input AwsMachinelearningAddTagsInput {
  Tags: [AwsMachinelearningS2Input]!
  ResourceId: String!
  ResourceType: String!
}

type AwsMachinelearningAddTagsOutput {
  ResourceId: String
  ResourceType: String
}

input AwsMachinelearningCreateBatchPredictionInput {
  BatchPredictionId: String!
  BatchPredictionName: String
  MLModelId: String!
  BatchPredictionDataSourceId: String!
  OutputUri: String!
}

type AwsMachinelearningCreateBatchPredictionOutput {
  BatchPredictionId: String
}

input AwsMachinelearningCreateDataSourceFromRDSInput {
  DataSourceId: String!
  DataSourceName: String
  RDSData: AwsMachinelearningCreateDataSourceFromRDSRDSDataInput!
  RoleARN: String!
  ComputeStatistics: Boolean
}

type AwsMachinelearningCreateDataSourceFromRDSOutput {
  DataSourceId: String
}

input AwsMachinelearningCreateDataSourceFromRDSRDSDataDatabaseCredentialsInput {
  Username: String!
  Password: String!
}

input AwsMachinelearningCreateDataSourceFromRDSRDSDataInput {
  DatabaseInformation: AwsMachinelearningSfInput!
  SelectSqlQuery: String!
  DatabaseCredentials: AwsMachinelearningCreateDataSourceFromRDSRDSDataDatabaseCredentialsInput!
  S3StagingLocation: String!
  DataRearrangement: String
  DataSchema: String
  DataSchemaUri: String
  ResourceRole: String!
  ServiceRole: String!
  SubnetId: String!
  SecurityGroupIds: [String]!
}

input AwsMachinelearningCreateDataSourceFromRedshiftDataSpecDatabaseCredentialsInput {
  Username: String!
  Password: String!
}

input AwsMachinelearningCreateDataSourceFromRedshiftDataSpecInput {
  DatabaseInformation: AwsMachinelearningSyInput!
  SelectSqlQuery: String!
  DatabaseCredentials: AwsMachinelearningCreateDataSourceFromRedshiftDataSpecDatabaseCredentialsInput!
  S3StagingLocation: String!
  DataRearrangement: String
  DataSchema: String
  DataSchemaUri: String
}

input AwsMachinelearningCreateDataSourceFromRedshiftInput {
  DataSourceId: String!
  DataSourceName: String
  DataSpec: AwsMachinelearningCreateDataSourceFromRedshiftDataSpecInput!
  RoleARN: String!
  ComputeStatistics: Boolean
}

type AwsMachinelearningCreateDataSourceFromRedshiftOutput {
  DataSourceId: String
}

input AwsMachinelearningCreateDataSourceFromS3DataSpecInput {
  DataLocationS3: String!
  DataRearrangement: String
  DataSchema: String
  DataSchemaLocationS3: String
}

input AwsMachinelearningCreateDataSourceFromS3Input {
  DataSourceId: String!
  DataSourceName: String
  DataSpec: AwsMachinelearningCreateDataSourceFromS3DataSpecInput!
  ComputeStatistics: Boolean
}

type AwsMachinelearningCreateDataSourceFromS3Output {
  DataSourceId: String
}

input AwsMachinelearningCreateEvaluationInput {
  EvaluationId: String!
  EvaluationName: String
  MLModelId: String!
  EvaluationDataSourceId: String!
}

type AwsMachinelearningCreateEvaluationOutput {
  EvaluationId: String
}

input AwsMachinelearningCreateMLModelInput {
  MLModelId: String!
  MLModelName: String
  MLModelType: String!
  Parameters: JSON
  TrainingDataSourceId: String!
  Recipe: String
  RecipeUri: String
}

type AwsMachinelearningCreateMLModelOutput {
  MLModelId: String
}

input AwsMachinelearningCreateRealtimeEndpointInput {
  MLModelId: String!
}

type AwsMachinelearningCreateRealtimeEndpointOutput {
  MLModelId: String
  RealtimeEndpointInfo: AwsMachinelearningS1j
}

input AwsMachinelearningDeleteBatchPredictionInput {
  BatchPredictionId: String!
}

type AwsMachinelearningDeleteBatchPredictionOutput {
  BatchPredictionId: String
}

input AwsMachinelearningDeleteDataSourceInput {
  DataSourceId: String!
}

type AwsMachinelearningDeleteDataSourceOutput {
  DataSourceId: String
}

input AwsMachinelearningDeleteEvaluationInput {
  EvaluationId: String!
}

type AwsMachinelearningDeleteEvaluationOutput {
  EvaluationId: String
}

input AwsMachinelearningDeleteMLModelInput {
  MLModelId: String!
}

type AwsMachinelearningDeleteMLModelOutput {
  MLModelId: String
}

input AwsMachinelearningDeleteRealtimeEndpointInput {
  MLModelId: String!
}

type AwsMachinelearningDeleteRealtimeEndpointOutput {
  MLModelId: String
  RealtimeEndpointInfo: AwsMachinelearningS1j
}

input AwsMachinelearningDeleteTagsInput {
  TagKeys: [String]!
  ResourceId: String!
  ResourceType: String!
}

type AwsMachinelearningDeleteTagsOutput {
  ResourceId: String
  ResourceType: String
}

input AwsMachinelearningDescribeBatchPredictionsInput {
  FilterVariable: String
  EQ: String
  GT: String
  LT: String
  GE: String
  LE: String
  NE: String
  Prefix: String
  SortOrder: String
  NextToken: String
  Limit: Int
}

type AwsMachinelearningDescribeBatchPredictionsOutput {
  Results: [AwsMachinelearningDescribeBatchPredictionsOutputResults]
  NextToken: String
}

type AwsMachinelearningDescribeBatchPredictionsOutputResults {
  BatchPredictionId: String
  MLModelId: String
  BatchPredictionDataSourceId: String
  InputDataLocationS3: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  OutputUri: String
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
  TotalRecordCount: JSON
  InvalidRecordCount: JSON
}

input AwsMachinelearningDescribeDataSourcesInput {
  FilterVariable: String
  EQ: String
  GT: String
  LT: String
  GE: String
  LE: String
  NE: String
  Prefix: String
  SortOrder: String
  NextToken: String
  Limit: Int
}

type AwsMachinelearningDescribeDataSourcesOutput {
  Results: [AwsMachinelearningDescribeDataSourcesOutputResults]
  NextToken: String
}

type AwsMachinelearningDescribeDataSourcesOutputResults {
  DataSourceId: String
  DataLocationS3: String
  DataRearrangement: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  DataSizeInBytes: JSON
  NumberOfFiles: JSON
  Name: String
  Status: String
  Message: String
  RedshiftMetadata: AwsMachinelearningS2i
  RDSMetadata: AwsMachinelearningS2j
  RoleARN: String
  ComputeStatistics: Boolean
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
}

input AwsMachinelearningDescribeEvaluationsInput {
  FilterVariable: String
  EQ: String
  GT: String
  LT: String
  GE: String
  LE: String
  NE: String
  Prefix: String
  SortOrder: String
  NextToken: String
  Limit: Int
}

type AwsMachinelearningDescribeEvaluationsOutput {
  Results: [AwsMachinelearningDescribeEvaluationsOutputResults]
  NextToken: String
}

type AwsMachinelearningDescribeEvaluationsOutputResults {
  EvaluationId: String
  MLModelId: String
  EvaluationDataSourceId: String
  InputDataLocationS3: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  PerformanceMetrics: AwsMachinelearningS2q
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
}

input AwsMachinelearningDescribeMLModelsInput {
  FilterVariable: String
  EQ: String
  GT: String
  LT: String
  GE: String
  LE: String
  NE: String
  Prefix: String
  SortOrder: String
  NextToken: String
  Limit: Int
}

type AwsMachinelearningDescribeMLModelsOutput {
  Results: [AwsMachinelearningDescribeMLModelsOutputResults]
  NextToken: String
}

type AwsMachinelearningDescribeMLModelsOutputResults {
  MLModelId: String
  TrainingDataSourceId: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  SizeInBytes: JSON
  EndpointInfo: AwsMachinelearningS1j
  TrainingParameters: JSON
  InputDataLocationS3: String
  Algorithm: String
  MLModelType: String
  ScoreThreshold: Float
  ScoreThresholdLastUpdatedAt: Date
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
}

input AwsMachinelearningDescribeTagsInput {
  ResourceId: String!
  ResourceType: String!
}

type AwsMachinelearningDescribeTagsOutput {
  ResourceId: String
  ResourceType: String
  Tags: [AwsMachinelearningS2]
}

input AwsMachinelearningGetBatchPredictionInput {
  BatchPredictionId: String!
}

type AwsMachinelearningGetBatchPredictionOutput {
  BatchPredictionId: String
  MLModelId: String
  BatchPredictionDataSourceId: String
  InputDataLocationS3: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  OutputUri: String
  LogUri: String
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
  TotalRecordCount: JSON
  InvalidRecordCount: JSON
}

input AwsMachinelearningGetDataSourceInput {
  DataSourceId: String!
  Verbose: Boolean
}

type AwsMachinelearningGetDataSourceOutput {
  DataSourceId: String
  DataLocationS3: String
  DataRearrangement: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  DataSizeInBytes: JSON
  NumberOfFiles: JSON
  Name: String
  Status: String
  LogUri: String
  Message: String
  RedshiftMetadata: AwsMachinelearningS2i
  RDSMetadata: AwsMachinelearningS2j
  RoleARN: String
  ComputeStatistics: Boolean
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
  DataSourceSchema: String
}

input AwsMachinelearningGetEvaluationInput {
  EvaluationId: String!
}

type AwsMachinelearningGetEvaluationOutput {
  EvaluationId: String
  MLModelId: String
  EvaluationDataSourceId: String
  InputDataLocationS3: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  PerformanceMetrics: AwsMachinelearningS2q
  LogUri: String
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
}

input AwsMachinelearningGetMLModelInput {
  MLModelId: String!
  Verbose: Boolean
}

type AwsMachinelearningGetMLModelOutput {
  MLModelId: String
  TrainingDataSourceId: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  SizeInBytes: JSON
  EndpointInfo: AwsMachinelearningS1j
  TrainingParameters: JSON
  InputDataLocationS3: String
  MLModelType: String
  ScoreThreshold: Float
  ScoreThresholdLastUpdatedAt: Date
  LogUri: String
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
  Recipe: String
  Schema: String
}

input AwsMachinelearningPredictInput {
  MLModelId: String!
  Record: JSON!
  PredictEndpoint: String!
}

type AwsMachinelearningPredictOutput {
  Prediction: AwsMachinelearningPredictOutputPrediction
}

type AwsMachinelearningPredictOutputPrediction {
  predictedLabel: String
  predictedValue: Float
  predictedScores: JSON
  details: JSON
}

type AwsMachinelearningS1j {
  PeakRequestsPerSecond: Int
  CreatedAt: Date
  EndpointUrl: String
  EndpointStatus: String
}

type AwsMachinelearningS2 {
  Key: String
  Value: String
}

type AwsMachinelearningS2i {
  RedshiftDatabase: AwsMachinelearningSy
  DatabaseUserName: String
  SelectSqlQuery: String
}

input AwsMachinelearningS2Input {
  Key: String
  Value: String
}

type AwsMachinelearningS2j {
  Database: AwsMachinelearningSf
  DatabaseUserName: String
  SelectSqlQuery: String
  ResourceRole: String
  ServiceRole: String
  DataPipelineId: String
}

type AwsMachinelearningS2q {
  Properties: JSON
}

type AwsMachinelearningSf {
  InstanceIdentifier: String!
  DatabaseName: String!
}

input AwsMachinelearningSfInput {
  InstanceIdentifier: String!
  DatabaseName: String!
}

type AwsMachinelearningSy {
  DatabaseName: String!
  ClusterIdentifier: String!
}

input AwsMachinelearningSyInput {
  DatabaseName: String!
  ClusterIdentifier: String!
}

input AwsMachinelearningUpdateBatchPredictionInput {
  BatchPredictionId: String!
  BatchPredictionName: String!
}

type AwsMachinelearningUpdateBatchPredictionOutput {
  BatchPredictionId: String
}

input AwsMachinelearningUpdateDataSourceInput {
  DataSourceId: String!
  DataSourceName: String!
}

type AwsMachinelearningUpdateDataSourceOutput {
  DataSourceId: String
}

input AwsMachinelearningUpdateEvaluationInput {
  EvaluationId: String!
  EvaluationName: String!
}

type AwsMachinelearningUpdateEvaluationOutput {
  EvaluationId: String
}

input AwsMachinelearningUpdateMLModelInput {
  MLModelId: String!
  MLModelName: String
  ScoreThreshold: Float
}

type AwsMachinelearningUpdateMLModelOutput {
  MLModelId: String
}

# AWS Marketplace Commerce Analytics (2015-07-01)
type AwsMarketplacecommerceanalytics {
  # marketplacecommerceanalytics.GenerateDataSet
  GenerateDataSet(input: AwsMarketplacecommerceanalyticsGenerateDataSetInput!): AwsMarketplacecommerceanalyticsGenerateDataSetOutput

  # marketplacecommerceanalytics.StartSupportDataExport
  StartSupportDataExport(input: AwsMarketplacecommerceanalyticsStartSupportDataExportInput!): AwsMarketplacecommerceanalyticsStartSupportDataExportOutput
}

input AwsMarketplacecommerceanalyticsGenerateDataSetInput {
  dataSetType: String!
  dataSetPublicationDate: Date!
  roleNameArn: String!
  destinationS3BucketName: String!
  destinationS3Prefix: String
  snsTopicArn: String!
  customerDefinedValues: JSON
}

type AwsMarketplacecommerceanalyticsGenerateDataSetOutput {
  dataSetRequestId: String
}

input AwsMarketplacecommerceanalyticsStartSupportDataExportInput {
  dataSetType: String!
  fromDate: Date!
  roleNameArn: String!
  destinationS3BucketName: String!
  destinationS3Prefix: String
  snsTopicArn: String!
  customerDefinedValues: JSON
}

type AwsMarketplacecommerceanalyticsStartSupportDataExportOutput {
  dataSetRequestId: String
}

# AWS Marketplace Entitlement Service (2017-01-11)
type AwsMarketplaceentitlementservice {
  # marketplaceentitlementservice.GetEntitlements
  GetEntitlements(input: AwsMarketplaceentitlementserviceGetEntitlementsInput!): AwsMarketplaceentitlementserviceGetEntitlementsOutput
}

input AwsMarketplaceentitlementserviceGetEntitlementsInput {
  ProductCode: String!
  Filter: JSON
  NextToken: String
  MaxResults: Int
}

type AwsMarketplaceentitlementserviceGetEntitlementsOutput {
  Entitlements: [AwsMarketplaceentitlementserviceGetEntitlementsOutputEntitlements]
  NextToken: String
}

type AwsMarketplaceentitlementserviceGetEntitlementsOutputEntitlements {
  ProductCode: String
  Dimension: String
  CustomerIdentifier: String
  Value: AwsMarketplaceentitlementserviceGetEntitlementsOutputEntitlementsValue
  ExpirationDate: Date
}

type AwsMarketplaceentitlementserviceGetEntitlementsOutputEntitlementsValue {
  IntegerValue: Int
  DoubleValue: JSON
  BooleanValue: Boolean
  StringValue: String
}

# AWSMarketplace Metering (2016-01-14)
type AwsMarketplacemetering {
  # marketplacemetering.BatchMeterUsage
  BatchMeterUsage(input: AwsMarketplacemeteringBatchMeterUsageInput!): AwsMarketplacemeteringBatchMeterUsageOutput

  # marketplacemetering.MeterUsage
  MeterUsage(input: AwsMarketplacemeteringMeterUsageInput!): AwsMarketplacemeteringMeterUsageOutput

  # marketplacemetering.ResolveCustomer
  ResolveCustomer(input: AwsMarketplacemeteringResolveCustomerInput!): AwsMarketplacemeteringResolveCustomerOutput
}

input AwsMarketplacemeteringBatchMeterUsageInput {
  UsageRecords: [AwsMarketplacemeteringS3Input]!
  ProductCode: String!
}

type AwsMarketplacemeteringBatchMeterUsageOutput {
  Results: [AwsMarketplacemeteringBatchMeterUsageOutputResults]
  UnprocessedRecords: [AwsMarketplacemeteringS3]
}

type AwsMarketplacemeteringBatchMeterUsageOutputResults {
  UsageRecord: AwsMarketplacemeteringS3
  MeteringRecordId: String
  Status: String
}

input AwsMarketplacemeteringMeterUsageInput {
  ProductCode: String!
  Timestamp: Date!
  UsageDimension: String!
  UsageQuantity: Int!
  DryRun: Boolean!
}

type AwsMarketplacemeteringMeterUsageOutput {
  MeteringRecordId: String
}

input AwsMarketplacemeteringResolveCustomerInput {
  RegistrationToken: String!
}

type AwsMarketplacemeteringResolveCustomerOutput {
  CustomerIdentifier: String
  ProductCode: String
}

type AwsMarketplacemeteringS3 {
  Timestamp: Date!
  CustomerIdentifier: String!
  Dimension: String!
  Quantity: Int!
}

input AwsMarketplacemeteringS3Input {
  Timestamp: Date!
  CustomerIdentifier: String!
  Dimension: String!
  Quantity: Int!
}

# AWS Elemental MediaConvert (2017-08-29)
type AwsMediaconvert {
  # mediaconvert.CancelJob
  CancelJob(input: AwsMediaconvertCancelJobInput!): JSON

  # mediaconvert.CreateJob
  CreateJob(input: AwsMediaconvertCreateJobInput): AwsMediaconvertCreateJobOutput

  # mediaconvert.CreateJobTemplate
  CreateJobTemplate(input: AwsMediaconvertCreateJobTemplateInput): AwsMediaconvertCreateJobTemplateOutput

  # mediaconvert.CreatePreset
  CreatePreset(input: AwsMediaconvertCreatePresetInput): AwsMediaconvertCreatePresetOutput

  # mediaconvert.CreateQueue
  CreateQueue(input: AwsMediaconvertCreateQueueInput): AwsMediaconvertCreateQueueOutput

  # mediaconvert.DeleteJobTemplate
  DeleteJobTemplate(input: AwsMediaconvertDeleteJobTemplateInput!): JSON

  # mediaconvert.DeletePreset
  DeletePreset(input: AwsMediaconvertDeletePresetInput!): JSON

  # mediaconvert.DeleteQueue
  DeleteQueue(input: AwsMediaconvertDeleteQueueInput!): JSON

  # mediaconvert.DescribeEndpoints
  DescribeEndpoints(input: AwsMediaconvertDescribeEndpointsInput): AwsMediaconvertDescribeEndpointsOutput

  # mediaconvert.GetJob
  GetJob(input: AwsMediaconvertGetJobInput!): AwsMediaconvertGetJobOutput

  # mediaconvert.GetJobTemplate
  GetJobTemplate(input: AwsMediaconvertGetJobTemplateInput!): AwsMediaconvertGetJobTemplateOutput

  # mediaconvert.GetPreset
  GetPreset(input: AwsMediaconvertGetPresetInput!): AwsMediaconvertGetPresetOutput

  # mediaconvert.GetQueue
  GetQueue(input: AwsMediaconvertGetQueueInput!): AwsMediaconvertGetQueueOutput

  # mediaconvert.ListJobTemplates
  ListJobTemplates(input: AwsMediaconvertListJobTemplatesInput): AwsMediaconvertListJobTemplatesOutput

  # mediaconvert.ListJobs
  ListJobs(input: AwsMediaconvertListJobsInput): AwsMediaconvertListJobsOutput

  # mediaconvert.ListPresets
  ListPresets(input: AwsMediaconvertListPresetsInput): AwsMediaconvertListPresetsOutput

  # mediaconvert.ListQueues
  ListQueues(input: AwsMediaconvertListQueuesInput): AwsMediaconvertListQueuesOutput

  # mediaconvert.UpdateJobTemplate
  UpdateJobTemplate(input: AwsMediaconvertUpdateJobTemplateInput!): AwsMediaconvertUpdateJobTemplateOutput

  # mediaconvert.UpdatePreset
  UpdatePreset(input: AwsMediaconvertUpdatePresetInput!): AwsMediaconvertUpdatePresetOutput

  # mediaconvert.UpdateQueue
  UpdateQueue(input: AwsMediaconvertUpdateQueueInput!): AwsMediaconvertUpdateQueueOutput
}

input AwsMediaconvertCancelJobInput {
  Id: String!
}

input AwsMediaconvertCreateJobInput {
  ClientRequestToken: String
  JobTemplate: String
  Queue: String
  Role: String
  Settings: AwsMediaconvertS5Input
  UserMetadata: JSON
}

type AwsMediaconvertCreateJobOutput {
  Job: AwsMediaconvertS86
}

input AwsMediaconvertCreateJobTemplateInput {
  Category: String
  Description: String
  Name: String
  Queue: String
  Settings: AwsMediaconvertS8gInput
}

type AwsMediaconvertCreateJobTemplateOutput {
  JobTemplate: AwsMediaconvertS8k
}

input AwsMediaconvertCreatePresetInput {
  Category: String
  Description: String
  Name: String
  Settings: AwsMediaconvertS8nInput
}

type AwsMediaconvertCreatePresetOutput {
  Preset: AwsMediaconvertS8r
}

input AwsMediaconvertCreateQueueInput {
  Description: String
  Name: String
}

type AwsMediaconvertCreateQueueOutput {
  Queue: AwsMediaconvertS8u
}

input AwsMediaconvertDeleteJobTemplateInput {
  Name: String!
}

input AwsMediaconvertDeletePresetInput {
  Name: String!
}

input AwsMediaconvertDeleteQueueInput {
  Name: String!
}

input AwsMediaconvertDescribeEndpointsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaconvertDescribeEndpointsOutput {
  Endpoints: [AwsMediaconvertDescribeEndpointsOutputEndpoints]
  NextToken: String
}

type AwsMediaconvertDescribeEndpointsOutputEndpoints {
  Url: String
}

input AwsMediaconvertGetJobInput {
  Id: String!
}

type AwsMediaconvertGetJobOutput {
  Job: AwsMediaconvertS86
}

input AwsMediaconvertGetJobTemplateInput {
  Name: String!
}

type AwsMediaconvertGetJobTemplateOutput {
  JobTemplate: AwsMediaconvertS8k
}

input AwsMediaconvertGetPresetInput {
  Name: String!
}

type AwsMediaconvertGetPresetOutput {
  Preset: AwsMediaconvertS8r
}

input AwsMediaconvertGetQueueInput {
  Name: String!
}

type AwsMediaconvertGetQueueOutput {
  Queue: AwsMediaconvertS8u
}

input AwsMediaconvertListJobsInput {
  MaxResults: Int
  NextToken: String
  Order: String
  Queue: String
  Status: String
}

type AwsMediaconvertListJobsOutput {
  Jobs: [AwsMediaconvertS86]
  NextToken: String
}

input AwsMediaconvertListJobTemplatesInput {
  Category: String
  ListBy: String
  MaxResults: Int
  NextToken: String
  Order: String
}

type AwsMediaconvertListJobTemplatesOutput {
  JobTemplates: [AwsMediaconvertS8k]
  NextToken: String
}

input AwsMediaconvertListPresetsInput {
  Category: String
  ListBy: String
  MaxResults: Int
  NextToken: String
  Order: String
}

type AwsMediaconvertListPresetsOutput {
  NextToken: String
  Presets: [AwsMediaconvertS8r]
}

input AwsMediaconvertListQueuesInput {
  ListBy: String
  MaxResults: Int
  NextToken: String
  Order: String
}

type AwsMediaconvertListQueuesOutput {
  NextToken: String
  Queues: [AwsMediaconvertS8u]
}

type AwsMediaconvertS11 {
  EndTimecode: String
  StartTimecode: String
}

input AwsMediaconvertS11Input {
  EndTimecode: String
  StartTimecode: String
}

type AwsMediaconvertS15 {
  ColorSpace: String
  ColorSpaceUsage: String
  Hdr10Metadata: AwsMediaconvertS18
  Pid: Int
  ProgramNumber: Int
}

input AwsMediaconvertS15Input {
  ColorSpace: String
  ColorSpaceUsage: String
  Hdr10Metadata: AwsMediaconvertS18Input
  Pid: Int
  ProgramNumber: Int
}

type AwsMediaconvertS18 {
  BluePrimaryX: Int
  BluePrimaryY: Int
  GreenPrimaryX: Int
  GreenPrimaryY: Int
  MaxContentLightLevel: Int
  MaxFrameAverageLightLevel: Int
  MaxLuminance: Int
  MinLuminance: Int
  RedPrimaryX: Int
  RedPrimaryY: Int
  WhitePointX: Int
  WhitePointY: Int
}

input AwsMediaconvertS18Input {
  BluePrimaryX: Int
  BluePrimaryY: Int
  GreenPrimaryX: Int
  GreenPrimaryY: Int
  MaxContentLightLevel: Int
  MaxFrameAverageLightLevel: Int
  MaxLuminance: Int
  MinLuminance: Int
  RedPrimaryX: Int
  RedPrimaryY: Int
  WhitePointX: Int
  WhitePointY: Int
}

type AwsMediaconvertS19 {
  BreakoutCode: Int
  DistributorId: String
}

input AwsMediaconvertS19Input {
  BreakoutCode: Int
  DistributorId: String
}

type AwsMediaconvertS1a {
  CustomName: String
  Name: String
  OutputGroupSettings: AwsMediaconvertS1aOutputGroupSettings
  Outputs: [AwsMediaconvertS1aOutputs]
}

input AwsMediaconvertS1aInput {
  CustomName: String
  Name: String
  OutputGroupSettings: AwsMediaconvertS1aOutputGroupSettingsInput
  Outputs: [AwsMediaconvertS1aOutputsInput]
}

type AwsMediaconvertS1aOutputGroupSettings {
  DashIsoGroupSettings: AwsMediaconvertS1aOutputGroupSettingsDashIsoGroupSettings
  FileGroupSettings: AwsMediaconvertS1aOutputGroupSettingsFileGroupSettings
  HlsGroupSettings: AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettings
  MsSmoothGroupSettings: AwsMediaconvertS1aOutputGroupSettingsMsSmoothGroupSettings
  Type: String
}

type AwsMediaconvertS1aOutputGroupSettingsDashIsoGroupSettings {
  BaseUrl: String
  Destination: String
  Encryption: AwsMediaconvertS1aOutputGroupSettingsDashIsoGroupSettingsEncryption
  FragmentLength: Int
  HbbtvCompliance: String
  MinBufferTime: Int
  SegmentControl: String
  SegmentLength: Int
}

type AwsMediaconvertS1aOutputGroupSettingsDashIsoGroupSettingsEncryption {
  SpekeKeyProvider: AwsMediaconvertS1f
}

input AwsMediaconvertS1aOutputGroupSettingsDashIsoGroupSettingsEncryptionInput {
  SpekeKeyProvider: AwsMediaconvertS1fInput
}

input AwsMediaconvertS1aOutputGroupSettingsDashIsoGroupSettingsInput {
  BaseUrl: String
  Destination: String
  Encryption: AwsMediaconvertS1aOutputGroupSettingsDashIsoGroupSettingsEncryptionInput
  FragmentLength: Int
  HbbtvCompliance: String
  MinBufferTime: Int
  SegmentControl: String
  SegmentLength: Int
}

type AwsMediaconvertS1aOutputGroupSettingsFileGroupSettings {
  Destination: String
}

input AwsMediaconvertS1aOutputGroupSettingsFileGroupSettingsInput {
  Destination: String
}

type AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettings {
  AdMarkers: [String]
  BaseUrl: String
  CaptionLanguageMappings: [AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappings]
  CaptionLanguageSetting: String
  ClientCache: String
  CodecSpecification: String
  Destination: String
  DirectoryStructure: String
  Encryption: AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsEncryption
  ManifestCompression: String
  ManifestDurationFormat: String
  MinSegmentLength: Int
  OutputSelection: String
  ProgramDateTime: String
  ProgramDateTimePeriod: Int
  SegmentControl: String
  SegmentLength: Int
  SegmentsPerSubdirectory: Int
  StreamInfResolution: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
  TimestampDeltaMilliseconds: Int
}

type AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappings {
  CaptionChannel: Int
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsInput {
  CaptionChannel: Int
  LanguageCode: String
  LanguageDescription: String
}

type AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsEncryption {
  ConstantInitializationVector: String
  EncryptionMethod: String
  InitializationVectorInManifest: String
  SpekeKeyProvider: AwsMediaconvertS1f
  StaticKeyProvider: AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProvider
  Type: String
}

input AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsEncryptionInput {
  ConstantInitializationVector: String
  EncryptionMethod: String
  InitializationVectorInManifest: String
  SpekeKeyProvider: AwsMediaconvertS1fInput
  StaticKeyProvider: AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderInput
  Type: String
}

type AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProvider {
  KeyFormat: String
  KeyFormatVersions: String
  StaticKeyValue: String
  Url: String
}

input AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderInput {
  KeyFormat: String
  KeyFormatVersions: String
  StaticKeyValue: String
  Url: String
}

input AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsInput {
  AdMarkers: [String]
  BaseUrl: String
  CaptionLanguageMappings: [AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsInput]
  CaptionLanguageSetting: String
  ClientCache: String
  CodecSpecification: String
  Destination: String
  DirectoryStructure: String
  Encryption: AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsEncryptionInput
  ManifestCompression: String
  ManifestDurationFormat: String
  MinSegmentLength: Int
  OutputSelection: String
  ProgramDateTime: String
  ProgramDateTimePeriod: Int
  SegmentControl: String
  SegmentLength: Int
  SegmentsPerSubdirectory: Int
  StreamInfResolution: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
  TimestampDeltaMilliseconds: Int
}

input AwsMediaconvertS1aOutputGroupSettingsInput {
  DashIsoGroupSettings: AwsMediaconvertS1aOutputGroupSettingsDashIsoGroupSettingsInput
  FileGroupSettings: AwsMediaconvertS1aOutputGroupSettingsFileGroupSettingsInput
  HlsGroupSettings: AwsMediaconvertS1aOutputGroupSettingsHlsGroupSettingsInput
  MsSmoothGroupSettings: AwsMediaconvertS1aOutputGroupSettingsMsSmoothGroupSettingsInput
  Type: String
}

type AwsMediaconvertS1aOutputGroupSettingsMsSmoothGroupSettings {
  AudioDeduplication: String
  Destination: String
  Encryption: AwsMediaconvertS1aOutputGroupSettingsMsSmoothGroupSettingsEncryption
  FragmentLength: Int
  ManifestEncoding: String
}

type AwsMediaconvertS1aOutputGroupSettingsMsSmoothGroupSettingsEncryption {
  SpekeKeyProvider: AwsMediaconvertS1f
}

input AwsMediaconvertS1aOutputGroupSettingsMsSmoothGroupSettingsEncryptionInput {
  SpekeKeyProvider: AwsMediaconvertS1fInput
}

input AwsMediaconvertS1aOutputGroupSettingsMsSmoothGroupSettingsInput {
  AudioDeduplication: String
  Destination: String
  Encryption: AwsMediaconvertS1aOutputGroupSettingsMsSmoothGroupSettingsEncryptionInput
  FragmentLength: Int
  ManifestEncoding: String
}

type AwsMediaconvertS1aOutputs {
  AudioDescriptions: [AwsMediaconvertS2b]
  CaptionDescriptions: [AwsMediaconvertS1aOutputsCaptionDescriptions]
  ContainerSettings: AwsMediaconvertS46
  Extension: String
  NameModifier: String
  OutputSettings: AwsMediaconvertS1aOutputsOutputSettings
  Preset: String
  VideoDescription: AwsMediaconvertS57
}

type AwsMediaconvertS1aOutputsCaptionDescriptions {
  CaptionSelectorName: String
  DestinationSettings: AwsMediaconvertS3l
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaconvertS1aOutputsCaptionDescriptionsInput {
  CaptionSelectorName: String
  DestinationSettings: AwsMediaconvertS3lInput
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaconvertS1aOutputsInput {
  AudioDescriptions: [AwsMediaconvertS2bInput]
  CaptionDescriptions: [AwsMediaconvertS1aOutputsCaptionDescriptionsInput]
  ContainerSettings: AwsMediaconvertS46Input
  Extension: String
  NameModifier: String
  OutputSettings: AwsMediaconvertS1aOutputsOutputSettingsInput
  Preset: String
  VideoDescription: AwsMediaconvertS57Input
}

type AwsMediaconvertS1aOutputsOutputSettings {
  HlsSettings: AwsMediaconvertS1aOutputsOutputSettingsHlsSettings
}

type AwsMediaconvertS1aOutputsOutputSettingsHlsSettings {
  AudioGroupId: String
  AudioRenditionSets: String
  AudioTrackType: String
  IFrameOnlyManifest: String
  SegmentModifier: String
}

input AwsMediaconvertS1aOutputsOutputSettingsHlsSettingsInput {
  AudioGroupId: String
  AudioRenditionSets: String
  AudioTrackType: String
  IFrameOnlyManifest: String
  SegmentModifier: String
}

input AwsMediaconvertS1aOutputsOutputSettingsInput {
  HlsSettings: AwsMediaconvertS1aOutputsOutputSettingsHlsSettingsInput
}

type AwsMediaconvertS1f {
  ResourceId: String
  SystemIds: [String]
  Url: String
}

input AwsMediaconvertS1fInput {
  ResourceId: String
  SystemIds: [String]
  Url: String
}

type AwsMediaconvertS2b {
  AudioNormalizationSettings: AwsMediaconvertS2bAudioNormalizationSettings
  AudioSourceName: String
  AudioType: Int
  AudioTypeControl: String
  CodecSettings: AwsMediaconvertS2bCodecSettings
  LanguageCode: String
  LanguageCodeControl: String
  RemixSettings: AwsMediaconvertSi
  StreamName: String
}

type AwsMediaconvertS2bAudioNormalizationSettings {
  Algorithm: String
  AlgorithmControl: String
  CorrectionGateLevel: Int
  LoudnessLogging: String
  PeakCalculation: String
  TargetLkfs: JSON
}

input AwsMediaconvertS2bAudioNormalizationSettingsInput {
  Algorithm: String
  AlgorithmControl: String
  CorrectionGateLevel: Int
  LoudnessLogging: String
  PeakCalculation: String
  TargetLkfs: JSON
}

type AwsMediaconvertS2bCodecSettings {
  AacSettings: AwsMediaconvertS2bCodecSettingsAacSettings
  Ac3Settings: AwsMediaconvertS2bCodecSettingsAc3Settings
  AiffSettings: AwsMediaconvertS2bCodecSettingsAiffSettings
  Codec: String
  Eac3Settings: AwsMediaconvertS2bCodecSettingsEac3Settings
  Mp2Settings: AwsMediaconvertS2bCodecSettingsMp2Settings
  WavSettings: AwsMediaconvertS2bCodecSettingsWavSettings
}

type AwsMediaconvertS2bCodecSettingsAacSettings {
  AudioDescriptionBroadcasterMix: String
  Bitrate: Int
  CodecProfile: String
  CodingMode: String
  RateControlMode: String
  RawFormat: String
  SampleRate: Int
  Specification: String
  VbrQuality: String
}

input AwsMediaconvertS2bCodecSettingsAacSettingsInput {
  AudioDescriptionBroadcasterMix: String
  Bitrate: Int
  CodecProfile: String
  CodingMode: String
  RateControlMode: String
  RawFormat: String
  SampleRate: Int
  Specification: String
  VbrQuality: String
}

type AwsMediaconvertS2bCodecSettingsAc3Settings {
  Bitrate: Int
  BitstreamMode: String
  CodingMode: String
  Dialnorm: Int
  DynamicRangeCompressionProfile: String
  LfeFilter: String
  MetadataControl: String
  SampleRate: Int
}

input AwsMediaconvertS2bCodecSettingsAc3SettingsInput {
  Bitrate: Int
  BitstreamMode: String
  CodingMode: String
  Dialnorm: Int
  DynamicRangeCompressionProfile: String
  LfeFilter: String
  MetadataControl: String
  SampleRate: Int
}

type AwsMediaconvertS2bCodecSettingsAiffSettings {
  BitDepth: Int
  Channels: Int
  SampleRate: Int
}

input AwsMediaconvertS2bCodecSettingsAiffSettingsInput {
  BitDepth: Int
  Channels: Int
  SampleRate: Int
}

type AwsMediaconvertS2bCodecSettingsEac3Settings {
  AttenuationControl: String
  Bitrate: Int
  BitstreamMode: String
  CodingMode: String
  DcFilter: String
  Dialnorm: Int
  DynamicRangeCompressionLine: String
  DynamicRangeCompressionRf: String
  LfeControl: String
  LfeFilter: String
  LoRoCenterMixLevel: JSON
  LoRoSurroundMixLevel: JSON
  LtRtCenterMixLevel: JSON
  LtRtSurroundMixLevel: JSON
  MetadataControl: String
  PassthroughControl: String
  PhaseControl: String
  SampleRate: Int
  StereoDownmix: String
  SurroundExMode: String
  SurroundMode: String
}

input AwsMediaconvertS2bCodecSettingsEac3SettingsInput {
  AttenuationControl: String
  Bitrate: Int
  BitstreamMode: String
  CodingMode: String
  DcFilter: String
  Dialnorm: Int
  DynamicRangeCompressionLine: String
  DynamicRangeCompressionRf: String
  LfeControl: String
  LfeFilter: String
  LoRoCenterMixLevel: JSON
  LoRoSurroundMixLevel: JSON
  LtRtCenterMixLevel: JSON
  LtRtSurroundMixLevel: JSON
  MetadataControl: String
  PassthroughControl: String
  PhaseControl: String
  SampleRate: Int
  StereoDownmix: String
  SurroundExMode: String
  SurroundMode: String
}

input AwsMediaconvertS2bCodecSettingsInput {
  AacSettings: AwsMediaconvertS2bCodecSettingsAacSettingsInput
  Ac3Settings: AwsMediaconvertS2bCodecSettingsAc3SettingsInput
  AiffSettings: AwsMediaconvertS2bCodecSettingsAiffSettingsInput
  Codec: String
  Eac3Settings: AwsMediaconvertS2bCodecSettingsEac3SettingsInput
  Mp2Settings: AwsMediaconvertS2bCodecSettingsMp2SettingsInput
  WavSettings: AwsMediaconvertS2bCodecSettingsWavSettingsInput
}

type AwsMediaconvertS2bCodecSettingsMp2Settings {
  Bitrate: Int
  Channels: Int
  SampleRate: Int
}

input AwsMediaconvertS2bCodecSettingsMp2SettingsInput {
  Bitrate: Int
  Channels: Int
  SampleRate: Int
}

type AwsMediaconvertS2bCodecSettingsWavSettings {
  BitDepth: Int
  Channels: Int
  SampleRate: Int
}

input AwsMediaconvertS2bCodecSettingsWavSettingsInput {
  BitDepth: Int
  Channels: Int
  SampleRate: Int
}

input AwsMediaconvertS2bInput {
  AudioNormalizationSettings: AwsMediaconvertS2bAudioNormalizationSettingsInput
  AudioSourceName: String
  AudioType: Int
  AudioTypeControl: String
  CodecSettings: AwsMediaconvertS2bCodecSettingsInput
  LanguageCode: String
  LanguageCodeControl: String
  RemixSettings: AwsMediaconvertSiInput
  StreamName: String
}

type AwsMediaconvertS3l {
  BurninDestinationSettings: AwsMediaconvertS3lBurninDestinationSettings
  DestinationType: String
  DvbSubDestinationSettings: AwsMediaconvertS3lDvbSubDestinationSettings
  SccDestinationSettings: AwsMediaconvertS3lSccDestinationSettings
  TeletextDestinationSettings: AwsMediaconvertS3lTeletextDestinationSettings
  TtmlDestinationSettings: AwsMediaconvertS3lTtmlDestinationSettings
}

type AwsMediaconvertS3lBurninDestinationSettings {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: Int
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextSpacing: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaconvertS3lBurninDestinationSettingsInput {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: Int
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextSpacing: String
  XPosition: Int
  YPosition: Int
}

type AwsMediaconvertS3lDvbSubDestinationSettings {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: Int
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextSpacing: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaconvertS3lDvbSubDestinationSettingsInput {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: Int
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextSpacing: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaconvertS3lInput {
  BurninDestinationSettings: AwsMediaconvertS3lBurninDestinationSettingsInput
  DestinationType: String
  DvbSubDestinationSettings: AwsMediaconvertS3lDvbSubDestinationSettingsInput
  SccDestinationSettings: AwsMediaconvertS3lSccDestinationSettingsInput
  TeletextDestinationSettings: AwsMediaconvertS3lTeletextDestinationSettingsInput
  TtmlDestinationSettings: AwsMediaconvertS3lTtmlDestinationSettingsInput
}

type AwsMediaconvertS3lSccDestinationSettings {
  Framerate: String
}

input AwsMediaconvertS3lSccDestinationSettingsInput {
  Framerate: String
}

type AwsMediaconvertS3lTeletextDestinationSettings {
  PageNumber: String
}

input AwsMediaconvertS3lTeletextDestinationSettingsInput {
  PageNumber: String
}

type AwsMediaconvertS3lTtmlDestinationSettings {
  StylePassthrough: String
}

input AwsMediaconvertS3lTtmlDestinationSettingsInput {
  StylePassthrough: String
}

type AwsMediaconvertS46 {
  Container: String
  F4vSettings: AwsMediaconvertS46F4vSettings
  M2tsSettings: AwsMediaconvertS46M2tsSettings
  M3u8Settings: AwsMediaconvertS46M3u8Settings
  MovSettings: AwsMediaconvertS46MovSettings
  Mp4Settings: AwsMediaconvertS46Mp4Settings
}

type AwsMediaconvertS46F4vSettings {
  MoovPlacement: String
}

input AwsMediaconvertS46F4vSettingsInput {
  MoovPlacement: String
}

input AwsMediaconvertS46Input {
  Container: String
  F4vSettings: AwsMediaconvertS46F4vSettingsInput
  M2tsSettings: AwsMediaconvertS46M2tsSettingsInput
  M3u8Settings: AwsMediaconvertS46M3u8SettingsInput
  MovSettings: AwsMediaconvertS46MovSettingsInput
  Mp4Settings: AwsMediaconvertS46Mp4SettingsInput
}

type AwsMediaconvertS46M2tsSettings {
  AudioBufferModel: String
  AudioFramesPerPes: Int
  AudioPids: [Int]
  Bitrate: Int
  BufferModel: String
  DvbNitSettings: AwsMediaconvertS46M2tsSettingsDvbNitSettings
  DvbSdtSettings: AwsMediaconvertS46M2tsSettingsDvbSdtSettings
  DvbSubPids: [Int]
  DvbTdtSettings: AwsMediaconvertS46M2tsSettingsDvbTdtSettings
  DvbTeletextPid: Int
  EbpAudioInterval: String
  EbpPlacement: String
  EsRateInPes: String
  FragmentTime: JSON
  MaxPcrInterval: Int
  MinEbpInterval: Int
  NullPacketBitrate: JSON
  PatInterval: Int
  PcrControl: String
  PcrPid: Int
  PmtInterval: Int
  PmtPid: Int
  PrivateMetadataPid: Int
  ProgramNumber: Int
  RateMode: String
  Scte35Pid: Int
  Scte35Source: String
  SegmentationMarkers: String
  SegmentationStyle: String
  SegmentationTime: JSON
  TransportStreamId: Int
  VideoPid: Int
}

type AwsMediaconvertS46M2tsSettingsDvbNitSettings {
  NetworkId: Int
  NetworkName: String
  NitInterval: Int
}

input AwsMediaconvertS46M2tsSettingsDvbNitSettingsInput {
  NetworkId: Int
  NetworkName: String
  NitInterval: Int
}

type AwsMediaconvertS46M2tsSettingsDvbSdtSettings {
  OutputSdt: String
  SdtInterval: Int
  ServiceName: String
  ServiceProviderName: String
}

input AwsMediaconvertS46M2tsSettingsDvbSdtSettingsInput {
  OutputSdt: String
  SdtInterval: Int
  ServiceName: String
  ServiceProviderName: String
}

type AwsMediaconvertS46M2tsSettingsDvbTdtSettings {
  TdtInterval: Int
}

input AwsMediaconvertS46M2tsSettingsDvbTdtSettingsInput {
  TdtInterval: Int
}

input AwsMediaconvertS46M2tsSettingsInput {
  AudioBufferModel: String
  AudioFramesPerPes: Int
  AudioPids: [Int]
  Bitrate: Int
  BufferModel: String
  DvbNitSettings: AwsMediaconvertS46M2tsSettingsDvbNitSettingsInput
  DvbSdtSettings: AwsMediaconvertS46M2tsSettingsDvbSdtSettingsInput
  DvbSubPids: [Int]
  DvbTdtSettings: AwsMediaconvertS46M2tsSettingsDvbTdtSettingsInput
  DvbTeletextPid: Int
  EbpAudioInterval: String
  EbpPlacement: String
  EsRateInPes: String
  FragmentTime: JSON
  MaxPcrInterval: Int
  MinEbpInterval: Int
  NullPacketBitrate: JSON
  PatInterval: Int
  PcrControl: String
  PcrPid: Int
  PmtInterval: Int
  PmtPid: Int
  PrivateMetadataPid: Int
  ProgramNumber: Int
  RateMode: String
  Scte35Pid: Int
  Scte35Source: String
  SegmentationMarkers: String
  SegmentationStyle: String
  SegmentationTime: JSON
  TransportStreamId: Int
  VideoPid: Int
}

type AwsMediaconvertS46M3u8Settings {
  AudioFramesPerPes: Int
  AudioPids: [Int]
  PatInterval: Int
  PcrControl: String
  PcrPid: Int
  PmtInterval: Int
  PmtPid: Int
  PrivateMetadataPid: Int
  ProgramNumber: Int
  Scte35Pid: Int
  Scte35Source: String
  TimedMetadata: String
  TimedMetadataPid: Int
  TransportStreamId: Int
  VideoPid: Int
}

input AwsMediaconvertS46M3u8SettingsInput {
  AudioFramesPerPes: Int
  AudioPids: [Int]
  PatInterval: Int
  PcrControl: String
  PcrPid: Int
  PmtInterval: Int
  PmtPid: Int
  PrivateMetadataPid: Int
  ProgramNumber: Int
  Scte35Pid: Int
  Scte35Source: String
  TimedMetadata: String
  TimedMetadataPid: Int
  TransportStreamId: Int
  VideoPid: Int
}

type AwsMediaconvertS46MovSettings {
  ClapAtom: String
  CslgAtom: String
  Mpeg2FourCCControl: String
  PaddingControl: String
  Reference: String
}

input AwsMediaconvertS46MovSettingsInput {
  ClapAtom: String
  CslgAtom: String
  Mpeg2FourCCControl: String
  PaddingControl: String
  Reference: String
}

type AwsMediaconvertS46Mp4Settings {
  CslgAtom: String
  FreeSpaceBox: String
  MoovPlacement: String
  Mp4MajorBrand: String
}

input AwsMediaconvertS46Mp4SettingsInput {
  CslgAtom: String
  FreeSpaceBox: String
  MoovPlacement: String
  Mp4MajorBrand: String
}

type AwsMediaconvertS5 {
  AdAvailOffset: Int
  AvailBlanking: AwsMediaconvertS7
  Inputs: [AwsMediaconvertS5Inputs]
  NielsenConfiguration: AwsMediaconvertS19
  OutputGroups: [AwsMediaconvertS1a]
  TimecodeConfig: AwsMediaconvertS7z
  TimedMetadataInsertion: AwsMediaconvertS81
}

type AwsMediaconvertS57 {
  AfdSignaling: String
  AntiAlias: String
  CodecSettings: AwsMediaconvertS57CodecSettings
  ColorMetadata: String
  Crop: AwsMediaconvertS7e
  DropFrameTimecode: String
  FixedAfd: Int
  Height: Int
  Position: AwsMediaconvertS7e
  RespondToAfd: String
  ScalingBehavior: String
  Sharpness: Int
  TimecodeInsertion: String
  VideoPreprocessors: AwsMediaconvertS57VideoPreprocessors
  Width: Int
}

type AwsMediaconvertS57CodecSettings {
  Codec: String
  FrameCaptureSettings: AwsMediaconvertS57CodecSettingsFrameCaptureSettings
  H264Settings: AwsMediaconvertS57CodecSettingsH264Settings
  H265Settings: AwsMediaconvertS57CodecSettingsH265Settings
  Mpeg2Settings: AwsMediaconvertS57CodecSettingsMpeg2Settings
  ProresSettings: AwsMediaconvertS57CodecSettingsProresSettings
}

type AwsMediaconvertS57CodecSettingsFrameCaptureSettings {
  FramerateDenominator: Int
  FramerateNumerator: Int
  MaxCaptures: Int
  Quality: Int
}

input AwsMediaconvertS57CodecSettingsFrameCaptureSettingsInput {
  FramerateDenominator: Int
  FramerateNumerator: Int
  MaxCaptures: Int
  Quality: Int
}

type AwsMediaconvertS57CodecSettingsH264Settings {
  AdaptiveQuantization: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  EntropyEncoding: String
  FieldEncoding: String
  FlickerAdaptiveQuantization: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  NumberReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  RepeatPps: String
  SceneChangeDetect: String
  Slices: Int
  SlowPal: String
  Softness: Int
  SpatialAdaptiveQuantization: String
  Syntax: String
  Telecine: String
  TemporalAdaptiveQuantization: String
  UnregisteredSeiTimecode: String
}

input AwsMediaconvertS57CodecSettingsH264SettingsInput {
  AdaptiveQuantization: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  EntropyEncoding: String
  FieldEncoding: String
  FlickerAdaptiveQuantization: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  NumberReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  RepeatPps: String
  SceneChangeDetect: String
  Slices: Int
  SlowPal: String
  Softness: Int
  SpatialAdaptiveQuantization: String
  Syntax: String
  Telecine: String
  TemporalAdaptiveQuantization: String
  UnregisteredSeiTimecode: String
}

type AwsMediaconvertS57CodecSettingsH265Settings {
  AdaptiveQuantization: String
  AlternateTransferFunctionSei: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  FlickerAdaptiveQuantization: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  NumberReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  SampleAdaptiveOffsetFilterMode: String
  SceneChangeDetect: String
  Slices: Int
  SlowPal: String
  SpatialAdaptiveQuantization: String
  Telecine: String
  TemporalAdaptiveQuantization: String
  TemporalIds: String
  Tiles: String
  UnregisteredSeiTimecode: String
}

input AwsMediaconvertS57CodecSettingsH265SettingsInput {
  AdaptiveQuantization: String
  AlternateTransferFunctionSei: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  FlickerAdaptiveQuantization: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  NumberReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  SampleAdaptiveOffsetFilterMode: String
  SceneChangeDetect: String
  Slices: Int
  SlowPal: String
  SpatialAdaptiveQuantization: String
  Telecine: String
  TemporalAdaptiveQuantization: String
  TemporalIds: String
  Tiles: String
  UnregisteredSeiTimecode: String
}

input AwsMediaconvertS57CodecSettingsInput {
  Codec: String
  FrameCaptureSettings: AwsMediaconvertS57CodecSettingsFrameCaptureSettingsInput
  H264Settings: AwsMediaconvertS57CodecSettingsH264SettingsInput
  H265Settings: AwsMediaconvertS57CodecSettingsH265SettingsInput
  Mpeg2Settings: AwsMediaconvertS57CodecSettingsMpeg2SettingsInput
  ProresSettings: AwsMediaconvertS57CodecSettingsProresSettingsInput
}

type AwsMediaconvertS57CodecSettingsMpeg2Settings {
  AdaptiveQuantization: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  IntraDcPrecision: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  SceneChangeDetect: String
  SlowPal: String
  Softness: Int
  SpatialAdaptiveQuantization: String
  Syntax: String
  Telecine: String
  TemporalAdaptiveQuantization: String
}

input AwsMediaconvertS57CodecSettingsMpeg2SettingsInput {
  AdaptiveQuantization: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  IntraDcPrecision: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  SceneChangeDetect: String
  SlowPal: String
  Softness: Int
  SpatialAdaptiveQuantization: String
  Syntax: String
  Telecine: String
  TemporalAdaptiveQuantization: String
}

type AwsMediaconvertS57CodecSettingsProresSettings {
  CodecProfile: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  InterlaceMode: String
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  SlowPal: String
  Telecine: String
}

input AwsMediaconvertS57CodecSettingsProresSettingsInput {
  CodecProfile: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  InterlaceMode: String
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  SlowPal: String
  Telecine: String
}

input AwsMediaconvertS57Input {
  AfdSignaling: String
  AntiAlias: String
  CodecSettings: AwsMediaconvertS57CodecSettingsInput
  ColorMetadata: String
  Crop: AwsMediaconvertS7eInput
  DropFrameTimecode: String
  FixedAfd: Int
  Height: Int
  Position: AwsMediaconvertS7eInput
  RespondToAfd: String
  ScalingBehavior: String
  Sharpness: Int
  TimecodeInsertion: String
  VideoPreprocessors: AwsMediaconvertS57VideoPreprocessorsInput
  Width: Int
}

type AwsMediaconvertS57VideoPreprocessors {
  ColorCorrector: AwsMediaconvertS57VideoPreprocessorsColorCorrector
  Deinterlacer: AwsMediaconvertS57VideoPreprocessorsDeinterlacer
  ImageInserter: AwsMediaconvertS57VideoPreprocessorsImageInserter
  NoiseReducer: AwsMediaconvertS57VideoPreprocessorsNoiseReducer
  TimecodeBurnin: AwsMediaconvertS57VideoPreprocessorsTimecodeBurnin
}

type AwsMediaconvertS57VideoPreprocessorsColorCorrector {
  Brightness: Int
  ColorSpaceConversion: String
  Contrast: Int
  Hdr10Metadata: AwsMediaconvertS18
  Hue: Int
  Saturation: Int
}

input AwsMediaconvertS57VideoPreprocessorsColorCorrectorInput {
  Brightness: Int
  ColorSpaceConversion: String
  Contrast: Int
  Hdr10Metadata: AwsMediaconvertS18Input
  Hue: Int
  Saturation: Int
}

type AwsMediaconvertS57VideoPreprocessorsDeinterlacer {
  Algorithm: String
  Control: String
  Mode: String
}

input AwsMediaconvertS57VideoPreprocessorsDeinterlacerInput {
  Algorithm: String
  Control: String
  Mode: String
}

type AwsMediaconvertS57VideoPreprocessorsImageInserter {
  InsertableImages: [AwsMediaconvertS57VideoPreprocessorsImageInserterInsertableImages]
}

input AwsMediaconvertS57VideoPreprocessorsImageInserterInput {
  InsertableImages: [AwsMediaconvertS57VideoPreprocessorsImageInserterInsertableImagesInput]
}

type AwsMediaconvertS57VideoPreprocessorsImageInserterInsertableImages {
  Duration: Int
  FadeIn: Int
  FadeOut: Int
  Height: Int
  ImageInserterInput: String
  ImageX: Int
  ImageY: Int
  Layer: Int
  Opacity: Int
  StartTime: String
  Width: Int
}

input AwsMediaconvertS57VideoPreprocessorsImageInserterInsertableImagesInput {
  Duration: Int
  FadeIn: Int
  FadeOut: Int
  Height: Int
  ImageInserterInput: String
  ImageX: Int
  ImageY: Int
  Layer: Int
  Opacity: Int
  StartTime: String
  Width: Int
}

input AwsMediaconvertS57VideoPreprocessorsInput {
  ColorCorrector: AwsMediaconvertS57VideoPreprocessorsColorCorrectorInput
  Deinterlacer: AwsMediaconvertS57VideoPreprocessorsDeinterlacerInput
  ImageInserter: AwsMediaconvertS57VideoPreprocessorsImageInserterInput
  NoiseReducer: AwsMediaconvertS57VideoPreprocessorsNoiseReducerInput
  TimecodeBurnin: AwsMediaconvertS57VideoPreprocessorsTimecodeBurninInput
}

type AwsMediaconvertS57VideoPreprocessorsNoiseReducer {
  Filter: String
  FilterSettings: AwsMediaconvertS57VideoPreprocessorsNoiseReducerFilterSettings
  SpatialFilterSettings: AwsMediaconvertS57VideoPreprocessorsNoiseReducerSpatialFilterSettings
}

type AwsMediaconvertS57VideoPreprocessorsNoiseReducerFilterSettings {
  Strength: Int
}

input AwsMediaconvertS57VideoPreprocessorsNoiseReducerFilterSettingsInput {
  Strength: Int
}

input AwsMediaconvertS57VideoPreprocessorsNoiseReducerInput {
  Filter: String
  FilterSettings: AwsMediaconvertS57VideoPreprocessorsNoiseReducerFilterSettingsInput
  SpatialFilterSettings: AwsMediaconvertS57VideoPreprocessorsNoiseReducerSpatialFilterSettingsInput
}

type AwsMediaconvertS57VideoPreprocessorsNoiseReducerSpatialFilterSettings {
  PostFilterSharpenStrength: Int
  Speed: Int
  Strength: Int
}

input AwsMediaconvertS57VideoPreprocessorsNoiseReducerSpatialFilterSettingsInput {
  PostFilterSharpenStrength: Int
  Speed: Int
  Strength: Int
}

type AwsMediaconvertS57VideoPreprocessorsTimecodeBurnin {
  FontSize: Int
  Position: String
  Prefix: String
}

input AwsMediaconvertS57VideoPreprocessorsTimecodeBurninInput {
  FontSize: Int
  Position: String
  Prefix: String
}

input AwsMediaconvertS5Input {
  AdAvailOffset: Int
  AvailBlanking: AwsMediaconvertS7Input
  Inputs: [AwsMediaconvertS5InputsInput]
  NielsenConfiguration: AwsMediaconvertS19Input
  OutputGroups: [AwsMediaconvertS1aInput]
  TimecodeConfig: AwsMediaconvertS7zInput
  TimedMetadataInsertion: AwsMediaconvertS81Input
}

type AwsMediaconvertS5Inputs {
  AudioSelectorGroups: JSON
  AudioSelectors: JSON
  CaptionSelectors: JSON
  DeblockFilter: String
  DenoiseFilter: String
  FileInput: String
  FilterEnable: String
  FilterStrength: Int
  InputClippings: [AwsMediaconvertS11]
  ProgramNumber: Int
  PsiControl: String
  TimecodeSource: String
  VideoSelector: AwsMediaconvertS15
}

input AwsMediaconvertS5InputsInput {
  AudioSelectorGroups: JSON
  AudioSelectors: JSON
  CaptionSelectors: JSON
  DeblockFilter: String
  DenoiseFilter: String
  FileInput: String
  FilterEnable: String
  FilterStrength: Int
  InputClippings: [AwsMediaconvertS11Input]
  ProgramNumber: Int
  PsiControl: String
  TimecodeSource: String
  VideoSelector: AwsMediaconvertS15Input
}

type AwsMediaconvertS7 {
  AvailBlankingImage: String
}

type AwsMediaconvertS7e {
  Height: Int
  Width: Int
  X: Int
  Y: Int
}

input AwsMediaconvertS7eInput {
  Height: Int
  Width: Int
  X: Int
  Y: Int
}

input AwsMediaconvertS7Input {
  AvailBlankingImage: String
}

type AwsMediaconvertS7z {
  Anchor: String
  Source: String
  Start: String
  TimestampOffset: String
}

input AwsMediaconvertS7zInput {
  Anchor: String
  Source: String
  Start: String
  TimestampOffset: String
}

type AwsMediaconvertS81 {
  Id3Insertions: [AwsMediaconvertS81Id3Insertions]
}

type AwsMediaconvertS81Id3Insertions {
  Id3: String
  Timecode: String
}

input AwsMediaconvertS81Id3InsertionsInput {
  Id3: String
  Timecode: String
}

input AwsMediaconvertS81Input {
  Id3Insertions: [AwsMediaconvertS81Id3InsertionsInput]
}

type AwsMediaconvertS86 {
  Arn: String
  CreatedAt: Date
  ErrorCode: Int
  ErrorMessage: String
  Id: String
  JobTemplate: String
  OutputGroupDetails: [AwsMediaconvertS86OutputGroupDetails]
  Queue: String
  Role: String
  Settings: AwsMediaconvertS5
  Status: String
  Timing: AwsMediaconvertS86Timing
  UserMetadata: JSON
}

type AwsMediaconvertS86OutputGroupDetails {
  OutputDetails: [AwsMediaconvertS86OutputGroupDetailsOutputDetails]
}

type AwsMediaconvertS86OutputGroupDetailsOutputDetails {
  DurationInMs: Int
  VideoDetails: AwsMediaconvertS86OutputGroupDetailsOutputDetailsVideoDetails
}

type AwsMediaconvertS86OutputGroupDetailsOutputDetailsVideoDetails {
  HeightInPx: Int
  WidthInPx: Int
}

type AwsMediaconvertS86Timing {
  FinishTime: Date
  StartTime: Date
  SubmitTime: Date
}

type AwsMediaconvertS8g {
  AdAvailOffset: Int
  AvailBlanking: AwsMediaconvertS7
  Inputs: [AwsMediaconvertS8gInputs]
  NielsenConfiguration: AwsMediaconvertS19
  OutputGroups: [AwsMediaconvertS1a]
  TimecodeConfig: AwsMediaconvertS7z
  TimedMetadataInsertion: AwsMediaconvertS81
}

input AwsMediaconvertS8gInput {
  AdAvailOffset: Int
  AvailBlanking: AwsMediaconvertS7Input
  Inputs: [AwsMediaconvertS8gInputsInput]
  NielsenConfiguration: AwsMediaconvertS19Input
  OutputGroups: [AwsMediaconvertS1aInput]
  TimecodeConfig: AwsMediaconvertS7zInput
  TimedMetadataInsertion: AwsMediaconvertS81Input
}

type AwsMediaconvertS8gInputs {
  AudioSelectorGroups: JSON
  AudioSelectors: JSON
  CaptionSelectors: JSON
  DeblockFilter: String
  DenoiseFilter: String
  FilterEnable: String
  FilterStrength: Int
  InputClippings: [AwsMediaconvertS11]
  ProgramNumber: Int
  PsiControl: String
  TimecodeSource: String
  VideoSelector: AwsMediaconvertS15
}

input AwsMediaconvertS8gInputsInput {
  AudioSelectorGroups: JSON
  AudioSelectors: JSON
  CaptionSelectors: JSON
  DeblockFilter: String
  DenoiseFilter: String
  FilterEnable: String
  FilterStrength: Int
  InputClippings: [AwsMediaconvertS11Input]
  ProgramNumber: Int
  PsiControl: String
  TimecodeSource: String
  VideoSelector: AwsMediaconvertS15Input
}

type AwsMediaconvertS8k {
  Arn: String
  Category: String
  CreatedAt: Date
  Description: String
  LastUpdated: Date
  Name: String
  Queue: String
  Settings: AwsMediaconvertS8g
  Type: String
}

type AwsMediaconvertS8n {
  AudioDescriptions: [AwsMediaconvertS2b]
  CaptionDescriptions: [AwsMediaconvertS8nCaptionDescriptions]
  ContainerSettings: AwsMediaconvertS46
  VideoDescription: AwsMediaconvertS57
}

type AwsMediaconvertS8nCaptionDescriptions {
  DestinationSettings: AwsMediaconvertS3l
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaconvertS8nCaptionDescriptionsInput {
  DestinationSettings: AwsMediaconvertS3lInput
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaconvertS8nInput {
  AudioDescriptions: [AwsMediaconvertS2bInput]
  CaptionDescriptions: [AwsMediaconvertS8nCaptionDescriptionsInput]
  ContainerSettings: AwsMediaconvertS46Input
  VideoDescription: AwsMediaconvertS57Input
}

type AwsMediaconvertS8r {
  Arn: String
  Category: String
  CreatedAt: Date
  Description: String
  LastUpdated: Date
  Name: String
  Settings: AwsMediaconvertS8n
  Type: String
}

type AwsMediaconvertS8u {
  Arn: String
  CreatedAt: Date
  Description: String
  LastUpdated: Date
  Name: String
  Status: String
  Type: String
}

type AwsMediaconvertSi {
  ChannelMapping: AwsMediaconvertSiChannelMapping
  ChannelsIn: Int
  ChannelsOut: Int
}

type AwsMediaconvertSiChannelMapping {
  OutputChannels: [AwsMediaconvertSiChannelMappingOutputChannels]
}

input AwsMediaconvertSiChannelMappingInput {
  OutputChannels: [AwsMediaconvertSiChannelMappingOutputChannelsInput]
}

type AwsMediaconvertSiChannelMappingOutputChannels {
  InputChannels: [Int]
}

input AwsMediaconvertSiChannelMappingOutputChannelsInput {
  InputChannels: [Int]
}

input AwsMediaconvertSiInput {
  ChannelMapping: AwsMediaconvertSiChannelMappingInput
  ChannelsIn: Int
  ChannelsOut: Int
}

input AwsMediaconvertUpdateJobTemplateInput {
  Category: String
  Description: String
  Name: String!
  Queue: String
  Settings: AwsMediaconvertS8gInput
}

type AwsMediaconvertUpdateJobTemplateOutput {
  JobTemplate: AwsMediaconvertS8k
}

input AwsMediaconvertUpdatePresetInput {
  Category: String
  Description: String
  Name: String!
  Settings: AwsMediaconvertS8nInput
}

type AwsMediaconvertUpdatePresetOutput {
  Preset: AwsMediaconvertS8r
}

input AwsMediaconvertUpdateQueueInput {
  Description: String
  Name: String!
  Status: String
}

type AwsMediaconvertUpdateQueueOutput {
  Queue: AwsMediaconvertS8u
}

# AWS Elemental MediaLive (2017-10-14)
type AwsMedialive {
  # medialive.CreateChannel
  CreateChannel(input: AwsMedialiveCreateChannelInput): AwsMedialiveCreateChannelOutput

  # medialive.CreateInput
  CreateInput(input: AwsMedialiveCreateInputInput): AwsMedialiveCreateInputOutput

  # medialive.CreateInputSecurityGroup
  CreateInputSecurityGroup(input: AwsMedialiveCreateInputSecurityGroupInput): AwsMedialiveCreateInputSecurityGroupOutput

  # medialive.DeleteChannel
  DeleteChannel(input: AwsMedialiveDeleteChannelInput!): AwsMedialiveDeleteChannelOutput

  # medialive.DeleteInput
  DeleteInput(input: AwsMedialiveDeleteInputInput!): JSON

  # medialive.DeleteInputSecurityGroup
  DeleteInputSecurityGroup(input: AwsMedialiveDeleteInputSecurityGroupInput!): JSON

  # medialive.DescribeChannel
  DescribeChannel(input: AwsMedialiveDescribeChannelInput!): AwsMedialiveDescribeChannelOutput

  # medialive.DescribeInput
  DescribeInput(input: AwsMedialiveDescribeInputInput!): AwsMedialiveDescribeInputOutput

  # medialive.DescribeInputSecurityGroup
  DescribeInputSecurityGroup(input: AwsMedialiveDescribeInputSecurityGroupInput!): AwsMedialiveDescribeInputSecurityGroupOutput

  # medialive.ListChannels
  ListChannels(input: AwsMedialiveListChannelsInput): AwsMedialiveListChannelsOutput

  # medialive.ListInputSecurityGroups
  ListInputSecurityGroups(input: AwsMedialiveListInputSecurityGroupsInput): AwsMedialiveListInputSecurityGroupsOutput

  # medialive.ListInputs
  ListInputs(input: AwsMedialiveListInputsInput): AwsMedialiveListInputsOutput

  # medialive.StartChannel
  StartChannel(input: AwsMedialiveStartChannelInput!): AwsMedialiveStartChannelOutput

  # medialive.StopChannel
  StopChannel(input: AwsMedialiveStopChannelInput!): AwsMedialiveStopChannelOutput
}

input AwsMedialiveCreateChannelInput {
  Destinations: [AwsMedialiveS2Input]
  EncoderSettings: AwsMedialiveS7Input
  InputAttachments: [AwsMedialiveS68Input]
  Name: String
  RequestId: String
  Reserved: String
  RoleArn: String
}

type AwsMedialiveCreateChannelOutput {
  Channel: AwsMedialiveCreateChannelOutputChannel
}

type AwsMedialiveCreateChannelOutputChannel {
  Arn: String
  Destinations: [AwsMedialiveS2]
  EgressEndpoints: [AwsMedialiveS78]
  EncoderSettings: AwsMedialiveS7
  Id: String
  InputAttachments: [AwsMedialiveS68]
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
}

input AwsMedialiveCreateInputDestinationsInput {
  StreamName: String
}

input AwsMedialiveCreateInputInput {
  Destinations: [AwsMedialiveCreateInputDestinationsInput]
  InputSecurityGroups: [String]
  Name: String
  RequestId: String
  Sources: [AwsMedialiveCreateInputSourcesInput]
  Type: String
}

type AwsMedialiveCreateInputOutput {
  Input: AwsMedialiveS7i
}

input AwsMedialiveCreateInputSecurityGroupInput {
  WhitelistRules: [AwsMedialiveCreateInputSecurityGroupWhitelistRulesInput]
}

type AwsMedialiveCreateInputSecurityGroupOutput {
  SecurityGroup: AwsMedialiveS7s
}

input AwsMedialiveCreateInputSecurityGroupWhitelistRulesInput {
  Cidr: String
}

input AwsMedialiveCreateInputSourcesInput {
  PasswordParam: String
  Url: String
  Username: String
}

input AwsMedialiveDeleteChannelInput {
  ChannelId: String!
}

type AwsMedialiveDeleteChannelOutput {
  Arn: String
  Destinations: [AwsMedialiveS2]
  EgressEndpoints: [AwsMedialiveS78]
  EncoderSettings: AwsMedialiveS7
  Id: String
  InputAttachments: [AwsMedialiveS68]
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
}

input AwsMedialiveDeleteInputInput {
  InputId: String!
}

input AwsMedialiveDeleteInputSecurityGroupInput {
  InputSecurityGroupId: String!
}

input AwsMedialiveDescribeChannelInput {
  ChannelId: String!
}

type AwsMedialiveDescribeChannelOutput {
  Arn: String
  Destinations: [AwsMedialiveS2]
  EgressEndpoints: [AwsMedialiveS78]
  EncoderSettings: AwsMedialiveS7
  Id: String
  InputAttachments: [AwsMedialiveS68]
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
}

input AwsMedialiveDescribeInputInput {
  InputId: String!
}

type AwsMedialiveDescribeInputOutput {
  Arn: String
  AttachedChannels: [String]
  Destinations: [AwsMedialiveS7j]
  Id: String
  Name: String
  SecurityGroups: [String]
  Sources: [AwsMedialiveS7l]
  State: String
  Type: String
}

input AwsMedialiveDescribeInputSecurityGroupInput {
  InputSecurityGroupId: String!
}

type AwsMedialiveDescribeInputSecurityGroupOutput {
  Arn: String
  Id: String
  WhitelistRules: [AwsMedialiveS7t]
}

input AwsMedialiveListChannelsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMedialiveListChannelsOutput {
  Channels: [AwsMedialiveListChannelsOutputChannels]
  NextToken: String
}

type AwsMedialiveListChannelsOutputChannels {
  Arn: String
  Destinations: [AwsMedialiveS2]
  EgressEndpoints: [AwsMedialiveS78]
  Id: String
  InputAttachments: [AwsMedialiveS68]
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
}

input AwsMedialiveListInputSecurityGroupsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMedialiveListInputSecurityGroupsOutput {
  InputSecurityGroups: [AwsMedialiveS7s]
  NextToken: String
}

input AwsMedialiveListInputsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMedialiveListInputsOutput {
  Inputs: [AwsMedialiveS7i]
  NextToken: String
}

type AwsMedialiveS1l {
  PasswordParam: String
  Uri: String
  Username: String
}

input AwsMedialiveS1lInput {
  PasswordParam: String
  Uri: String
  Username: String
}

type AwsMedialiveS2 {
  Id: String
  Settings: [AwsMedialiveS2Settings]
}

input AwsMedialiveS2Input {
  Id: String
  Settings: [AwsMedialiveS2SettingsInput]
}

type AwsMedialiveS2Settings {
  PasswordParam: String
  Url: String
  Username: String
}

input AwsMedialiveS2SettingsInput {
  PasswordParam: String
  Url: String
  Username: String
}

type AwsMedialiveS2z {
  DestinationRefId: String
}

input AwsMedialiveS2zInput {
  DestinationRefId: String
}

type AwsMedialiveS4f {
  AbsentInputAudioBehavior: String
  Arib: String
  AribCaptionsPid: String
  AribCaptionsPidControl: String
  AudioBufferModel: String
  AudioFramesPerPes: Int
  AudioPids: String
  AudioStreamType: String
  Bitrate: Int
  BufferModel: String
  CcDescriptor: String
  DvbNitSettings: AwsMedialiveS4fDvbNitSettings
  DvbSdtSettings: AwsMedialiveS4fDvbSdtSettings
  DvbSubPids: String
  DvbTdtSettings: AwsMedialiveS4fDvbTdtSettings
  DvbTeletextPid: String
  Ebif: String
  EbpAudioInterval: String
  EbpLookaheadMs: Int
  EbpPlacement: String
  EcmPid: String
  EsRateInPes: String
  EtvPlatformPid: String
  EtvSignalPid: String
  FragmentTime: JSON
  Klv: String
  KlvDataPids: String
  NullPacketBitrate: JSON
  PatInterval: Int
  PcrControl: String
  PcrPeriod: Int
  PcrPid: String
  PmtInterval: Int
  PmtPid: String
  ProgramNum: Int
  RateMode: String
  Scte27Pids: String
  Scte35Control: String
  Scte35Pid: String
  SegmentationMarkers: String
  SegmentationStyle: String
  SegmentationTime: JSON
  TimedMetadataBehavior: String
  TimedMetadataPid: String
  TransportStreamId: Int
  VideoPid: String
}

type AwsMedialiveS4fDvbNitSettings {
  NetworkId: Int
  NetworkName: String
  RepInterval: Int
}

input AwsMedialiveS4fDvbNitSettingsInput {
  NetworkId: Int
  NetworkName: String
  RepInterval: Int
}

type AwsMedialiveS4fDvbSdtSettings {
  OutputSdt: String
  RepInterval: Int
  ServiceName: String
  ServiceProviderName: String
}

input AwsMedialiveS4fDvbSdtSettingsInput {
  OutputSdt: String
  RepInterval: Int
  ServiceName: String
  ServiceProviderName: String
}

type AwsMedialiveS4fDvbTdtSettings {
  RepInterval: Int
}

input AwsMedialiveS4fDvbTdtSettingsInput {
  RepInterval: Int
}

input AwsMedialiveS4fInput {
  AbsentInputAudioBehavior: String
  Arib: String
  AribCaptionsPid: String
  AribCaptionsPidControl: String
  AudioBufferModel: String
  AudioFramesPerPes: Int
  AudioPids: String
  AudioStreamType: String
  Bitrate: Int
  BufferModel: String
  CcDescriptor: String
  DvbNitSettings: AwsMedialiveS4fDvbNitSettingsInput
  DvbSdtSettings: AwsMedialiveS4fDvbSdtSettingsInput
  DvbSubPids: String
  DvbTdtSettings: AwsMedialiveS4fDvbTdtSettingsInput
  DvbTeletextPid: String
  Ebif: String
  EbpAudioInterval: String
  EbpLookaheadMs: Int
  EbpPlacement: String
  EcmPid: String
  EsRateInPes: String
  EtvPlatformPid: String
  EtvSignalPid: String
  FragmentTime: JSON
  Klv: String
  KlvDataPids: String
  NullPacketBitrate: JSON
  PatInterval: Int
  PcrControl: String
  PcrPeriod: Int
  PcrPid: String
  PmtInterval: Int
  PmtPid: String
  ProgramNum: Int
  RateMode: String
  Scte27Pids: String
  Scte35Control: String
  Scte35Pid: String
  SegmentationMarkers: String
  SegmentationStyle: String
  SegmentationTime: JSON
  TimedMetadataBehavior: String
  TimedMetadataPid: String
  TransportStreamId: Int
  VideoPid: String
}

type AwsMedialiveS68 {
  InputId: String
  InputSettings: AwsMedialiveS68InputSettings
}

input AwsMedialiveS68Input {
  InputId: String
  InputSettings: AwsMedialiveS68InputSettingsInput
}

type AwsMedialiveS68InputSettings {
  AudioSelectors: [AwsMedialiveS68InputSettingsAudioSelectors]
  CaptionSelectors: [AwsMedialiveS68InputSettingsCaptionSelectors]
  DeblockFilter: String
  DenoiseFilter: String
  FilterStrength: Int
  InputFilter: String
  NetworkInputSettings: AwsMedialiveS68InputSettingsNetworkInputSettings
  SourceEndBehavior: String
  VideoSelector: AwsMedialiveS68InputSettingsVideoSelector
}

type AwsMedialiveS68InputSettingsAudioSelectors {
  Name: String
  SelectorSettings: AwsMedialiveS68InputSettingsAudioSelectorsSelectorSettings
}

input AwsMedialiveS68InputSettingsAudioSelectorsInput {
  Name: String
  SelectorSettings: AwsMedialiveS68InputSettingsAudioSelectorsSelectorSettingsInput
}

type AwsMedialiveS68InputSettingsAudioSelectorsSelectorSettings {
  AudioLanguageSelection: AwsMedialiveS68InputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelection
  AudioPidSelection: AwsMedialiveS68InputSettingsAudioSelectorsSelectorSettingsAudioPidSelection
}

type AwsMedialiveS68InputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelection {
  LanguageCode: String
  LanguageSelectionPolicy: String
}

input AwsMedialiveS68InputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionInput {
  LanguageCode: String
  LanguageSelectionPolicy: String
}

type AwsMedialiveS68InputSettingsAudioSelectorsSelectorSettingsAudioPidSelection {
  Pid: Int
}

input AwsMedialiveS68InputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionInput {
  Pid: Int
}

input AwsMedialiveS68InputSettingsAudioSelectorsSelectorSettingsInput {
  AudioLanguageSelection: AwsMedialiveS68InputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionInput
  AudioPidSelection: AwsMedialiveS68InputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionInput
}

type AwsMedialiveS68InputSettingsCaptionSelectors {
  LanguageCode: String
  Name: String
  SelectorSettings: AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettings
}

input AwsMedialiveS68InputSettingsCaptionSelectorsInput {
  LanguageCode: String
  Name: String
  SelectorSettings: AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsInput
}

type AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettings {
  AribSourceSettings: JSON
  DvbSubSourceSettings: AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettings
  EmbeddedSourceSettings: AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettings
  Scte20SourceSettings: AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettings
  Scte27SourceSettings: AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettings
  TeletextSourceSettings: AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettings
}

type AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettings {
  Pid: Int
}

input AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsInput {
  Pid: Int
}

type AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettings {
  Convert608To708: String
  Scte20Detection: String
  Source608ChannelNumber: Int
  Source608TrackNumber: Int
}

input AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsInput {
  Convert608To708: String
  Scte20Detection: String
  Source608ChannelNumber: Int
  Source608TrackNumber: Int
}

input AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsInput {
  AribSourceSettings: JSON
  DvbSubSourceSettings: AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsInput
  EmbeddedSourceSettings: AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsInput
  Scte20SourceSettings: AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsInput
  Scte27SourceSettings: AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsInput
  TeletextSourceSettings: AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsInput
}

type AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettings {
  Convert608To708: String
  Source608ChannelNumber: Int
}

input AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsInput {
  Convert608To708: String
  Source608ChannelNumber: Int
}

type AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettings {
  Pid: Int
}

input AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsInput {
  Pid: Int
}

type AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettings {
  PageNumber: String
}

input AwsMedialiveS68InputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsInput {
  PageNumber: String
}

input AwsMedialiveS68InputSettingsInput {
  AudioSelectors: [AwsMedialiveS68InputSettingsAudioSelectorsInput]
  CaptionSelectors: [AwsMedialiveS68InputSettingsCaptionSelectorsInput]
  DeblockFilter: String
  DenoiseFilter: String
  FilterStrength: Int
  InputFilter: String
  NetworkInputSettings: AwsMedialiveS68InputSettingsNetworkInputSettingsInput
  SourceEndBehavior: String
  VideoSelector: AwsMedialiveS68InputSettingsVideoSelectorInput
}

type AwsMedialiveS68InputSettingsNetworkInputSettings {
  HlsInputSettings: AwsMedialiveS68InputSettingsNetworkInputSettingsHlsInputSettings
  ServerValidation: String
}

type AwsMedialiveS68InputSettingsNetworkInputSettingsHlsInputSettings {
  Bandwidth: Int
  BufferSegments: Int
  Retries: Int
  RetryInterval: Int
}

input AwsMedialiveS68InputSettingsNetworkInputSettingsHlsInputSettingsInput {
  Bandwidth: Int
  BufferSegments: Int
  Retries: Int
  RetryInterval: Int
}

input AwsMedialiveS68InputSettingsNetworkInputSettingsInput {
  HlsInputSettings: AwsMedialiveS68InputSettingsNetworkInputSettingsHlsInputSettingsInput
  ServerValidation: String
}

type AwsMedialiveS68InputSettingsVideoSelector {
  ColorSpace: String
  ColorSpaceUsage: String
  SelectorSettings: AwsMedialiveS68InputSettingsVideoSelectorSelectorSettings
}

input AwsMedialiveS68InputSettingsVideoSelectorInput {
  ColorSpace: String
  ColorSpaceUsage: String
  SelectorSettings: AwsMedialiveS68InputSettingsVideoSelectorSelectorSettingsInput
}

type AwsMedialiveS68InputSettingsVideoSelectorSelectorSettings {
  VideoSelectorPid: AwsMedialiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorPid
  VideoSelectorProgramId: AwsMedialiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramId
}

input AwsMedialiveS68InputSettingsVideoSelectorSelectorSettingsInput {
  VideoSelectorPid: AwsMedialiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorPidInput
  VideoSelectorProgramId: AwsMedialiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdInput
}

type AwsMedialiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorPid {
  Pid: Int
}

input AwsMedialiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorPidInput {
  Pid: Int
}

type AwsMedialiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramId {
  ProgramId: Int
}

input AwsMedialiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdInput {
  ProgramId: Int
}

type AwsMedialiveS7 {
  AudioDescriptions: [AwsMedialiveS7AudioDescriptions]
  AvailBlanking: AwsMedialiveS7AvailBlanking
  AvailConfiguration: AwsMedialiveS7AvailConfiguration
  BlackoutSlate: AwsMedialiveS7BlackoutSlate
  CaptionDescriptions: [AwsMedialiveS7CaptionDescriptions]
  GlobalConfiguration: AwsMedialiveS7GlobalConfiguration
  OutputGroups: [AwsMedialiveS7OutputGroups]
  TimecodeConfig: AwsMedialiveS7TimecodeConfig
  VideoDescriptions: [AwsMedialiveS7VideoDescriptions]
}

type AwsMedialiveS78 {
  SourceIp: String
}

type AwsMedialiveS7AudioDescriptions {
  AudioNormalizationSettings: AwsMedialiveS7AudioDescriptionsAudioNormalizationSettings
  AudioSelectorName: String
  AudioType: String
  AudioTypeControl: String
  CodecSettings: AwsMedialiveS7AudioDescriptionsCodecSettings
  LanguageCode: String
  LanguageCodeControl: String
  Name: String
  RemixSettings: AwsMedialiveS7AudioDescriptionsRemixSettings
  StreamName: String
}

type AwsMedialiveS7AudioDescriptionsAudioNormalizationSettings {
  Algorithm: String
  AlgorithmControl: String
  TargetLkfs: JSON
}

input AwsMedialiveS7AudioDescriptionsAudioNormalizationSettingsInput {
  Algorithm: String
  AlgorithmControl: String
  TargetLkfs: JSON
}

type AwsMedialiveS7AudioDescriptionsCodecSettings {
  AacSettings: AwsMedialiveS7AudioDescriptionsCodecSettingsAacSettings
  Ac3Settings: AwsMedialiveS7AudioDescriptionsCodecSettingsAc3Settings
  Eac3Settings: AwsMedialiveS7AudioDescriptionsCodecSettingsEac3Settings
  Mp2Settings: AwsMedialiveS7AudioDescriptionsCodecSettingsMp2Settings
  PassThroughSettings: JSON
}

type AwsMedialiveS7AudioDescriptionsCodecSettingsAacSettings {
  Bitrate: JSON
  CodingMode: String
  InputType: String
  Profile: String
  RateControlMode: String
  RawFormat: String
  SampleRate: JSON
  Spec: String
  VbrQuality: String
}

input AwsMedialiveS7AudioDescriptionsCodecSettingsAacSettingsInput {
  Bitrate: JSON
  CodingMode: String
  InputType: String
  Profile: String
  RateControlMode: String
  RawFormat: String
  SampleRate: JSON
  Spec: String
  VbrQuality: String
}

type AwsMedialiveS7AudioDescriptionsCodecSettingsAc3Settings {
  Bitrate: JSON
  BitstreamMode: String
  CodingMode: String
  Dialnorm: Int
  DrcProfile: String
  LfeFilter: String
  MetadataControl: String
}

input AwsMedialiveS7AudioDescriptionsCodecSettingsAc3SettingsInput {
  Bitrate: JSON
  BitstreamMode: String
  CodingMode: String
  Dialnorm: Int
  DrcProfile: String
  LfeFilter: String
  MetadataControl: String
}

type AwsMedialiveS7AudioDescriptionsCodecSettingsEac3Settings {
  AttenuationControl: String
  Bitrate: JSON
  BitstreamMode: String
  CodingMode: String
  DcFilter: String
  Dialnorm: Int
  DrcLine: String
  DrcRf: String
  LfeControl: String
  LfeFilter: String
  LoRoCenterMixLevel: JSON
  LoRoSurroundMixLevel: JSON
  LtRtCenterMixLevel: JSON
  LtRtSurroundMixLevel: JSON
  MetadataControl: String
  PassthroughControl: String
  PhaseControl: String
  StereoDownmix: String
  SurroundExMode: String
  SurroundMode: String
}

input AwsMedialiveS7AudioDescriptionsCodecSettingsEac3SettingsInput {
  AttenuationControl: String
  Bitrate: JSON
  BitstreamMode: String
  CodingMode: String
  DcFilter: String
  Dialnorm: Int
  DrcLine: String
  DrcRf: String
  LfeControl: String
  LfeFilter: String
  LoRoCenterMixLevel: JSON
  LoRoSurroundMixLevel: JSON
  LtRtCenterMixLevel: JSON
  LtRtSurroundMixLevel: JSON
  MetadataControl: String
  PassthroughControl: String
  PhaseControl: String
  StereoDownmix: String
  SurroundExMode: String
  SurroundMode: String
}

input AwsMedialiveS7AudioDescriptionsCodecSettingsInput {
  AacSettings: AwsMedialiveS7AudioDescriptionsCodecSettingsAacSettingsInput
  Ac3Settings: AwsMedialiveS7AudioDescriptionsCodecSettingsAc3SettingsInput
  Eac3Settings: AwsMedialiveS7AudioDescriptionsCodecSettingsEac3SettingsInput
  Mp2Settings: AwsMedialiveS7AudioDescriptionsCodecSettingsMp2SettingsInput
  PassThroughSettings: JSON
}

type AwsMedialiveS7AudioDescriptionsCodecSettingsMp2Settings {
  Bitrate: JSON
  CodingMode: String
  SampleRate: JSON
}

input AwsMedialiveS7AudioDescriptionsCodecSettingsMp2SettingsInput {
  Bitrate: JSON
  CodingMode: String
  SampleRate: JSON
}

input AwsMedialiveS7AudioDescriptionsInput {
  AudioNormalizationSettings: AwsMedialiveS7AudioDescriptionsAudioNormalizationSettingsInput
  AudioSelectorName: String
  AudioType: String
  AudioTypeControl: String
  CodecSettings: AwsMedialiveS7AudioDescriptionsCodecSettingsInput
  LanguageCode: String
  LanguageCodeControl: String
  Name: String
  RemixSettings: AwsMedialiveS7AudioDescriptionsRemixSettingsInput
  StreamName: String
}

type AwsMedialiveS7AudioDescriptionsRemixSettings {
  ChannelMappings: [AwsMedialiveS7AudioDescriptionsRemixSettingsChannelMappings]
  ChannelsIn: Int
  ChannelsOut: Int
}

type AwsMedialiveS7AudioDescriptionsRemixSettingsChannelMappings {
  InputChannelLevels: [AwsMedialiveS7AudioDescriptionsRemixSettingsChannelMappingsInputChannelLevels]
  OutputChannel: Int
}

input AwsMedialiveS7AudioDescriptionsRemixSettingsChannelMappingsInput {
  InputChannelLevels: [AwsMedialiveS7AudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsInput]
  OutputChannel: Int
}

type AwsMedialiveS7AudioDescriptionsRemixSettingsChannelMappingsInputChannelLevels {
  Gain: Int
  InputChannel: Int
}

input AwsMedialiveS7AudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsInput {
  Gain: Int
  InputChannel: Int
}

input AwsMedialiveS7AudioDescriptionsRemixSettingsInput {
  ChannelMappings: [AwsMedialiveS7AudioDescriptionsRemixSettingsChannelMappingsInput]
  ChannelsIn: Int
  ChannelsOut: Int
}

type AwsMedialiveS7AvailBlanking {
  AvailBlankingImage: AwsMedialiveS1l
  State: String
}

input AwsMedialiveS7AvailBlankingInput {
  AvailBlankingImage: AwsMedialiveS1lInput
  State: String
}

type AwsMedialiveS7AvailConfiguration {
  AvailSettings: AwsMedialiveS7AvailConfigurationAvailSettings
}

type AwsMedialiveS7AvailConfigurationAvailSettings {
  Scte35SpliceInsert: AwsMedialiveS7AvailConfigurationAvailSettingsScte35SpliceInsert
  Scte35TimeSignalApos: AwsMedialiveS7AvailConfigurationAvailSettingsScte35TimeSignalApos
}

input AwsMedialiveS7AvailConfigurationAvailSettingsInput {
  Scte35SpliceInsert: AwsMedialiveS7AvailConfigurationAvailSettingsScte35SpliceInsertInput
  Scte35TimeSignalApos: AwsMedialiveS7AvailConfigurationAvailSettingsScte35TimeSignalAposInput
}

type AwsMedialiveS7AvailConfigurationAvailSettingsScte35SpliceInsert {
  AdAvailOffset: Int
  NoRegionalBlackoutFlag: String
  WebDeliveryAllowedFlag: String
}

input AwsMedialiveS7AvailConfigurationAvailSettingsScte35SpliceInsertInput {
  AdAvailOffset: Int
  NoRegionalBlackoutFlag: String
  WebDeliveryAllowedFlag: String
}

type AwsMedialiveS7AvailConfigurationAvailSettingsScte35TimeSignalApos {
  AdAvailOffset: Int
  NoRegionalBlackoutFlag: String
  WebDeliveryAllowedFlag: String
}

input AwsMedialiveS7AvailConfigurationAvailSettingsScte35TimeSignalAposInput {
  AdAvailOffset: Int
  NoRegionalBlackoutFlag: String
  WebDeliveryAllowedFlag: String
}

input AwsMedialiveS7AvailConfigurationInput {
  AvailSettings: AwsMedialiveS7AvailConfigurationAvailSettingsInput
}

type AwsMedialiveS7BlackoutSlate {
  BlackoutSlateImage: AwsMedialiveS1l
  NetworkEndBlackout: String
  NetworkEndBlackoutImage: AwsMedialiveS1l
  NetworkId: String
  State: String
}

input AwsMedialiveS7BlackoutSlateInput {
  BlackoutSlateImage: AwsMedialiveS1lInput
  NetworkEndBlackout: String
  NetworkEndBlackoutImage: AwsMedialiveS1lInput
  NetworkId: String
  State: String
}

type AwsMedialiveS7CaptionDescriptions {
  CaptionSelectorName: String
  DestinationSettings: AwsMedialiveS7CaptionDescriptionsDestinationSettings
  LanguageCode: String
  LanguageDescription: String
  Name: String
}

type AwsMedialiveS7CaptionDescriptionsDestinationSettings {
  AribDestinationSettings: JSON
  BurnInDestinationSettings: AwsMedialiveS7CaptionDescriptionsDestinationSettingsBurnInDestinationSettings
  DvbSubDestinationSettings: AwsMedialiveS7CaptionDescriptionsDestinationSettingsDvbSubDestinationSettings
  EmbeddedDestinationSettings: JSON
  EmbeddedPlusScte20DestinationSettings: JSON
  Scte20PlusEmbeddedDestinationSettings: JSON
  Scte27DestinationSettings: JSON
  SmpteTtDestinationSettings: JSON
  TeletextDestinationSettings: JSON
  TtmlDestinationSettings: AwsMedialiveS7CaptionDescriptionsDestinationSettingsTtmlDestinationSettings
  WebvttDestinationSettings: JSON
}

type AwsMedialiveS7CaptionDescriptionsDestinationSettingsBurnInDestinationSettings {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  Font: AwsMedialiveS1l
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: String
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextGridControl: String
  XPosition: Int
  YPosition: Int
}

input AwsMedialiveS7CaptionDescriptionsDestinationSettingsBurnInDestinationSettingsInput {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  Font: AwsMedialiveS1lInput
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: String
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextGridControl: String
  XPosition: Int
  YPosition: Int
}

type AwsMedialiveS7CaptionDescriptionsDestinationSettingsDvbSubDestinationSettings {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  Font: AwsMedialiveS1l
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: String
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextGridControl: String
  XPosition: Int
  YPosition: Int
}

input AwsMedialiveS7CaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsInput {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  Font: AwsMedialiveS1lInput
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: String
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextGridControl: String
  XPosition: Int
  YPosition: Int
}

input AwsMedialiveS7CaptionDescriptionsDestinationSettingsInput {
  AribDestinationSettings: JSON
  BurnInDestinationSettings: AwsMedialiveS7CaptionDescriptionsDestinationSettingsBurnInDestinationSettingsInput
  DvbSubDestinationSettings: AwsMedialiveS7CaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsInput
  EmbeddedDestinationSettings: JSON
  EmbeddedPlusScte20DestinationSettings: JSON
  Scte20PlusEmbeddedDestinationSettings: JSON
  Scte27DestinationSettings: JSON
  SmpteTtDestinationSettings: JSON
  TeletextDestinationSettings: JSON
  TtmlDestinationSettings: AwsMedialiveS7CaptionDescriptionsDestinationSettingsTtmlDestinationSettingsInput
  WebvttDestinationSettings: JSON
}

type AwsMedialiveS7CaptionDescriptionsDestinationSettingsTtmlDestinationSettings {
  StyleControl: String
}

input AwsMedialiveS7CaptionDescriptionsDestinationSettingsTtmlDestinationSettingsInput {
  StyleControl: String
}

input AwsMedialiveS7CaptionDescriptionsInput {
  CaptionSelectorName: String
  DestinationSettings: AwsMedialiveS7CaptionDescriptionsDestinationSettingsInput
  LanguageCode: String
  LanguageDescription: String
  Name: String
}

type AwsMedialiveS7GlobalConfiguration {
  InitialAudioGain: Int
  InputEndAction: String
  InputLossBehavior: AwsMedialiveS7GlobalConfigurationInputLossBehavior
  OutputTimingSource: String
  SupportLowFramerateInputs: String
}

input AwsMedialiveS7GlobalConfigurationInput {
  InitialAudioGain: Int
  InputEndAction: String
  InputLossBehavior: AwsMedialiveS7GlobalConfigurationInputLossBehaviorInput
  OutputTimingSource: String
  SupportLowFramerateInputs: String
}

type AwsMedialiveS7GlobalConfigurationInputLossBehavior {
  BlackFrameMsec: Int
  InputLossImageColor: String
  InputLossImageSlate: AwsMedialiveS1l
  InputLossImageType: String
  RepeatFrameMsec: Int
}

input AwsMedialiveS7GlobalConfigurationInputLossBehaviorInput {
  BlackFrameMsec: Int
  InputLossImageColor: String
  InputLossImageSlate: AwsMedialiveS1lInput
  InputLossImageType: String
  RepeatFrameMsec: Int
}

type AwsMedialiveS7i {
  Arn: String
  AttachedChannels: [String]
  Destinations: [AwsMedialiveS7j]
  Id: String
  Name: String
  SecurityGroups: [String]
  Sources: [AwsMedialiveS7l]
  State: String
  Type: String
}

input AwsMedialiveS7Input {
  AudioDescriptions: [AwsMedialiveS7AudioDescriptionsInput]
  AvailBlanking: AwsMedialiveS7AvailBlankingInput
  AvailConfiguration: AwsMedialiveS7AvailConfigurationInput
  BlackoutSlate: AwsMedialiveS7BlackoutSlateInput
  CaptionDescriptions: [AwsMedialiveS7CaptionDescriptionsInput]
  GlobalConfiguration: AwsMedialiveS7GlobalConfigurationInput
  OutputGroups: [AwsMedialiveS7OutputGroupsInput]
  TimecodeConfig: AwsMedialiveS7TimecodeConfigInput
  VideoDescriptions: [AwsMedialiveS7VideoDescriptionsInput]
}

type AwsMedialiveS7j {
  Ip: String
  Port: String
  Url: String
}

type AwsMedialiveS7l {
  PasswordParam: String
  Url: String
  Username: String
}

type AwsMedialiveS7OutputGroups {
  Name: String
  OutputGroupSettings: AwsMedialiveS7OutputGroupsOutputGroupSettings
  Outputs: [AwsMedialiveS7OutputGroupsOutputs]
}

input AwsMedialiveS7OutputGroupsInput {
  Name: String
  OutputGroupSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsInput
  Outputs: [AwsMedialiveS7OutputGroupsOutputsInput]
}

type AwsMedialiveS7OutputGroupsOutputGroupSettings {
  ArchiveGroupSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsArchiveGroupSettings
  HlsGroupSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettings
  MsSmoothGroupSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsMsSmoothGroupSettings
  UdpGroupSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsUdpGroupSettings
}

type AwsMedialiveS7OutputGroupsOutputGroupSettingsArchiveGroupSettings {
  Destination: AwsMedialiveS2z
  RolloverInterval: Int
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsArchiveGroupSettingsInput {
  Destination: AwsMedialiveS2zInput
  RolloverInterval: Int
}

type AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettings {
  AdMarkers: [String]
  BaseUrlContent: String
  BaseUrlManifest: String
  CaptionLanguageMappings: [AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappings]
  CaptionLanguageSetting: String
  ClientCache: String
  CodecSpecification: String
  ConstantIv: String
  Destination: AwsMedialiveS2z
  DirectoryStructure: String
  EncryptionType: String
  HlsCdnSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettings
  IndexNSegments: Int
  InputLossAction: String
  IvInManifest: String
  IvSource: String
  KeepSegments: Int
  KeyFormat: String
  KeyFormatVersions: String
  KeyProviderSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettings
  ManifestCompression: String
  ManifestDurationFormat: String
  MinSegmentLength: Int
  Mode: String
  OutputSelection: String
  ProgramDateTime: String
  ProgramDateTimePeriod: Int
  SegmentLength: Int
  SegmentationMode: String
  SegmentsPerSubdirectory: Int
  StreamInfResolution: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
  TimestampDeltaMilliseconds: Int
  TsFileMode: String
}

type AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappings {
  CaptionChannel: Int
  LanguageCode: String
  LanguageDescription: String
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsInput {
  CaptionChannel: Int
  LanguageCode: String
  LanguageDescription: String
}

type AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettings {
  HlsAkamaiSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettings
  HlsBasicPutSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettings
  HlsMediaStoreSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettings
  HlsWebdavSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettings
}

type AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettings {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  HttpTransferMode: String
  NumRetries: Int
  RestartDelay: Int
  Salt: String
  Token: String
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsInput {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  HttpTransferMode: String
  NumRetries: Int
  RestartDelay: Int
  Salt: String
  Token: String
}

type AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettings {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  NumRetries: Int
  RestartDelay: Int
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsInput {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  NumRetries: Int
  RestartDelay: Int
}

type AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettings {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  MediaStoreStorageClass: String
  NumRetries: Int
  RestartDelay: Int
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsInput {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  MediaStoreStorageClass: String
  NumRetries: Int
  RestartDelay: Int
}

type AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettings {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  HttpTransferMode: String
  NumRetries: Int
  RestartDelay: Int
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsInput {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  HttpTransferMode: String
  NumRetries: Int
  RestartDelay: Int
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsInput {
  HlsAkamaiSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsInput
  HlsBasicPutSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsInput
  HlsMediaStoreSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsInput
  HlsWebdavSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsInput
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsInput {
  AdMarkers: [String]
  BaseUrlContent: String
  BaseUrlManifest: String
  CaptionLanguageMappings: [AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsInput]
  CaptionLanguageSetting: String
  ClientCache: String
  CodecSpecification: String
  ConstantIv: String
  Destination: AwsMedialiveS2zInput
  DirectoryStructure: String
  EncryptionType: String
  HlsCdnSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsInput
  IndexNSegments: Int
  InputLossAction: String
  IvInManifest: String
  IvSource: String
  KeepSegments: Int
  KeyFormat: String
  KeyFormatVersions: String
  KeyProviderSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsInput
  ManifestCompression: String
  ManifestDurationFormat: String
  MinSegmentLength: Int
  Mode: String
  OutputSelection: String
  ProgramDateTime: String
  ProgramDateTimePeriod: Int
  SegmentLength: Int
  SegmentationMode: String
  SegmentsPerSubdirectory: Int
  StreamInfResolution: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
  TimestampDeltaMilliseconds: Int
  TsFileMode: String
}

type AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettings {
  StaticKeySettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettings
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsInput {
  StaticKeySettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsInput
}

type AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettings {
  KeyProviderServer: AwsMedialiveS1l
  StaticKeyValue: String
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsInput {
  KeyProviderServer: AwsMedialiveS1lInput
  StaticKeyValue: String
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsInput {
  ArchiveGroupSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsArchiveGroupSettingsInput
  HlsGroupSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsInput
  MsSmoothGroupSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsMsSmoothGroupSettingsInput
  UdpGroupSettings: AwsMedialiveS7OutputGroupsOutputGroupSettingsUdpGroupSettingsInput
}

type AwsMedialiveS7OutputGroupsOutputGroupSettingsMsSmoothGroupSettings {
  AcquisitionPointId: String
  AudioOnlyTimecodeControl: String
  CertificateMode: String
  ConnectionRetryInterval: Int
  Destination: AwsMedialiveS2z
  EventId: String
  EventIdMode: String
  EventStopBehavior: String
  FilecacheDuration: Int
  FragmentLength: Int
  InputLossAction: String
  NumRetries: Int
  RestartDelay: Int
  SegmentationMode: String
  SendDelayMs: Int
  SparseTrackType: String
  StreamManifestBehavior: String
  TimestampOffset: String
  TimestampOffsetMode: String
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsMsSmoothGroupSettingsInput {
  AcquisitionPointId: String
  AudioOnlyTimecodeControl: String
  CertificateMode: String
  ConnectionRetryInterval: Int
  Destination: AwsMedialiveS2zInput
  EventId: String
  EventIdMode: String
  EventStopBehavior: String
  FilecacheDuration: Int
  FragmentLength: Int
  InputLossAction: String
  NumRetries: Int
  RestartDelay: Int
  SegmentationMode: String
  SendDelayMs: Int
  SparseTrackType: String
  StreamManifestBehavior: String
  TimestampOffset: String
  TimestampOffsetMode: String
}

type AwsMedialiveS7OutputGroupsOutputGroupSettingsUdpGroupSettings {
  InputLossAction: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
}

input AwsMedialiveS7OutputGroupsOutputGroupSettingsUdpGroupSettingsInput {
  InputLossAction: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
}

type AwsMedialiveS7OutputGroupsOutputs {
  AudioDescriptionNames: [String]
  CaptionDescriptionNames: [String]
  OutputName: String
  OutputSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettings
  VideoDescriptionName: String
}

input AwsMedialiveS7OutputGroupsOutputsInput {
  AudioDescriptionNames: [String]
  CaptionDescriptionNames: [String]
  OutputName: String
  OutputSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsInput
  VideoDescriptionName: String
}

type AwsMedialiveS7OutputGroupsOutputsOutputSettings {
  ArchiveOutputSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettings
  HlsOutputSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettings
  MsSmoothOutputSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsMsSmoothOutputSettings
  UdpOutputSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettings
}

type AwsMedialiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettings {
  ContainerSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettings
  Extension: String
  NameModifier: String
}

type AwsMedialiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettings {
  M2tsSettings: AwsMedialiveS4f
}

input AwsMedialiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsInput {
  M2tsSettings: AwsMedialiveS4fInput
}

input AwsMedialiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettingsInput {
  ContainerSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsInput
  Extension: String
  NameModifier: String
}

type AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettings {
  HlsSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettings
  NameModifier: String
  SegmentModifier: String
}

type AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettings {
  AudioOnlyHlsSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettings
  StandardHlsSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettings
}

type AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettings {
  AudioGroupId: String
  AudioOnlyImage: AwsMedialiveS1l
  AudioTrackType: String
}

input AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsInput {
  AudioGroupId: String
  AudioOnlyImage: AwsMedialiveS1lInput
  AudioTrackType: String
}

input AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsInput {
  AudioOnlyHlsSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsInput
  StandardHlsSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsInput
}

type AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettings {
  AudioRenditionSets: String
  M3u8Settings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8Settings
}

input AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsInput {
  AudioRenditionSets: String
  M3u8Settings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsInput
}

type AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8Settings {
  AudioFramesPerPes: Int
  AudioPids: String
  EcmPid: String
  PatInterval: Int
  PcrControl: String
  PcrPeriod: Int
  PcrPid: String
  PmtInterval: Int
  PmtPid: String
  ProgramNum: Int
  Scte35Behavior: String
  Scte35Pid: String
  TimedMetadataBehavior: String
  TransportStreamId: Int
  VideoPid: String
}

input AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsInput {
  AudioFramesPerPes: Int
  AudioPids: String
  EcmPid: String
  PatInterval: Int
  PcrControl: String
  PcrPeriod: Int
  PcrPid: String
  PmtInterval: Int
  PmtPid: String
  ProgramNum: Int
  Scte35Behavior: String
  Scte35Pid: String
  TimedMetadataBehavior: String
  TransportStreamId: Int
  VideoPid: String
}

input AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsInput {
  HlsSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsInput
  NameModifier: String
  SegmentModifier: String
}

input AwsMedialiveS7OutputGroupsOutputsOutputSettingsInput {
  ArchiveOutputSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettingsInput
  HlsOutputSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsInput
  MsSmoothOutputSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsInput
  UdpOutputSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsInput
}

type AwsMedialiveS7OutputGroupsOutputsOutputSettingsMsSmoothOutputSettings {
  NameModifier: String
}

input AwsMedialiveS7OutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsInput {
  NameModifier: String
}

type AwsMedialiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettings {
  BufferMsec: Int
  ContainerSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettings
  Destination: AwsMedialiveS2z
  FecOutputSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettings
}

type AwsMedialiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettings {
  M2tsSettings: AwsMedialiveS4f
}

input AwsMedialiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsInput {
  M2tsSettings: AwsMedialiveS4fInput
}

type AwsMedialiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettings {
  ColumnDepth: Int
  IncludeFec: String
  RowLength: Int
}

input AwsMedialiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsInput {
  ColumnDepth: Int
  IncludeFec: String
  RowLength: Int
}

input AwsMedialiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsInput {
  BufferMsec: Int
  ContainerSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsInput
  Destination: AwsMedialiveS2zInput
  FecOutputSettings: AwsMedialiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsInput
}

type AwsMedialiveS7s {
  Arn: String
  Id: String
  WhitelistRules: [AwsMedialiveS7t]
}

type AwsMedialiveS7t {
  Cidr: String
}

type AwsMedialiveS7TimecodeConfig {
  Source: String
  SyncThreshold: Int
}

input AwsMedialiveS7TimecodeConfigInput {
  Source: String
  SyncThreshold: Int
}

type AwsMedialiveS7VideoDescriptions {
  CodecSettings: AwsMedialiveS7VideoDescriptionsCodecSettings
  Height: Int
  Name: String
  RespondToAfd: String
  ScalingBehavior: String
  Sharpness: Int
  Width: Int
}

type AwsMedialiveS7VideoDescriptionsCodecSettings {
  H264Settings: AwsMedialiveS7VideoDescriptionsCodecSettingsH264Settings
}

type AwsMedialiveS7VideoDescriptionsCodecSettingsH264Settings {
  AdaptiveQuantization: String
  AfdSignaling: String
  Bitrate: Int
  BufFillPct: Int
  BufSize: Int
  ColorMetadata: String
  EntropyEncoding: String
  FixedAfd: String
  FlickerAq: String
  FramerateControl: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopNumBFrames: Int
  GopSize: JSON
  GopSizeUnits: String
  Level: String
  LookAheadRateControl: String
  MaxBitrate: Int
  MinIInterval: Int
  NumRefFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  Profile: String
  RateControlMode: String
  ScanType: String
  SceneChangeDetect: String
  Slices: Int
  Softness: Int
  SpatialAq: String
  Syntax: String
  TemporalAq: String
  TimecodeInsertion: String
}

input AwsMedialiveS7VideoDescriptionsCodecSettingsH264SettingsInput {
  AdaptiveQuantization: String
  AfdSignaling: String
  Bitrate: Int
  BufFillPct: Int
  BufSize: Int
  ColorMetadata: String
  EntropyEncoding: String
  FixedAfd: String
  FlickerAq: String
  FramerateControl: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopNumBFrames: Int
  GopSize: JSON
  GopSizeUnits: String
  Level: String
  LookAheadRateControl: String
  MaxBitrate: Int
  MinIInterval: Int
  NumRefFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  Profile: String
  RateControlMode: String
  ScanType: String
  SceneChangeDetect: String
  Slices: Int
  Softness: Int
  SpatialAq: String
  Syntax: String
  TemporalAq: String
  TimecodeInsertion: String
}

input AwsMedialiveS7VideoDescriptionsCodecSettingsInput {
  H264Settings: AwsMedialiveS7VideoDescriptionsCodecSettingsH264SettingsInput
}

input AwsMedialiveS7VideoDescriptionsInput {
  CodecSettings: AwsMedialiveS7VideoDescriptionsCodecSettingsInput
  Height: Int
  Name: String
  RespondToAfd: String
  ScalingBehavior: String
  Sharpness: Int
  Width: Int
}

input AwsMedialiveStartChannelInput {
  ChannelId: String!
}

type AwsMedialiveStartChannelOutput {
  Arn: String
  Destinations: [AwsMedialiveS2]
  EgressEndpoints: [AwsMedialiveS78]
  EncoderSettings: AwsMedialiveS7
  Id: String
  InputAttachments: [AwsMedialiveS68]
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
}

input AwsMedialiveStopChannelInput {
  ChannelId: String!
}

type AwsMedialiveStopChannelOutput {
  Arn: String
  Destinations: [AwsMedialiveS2]
  EgressEndpoints: [AwsMedialiveS78]
  EncoderSettings: AwsMedialiveS7
  Id: String
  InputAttachments: [AwsMedialiveS68]
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
}

# AWS Elemental MediaPackage (2017-10-12)
type AwsMediapackage {
  # mediapackage.CreateChannel
  CreateChannel(input: AwsMediapackageCreateChannelInput!): AwsMediapackageCreateChannelOutput

  # mediapackage.CreateOriginEndpoint
  CreateOriginEndpoint(input: AwsMediapackageCreateOriginEndpointInput!): AwsMediapackageCreateOriginEndpointOutput

  # mediapackage.DeleteChannel
  DeleteChannel(input: AwsMediapackageDeleteChannelInput!): JSON

  # mediapackage.DeleteOriginEndpoint
  DeleteOriginEndpoint(input: AwsMediapackageDeleteOriginEndpointInput!): JSON

  # mediapackage.DescribeChannel
  DescribeChannel(input: AwsMediapackageDescribeChannelInput!): AwsMediapackageDescribeChannelOutput

  # mediapackage.DescribeOriginEndpoint
  DescribeOriginEndpoint(input: AwsMediapackageDescribeOriginEndpointInput!): AwsMediapackageDescribeOriginEndpointOutput

  # mediapackage.ListChannels
  ListChannels(input: AwsMediapackageListChannelsInput): AwsMediapackageListChannelsOutput

  # mediapackage.ListOriginEndpoints
  ListOriginEndpoints(input: AwsMediapackageListOriginEndpointsInput): AwsMediapackageListOriginEndpointsOutput

  # mediapackage.RotateChannelCredentials
  RotateChannelCredentials(input: AwsMediapackageRotateChannelCredentialsInput!): AwsMediapackageRotateChannelCredentialsOutput

  # mediapackage.UpdateChannel
  UpdateChannel(input: AwsMediapackageUpdateChannelInput!): AwsMediapackageUpdateChannelOutput

  # mediapackage.UpdateOriginEndpoint
  UpdateOriginEndpoint(input: AwsMediapackageUpdateOriginEndpointInput!): AwsMediapackageUpdateOriginEndpointOutput
}

input AwsMediapackageCreateChannelInput {
  Description: String
  Id: String!
}

type AwsMediapackageCreateChannelOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediapackageS4
  Id: String
}

input AwsMediapackageCreateOriginEndpointInput {
  ChannelId: String!
  DashPackage: AwsMediapackageS8Input
  Description: String
  HlsPackage: AwsMediapackageSgInput
  Id: String!
  ManifestName: String
  MssPackage: AwsMediapackageSmInput
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Whitelist: [String]
}

type AwsMediapackageCreateOriginEndpointOutput {
  Arn: String
  ChannelId: String
  DashPackage: AwsMediapackageS8
  Description: String
  HlsPackage: AwsMediapackageSg
  Id: String
  ManifestName: String
  MssPackage: AwsMediapackageSm
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Url: String
  Whitelist: [String]
}

input AwsMediapackageDeleteChannelInput {
  Id: String!
}

input AwsMediapackageDeleteOriginEndpointInput {
  Id: String!
}

input AwsMediapackageDescribeChannelInput {
  Id: String!
}

type AwsMediapackageDescribeChannelOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediapackageS4
  Id: String
}

input AwsMediapackageDescribeOriginEndpointInput {
  Id: String!
}

type AwsMediapackageDescribeOriginEndpointOutput {
  Arn: String
  ChannelId: String
  DashPackage: AwsMediapackageS8
  Description: String
  HlsPackage: AwsMediapackageSg
  Id: String
  ManifestName: String
  MssPackage: AwsMediapackageSm
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Url: String
  Whitelist: [String]
}

input AwsMediapackageListChannelsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediapackageListChannelsOutput {
  Channels: [AwsMediapackageListChannelsOutputChannels]
  NextToken: String
}

type AwsMediapackageListChannelsOutputChannels {
  Arn: String
  Description: String
  HlsIngest: AwsMediapackageS4
  Id: String
}

input AwsMediapackageListOriginEndpointsInput {
  ChannelId: String
  MaxResults: Int
  NextToken: String
}

type AwsMediapackageListOriginEndpointsOutput {
  NextToken: String
  OriginEndpoints: [AwsMediapackageListOriginEndpointsOutputOriginEndpoints]
}

type AwsMediapackageListOriginEndpointsOutputOriginEndpoints {
  Arn: String
  ChannelId: String
  DashPackage: AwsMediapackageS8
  Description: String
  HlsPackage: AwsMediapackageSg
  Id: String
  ManifestName: String
  MssPackage: AwsMediapackageSm
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Url: String
  Whitelist: [String]
}

input AwsMediapackageRotateChannelCredentialsInput {
  Id: String!
}

type AwsMediapackageRotateChannelCredentialsOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediapackageS4
  Id: String
}

type AwsMediapackageS4 {
  IngestEndpoints: [AwsMediapackageS4IngestEndpoints]
}

type AwsMediapackageS4IngestEndpoints {
  Password: String
  Url: String
  Username: String
}

type AwsMediapackageS8 {
  Encryption: AwsMediapackageS8Encryption
  ManifestWindowSeconds: Int
  MinBufferTimeSeconds: Int
  MinUpdatePeriodSeconds: Int
  Profile: String
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediapackageSe
  SuggestedPresentationDelaySeconds: Int
}

type AwsMediapackageS8Encryption {
  KeyRotationIntervalSeconds: Int
  SpekeKeyProvider: AwsMediapackageSb!
}

input AwsMediapackageS8EncryptionInput {
  KeyRotationIntervalSeconds: Int
  SpekeKeyProvider: AwsMediapackageSbInput!
}

input AwsMediapackageS8Input {
  Encryption: AwsMediapackageS8EncryptionInput
  ManifestWindowSeconds: Int
  MinBufferTimeSeconds: Int
  MinUpdatePeriodSeconds: Int
  Profile: String
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediapackageSeInput
  SuggestedPresentationDelaySeconds: Int
}

type AwsMediapackageSb {
  ResourceId: String!
  RoleArn: String!
  SystemIds: [String]!
  Url: String!
}

input AwsMediapackageSbInput {
  ResourceId: String!
  RoleArn: String!
  SystemIds: [String]!
  Url: String!
}

type AwsMediapackageSe {
  MaxVideoBitsPerSecond: Int
  MinVideoBitsPerSecond: Int
  StreamOrder: String
}

input AwsMediapackageSeInput {
  MaxVideoBitsPerSecond: Int
  MinVideoBitsPerSecond: Int
  StreamOrder: String
}

type AwsMediapackageSg {
  AdMarkers: String
  Encryption: AwsMediapackageSgEncryption
  IncludeIframeOnlyStream: Boolean
  PlaylistType: String
  PlaylistWindowSeconds: Int
  ProgramDateTimeIntervalSeconds: Int
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediapackageSe
  UseAudioRenditionGroup: Boolean
}

type AwsMediapackageSgEncryption {
  ConstantInitializationVector: String
  EncryptionMethod: String
  KeyRotationIntervalSeconds: Int
  RepeatExtXKey: Boolean
  SpekeKeyProvider: AwsMediapackageSb!
}

input AwsMediapackageSgEncryptionInput {
  ConstantInitializationVector: String
  EncryptionMethod: String
  KeyRotationIntervalSeconds: Int
  RepeatExtXKey: Boolean
  SpekeKeyProvider: AwsMediapackageSbInput!
}

input AwsMediapackageSgInput {
  AdMarkers: String
  Encryption: AwsMediapackageSgEncryptionInput
  IncludeIframeOnlyStream: Boolean
  PlaylistType: String
  PlaylistWindowSeconds: Int
  ProgramDateTimeIntervalSeconds: Int
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediapackageSeInput
  UseAudioRenditionGroup: Boolean
}

type AwsMediapackageSm {
  Encryption: AwsMediapackageSmEncryption
  ManifestWindowSeconds: Int
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediapackageSe
}

type AwsMediapackageSmEncryption {
  SpekeKeyProvider: AwsMediapackageSb!
}

input AwsMediapackageSmEncryptionInput {
  SpekeKeyProvider: AwsMediapackageSbInput!
}

input AwsMediapackageSmInput {
  Encryption: AwsMediapackageSmEncryptionInput
  ManifestWindowSeconds: Int
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediapackageSeInput
}

input AwsMediapackageUpdateChannelInput {
  Description: String
  Id: String!
}

type AwsMediapackageUpdateChannelOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediapackageS4
  Id: String
}

input AwsMediapackageUpdateOriginEndpointInput {
  DashPackage: AwsMediapackageS8Input
  Description: String
  HlsPackage: AwsMediapackageSgInput
  Id: String!
  ManifestName: String
  MssPackage: AwsMediapackageSmInput
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Whitelist: [String]
}

type AwsMediapackageUpdateOriginEndpointOutput {
  Arn: String
  ChannelId: String
  DashPackage: AwsMediapackageS8
  Description: String
  HlsPackage: AwsMediapackageSg
  Id: String
  ManifestName: String
  MssPackage: AwsMediapackageSm
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Url: String
  Whitelist: [String]
}

# AWS Elemental MediaStore (2017-09-01)
type AwsMediastore {
  # mediastore.CreateContainer
  CreateContainer(input: AwsMediastoreCreateContainerInput!): AwsMediastoreCreateContainerOutput

  # mediastore.DeleteContainer
  DeleteContainer(input: AwsMediastoreDeleteContainerInput!): JSON

  # mediastore.DeleteContainerPolicy
  DeleteContainerPolicy(input: AwsMediastoreDeleteContainerPolicyInput!): JSON

  # mediastore.DescribeContainer
  DescribeContainer(input: AwsMediastoreDescribeContainerInput): AwsMediastoreDescribeContainerOutput

  # mediastore.GetContainerPolicy
  GetContainerPolicy(input: AwsMediastoreGetContainerPolicyInput!): AwsMediastoreGetContainerPolicyOutput

  # mediastore.ListContainers
  ListContainers(input: AwsMediastoreListContainersInput): AwsMediastoreListContainersOutput

  # mediastore.PutContainerPolicy
  PutContainerPolicy(input: AwsMediastorePutContainerPolicyInput!): JSON
}

input AwsMediastoreCreateContainerInput {
  ContainerName: String!
}

type AwsMediastoreCreateContainerOutput {
  Container: AwsMediastoreS4!
}

# AWS Elemental MediaStore Data Plane (2017-09-01)
type AwsMediastoredata {
  # mediastoredata.DeleteObject
  DeleteObject(input: AwsMediastoredataDeleteObjectInput!): JSON

  # mediastoredata.DescribeObject
  DescribeObject(input: AwsMediastoredataDescribeObjectInput!): AwsMediastoredataDescribeObjectOutput

  # mediastoredata.GetObject
  GetObject(input: AwsMediastoredataGetObjectInput!): AwsMediastoredataGetObjectOutput

  # mediastoredata.ListItems
  ListItems(input: AwsMediastoredataListItemsInput): AwsMediastoredataListItemsOutput

  # mediastoredata.PutObject
  PutObject(input: AwsMediastoredataPutObjectInput!): AwsMediastoredataPutObjectOutput
}

input AwsMediastoredataDeleteObjectInput {
  Path: String!
}

input AwsMediastoredataDescribeObjectInput {
  Path: String!
}

type AwsMediastoredataDescribeObjectOutput {
  ETag: String
  ContentType: String
  ContentLength: JSON
  CacheControl: String
  LastModified: Date
}

input AwsMediastoredataGetObjectInput {
  Path: String!
  Range: String
}

type AwsMediastoredataGetObjectOutput {
  Body: JSON
  CacheControl: String
  ContentRange: String
  ContentLength: JSON
  ContentType: String
  ETag: String
  LastModified: Date
  StatusCode: Int!
}

input AwsMediastoredataListItemsInput {
  Path: String
  MaxResults: Int
  NextToken: String
}

type AwsMediastoredataListItemsOutput {
  Items: [AwsMediastoredataListItemsOutputItems]
  NextToken: String
}

type AwsMediastoredataListItemsOutputItems {
  Name: String
  Type: String
  ETag: String
  LastModified: Date
  ContentType: String
  ContentLength: JSON
}

input AwsMediastoredataPutObjectInput {
  Body: JSON!
  Path: String!
  ContentType: String
  CacheControl: String
  StorageClass: String
}

type AwsMediastoredataPutObjectOutput {
  ContentSHA256: String
  ETag: String
  StorageClass: String
}

input AwsMediastoreDeleteContainerInput {
  ContainerName: String!
}

input AwsMediastoreDeleteContainerPolicyInput {
  ContainerName: String!
}

input AwsMediastoreDescribeContainerInput {
  ContainerName: String
}

type AwsMediastoreDescribeContainerOutput {
  Container: AwsMediastoreS4
}

input AwsMediastoreGetContainerPolicyInput {
  ContainerName: String!
}

type AwsMediastoreGetContainerPolicyOutput {
  Policy: String!
}

input AwsMediastoreListContainersInput {
  NextToken: String
  MaxResults: Int
}

type AwsMediastoreListContainersOutput {
  Containers: [AwsMediastoreS4]!
  NextToken: String
}

input AwsMediastorePutContainerPolicyInput {
  ContainerName: String!
  Policy: String!
}

type AwsMediastoreS4 {
  Endpoint: String
  CreationTime: Date
  ARN: String
  Name: String
  Status: String
}

# AWS Migration Hub (2017-05-31)
type AwsMigrationhub {
  # migrationhub.AssociateCreatedArtifact
  AssociateCreatedArtifact(input: AwsMigrationhubAssociateCreatedArtifactInput!): JSON

  # migrationhub.AssociateDiscoveredResource
  AssociateDiscoveredResource(input: AwsMigrationhubAssociateDiscoveredResourceInput!): JSON

  # migrationhub.CreateProgressUpdateStream
  CreateProgressUpdateStream(input: AwsMigrationhubCreateProgressUpdateStreamInput!): JSON

  # migrationhub.DeleteProgressUpdateStream
  DeleteProgressUpdateStream(input: AwsMigrationhubDeleteProgressUpdateStreamInput!): JSON

  # migrationhub.DescribeApplicationState
  DescribeApplicationState(input: AwsMigrationhubDescribeApplicationStateInput!): AwsMigrationhubDescribeApplicationStateOutput

  # migrationhub.DescribeMigrationTask
  DescribeMigrationTask(input: AwsMigrationhubDescribeMigrationTaskInput!): AwsMigrationhubDescribeMigrationTaskOutput

  # migrationhub.DisassociateCreatedArtifact
  DisassociateCreatedArtifact(input: AwsMigrationhubDisassociateCreatedArtifactInput!): JSON

  # migrationhub.DisassociateDiscoveredResource
  DisassociateDiscoveredResource(input: AwsMigrationhubDisassociateDiscoveredResourceInput!): JSON

  # migrationhub.ImportMigrationTask
  ImportMigrationTask(input: AwsMigrationhubImportMigrationTaskInput!): JSON

  # migrationhub.ListCreatedArtifacts
  ListCreatedArtifacts(input: AwsMigrationhubListCreatedArtifactsInput!): AwsMigrationhubListCreatedArtifactsOutput

  # migrationhub.ListDiscoveredResources
  ListDiscoveredResources(input: AwsMigrationhubListDiscoveredResourcesInput!): AwsMigrationhubListDiscoveredResourcesOutput

  # migrationhub.ListMigrationTasks
  ListMigrationTasks(input: AwsMigrationhubListMigrationTasksInput): AwsMigrationhubListMigrationTasksOutput

  # migrationhub.ListProgressUpdateStreams
  ListProgressUpdateStreams(input: AwsMigrationhubListProgressUpdateStreamsInput): AwsMigrationhubListProgressUpdateStreamsOutput

  # migrationhub.NotifyApplicationState
  NotifyApplicationState(input: AwsMigrationhubNotifyApplicationStateInput!): JSON

  # migrationhub.NotifyMigrationTaskState
  NotifyMigrationTaskState(input: AwsMigrationhubNotifyMigrationTaskStateInput!): JSON

  # migrationhub.PutResourceAttributes
  PutResourceAttributes(input: AwsMigrationhubPutResourceAttributesInput!): JSON
}

input AwsMigrationhubAssociateCreatedArtifactInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  CreatedArtifact: AwsMigrationhubS4Input!
  DryRun: Boolean
}

input AwsMigrationhubAssociateDiscoveredResourceInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  DiscoveredResource: AwsMigrationhubSaInput!
  DryRun: Boolean
}

input AwsMigrationhubCreateProgressUpdateStreamInput {
  ProgressUpdateStreamName: String!
  DryRun: Boolean
}

input AwsMigrationhubDeleteProgressUpdateStreamInput {
  ProgressUpdateStreamName: String!
  DryRun: Boolean
}

input AwsMigrationhubDescribeApplicationStateInput {
  ApplicationId: String!
}

type AwsMigrationhubDescribeApplicationStateOutput {
  ApplicationStatus: String
  LastUpdatedTime: Date
}

input AwsMigrationhubDescribeMigrationTaskInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
}

type AwsMigrationhubDescribeMigrationTaskOutput {
  MigrationTask: AwsMigrationhubDescribeMigrationTaskOutputMigrationTask
}

type AwsMigrationhubDescribeMigrationTaskOutputMigrationTask {
  ProgressUpdateStream: String
  MigrationTaskName: String
  Task: AwsMigrationhubSq
  UpdateDateTime: Date
  ResourceAttributeList: [AwsMigrationhubSv]
}

input AwsMigrationhubDisassociateCreatedArtifactInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  CreatedArtifactName: String!
  DryRun: Boolean
}

input AwsMigrationhubDisassociateDiscoveredResourceInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  ConfigurationId: String!
  DryRun: Boolean
}

input AwsMigrationhubImportMigrationTaskInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  DryRun: Boolean
}

input AwsMigrationhubListCreatedArtifactsInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  NextToken: String
  MaxResults: Int
}

type AwsMigrationhubListCreatedArtifactsOutput {
  NextToken: String
  CreatedArtifactList: [AwsMigrationhubS4]
}

input AwsMigrationhubListDiscoveredResourcesInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  NextToken: String
  MaxResults: Int
}

type AwsMigrationhubListDiscoveredResourcesOutput {
  NextToken: String
  DiscoveredResourceList: [AwsMigrationhubSa]
}

input AwsMigrationhubListMigrationTasksInput {
  NextToken: String
  MaxResults: Int
  ResourceName: String
}

type AwsMigrationhubListMigrationTasksOutput {
  NextToken: String
  MigrationTaskSummaryList: [AwsMigrationhubListMigrationTasksOutputMigrationTaskSummaryList]
}

type AwsMigrationhubListMigrationTasksOutputMigrationTaskSummaryList {
  ProgressUpdateStream: String
  MigrationTaskName: String
  Status: String
  ProgressPercent: Int
  StatusDetail: String
  UpdateDateTime: Date
}

input AwsMigrationhubListProgressUpdateStreamsInput {
  NextToken: String
  MaxResults: Int
}

type AwsMigrationhubListProgressUpdateStreamsOutput {
  ProgressUpdateStreamSummaryList: [AwsMigrationhubListProgressUpdateStreamsOutputProgressUpdateStreamSummaryList]
  NextToken: String
}

type AwsMigrationhubListProgressUpdateStreamsOutputProgressUpdateStreamSummaryList {
  ProgressUpdateStreamName: String
}

input AwsMigrationhubNotifyApplicationStateInput {
  ApplicationId: String!
  Status: String!
  DryRun: Boolean
}

input AwsMigrationhubNotifyMigrationTaskStateInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  Task: AwsMigrationhubSqInput!
  UpdateDateTime: Date!
  NextUpdateSeconds: Int!
  DryRun: Boolean
}

input AwsMigrationhubPutResourceAttributesInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  ResourceAttributeList: [AwsMigrationhubSvInput]!
  DryRun: Boolean
}

type AwsMigrationhubS4 {
  Name: String!
  Description: String
}

input AwsMigrationhubS4Input {
  Name: String!
  Description: String
}

type AwsMigrationhubSa {
  ConfigurationId: String!
  Description: String
}

input AwsMigrationhubSaInput {
  ConfigurationId: String!
  Description: String
}

type AwsMigrationhubSq {
  Status: String!
  StatusDetail: String
  ProgressPercent: Int
}

input AwsMigrationhubSqInput {
  Status: String!
  StatusDetail: String
  ProgressPercent: Int
}

type AwsMigrationhubSv {
  Type: String!
  Value: String!
}

input AwsMigrationhubSvInput {
  Type: String!
  Value: String!
}

# AWS Mobile (2017-07-01)
type AwsMobile {
  # mobile.CreateProject
  CreateProject(input: AwsMobileCreateProjectInput): AwsMobileCreateProjectOutput

  # mobile.DeleteProject
  DeleteProject(input: AwsMobileDeleteProjectInput!): AwsMobileDeleteProjectOutput

  # mobile.DescribeBundle
  DescribeBundle(input: AwsMobileDescribeBundleInput!): AwsMobileDescribeBundleOutput

  # mobile.DescribeProject
  DescribeProject(input: AwsMobileDescribeProjectInput!): AwsMobileDescribeProjectOutput

  # mobile.ExportBundle
  ExportBundle(input: AwsMobileExportBundleInput!): AwsMobileExportBundleOutput

  # mobile.ExportProject
  ExportProject(input: AwsMobileExportProjectInput!): AwsMobileExportProjectOutput

  # mobile.ListBundles
  ListBundles(input: AwsMobileListBundlesInput): AwsMobileListBundlesOutput

  # mobile.ListProjects
  ListProjects(input: AwsMobileListProjectsInput): AwsMobileListProjectsOutput

  # mobile.UpdateProject
  UpdateProject(input: AwsMobileUpdateProjectInput!): AwsMobileUpdateProjectOutput
}

# Amazon Mobile Analytics (2014-06-05)
type AwsMobileanalytics {
  # mobileanalytics.PutEvents
  PutEvents(input: AwsMobileanalyticsPutEventsInput!): JSON
}

input AwsMobileanalyticsPutEventsEventsInput {
  eventType: String!
  timestamp: String!
  session: AwsMobileanalyticsPutEventsEventsSessionInput
  version: String
  attributes: JSON
  metrics: JSON
}

input AwsMobileanalyticsPutEventsEventsSessionInput {
  id: String
  duration: JSON
  startTimestamp: String
  stopTimestamp: String
}

input AwsMobileanalyticsPutEventsInput {
  events: [AwsMobileanalyticsPutEventsEventsInput]!
  clientContext: String!
  clientContextEncoding: String
}

input AwsMobileCreateProjectInput {
  name: String
  region: String
  contents: JSON
  snapshotId: String
}

type AwsMobileCreateProjectOutput {
  details: AwsMobileS7
}

input AwsMobileDeleteProjectInput {
  projectId: String!
}

type AwsMobileDeleteProjectOutput {
  deletedResources: [AwsMobileSc]
  orphanedResources: [AwsMobileSc]
}

input AwsMobileDescribeBundleInput {
  bundleId: String!
}

type AwsMobileDescribeBundleOutput {
  details: AwsMobileSq
}

input AwsMobileDescribeProjectInput {
  projectId: String!
  syncFromResources: Boolean
}

type AwsMobileDescribeProjectOutput {
  details: AwsMobileS7
}

input AwsMobileExportBundleInput {
  bundleId: String!
  projectId: String
  platform: String
}

type AwsMobileExportBundleOutput {
  downloadUrl: String
}

input AwsMobileExportProjectInput {
  projectId: String!
}

type AwsMobileExportProjectOutput {
  downloadUrl: String
  shareUrl: String
  snapshotId: String
}

input AwsMobileListBundlesInput {
  maxResults: Int
  nextToken: String
}

type AwsMobileListBundlesOutput {
  bundleList: [AwsMobileSq]
  nextToken: String
}

input AwsMobileListProjectsInput {
  maxResults: Int
  nextToken: String
}

type AwsMobileListProjectsOutput {
  projects: [AwsMobileListProjectsOutputProjects]
  nextToken: String
}

type AwsMobileListProjectsOutputProjects {
  name: String
  projectId: String
}

type AwsMobileS7 {
  name: String
  projectId: String
  region: String
  state: String
  createdDate: Date
  lastUpdatedDate: Date
  consoleUrl: String
  resources: [AwsMobileSc]
}

type AwsMobileSc {
  type: String
  name: String
  arn: String
  feature: String
  attributes: JSON
}

type AwsMobileSq {
  bundleId: String
  title: String
  version: String
  description: String
  iconUrl: String
  availablePlatforms: [String]
}

input AwsMobileUpdateProjectInput {
  contents: JSON
  projectId: String!
}

type AwsMobileUpdateProjectOutput {
  details: AwsMobileS7
}

# AmazonMQ (2017-11-27)
type AwsMq {
  # mq.CreateBroker
  CreateBroker(input: AwsMqCreateBrokerInput): AwsMqCreateBrokerOutput

  # mq.CreateConfiguration
  CreateConfiguration(input: AwsMqCreateConfigurationInput): AwsMqCreateConfigurationOutput

  # mq.CreateUser
  CreateUser(input: AwsMqCreateUserInput!): JSON

  # mq.DeleteBroker
  DeleteBroker(input: AwsMqDeleteBrokerInput!): AwsMqDeleteBrokerOutput

  # mq.DeleteUser
  DeleteUser(input: AwsMqDeleteUserInput!): JSON

  # mq.DescribeBroker
  DescribeBroker(input: AwsMqDescribeBrokerInput!): AwsMqDescribeBrokerOutput

  # mq.DescribeConfiguration
  DescribeConfiguration(input: AwsMqDescribeConfigurationInput!): AwsMqDescribeConfigurationOutput

  # mq.DescribeConfigurationRevision
  DescribeConfigurationRevision(input: AwsMqDescribeConfigurationRevisionInput!): AwsMqDescribeConfigurationRevisionOutput

  # mq.DescribeUser
  DescribeUser(input: AwsMqDescribeUserInput!): AwsMqDescribeUserOutput

  # mq.ListBrokers
  ListBrokers(input: AwsMqListBrokersInput): AwsMqListBrokersOutput

  # mq.ListConfigurationRevisions
  ListConfigurationRevisions(input: AwsMqListConfigurationRevisionsInput!): AwsMqListConfigurationRevisionsOutput

  # mq.ListConfigurations
  ListConfigurations(input: AwsMqListConfigurationsInput): AwsMqListConfigurationsOutput

  # mq.ListUsers
  ListUsers(input: AwsMqListUsersInput!): AwsMqListUsersOutput

  # mq.RebootBroker
  RebootBroker(input: AwsMqRebootBrokerInput!): JSON

  # mq.UpdateBroker
  UpdateBroker(input: AwsMqUpdateBrokerInput!): AwsMqUpdateBrokerOutput

  # mq.UpdateConfiguration
  UpdateConfiguration(input: AwsMqUpdateConfigurationInput!): AwsMqUpdateConfigurationOutput

  # mq.UpdateUser
  UpdateUser(input: AwsMqUpdateUserInput!): JSON
}

input AwsMqCreateBrokerInput {
  AutoMinorVersionUpgrade: Boolean
  BrokerName: String
  Configuration: AwsMqS4Input
  CreatorRequestId: String
  DeploymentMode: String
  EngineType: String
  EngineVersion: String
  HostInstanceType: String
  MaintenanceWindowStartTime: AwsMqS8Input
  PubliclyAccessible: Boolean
  SecurityGroups: [String]
  SubnetIds: [String]
  Users: [AwsMqCreateBrokerUsersInput]
}

type AwsMqCreateBrokerOutput {
  BrokerArn: String
  BrokerId: String
}

input AwsMqCreateBrokerUsersInput {
  ConsoleAccess: Boolean
  Groups: [String]
  Password: String
  Username: String
}

input AwsMqCreateConfigurationInput {
  EngineType: String
  EngineVersion: String
  Name: String
}

type AwsMqCreateConfigurationOutput {
  Arn: String
  Id: String
  LatestRevision: AwsMqSg
  Name: String
}

input AwsMqCreateUserInput {
  BrokerId: String!
  ConsoleAccess: Boolean
  Groups: [String]
  Password: String
  Username: String!
}

input AwsMqDeleteBrokerInput {
  BrokerId: String!
}

type AwsMqDeleteBrokerOutput {
  BrokerId: String
}

input AwsMqDeleteUserInput {
  BrokerId: String!
  Username: String!
}

input AwsMqDescribeBrokerInput {
  BrokerId: String!
}

type AwsMqDescribeBrokerOutput {
  AutoMinorVersionUpgrade: Boolean
  BrokerArn: String
  BrokerId: String
  BrokerInstances: [AwsMqDescribeBrokerOutputBrokerInstances]
  BrokerName: String
  BrokerState: String
  Configurations: AwsMqDescribeBrokerOutputConfigurations
  DeploymentMode: String
  EngineType: String
  EngineVersion: String
  HostInstanceType: String
  MaintenanceWindowStartTime: AwsMqS8
  PubliclyAccessible: Boolean
  SecurityGroups: [String]
  SubnetIds: [String]
  Users: [AwsMqSu]
}

type AwsMqDescribeBrokerOutputBrokerInstances {
  ConsoleURL: String
  Endpoints: [String]
}

type AwsMqDescribeBrokerOutputConfigurations {
  Current: AwsMqS4
  History: [AwsMqS4]
  Pending: AwsMqS4
}

input AwsMqDescribeConfigurationInput {
  ConfigurationId: String!
}

type AwsMqDescribeConfigurationOutput {
  Arn: String
  Description: String
  EngineType: String
  EngineVersion: String
  Id: String
  LatestRevision: AwsMqSg
  Name: String
}

input AwsMqDescribeConfigurationRevisionInput {
  ConfigurationId: String!
  ConfigurationRevision: String!
}

type AwsMqDescribeConfigurationRevisionOutput {
  ConfigurationId: String
  Data: String
  Description: String
}

input AwsMqDescribeUserInput {
  BrokerId: String!
  Username: String!
}

type AwsMqDescribeUserOutput {
  BrokerId: String
  ConsoleAccess: Boolean
  Groups: [String]
  Pending: AwsMqDescribeUserOutputPending
  Username: String
}

type AwsMqDescribeUserOutputPending {
  ConsoleAccess: Boolean
  Groups: [String]
  PendingChange: String
}

input AwsMqListBrokersInput {
  MaxResults: Int
  NextToken: String
}

type AwsMqListBrokersOutput {
  BrokerSummaries: [AwsMqListBrokersOutputBrokerSummaries]
  NextToken: String
}

type AwsMqListBrokersOutputBrokerSummaries {
  BrokerArn: String
  BrokerId: String
  BrokerName: String
  BrokerState: String
  DeploymentMode: String
  HostInstanceType: String
}

input AwsMqListConfigurationRevisionsInput {
  ConfigurationId: String!
  MaxResults: Int
  NextToken: String
}

type AwsMqListConfigurationRevisionsOutput {
  ConfigurationId: String
  MaxResults: Int
  NextToken: String
  Revisions: [AwsMqSg]
}

input AwsMqListConfigurationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMqListConfigurationsOutput {
  Configurations: [AwsMqListConfigurationsOutputConfigurations]
  MaxResults: Int
  NextToken: String
}

type AwsMqListConfigurationsOutputConfigurations {
  Arn: String
  Description: String
  EngineType: String
  EngineVersion: String
  Id: String
  LatestRevision: AwsMqSg
  Name: String
}

input AwsMqListUsersInput {
  BrokerId: String!
  MaxResults: Int
  NextToken: String
}

type AwsMqListUsersOutput {
  BrokerId: String
  MaxResults: Int
  NextToken: String
  Users: [AwsMqSu]
}

input AwsMqRebootBrokerInput {
  BrokerId: String!
}

type AwsMqS4 {
  Id: String
  Revision: Int
}

input AwsMqS4Input {
  Id: String
  Revision: Int
}

type AwsMqS8 {
  DayOfWeek: String
  TimeOfDay: String
  TimeZone: String
}

input AwsMqS8Input {
  DayOfWeek: String
  TimeOfDay: String
  TimeZone: String
}

type AwsMqSg {
  Description: String
  Revision: Int
}

type AwsMqSu {
  PendingChange: String
  Username: String
}

input AwsMqUpdateBrokerInput {
  BrokerId: String!
  Configuration: AwsMqS4Input
}

type AwsMqUpdateBrokerOutput {
  BrokerId: String
  Configuration: AwsMqS4
}

input AwsMqUpdateConfigurationInput {
  ConfigurationId: String!
  Data: String
  Description: String
}

type AwsMqUpdateConfigurationOutput {
  Arn: String
  Id: String
  LatestRevision: AwsMqSg
  Name: String
  Warnings: [AwsMqUpdateConfigurationOutputWarnings]
}

type AwsMqUpdateConfigurationOutputWarnings {
  AttributeName: String
  ElementName: String
  Reason: String
}

input AwsMqUpdateUserInput {
  BrokerId: String!
  ConsoleAccess: Boolean
  Groups: [String]
  Password: String
  Username: String!
}

# Amazon Mechanical Turk (2017-01-17)
type AwsMturk {
  # mturk.AcceptQualificationRequest
  AcceptQualificationRequest(input: AwsMturkAcceptQualificationRequestInput!): JSON

  # mturk.ApproveAssignment
  ApproveAssignment(input: AwsMturkApproveAssignmentInput!): JSON

  # mturk.AssociateQualificationWithWorker
  AssociateQualificationWithWorker(input: AwsMturkAssociateQualificationWithWorkerInput!): JSON

  # mturk.CreateAdditionalAssignmentsForHIT
  CreateAdditionalAssignmentsForHIT(input: AwsMturkCreateAdditionalAssignmentsForHITInput!): JSON

  # mturk.CreateHIT
  CreateHIT(input: AwsMturkCreateHITInput!): AwsMturkCreateHITOutput

  # mturk.CreateHITType
  CreateHITType(input: AwsMturkCreateHITTypeInput!): AwsMturkCreateHITTypeOutput

  # mturk.CreateHITWithHITType
  CreateHITWithHITType(input: AwsMturkCreateHITWithHITTypeInput!): AwsMturkCreateHITWithHITTypeOutput

  # mturk.CreateQualificationType
  CreateQualificationType(input: AwsMturkCreateQualificationTypeInput!): AwsMturkCreateQualificationTypeOutput

  # mturk.CreateWorkerBlock
  CreateWorkerBlock(input: AwsMturkCreateWorkerBlockInput!): JSON

  # mturk.DeleteHIT
  DeleteHIT(input: AwsMturkDeleteHITInput!): JSON

  # mturk.DeleteQualificationType
  DeleteQualificationType(input: AwsMturkDeleteQualificationTypeInput!): JSON

  # mturk.DeleteWorkerBlock
  DeleteWorkerBlock(input: AwsMturkDeleteWorkerBlockInput!): JSON

  # mturk.DisassociateQualificationFromWorker
  DisassociateQualificationFromWorker(input: AwsMturkDisassociateQualificationFromWorkerInput!): JSON

  # mturk.GetAccountBalance
  GetAccountBalance(input: JSON): AwsMturkGetAccountBalanceOutput

  # mturk.GetAssignment
  GetAssignment(input: AwsMturkGetAssignmentInput!): AwsMturkGetAssignmentOutput

  # mturk.GetFileUploadURL
  GetFileUploadURL(input: AwsMturkGetFileUploadURLInput!): AwsMturkGetFileUploadURLOutput

  # mturk.GetHIT
  GetHIT(input: AwsMturkGetHITInput!): AwsMturkGetHITOutput

  # mturk.GetQualificationScore
  GetQualificationScore(input: AwsMturkGetQualificationScoreInput!): AwsMturkGetQualificationScoreOutput

  # mturk.GetQualificationType
  GetQualificationType(input: AwsMturkGetQualificationTypeInput!): AwsMturkGetQualificationTypeOutput

  # mturk.ListAssignmentsForHIT
  ListAssignmentsForHIT(input: AwsMturkListAssignmentsForHITInput!): AwsMturkListAssignmentsForHITOutput

  # mturk.ListBonusPayments
  ListBonusPayments(input: AwsMturkListBonusPaymentsInput): AwsMturkListBonusPaymentsOutput

  # mturk.ListHITs
  ListHITs(input: AwsMturkListHITsInput): AwsMturkListHITsOutput

  # mturk.ListHITsForQualificationType
  ListHITsForQualificationType(input: AwsMturkListHITsForQualificationTypeInput!): AwsMturkListHITsForQualificationTypeOutput

  # mturk.ListQualificationRequests
  ListQualificationRequests(input: AwsMturkListQualificationRequestsInput): AwsMturkListQualificationRequestsOutput

  # mturk.ListQualificationTypes
  ListQualificationTypes(input: AwsMturkListQualificationTypesInput!): AwsMturkListQualificationTypesOutput

  # mturk.ListReviewPolicyResultsForHIT
  ListReviewPolicyResultsForHIT(input: AwsMturkListReviewPolicyResultsForHITInput!): AwsMturkListReviewPolicyResultsForHITOutput

  # mturk.ListReviewableHITs
  ListReviewableHITs(input: AwsMturkListReviewableHITsInput): AwsMturkListReviewableHITsOutput

  # mturk.ListWorkerBlocks
  ListWorkerBlocks(input: AwsMturkListWorkerBlocksInput): AwsMturkListWorkerBlocksOutput

  # mturk.ListWorkersWithQualificationType
  ListWorkersWithQualificationType(input: AwsMturkListWorkersWithQualificationTypeInput!): AwsMturkListWorkersWithQualificationTypeOutput

  # mturk.NotifyWorkers
  NotifyWorkers(input: AwsMturkNotifyWorkersInput!): AwsMturkNotifyWorkersOutput

  # mturk.RejectAssignment
  RejectAssignment(input: AwsMturkRejectAssignmentInput!): JSON

  # mturk.RejectQualificationRequest
  RejectQualificationRequest(input: AwsMturkRejectQualificationRequestInput!): JSON

  # mturk.SendBonus
  SendBonus(input: AwsMturkSendBonusInput!): JSON

  # mturk.SendTestEventNotification
  SendTestEventNotification(input: AwsMturkSendTestEventNotificationInput!): JSON

  # mturk.UpdateExpirationForHIT
  UpdateExpirationForHIT(input: AwsMturkUpdateExpirationForHITInput!): JSON

  # mturk.UpdateHITReviewStatus
  UpdateHITReviewStatus(input: AwsMturkUpdateHITReviewStatusInput!): JSON

  # mturk.UpdateHITTypeOfHIT
  UpdateHITTypeOfHIT(input: AwsMturkUpdateHITTypeOfHITInput!): JSON

  # mturk.UpdateNotificationSettings
  UpdateNotificationSettings(input: AwsMturkUpdateNotificationSettingsInput!): JSON

  # mturk.UpdateQualificationType
  UpdateQualificationType(input: AwsMturkUpdateQualificationTypeInput!): AwsMturkUpdateQualificationTypeOutput
}

input AwsMturkAcceptQualificationRequestInput {
  QualificationRequestId: String!
  IntegerValue: Int
}

input AwsMturkApproveAssignmentInput {
  AssignmentId: String!
  RequesterFeedback: String
  OverrideRejection: Boolean
}

input AwsMturkAssociateQualificationWithWorkerInput {
  QualificationTypeId: String!
  WorkerId: String!
  IntegerValue: Int
  SendNotification: Boolean
}

input AwsMturkCreateAdditionalAssignmentsForHITInput {
  HITId: String!
  NumberOfAdditionalAssignments: Int!
  UniqueRequestToken: String
}

input AwsMturkCreateHITInput {
  MaxAssignments: Int
  AutoApprovalDelayInSeconds: JSON
  LifetimeInSeconds: JSON!
  AssignmentDurationInSeconds: JSON!
  Reward: String!
  Title: String!
  Keywords: String
  Description: String!
  Question: String
  RequesterAnnotation: String
  QualificationRequirements: [AwsMturkSiInput]
  UniqueRequestToken: String
  AssignmentReviewPolicy: AwsMturkSpInput
  HITReviewPolicy: AwsMturkSpInput
  HITLayoutId: String
  HITLayoutParameters: [AwsMturkSvInput]
}

type AwsMturkCreateHITOutput {
  HIT: AwsMturkSy
}

input AwsMturkCreateHITTypeInput {
  AutoApprovalDelayInSeconds: JSON
  AssignmentDurationInSeconds: JSON!
  Reward: String!
  Title: String!
  Keywords: String
  Description: String!
  QualificationRequirements: [AwsMturkSiInput]
}

type AwsMturkCreateHITTypeOutput {
  HITTypeId: String
}

input AwsMturkCreateHITWithHITTypeInput {
  HITTypeId: String!
  MaxAssignments: Int
  LifetimeInSeconds: JSON!
  Question: String
  RequesterAnnotation: String
  UniqueRequestToken: String
  AssignmentReviewPolicy: AwsMturkSpInput
  HITReviewPolicy: AwsMturkSpInput
  HITLayoutId: String
  HITLayoutParameters: [AwsMturkSvInput]
}

type AwsMturkCreateHITWithHITTypeOutput {
  HIT: AwsMturkSy
}

input AwsMturkCreateQualificationTypeInput {
  Name: String!
  Keywords: String
  Description: String!
  QualificationTypeStatus: String!
  RetryDelayInSeconds: JSON
  Test: String
  AnswerKey: String
  TestDurationInSeconds: JSON
  AutoGranted: Boolean
  AutoGrantedValue: Int
}

type AwsMturkCreateQualificationTypeOutput {
  QualificationType: AwsMturkS19
}

input AwsMturkCreateWorkerBlockInput {
  WorkerId: String!
  Reason: String!
}

input AwsMturkDeleteHITInput {
  HITId: String!
}

input AwsMturkDeleteQualificationTypeInput {
  QualificationTypeId: String!
}

input AwsMturkDeleteWorkerBlockInput {
  WorkerId: String!
  Reason: String
}

input AwsMturkDisassociateQualificationFromWorkerInput {
  WorkerId: String!
  QualificationTypeId: String!
  Reason: String
}

type AwsMturkGetAccountBalanceOutput {
  AvailableBalance: String
  OnHoldBalance: String
}

input AwsMturkGetAssignmentInput {
  AssignmentId: String!
}

type AwsMturkGetAssignmentOutput {
  Assignment: AwsMturkS1o
  HIT: AwsMturkSy
}

input AwsMturkGetFileUploadURLInput {
  AssignmentId: String!
  QuestionIdentifier: String!
}

type AwsMturkGetFileUploadURLOutput {
  FileUploadURL: String
}

input AwsMturkGetHITInput {
  HITId: String!
}

type AwsMturkGetHITOutput {
  HIT: AwsMturkSy
}

input AwsMturkGetQualificationScoreInput {
  QualificationTypeId: String!
  WorkerId: String!
}

type AwsMturkGetQualificationScoreOutput {
  Qualification: AwsMturkS1w
}

input AwsMturkGetQualificationTypeInput {
  QualificationTypeId: String!
}

type AwsMturkGetQualificationTypeOutput {
  QualificationType: AwsMturkS19
}

input AwsMturkListAssignmentsForHITInput {
  HITId: String!
  NextToken: String
  MaxResults: Int
  AssignmentStatuses: [String]
}

type AwsMturkListAssignmentsForHITOutput {
  NextToken: String
  NumResults: Int
  Assignments: [AwsMturkS1o]
}

input AwsMturkListBonusPaymentsInput {
  HITId: String
  AssignmentId: String
  NextToken: String
  MaxResults: Int
}

type AwsMturkListBonusPaymentsOutput {
  NumResults: Int
  NextToken: String
  BonusPayments: [AwsMturkListBonusPaymentsOutputBonusPayments]
}

type AwsMturkListBonusPaymentsOutputBonusPayments {
  WorkerId: String
  BonusAmount: String
  AssignmentId: String
  Reason: String
  GrantTime: Date
}

input AwsMturkListHITsForQualificationTypeInput {
  QualificationTypeId: String!
  NextToken: String
  MaxResults: Int
}

type AwsMturkListHITsForQualificationTypeOutput {
  NextToken: String
  NumResults: Int
  HITs: [AwsMturkSy]
}

input AwsMturkListHITsInput {
  NextToken: String
  MaxResults: Int
}

type AwsMturkListHITsOutput {
  NextToken: String
  NumResults: Int
  HITs: [AwsMturkSy]
}

input AwsMturkListQualificationRequestsInput {
  QualificationTypeId: String
  NextToken: String
  MaxResults: Int
}

type AwsMturkListQualificationRequestsOutput {
  NumResults: Int
  NextToken: String
  QualificationRequests: [AwsMturkListQualificationRequestsOutputQualificationRequests]
}

type AwsMturkListQualificationRequestsOutputQualificationRequests {
  QualificationRequestId: String
  QualificationTypeId: String
  WorkerId: String
  Test: String
  Answer: String
  SubmitTime: Date
}

input AwsMturkListQualificationTypesInput {
  Query: String
  MustBeRequestable: Boolean!
  MustBeOwnedByCaller: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsMturkListQualificationTypesOutput {
  NumResults: Int
  NextToken: String
  QualificationTypes: [AwsMturkS19]
}

input AwsMturkListReviewableHITsInput {
  HITTypeId: String
  Status: String
  NextToken: String
  MaxResults: Int
}

type AwsMturkListReviewableHITsOutput {
  NextToken: String
  NumResults: Int
  HITs: [AwsMturkSy]
}

input AwsMturkListReviewPolicyResultsForHITInput {
  HITId: String!
  PolicyLevels: [String]
  RetrieveActions: Boolean
  RetrieveResults: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsMturkListReviewPolicyResultsForHITOutput {
  HITId: String
  AssignmentReviewPolicy: AwsMturkSp
  HITReviewPolicy: AwsMturkSp
  AssignmentReviewReport: AwsMturkS2q
  HITReviewReport: AwsMturkS2q
  NextToken: String
}

input AwsMturkListWorkerBlocksInput {
  NextToken: String
  MaxResults: Int
}

type AwsMturkListWorkerBlocksOutput {
  NextToken: String
  NumResults: Int
  WorkerBlocks: [AwsMturkListWorkerBlocksOutputWorkerBlocks]
}

type AwsMturkListWorkerBlocksOutputWorkerBlocks {
  WorkerId: String
  Reason: String
}

input AwsMturkListWorkersWithQualificationTypeInput {
  QualificationTypeId: String!
  Status: String
  NextToken: String
  MaxResults: Int
}

type AwsMturkListWorkersWithQualificationTypeOutput {
  NextToken: String
  NumResults: Int
  Qualifications: [AwsMturkS1w]
}

input AwsMturkNotifyWorkersInput {
  Subject: String!
  MessageText: String!
  WorkerIds: [String]!
}

type AwsMturkNotifyWorkersOutput {
  NotifyWorkersFailureStatuses: [AwsMturkNotifyWorkersOutputNotifyWorkersFailureStatuses]
}

type AwsMturkNotifyWorkersOutputNotifyWorkersFailureStatuses {
  NotifyWorkersFailureCode: String
  NotifyWorkersFailureMessage: String
  WorkerId: String
}

input AwsMturkRejectAssignmentInput {
  AssignmentId: String!
  RequesterFeedback: String!
}

input AwsMturkRejectQualificationRequestInput {
  QualificationRequestId: String!
  Reason: String
}

type AwsMturkS19 {
  QualificationTypeId: String
  CreationTime: Date
  Name: String
  Description: String
  Keywords: String
  QualificationTypeStatus: String
  Test: String
  TestDurationInSeconds: JSON
  AnswerKey: String
  RetryDelayInSeconds: JSON
  IsRequestable: Boolean
  AutoGranted: Boolean
  AutoGrantedValue: Int
}

type AwsMturkS1o {
  AssignmentId: String
  WorkerId: String
  HITId: String
  AssignmentStatus: String
  AutoApprovalTime: Date
  AcceptTime: Date
  SubmitTime: Date
  ApprovalTime: Date
  RejectionTime: Date
  Deadline: Date
  Answer: String
  RequesterFeedback: String
}

type AwsMturkS1w {
  QualificationTypeId: String
  WorkerId: String
  GrantTime: Date
  IntegerValue: Int
  LocaleValue: AwsMturkSn
  Status: String
}

type AwsMturkS2q {
  ReviewResults: [AwsMturkS2qReviewResults]
  ReviewActions: [AwsMturkS2qReviewActions]
}

type AwsMturkS2qReviewActions {
  ActionId: String
  ActionName: String
  TargetId: String
  TargetType: String
  Status: String
  CompleteTime: Date
  Result: String
  ErrorCode: String
}

type AwsMturkS2qReviewResults {
  ActionId: String
  SubjectId: String
  SubjectType: String
  QuestionId: String
  Key: String
  Value: String
}

input AwsMturkS3jInput {
  Destination: String!
  Transport: String!
  Version: String!
  EventTypes: [String]!
}

input AwsMturkSendBonusInput {
  WorkerId: String!
  BonusAmount: String!
  AssignmentId: String!
  Reason: String!
  UniqueRequestToken: String
}

input AwsMturkSendTestEventNotificationInput {
  Notification: AwsMturkS3jInput!
  TestEventType: String!
}

type AwsMturkSi {
  QualificationTypeId: String!
  Comparator: String!
  IntegerValues: [Int]
  LocaleValues: [AwsMturkSn]
  RequiredToPreview: Boolean
}

input AwsMturkSiInput {
  QualificationTypeId: String!
  Comparator: String!
  IntegerValues: [Int]
  LocaleValues: [AwsMturkSnInput]
  RequiredToPreview: Boolean
}

type AwsMturkSn {
  Country: String!
  Subdivision: String
}

input AwsMturkSnInput {
  Country: String!
  Subdivision: String
}

type AwsMturkSp {
  PolicyName: String!
  Parameters: [AwsMturkSpParameters]
}

input AwsMturkSpInput {
  PolicyName: String!
  Parameters: [AwsMturkSpParametersInput]
}

type AwsMturkSpParameters {
  Key: String
  Values: [String]
  MapEntries: [AwsMturkSpParametersMapEntries]
}

input AwsMturkSpParametersInput {
  Key: String
  Values: [String]
  MapEntries: [AwsMturkSpParametersMapEntriesInput]
}

type AwsMturkSpParametersMapEntries {
  Key: String
  Values: [String]
}

input AwsMturkSpParametersMapEntriesInput {
  Key: String
  Values: [String]
}

input AwsMturkSvInput {
  Name: String!
  Value: String!
}

type AwsMturkSy {
  HITId: String
  HITTypeId: String
  HITGroupId: String
  HITLayoutId: String
  CreationTime: Date
  Title: String
  Description: String
  Question: String
  Keywords: String
  HITStatus: String
  MaxAssignments: Int
  Reward: String
  AutoApprovalDelayInSeconds: JSON
  Expiration: Date
  AssignmentDurationInSeconds: JSON
  RequesterAnnotation: String
  QualificationRequirements: [AwsMturkSi]
  HITReviewStatus: String
  NumberOfAssignmentsPending: Int
  NumberOfAssignmentsAvailable: Int
  NumberOfAssignmentsCompleted: Int
}

input AwsMturkUpdateExpirationForHITInput {
  HITId: String!
  ExpireAt: Date!
}

input AwsMturkUpdateHITReviewStatusInput {
  HITId: String!
  Revert: Boolean
}

input AwsMturkUpdateHITTypeOfHITInput {
  HITId: String!
  HITTypeId: String!
}

input AwsMturkUpdateNotificationSettingsInput {
  HITTypeId: String!
  Notification: AwsMturkS3jInput
  Active: Boolean
}

input AwsMturkUpdateQualificationTypeInput {
  QualificationTypeId: String!
  Description: String
  QualificationTypeStatus: String
  Test: String
  AnswerKey: String
  TestDurationInSeconds: JSON
  RetryDelayInSeconds: JSON
  AutoGranted: Boolean
  AutoGrantedValue: Int
}

type AwsMturkUpdateQualificationTypeOutput {
  QualificationType: AwsMturkS19
}

# AWS OpsWorks (2013-02-18)
type AwsOpsworks {
  # opsworks.AssignInstance
  AssignInstance(input: AwsOpsworksAssignInstanceInput!): JSON

  # opsworks.AssignVolume
  AssignVolume(input: AwsOpsworksAssignVolumeInput!): JSON

  # opsworks.AssociateElasticIp
  AssociateElasticIp(input: AwsOpsworksAssociateElasticIpInput!): JSON

  # opsworks.AttachElasticLoadBalancer
  AttachElasticLoadBalancer(input: AwsOpsworksAttachElasticLoadBalancerInput!): JSON

  # opsworks.CloneStack
  CloneStack(input: AwsOpsworksCloneStackInput!): AwsOpsworksCloneStackOutput

  # opsworks.CreateApp
  CreateApp(input: AwsOpsworksCreateAppInput!): AwsOpsworksCreateAppOutput

  # opsworks.CreateDeployment
  CreateDeployment(input: AwsOpsworksCreateDeploymentInput!): AwsOpsworksCreateDeploymentOutput

  # opsworks.CreateInstance
  CreateInstance(input: AwsOpsworksCreateInstanceInput!): AwsOpsworksCreateInstanceOutput

  # opsworks.CreateLayer
  CreateLayer(input: AwsOpsworksCreateLayerInput!): AwsOpsworksCreateLayerOutput

  # opsworks.CreateStack
  CreateStack(input: AwsOpsworksCreateStackInput!): AwsOpsworksCreateStackOutput

  # opsworks.CreateUserProfile
  CreateUserProfile(input: AwsOpsworksCreateUserProfileInput!): AwsOpsworksCreateUserProfileOutput

  # opsworks.DeleteApp
  DeleteApp(input: AwsOpsworksDeleteAppInput!): JSON

  # opsworks.DeleteInstance
  DeleteInstance(input: AwsOpsworksDeleteInstanceInput!): JSON

  # opsworks.DeleteLayer
  DeleteLayer(input: AwsOpsworksDeleteLayerInput!): JSON

  # opsworks.DeleteStack
  DeleteStack(input: AwsOpsworksDeleteStackInput!): JSON

  # opsworks.DeleteUserProfile
  DeleteUserProfile(input: AwsOpsworksDeleteUserProfileInput!): JSON

  # opsworks.DeregisterEcsCluster
  DeregisterEcsCluster(input: AwsOpsworksDeregisterEcsClusterInput!): JSON

  # opsworks.DeregisterElasticIp
  DeregisterElasticIp(input: AwsOpsworksDeregisterElasticIpInput!): JSON

  # opsworks.DeregisterInstance
  DeregisterInstance(input: AwsOpsworksDeregisterInstanceInput!): JSON

  # opsworks.DeregisterRdsDbInstance
  DeregisterRdsDbInstance(input: AwsOpsworksDeregisterRdsDbInstanceInput!): JSON

  # opsworks.DeregisterVolume
  DeregisterVolume(input: AwsOpsworksDeregisterVolumeInput!): JSON

  # opsworks.DescribeAgentVersions
  DescribeAgentVersions(input: AwsOpsworksDescribeAgentVersionsInput): AwsOpsworksDescribeAgentVersionsOutput

  # opsworks.DescribeApps
  DescribeApps(input: AwsOpsworksDescribeAppsInput): AwsOpsworksDescribeAppsOutput

  # opsworks.DescribeCommands
  DescribeCommands(input: AwsOpsworksDescribeCommandsInput): AwsOpsworksDescribeCommandsOutput

  # opsworks.DescribeDeployments
  DescribeDeployments(input: AwsOpsworksDescribeDeploymentsInput): AwsOpsworksDescribeDeploymentsOutput

  # opsworks.DescribeEcsClusters
  DescribeEcsClusters(input: AwsOpsworksDescribeEcsClustersInput): AwsOpsworksDescribeEcsClustersOutput

  # opsworks.DescribeElasticIps
  DescribeElasticIps(input: AwsOpsworksDescribeElasticIpsInput): AwsOpsworksDescribeElasticIpsOutput

  # opsworks.DescribeElasticLoadBalancers
  DescribeElasticLoadBalancers(input: AwsOpsworksDescribeElasticLoadBalancersInput): AwsOpsworksDescribeElasticLoadBalancersOutput

  # opsworks.DescribeInstances
  DescribeInstances(input: AwsOpsworksDescribeInstancesInput): AwsOpsworksDescribeInstancesOutput

  # opsworks.DescribeLayers
  DescribeLayers(input: AwsOpsworksDescribeLayersInput): AwsOpsworksDescribeLayersOutput

  # opsworks.DescribeLoadBasedAutoScaling
  DescribeLoadBasedAutoScaling(input: AwsOpsworksDescribeLoadBasedAutoScalingInput!): AwsOpsworksDescribeLoadBasedAutoScalingOutput

  # opsworks.DescribeMyUserProfile
  DescribeMyUserProfile: AwsOpsworksDescribeMyUserProfileOutput

  # opsworks.DescribePermissions
  DescribePermissions(input: AwsOpsworksDescribePermissionsInput): AwsOpsworksDescribePermissionsOutput

  # opsworks.DescribeRaidArrays
  DescribeRaidArrays(input: AwsOpsworksDescribeRaidArraysInput): AwsOpsworksDescribeRaidArraysOutput

  # opsworks.DescribeRdsDbInstances
  DescribeRdsDbInstances(input: AwsOpsworksDescribeRdsDbInstancesInput!): AwsOpsworksDescribeRdsDbInstancesOutput

  # opsworks.DescribeServiceErrors
  DescribeServiceErrors(input: AwsOpsworksDescribeServiceErrorsInput): AwsOpsworksDescribeServiceErrorsOutput

  # opsworks.DescribeStackProvisioningParameters
  DescribeStackProvisioningParameters(input: AwsOpsworksDescribeStackProvisioningParametersInput!): AwsOpsworksDescribeStackProvisioningParametersOutput

  # opsworks.DescribeStackSummary
  DescribeStackSummary(input: AwsOpsworksDescribeStackSummaryInput!): AwsOpsworksDescribeStackSummaryOutput

  # opsworks.DescribeStacks
  DescribeStacks(input: AwsOpsworksDescribeStacksInput): AwsOpsworksDescribeStacksOutput

  # opsworks.DescribeTimeBasedAutoScaling
  DescribeTimeBasedAutoScaling(input: AwsOpsworksDescribeTimeBasedAutoScalingInput!): AwsOpsworksDescribeTimeBasedAutoScalingOutput

  # opsworks.DescribeUserProfiles
  DescribeUserProfiles(input: AwsOpsworksDescribeUserProfilesInput): AwsOpsworksDescribeUserProfilesOutput

  # opsworks.DescribeVolumes
  DescribeVolumes(input: AwsOpsworksDescribeVolumesInput): AwsOpsworksDescribeVolumesOutput

  # opsworks.DetachElasticLoadBalancer
  DetachElasticLoadBalancer(input: AwsOpsworksDetachElasticLoadBalancerInput!): JSON

  # opsworks.DisassociateElasticIp
  DisassociateElasticIp(input: AwsOpsworksDisassociateElasticIpInput!): JSON

  # opsworks.GetHostnameSuggestion
  GetHostnameSuggestion(input: AwsOpsworksGetHostnameSuggestionInput!): AwsOpsworksGetHostnameSuggestionOutput

  # opsworks.GrantAccess
  GrantAccess(input: AwsOpsworksGrantAccessInput!): AwsOpsworksGrantAccessOutput

  # opsworks.ListTags
  ListTags(input: AwsOpsworksListTagsInput!): AwsOpsworksListTagsOutput

  # opsworks.RebootInstance
  RebootInstance(input: AwsOpsworksRebootInstanceInput!): JSON

  # opsworks.RegisterEcsCluster
  RegisterEcsCluster(input: AwsOpsworksRegisterEcsClusterInput!): AwsOpsworksRegisterEcsClusterOutput

  # opsworks.RegisterElasticIp
  RegisterElasticIp(input: AwsOpsworksRegisterElasticIpInput!): AwsOpsworksRegisterElasticIpOutput

  # opsworks.RegisterInstance
  RegisterInstance(input: AwsOpsworksRegisterInstanceInput!): AwsOpsworksRegisterInstanceOutput

  # opsworks.RegisterRdsDbInstance
  RegisterRdsDbInstance(input: AwsOpsworksRegisterRdsDbInstanceInput!): JSON

  # opsworks.RegisterVolume
  RegisterVolume(input: AwsOpsworksRegisterVolumeInput!): AwsOpsworksRegisterVolumeOutput

  # opsworks.SetLoadBasedAutoScaling
  SetLoadBasedAutoScaling(input: AwsOpsworksSetLoadBasedAutoScalingInput!): JSON

  # opsworks.SetPermission
  SetPermission(input: AwsOpsworksSetPermissionInput!): JSON

  # opsworks.SetTimeBasedAutoScaling
  SetTimeBasedAutoScaling(input: AwsOpsworksSetTimeBasedAutoScalingInput!): JSON

  # opsworks.StartInstance
  StartInstance(input: AwsOpsworksStartInstanceInput!): JSON

  # opsworks.StartStack
  StartStack(input: AwsOpsworksStartStackInput!): JSON

  # opsworks.StopInstance
  StopInstance(input: AwsOpsworksStopInstanceInput!): JSON

  # opsworks.StopStack
  StopStack(input: AwsOpsworksStopStackInput!): JSON

  # opsworks.TagResource
  TagResource(input: AwsOpsworksTagResourceInput!): JSON

  # opsworks.UnassignInstance
  UnassignInstance(input: AwsOpsworksUnassignInstanceInput!): JSON

  # opsworks.UnassignVolume
  UnassignVolume(input: AwsOpsworksUnassignVolumeInput!): JSON

  # opsworks.UntagResource
  UntagResource(input: AwsOpsworksUntagResourceInput!): JSON

  # opsworks.UpdateApp
  UpdateApp(input: AwsOpsworksUpdateAppInput!): JSON

  # opsworks.UpdateElasticIp
  UpdateElasticIp(input: AwsOpsworksUpdateElasticIpInput!): JSON

  # opsworks.UpdateInstance
  UpdateInstance(input: AwsOpsworksUpdateInstanceInput!): JSON

  # opsworks.UpdateLayer
  UpdateLayer(input: AwsOpsworksUpdateLayerInput!): JSON

  # opsworks.UpdateMyUserProfile
  UpdateMyUserProfile(input: AwsOpsworksUpdateMyUserProfileInput): JSON

  # opsworks.UpdateRdsDbInstance
  UpdateRdsDbInstance(input: AwsOpsworksUpdateRdsDbInstanceInput!): JSON

  # opsworks.UpdateStack
  UpdateStack(input: AwsOpsworksUpdateStackInput!): JSON

  # opsworks.UpdateUserProfile
  UpdateUserProfile(input: AwsOpsworksUpdateUserProfileInput!): JSON

  # opsworks.UpdateVolume
  UpdateVolume(input: AwsOpsworksUpdateVolumeInput!): JSON
}

input AwsOpsworksAssignInstanceInput {
  InstanceId: String!
  LayerIds: [String]!
}

input AwsOpsworksAssignVolumeInput {
  VolumeId: String!
  InstanceId: String
}

input AwsOpsworksAssociateElasticIpInput {
  ElasticIp: String!
  InstanceId: String
}

input AwsOpsworksAttachElasticLoadBalancerInput {
  ElasticLoadBalancerName: String!
  LayerId: String!
}

input AwsOpsworksCloneStackInput {
  SourceStackId: String!
  Name: String
  Region: String
  VpcId: String
  Attributes: JSON
  ServiceRoleArn: String!
  DefaultInstanceProfileArn: String
  DefaultOs: String
  HostnameTheme: String
  DefaultAvailabilityZone: String
  DefaultSubnetId: String
  CustomJson: String
  ConfigurationManager: AwsOpsworksSaInput
  ChefConfiguration: AwsOpsworksSbInput
  UseCustomCookbooks: Boolean
  UseOpsworksSecurityGroups: Boolean
  CustomCookbooksSource: AwsOpsworksSdInput
  DefaultSshKeyName: String
  ClonePermissions: Boolean
  CloneAppIds: [String]
  DefaultRootDeviceType: String
  AgentVersion: String
}

type AwsOpsworksCloneStackOutput {
  StackId: String
}

# AWS OpsWorks for Chef Automate (2016-11-01)
type AwsOpsworkscm {
  # opsworkscm.AssociateNode
  AssociateNode(input: AwsOpsworkscmAssociateNodeInput!): AwsOpsworkscmAssociateNodeOutput

  # opsworkscm.CreateBackup
  CreateBackup(input: AwsOpsworkscmCreateBackupInput!): AwsOpsworkscmCreateBackupOutput

  # opsworkscm.CreateServer
  CreateServer(input: AwsOpsworkscmCreateServerInput!): AwsOpsworkscmCreateServerOutput

  # opsworkscm.DeleteBackup
  DeleteBackup(input: AwsOpsworkscmDeleteBackupInput!): JSON

  # opsworkscm.DeleteServer
  DeleteServer(input: AwsOpsworkscmDeleteServerInput!): JSON

  # opsworkscm.DescribeAccountAttributes
  DescribeAccountAttributes(input: JSON): AwsOpsworkscmDescribeAccountAttributesOutput

  # opsworkscm.DescribeBackups
  DescribeBackups(input: AwsOpsworkscmDescribeBackupsInput): AwsOpsworkscmDescribeBackupsOutput

  # opsworkscm.DescribeEvents
  DescribeEvents(input: AwsOpsworkscmDescribeEventsInput!): AwsOpsworkscmDescribeEventsOutput

  # opsworkscm.DescribeNodeAssociationStatus
  DescribeNodeAssociationStatus(input: AwsOpsworkscmDescribeNodeAssociationStatusInput!): AwsOpsworkscmDescribeNodeAssociationStatusOutput

  # opsworkscm.DescribeServers
  DescribeServers(input: AwsOpsworkscmDescribeServersInput): AwsOpsworkscmDescribeServersOutput

  # opsworkscm.DisassociateNode
  DisassociateNode(input: AwsOpsworkscmDisassociateNodeInput!): AwsOpsworkscmDisassociateNodeOutput

  # opsworkscm.RestoreServer
  RestoreServer(input: AwsOpsworkscmRestoreServerInput!): JSON

  # opsworkscm.StartMaintenance
  StartMaintenance(input: AwsOpsworkscmStartMaintenanceInput!): AwsOpsworkscmStartMaintenanceOutput

  # opsworkscm.UpdateServer
  UpdateServer(input: AwsOpsworkscmUpdateServerInput!): AwsOpsworkscmUpdateServerOutput

  # opsworkscm.UpdateServerEngineAttributes
  UpdateServerEngineAttributes(input: AwsOpsworkscmUpdateServerEngineAttributesInput!): AwsOpsworkscmUpdateServerEngineAttributesOutput
}

input AwsOpsworkscmAssociateNodeInput {
  ServerName: String!
  NodeName: String!
  EngineAttributes: [AwsOpsworkscmS4Input]!
}

type AwsOpsworkscmAssociateNodeOutput {
  NodeAssociationStatusToken: String
}

input AwsOpsworkscmCreateBackupInput {
  ServerName: String!
  Description: String
}

type AwsOpsworkscmCreateBackupOutput {
  Backup: AwsOpsworkscmSd
}

input AwsOpsworkscmCreateServerInput {
  AssociatePublicIpAddress: Boolean
  DisableAutomatedBackup: Boolean
  Engine: String
  EngineModel: String
  EngineVersion: String
  EngineAttributes: [AwsOpsworkscmS4Input]
  BackupRetentionCount: Int
  ServerName: String!
  InstanceProfileArn: String!
  InstanceType: String!
  KeyPair: String
  PreferredMaintenanceWindow: String
  PreferredBackupWindow: String
  SecurityGroupIds: [String]
  ServiceRoleArn: String!
  SubnetIds: [String]
  BackupId: String
}

type AwsOpsworkscmCreateServerOutput {
  Server: AwsOpsworkscmSs
}

input AwsOpsworkscmDeleteBackupInput {
  BackupId: String!
}

input AwsOpsworkscmDeleteServerInput {
  ServerName: String!
}

type AwsOpsworkscmDescribeAccountAttributesOutput {
  Attributes: [AwsOpsworkscmDescribeAccountAttributesOutputAttributes]
}

type AwsOpsworkscmDescribeAccountAttributesOutputAttributes {
  Name: String
  Maximum: Int
  Used: Int
}

input AwsOpsworkscmDescribeBackupsInput {
  BackupId: String
  ServerName: String
  NextToken: String
  MaxResults: Int
}

type AwsOpsworkscmDescribeBackupsOutput {
  Backups: [AwsOpsworkscmSd]
  NextToken: String
}

input AwsOpsworkscmDescribeEventsInput {
  ServerName: String!
  NextToken: String
  MaxResults: Int
}

type AwsOpsworkscmDescribeEventsOutput {
  ServerEvents: [AwsOpsworkscmDescribeEventsOutputServerEvents]
  NextToken: String
}

type AwsOpsworkscmDescribeEventsOutputServerEvents {
  CreatedAt: Date
  ServerName: String
  Message: String
  LogUrl: String
}

input AwsOpsworkscmDescribeNodeAssociationStatusInput {
  NodeAssociationStatusToken: String!
  ServerName: String!
}

type AwsOpsworkscmDescribeNodeAssociationStatusOutput {
  NodeAssociationStatus: String
  EngineAttributes: [AwsOpsworkscmS4]
}

input AwsOpsworkscmDescribeServersInput {
  ServerName: String
  NextToken: String
  MaxResults: Int
}

type AwsOpsworkscmDescribeServersOutput {
  Servers: [AwsOpsworkscmSs]
  NextToken: String
}

input AwsOpsworkscmDisassociateNodeInput {
  ServerName: String!
  NodeName: String!
  EngineAttributes: [AwsOpsworkscmS4Input]
}

type AwsOpsworkscmDisassociateNodeOutput {
  NodeAssociationStatusToken: String
}

input AwsOpsworkscmRestoreServerInput {
  BackupId: String!
  ServerName: String!
  InstanceType: String
  KeyPair: String
}

type AwsOpsworkscmS4 {
  Name: String
  Value: String
}

input AwsOpsworkscmS4Input {
  Name: String
  Value: String
}

type AwsOpsworkscmSd {
  BackupArn: String
  BackupId: String
  BackupType: String
  CreatedAt: Date
  Description: String
  Engine: String
  EngineModel: String
  EngineVersion: String
  InstanceProfileArn: String
  InstanceType: String
  KeyPair: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  S3DataSize: Int
  S3DataUrl: String
  S3LogUrl: String
  SecurityGroupIds: [String]
  ServerName: String
  ServiceRoleArn: String
  Status: String
  StatusDescription: String
  SubnetIds: [String]
  ToolsVersion: String
  UserArn: String
}

type AwsOpsworkscmSs {
  AssociatePublicIpAddress: Boolean
  BackupRetentionCount: Int
  ServerName: String
  CreatedAt: Date
  CloudFormationStackArn: String
  DisableAutomatedBackup: Boolean
  Endpoint: String
  Engine: String
  EngineModel: String
  EngineAttributes: [AwsOpsworkscmS4]
  EngineVersion: String
  InstanceProfileArn: String
  InstanceType: String
  KeyPair: String
  MaintenanceStatus: String
  PreferredMaintenanceWindow: String
  PreferredBackupWindow: String
  SecurityGroupIds: [String]
  ServiceRoleArn: String
  Status: String
  StatusReason: String
  SubnetIds: [String]
  ServerArn: String
}

input AwsOpsworkscmStartMaintenanceInput {
  ServerName: String!
  EngineAttributes: [AwsOpsworkscmS4Input]
}

type AwsOpsworkscmStartMaintenanceOutput {
  Server: AwsOpsworkscmSs
}

input AwsOpsworkscmUpdateServerEngineAttributesInput {
  ServerName: String!
  AttributeName: String!
  AttributeValue: String
}

type AwsOpsworkscmUpdateServerEngineAttributesOutput {
  Server: AwsOpsworkscmSs
}

input AwsOpsworkscmUpdateServerInput {
  DisableAutomatedBackup: Boolean
  BackupRetentionCount: Int
  ServerName: String!
  PreferredMaintenanceWindow: String
  PreferredBackupWindow: String
}

type AwsOpsworkscmUpdateServerOutput {
  Server: AwsOpsworkscmSs
}

input AwsOpsworksCreateAppInput {
  StackId: String!
  Shortname: String
  Name: String!
  Description: String
  DataSources: [AwsOpsworksSiInput]
  Type: String!
  AppSource: AwsOpsworksSdInput
  Domains: [String]
  EnableSsl: Boolean
  SslConfiguration: AwsOpsworksSlInput
  Attributes: JSON
  Environment: [AwsOpsworksSoInput]
}

type AwsOpsworksCreateAppOutput {
  AppId: String
}

input AwsOpsworksCreateDeploymentInput {
  StackId: String!
  AppId: String
  InstanceIds: [String]
  LayerIds: [String]
  Command: AwsOpsworksSsInput!
  Comment: String
  CustomJson: String
}

type AwsOpsworksCreateDeploymentOutput {
  DeploymentId: String
}

input AwsOpsworksCreateInstanceInput {
  StackId: String!
  LayerIds: [String]!
  InstanceType: String!
  AutoScalingType: String
  Hostname: String
  Os: String
  AmiId: String
  SshKeyName: String
  AvailabilityZone: String
  VirtualizationType: String
  SubnetId: String
  Architecture: String
  RootDeviceType: String
  BlockDeviceMappings: [AwsOpsworksSzInput]
  InstallUpdatesOnBoot: Boolean
  EbsOptimized: Boolean
  AgentVersion: String
  Tenancy: String
}

type AwsOpsworksCreateInstanceOutput {
  InstanceId: String
}

input AwsOpsworksCreateLayerInput {
  StackId: String!
  Type: String!
  Name: String!
  Shortname: String!
  Attributes: JSON
  CloudWatchLogsConfiguration: AwsOpsworksS19Input
  CustomInstanceProfileArn: String
  CustomJson: String
  CustomSecurityGroupIds: [String]
  Packages: [String]
  VolumeConfigurations: [AwsOpsworksS1fInput]
  EnableAutoHealing: Boolean
  AutoAssignElasticIps: Boolean
  AutoAssignPublicIps: Boolean
  CustomRecipes: AwsOpsworksS1hInput
  InstallUpdatesOnBoot: Boolean
  UseEbsOptimizedInstances: Boolean
  LifecycleEventConfiguration: AwsOpsworksS1iInput
}

type AwsOpsworksCreateLayerOutput {
  LayerId: String
}

input AwsOpsworksCreateStackInput {
  Name: String!
  Region: String!
  VpcId: String
  Attributes: JSON
  ServiceRoleArn: String!
  DefaultInstanceProfileArn: String!
  DefaultOs: String
  HostnameTheme: String
  DefaultAvailabilityZone: String
  DefaultSubnetId: String
  CustomJson: String
  ConfigurationManager: AwsOpsworksSaInput
  ChefConfiguration: AwsOpsworksSbInput
  UseCustomCookbooks: Boolean
  UseOpsworksSecurityGroups: Boolean
  CustomCookbooksSource: AwsOpsworksSdInput
  DefaultSshKeyName: String
  DefaultRootDeviceType: String
  AgentVersion: String
}

type AwsOpsworksCreateStackOutput {
  StackId: String
}

input AwsOpsworksCreateUserProfileInput {
  IamUserArn: String!
  SshUsername: String
  SshPublicKey: String
  AllowSelfManagement: Boolean
}

type AwsOpsworksCreateUserProfileOutput {
  IamUserArn: String
}

input AwsOpsworksDeleteAppInput {
  AppId: String!
}

input AwsOpsworksDeleteInstanceInput {
  InstanceId: String!
  DeleteElasticIp: Boolean
  DeleteVolumes: Boolean
}

input AwsOpsworksDeleteLayerInput {
  LayerId: String!
}

input AwsOpsworksDeleteStackInput {
  StackId: String!
}

input AwsOpsworksDeleteUserProfileInput {
  IamUserArn: String!
}

input AwsOpsworksDeregisterEcsClusterInput {
  EcsClusterArn: String!
}

input AwsOpsworksDeregisterElasticIpInput {
  ElasticIp: String!
}

input AwsOpsworksDeregisterInstanceInput {
  InstanceId: String!
}

input AwsOpsworksDeregisterRdsDbInstanceInput {
  RdsDbInstanceArn: String!
}

input AwsOpsworksDeregisterVolumeInput {
  VolumeId: String!
}

input AwsOpsworksDescribeAgentVersionsInput {
  StackId: String
  ConfigurationManager: AwsOpsworksSaInput
}

type AwsOpsworksDescribeAgentVersionsOutput {
  AgentVersions: [AwsOpsworksDescribeAgentVersionsOutputAgentVersions]
}

type AwsOpsworksDescribeAgentVersionsOutputAgentVersions {
  Version: String
  ConfigurationManager: AwsOpsworksSa
}

input AwsOpsworksDescribeAppsInput {
  StackId: String
  AppIds: [String]
}

type AwsOpsworksDescribeAppsOutput {
  Apps: [AwsOpsworksDescribeAppsOutputApps]
}

type AwsOpsworksDescribeAppsOutputApps {
  AppId: String
  StackId: String
  Shortname: String
  Name: String
  Description: String
  DataSources: [AwsOpsworksSi]
  Type: String
  AppSource: AwsOpsworksSd
  Domains: [String]
  EnableSsl: Boolean
  SslConfiguration: AwsOpsworksSl
  Attributes: JSON
  CreatedAt: String
  Environment: [AwsOpsworksSo]
}

input AwsOpsworksDescribeCommandsInput {
  DeploymentId: String
  InstanceId: String
  CommandIds: [String]
}

type AwsOpsworksDescribeCommandsOutput {
  Commands: [AwsOpsworksDescribeCommandsOutputCommands]
}

type AwsOpsworksDescribeCommandsOutputCommands {
  CommandId: String
  InstanceId: String
  DeploymentId: String
  CreatedAt: String
  AcknowledgedAt: String
  CompletedAt: String
  Status: String
  ExitCode: Int
  LogUrl: String
  Type: String
}

input AwsOpsworksDescribeDeploymentsInput {
  StackId: String
  AppId: String
  DeploymentIds: [String]
}

type AwsOpsworksDescribeDeploymentsOutput {
  Deployments: [AwsOpsworksDescribeDeploymentsOutputDeployments]
}

type AwsOpsworksDescribeDeploymentsOutputDeployments {
  DeploymentId: String
  StackId: String
  AppId: String
  CreatedAt: String
  CompletedAt: String
  Duration: Int
  IamUserArn: String
  Comment: String
  Command: AwsOpsworksSs
  Status: String
  CustomJson: String
  InstanceIds: [String]
}

input AwsOpsworksDescribeEcsClustersInput {
  EcsClusterArns: [String]
  StackId: String
  NextToken: String
  MaxResults: Int
}

type AwsOpsworksDescribeEcsClustersOutput {
  EcsClusters: [AwsOpsworksDescribeEcsClustersOutputEcsClusters]
  NextToken: String
}

type AwsOpsworksDescribeEcsClustersOutputEcsClusters {
  EcsClusterArn: String
  EcsClusterName: String
  StackId: String
  RegisteredAt: String
}

input AwsOpsworksDescribeElasticIpsInput {
  InstanceId: String
  StackId: String
  Ips: [String]
}

type AwsOpsworksDescribeElasticIpsOutput {
  ElasticIps: [AwsOpsworksDescribeElasticIpsOutputElasticIps]
}

type AwsOpsworksDescribeElasticIpsOutputElasticIps {
  Ip: String
  Name: String
  Domain: String
  Region: String
  InstanceId: String
}

input AwsOpsworksDescribeElasticLoadBalancersInput {
  StackId: String
  LayerIds: [String]
}

type AwsOpsworksDescribeElasticLoadBalancersOutput {
  ElasticLoadBalancers: [AwsOpsworksDescribeElasticLoadBalancersOutputElasticLoadBalancers]
}

type AwsOpsworksDescribeElasticLoadBalancersOutputElasticLoadBalancers {
  ElasticLoadBalancerName: String
  Region: String
  DnsName: String
  StackId: String
  LayerId: String
  VpcId: String
  AvailabilityZones: [String]
  SubnetIds: [String]
  Ec2InstanceIds: [String]
}

input AwsOpsworksDescribeInstancesInput {
  StackId: String
  LayerId: String
  InstanceIds: [String]
}

type AwsOpsworksDescribeInstancesOutput {
  Instances: [AwsOpsworksDescribeInstancesOutputInstances]
}

type AwsOpsworksDescribeInstancesOutputInstances {
  AgentVersion: String
  AmiId: String
  Architecture: String
  Arn: String
  AutoScalingType: String
  AvailabilityZone: String
  BlockDeviceMappings: [AwsOpsworksSz]
  CreatedAt: String
  EbsOptimized: Boolean
  Ec2InstanceId: String
  EcsClusterArn: String
  EcsContainerInstanceArn: String
  ElasticIp: String
  Hostname: String
  InfrastructureClass: String
  InstallUpdatesOnBoot: Boolean
  InstanceId: String
  InstanceProfileArn: String
  InstanceType: String
  LastServiceErrorId: String
  LayerIds: [String]
  Os: String
  Platform: String
  PrivateDns: String
  PrivateIp: String
  PublicDns: String
  PublicIp: String
  RegisteredBy: String
  ReportedAgentVersion: String
  ReportedOs: AwsOpsworksDescribeInstancesOutputInstancesReportedOs
  RootDeviceType: String
  RootDeviceVolumeId: String
  SecurityGroupIds: [String]
  SshHostDsaKeyFingerprint: String
  SshHostRsaKeyFingerprint: String
  SshKeyName: String
  StackId: String
  Status: String
  SubnetId: String
  Tenancy: String
  VirtualizationType: String
}

type AwsOpsworksDescribeInstancesOutputInstancesReportedOs {
  Family: String
  Name: String
  Version: String
}

input AwsOpsworksDescribeLayersInput {
  StackId: String
  LayerIds: [String]
}

type AwsOpsworksDescribeLayersOutput {
  Layers: [AwsOpsworksDescribeLayersOutputLayers]
}

type AwsOpsworksDescribeLayersOutputLayers {
  Arn: String
  StackId: String
  LayerId: String
  Type: String
  Name: String
  Shortname: String
  Attributes: JSON
  CloudWatchLogsConfiguration: AwsOpsworksS19
  CustomInstanceProfileArn: String
  CustomJson: String
  CustomSecurityGroupIds: [String]
  DefaultSecurityGroupNames: [String]
  Packages: [String]
  VolumeConfigurations: [AwsOpsworksS1f]
  EnableAutoHealing: Boolean
  AutoAssignElasticIps: Boolean
  AutoAssignPublicIps: Boolean
  DefaultRecipes: AwsOpsworksS1h
  CustomRecipes: AwsOpsworksS1h
  CreatedAt: String
  InstallUpdatesOnBoot: Boolean
  UseEbsOptimizedInstances: Boolean
  LifecycleEventConfiguration: AwsOpsworksS1i
}

input AwsOpsworksDescribeLoadBasedAutoScalingInput {
  LayerIds: [String]!
}

type AwsOpsworksDescribeLoadBasedAutoScalingOutput {
  LoadBasedAutoScalingConfigurations: [AwsOpsworksDescribeLoadBasedAutoScalingOutputLoadBasedAutoScalingConfigurations]
}

type AwsOpsworksDescribeLoadBasedAutoScalingOutputLoadBasedAutoScalingConfigurations {
  LayerId: String
  Enable: Boolean
  UpScaling: AwsOpsworksS36
  DownScaling: AwsOpsworksS36
}

type AwsOpsworksDescribeMyUserProfileOutput {
  UserProfile: AwsOpsworksDescribeMyUserProfileOutputUserProfile
}

type AwsOpsworksDescribeMyUserProfileOutputUserProfile {
  IamUserArn: String
  Name: String
  SshUsername: String
  SshPublicKey: String
}

input AwsOpsworksDescribePermissionsInput {
  IamUserArn: String
  StackId: String
}

type AwsOpsworksDescribePermissionsOutput {
  Permissions: [AwsOpsworksDescribePermissionsOutputPermissions]
}

type AwsOpsworksDescribePermissionsOutputPermissions {
  StackId: String
  IamUserArn: String
  AllowSsh: Boolean
  AllowSudo: Boolean
  Level: String
}

input AwsOpsworksDescribeRaidArraysInput {
  InstanceId: String
  StackId: String
  RaidArrayIds: [String]
}

type AwsOpsworksDescribeRaidArraysOutput {
  RaidArrays: [AwsOpsworksDescribeRaidArraysOutputRaidArrays]
}

type AwsOpsworksDescribeRaidArraysOutputRaidArrays {
  RaidArrayId: String
  InstanceId: String
  Name: String
  RaidLevel: Int
  NumberOfDisks: Int
  Size: Int
  Device: String
  MountPoint: String
  AvailabilityZone: String
  CreatedAt: String
  StackId: String
  VolumeType: String
  Iops: Int
}

input AwsOpsworksDescribeRdsDbInstancesInput {
  StackId: String!
  RdsDbInstanceArns: [String]
}

type AwsOpsworksDescribeRdsDbInstancesOutput {
  RdsDbInstances: [AwsOpsworksDescribeRdsDbInstancesOutputRdsDbInstances]
}

type AwsOpsworksDescribeRdsDbInstancesOutputRdsDbInstances {
  RdsDbInstanceArn: String
  DbInstanceIdentifier: String
  DbUser: String
  DbPassword: String
  Region: String
  Address: String
  Engine: String
  StackId: String
  MissingOnRds: Boolean
}

input AwsOpsworksDescribeServiceErrorsInput {
  StackId: String
  InstanceId: String
  ServiceErrorIds: [String]
}

type AwsOpsworksDescribeServiceErrorsOutput {
  ServiceErrors: [AwsOpsworksDescribeServiceErrorsOutputServiceErrors]
}

type AwsOpsworksDescribeServiceErrorsOutputServiceErrors {
  ServiceErrorId: String
  StackId: String
  InstanceId: String
  Type: String
  Message: String
  CreatedAt: String
}

input AwsOpsworksDescribeStackProvisioningParametersInput {
  StackId: String!
}

type AwsOpsworksDescribeStackProvisioningParametersOutput {
  AgentInstallerUrl: String
  Parameters: JSON
}

input AwsOpsworksDescribeStacksInput {
  StackIds: [String]
}

type AwsOpsworksDescribeStacksOutput {
  Stacks: [AwsOpsworksDescribeStacksOutputStacks]
}

type AwsOpsworksDescribeStacksOutputStacks {
  StackId: String
  Name: String
  Arn: String
  Region: String
  VpcId: String
  Attributes: JSON
  ServiceRoleArn: String
  DefaultInstanceProfileArn: String
  DefaultOs: String
  HostnameTheme: String
  DefaultAvailabilityZone: String
  DefaultSubnetId: String
  CustomJson: String
  ConfigurationManager: AwsOpsworksSa
  ChefConfiguration: AwsOpsworksSb
  UseCustomCookbooks: Boolean
  UseOpsworksSecurityGroups: Boolean
  CustomCookbooksSource: AwsOpsworksSd
  DefaultSshKeyName: String
  CreatedAt: String
  DefaultRootDeviceType: String
  AgentVersion: String
}

input AwsOpsworksDescribeStackSummaryInput {
  StackId: String!
}

type AwsOpsworksDescribeStackSummaryOutput {
  StackSummary: AwsOpsworksDescribeStackSummaryOutputStackSummary
}

type AwsOpsworksDescribeStackSummaryOutputStackSummary {
  StackId: String
  Name: String
  Arn: String
  LayersCount: Int
  AppsCount: Int
  InstancesCount: AwsOpsworksDescribeStackSummaryOutputStackSummaryInstancesCount
}

type AwsOpsworksDescribeStackSummaryOutputStackSummaryInstancesCount {
  Assigning: Int
  Booting: Int
  ConnectionLost: Int
  Deregistering: Int
  Online: Int
  Pending: Int
  Rebooting: Int
  Registered: Int
  Registering: Int
  Requested: Int
  RunningSetup: Int
  SetupFailed: Int
  ShuttingDown: Int
  StartFailed: Int
  Stopped: Int
  Stopping: Int
  Terminated: Int
  Terminating: Int
  Unassigning: Int
}

input AwsOpsworksDescribeTimeBasedAutoScalingInput {
  InstanceIds: [String]!
}

type AwsOpsworksDescribeTimeBasedAutoScalingOutput {
  TimeBasedAutoScalingConfigurations: [AwsOpsworksDescribeTimeBasedAutoScalingOutputTimeBasedAutoScalingConfigurations]
}

type AwsOpsworksDescribeTimeBasedAutoScalingOutputTimeBasedAutoScalingConfigurations {
  InstanceId: String
  AutoScalingSchedule: AwsOpsworksS46
}

input AwsOpsworksDescribeUserProfilesInput {
  IamUserArns: [String]
}

type AwsOpsworksDescribeUserProfilesOutput {
  UserProfiles: [AwsOpsworksDescribeUserProfilesOutputUserProfiles]
}

type AwsOpsworksDescribeUserProfilesOutputUserProfiles {
  IamUserArn: String
  Name: String
  SshUsername: String
  SshPublicKey: String
  AllowSelfManagement: Boolean
}

input AwsOpsworksDescribeVolumesInput {
  InstanceId: String
  StackId: String
  RaidArrayId: String
  VolumeIds: [String]
}

type AwsOpsworksDescribeVolumesOutput {
  Volumes: [AwsOpsworksDescribeVolumesOutputVolumes]
}

type AwsOpsworksDescribeVolumesOutputVolumes {
  VolumeId: String
  Ec2VolumeId: String
  Name: String
  RaidArrayId: String
  InstanceId: String
  Status: String
  Size: Int
  Device: String
  MountPoint: String
  Region: String
  AvailabilityZone: String
  VolumeType: String
  Iops: Int
}

input AwsOpsworksDetachElasticLoadBalancerInput {
  ElasticLoadBalancerName: String!
  LayerId: String!
}

input AwsOpsworksDisassociateElasticIpInput {
  ElasticIp: String!
}

input AwsOpsworksGetHostnameSuggestionInput {
  LayerId: String!
}

type AwsOpsworksGetHostnameSuggestionOutput {
  LayerId: String
  Hostname: String
}

input AwsOpsworksGrantAccessInput {
  InstanceId: String!
  ValidForInMinutes: Int
}

type AwsOpsworksGrantAccessOutput {
  TemporaryCredential: AwsOpsworksGrantAccessOutputTemporaryCredential
}

type AwsOpsworksGrantAccessOutputTemporaryCredential {
  Username: String
  Password: String
  ValidForInMinutes: Int
  InstanceId: String
}

input AwsOpsworksListTagsInput {
  ResourceArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsOpsworksListTagsOutput {
  Tags: JSON
  NextToken: String
}

input AwsOpsworksRebootInstanceInput {
  InstanceId: String!
}

input AwsOpsworksRegisterEcsClusterInput {
  EcsClusterArn: String!
  StackId: String!
}

type AwsOpsworksRegisterEcsClusterOutput {
  EcsClusterArn: String
}

input AwsOpsworksRegisterElasticIpInput {
  ElasticIp: String!
  StackId: String!
}

type AwsOpsworksRegisterElasticIpOutput {
  ElasticIp: String
}

input AwsOpsworksRegisterInstanceInput {
  StackId: String!
  Hostname: String
  PublicIp: String
  PrivateIp: String
  RsaPublicKey: String
  RsaPublicKeyFingerprint: String
  InstanceIdentity: AwsOpsworksRegisterInstanceInstanceIdentityInput
}

input AwsOpsworksRegisterInstanceInstanceIdentityInput {
  Document: String
  Signature: String
}

type AwsOpsworksRegisterInstanceOutput {
  InstanceId: String
}

input AwsOpsworksRegisterRdsDbInstanceInput {
  StackId: String!
  RdsDbInstanceArn: String!
  DbUser: String!
  DbPassword: String!
}

input AwsOpsworksRegisterVolumeInput {
  Ec2VolumeId: String
  StackId: String!
}

type AwsOpsworksRegisterVolumeOutput {
  VolumeId: String
}

type AwsOpsworksS19 {
  Enabled: Boolean
  LogStreams: [AwsOpsworksS19LogStreams]
}

input AwsOpsworksS19Input {
  Enabled: Boolean
  LogStreams: [AwsOpsworksS19LogStreamsInput]
}

type AwsOpsworksS19LogStreams {
  LogGroupName: String
  DatetimeFormat: String
  TimeZone: String
  File: String
  FileFingerprintLines: String
  MultiLineStartPattern: String
  InitialPosition: String
  Encoding: String
  BufferDuration: Int
  BatchCount: Int
  BatchSize: Int
}

input AwsOpsworksS19LogStreamsInput {
  LogGroupName: String
  DatetimeFormat: String
  TimeZone: String
  File: String
  FileFingerprintLines: String
  MultiLineStartPattern: String
  InitialPosition: String
  Encoding: String
  BufferDuration: Int
  BatchCount: Int
  BatchSize: Int
}

type AwsOpsworksS1f {
  MountPoint: String!
  RaidLevel: Int
  NumberOfDisks: Int!
  Size: Int!
  VolumeType: String
  Iops: Int
}

input AwsOpsworksS1fInput {
  MountPoint: String!
  RaidLevel: Int
  NumberOfDisks: Int!
  Size: Int!
  VolumeType: String
  Iops: Int
}

type AwsOpsworksS1h {
  Setup: [String]
  Configure: [String]
  Deploy: [String]
  Undeploy: [String]
  Shutdown: [String]
}

input AwsOpsworksS1hInput {
  Setup: [String]
  Configure: [String]
  Deploy: [String]
  Undeploy: [String]
  Shutdown: [String]
}

type AwsOpsworksS1i {
  Shutdown: AwsOpsworksS1iShutdown
}

input AwsOpsworksS1iInput {
  Shutdown: AwsOpsworksS1iShutdownInput
}

type AwsOpsworksS1iShutdown {
  ExecutionTimeout: Int
  DelayUntilElbConnectionsDrained: Boolean
}

input AwsOpsworksS1iShutdownInput {
  ExecutionTimeout: Int
  DelayUntilElbConnectionsDrained: Boolean
}

type AwsOpsworksS36 {
  InstanceCount: Int
  ThresholdsWaitTime: Int
  IgnoreMetricsTime: Int
  CpuThreshold: JSON
  MemoryThreshold: JSON
  LoadThreshold: JSON
  Alarms: [String]
}

input AwsOpsworksS36Input {
  InstanceCount: Int
  ThresholdsWaitTime: Int
  IgnoreMetricsTime: Int
  CpuThreshold: JSON
  MemoryThreshold: JSON
  LoadThreshold: JSON
  Alarms: [String]
}

type AwsOpsworksS46 {
  Monday: JSON
  Tuesday: JSON
  Wednesday: JSON
  Thursday: JSON
  Friday: JSON
  Saturday: JSON
  Sunday: JSON
}

input AwsOpsworksS46Input {
  Monday: JSON
  Tuesday: JSON
  Wednesday: JSON
  Thursday: JSON
  Friday: JSON
  Saturday: JSON
  Sunday: JSON
}

type AwsOpsworksSa {
  Name: String
  Version: String
}

input AwsOpsworksSaInput {
  Name: String
  Version: String
}

type AwsOpsworksSb {
  ManageBerkshelf: Boolean
  BerkshelfVersion: String
}

input AwsOpsworksSbInput {
  ManageBerkshelf: Boolean
  BerkshelfVersion: String
}

type AwsOpsworksSd {
  Type: String
  Url: String
  Username: String
  Password: String
  SshKey: String
  Revision: String
}

input AwsOpsworksSdInput {
  Type: String
  Url: String
  Username: String
  Password: String
  SshKey: String
  Revision: String
}

input AwsOpsworksSetLoadBasedAutoScalingInput {
  LayerId: String!
  Enable: Boolean
  UpScaling: AwsOpsworksS36Input
  DownScaling: AwsOpsworksS36Input
}

input AwsOpsworksSetPermissionInput {
  StackId: String!
  IamUserArn: String!
  AllowSsh: Boolean
  AllowSudo: Boolean
  Level: String
}

input AwsOpsworksSetTimeBasedAutoScalingInput {
  InstanceId: String!
  AutoScalingSchedule: AwsOpsworksS46Input
}

type AwsOpsworksSi {
  Type: String
  Arn: String
  DatabaseName: String
}

input AwsOpsworksSiInput {
  Type: String
  Arn: String
  DatabaseName: String
}

type AwsOpsworksSl {
  Certificate: String!
  PrivateKey: String!
  Chain: String
}

input AwsOpsworksSlInput {
  Certificate: String!
  PrivateKey: String!
  Chain: String
}

type AwsOpsworksSo {
  Key: String!
  Value: String!
  Secure: Boolean
}

input AwsOpsworksSoInput {
  Key: String!
  Value: String!
  Secure: Boolean
}

type AwsOpsworksSs {
  Name: String!
  Args: JSON
}

input AwsOpsworksSsInput {
  Name: String!
  Args: JSON
}

input AwsOpsworksStartInstanceInput {
  InstanceId: String!
}

input AwsOpsworksStartStackInput {
  StackId: String!
}

input AwsOpsworksStopInstanceInput {
  InstanceId: String!
}

input AwsOpsworksStopStackInput {
  StackId: String!
}

type AwsOpsworksSz {
  DeviceName: String
  NoDevice: String
  VirtualName: String
  Ebs: AwsOpsworksSzEbs
}

type AwsOpsworksSzEbs {
  SnapshotId: String
  Iops: Int
  VolumeSize: Int
  VolumeType: String
  DeleteOnTermination: Boolean
}

input AwsOpsworksSzEbsInput {
  SnapshotId: String
  Iops: Int
  VolumeSize: Int
  VolumeType: String
  DeleteOnTermination: Boolean
}

input AwsOpsworksSzInput {
  DeviceName: String
  NoDevice: String
  VirtualName: String
  Ebs: AwsOpsworksSzEbsInput
}

input AwsOpsworksTagResourceInput {
  ResourceArn: String!
  Tags: JSON!
}

input AwsOpsworksUnassignInstanceInput {
  InstanceId: String!
}

input AwsOpsworksUnassignVolumeInput {
  VolumeId: String!
}

input AwsOpsworksUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsOpsworksUpdateAppInput {
  AppId: String!
  Name: String
  Description: String
  DataSources: [AwsOpsworksSiInput]
  Type: String
  AppSource: AwsOpsworksSdInput
  Domains: [String]
  EnableSsl: Boolean
  SslConfiguration: AwsOpsworksSlInput
  Attributes: JSON
  Environment: [AwsOpsworksSoInput]
}

input AwsOpsworksUpdateElasticIpInput {
  ElasticIp: String!
  Name: String
}

input AwsOpsworksUpdateInstanceInput {
  InstanceId: String!
  LayerIds: [String]
  InstanceType: String
  AutoScalingType: String
  Hostname: String
  Os: String
  AmiId: String
  SshKeyName: String
  Architecture: String
  InstallUpdatesOnBoot: Boolean
  EbsOptimized: Boolean
  AgentVersion: String
}

input AwsOpsworksUpdateLayerInput {
  LayerId: String!
  Name: String
  Shortname: String
  Attributes: JSON
  CloudWatchLogsConfiguration: AwsOpsworksS19Input
  CustomInstanceProfileArn: String
  CustomJson: String
  CustomSecurityGroupIds: [String]
  Packages: [String]
  VolumeConfigurations: [AwsOpsworksS1fInput]
  EnableAutoHealing: Boolean
  AutoAssignElasticIps: Boolean
  AutoAssignPublicIps: Boolean
  CustomRecipes: AwsOpsworksS1hInput
  InstallUpdatesOnBoot: Boolean
  UseEbsOptimizedInstances: Boolean
  LifecycleEventConfiguration: AwsOpsworksS1iInput
}

input AwsOpsworksUpdateMyUserProfileInput {
  SshPublicKey: String
}

input AwsOpsworksUpdateRdsDbInstanceInput {
  RdsDbInstanceArn: String!
  DbUser: String
  DbPassword: String
}

input AwsOpsworksUpdateStackInput {
  StackId: String!
  Name: String
  Attributes: JSON
  ServiceRoleArn: String
  DefaultInstanceProfileArn: String
  DefaultOs: String
  HostnameTheme: String
  DefaultAvailabilityZone: String
  DefaultSubnetId: String
  CustomJson: String
  ConfigurationManager: AwsOpsworksSaInput
  ChefConfiguration: AwsOpsworksSbInput
  UseCustomCookbooks: Boolean
  CustomCookbooksSource: AwsOpsworksSdInput
  DefaultSshKeyName: String
  DefaultRootDeviceType: String
  UseOpsworksSecurityGroups: Boolean
  AgentVersion: String
}

input AwsOpsworksUpdateUserProfileInput {
  IamUserArn: String!
  SshUsername: String
  SshPublicKey: String
  AllowSelfManagement: Boolean
}

input AwsOpsworksUpdateVolumeInput {
  VolumeId: String!
  Name: String
  MountPoint: String
}

# AWS Organizations (2016-11-28)
type AwsOrganizations {
  # organizations.AcceptHandshake
  AcceptHandshake(input: AwsOrganizationsAcceptHandshakeInput!): AwsOrganizationsAcceptHandshakeOutput

  # organizations.AttachPolicy
  AttachPolicy(input: AwsOrganizationsAttachPolicyInput!): JSON

  # organizations.CancelHandshake
  CancelHandshake(input: AwsOrganizationsCancelHandshakeInput!): AwsOrganizationsCancelHandshakeOutput

  # organizations.CreateAccount
  CreateAccount(input: AwsOrganizationsCreateAccountInput!): AwsOrganizationsCreateAccountOutput

  # organizations.CreateOrganization
  CreateOrganization(input: AwsOrganizationsCreateOrganizationInput): AwsOrganizationsCreateOrganizationOutput

  # organizations.CreateOrganizationalUnit
  CreateOrganizationalUnit(input: AwsOrganizationsCreateOrganizationalUnitInput!): AwsOrganizationsCreateOrganizationalUnitOutput

  # organizations.CreatePolicy
  CreatePolicy(input: AwsOrganizationsCreatePolicyInput!): AwsOrganizationsCreatePolicyOutput

  # organizations.DeclineHandshake
  DeclineHandshake(input: AwsOrganizationsDeclineHandshakeInput!): AwsOrganizationsDeclineHandshakeOutput

  # organizations.DeleteOrganization
  DeleteOrganization: JSON

  # organizations.DeleteOrganizationalUnit
  DeleteOrganizationalUnit(input: AwsOrganizationsDeleteOrganizationalUnitInput!): JSON

  # organizations.DeletePolicy
  DeletePolicy(input: AwsOrganizationsDeletePolicyInput!): JSON

  # organizations.DescribeAccount
  DescribeAccount(input: AwsOrganizationsDescribeAccountInput!): AwsOrganizationsDescribeAccountOutput

  # organizations.DescribeCreateAccountStatus
  DescribeCreateAccountStatus(input: AwsOrganizationsDescribeCreateAccountStatusInput!): AwsOrganizationsDescribeCreateAccountStatusOutput

  # organizations.DescribeHandshake
  DescribeHandshake(input: AwsOrganizationsDescribeHandshakeInput!): AwsOrganizationsDescribeHandshakeOutput

  # organizations.DescribeOrganization
  DescribeOrganization: AwsOrganizationsDescribeOrganizationOutput

  # organizations.DescribeOrganizationalUnit
  DescribeOrganizationalUnit(input: AwsOrganizationsDescribeOrganizationalUnitInput!): AwsOrganizationsDescribeOrganizationalUnitOutput

  # organizations.DescribePolicy
  DescribePolicy(input: AwsOrganizationsDescribePolicyInput!): AwsOrganizationsDescribePolicyOutput

  # organizations.DetachPolicy
  DetachPolicy(input: AwsOrganizationsDetachPolicyInput!): JSON

  # organizations.DisableAWSServiceAccess
  DisableAWSServiceAccess(input: AwsOrganizationsDisableAWSServiceAccessInput!): JSON

  # organizations.DisablePolicyType
  DisablePolicyType(input: AwsOrganizationsDisablePolicyTypeInput!): AwsOrganizationsDisablePolicyTypeOutput

  # organizations.EnableAWSServiceAccess
  EnableAWSServiceAccess(input: AwsOrganizationsEnableAWSServiceAccessInput!): JSON

  # organizations.EnableAllFeatures
  EnableAllFeatures(input: JSON): AwsOrganizationsEnableAllFeaturesOutput

  # organizations.EnablePolicyType
  EnablePolicyType(input: AwsOrganizationsEnablePolicyTypeInput!): AwsOrganizationsEnablePolicyTypeOutput

  # organizations.InviteAccountToOrganization
  InviteAccountToOrganization(input: AwsOrganizationsInviteAccountToOrganizationInput!): AwsOrganizationsInviteAccountToOrganizationOutput

  # organizations.LeaveOrganization
  LeaveOrganization: JSON

  # organizations.ListAWSServiceAccessForOrganization
  ListAWSServiceAccessForOrganization(input: AwsOrganizationsListAWSServiceAccessForOrganizationInput): AwsOrganizationsListAWSServiceAccessForOrganizationOutput

  # organizations.ListAccounts
  ListAccounts(input: AwsOrganizationsListAccountsInput): AwsOrganizationsListAccountsOutput

  # organizations.ListAccountsForParent
  ListAccountsForParent(input: AwsOrganizationsListAccountsForParentInput!): AwsOrganizationsListAccountsForParentOutput

  # organizations.ListChildren
  ListChildren(input: AwsOrganizationsListChildrenInput!): AwsOrganizationsListChildrenOutput

  # organizations.ListCreateAccountStatus
  ListCreateAccountStatus(input: AwsOrganizationsListCreateAccountStatusInput): AwsOrganizationsListCreateAccountStatusOutput

  # organizations.ListHandshakesForAccount
  ListHandshakesForAccount(input: AwsOrganizationsListHandshakesForAccountInput): AwsOrganizationsListHandshakesForAccountOutput

  # organizations.ListHandshakesForOrganization
  ListHandshakesForOrganization(input: AwsOrganizationsListHandshakesForOrganizationInput): AwsOrganizationsListHandshakesForOrganizationOutput

  # organizations.ListOrganizationalUnitsForParent
  ListOrganizationalUnitsForParent(input: AwsOrganizationsListOrganizationalUnitsForParentInput!): AwsOrganizationsListOrganizationalUnitsForParentOutput

  # organizations.ListParents
  ListParents(input: AwsOrganizationsListParentsInput!): AwsOrganizationsListParentsOutput

  # organizations.ListPolicies
  ListPolicies(input: AwsOrganizationsListPoliciesInput!): AwsOrganizationsListPoliciesOutput

  # organizations.ListPoliciesForTarget
  ListPoliciesForTarget(input: AwsOrganizationsListPoliciesForTargetInput!): AwsOrganizationsListPoliciesForTargetOutput

  # organizations.ListRoots
  ListRoots(input: AwsOrganizationsListRootsInput): AwsOrganizationsListRootsOutput

  # organizations.ListTargetsForPolicy
  ListTargetsForPolicy(input: AwsOrganizationsListTargetsForPolicyInput!): AwsOrganizationsListTargetsForPolicyOutput

  # organizations.MoveAccount
  MoveAccount(input: AwsOrganizationsMoveAccountInput!): JSON

  # organizations.RemoveAccountFromOrganization
  RemoveAccountFromOrganization(input: AwsOrganizationsRemoveAccountFromOrganizationInput!): JSON

  # organizations.UpdateOrganizationalUnit
  UpdateOrganizationalUnit(input: AwsOrganizationsUpdateOrganizationalUnitInput!): AwsOrganizationsUpdateOrganizationalUnitOutput

  # organizations.UpdatePolicy
  UpdatePolicy(input: AwsOrganizationsUpdatePolicyInput!): AwsOrganizationsUpdatePolicyOutput
}

input AwsOrganizationsAcceptHandshakeInput {
  HandshakeId: String!
}

type AwsOrganizationsAcceptHandshakeOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsAttachPolicyInput {
  PolicyId: String!
  TargetId: String!
}

input AwsOrganizationsCancelHandshakeInput {
  HandshakeId: String!
}

type AwsOrganizationsCancelHandshakeOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsCreateAccountInput {
  Email: String!
  AccountName: String!
  RoleName: String
  IamUserAccessToBilling: String
}

type AwsOrganizationsCreateAccountOutput {
  CreateAccountStatus: AwsOrganizationsSs
}

input AwsOrganizationsCreateOrganizationalUnitInput {
  ParentId: String!
  Name: String!
}

type AwsOrganizationsCreateOrganizationalUnitOutput {
  OrganizationalUnit: AwsOrganizationsS1c
}

input AwsOrganizationsCreateOrganizationInput {
  FeatureSet: String
}

type AwsOrganizationsCreateOrganizationOutput {
  Organization: AwsOrganizationsS10
}

input AwsOrganizationsCreatePolicyInput {
  Content: String!
  Description: String!
  Name: String!
  Type: String!
}

type AwsOrganizationsCreatePolicyOutput {
  Policy: AwsOrganizationsS1k
}

input AwsOrganizationsDeclineHandshakeInput {
  HandshakeId: String!
}

type AwsOrganizationsDeclineHandshakeOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsDeleteOrganizationalUnitInput {
  OrganizationalUnitId: String!
}

input AwsOrganizationsDeletePolicyInput {
  PolicyId: String!
}

input AwsOrganizationsDescribeAccountInput {
  AccountId: String!
}

type AwsOrganizationsDescribeAccountOutput {
  Account: AwsOrganizationsS1u
}

input AwsOrganizationsDescribeCreateAccountStatusInput {
  CreateAccountRequestId: String!
}

type AwsOrganizationsDescribeCreateAccountStatusOutput {
  CreateAccountStatus: AwsOrganizationsSs
}

input AwsOrganizationsDescribeHandshakeInput {
  HandshakeId: String!
}

type AwsOrganizationsDescribeHandshakeOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsDescribeOrganizationalUnitInput {
  OrganizationalUnitId: String!
}

type AwsOrganizationsDescribeOrganizationalUnitOutput {
  OrganizationalUnit: AwsOrganizationsS1c
}

type AwsOrganizationsDescribeOrganizationOutput {
  Organization: AwsOrganizationsS10
}

input AwsOrganizationsDescribePolicyInput {
  PolicyId: String!
}

type AwsOrganizationsDescribePolicyOutput {
  Policy: AwsOrganizationsS1k
}

input AwsOrganizationsDetachPolicyInput {
  PolicyId: String!
  TargetId: String!
}

input AwsOrganizationsDisableAWSServiceAccessInput {
  ServicePrincipal: String!
}

input AwsOrganizationsDisablePolicyTypeInput {
  RootId: String!
  PolicyType: String!
}

type AwsOrganizationsDisablePolicyTypeOutput {
  Root: AwsOrganizationsS2c
}

type AwsOrganizationsEnableAllFeaturesOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsEnableAWSServiceAccessInput {
  ServicePrincipal: String!
}

input AwsOrganizationsEnablePolicyTypeInput {
  RootId: String!
  PolicyType: String!
}

type AwsOrganizationsEnablePolicyTypeOutput {
  Root: AwsOrganizationsS2c
}

input AwsOrganizationsInviteAccountToOrganizationInput {
  Target: AwsOrganizationsS7Input!
  Notes: String
}

type AwsOrganizationsInviteAccountToOrganizationOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsListAccountsForParentInput {
  ParentId: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListAccountsForParentOutput {
  Accounts: [AwsOrganizationsS1u]
  NextToken: String
}

input AwsOrganizationsListAccountsInput {
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListAccountsOutput {
  Accounts: [AwsOrganizationsS1u]
  NextToken: String
}

input AwsOrganizationsListAWSServiceAccessForOrganizationInput {
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListAWSServiceAccessForOrganizationOutput {
  EnabledServicePrincipals: [AwsOrganizationsListAWSServiceAccessForOrganizationOutputEnabledServicePrincipals]
  NextToken: String
}

type AwsOrganizationsListAWSServiceAccessForOrganizationOutputEnabledServicePrincipals {
  ServicePrincipal: String
  DateEnabled: Date
}

input AwsOrganizationsListChildrenInput {
  ParentId: String!
  ChildType: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListChildrenOutput {
  Children: [AwsOrganizationsListChildrenOutputChildren]
  NextToken: String
}

type AwsOrganizationsListChildrenOutputChildren {
  Id: String
  Type: String
}

input AwsOrganizationsListCreateAccountStatusInput {
  States: [String]
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListCreateAccountStatusOutput {
  CreateAccountStatuses: [AwsOrganizationsSs]
  NextToken: String
}

input AwsOrganizationsListHandshakesForAccountInput {
  Filter: AwsOrganizationsS39Input
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListHandshakesForAccountOutput {
  Handshakes: [AwsOrganizationsS4]
  NextToken: String
}

input AwsOrganizationsListHandshakesForOrganizationInput {
  Filter: AwsOrganizationsS39Input
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListHandshakesForOrganizationOutput {
  Handshakes: [AwsOrganizationsS4]
  NextToken: String
}

input AwsOrganizationsListOrganizationalUnitsForParentInput {
  ParentId: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListOrganizationalUnitsForParentOutput {
  OrganizationalUnits: [AwsOrganizationsS1c]
  NextToken: String
}

input AwsOrganizationsListParentsInput {
  ChildId: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListParentsOutput {
  Parents: [AwsOrganizationsListParentsOutputParents]
  NextToken: String
}

type AwsOrganizationsListParentsOutputParents {
  Id: String
  Type: String
}

input AwsOrganizationsListPoliciesForTargetInput {
  TargetId: String!
  Filter: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListPoliciesForTargetOutput {
  Policies: [AwsOrganizationsS1l]
  NextToken: String
}

input AwsOrganizationsListPoliciesInput {
  Filter: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListPoliciesOutput {
  Policies: [AwsOrganizationsS1l]
  NextToken: String
}

input AwsOrganizationsListRootsInput {
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListRootsOutput {
  Roots: [AwsOrganizationsS2c]
  NextToken: String
}

input AwsOrganizationsListTargetsForPolicyInput {
  PolicyId: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListTargetsForPolicyOutput {
  Targets: [AwsOrganizationsListTargetsForPolicyOutputTargets]
  NextToken: String
}

type AwsOrganizationsListTargetsForPolicyOutputTargets {
  TargetId: String
  Arn: String
  Name: String
  Type: String
}

input AwsOrganizationsMoveAccountInput {
  AccountId: String!
  SourceParentId: String!
  DestinationParentId: String!
}

input AwsOrganizationsRemoveAccountFromOrganizationInput {
  AccountId: String!
}

type AwsOrganizationsS10 {
  Id: String
  Arn: String
  FeatureSet: String
  MasterAccountArn: String
  MasterAccountId: String
  MasterAccountEmail: String
  AvailablePolicyTypes: [AwsOrganizationsS14]
}

type AwsOrganizationsS14 {
  Type: String
  Status: String
}

type AwsOrganizationsS1c {
  Id: String
  Arn: String
  Name: String
}

type AwsOrganizationsS1k {
  PolicySummary: AwsOrganizationsS1l
  Content: String
}

type AwsOrganizationsS1l {
  Id: String
  Arn: String
  Name: String
  Description: String
  Type: String
  AwsManaged: Boolean
}

type AwsOrganizationsS1u {
  Id: String
  Arn: String
  Email: String
  Name: String
  Status: String
  JoinedMethod: String
  JoinedTimestamp: Date
}

type AwsOrganizationsS2c {
  Id: String
  Arn: String
  Name: String
  PolicyTypes: [AwsOrganizationsS14]
}

input AwsOrganizationsS39Input {
  ActionType: String
  ParentHandshakeId: String
}

type AwsOrganizationsS4 {
  Id: String
  Arn: String
  Parties: [AwsOrganizationsS7]
  State: String
  RequestedTimestamp: Date
  ExpirationTimestamp: Date
  Action: String
  Resources: [AwsOrganizationsSd]
}

type AwsOrganizationsS7 {
  Id: String!
  Type: String!
}

input AwsOrganizationsS7Input {
  Id: String!
  Type: String!
}

type AwsOrganizationsSd {
  Value: String
  Type: String
  Resources: JSON
}

type AwsOrganizationsSs {
  Id: String
  AccountName: String
  State: String
  RequestedTimestamp: Date
  CompletedTimestamp: Date
  AccountId: String
  FailureReason: String
}

input AwsOrganizationsUpdateOrganizationalUnitInput {
  OrganizationalUnitId: String!
  Name: String
}

type AwsOrganizationsUpdateOrganizationalUnitOutput {
  OrganizationalUnit: AwsOrganizationsS1c
}

input AwsOrganizationsUpdatePolicyInput {
  PolicyId: String!
  Name: String
  Description: String
  Content: String
}

type AwsOrganizationsUpdatePolicyOutput {
  Policy: AwsOrganizationsS1k
}

# Amazon Pinpoint (2016-12-01)
type AwsPinpoint {
  # pinpoint.CreateApp
  CreateApp(input: AwsPinpointCreateAppInput!): AwsPinpointCreateAppOutput

  # pinpoint.CreateCampaign
  CreateCampaign(input: AwsPinpointCreateCampaignInput!): AwsPinpointCreateCampaignOutput

  # pinpoint.CreateImportJob
  CreateImportJob(input: AwsPinpointCreateImportJobInput!): AwsPinpointCreateImportJobOutput

  # pinpoint.CreateSegment
  CreateSegment(input: AwsPinpointCreateSegmentInput!): AwsPinpointCreateSegmentOutput

  # pinpoint.DeleteAdmChannel
  DeleteAdmChannel(input: AwsPinpointDeleteAdmChannelInput!): AwsPinpointDeleteAdmChannelOutput

  # pinpoint.DeleteApnsChannel
  DeleteApnsChannel(input: AwsPinpointDeleteApnsChannelInput!): AwsPinpointDeleteApnsChannelOutput

  # pinpoint.DeleteApnsSandboxChannel
  DeleteApnsSandboxChannel(input: AwsPinpointDeleteApnsSandboxChannelInput!): AwsPinpointDeleteApnsSandboxChannelOutput

  # pinpoint.DeleteApnsVoipChannel
  DeleteApnsVoipChannel(input: AwsPinpointDeleteApnsVoipChannelInput!): AwsPinpointDeleteApnsVoipChannelOutput

  # pinpoint.DeleteApnsVoipSandboxChannel
  DeleteApnsVoipSandboxChannel(input: AwsPinpointDeleteApnsVoipSandboxChannelInput!): AwsPinpointDeleteApnsVoipSandboxChannelOutput

  # pinpoint.DeleteApp
  DeleteApp(input: AwsPinpointDeleteAppInput!): AwsPinpointDeleteAppOutput

  # pinpoint.DeleteBaiduChannel
  DeleteBaiduChannel(input: AwsPinpointDeleteBaiduChannelInput!): AwsPinpointDeleteBaiduChannelOutput

  # pinpoint.DeleteCampaign
  DeleteCampaign(input: AwsPinpointDeleteCampaignInput!): AwsPinpointDeleteCampaignOutput

  # pinpoint.DeleteEmailChannel
  DeleteEmailChannel(input: AwsPinpointDeleteEmailChannelInput!): AwsPinpointDeleteEmailChannelOutput

  # pinpoint.DeleteEventStream
  DeleteEventStream(input: AwsPinpointDeleteEventStreamInput!): AwsPinpointDeleteEventStreamOutput

  # pinpoint.DeleteGcmChannel
  DeleteGcmChannel(input: AwsPinpointDeleteGcmChannelInput!): AwsPinpointDeleteGcmChannelOutput

  # pinpoint.DeleteSegment
  DeleteSegment(input: AwsPinpointDeleteSegmentInput!): AwsPinpointDeleteSegmentOutput

  # pinpoint.DeleteSmsChannel
  DeleteSmsChannel(input: AwsPinpointDeleteSmsChannelInput!): AwsPinpointDeleteSmsChannelOutput

  # pinpoint.GetAdmChannel
  GetAdmChannel(input: AwsPinpointGetAdmChannelInput!): AwsPinpointGetAdmChannelOutput

  # pinpoint.GetApnsChannel
  GetApnsChannel(input: AwsPinpointGetApnsChannelInput!): AwsPinpointGetApnsChannelOutput

  # pinpoint.GetApnsSandboxChannel
  GetApnsSandboxChannel(input: AwsPinpointGetApnsSandboxChannelInput!): AwsPinpointGetApnsSandboxChannelOutput

  # pinpoint.GetApnsVoipChannel
  GetApnsVoipChannel(input: AwsPinpointGetApnsVoipChannelInput!): AwsPinpointGetApnsVoipChannelOutput

  # pinpoint.GetApnsVoipSandboxChannel
  GetApnsVoipSandboxChannel(input: AwsPinpointGetApnsVoipSandboxChannelInput!): AwsPinpointGetApnsVoipSandboxChannelOutput

  # pinpoint.GetApp
  GetApp(input: AwsPinpointGetAppInput!): AwsPinpointGetAppOutput

  # pinpoint.GetApplicationSettings
  GetApplicationSettings(input: AwsPinpointGetApplicationSettingsInput!): AwsPinpointGetApplicationSettingsOutput

  # pinpoint.GetApps
  GetApps(input: AwsPinpointGetAppsInput): AwsPinpointGetAppsOutput

  # pinpoint.GetBaiduChannel
  GetBaiduChannel(input: AwsPinpointGetBaiduChannelInput!): AwsPinpointGetBaiduChannelOutput

  # pinpoint.GetCampaign
  GetCampaign(input: AwsPinpointGetCampaignInput!): AwsPinpointGetCampaignOutput

  # pinpoint.GetCampaignActivities
  GetCampaignActivities(input: AwsPinpointGetCampaignActivitiesInput!): AwsPinpointGetCampaignActivitiesOutput

  # pinpoint.GetCampaignVersion
  GetCampaignVersion(input: AwsPinpointGetCampaignVersionInput!): AwsPinpointGetCampaignVersionOutput

  # pinpoint.GetCampaignVersions
  GetCampaignVersions(input: AwsPinpointGetCampaignVersionsInput!): AwsPinpointGetCampaignVersionsOutput

  # pinpoint.GetCampaigns
  GetCampaigns(input: AwsPinpointGetCampaignsInput!): AwsPinpointGetCampaignsOutput

  # pinpoint.GetEmailChannel
  GetEmailChannel(input: AwsPinpointGetEmailChannelInput!): AwsPinpointGetEmailChannelOutput

  # pinpoint.GetEndpoint
  GetEndpoint(input: AwsPinpointGetEndpointInput!): AwsPinpointGetEndpointOutput

  # pinpoint.GetEventStream
  GetEventStream(input: AwsPinpointGetEventStreamInput!): AwsPinpointGetEventStreamOutput

  # pinpoint.GetGcmChannel
  GetGcmChannel(input: AwsPinpointGetGcmChannelInput!): AwsPinpointGetGcmChannelOutput

  # pinpoint.GetImportJob
  GetImportJob(input: AwsPinpointGetImportJobInput!): AwsPinpointGetImportJobOutput

  # pinpoint.GetImportJobs
  GetImportJobs(input: AwsPinpointGetImportJobsInput!): AwsPinpointGetImportJobsOutput

  # pinpoint.GetSegment
  GetSegment(input: AwsPinpointGetSegmentInput!): AwsPinpointGetSegmentOutput

  # pinpoint.GetSegmentImportJobs
  GetSegmentImportJobs(input: AwsPinpointGetSegmentImportJobsInput!): AwsPinpointGetSegmentImportJobsOutput

  # pinpoint.GetSegmentVersion
  GetSegmentVersion(input: AwsPinpointGetSegmentVersionInput!): AwsPinpointGetSegmentVersionOutput

  # pinpoint.GetSegmentVersions
  GetSegmentVersions(input: AwsPinpointGetSegmentVersionsInput!): AwsPinpointGetSegmentVersionsOutput

  # pinpoint.GetSegments
  GetSegments(input: AwsPinpointGetSegmentsInput!): AwsPinpointGetSegmentsOutput

  # pinpoint.GetSmsChannel
  GetSmsChannel(input: AwsPinpointGetSmsChannelInput!): AwsPinpointGetSmsChannelOutput

  # pinpoint.PutEventStream
  PutEventStream(input: AwsPinpointPutEventStreamInput!): AwsPinpointPutEventStreamOutput

  # pinpoint.SendMessages
  SendMessages(input: AwsPinpointSendMessagesInput!): AwsPinpointSendMessagesOutput

  # pinpoint.SendUsersMessages
  SendUsersMessages(input: AwsPinpointSendUsersMessagesInput!): AwsPinpointSendUsersMessagesOutput

  # pinpoint.UpdateAdmChannel
  UpdateAdmChannel(input: AwsPinpointUpdateAdmChannelInput!): AwsPinpointUpdateAdmChannelOutput

  # pinpoint.UpdateApnsChannel
  UpdateApnsChannel(input: AwsPinpointUpdateApnsChannelInput!): AwsPinpointUpdateApnsChannelOutput

  # pinpoint.UpdateApnsSandboxChannel
  UpdateApnsSandboxChannel(input: AwsPinpointUpdateApnsSandboxChannelInput!): AwsPinpointUpdateApnsSandboxChannelOutput

  # pinpoint.UpdateApnsVoipChannel
  UpdateApnsVoipChannel(input: AwsPinpointUpdateApnsVoipChannelInput!): AwsPinpointUpdateApnsVoipChannelOutput

  # pinpoint.UpdateApnsVoipSandboxChannel
  UpdateApnsVoipSandboxChannel(input: AwsPinpointUpdateApnsVoipSandboxChannelInput!): AwsPinpointUpdateApnsVoipSandboxChannelOutput

  # pinpoint.UpdateApplicationSettings
  UpdateApplicationSettings(input: AwsPinpointUpdateApplicationSettingsInput!): AwsPinpointUpdateApplicationSettingsOutput

  # pinpoint.UpdateBaiduChannel
  UpdateBaiduChannel(input: AwsPinpointUpdateBaiduChannelInput!): AwsPinpointUpdateBaiduChannelOutput

  # pinpoint.UpdateCampaign
  UpdateCampaign(input: AwsPinpointUpdateCampaignInput!): AwsPinpointUpdateCampaignOutput

  # pinpoint.UpdateEmailChannel
  UpdateEmailChannel(input: AwsPinpointUpdateEmailChannelInput!): AwsPinpointUpdateEmailChannelOutput

  # pinpoint.UpdateEndpoint
  UpdateEndpoint(input: AwsPinpointUpdateEndpointInput!): AwsPinpointUpdateEndpointOutput

  # pinpoint.UpdateEndpointsBatch
  UpdateEndpointsBatch(input: AwsPinpointUpdateEndpointsBatchInput!): AwsPinpointUpdateEndpointsBatchOutput

  # pinpoint.UpdateGcmChannel
  UpdateGcmChannel(input: AwsPinpointUpdateGcmChannelInput!): AwsPinpointUpdateGcmChannelOutput

  # pinpoint.UpdateSegment
  UpdateSegment(input: AwsPinpointUpdateSegmentInput!): AwsPinpointUpdateSegmentOutput

  # pinpoint.UpdateSmsChannel
  UpdateSmsChannel(input: AwsPinpointUpdateSmsChannelInput!): AwsPinpointUpdateSmsChannelOutput
}

input AwsPinpointCreateAppCreateApplicationRequestInput {
  Name: String
}

input AwsPinpointCreateAppInput {
  CreateApplicationRequest: AwsPinpointCreateAppCreateApplicationRequestInput!
}

type AwsPinpointCreateAppOutput {
  ApplicationResponse: AwsPinpointS5!
}

input AwsPinpointCreateCampaignInput {
  ApplicationId: String!
  WriteCampaignRequest: AwsPinpointS7Input!
}

type AwsPinpointCreateCampaignOutput {
  CampaignResponse: AwsPinpointSn!
}

input AwsPinpointCreateImportJobImportJobRequestInput {
  DefineSegment: Boolean
  ExternalId: String
  Format: String
  RegisterEndpoints: Boolean
  RoleArn: String
  S3Url: String
  SegmentId: String
  SegmentName: String
}

input AwsPinpointCreateImportJobInput {
  ApplicationId: String!
  ImportJobRequest: AwsPinpointCreateImportJobImportJobRequestInput!
}

type AwsPinpointCreateImportJobOutput {
  ImportJobResponse: AwsPinpointSw!
}

input AwsPinpointCreateSegmentInput {
  ApplicationId: String!
  WriteSegmentRequest: AwsPinpointS11Input!
}

type AwsPinpointCreateSegmentOutput {
  SegmentResponse: AwsPinpointS1f!
}

input AwsPinpointDeleteAdmChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteAdmChannelOutput {
  ADMChannelResponse: AwsPinpointS1l!
}

input AwsPinpointDeleteApnsChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteApnsChannelOutput {
  APNSChannelResponse: AwsPinpointS1o!
}

input AwsPinpointDeleteApnsSandboxChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteApnsSandboxChannelOutput {
  APNSSandboxChannelResponse: AwsPinpointS1r!
}

input AwsPinpointDeleteApnsVoipChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteApnsVoipChannelOutput {
  APNSVoipChannelResponse: AwsPinpointS1u!
}

input AwsPinpointDeleteApnsVoipSandboxChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteApnsVoipSandboxChannelOutput {
  APNSVoipSandboxChannelResponse: AwsPinpointS1x!
}

input AwsPinpointDeleteAppInput {
  ApplicationId: String!
}

type AwsPinpointDeleteAppOutput {
  ApplicationResponse: AwsPinpointS5!
}

input AwsPinpointDeleteBaiduChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteBaiduChannelOutput {
  BaiduChannelResponse: AwsPinpointS22!
}

input AwsPinpointDeleteCampaignInput {
  ApplicationId: String!
  CampaignId: String!
}

type AwsPinpointDeleteCampaignOutput {
  CampaignResponse: AwsPinpointSn!
}

input AwsPinpointDeleteEmailChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteEmailChannelOutput {
  EmailChannelResponse: AwsPinpointS27!
}

input AwsPinpointDeleteEventStreamInput {
  ApplicationId: String!
}

type AwsPinpointDeleteEventStreamOutput {
  EventStream: AwsPinpointS2a!
}

input AwsPinpointDeleteGcmChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteGcmChannelOutput {
  GCMChannelResponse: AwsPinpointS2d!
}

input AwsPinpointDeleteSegmentInput {
  ApplicationId: String!
  SegmentId: String!
}

type AwsPinpointDeleteSegmentOutput {
  SegmentResponse: AwsPinpointS1f!
}

input AwsPinpointDeleteSmsChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteSmsChannelOutput {
  SMSChannelResponse: AwsPinpointS2i!
}

input AwsPinpointGetAdmChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetAdmChannelOutput {
  ADMChannelResponse: AwsPinpointS1l!
}

input AwsPinpointGetApnsChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetApnsChannelOutput {
  APNSChannelResponse: AwsPinpointS1o!
}

input AwsPinpointGetApnsSandboxChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetApnsSandboxChannelOutput {
  APNSSandboxChannelResponse: AwsPinpointS1r!
}

input AwsPinpointGetApnsVoipChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetApnsVoipChannelOutput {
  APNSVoipChannelResponse: AwsPinpointS1u!
}

input AwsPinpointGetApnsVoipSandboxChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetApnsVoipSandboxChannelOutput {
  APNSVoipSandboxChannelResponse: AwsPinpointS1x!
}

input AwsPinpointGetAppInput {
  ApplicationId: String!
}

input AwsPinpointGetApplicationSettingsInput {
  ApplicationId: String!
}

type AwsPinpointGetApplicationSettingsOutput {
  ApplicationSettingsResource: AwsPinpointS2x!
}

type AwsPinpointGetAppOutput {
  ApplicationResponse: AwsPinpointS5!
}

input AwsPinpointGetAppsInput {
  PageSize: String
  Token: String
}

type AwsPinpointGetAppsOutput {
  ApplicationsResponse: AwsPinpointGetAppsOutputApplicationsResponse!
}

type AwsPinpointGetAppsOutputApplicationsResponse {
  Item: [AwsPinpointS5]
  NextToken: String
}

input AwsPinpointGetBaiduChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetBaiduChannelOutput {
  BaiduChannelResponse: AwsPinpointS22!
}

input AwsPinpointGetCampaignActivitiesInput {
  ApplicationId: String!
  CampaignId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetCampaignActivitiesOutput {
  ActivitiesResponse: AwsPinpointGetCampaignActivitiesOutputActivitiesResponse!
}

type AwsPinpointGetCampaignActivitiesOutputActivitiesResponse {
  Item: [AwsPinpointGetCampaignActivitiesOutputActivitiesResponseItem]
}

type AwsPinpointGetCampaignActivitiesOutputActivitiesResponseItem {
  ApplicationId: String
  CampaignId: String
  End: String
  Id: String
  Result: String
  ScheduledStart: String
  Start: String
  State: String
  SuccessfulEndpointCount: Int
  TimezonesCompletedCount: Int
  TimezonesTotalCount: Int
  TotalEndpointCount: Int
  TreatmentId: String
}

input AwsPinpointGetCampaignInput {
  ApplicationId: String!
  CampaignId: String!
}

type AwsPinpointGetCampaignOutput {
  CampaignResponse: AwsPinpointSn!
}

input AwsPinpointGetCampaignsInput {
  ApplicationId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetCampaignsOutput {
  CampaignsResponse: AwsPinpointS3f!
}

input AwsPinpointGetCampaignVersionInput {
  ApplicationId: String!
  CampaignId: String!
  Version: String!
}

type AwsPinpointGetCampaignVersionOutput {
  CampaignResponse: AwsPinpointSn!
}

input AwsPinpointGetCampaignVersionsInput {
  ApplicationId: String!
  CampaignId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetCampaignVersionsOutput {
  CampaignsResponse: AwsPinpointS3f!
}

input AwsPinpointGetEmailChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetEmailChannelOutput {
  EmailChannelResponse: AwsPinpointS27!
}

input AwsPinpointGetEndpointInput {
  ApplicationId: String!
  EndpointId: String!
}

type AwsPinpointGetEndpointOutput {
  EndpointResponse: AwsPinpointGetEndpointOutputEndpointResponse!
}

type AwsPinpointGetEndpointOutputEndpointResponse {
  Address: String
  ApplicationId: String
  Attributes: JSON
  ChannelType: String
  CohortId: String
  CreationDate: String
  Demographic: AwsPinpointS3q
  EffectiveDate: String
  EndpointStatus: String
  Id: String
  Location: AwsPinpointS3r
  Metrics: JSON
  OptOut: String
  RequestId: String
  User: AwsPinpointS3u
}

input AwsPinpointGetEventStreamInput {
  ApplicationId: String!
}

type AwsPinpointGetEventStreamOutput {
  EventStream: AwsPinpointS2a!
}

input AwsPinpointGetGcmChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetGcmChannelOutput {
  GCMChannelResponse: AwsPinpointS2d!
}

input AwsPinpointGetImportJobInput {
  ApplicationId: String!
  JobId: String!
}

type AwsPinpointGetImportJobOutput {
  ImportJobResponse: AwsPinpointSw!
}

input AwsPinpointGetImportJobsInput {
  ApplicationId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetImportJobsOutput {
  ImportJobsResponse: AwsPinpointS43!
}

input AwsPinpointGetSegmentImportJobsInput {
  ApplicationId: String!
  PageSize: String
  SegmentId: String!
  Token: String
}

type AwsPinpointGetSegmentImportJobsOutput {
  ImportJobsResponse: AwsPinpointS43!
}

input AwsPinpointGetSegmentInput {
  ApplicationId: String!
  SegmentId: String!
}

type AwsPinpointGetSegmentOutput {
  SegmentResponse: AwsPinpointS1f!
}

input AwsPinpointGetSegmentsInput {
  ApplicationId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetSegmentsOutput {
  SegmentsResponse: AwsPinpointS4d!
}

input AwsPinpointGetSegmentVersionInput {
  ApplicationId: String!
  SegmentId: String!
  Version: String!
}

type AwsPinpointGetSegmentVersionOutput {
  SegmentResponse: AwsPinpointS1f!
}

input AwsPinpointGetSegmentVersionsInput {
  ApplicationId: String!
  PageSize: String
  SegmentId: String!
  Token: String
}

type AwsPinpointGetSegmentVersionsOutput {
  SegmentsResponse: AwsPinpointS4d!
}

input AwsPinpointGetSmsChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetSmsChannelOutput {
  SMSChannelResponse: AwsPinpointS2i!
}

input AwsPinpointPutEventStreamInput {
  ApplicationId: String!
  WriteEventStream: AwsPinpointPutEventStreamWriteEventStreamInput!
}

type AwsPinpointPutEventStreamOutput {
  EventStream: AwsPinpointS2a!
}

input AwsPinpointPutEventStreamWriteEventStreamInput {
  DestinationStreamArn: String
  RoleArn: String
}

input AwsPinpointS11Input {
  Dimensions: AwsPinpointS12Input
  Name: String
}

type AwsPinpointS12 {
  Attributes: JSON
  Behavior: AwsPinpointS12Behavior
  Demographic: AwsPinpointS12Demographic
  Location: AwsPinpointS12Location
  UserAttributes: JSON
}

type AwsPinpointS12Behavior {
  Recency: AwsPinpointS12BehaviorRecency
}

input AwsPinpointS12BehaviorInput {
  Recency: AwsPinpointS12BehaviorRecencyInput
}

type AwsPinpointS12BehaviorRecency {
  Duration: String
  RecencyType: String
}

input AwsPinpointS12BehaviorRecencyInput {
  Duration: String
  RecencyType: String
}

type AwsPinpointS12Demographic {
  AppVersion: AwsPinpointS1b
  Channel: AwsPinpointS1b
  DeviceType: AwsPinpointS1b
  Make: AwsPinpointS1b
  Model: AwsPinpointS1b
  Platform: AwsPinpointS1b
}

input AwsPinpointS12DemographicInput {
  AppVersion: AwsPinpointS1bInput
  Channel: AwsPinpointS1bInput
  DeviceType: AwsPinpointS1bInput
  Make: AwsPinpointS1bInput
  Model: AwsPinpointS1bInput
  Platform: AwsPinpointS1bInput
}

input AwsPinpointS12Input {
  Attributes: JSON
  Behavior: AwsPinpointS12BehaviorInput
  Demographic: AwsPinpointS12DemographicInput
  Location: AwsPinpointS12LocationInput
  UserAttributes: JSON
}

type AwsPinpointS12Location {
  Country: AwsPinpointS1b
}

input AwsPinpointS12LocationInput {
  Country: AwsPinpointS1bInput
}

type AwsPinpointS1b {
  DimensionType: String
  Values: [String]
}

input AwsPinpointS1bInput {
  DimensionType: String
  Values: [String]
}

type AwsPinpointS1f {
  ApplicationId: String
  CreationDate: String
  Dimensions: AwsPinpointS12
  Id: String
  ImportDefinition: AwsPinpointS1fImportDefinition
  LastModifiedDate: String
  Name: String
  SegmentType: String
  Version: Int
}

type AwsPinpointS1fImportDefinition {
  ChannelCounts: JSON
  ExternalId: String
  Format: String
  RoleArn: String
  S3Url: String
  Size: Int
}

type AwsPinpointS1l {
  ApplicationId: String
  CreationDate: String
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS1o {
  ApplicationId: String
  CreationDate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  HasCredential: Boolean
  HasTokenKey: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS1r {
  ApplicationId: String
  CreationDate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  HasCredential: Boolean
  HasTokenKey: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS1u {
  ApplicationId: String
  CreationDate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  HasCredential: Boolean
  HasTokenKey: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS1x {
  ApplicationId: String
  CreationDate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  HasCredential: Boolean
  HasTokenKey: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS22 {
  ApplicationId: String
  CreationDate: String
  Credential: String
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS27 {
  ApplicationId: String
  CreationDate: String
  Enabled: Boolean
  FromAddress: String
  HasCredential: Boolean
  Id: String
  Identity: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  RoleArn: String
  Version: Int
}

type AwsPinpointS2a {
  ApplicationId: String
  DestinationStreamArn: String
  ExternalId: String
  LastModifiedDate: String
  LastUpdatedBy: String
  RoleArn: String
}

type AwsPinpointS2d {
  ApplicationId: String
  CreationDate: String
  Credential: String
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS2i {
  ApplicationId: String
  CreationDate: String
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  SenderId: String
  ShortCode: String
  Version: Int
}

type AwsPinpointS2x {
  ApplicationId: String
  LastModifiedDate: String
  Limits: AwsPinpointSl
  QuietTime: AwsPinpointSj
}

type AwsPinpointS3f {
  Item: [AwsPinpointSn]
  NextToken: String
}

type AwsPinpointS3q {
  AppVersion: String
  Locale: String
  Make: String
  Model: String
  ModelVersion: String
  Platform: String
  PlatformVersion: String
  Timezone: String
}

input AwsPinpointS3qInput {
  AppVersion: String
  Locale: String
  Make: String
  Model: String
  ModelVersion: String
  Platform: String
  PlatformVersion: String
  Timezone: String
}

type AwsPinpointS3r {
  City: String
  Country: String
  Latitude: JSON
  Longitude: JSON
  PostalCode: String
  Region: String
}

input AwsPinpointS3rInput {
  City: String
  Country: String
  Latitude: JSON
  Longitude: JSON
  PostalCode: String
  Region: String
}

type AwsPinpointS3u {
  UserAttributes: JSON
  UserId: String
}

input AwsPinpointS3uInput {
  UserAttributes: JSON
  UserId: String
}

type AwsPinpointS43 {
  Item: [AwsPinpointSw]
  NextToken: String
}

type AwsPinpointS4d {
  Item: [AwsPinpointS1f]
  NextToken: String
}

input AwsPinpointS4tADMMessageInput {
  Action: String
  Body: String
  ConsolidationKey: String
  Data: JSON
  ExpiresAfter: String
  IconReference: String
  ImageIconUrl: String
  ImageUrl: String
  MD5: String
  RawContent: String
  SilentPush: Boolean
  SmallImageIconUrl: String
  Sound: String
  Substitutions: JSON
  Title: String
  Url: String
}

input AwsPinpointS4tAPNSMessageInput {
  Action: String
  Badge: Int
  Body: String
  Category: String
  CollapseId: String
  Data: JSON
  MediaUrl: String
  PreferredAuthenticationMethod: String
  Priority: String
  RawContent: String
  SilentPush: Boolean
  Sound: String
  Substitutions: JSON
  ThreadId: String
  TimeToLive: Int
  Title: String
  Url: String
}

input AwsPinpointS4tBaiduMessageInput {
  Action: String
  Body: String
  Data: JSON
  IconReference: String
  ImageIconUrl: String
  ImageUrl: String
  RawContent: String
  SilentPush: Boolean
  SmallImageIconUrl: String
  Sound: String
  Substitutions: JSON
  Title: String
  Url: String
}

input AwsPinpointS4tDefaultMessageInput {
  Body: String
  Substitutions: JSON
}

input AwsPinpointS4tDefaultPushNotificationMessageInput {
  Action: String
  Body: String
  Data: JSON
  SilentPush: Boolean
  Substitutions: JSON
  Title: String
  Url: String
}

input AwsPinpointS4tGCMMessageInput {
  Action: String
  Body: String
  CollapseKey: String
  Data: JSON
  IconReference: String
  ImageIconUrl: String
  ImageUrl: String
  Priority: String
  RawContent: String
  RestrictedPackageName: String
  SilentPush: Boolean
  SmallImageIconUrl: String
  Sound: String
  Substitutions: JSON
  TimeToLive: Int
  Title: String
  Url: String
}

input AwsPinpointS4tInput {
  ADMMessage: AwsPinpointS4tADMMessageInput
  APNSMessage: AwsPinpointS4tAPNSMessageInput
  BaiduMessage: AwsPinpointS4tBaiduMessageInput
  DefaultMessage: AwsPinpointS4tDefaultMessageInput
  DefaultPushNotificationMessage: AwsPinpointS4tDefaultPushNotificationMessageInput
  GCMMessage: AwsPinpointS4tGCMMessageInput
  SMSMessage: AwsPinpointS4tSMSMessageInput
}

input AwsPinpointS4tSMSMessageInput {
  Body: String
  MessageType: String
  SenderId: String
  Substitutions: JSON
}

type AwsPinpointS5 {
  Id: String
  Name: String
}

type AwsPinpointS66 {
  Message: String
  RequestID: String
}

input AwsPinpointS7AdditionalTreatmentsInput {
  MessageConfiguration: AwsPinpointSaInput
  Schedule: AwsPinpointShInput
  SizePercent: Int
  TreatmentDescription: String
  TreatmentName: String
}

input AwsPinpointS7Input {
  AdditionalTreatments: [AwsPinpointS7AdditionalTreatmentsInput]
  Description: String
  HoldoutPercent: Int
  IsPaused: Boolean
  Limits: AwsPinpointSlInput
  MessageConfiguration: AwsPinpointSaInput
  Name: String
  Schedule: AwsPinpointShInput
  SegmentId: String
  SegmentVersion: Int
  TreatmentDescription: String
  TreatmentName: String
}

type AwsPinpointSa {
  ADMMessage: AwsPinpointSb
  APNSMessage: AwsPinpointSb
  BaiduMessage: AwsPinpointSb
  DefaultMessage: AwsPinpointSb
  EmailMessage: AwsPinpointSaEmailMessage
  GCMMessage: AwsPinpointSb
  SMSMessage: AwsPinpointSaSMSMessage
}

type AwsPinpointSaEmailMessage {
  Body: String
  FromAddress: String
  HtmlBody: String
  Title: String
}

input AwsPinpointSaEmailMessageInput {
  Body: String
  FromAddress: String
  HtmlBody: String
  Title: String
}

input AwsPinpointSaInput {
  ADMMessage: AwsPinpointSbInput
  APNSMessage: AwsPinpointSbInput
  BaiduMessage: AwsPinpointSbInput
  DefaultMessage: AwsPinpointSbInput
  EmailMessage: AwsPinpointSaEmailMessageInput
  GCMMessage: AwsPinpointSbInput
  SMSMessage: AwsPinpointSaSMSMessageInput
}

type AwsPinpointSaSMSMessage {
  Body: String
  MessageType: String
  SenderId: String
}

input AwsPinpointSaSMSMessageInput {
  Body: String
  MessageType: String
  SenderId: String
}

type AwsPinpointSb {
  Action: String
  Body: String
  ImageIconUrl: String
  ImageSmallIconUrl: String
  ImageUrl: String
  JsonBody: String
  MediaUrl: String
  RawContent: String
  SilentPush: Boolean
  Title: String
  Url: String
}

input AwsPinpointSbInput {
  Action: String
  Body: String
  ImageIconUrl: String
  ImageSmallIconUrl: String
  ImageUrl: String
  JsonBody: String
  MediaUrl: String
  RawContent: String
  SilentPush: Boolean
  Title: String
  Url: String
}

input AwsPinpointSendMessagesInput {
  ApplicationId: String!
  MessageRequest: AwsPinpointSendMessagesMessageRequestInput!
}

input AwsPinpointSendMessagesMessageRequestInput {
  Addresses: JSON
  Context: JSON
  Endpoints: JSON
  MessageConfiguration: AwsPinpointS4tInput
}

type AwsPinpointSendMessagesOutput {
  MessageResponse: AwsPinpointSendMessagesOutputMessageResponse!
}

type AwsPinpointSendMessagesOutputMessageResponse {
  ApplicationId: String
  EndpointResult: JSON
  RequestId: String
  Result: JSON
}

input AwsPinpointSendUsersMessagesInput {
  ApplicationId: String!
  SendUsersMessageRequest: AwsPinpointSendUsersMessagesSendUsersMessageRequestInput!
}

type AwsPinpointSendUsersMessagesOutput {
  SendUsersMessageResponse: AwsPinpointSendUsersMessagesOutputSendUsersMessageResponse!
}

type AwsPinpointSendUsersMessagesOutputSendUsersMessageResponse {
  ApplicationId: String
  RequestId: String
  Result: JSON
}

input AwsPinpointSendUsersMessagesSendUsersMessageRequestInput {
  Context: JSON
  MessageConfiguration: AwsPinpointS4tInput
  Users: JSON
}

type AwsPinpointSh {
  EndTime: String
  Frequency: String
  IsLocalTime: Boolean
  QuietTime: AwsPinpointSj
  StartTime: String
  Timezone: String
}

input AwsPinpointShInput {
  EndTime: String
  Frequency: String
  IsLocalTime: Boolean
  QuietTime: AwsPinpointSjInput
  StartTime: String
  Timezone: String
}

type AwsPinpointSj {
  End: String
  Start: String
}

input AwsPinpointSjInput {
  End: String
  Start: String
}

type AwsPinpointSl {
  Daily: Int
  MaximumDuration: Int
  MessagesPerSecond: Int
  Total: Int
}

input AwsPinpointSlInput {
  Daily: Int
  MaximumDuration: Int
  MessagesPerSecond: Int
  Total: Int
}

type AwsPinpointSn {
  AdditionalTreatments: [AwsPinpointSnAdditionalTreatments]
  ApplicationId: String
  CreationDate: String
  DefaultState: AwsPinpointSq
  Description: String
  HoldoutPercent: Int
  Id: String
  IsPaused: Boolean
  LastModifiedDate: String
  Limits: AwsPinpointSl
  MessageConfiguration: AwsPinpointSa
  Name: String
  Schedule: AwsPinpointSh
  SegmentId: String
  SegmentVersion: Int
  State: AwsPinpointSq
  TreatmentDescription: String
  TreatmentName: String
  Version: Int
}

type AwsPinpointSnAdditionalTreatments {
  Id: String
  MessageConfiguration: AwsPinpointSa
  Schedule: AwsPinpointSh
  SizePercent: Int
  State: AwsPinpointSq
  TreatmentDescription: String
  TreatmentName: String
}

type AwsPinpointSq {
  CampaignStatus: String
}

type AwsPinpointSw {
  ApplicationId: String
  CompletedPieces: Int
  CompletionDate: String
  CreationDate: String
  Definition: AwsPinpointSwDefinition
  FailedPieces: Int
  Failures: [String]
  Id: String
  JobStatus: String
  TotalFailures: Int
  TotalPieces: Int
  TotalProcessed: Int
  Type: String
}

type AwsPinpointSwDefinition {
  DefineSegment: Boolean
  ExternalId: String
  Format: String
  RegisterEndpoints: Boolean
  RoleArn: String
  S3Url: String
  SegmentId: String
  SegmentName: String
}

input AwsPinpointUpdateAdmChannelADMChannelRequestInput {
  ClientId: String
  ClientSecret: String
  Enabled: Boolean
}

input AwsPinpointUpdateAdmChannelInput {
  ADMChannelRequest: AwsPinpointUpdateAdmChannelADMChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateAdmChannelOutput {
  ADMChannelResponse: AwsPinpointS1l!
}

input AwsPinpointUpdateApnsChannelAPNSChannelRequestInput {
  BundleId: String
  Certificate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  PrivateKey: String
  TeamId: String
  TokenKey: String
  TokenKeyId: String
}

input AwsPinpointUpdateApnsChannelInput {
  APNSChannelRequest: AwsPinpointUpdateApnsChannelAPNSChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateApnsChannelOutput {
  APNSChannelResponse: AwsPinpointS1o!
}

input AwsPinpointUpdateApnsSandboxChannelAPNSSandboxChannelRequestInput {
  BundleId: String
  Certificate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  PrivateKey: String
  TeamId: String
  TokenKey: String
  TokenKeyId: String
}

input AwsPinpointUpdateApnsSandboxChannelInput {
  APNSSandboxChannelRequest: AwsPinpointUpdateApnsSandboxChannelAPNSSandboxChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateApnsSandboxChannelOutput {
  APNSSandboxChannelResponse: AwsPinpointS1r!
}

input AwsPinpointUpdateApnsVoipChannelAPNSVoipChannelRequestInput {
  BundleId: String
  Certificate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  PrivateKey: String
  TeamId: String
  TokenKey: String
  TokenKeyId: String
}

input AwsPinpointUpdateApnsVoipChannelInput {
  APNSVoipChannelRequest: AwsPinpointUpdateApnsVoipChannelAPNSVoipChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateApnsVoipChannelOutput {
  APNSVoipChannelResponse: AwsPinpointS1u!
}

input AwsPinpointUpdateApnsVoipSandboxChannelAPNSVoipSandboxChannelRequestInput {
  BundleId: String
  Certificate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  PrivateKey: String
  TeamId: String
  TokenKey: String
  TokenKeyId: String
}

input AwsPinpointUpdateApnsVoipSandboxChannelInput {
  APNSVoipSandboxChannelRequest: AwsPinpointUpdateApnsVoipSandboxChannelAPNSVoipSandboxChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateApnsVoipSandboxChannelOutput {
  APNSVoipSandboxChannelResponse: AwsPinpointS1x!
}

input AwsPinpointUpdateApplicationSettingsInput {
  ApplicationId: String!
  WriteApplicationSettingsRequest: AwsPinpointUpdateApplicationSettingsWriteApplicationSettingsRequestInput!
}

type AwsPinpointUpdateApplicationSettingsOutput {
  ApplicationSettingsResource: AwsPinpointS2x!
}

input AwsPinpointUpdateApplicationSettingsWriteApplicationSettingsRequestInput {
  Limits: AwsPinpointSlInput
  QuietTime: AwsPinpointSjInput
}

input AwsPinpointUpdateBaiduChannelBaiduChannelRequestInput {
  ApiKey: String
  Enabled: Boolean
  SecretKey: String
}

input AwsPinpointUpdateBaiduChannelInput {
  ApplicationId: String!
  BaiduChannelRequest: AwsPinpointUpdateBaiduChannelBaiduChannelRequestInput!
}

type AwsPinpointUpdateBaiduChannelOutput {
  BaiduChannelResponse: AwsPinpointS22!
}

input AwsPinpointUpdateCampaignInput {
  ApplicationId: String!
  CampaignId: String!
  WriteCampaignRequest: AwsPinpointS7Input!
}

type AwsPinpointUpdateCampaignOutput {
  CampaignResponse: AwsPinpointSn!
}

input AwsPinpointUpdateEmailChannelEmailChannelRequestInput {
  Enabled: Boolean
  FromAddress: String
  Identity: String
  RoleArn: String
}

input AwsPinpointUpdateEmailChannelInput {
  ApplicationId: String!
  EmailChannelRequest: AwsPinpointUpdateEmailChannelEmailChannelRequestInput!
}

type AwsPinpointUpdateEmailChannelOutput {
  EmailChannelResponse: AwsPinpointS27!
}

input AwsPinpointUpdateEndpointEndpointRequestInput {
  Address: String
  Attributes: JSON
  ChannelType: String
  Demographic: AwsPinpointS3qInput
  EffectiveDate: String
  EndpointStatus: String
  Location: AwsPinpointS3rInput
  Metrics: JSON
  OptOut: String
  RequestId: String
  User: AwsPinpointS3uInput
}

input AwsPinpointUpdateEndpointInput {
  ApplicationId: String!
  EndpointId: String!
  EndpointRequest: AwsPinpointUpdateEndpointEndpointRequestInput!
}

type AwsPinpointUpdateEndpointOutput {
  MessageBody: AwsPinpointS66!
}

input AwsPinpointUpdateEndpointsBatchEndpointBatchRequestInput {
  Item: [AwsPinpointUpdateEndpointsBatchEndpointBatchRequestItemInput]
}

input AwsPinpointUpdateEndpointsBatchEndpointBatchRequestItemInput {
  Address: String
  Attributes: JSON
  ChannelType: String
  Demographic: AwsPinpointS3qInput
  EffectiveDate: String
  EndpointStatus: String
  Id: String
  Location: AwsPinpointS3rInput
  Metrics: JSON
  OptOut: String
  RequestId: String
  User: AwsPinpointS3uInput
}

input AwsPinpointUpdateEndpointsBatchInput {
  ApplicationId: String!
  EndpointBatchRequest: AwsPinpointUpdateEndpointsBatchEndpointBatchRequestInput!
}

type AwsPinpointUpdateEndpointsBatchOutput {
  MessageBody: AwsPinpointS66!
}

input AwsPinpointUpdateGcmChannelGCMChannelRequestInput {
  ApiKey: String
  Enabled: Boolean
}

input AwsPinpointUpdateGcmChannelInput {
  ApplicationId: String!
  GCMChannelRequest: AwsPinpointUpdateGcmChannelGCMChannelRequestInput!
}

type AwsPinpointUpdateGcmChannelOutput {
  GCMChannelResponse: AwsPinpointS2d!
}

input AwsPinpointUpdateSegmentInput {
  ApplicationId: String!
  SegmentId: String!
  WriteSegmentRequest: AwsPinpointS11Input!
}

type AwsPinpointUpdateSegmentOutput {
  SegmentResponse: AwsPinpointS1f!
}

input AwsPinpointUpdateSmsChannelInput {
  ApplicationId: String!
  SMSChannelRequest: AwsPinpointUpdateSmsChannelSMSChannelRequestInput!
}

type AwsPinpointUpdateSmsChannelOutput {
  SMSChannelResponse: AwsPinpointS2i!
}

input AwsPinpointUpdateSmsChannelSMSChannelRequestInput {
  Enabled: Boolean
  SenderId: String
  ShortCode: String
}

# Amazon Polly (2016-06-10)
type AwsPolly {
  # polly.DeleteLexicon
  DeleteLexicon(input: AwsPollyDeleteLexiconInput!): JSON

  # polly.DescribeVoices
  DescribeVoices(input: AwsPollyDescribeVoicesInput): AwsPollyDescribeVoicesOutput

  # polly.GetLexicon
  GetLexicon(input: AwsPollyGetLexiconInput!): AwsPollyGetLexiconOutput

  # polly.ListLexicons
  ListLexicons(input: AwsPollyListLexiconsInput): AwsPollyListLexiconsOutput

  # polly.PutLexicon
  PutLexicon(input: AwsPollyPutLexiconInput!): JSON

  # polly.SynthesizeSpeech
  SynthesizeSpeech(input: AwsPollySynthesizeSpeechInput!): AwsPollySynthesizeSpeechOutput
}

input AwsPollyDeleteLexiconInput {
  Name: String!
}

input AwsPollyDescribeVoicesInput {
  LanguageCode: String
  NextToken: String
}

type AwsPollyDescribeVoicesOutput {
  Voices: [AwsPollyDescribeVoicesOutputVoices]
  NextToken: String
}

type AwsPollyDescribeVoicesOutputVoices {
  Gender: String
  Id: String
  LanguageCode: String
  LanguageName: String
  Name: String
}

input AwsPollyGetLexiconInput {
  Name: String!
}

type AwsPollyGetLexiconOutput {
  Lexicon: AwsPollyGetLexiconOutputLexicon
  LexiconAttributes: AwsPollySi
}

type AwsPollyGetLexiconOutputLexicon {
  Content: String
  Name: String
}

input AwsPollyListLexiconsInput {
  NextToken: String
}

type AwsPollyListLexiconsOutput {
  Lexicons: [AwsPollyListLexiconsOutputLexicons]
  NextToken: String
}

type AwsPollyListLexiconsOutputLexicons {
  Name: String
  Attributes: AwsPollySi
}

input AwsPollyPutLexiconInput {
  Name: String!
  Content: String!
}

type AwsPollySi {
  Alphabet: String
  LanguageCode: String
  LastModified: Date
  LexiconArn: String
  LexemesCount: Int
  Size: Int
}

input AwsPollySynthesizeSpeechInput {
  LexiconNames: [String]
  OutputFormat: String!
  SampleRate: String
  SpeechMarkTypes: [String]
  Text: String!
  TextType: String
  VoiceId: String!
}

type AwsPollySynthesizeSpeechOutput {
  AudioStream: JSON
  ContentType: String
  RequestCharacters: Int
}

# AWS Price List Service (2017-10-15)
type AwsPricing {
  # pricing.DescribeServices
  DescribeServices(input: AwsPricingDescribeServicesInput): AwsPricingDescribeServicesOutput

  # pricing.GetAttributeValues
  GetAttributeValues(input: AwsPricingGetAttributeValuesInput!): AwsPricingGetAttributeValuesOutput

  # pricing.GetProducts
  GetProducts(input: AwsPricingGetProductsInput): AwsPricingGetProductsOutput
}

input AwsPricingDescribeServicesInput {
  ServiceCode: String
  FormatVersion: String
  NextToken: String
  MaxResults: Int
}

type AwsPricingDescribeServicesOutput {
  Services: [AwsPricingDescribeServicesOutputServices]
  FormatVersion: String
  NextToken: String
}

type AwsPricingDescribeServicesOutputServices {
  ServiceCode: String
  AttributeNames: [String]
}

input AwsPricingGetAttributeValuesInput {
  ServiceCode: String!
  AttributeName: String!
  NextToken: String
  MaxResults: Int
}

type AwsPricingGetAttributeValuesOutput {
  AttributeValues: [AwsPricingGetAttributeValuesOutputAttributeValues]
  NextToken: String
}

type AwsPricingGetAttributeValuesOutputAttributeValues {
  Value: String
}

input AwsPricingGetProductsFiltersInput {
  Type: String!
  Field: String!
  Value: String!
}

input AwsPricingGetProductsInput {
  ServiceCode: String
  Filters: [AwsPricingGetProductsFiltersInput]
  FormatVersion: String
  NextToken: String
  MaxResults: Int
}

type AwsPricingGetProductsOutput {
  FormatVersion: String
  PriceList: [String]
  NextToken: String
}

# Amazon Relational Database Service (2014-10-31)
type AwsRds {
  # rds.AddRoleToDBCluster
  AddRoleToDBCluster(input: AwsRdsAddRoleToDBClusterInput!): JSON

  # rds.AddSourceIdentifierToSubscription
  AddSourceIdentifierToSubscription(input: AwsRdsAddSourceIdentifierToSubscriptionInput!): AwsRdsAddSourceIdentifierToSubscriptionOutput

  # rds.AddTagsToResource
  AddTagsToResource(input: AwsRdsAddTagsToResourceInput!): JSON

  # rds.ApplyPendingMaintenanceAction
  ApplyPendingMaintenanceAction(input: AwsRdsApplyPendingMaintenanceActionInput!): AwsRdsApplyPendingMaintenanceActionOutput

  # rds.AuthorizeDBSecurityGroupIngress
  AuthorizeDBSecurityGroupIngress(input: AwsRdsAuthorizeDBSecurityGroupIngressInput!): AwsRdsAuthorizeDBSecurityGroupIngressOutput

  # rds.CopyDBClusterParameterGroup
  CopyDBClusterParameterGroup(input: AwsRdsCopyDBClusterParameterGroupInput!): AwsRdsCopyDBClusterParameterGroupOutput

  # rds.CopyDBClusterSnapshot
  CopyDBClusterSnapshot(input: AwsRdsCopyDBClusterSnapshotInput!): AwsRdsCopyDBClusterSnapshotOutput

  # rds.CopyDBParameterGroup
  CopyDBParameterGroup(input: AwsRdsCopyDBParameterGroupInput!): AwsRdsCopyDBParameterGroupOutput

  # rds.CopyDBSnapshot
  CopyDBSnapshot(input: AwsRdsCopyDBSnapshotInput!): AwsRdsCopyDBSnapshotOutput

  # rds.CopyOptionGroup
  CopyOptionGroup(input: AwsRdsCopyOptionGroupInput!): AwsRdsCopyOptionGroupOutput

  # rds.CreateDBCluster
  CreateDBCluster(input: AwsRdsCreateDBClusterInput!): AwsRdsCreateDBClusterOutput

  # rds.CreateDBClusterParameterGroup
  CreateDBClusterParameterGroup(input: AwsRdsCreateDBClusterParameterGroupInput!): AwsRdsCreateDBClusterParameterGroupOutput

  # rds.CreateDBClusterSnapshot
  CreateDBClusterSnapshot(input: AwsRdsCreateDBClusterSnapshotInput!): AwsRdsCreateDBClusterSnapshotOutput

  # rds.CreateDBInstance
  CreateDBInstance(input: AwsRdsCreateDBInstanceInput!): AwsRdsCreateDBInstanceOutput

  # rds.CreateDBInstanceReadReplica
  CreateDBInstanceReadReplica(input: AwsRdsCreateDBInstanceReadReplicaInput!): AwsRdsCreateDBInstanceReadReplicaOutput

  # rds.CreateDBParameterGroup
  CreateDBParameterGroup(input: AwsRdsCreateDBParameterGroupInput!): AwsRdsCreateDBParameterGroupOutput

  # rds.CreateDBSecurityGroup
  CreateDBSecurityGroup(input: AwsRdsCreateDBSecurityGroupInput!): AwsRdsCreateDBSecurityGroupOutput

  # rds.CreateDBSnapshot
  CreateDBSnapshot(input: AwsRdsCreateDBSnapshotInput!): AwsRdsCreateDBSnapshotOutput

  # rds.CreateDBSubnetGroup
  CreateDBSubnetGroup(input: AwsRdsCreateDBSubnetGroupInput!): AwsRdsCreateDBSubnetGroupOutput

  # rds.CreateEventSubscription
  CreateEventSubscription(input: AwsRdsCreateEventSubscriptionInput!): AwsRdsCreateEventSubscriptionOutput

  # rds.CreateOptionGroup
  CreateOptionGroup(input: AwsRdsCreateOptionGroupInput!): AwsRdsCreateOptionGroupOutput

  # rds.DeleteDBCluster
  DeleteDBCluster(input: AwsRdsDeleteDBClusterInput!): AwsRdsDeleteDBClusterOutput

  # rds.DeleteDBClusterParameterGroup
  DeleteDBClusterParameterGroup(input: AwsRdsDeleteDBClusterParameterGroupInput!): JSON

  # rds.DeleteDBClusterSnapshot
  DeleteDBClusterSnapshot(input: AwsRdsDeleteDBClusterSnapshotInput!): AwsRdsDeleteDBClusterSnapshotOutput

  # rds.DeleteDBInstance
  DeleteDBInstance(input: AwsRdsDeleteDBInstanceInput!): AwsRdsDeleteDBInstanceOutput

  # rds.DeleteDBParameterGroup
  DeleteDBParameterGroup(input: AwsRdsDeleteDBParameterGroupInput!): JSON

  # rds.DeleteDBSecurityGroup
  DeleteDBSecurityGroup(input: AwsRdsDeleteDBSecurityGroupInput!): JSON

  # rds.DeleteDBSnapshot
  DeleteDBSnapshot(input: AwsRdsDeleteDBSnapshotInput!): AwsRdsDeleteDBSnapshotOutput

  # rds.DeleteDBSubnetGroup
  DeleteDBSubnetGroup(input: AwsRdsDeleteDBSubnetGroupInput!): JSON

  # rds.DeleteEventSubscription
  DeleteEventSubscription(input: AwsRdsDeleteEventSubscriptionInput!): AwsRdsDeleteEventSubscriptionOutput

  # rds.DeleteOptionGroup
  DeleteOptionGroup(input: AwsRdsDeleteOptionGroupInput!): JSON

  # rds.DescribeAccountAttributes
  DescribeAccountAttributes(input: JSON): AwsRdsDescribeAccountAttributesOutput

  # rds.DescribeCertificates
  DescribeCertificates(input: AwsRdsDescribeCertificatesInput): AwsRdsDescribeCertificatesOutput

  # rds.DescribeDBClusterParameterGroups
  DescribeDBClusterParameterGroups(input: AwsRdsDescribeDBClusterParameterGroupsInput): AwsRdsDescribeDBClusterParameterGroupsOutput

  # rds.DescribeDBClusterParameters
  DescribeDBClusterParameters(input: AwsRdsDescribeDBClusterParametersInput!): AwsRdsDescribeDBClusterParametersOutput

  # rds.DescribeDBClusterSnapshotAttributes
  DescribeDBClusterSnapshotAttributes(input: AwsRdsDescribeDBClusterSnapshotAttributesInput!): AwsRdsDescribeDBClusterSnapshotAttributesOutput

  # rds.DescribeDBClusterSnapshots
  DescribeDBClusterSnapshots(input: AwsRdsDescribeDBClusterSnapshotsInput): AwsRdsDescribeDBClusterSnapshotsOutput

  # rds.DescribeDBClusters
  DescribeDBClusters(input: AwsRdsDescribeDBClustersInput): AwsRdsDescribeDBClustersOutput

  # rds.DescribeDBEngineVersions
  DescribeDBEngineVersions(input: AwsRdsDescribeDBEngineVersionsInput): AwsRdsDescribeDBEngineVersionsOutput

  # rds.DescribeDBInstances
  DescribeDBInstances(input: AwsRdsDescribeDBInstancesInput): AwsRdsDescribeDBInstancesOutput

  # rds.DescribeDBLogFiles
  DescribeDBLogFiles(input: AwsRdsDescribeDBLogFilesInput!): AwsRdsDescribeDBLogFilesOutput

  # rds.DescribeDBParameterGroups
  DescribeDBParameterGroups(input: AwsRdsDescribeDBParameterGroupsInput): AwsRdsDescribeDBParameterGroupsOutput

  # rds.DescribeDBParameters
  DescribeDBParameters(input: AwsRdsDescribeDBParametersInput!): AwsRdsDescribeDBParametersOutput

  # rds.DescribeDBSecurityGroups
  DescribeDBSecurityGroups(input: AwsRdsDescribeDBSecurityGroupsInput): AwsRdsDescribeDBSecurityGroupsOutput

  # rds.DescribeDBSnapshotAttributes
  DescribeDBSnapshotAttributes(input: AwsRdsDescribeDBSnapshotAttributesInput!): AwsRdsDescribeDBSnapshotAttributesOutput

  # rds.DescribeDBSnapshots
  DescribeDBSnapshots(input: AwsRdsDescribeDBSnapshotsInput): AwsRdsDescribeDBSnapshotsOutput

  # rds.DescribeDBSubnetGroups
  DescribeDBSubnetGroups(input: AwsRdsDescribeDBSubnetGroupsInput): AwsRdsDescribeDBSubnetGroupsOutput

  # rds.DescribeEngineDefaultClusterParameters
  DescribeEngineDefaultClusterParameters(input: AwsRdsDescribeEngineDefaultClusterParametersInput!): AwsRdsDescribeEngineDefaultClusterParametersOutput

  # rds.DescribeEngineDefaultParameters
  DescribeEngineDefaultParameters(input: AwsRdsDescribeEngineDefaultParametersInput!): AwsRdsDescribeEngineDefaultParametersOutput

  # rds.DescribeEventCategories
  DescribeEventCategories(input: AwsRdsDescribeEventCategoriesInput): AwsRdsDescribeEventCategoriesOutput

  # rds.DescribeEventSubscriptions
  DescribeEventSubscriptions(input: AwsRdsDescribeEventSubscriptionsInput): AwsRdsDescribeEventSubscriptionsOutput

  # rds.DescribeEvents
  DescribeEvents(input: AwsRdsDescribeEventsInput): AwsRdsDescribeEventsOutput

  # rds.DescribeOptionGroupOptions
  DescribeOptionGroupOptions(input: AwsRdsDescribeOptionGroupOptionsInput!): AwsRdsDescribeOptionGroupOptionsOutput

  # rds.DescribeOptionGroups
  DescribeOptionGroups(input: AwsRdsDescribeOptionGroupsInput): AwsRdsDescribeOptionGroupsOutput

  # rds.DescribeOrderableDBInstanceOptions
  DescribeOrderableDBInstanceOptions(input: AwsRdsDescribeOrderableDBInstanceOptionsInput!): AwsRdsDescribeOrderableDBInstanceOptionsOutput

  # rds.DescribePendingMaintenanceActions
  DescribePendingMaintenanceActions(input: AwsRdsDescribePendingMaintenanceActionsInput): AwsRdsDescribePendingMaintenanceActionsOutput

  # rds.DescribeReservedDBInstances
  DescribeReservedDBInstances(input: AwsRdsDescribeReservedDBInstancesInput): AwsRdsDescribeReservedDBInstancesOutput

  # rds.DescribeReservedDBInstancesOfferings
  DescribeReservedDBInstancesOfferings(input: AwsRdsDescribeReservedDBInstancesOfferingsInput): AwsRdsDescribeReservedDBInstancesOfferingsOutput

  # rds.DescribeSourceRegions
  DescribeSourceRegions(input: AwsRdsDescribeSourceRegionsInput): AwsRdsDescribeSourceRegionsOutput

  # rds.DescribeValidDBInstanceModifications
  DescribeValidDBInstanceModifications(input: AwsRdsDescribeValidDBInstanceModificationsInput!): AwsRdsDescribeValidDBInstanceModificationsOutput

  # rds.DownloadDBLogFilePortion
  DownloadDBLogFilePortion(input: AwsRdsDownloadDBLogFilePortionInput!): AwsRdsDownloadDBLogFilePortionOutput

  # rds.FailoverDBCluster
  FailoverDBCluster(input: AwsRdsFailoverDBClusterInput): AwsRdsFailoverDBClusterOutput

  # rds.ListTagsForResource
  ListTagsForResource(input: AwsRdsListTagsForResourceInput!): AwsRdsListTagsForResourceOutput

  # rds.ModifyDBCluster
  ModifyDBCluster(input: AwsRdsModifyDBClusterInput!): AwsRdsModifyDBClusterOutput

  # rds.ModifyDBClusterParameterGroup
  ModifyDBClusterParameterGroup(input: AwsRdsModifyDBClusterParameterGroupInput!): JSON

  # rds.ModifyDBClusterSnapshotAttribute
  ModifyDBClusterSnapshotAttribute(input: AwsRdsModifyDBClusterSnapshotAttributeInput!): AwsRdsModifyDBClusterSnapshotAttributeOutput

  # rds.ModifyDBInstance
  ModifyDBInstance(input: AwsRdsModifyDBInstanceInput!): AwsRdsModifyDBInstanceOutput

  # rds.ModifyDBParameterGroup
  ModifyDBParameterGroup(input: AwsRdsModifyDBParameterGroupInput!): JSON

  # rds.ModifyDBSnapshot
  ModifyDBSnapshot(input: AwsRdsModifyDBSnapshotInput!): AwsRdsModifyDBSnapshotOutput

  # rds.ModifyDBSnapshotAttribute
  ModifyDBSnapshotAttribute(input: AwsRdsModifyDBSnapshotAttributeInput!): AwsRdsModifyDBSnapshotAttributeOutput

  # rds.ModifyDBSubnetGroup
  ModifyDBSubnetGroup(input: AwsRdsModifyDBSubnetGroupInput!): AwsRdsModifyDBSubnetGroupOutput

  # rds.ModifyEventSubscription
  ModifyEventSubscription(input: AwsRdsModifyEventSubscriptionInput!): AwsRdsModifyEventSubscriptionOutput

  # rds.ModifyOptionGroup
  ModifyOptionGroup(input: AwsRdsModifyOptionGroupInput!): AwsRdsModifyOptionGroupOutput

  # rds.PromoteReadReplica
  PromoteReadReplica(input: AwsRdsPromoteReadReplicaInput!): AwsRdsPromoteReadReplicaOutput

  # rds.PromoteReadReplicaDBCluster
  PromoteReadReplicaDBCluster(input: AwsRdsPromoteReadReplicaDBClusterInput!): AwsRdsPromoteReadReplicaDBClusterOutput

  # rds.PurchaseReservedDBInstancesOffering
  PurchaseReservedDBInstancesOffering(input: AwsRdsPurchaseReservedDBInstancesOfferingInput!): AwsRdsPurchaseReservedDBInstancesOfferingOutput

  # rds.RebootDBInstance
  RebootDBInstance(input: AwsRdsRebootDBInstanceInput!): AwsRdsRebootDBInstanceOutput

  # rds.RemoveRoleFromDBCluster
  RemoveRoleFromDBCluster(input: AwsRdsRemoveRoleFromDBClusterInput!): JSON

  # rds.RemoveSourceIdentifierFromSubscription
  RemoveSourceIdentifierFromSubscription(input: AwsRdsRemoveSourceIdentifierFromSubscriptionInput!): AwsRdsRemoveSourceIdentifierFromSubscriptionOutput

  # rds.RemoveTagsFromResource
  RemoveTagsFromResource(input: AwsRdsRemoveTagsFromResourceInput!): JSON

  # rds.ResetDBClusterParameterGroup
  ResetDBClusterParameterGroup(input: AwsRdsResetDBClusterParameterGroupInput!): JSON

  # rds.ResetDBParameterGroup
  ResetDBParameterGroup(input: AwsRdsResetDBParameterGroupInput!): JSON

  # rds.RestoreDBClusterFromS3
  RestoreDBClusterFromS3(input: AwsRdsRestoreDBClusterFromS3Input!): AwsRdsRestoreDBClusterFromS3Output

  # rds.RestoreDBClusterFromSnapshot
  RestoreDBClusterFromSnapshot(input: AwsRdsRestoreDBClusterFromSnapshotInput!): AwsRdsRestoreDBClusterFromSnapshotOutput

  # rds.RestoreDBClusterToPointInTime
  RestoreDBClusterToPointInTime(input: AwsRdsRestoreDBClusterToPointInTimeInput!): AwsRdsRestoreDBClusterToPointInTimeOutput

  # rds.RestoreDBInstanceFromDBSnapshot
  RestoreDBInstanceFromDBSnapshot(input: AwsRdsRestoreDBInstanceFromDBSnapshotInput!): AwsRdsRestoreDBInstanceFromDBSnapshotOutput

  # rds.RestoreDBInstanceFromS3
  RestoreDBInstanceFromS3(input: AwsRdsRestoreDBInstanceFromS3Input!): AwsRdsRestoreDBInstanceFromS3Output

  # rds.RestoreDBInstanceToPointInTime
  RestoreDBInstanceToPointInTime(input: AwsRdsRestoreDBInstanceToPointInTimeInput!): AwsRdsRestoreDBInstanceToPointInTimeOutput

  # rds.RevokeDBSecurityGroupIngress
  RevokeDBSecurityGroupIngress(input: AwsRdsRevokeDBSecurityGroupIngressInput!): AwsRdsRevokeDBSecurityGroupIngressOutput

  # rds.StartDBInstance
  StartDBInstance(input: AwsRdsStartDBInstanceInput!): AwsRdsStartDBInstanceOutput

  # rds.StopDBInstance
  StopDBInstance(input: AwsRdsStopDBInstanceInput!): AwsRdsStopDBInstanceOutput
}

input AwsRdsAddRoleToDBClusterInput {
  DBClusterIdentifier: String!
  RoleArn: String!
}

input AwsRdsAddSourceIdentifierToSubscriptionInput {
  SubscriptionName: String!
  SourceIdentifier: String!
}

type AwsRdsAddSourceIdentifierToSubscriptionOutput {
  EventSubscription: AwsRdsS5
}

input AwsRdsAddTagsToResourceInput {
  ResourceName: String!
  Tags: [AwsRdsSaInput]!
}

input AwsRdsApplyPendingMaintenanceActionInput {
  ResourceIdentifier: String!
  ApplyAction: String!
  OptInType: String!
}

type AwsRdsApplyPendingMaintenanceActionOutput {
  ResourcePendingMaintenanceActions: AwsRdsSe
}

input AwsRdsAuthorizeDBSecurityGroupIngressInput {
  DBSecurityGroupName: String!
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupId: String
  EC2SecurityGroupOwnerId: String
}

type AwsRdsAuthorizeDBSecurityGroupIngressOutput {
  DBSecurityGroup: AwsRdsSk
}

input AwsRdsCopyDBClusterParameterGroupInput {
  SourceDBClusterParameterGroupIdentifier: String!
  TargetDBClusterParameterGroupIdentifier: String!
  TargetDBClusterParameterGroupDescription: String!
  Tags: [AwsRdsSaInput]
}

type AwsRdsCopyDBClusterParameterGroupOutput {
  DBClusterParameterGroup: AwsRdsSr
}

input AwsRdsCopyDBClusterSnapshotInput {
  SourceDBClusterSnapshotIdentifier: String!
  TargetDBClusterSnapshotIdentifier: String!
  KmsKeyId: String
  PreSignedUrl: String
  CopyTags: Boolean
  Tags: [AwsRdsSaInput]
  SourceRegion: String
}

type AwsRdsCopyDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsRdsSv
}

input AwsRdsCopyDBParameterGroupInput {
  SourceDBParameterGroupIdentifier: String!
  TargetDBParameterGroupIdentifier: String!
  TargetDBParameterGroupDescription: String!
  Tags: [AwsRdsSaInput]
}

type AwsRdsCopyDBParameterGroupOutput {
  DBParameterGroup: AwsRdsS10
}

input AwsRdsCopyDBSnapshotInput {
  SourceDBSnapshotIdentifier: String!
  TargetDBSnapshotIdentifier: String!
  KmsKeyId: String
  Tags: [AwsRdsSaInput]
  CopyTags: Boolean
  PreSignedUrl: String
  OptionGroupName: String
  SourceRegion: String
}

type AwsRdsCopyDBSnapshotOutput {
  DBSnapshot: AwsRdsS13
}

input AwsRdsCopyOptionGroupInput {
  SourceOptionGroupIdentifier: String!
  TargetOptionGroupIdentifier: String!
  TargetOptionGroupDescription: String!
  Tags: [AwsRdsSaInput]
}

type AwsRdsCopyOptionGroupOutput {
  OptionGroup: AwsRdsS17
}

input AwsRdsCreateDBClusterInput {
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  CharacterSetName: String
  DatabaseName: String
  DBClusterIdentifier: String!
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  DBSubnetGroupName: String
  Engine: String!
  EngineVersion: String
  Port: Int
  MasterUsername: String
  MasterUserPassword: String
  OptionGroupName: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  ReplicationSourceIdentifier: String
  Tags: [AwsRdsSaInput]
  StorageEncrypted: Boolean
  KmsKeyId: String
  PreSignedUrl: String
  EnableIAMDatabaseAuthentication: Boolean
  SourceRegion: String
}

type AwsRdsCreateDBClusterOutput {
  DBCluster: AwsRdsS1j
}

input AwsRdsCreateDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  DBParameterGroupFamily: String!
  Description: String!
  Tags: [AwsRdsSaInput]
}

type AwsRdsCreateDBClusterParameterGroupOutput {
  DBClusterParameterGroup: AwsRdsSr
}

input AwsRdsCreateDBClusterSnapshotInput {
  DBClusterSnapshotIdentifier: String!
  DBClusterIdentifier: String!
  Tags: [AwsRdsSaInput]
}

type AwsRdsCreateDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsRdsSv
}

input AwsRdsCreateDBInstanceInput {
  DBName: String
  DBInstanceIdentifier: String!
  AllocatedStorage: Int
  DBInstanceClass: String!
  Engine: String!
  MasterUsername: String
  MasterUserPassword: String
  DBSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  AvailabilityZone: String
  DBSubnetGroupName: String
  PreferredMaintenanceWindow: String
  DBParameterGroupName: String
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
  Port: Int
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  Iops: Int
  OptionGroupName: String
  CharacterSetName: String
  PubliclyAccessible: Boolean
  Tags: [AwsRdsSaInput]
  DBClusterIdentifier: String
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  Domain: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  MonitoringRoleArn: String
  DomainIAMRoleName: String
  PromotionTier: Int
  Timezone: String
  EnableIAMDatabaseAuthentication: Boolean
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
}

type AwsRdsCreateDBInstanceOutput {
  DBInstance: AwsRdsS1y
}

input AwsRdsCreateDBInstanceReadReplicaInput {
  DBInstanceIdentifier: String!
  SourceDBInstanceIdentifier: String!
  DBInstanceClass: String
  AvailabilityZone: String
  Port: Int
  AutoMinorVersionUpgrade: Boolean
  Iops: Int
  OptionGroupName: String
  PubliclyAccessible: Boolean
  Tags: [AwsRdsSaInput]
  DBSubnetGroupName: String
  StorageType: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  MonitoringRoleArn: String
  KmsKeyId: String
  PreSignedUrl: String
  EnableIAMDatabaseAuthentication: Boolean
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
  SourceRegion: String
}

type AwsRdsCreateDBInstanceReadReplicaOutput {
  DBInstance: AwsRdsS1y
}

input AwsRdsCreateDBParameterGroupInput {
  DBParameterGroupName: String!
  DBParameterGroupFamily: String!
  Description: String!
  Tags: [AwsRdsSaInput]
}

type AwsRdsCreateDBParameterGroupOutput {
  DBParameterGroup: AwsRdsS10
}

input AwsRdsCreateDBSecurityGroupInput {
  DBSecurityGroupName: String!
  DBSecurityGroupDescription: String!
  Tags: [AwsRdsSaInput]
}

type AwsRdsCreateDBSecurityGroupOutput {
  DBSecurityGroup: AwsRdsSk
}

input AwsRdsCreateDBSnapshotInput {
  DBSnapshotIdentifier: String!
  DBInstanceIdentifier: String!
  Tags: [AwsRdsSaInput]
}

type AwsRdsCreateDBSnapshotOutput {
  DBSnapshot: AwsRdsS13
}

input AwsRdsCreateDBSubnetGroupInput {
  DBSubnetGroupName: String!
  DBSubnetGroupDescription: String!
  SubnetIds: [String]!
  Tags: [AwsRdsSaInput]
}

type AwsRdsCreateDBSubnetGroupOutput {
  DBSubnetGroup: AwsRdsS22
}

input AwsRdsCreateEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String!
  SourceType: String
  EventCategories: [String]
  SourceIds: [String]
  Enabled: Boolean
  Tags: [AwsRdsSaInput]
}

type AwsRdsCreateEventSubscriptionOutput {
  EventSubscription: AwsRdsS5
}

input AwsRdsCreateOptionGroupInput {
  OptionGroupName: String!
  EngineName: String!
  MajorEngineVersion: String!
  OptionGroupDescription: String!
  Tags: [AwsRdsSaInput]
}

type AwsRdsCreateOptionGroupOutput {
  OptionGroup: AwsRdsS17
}

input AwsRdsDeleteDBClusterInput {
  DBClusterIdentifier: String!
  SkipFinalSnapshot: Boolean
  FinalDBSnapshotIdentifier: String
}

type AwsRdsDeleteDBClusterOutput {
  DBCluster: AwsRdsS1j
}

input AwsRdsDeleteDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
}

input AwsRdsDeleteDBClusterSnapshotInput {
  DBClusterSnapshotIdentifier: String!
}

type AwsRdsDeleteDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsRdsSv
}

input AwsRdsDeleteDBInstanceInput {
  DBInstanceIdentifier: String!
  SkipFinalSnapshot: Boolean
  FinalDBSnapshotIdentifier: String
}

type AwsRdsDeleteDBInstanceOutput {
  DBInstance: AwsRdsS1y
}

input AwsRdsDeleteDBParameterGroupInput {
  DBParameterGroupName: String!
}

input AwsRdsDeleteDBSecurityGroupInput {
  DBSecurityGroupName: String!
}

input AwsRdsDeleteDBSnapshotInput {
  DBSnapshotIdentifier: String!
}

type AwsRdsDeleteDBSnapshotOutput {
  DBSnapshot: AwsRdsS13
}

input AwsRdsDeleteDBSubnetGroupInput {
  DBSubnetGroupName: String!
}

input AwsRdsDeleteEventSubscriptionInput {
  SubscriptionName: String!
}

type AwsRdsDeleteEventSubscriptionOutput {
  EventSubscription: AwsRdsS5
}

input AwsRdsDeleteOptionGroupInput {
  OptionGroupName: String!
}

type AwsRdsDescribeAccountAttributesOutput {
  AccountQuotas: [AwsRdsDescribeAccountAttributesOutputAccountQuotas]
}

type AwsRdsDescribeAccountAttributesOutputAccountQuotas {
  AccountQuotaName: String
  Used: JSON
  Max: JSON
}

input AwsRdsDescribeCertificatesInput {
  CertificateIdentifier: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeCertificatesOutput {
  Certificates: [AwsRdsDescribeCertificatesOutputCertificates]
  Marker: String
}

type AwsRdsDescribeCertificatesOutputCertificates {
  CertificateIdentifier: String
  CertificateType: String
  Thumbprint: String
  ValidFrom: Date
  ValidTill: Date
  CertificateArn: String
}

input AwsRdsDescribeDBClusterParameterGroupsInput {
  DBClusterParameterGroupName: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeDBClusterParameterGroupsOutput {
  Marker: String
  DBClusterParameterGroups: [AwsRdsSr]
}

input AwsRdsDescribeDBClusterParametersInput {
  DBClusterParameterGroupName: String!
  Source: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeDBClusterParametersOutput {
  Parameters: [AwsRdsS3q]
  Marker: String
}

input AwsRdsDescribeDBClustersInput {
  DBClusterIdentifier: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

input AwsRdsDescribeDBClusterSnapshotAttributesInput {
  DBClusterSnapshotIdentifier: String!
}

type AwsRdsDescribeDBClusterSnapshotAttributesOutput {
  DBClusterSnapshotAttributesResult: AwsRdsS3v
}

input AwsRdsDescribeDBClusterSnapshotsInput {
  DBClusterIdentifier: String
  DBClusterSnapshotIdentifier: String
  SnapshotType: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
  IncludeShared: Boolean
  IncludePublic: Boolean
}

type AwsRdsDescribeDBClusterSnapshotsOutput {
  Marker: String
  DBClusterSnapshots: [AwsRdsSv]
}

type AwsRdsDescribeDBClustersOutput {
  Marker: String
  DBClusters: [AwsRdsS1j]
}

input AwsRdsDescribeDBEngineVersionsInput {
  Engine: String
  EngineVersion: String
  DBParameterGroupFamily: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
  DefaultOnly: Boolean
  ListSupportedCharacterSets: Boolean
  ListSupportedTimezones: Boolean
}

type AwsRdsDescribeDBEngineVersionsOutput {
  Marker: String
  DBEngineVersions: [AwsRdsDescribeDBEngineVersionsOutputDBEngineVersions]
}

type AwsRdsDescribeDBEngineVersionsOutputDBEngineVersions {
  Engine: String
  EngineVersion: String
  DBParameterGroupFamily: String
  DBEngineDescription: String
  DBEngineVersionDescription: String
  DefaultCharacterSet: AwsRdsS49
  SupportedCharacterSets: [AwsRdsS49]
  ValidUpgradeTarget: [AwsRdsDescribeDBEngineVersionsOutputDBEngineVersionsValidUpgradeTarget]
  SupportedTimezones: [AwsRdsDescribeDBEngineVersionsOutputDBEngineVersionsSupportedTimezones]
}

type AwsRdsDescribeDBEngineVersionsOutputDBEngineVersionsSupportedTimezones {
  TimezoneName: String
}

type AwsRdsDescribeDBEngineVersionsOutputDBEngineVersionsValidUpgradeTarget {
  Engine: String
  EngineVersion: String
  Description: String
  AutoUpgrade: Boolean
  IsMajorVersionUpgrade: Boolean
}

input AwsRdsDescribeDBInstancesInput {
  DBInstanceIdentifier: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeDBInstancesOutput {
  Marker: String
  DBInstances: [AwsRdsS1y]
}

input AwsRdsDescribeDBLogFilesInput {
  DBInstanceIdentifier: String!
  FilenameContains: String
  FileLastWritten: JSON
  FileSize: JSON
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeDBLogFilesOutput {
  DescribeDBLogFiles: [AwsRdsDescribeDBLogFilesOutputDescribeDBLogFiles]
  Marker: String
}

type AwsRdsDescribeDBLogFilesOutputDescribeDBLogFiles {
  LogFileName: String
  LastWritten: JSON
  Size: JSON
}

input AwsRdsDescribeDBParameterGroupsInput {
  DBParameterGroupName: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeDBParameterGroupsOutput {
  Marker: String
  DBParameterGroups: [AwsRdsS10]
}

input AwsRdsDescribeDBParametersInput {
  DBParameterGroupName: String!
  Source: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeDBParametersOutput {
  Parameters: [AwsRdsS3q]
  Marker: String
}

input AwsRdsDescribeDBSecurityGroupsInput {
  DBSecurityGroupName: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeDBSecurityGroupsOutput {
  Marker: String
  DBSecurityGroups: [AwsRdsSk]
}

input AwsRdsDescribeDBSnapshotAttributesInput {
  DBSnapshotIdentifier: String!
}

type AwsRdsDescribeDBSnapshotAttributesOutput {
  DBSnapshotAttributesResult: AwsRdsS4w
}

input AwsRdsDescribeDBSnapshotsInput {
  DBInstanceIdentifier: String
  DBSnapshotIdentifier: String
  SnapshotType: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
  IncludeShared: Boolean
  IncludePublic: Boolean
}

type AwsRdsDescribeDBSnapshotsOutput {
  Marker: String
  DBSnapshots: [AwsRdsS13]
}

input AwsRdsDescribeDBSubnetGroupsInput {
  DBSubnetGroupName: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeDBSubnetGroupsOutput {
  Marker: String
  DBSubnetGroups: [AwsRdsS22]
}

input AwsRdsDescribeEngineDefaultClusterParametersInput {
  DBParameterGroupFamily: String!
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeEngineDefaultClusterParametersOutput {
  EngineDefaults: AwsRdsS57
}

input AwsRdsDescribeEngineDefaultParametersInput {
  DBParameterGroupFamily: String!
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeEngineDefaultParametersOutput {
  EngineDefaults: AwsRdsS57
}

input AwsRdsDescribeEventCategoriesInput {
  SourceType: String
  Filters: [AwsRdsS3fInput]
}

type AwsRdsDescribeEventCategoriesOutput {
  EventCategoriesMapList: [AwsRdsDescribeEventCategoriesOutputEventCategoriesMapList]
}

type AwsRdsDescribeEventCategoriesOutputEventCategoriesMapList {
  SourceType: String
  EventCategories: [String]
}

input AwsRdsDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  EventCategories: [String]
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeEventsOutput {
  Marker: String
  Events: [AwsRdsDescribeEventsOutputEvents]
}

type AwsRdsDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  EventCategories: [String]
  Date: Date
  SourceArn: String
}

input AwsRdsDescribeEventSubscriptionsInput {
  SubscriptionName: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeEventSubscriptionsOutput {
  Marker: String
  EventSubscriptionsList: [AwsRdsS5]
}

input AwsRdsDescribeOptionGroupOptionsInput {
  EngineName: String!
  MajorEngineVersion: String
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeOptionGroupOptionsOutput {
  OptionGroupOptions: [AwsRdsDescribeOptionGroupOptionsOutputOptionGroupOptions]
  Marker: String
}

type AwsRdsDescribeOptionGroupOptionsOutputOptionGroupOptions {
  Name: String
  Description: String
  EngineName: String
  MajorEngineVersion: String
  MinimumRequiredMinorEngineVersion: String
  PortRequired: Boolean
  DefaultPort: Int
  OptionsDependedOn: [String]
  OptionsConflictsWith: [String]
  Persistent: Boolean
  Permanent: Boolean
  RequiresAutoMinorEngineVersionUpgrade: Boolean
  VpcOnly: Boolean
  SupportsOptionVersionDowngrade: Boolean
  OptionGroupOptionSettings: [AwsRdsDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionSettings]
  OptionGroupOptionVersions: [AwsRdsDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionVersions]
}

type AwsRdsDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionSettings {
  SettingName: String
  SettingDescription: String
  DefaultValue: String
  ApplyType: String
  AllowedValues: String
  IsModifiable: Boolean
}

type AwsRdsDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionVersions {
  Version: String
  IsDefault: Boolean
}

input AwsRdsDescribeOptionGroupsInput {
  OptionGroupName: String
  Filters: [AwsRdsS3fInput]
  Marker: String
  MaxRecords: Int
  EngineName: String
  MajorEngineVersion: String
}

type AwsRdsDescribeOptionGroupsOutput {
  OptionGroupsList: [AwsRdsS17]
  Marker: String
}

input AwsRdsDescribeOrderableDBInstanceOptionsInput {
  Engine: String!
  EngineVersion: String
  DBInstanceClass: String
  LicenseModel: String
  Vpc: Boolean
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeOrderableDBInstanceOptionsOutput {
  OrderableDBInstanceOptions: [AwsRdsDescribeOrderableDBInstanceOptionsOutputOrderableDBInstanceOptions]
  Marker: String
}

type AwsRdsDescribeOrderableDBInstanceOptionsOutputOrderableDBInstanceOptions {
  Engine: String
  EngineVersion: String
  DBInstanceClass: String
  LicenseModel: String
  AvailabilityZones: [AwsRdsS25]
  MultiAZCapable: Boolean
  ReadReplicaCapable: Boolean
  Vpc: Boolean
  SupportsStorageEncryption: Boolean
  StorageType: String
  SupportsIops: Boolean
  SupportsEnhancedMonitoring: Boolean
  SupportsIAMDatabaseAuthentication: Boolean
  SupportsPerformanceInsights: Boolean
  MinStorageSize: Int
  MaxStorageSize: Int
  MinIopsPerDbInstance: Int
  MaxIopsPerDbInstance: Int
  MinIopsPerGib: JSON
  MaxIopsPerGib: JSON
}

input AwsRdsDescribePendingMaintenanceActionsInput {
  ResourceIdentifier: String
  Filters: [AwsRdsS3fInput]
  Marker: String
  MaxRecords: Int
}

type AwsRdsDescribePendingMaintenanceActionsOutput {
  PendingMaintenanceActions: [AwsRdsSe]
  Marker: String
}

input AwsRdsDescribeReservedDBInstancesInput {
  ReservedDBInstanceId: String
  ReservedDBInstancesOfferingId: String
  DBInstanceClass: String
  Duration: String
  ProductDescription: String
  OfferingType: String
  MultiAZ: Boolean
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

input AwsRdsDescribeReservedDBInstancesOfferingsInput {
  ReservedDBInstancesOfferingId: String
  DBInstanceClass: String
  Duration: String
  ProductDescription: String
  OfferingType: String
  MultiAZ: Boolean
  Filters: [AwsRdsS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRdsDescribeReservedDBInstancesOfferingsOutput {
  Marker: String
  ReservedDBInstancesOfferings: [AwsRdsDescribeReservedDBInstancesOfferingsOutputReservedDBInstancesOfferings]
}

type AwsRdsDescribeReservedDBInstancesOfferingsOutputReservedDBInstancesOfferings {
  ReservedDBInstancesOfferingId: String
  DBInstanceClass: String
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  ProductDescription: String
  OfferingType: String
  MultiAZ: Boolean
  RecurringCharges: [AwsRdsS6d]
}

type AwsRdsDescribeReservedDBInstancesOutput {
  Marker: String
  ReservedDBInstances: [AwsRdsS6b]
}

input AwsRdsDescribeSourceRegionsInput {
  RegionName: String
  MaxRecords: Int
  Marker: String
  Filters: [AwsRdsS3fInput]
}

type AwsRdsDescribeSourceRegionsOutput {
  Marker: String
  SourceRegions: [AwsRdsDescribeSourceRegionsOutputSourceRegions]
}

type AwsRdsDescribeSourceRegionsOutputSourceRegions {
  RegionName: String
  Endpoint: String
  Status: String
}

input AwsRdsDescribeValidDBInstanceModificationsInput {
  DBInstanceIdentifier: String!
}

type AwsRdsDescribeValidDBInstanceModificationsOutput {
  ValidDBInstanceModificationsMessage: AwsRdsDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessage
}

type AwsRdsDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessage {
  Storage: [AwsRdsDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorage]
}

type AwsRdsDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorage {
  StorageType: String
  StorageSize: [AwsRdsS6s]
  ProvisionedIops: [AwsRdsS6s]
  IopsToStorageRatio: [AwsRdsDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorageIopsToStorageRatio]
}

type AwsRdsDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorageIopsToStorageRatio {
  From: JSON
  To: JSON
}

input AwsRdsDownloadDBLogFilePortionInput {
  DBInstanceIdentifier: String!
  LogFileName: String!
  Marker: String
  NumberOfLines: Int
}

type AwsRdsDownloadDBLogFilePortionOutput {
  LogFileData: String
  Marker: String
  AdditionalDataPending: Boolean
}

input AwsRdsFailoverDBClusterInput {
  DBClusterIdentifier: String
  TargetDBInstanceIdentifier: String
}

type AwsRdsFailoverDBClusterOutput {
  DBCluster: AwsRdsS1j
}

input AwsRdsListTagsForResourceInput {
  ResourceName: String!
  Filters: [AwsRdsS3fInput]
}

type AwsRdsListTagsForResourceOutput {
  TagList: [AwsRdsSa]
}

input AwsRdsModifyDBClusterInput {
  DBClusterIdentifier: String!
  NewDBClusterIdentifier: String
  ApplyImmediately: Boolean
  BackupRetentionPeriod: Int
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  Port: Int
  MasterUserPassword: String
  OptionGroupName: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  EnableIAMDatabaseAuthentication: Boolean
}

type AwsRdsModifyDBClusterOutput {
  DBCluster: AwsRdsS1j
}

input AwsRdsModifyDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  Parameters: [AwsRdsS3qInput]!
}

input AwsRdsModifyDBClusterSnapshotAttributeInput {
  DBClusterSnapshotIdentifier: String!
  AttributeName: String!
  ValuesToAdd: [String]
  ValuesToRemove: [String]
}

type AwsRdsModifyDBClusterSnapshotAttributeOutput {
  DBClusterSnapshotAttributesResult: AwsRdsS3v
}

input AwsRdsModifyDBInstanceInput {
  DBInstanceIdentifier: String!
  AllocatedStorage: Int
  DBInstanceClass: String
  DBSubnetGroupName: String
  DBSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  ApplyImmediately: Boolean
  MasterUserPassword: String
  DBParameterGroupName: String
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  MultiAZ: Boolean
  EngineVersion: String
  AllowMajorVersionUpgrade: Boolean
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  Iops: Int
  OptionGroupName: String
  NewDBInstanceIdentifier: String
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  CACertificateIdentifier: String
  Domain: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  DBPortNumber: Int
  PubliclyAccessible: Boolean
  MonitoringRoleArn: String
  DomainIAMRoleName: String
  PromotionTier: Int
  EnableIAMDatabaseAuthentication: Boolean
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
}

type AwsRdsModifyDBInstanceOutput {
  DBInstance: AwsRdsS1y
}

input AwsRdsModifyDBParameterGroupInput {
  DBParameterGroupName: String!
  Parameters: [AwsRdsS3qInput]!
}

input AwsRdsModifyDBSnapshotAttributeInput {
  DBSnapshotIdentifier: String!
  AttributeName: String!
  ValuesToAdd: [String]
  ValuesToRemove: [String]
}

type AwsRdsModifyDBSnapshotAttributeOutput {
  DBSnapshotAttributesResult: AwsRdsS4w
}

input AwsRdsModifyDBSnapshotInput {
  DBSnapshotIdentifier: String!
  EngineVersion: String
  OptionGroupName: String
}

type AwsRdsModifyDBSnapshotOutput {
  DBSnapshot: AwsRdsS13
}

input AwsRdsModifyDBSubnetGroupInput {
  DBSubnetGroupName: String!
  DBSubnetGroupDescription: String
  SubnetIds: [String]!
}

type AwsRdsModifyDBSubnetGroupOutput {
  DBSubnetGroup: AwsRdsS22
}

input AwsRdsModifyEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String
  SourceType: String
  EventCategories: [String]
  Enabled: Boolean
}

type AwsRdsModifyEventSubscriptionOutput {
  EventSubscription: AwsRdsS5
}

input AwsRdsModifyOptionGroupInput {
  OptionGroupName: String!
  OptionsToInclude: [AwsRdsModifyOptionGroupOptionsToIncludeInput]
  OptionsToRemove: [String]
  ApplyImmediately: Boolean
}

input AwsRdsModifyOptionGroupOptionsToIncludeInput {
  OptionName: String!
  Port: Int
  OptionVersion: String
  DBSecurityGroupMemberships: [String]
  VpcSecurityGroupMemberships: [String]
  OptionSettings: [AwsRdsS1bInput]
}

type AwsRdsModifyOptionGroupOutput {
  OptionGroup: AwsRdsS17
}

input AwsRdsPromoteReadReplicaDBClusterInput {
  DBClusterIdentifier: String!
}

type AwsRdsPromoteReadReplicaDBClusterOutput {
  DBCluster: AwsRdsS1j
}

input AwsRdsPromoteReadReplicaInput {
  DBInstanceIdentifier: String!
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
}

type AwsRdsPromoteReadReplicaOutput {
  DBInstance: AwsRdsS1y
}

input AwsRdsPurchaseReservedDBInstancesOfferingInput {
  ReservedDBInstancesOfferingId: String!
  ReservedDBInstanceId: String
  DBInstanceCount: Int
  Tags: [AwsRdsSaInput]
}

type AwsRdsPurchaseReservedDBInstancesOfferingOutput {
  ReservedDBInstance: AwsRdsS6b
}

input AwsRdsRebootDBInstanceInput {
  DBInstanceIdentifier: String!
  ForceFailover: Boolean
}

type AwsRdsRebootDBInstanceOutput {
  DBInstance: AwsRdsS1y
}

input AwsRdsRemoveRoleFromDBClusterInput {
  DBClusterIdentifier: String!
  RoleArn: String!
}

input AwsRdsRemoveSourceIdentifierFromSubscriptionInput {
  SubscriptionName: String!
  SourceIdentifier: String!
}

type AwsRdsRemoveSourceIdentifierFromSubscriptionOutput {
  EventSubscription: AwsRdsS5
}

input AwsRdsRemoveTagsFromResourceInput {
  ResourceName: String!
  TagKeys: [String]!
}

input AwsRdsResetDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  ResetAllParameters: Boolean
  Parameters: [AwsRdsS3qInput]
}

input AwsRdsResetDBParameterGroupInput {
  DBParameterGroupName: String!
  ResetAllParameters: Boolean
  Parameters: [AwsRdsS3qInput]
}

input AwsRdsRestoreDBClusterFromS3Input {
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  CharacterSetName: String
  DatabaseName: String
  DBClusterIdentifier: String!
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  DBSubnetGroupName: String
  Engine: String!
  EngineVersion: String
  Port: Int
  MasterUsername: String!
  MasterUserPassword: String!
  OptionGroupName: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  Tags: [AwsRdsSaInput]
  StorageEncrypted: Boolean
  KmsKeyId: String
  EnableIAMDatabaseAuthentication: Boolean
  SourceEngine: String!
  SourceEngineVersion: String!
  S3BucketName: String!
  S3Prefix: String
  S3IngestionRoleArn: String!
}

type AwsRdsRestoreDBClusterFromS3Output {
  DBCluster: AwsRdsS1j
}

input AwsRdsRestoreDBClusterFromSnapshotInput {
  AvailabilityZones: [String]
  DBClusterIdentifier: String!
  SnapshotIdentifier: String!
  Engine: String!
  EngineVersion: String
  Port: Int
  DBSubnetGroupName: String
  DatabaseName: String
  OptionGroupName: String
  VpcSecurityGroupIds: [String]
  Tags: [AwsRdsSaInput]
  KmsKeyId: String
  EnableIAMDatabaseAuthentication: Boolean
}

type AwsRdsRestoreDBClusterFromSnapshotOutput {
  DBCluster: AwsRdsS1j
}

input AwsRdsRestoreDBClusterToPointInTimeInput {
  DBClusterIdentifier: String!
  RestoreType: String
  SourceDBClusterIdentifier: String!
  RestoreToTime: Date
  UseLatestRestorableTime: Boolean
  Port: Int
  DBSubnetGroupName: String
  OptionGroupName: String
  VpcSecurityGroupIds: [String]
  Tags: [AwsRdsSaInput]
  KmsKeyId: String
  EnableIAMDatabaseAuthentication: Boolean
}

type AwsRdsRestoreDBClusterToPointInTimeOutput {
  DBCluster: AwsRdsS1j
}

input AwsRdsRestoreDBInstanceFromDBSnapshotInput {
  DBInstanceIdentifier: String!
  DBSnapshotIdentifier: String!
  DBInstanceClass: String
  Port: Int
  AvailabilityZone: String
  DBSubnetGroupName: String
  MultiAZ: Boolean
  PubliclyAccessible: Boolean
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  DBName: String
  Engine: String
  Iops: Int
  OptionGroupName: String
  Tags: [AwsRdsSaInput]
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  Domain: String
  CopyTagsToSnapshot: Boolean
  DomainIAMRoleName: String
  EnableIAMDatabaseAuthentication: Boolean
}

type AwsRdsRestoreDBInstanceFromDBSnapshotOutput {
  DBInstance: AwsRdsS1y
}

input AwsRdsRestoreDBInstanceFromS3Input {
  DBName: String
  DBInstanceIdentifier: String!
  AllocatedStorage: Int
  DBInstanceClass: String!
  Engine: String!
  MasterUsername: String
  MasterUserPassword: String
  DBSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  AvailabilityZone: String
  DBSubnetGroupName: String
  PreferredMaintenanceWindow: String
  DBParameterGroupName: String
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
  Port: Int
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  Iops: Int
  OptionGroupName: String
  PubliclyAccessible: Boolean
  Tags: [AwsRdsSaInput]
  StorageType: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  MonitoringRoleArn: String
  EnableIAMDatabaseAuthentication: Boolean
  SourceEngine: String!
  SourceEngineVersion: String!
  S3BucketName: String!
  S3Prefix: String
  S3IngestionRoleArn: String!
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
}

type AwsRdsRestoreDBInstanceFromS3Output {
  DBInstance: AwsRdsS1y
}

input AwsRdsRestoreDBInstanceToPointInTimeInput {
  SourceDBInstanceIdentifier: String!
  TargetDBInstanceIdentifier: String!
  RestoreTime: Date
  UseLatestRestorableTime: Boolean
  DBInstanceClass: String
  Port: Int
  AvailabilityZone: String
  DBSubnetGroupName: String
  MultiAZ: Boolean
  PubliclyAccessible: Boolean
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  DBName: String
  Engine: String
  Iops: Int
  OptionGroupName: String
  CopyTagsToSnapshot: Boolean
  Tags: [AwsRdsSaInput]
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  Domain: String
  DomainIAMRoleName: String
  EnableIAMDatabaseAuthentication: Boolean
}

type AwsRdsRestoreDBInstanceToPointInTimeOutput {
  DBInstance: AwsRdsS1y
}

input AwsRdsRevokeDBSecurityGroupIngressInput {
  DBSecurityGroupName: String!
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupId: String
  EC2SecurityGroupOwnerId: String
}

type AwsRdsRevokeDBSecurityGroupIngressOutput {
  DBSecurityGroup: AwsRdsSk
}

type AwsRdsS10 {
  DBParameterGroupName: String
  DBParameterGroupFamily: String
  Description: String
  DBParameterGroupArn: String
}

type AwsRdsS13 {
  DBSnapshotIdentifier: String
  DBInstanceIdentifier: String
  SnapshotCreateTime: Date
  Engine: String
  AllocatedStorage: Int
  Status: String
  Port: Int
  AvailabilityZone: String
  VpcId: String
  InstanceCreateTime: Date
  MasterUsername: String
  EngineVersion: String
  LicenseModel: String
  SnapshotType: String
  Iops: Int
  OptionGroupName: String
  PercentProgress: Int
  SourceRegion: String
  SourceDBSnapshotIdentifier: String
  StorageType: String
  TdeCredentialArn: String
  Encrypted: Boolean
  KmsKeyId: String
  DBSnapshotArn: String
  Timezone: String
  IAMDatabaseAuthenticationEnabled: Boolean
}

type AwsRdsS17 {
  OptionGroupName: String
  OptionGroupDescription: String
  EngineName: String
  MajorEngineVersion: String
  Options: [AwsRdsS17Options]
  AllowsVpcAndNonVpcInstanceMemberships: Boolean
  VpcId: String
  OptionGroupArn: String
}

type AwsRdsS17Options {
  OptionName: String
  OptionDescription: String
  Persistent: Boolean
  Permanent: Boolean
  Port: Int
  OptionVersion: String
  OptionSettings: [AwsRdsS1b]
  DBSecurityGroupMemberships: [AwsRdsS1c]
  VpcSecurityGroupMemberships: [AwsRdsS1e]
}

type AwsRdsS1b {
  Name: String
  Value: String
  DefaultValue: String
  Description: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  IsCollection: Boolean
}

input AwsRdsS1bInput {
  Name: String
  Value: String
  DefaultValue: String
  Description: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  IsCollection: Boolean
}

type AwsRdsS1c {
  DBSecurityGroupName: String
  Status: String
}

type AwsRdsS1e {
  VpcSecurityGroupId: String
  Status: String
}

type AwsRdsS1j {
  AllocatedStorage: Int
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  CharacterSetName: String
  DatabaseName: String
  DBClusterIdentifier: String
  DBClusterParameterGroup: String
  DBSubnetGroup: String
  Status: String
  PercentProgress: String
  EarliestRestorableTime: Date
  Endpoint: String
  ReaderEndpoint: String
  MultiAZ: Boolean
  Engine: String
  EngineVersion: String
  LatestRestorableTime: Date
  Port: Int
  MasterUsername: String
  DBClusterOptionGroupMemberships: [AwsRdsS1jDBClusterOptionGroupMemberships]
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  ReplicationSourceIdentifier: String
  ReadReplicaIdentifiers: [String]
  DBClusterMembers: [AwsRdsS1jDBClusterMembers]
  VpcSecurityGroups: [AwsRdsS1e]
  HostedZoneId: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  DbClusterResourceId: String
  DBClusterArn: String
  AssociatedRoles: [AwsRdsS1jAssociatedRoles]
  IAMDatabaseAuthenticationEnabled: Boolean
  CloneGroupId: String
  ClusterCreateTime: Date
}

type AwsRdsS1jAssociatedRoles {
  RoleArn: String
  Status: String
}

type AwsRdsS1jDBClusterMembers {
  DBInstanceIdentifier: String
  IsClusterWriter: Boolean
  DBClusterParameterGroupStatus: String
  PromotionTier: Int
}

type AwsRdsS1jDBClusterOptionGroupMemberships {
  DBClusterOptionGroupName: String
  Status: String
}

type AwsRdsS1y {
  DBInstanceIdentifier: String
  DBInstanceClass: String
  Engine: String
  DBInstanceStatus: String
  MasterUsername: String
  DBName: String
  Endpoint: AwsRdsS1yEndpoint
  AllocatedStorage: Int
  InstanceCreateTime: Date
  PreferredBackupWindow: String
  BackupRetentionPeriod: Int
  DBSecurityGroups: [AwsRdsS1c]
  VpcSecurityGroups: [AwsRdsS1e]
  DBParameterGroups: [AwsRdsS1yDBParameterGroups]
  AvailabilityZone: String
  DBSubnetGroup: AwsRdsS22
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsRdsS1yPendingModifiedValues
  LatestRestorableTime: Date
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  ReadReplicaSourceDBInstanceIdentifier: String
  ReadReplicaDBInstanceIdentifiers: [String]
  ReadReplicaDBClusterIdentifiers: [String]
  LicenseModel: String
  Iops: Int
  OptionGroupMemberships: [AwsRdsS1yOptionGroupMemberships]
  CharacterSetName: String
  SecondaryAvailabilityZone: String
  PubliclyAccessible: Boolean
  StatusInfos: [AwsRdsS1yStatusInfos]
  StorageType: String
  TdeCredentialArn: String
  DbInstancePort: Int
  DBClusterIdentifier: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  DbiResourceId: String
  CACertificateIdentifier: String
  DomainMemberships: [AwsRdsS1yDomainMemberships]
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  EnhancedMonitoringResourceArn: String
  MonitoringRoleArn: String
  PromotionTier: Int
  DBInstanceArn: String
  Timezone: String
  IAMDatabaseAuthenticationEnabled: Boolean
  PerformanceInsightsEnabled: Boolean
  PerformanceInsightsKMSKeyId: String
}

type AwsRdsS1yDBParameterGroups {
  DBParameterGroupName: String
  ParameterApplyStatus: String
}

type AwsRdsS1yDomainMemberships {
  Domain: String
  Status: String
  FQDN: String
  IAMRoleName: String
}

type AwsRdsS1yEndpoint {
  Address: String
  Port: Int
  HostedZoneId: String
}

type AwsRdsS1yOptionGroupMemberships {
  OptionGroupName: String
  Status: String
}

type AwsRdsS1yPendingModifiedValues {
  DBInstanceClass: String
  AllocatedStorage: Int
  MasterUserPassword: String
  Port: Int
  BackupRetentionPeriod: Int
  MultiAZ: Boolean
  EngineVersion: String
  LicenseModel: String
  Iops: Int
  DBInstanceIdentifier: String
  StorageType: String
  CACertificateIdentifier: String
  DBSubnetGroupName: String
}

type AwsRdsS1yStatusInfos {
  StatusType: String
  Normal: Boolean
  Status: String
  Message: String
}

type AwsRdsS22 {
  DBSubnetGroupName: String
  DBSubnetGroupDescription: String
  VpcId: String
  SubnetGroupStatus: String
  Subnets: [AwsRdsS22Subnets]
  DBSubnetGroupArn: String
}

type AwsRdsS22Subnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsRdsS25
  SubnetStatus: String
}

type AwsRdsS25 {
  Name: String
}

input AwsRdsS3fInput {
  Name: String!
  Values: [String]!
}

type AwsRdsS3q {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ApplyMethod: String
}

input AwsRdsS3qInput {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ApplyMethod: String
}

type AwsRdsS3v {
  DBClusterSnapshotIdentifier: String
  DBClusterSnapshotAttributes: [AwsRdsS3vDBClusterSnapshotAttributes]
}

type AwsRdsS3vDBClusterSnapshotAttributes {
  AttributeName: String
  AttributeValues: [String]
}

type AwsRdsS49 {
  CharacterSetName: String
  CharacterSetDescription: String
}

type AwsRdsS4w {
  DBSnapshotIdentifier: String
  DBSnapshotAttributes: [AwsRdsS4wDBSnapshotAttributes]
}

type AwsRdsS4wDBSnapshotAttributes {
  AttributeName: String
  AttributeValues: [String]
}

type AwsRdsS5 {
  CustomerAwsId: String
  CustSubscriptionId: String
  SnsTopicArn: String
  Status: String
  SubscriptionCreationTime: String
  SourceType: String
  SourceIdsList: [String]
  EventCategoriesList: [String]
  Enabled: Boolean
  EventSubscriptionArn: String
}

type AwsRdsS57 {
  DBParameterGroupFamily: String
  Marker: String
  Parameters: [AwsRdsS3q]
}

type AwsRdsS6b {
  ReservedDBInstanceId: String
  ReservedDBInstancesOfferingId: String
  DBInstanceClass: String
  StartTime: Date
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  DBInstanceCount: Int
  ProductDescription: String
  OfferingType: String
  MultiAZ: Boolean
  State: String
  RecurringCharges: [AwsRdsS6d]
  ReservedDBInstanceArn: String
}

type AwsRdsS6d {
  RecurringChargeAmount: JSON
  RecurringChargeFrequency: String
}

type AwsRdsS6s {
  From: Int
  To: Int
  Step: Int
}

type AwsRdsSa {
  Key: String
  Value: String
}

input AwsRdsSaInput {
  Key: String
  Value: String
}

type AwsRdsSe {
  ResourceIdentifier: String
  PendingMaintenanceActionDetails: [AwsRdsSePendingMaintenanceActionDetails]
}

type AwsRdsSePendingMaintenanceActionDetails {
  Action: String
  AutoAppliedAfterDate: Date
  ForcedApplyDate: Date
  OptInStatus: String
  CurrentApplyDate: Date
  Description: String
}

type AwsRdsSk {
  OwnerId: String
  DBSecurityGroupName: String
  DBSecurityGroupDescription: String
  VpcId: String
  EC2SecurityGroups: [AwsRdsSkEC2SecurityGroups]
  IPRanges: [AwsRdsSkIPRanges]
  DBSecurityGroupArn: String
}

type AwsRdsSkEC2SecurityGroups {
  Status: String
  EC2SecurityGroupName: String
  EC2SecurityGroupId: String
  EC2SecurityGroupOwnerId: String
}

type AwsRdsSkIPRanges {
  Status: String
  CIDRIP: String
}

type AwsRdsSr {
  DBClusterParameterGroupName: String
  DBParameterGroupFamily: String
  Description: String
  DBClusterParameterGroupArn: String
}

input AwsRdsStartDBInstanceInput {
  DBInstanceIdentifier: String!
}

type AwsRdsStartDBInstanceOutput {
  DBInstance: AwsRdsS1y
}

input AwsRdsStopDBInstanceInput {
  DBInstanceIdentifier: String!
  DBSnapshotIdentifier: String
}

type AwsRdsStopDBInstanceOutput {
  DBInstance: AwsRdsS1y
}

type AwsRdsSv {
  AvailabilityZones: [String]
  DBClusterSnapshotIdentifier: String
  DBClusterIdentifier: String
  SnapshotCreateTime: Date
  Engine: String
  AllocatedStorage: Int
  Status: String
  Port: Int
  VpcId: String
  ClusterCreateTime: Date
  MasterUsername: String
  EngineVersion: String
  LicenseModel: String
  SnapshotType: String
  PercentProgress: Int
  StorageEncrypted: Boolean
  KmsKeyId: String
  DBClusterSnapshotArn: String
  SourceDBClusterSnapshotArn: String
  IAMDatabaseAuthenticationEnabled: Boolean
}

# Amazon Redshift (2012-12-01)
type AwsRedshift {
  # redshift.AuthorizeClusterSecurityGroupIngress
  AuthorizeClusterSecurityGroupIngress(input: AwsRedshiftAuthorizeClusterSecurityGroupIngressInput!): AwsRedshiftAuthorizeClusterSecurityGroupIngressOutput

  # redshift.AuthorizeSnapshotAccess
  AuthorizeSnapshotAccess(input: AwsRedshiftAuthorizeSnapshotAccessInput!): AwsRedshiftAuthorizeSnapshotAccessOutput

  # redshift.CopyClusterSnapshot
  CopyClusterSnapshot(input: AwsRedshiftCopyClusterSnapshotInput!): AwsRedshiftCopyClusterSnapshotOutput

  # redshift.CreateCluster
  CreateCluster(input: AwsRedshiftCreateClusterInput!): AwsRedshiftCreateClusterOutput

  # redshift.CreateClusterParameterGroup
  CreateClusterParameterGroup(input: AwsRedshiftCreateClusterParameterGroupInput!): AwsRedshiftCreateClusterParameterGroupOutput

  # redshift.CreateClusterSecurityGroup
  CreateClusterSecurityGroup(input: AwsRedshiftCreateClusterSecurityGroupInput!): AwsRedshiftCreateClusterSecurityGroupOutput

  # redshift.CreateClusterSnapshot
  CreateClusterSnapshot(input: AwsRedshiftCreateClusterSnapshotInput!): AwsRedshiftCreateClusterSnapshotOutput

  # redshift.CreateClusterSubnetGroup
  CreateClusterSubnetGroup(input: AwsRedshiftCreateClusterSubnetGroupInput!): AwsRedshiftCreateClusterSubnetGroupOutput

  # redshift.CreateEventSubscription
  CreateEventSubscription(input: AwsRedshiftCreateEventSubscriptionInput!): AwsRedshiftCreateEventSubscriptionOutput

  # redshift.CreateHsmClientCertificate
  CreateHsmClientCertificate(input: AwsRedshiftCreateHsmClientCertificateInput!): AwsRedshiftCreateHsmClientCertificateOutput

  # redshift.CreateHsmConfiguration
  CreateHsmConfiguration(input: AwsRedshiftCreateHsmConfigurationInput!): AwsRedshiftCreateHsmConfigurationOutput

  # redshift.CreateSnapshotCopyGrant
  CreateSnapshotCopyGrant(input: AwsRedshiftCreateSnapshotCopyGrantInput!): AwsRedshiftCreateSnapshotCopyGrantOutput

  # redshift.CreateTags
  CreateTags(input: AwsRedshiftCreateTagsInput!): JSON

  # redshift.DeleteCluster
  DeleteCluster(input: AwsRedshiftDeleteClusterInput!): AwsRedshiftDeleteClusterOutput

  # redshift.DeleteClusterParameterGroup
  DeleteClusterParameterGroup(input: AwsRedshiftDeleteClusterParameterGroupInput!): JSON

  # redshift.DeleteClusterSecurityGroup
  DeleteClusterSecurityGroup(input: AwsRedshiftDeleteClusterSecurityGroupInput!): JSON

  # redshift.DeleteClusterSnapshot
  DeleteClusterSnapshot(input: AwsRedshiftDeleteClusterSnapshotInput!): AwsRedshiftDeleteClusterSnapshotOutput

  # redshift.DeleteClusterSubnetGroup
  DeleteClusterSubnetGroup(input: AwsRedshiftDeleteClusterSubnetGroupInput!): JSON

  # redshift.DeleteEventSubscription
  DeleteEventSubscription(input: AwsRedshiftDeleteEventSubscriptionInput!): JSON

  # redshift.DeleteHsmClientCertificate
  DeleteHsmClientCertificate(input: AwsRedshiftDeleteHsmClientCertificateInput!): JSON

  # redshift.DeleteHsmConfiguration
  DeleteHsmConfiguration(input: AwsRedshiftDeleteHsmConfigurationInput!): JSON

  # redshift.DeleteSnapshotCopyGrant
  DeleteSnapshotCopyGrant(input: AwsRedshiftDeleteSnapshotCopyGrantInput!): JSON

  # redshift.DeleteTags
  DeleteTags(input: AwsRedshiftDeleteTagsInput!): JSON

  # redshift.DescribeClusterParameterGroups
  DescribeClusterParameterGroups(input: AwsRedshiftDescribeClusterParameterGroupsInput): AwsRedshiftDescribeClusterParameterGroupsOutput

  # redshift.DescribeClusterParameters
  DescribeClusterParameters(input: AwsRedshiftDescribeClusterParametersInput!): AwsRedshiftDescribeClusterParametersOutput

  # redshift.DescribeClusterSecurityGroups
  DescribeClusterSecurityGroups(input: AwsRedshiftDescribeClusterSecurityGroupsInput): AwsRedshiftDescribeClusterSecurityGroupsOutput

  # redshift.DescribeClusterSnapshots
  DescribeClusterSnapshots(input: AwsRedshiftDescribeClusterSnapshotsInput): AwsRedshiftDescribeClusterSnapshotsOutput

  # redshift.DescribeClusterSubnetGroups
  DescribeClusterSubnetGroups(input: AwsRedshiftDescribeClusterSubnetGroupsInput): AwsRedshiftDescribeClusterSubnetGroupsOutput

  # redshift.DescribeClusterVersions
  DescribeClusterVersions(input: AwsRedshiftDescribeClusterVersionsInput): AwsRedshiftDescribeClusterVersionsOutput

  # redshift.DescribeClusters
  DescribeClusters(input: AwsRedshiftDescribeClustersInput): AwsRedshiftDescribeClustersOutput

  # redshift.DescribeDefaultClusterParameters
  DescribeDefaultClusterParameters(input: AwsRedshiftDescribeDefaultClusterParametersInput!): AwsRedshiftDescribeDefaultClusterParametersOutput

  # redshift.DescribeEventCategories
  DescribeEventCategories(input: AwsRedshiftDescribeEventCategoriesInput): AwsRedshiftDescribeEventCategoriesOutput

  # redshift.DescribeEventSubscriptions
  DescribeEventSubscriptions(input: AwsRedshiftDescribeEventSubscriptionsInput): AwsRedshiftDescribeEventSubscriptionsOutput

  # redshift.DescribeEvents
  DescribeEvents(input: AwsRedshiftDescribeEventsInput): AwsRedshiftDescribeEventsOutput

  # redshift.DescribeHsmClientCertificates
  DescribeHsmClientCertificates(input: AwsRedshiftDescribeHsmClientCertificatesInput): AwsRedshiftDescribeHsmClientCertificatesOutput

  # redshift.DescribeHsmConfigurations
  DescribeHsmConfigurations(input: AwsRedshiftDescribeHsmConfigurationsInput): AwsRedshiftDescribeHsmConfigurationsOutput

  # redshift.DescribeLoggingStatus
  DescribeLoggingStatus(input: AwsRedshiftDescribeLoggingStatusInput!): JSON

  # redshift.DescribeOrderableClusterOptions
  DescribeOrderableClusterOptions(input: AwsRedshiftDescribeOrderableClusterOptionsInput): AwsRedshiftDescribeOrderableClusterOptionsOutput

  # redshift.DescribeReservedNodeOfferings
  DescribeReservedNodeOfferings(input: AwsRedshiftDescribeReservedNodeOfferingsInput): AwsRedshiftDescribeReservedNodeOfferingsOutput

  # redshift.DescribeReservedNodes
  DescribeReservedNodes(input: AwsRedshiftDescribeReservedNodesInput): AwsRedshiftDescribeReservedNodesOutput

  # redshift.DescribeResize
  DescribeResize(input: AwsRedshiftDescribeResizeInput!): AwsRedshiftDescribeResizeOutput

  # redshift.DescribeSnapshotCopyGrants
  DescribeSnapshotCopyGrants(input: AwsRedshiftDescribeSnapshotCopyGrantsInput): AwsRedshiftDescribeSnapshotCopyGrantsOutput

  # redshift.DescribeTableRestoreStatus
  DescribeTableRestoreStatus(input: AwsRedshiftDescribeTableRestoreStatusInput): AwsRedshiftDescribeTableRestoreStatusOutput

  # redshift.DescribeTags
  DescribeTags(input: AwsRedshiftDescribeTagsInput): AwsRedshiftDescribeTagsOutput

  # redshift.DisableLogging
  DisableLogging(input: AwsRedshiftDisableLoggingInput!): JSON

  # redshift.DisableSnapshotCopy
  DisableSnapshotCopy(input: AwsRedshiftDisableSnapshotCopyInput!): AwsRedshiftDisableSnapshotCopyOutput

  # redshift.EnableLogging
  EnableLogging(input: AwsRedshiftEnableLoggingInput!): JSON

  # redshift.EnableSnapshotCopy
  EnableSnapshotCopy(input: AwsRedshiftEnableSnapshotCopyInput!): AwsRedshiftEnableSnapshotCopyOutput

  # redshift.GetClusterCredentials
  GetClusterCredentials(input: AwsRedshiftGetClusterCredentialsInput!): AwsRedshiftGetClusterCredentialsOutput

  # redshift.ModifyCluster
  ModifyCluster(input: AwsRedshiftModifyClusterInput!): AwsRedshiftModifyClusterOutput

  # redshift.ModifyClusterIamRoles
  ModifyClusterIamRoles(input: AwsRedshiftModifyClusterIamRolesInput!): AwsRedshiftModifyClusterIamRolesOutput

  # redshift.ModifyClusterParameterGroup
  ModifyClusterParameterGroup(input: AwsRedshiftModifyClusterParameterGroupInput!): JSON

  # redshift.ModifyClusterSubnetGroup
  ModifyClusterSubnetGroup(input: AwsRedshiftModifyClusterSubnetGroupInput!): AwsRedshiftModifyClusterSubnetGroupOutput

  # redshift.ModifyEventSubscription
  ModifyEventSubscription(input: AwsRedshiftModifyEventSubscriptionInput!): AwsRedshiftModifyEventSubscriptionOutput

  # redshift.ModifySnapshotCopyRetentionPeriod
  ModifySnapshotCopyRetentionPeriod(input: AwsRedshiftModifySnapshotCopyRetentionPeriodInput!): AwsRedshiftModifySnapshotCopyRetentionPeriodOutput

  # redshift.PurchaseReservedNodeOffering
  PurchaseReservedNodeOffering(input: AwsRedshiftPurchaseReservedNodeOfferingInput!): AwsRedshiftPurchaseReservedNodeOfferingOutput

  # redshift.RebootCluster
  RebootCluster(input: AwsRedshiftRebootClusterInput!): AwsRedshiftRebootClusterOutput

  # redshift.ResetClusterParameterGroup
  ResetClusterParameterGroup(input: AwsRedshiftResetClusterParameterGroupInput!): JSON

  # redshift.RestoreFromClusterSnapshot
  RestoreFromClusterSnapshot(input: AwsRedshiftRestoreFromClusterSnapshotInput!): AwsRedshiftRestoreFromClusterSnapshotOutput

  # redshift.RestoreTableFromClusterSnapshot
  RestoreTableFromClusterSnapshot(input: AwsRedshiftRestoreTableFromClusterSnapshotInput!): AwsRedshiftRestoreTableFromClusterSnapshotOutput

  # redshift.RevokeClusterSecurityGroupIngress
  RevokeClusterSecurityGroupIngress(input: AwsRedshiftRevokeClusterSecurityGroupIngressInput!): AwsRedshiftRevokeClusterSecurityGroupIngressOutput

  # redshift.RevokeSnapshotAccess
  RevokeSnapshotAccess(input: AwsRedshiftRevokeSnapshotAccessInput!): AwsRedshiftRevokeSnapshotAccessOutput

  # redshift.RotateEncryptionKey
  RotateEncryptionKey(input: AwsRedshiftRotateEncryptionKeyInput!): AwsRedshiftRotateEncryptionKeyOutput
}

input AwsRedshiftAuthorizeClusterSecurityGroupIngressInput {
  ClusterSecurityGroupName: String!
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
}

type AwsRedshiftAuthorizeClusterSecurityGroupIngressOutput {
  ClusterSecurityGroup: AwsRedshiftS4
}

input AwsRedshiftAuthorizeSnapshotAccessInput {
  SnapshotIdentifier: String!
  SnapshotClusterIdentifier: String
  AccountWithRestoreAccess: String!
}

type AwsRedshiftAuthorizeSnapshotAccessOutput {
  Snapshot: AwsRedshiftSd
}

input AwsRedshiftCopyClusterSnapshotInput {
  SourceSnapshotIdentifier: String!
  SourceSnapshotClusterIdentifier: String
  TargetSnapshotIdentifier: String!
}

type AwsRedshiftCopyClusterSnapshotOutput {
  Snapshot: AwsRedshiftSd
}

input AwsRedshiftCreateClusterInput {
  DBName: String
  ClusterIdentifier: String!
  ClusterType: String
  NodeType: String!
  MasterUsername: String!
  MasterUserPassword: String!
  ClusterSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  ClusterSubnetGroupName: String
  AvailabilityZone: String
  PreferredMaintenanceWindow: String
  ClusterParameterGroupName: String
  AutomatedSnapshotRetentionPeriod: Int
  Port: Int
  ClusterVersion: String
  AllowVersionUpgrade: Boolean
  NumberOfNodes: Int
  PubliclyAccessible: Boolean
  Encrypted: Boolean
  HsmClientCertificateIdentifier: String
  HsmConfigurationIdentifier: String
  ElasticIp: String
  Tags: [AwsRedshiftS8Input]
  KmsKeyId: String
  EnhancedVpcRouting: Boolean
  AdditionalInfo: String
  IamRoles: [String]
}

type AwsRedshiftCreateClusterOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftCreateClusterParameterGroupInput {
  ParameterGroupName: String!
  ParameterGroupFamily: String!
  Description: String!
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateClusterParameterGroupOutput {
  ClusterParameterGroup: AwsRedshiftS1g
}

input AwsRedshiftCreateClusterSecurityGroupInput {
  ClusterSecurityGroupName: String!
  Description: String!
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateClusterSecurityGroupOutput {
  ClusterSecurityGroup: AwsRedshiftS4
}

input AwsRedshiftCreateClusterSnapshotInput {
  SnapshotIdentifier: String!
  ClusterIdentifier: String!
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateClusterSnapshotOutput {
  Snapshot: AwsRedshiftSd
}

input AwsRedshiftCreateClusterSubnetGroupInput {
  ClusterSubnetGroupName: String!
  Description: String!
  SubnetIds: [String]!
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateClusterSubnetGroupOutput {
  ClusterSubnetGroup: AwsRedshiftS1o
}

input AwsRedshiftCreateEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String!
  SourceType: String
  SourceIds: [String]
  EventCategories: [String]
  Severity: String
  Enabled: Boolean
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateEventSubscriptionOutput {
  EventSubscription: AwsRedshiftS1w
}

input AwsRedshiftCreateHsmClientCertificateInput {
  HsmClientCertificateIdentifier: String!
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateHsmClientCertificateOutput {
  HsmClientCertificate: AwsRedshiftS1z
}

input AwsRedshiftCreateHsmConfigurationInput {
  HsmConfigurationIdentifier: String!
  Description: String!
  HsmIpAddress: String!
  HsmPartitionName: String!
  HsmPartitionPassword: String!
  HsmServerPublicCertificate: String!
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateHsmConfigurationOutput {
  HsmConfiguration: AwsRedshiftS22
}

input AwsRedshiftCreateSnapshotCopyGrantInput {
  SnapshotCopyGrantName: String!
  KmsKeyId: String
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateSnapshotCopyGrantOutput {
  SnapshotCopyGrant: AwsRedshiftS25
}

input AwsRedshiftCreateTagsInput {
  ResourceName: String!
  Tags: [AwsRedshiftS8Input]!
}

input AwsRedshiftDeleteClusterInput {
  ClusterIdentifier: String!
  SkipFinalClusterSnapshot: Boolean
  FinalClusterSnapshotIdentifier: String
}

type AwsRedshiftDeleteClusterOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftDeleteClusterParameterGroupInput {
  ParameterGroupName: String!
}

input AwsRedshiftDeleteClusterSecurityGroupInput {
  ClusterSecurityGroupName: String!
}

input AwsRedshiftDeleteClusterSnapshotInput {
  SnapshotIdentifier: String!
  SnapshotClusterIdentifier: String
}

type AwsRedshiftDeleteClusterSnapshotOutput {
  Snapshot: AwsRedshiftSd
}

input AwsRedshiftDeleteClusterSubnetGroupInput {
  ClusterSubnetGroupName: String!
}

input AwsRedshiftDeleteEventSubscriptionInput {
  SubscriptionName: String!
}

input AwsRedshiftDeleteHsmClientCertificateInput {
  HsmClientCertificateIdentifier: String!
}

input AwsRedshiftDeleteHsmConfigurationInput {
  HsmConfigurationIdentifier: String!
}

input AwsRedshiftDeleteSnapshotCopyGrantInput {
  SnapshotCopyGrantName: String!
}

input AwsRedshiftDeleteTagsInput {
  ResourceName: String!
  TagKeys: [String]!
}

input AwsRedshiftDescribeClusterParameterGroupsInput {
  ParameterGroupName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeClusterParameterGroupsOutput {
  Marker: String
  ParameterGroups: [AwsRedshiftS1g]
}

input AwsRedshiftDescribeClusterParametersInput {
  ParameterGroupName: String!
  Source: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeClusterParametersOutput {
  Parameters: [AwsRedshiftS2q]
  Marker: String
}

input AwsRedshiftDescribeClusterSecurityGroupsInput {
  ClusterSecurityGroupName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeClusterSecurityGroupsOutput {
  Marker: String
  ClusterSecurityGroups: [AwsRedshiftS4]
}

input AwsRedshiftDescribeClustersInput {
  ClusterIdentifier: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

input AwsRedshiftDescribeClusterSnapshotsInput {
  ClusterIdentifier: String
  SnapshotIdentifier: String
  SnapshotType: String
  StartTime: Date
  EndTime: Date
  MaxRecords: Int
  Marker: String
  OwnerAccount: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeClusterSnapshotsOutput {
  Marker: String
  Snapshots: [AwsRedshiftSd]
}

type AwsRedshiftDescribeClustersOutput {
  Marker: String
  Clusters: [AwsRedshiftSv]
}

input AwsRedshiftDescribeClusterSubnetGroupsInput {
  ClusterSubnetGroupName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeClusterSubnetGroupsOutput {
  Marker: String
  ClusterSubnetGroups: [AwsRedshiftS1o]
}

input AwsRedshiftDescribeClusterVersionsInput {
  ClusterVersion: String
  ClusterParameterGroupFamily: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeClusterVersionsOutput {
  Marker: String
  ClusterVersions: [AwsRedshiftDescribeClusterVersionsOutputClusterVersions]
}

type AwsRedshiftDescribeClusterVersionsOutputClusterVersions {
  ClusterVersion: String
  ClusterParameterGroupFamily: String
  Description: String
}

input AwsRedshiftDescribeDefaultClusterParametersInput {
  ParameterGroupFamily: String!
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeDefaultClusterParametersOutput {
  DefaultClusterParameters: AwsRedshiftDescribeDefaultClusterParametersOutputDefaultClusterParameters
}

type AwsRedshiftDescribeDefaultClusterParametersOutputDefaultClusterParameters {
  ParameterGroupFamily: String
  Marker: String
  Parameters: [AwsRedshiftS2q]
}

input AwsRedshiftDescribeEventCategoriesInput {
  SourceType: String
}

type AwsRedshiftDescribeEventCategoriesOutput {
  EventCategoriesMapList: [AwsRedshiftDescribeEventCategoriesOutputEventCategoriesMapList]
}

type AwsRedshiftDescribeEventCategoriesOutputEventCategoriesMapList {
  SourceType: String
  Events: [AwsRedshiftDescribeEventCategoriesOutputEventCategoriesMapListEvents]
}

type AwsRedshiftDescribeEventCategoriesOutputEventCategoriesMapListEvents {
  EventId: String
  EventCategories: [String]
  EventDescription: String
  Severity: String
}

input AwsRedshiftDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeEventsOutput {
  Marker: String
  Events: [AwsRedshiftDescribeEventsOutputEvents]
}

type AwsRedshiftDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  EventCategories: [String]
  Severity: String
  Date: Date
  EventId: String
}

input AwsRedshiftDescribeEventSubscriptionsInput {
  SubscriptionName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeEventSubscriptionsOutput {
  Marker: String
  EventSubscriptionsList: [AwsRedshiftS1w]
}

input AwsRedshiftDescribeHsmClientCertificatesInput {
  HsmClientCertificateIdentifier: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeHsmClientCertificatesOutput {
  Marker: String
  HsmClientCertificates: [AwsRedshiftS1z]
}

input AwsRedshiftDescribeHsmConfigurationsInput {
  HsmConfigurationIdentifier: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeHsmConfigurationsOutput {
  Marker: String
  HsmConfigurations: [AwsRedshiftS22]
}

input AwsRedshiftDescribeLoggingStatusInput {
  ClusterIdentifier: String!
}

input AwsRedshiftDescribeOrderableClusterOptionsInput {
  ClusterVersion: String
  NodeType: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeOrderableClusterOptionsOutput {
  OrderableClusterOptions: [AwsRedshiftDescribeOrderableClusterOptionsOutputOrderableClusterOptions]
  Marker: String
}

type AwsRedshiftDescribeOrderableClusterOptionsOutputOrderableClusterOptions {
  ClusterVersion: String
  ClusterType: String
  NodeType: String
  AvailabilityZones: [AwsRedshiftS1r]
}

input AwsRedshiftDescribeReservedNodeOfferingsInput {
  ReservedNodeOfferingId: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeReservedNodeOfferingsOutput {
  Marker: String
  ReservedNodeOfferings: [AwsRedshiftDescribeReservedNodeOfferingsOutputReservedNodeOfferings]
}

type AwsRedshiftDescribeReservedNodeOfferingsOutputReservedNodeOfferings {
  ReservedNodeOfferingId: String
  NodeType: String
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  OfferingType: String
  RecurringCharges: [AwsRedshiftS47]
}

input AwsRedshiftDescribeReservedNodesInput {
  ReservedNodeId: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeReservedNodesOutput {
  Marker: String
  ReservedNodes: [AwsRedshiftS4c]
}

input AwsRedshiftDescribeResizeInput {
  ClusterIdentifier: String!
}

type AwsRedshiftDescribeResizeOutput {
  TargetNodeType: String
  TargetNumberOfNodes: Int
  TargetClusterType: String
  Status: String
  ImportTablesCompleted: [String]
  ImportTablesInProgress: [String]
  ImportTablesNotStarted: [String]
  AvgResizeRateInMegaBytesPerSecond: JSON
  TotalResizeDataInMegaBytes: JSON
  ProgressInMegaBytes: JSON
  ElapsedTimeInSeconds: JSON
  EstimatedTimeToCompletionInSeconds: JSON
}

input AwsRedshiftDescribeSnapshotCopyGrantsInput {
  SnapshotCopyGrantName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeSnapshotCopyGrantsOutput {
  Marker: String
  SnapshotCopyGrants: [AwsRedshiftS25]
}

input AwsRedshiftDescribeTableRestoreStatusInput {
  ClusterIdentifier: String
  TableRestoreRequestId: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeTableRestoreStatusOutput {
  TableRestoreStatusDetails: [AwsRedshiftS4q]
  Marker: String
}

input AwsRedshiftDescribeTagsInput {
  ResourceName: String
  ResourceType: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeTagsOutput {
  TaggedResources: [AwsRedshiftDescribeTagsOutputTaggedResources]
  Marker: String
}

type AwsRedshiftDescribeTagsOutputTaggedResources {
  Tag: AwsRedshiftS8
  ResourceName: String
  ResourceType: String
}

input AwsRedshiftDisableLoggingInput {
  ClusterIdentifier: String!
}

input AwsRedshiftDisableSnapshotCopyInput {
  ClusterIdentifier: String!
}

type AwsRedshiftDisableSnapshotCopyOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftEnableLoggingInput {
  ClusterIdentifier: String!
  BucketName: String!
  S3KeyPrefix: String
}

input AwsRedshiftEnableSnapshotCopyInput {
  ClusterIdentifier: String!
  DestinationRegion: String!
  RetentionPeriod: Int
  SnapshotCopyGrantName: String
}

type AwsRedshiftEnableSnapshotCopyOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftGetClusterCredentialsInput {
  DbUser: String!
  DbName: String
  ClusterIdentifier: String!
  DurationSeconds: Int
  AutoCreate: Boolean
  DbGroups: [String]
}

type AwsRedshiftGetClusterCredentialsOutput {
  DbUser: String
  DbPassword: String
  Expiration: Date
}

input AwsRedshiftModifyClusterIamRolesInput {
  ClusterIdentifier: String!
  AddIamRoles: [String]
  RemoveIamRoles: [String]
}

type AwsRedshiftModifyClusterIamRolesOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftModifyClusterInput {
  ClusterIdentifier: String!
  ClusterType: String
  NodeType: String
  NumberOfNodes: Int
  ClusterSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  MasterUserPassword: String
  ClusterParameterGroupName: String
  AutomatedSnapshotRetentionPeriod: Int
  PreferredMaintenanceWindow: String
  ClusterVersion: String
  AllowVersionUpgrade: Boolean
  HsmClientCertificateIdentifier: String
  HsmConfigurationIdentifier: String
  NewClusterIdentifier: String
  PubliclyAccessible: Boolean
  ElasticIp: String
  EnhancedVpcRouting: Boolean
}

type AwsRedshiftModifyClusterOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftModifyClusterParameterGroupInput {
  ParameterGroupName: String!
  Parameters: [AwsRedshiftS2qInput]!
}

input AwsRedshiftModifyClusterSubnetGroupInput {
  ClusterSubnetGroupName: String!
  Description: String
  SubnetIds: [String]!
}

type AwsRedshiftModifyClusterSubnetGroupOutput {
  ClusterSubnetGroup: AwsRedshiftS1o
}

input AwsRedshiftModifyEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String
  SourceType: String
  SourceIds: [String]
  EventCategories: [String]
  Severity: String
  Enabled: Boolean
}

type AwsRedshiftModifyEventSubscriptionOutput {
  EventSubscription: AwsRedshiftS1w
}

input AwsRedshiftModifySnapshotCopyRetentionPeriodInput {
  ClusterIdentifier: String!
  RetentionPeriod: Int!
}

type AwsRedshiftModifySnapshotCopyRetentionPeriodOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftPurchaseReservedNodeOfferingInput {
  ReservedNodeOfferingId: String!
  NodeCount: Int
}

type AwsRedshiftPurchaseReservedNodeOfferingOutput {
  ReservedNode: AwsRedshiftS4c
}

input AwsRedshiftRebootClusterInput {
  ClusterIdentifier: String!
}

type AwsRedshiftRebootClusterOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftResetClusterParameterGroupInput {
  ParameterGroupName: String!
  ResetAllParameters: Boolean
  Parameters: [AwsRedshiftS2qInput]
}

input AwsRedshiftRestoreFromClusterSnapshotInput {
  ClusterIdentifier: String!
  SnapshotIdentifier: String!
  SnapshotClusterIdentifier: String
  Port: Int
  AvailabilityZone: String
  AllowVersionUpgrade: Boolean
  ClusterSubnetGroupName: String
  PubliclyAccessible: Boolean
  OwnerAccount: String
  HsmClientCertificateIdentifier: String
  HsmConfigurationIdentifier: String
  ElasticIp: String
  ClusterParameterGroupName: String
  ClusterSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  AutomatedSnapshotRetentionPeriod: Int
  KmsKeyId: String
  NodeType: String
  EnhancedVpcRouting: Boolean
  AdditionalInfo: String
  IamRoles: [String]
}

type AwsRedshiftRestoreFromClusterSnapshotOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftRestoreTableFromClusterSnapshotInput {
  ClusterIdentifier: String!
  SnapshotIdentifier: String!
  SourceDatabaseName: String!
  SourceSchemaName: String
  SourceTableName: String!
  TargetDatabaseName: String
  TargetSchemaName: String
  NewTableName: String!
}

type AwsRedshiftRestoreTableFromClusterSnapshotOutput {
  TableRestoreStatus: AwsRedshiftS4q
}

input AwsRedshiftRevokeClusterSecurityGroupIngressInput {
  ClusterSecurityGroupName: String!
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
}

type AwsRedshiftRevokeClusterSecurityGroupIngressOutput {
  ClusterSecurityGroup: AwsRedshiftS4
}

input AwsRedshiftRevokeSnapshotAccessInput {
  SnapshotIdentifier: String!
  SnapshotClusterIdentifier: String
  AccountWithRestoreAccess: String!
}

type AwsRedshiftRevokeSnapshotAccessOutput {
  Snapshot: AwsRedshiftSd
}

input AwsRedshiftRotateEncryptionKeyInput {
  ClusterIdentifier: String!
}

type AwsRedshiftRotateEncryptionKeyOutput {
  Cluster: AwsRedshiftSv
}

type AwsRedshiftS1g {
  ParameterGroupName: String
  ParameterGroupFamily: String
  Description: String
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS1o {
  ClusterSubnetGroupName: String
  Description: String
  VpcId: String
  SubnetGroupStatus: String
  Subnets: [AwsRedshiftS1oSubnets]
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS1oSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsRedshiftS1r
  SubnetStatus: String
}

type AwsRedshiftS1r {
  Name: String
}

type AwsRedshiftS1w {
  CustomerAwsId: String
  CustSubscriptionId: String
  SnsTopicArn: String
  Status: String
  SubscriptionCreationTime: Date
  SourceType: String
  SourceIdsList: [String]
  EventCategoriesList: [String]
  Severity: String
  Enabled: Boolean
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS1z {
  HsmClientCertificateIdentifier: String
  HsmClientCertificatePublicKey: String
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS22 {
  HsmConfigurationIdentifier: String
  Description: String
  HsmIpAddress: String
  HsmPartitionName: String
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS25 {
  SnapshotCopyGrantName: String
  KmsKeyId: String
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS2q {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  ApplyType: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
}

input AwsRedshiftS2qInput {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  ApplyType: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
}

type AwsRedshiftS4 {
  ClusterSecurityGroupName: String
  Description: String
  EC2SecurityGroups: [AwsRedshiftS4EC2SecurityGroups]
  IPRanges: [AwsRedshiftS4IPRanges]
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS47 {
  RecurringChargeAmount: JSON
  RecurringChargeFrequency: String
}

type AwsRedshiftS4c {
  ReservedNodeId: String
  ReservedNodeOfferingId: String
  NodeType: String
  StartTime: Date
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  NodeCount: Int
  State: String
  OfferingType: String
  RecurringCharges: [AwsRedshiftS47]
}

type AwsRedshiftS4EC2SecurityGroups {
  Status: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS4IPRanges {
  Status: String
  CIDRIP: String
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS4q {
  TableRestoreRequestId: String
  Status: String
  Message: String
  RequestTime: Date
  ProgressInMegaBytes: JSON
  TotalDataInMegaBytes: JSON
  ClusterIdentifier: String
  SnapshotIdentifier: String
  SourceDatabaseName: String
  SourceSchemaName: String
  SourceTableName: String
  TargetDatabaseName: String
  TargetSchemaName: String
  NewTableName: String
}

type AwsRedshiftS8 {
  Key: String
  Value: String
}

input AwsRedshiftS8Input {
  Key: String
  Value: String
}

type AwsRedshiftSd {
  SnapshotIdentifier: String
  ClusterIdentifier: String
  SnapshotCreateTime: Date
  Status: String
  Port: Int
  AvailabilityZone: String
  ClusterCreateTime: Date
  MasterUsername: String
  ClusterVersion: String
  SnapshotType: String
  NodeType: String
  NumberOfNodes: Int
  DBName: String
  VpcId: String
  Encrypted: Boolean
  KmsKeyId: String
  EncryptedWithHSM: Boolean
  AccountsWithRestoreAccess: [AwsRedshiftSdAccountsWithRestoreAccess]
  OwnerAccount: String
  TotalBackupSizeInMegaBytes: JSON
  ActualIncrementalBackupSizeInMegaBytes: JSON
  BackupProgressInMegaBytes: JSON
  CurrentBackupRateInMegaBytesPerSecond: JSON
  EstimatedSecondsToCompletion: JSON
  ElapsedTimeInSeconds: JSON
  SourceRegion: String
  Tags: [AwsRedshiftS8]
  RestorableNodeTypes: [String]
  EnhancedVpcRouting: Boolean
}

type AwsRedshiftSdAccountsWithRestoreAccess {
  AccountId: String
  AccountAlias: String
}

type AwsRedshiftSv {
  ClusterIdentifier: String
  NodeType: String
  ClusterStatus: String
  ModifyStatus: String
  MasterUsername: String
  DBName: String
  Endpoint: AwsRedshiftSvEndpoint
  ClusterCreateTime: Date
  AutomatedSnapshotRetentionPeriod: Int
  ClusterSecurityGroups: [AwsRedshiftSvClusterSecurityGroups]
  VpcSecurityGroups: [AwsRedshiftSvVpcSecurityGroups]
  ClusterParameterGroups: [AwsRedshiftSvClusterParameterGroups]
  ClusterSubnetGroupName: String
  VpcId: String
  AvailabilityZone: String
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsRedshiftSvPendingModifiedValues
  ClusterVersion: String
  AllowVersionUpgrade: Boolean
  NumberOfNodes: Int
  PubliclyAccessible: Boolean
  Encrypted: Boolean
  RestoreStatus: AwsRedshiftSvRestoreStatus
  HsmStatus: AwsRedshiftSvHsmStatus
  ClusterSnapshotCopyStatus: AwsRedshiftSvClusterSnapshotCopyStatus
  ClusterPublicKey: String
  ClusterNodes: [AwsRedshiftSvClusterNodes]
  ElasticIpStatus: AwsRedshiftSvElasticIpStatus
  ClusterRevisionNumber: String
  Tags: [AwsRedshiftS8]
  KmsKeyId: String
  EnhancedVpcRouting: Boolean
  IamRoles: [AwsRedshiftSvIamRoles]
}

type AwsRedshiftSvClusterNodes {
  NodeRole: String
  PrivateIPAddress: String
  PublicIPAddress: String
}

type AwsRedshiftSvClusterParameterGroups {
  ParameterGroupName: String
  ParameterApplyStatus: String
  ClusterParameterStatusList: [AwsRedshiftSvClusterParameterGroupsClusterParameterStatusList]
}

type AwsRedshiftSvClusterParameterGroupsClusterParameterStatusList {
  ParameterName: String
  ParameterApplyStatus: String
  ParameterApplyErrorDescription: String
}

type AwsRedshiftSvClusterSecurityGroups {
  ClusterSecurityGroupName: String
  Status: String
}

type AwsRedshiftSvClusterSnapshotCopyStatus {
  DestinationRegion: String
  RetentionPeriod: JSON
  SnapshotCopyGrantName: String
}

type AwsRedshiftSvElasticIpStatus {
  ElasticIp: String
  Status: String
}

type AwsRedshiftSvEndpoint {
  Address: String
  Port: Int
}

type AwsRedshiftSvHsmStatus {
  HsmClientCertificateIdentifier: String
  HsmConfigurationIdentifier: String
  Status: String
}

type AwsRedshiftSvIamRoles {
  IamRoleArn: String
  ApplyStatus: String
}

type AwsRedshiftSvPendingModifiedValues {
  MasterUserPassword: String
  NodeType: String
  NumberOfNodes: Int
  ClusterType: String
  ClusterVersion: String
  AutomatedSnapshotRetentionPeriod: Int
  ClusterIdentifier: String
  PubliclyAccessible: Boolean
  EnhancedVpcRouting: Boolean
}

type AwsRedshiftSvRestoreStatus {
  Status: String
  CurrentRestoreRateInMegaBytesPerSecond: JSON
  SnapshotSizeInMegaBytes: JSON
  ProgressInMegaBytes: JSON
  ElapsedTimeInSeconds: JSON
  EstimatedTimeToCompletionInSeconds: JSON
}

type AwsRedshiftSvVpcSecurityGroups {
  VpcSecurityGroupId: String
  Status: String
}

# Amazon Rekognition (2016-06-27)
type AwsRekognition {
  # rekognition.CompareFaces
  CompareFaces(input: AwsRekognitionCompareFacesInput!): AwsRekognitionCompareFacesOutput

  # rekognition.CreateCollection
  CreateCollection(input: AwsRekognitionCreateCollectionInput!): AwsRekognitionCreateCollectionOutput

  # rekognition.CreateStreamProcessor
  CreateStreamProcessor(input: AwsRekognitionCreateStreamProcessorInput!): AwsRekognitionCreateStreamProcessorOutput

  # rekognition.DeleteCollection
  DeleteCollection(input: AwsRekognitionDeleteCollectionInput!): AwsRekognitionDeleteCollectionOutput

  # rekognition.DeleteFaces
  DeleteFaces(input: AwsRekognitionDeleteFacesInput!): AwsRekognitionDeleteFacesOutput

  # rekognition.DeleteStreamProcessor
  DeleteStreamProcessor(input: AwsRekognitionDeleteStreamProcessorInput!): JSON

  # rekognition.DescribeStreamProcessor
  DescribeStreamProcessor(input: AwsRekognitionDescribeStreamProcessorInput!): AwsRekognitionDescribeStreamProcessorOutput

  # rekognition.DetectFaces
  DetectFaces(input: AwsRekognitionDetectFacesInput!): AwsRekognitionDetectFacesOutput

  # rekognition.DetectLabels
  DetectLabels(input: AwsRekognitionDetectLabelsInput!): AwsRekognitionDetectLabelsOutput

  # rekognition.DetectModerationLabels
  DetectModerationLabels(input: AwsRekognitionDetectModerationLabelsInput!): AwsRekognitionDetectModerationLabelsOutput

  # rekognition.DetectText
  DetectText(input: AwsRekognitionDetectTextInput!): AwsRekognitionDetectTextOutput

  # rekognition.GetCelebrityInfo
  GetCelebrityInfo(input: AwsRekognitionGetCelebrityInfoInput!): AwsRekognitionGetCelebrityInfoOutput

  # rekognition.GetCelebrityRecognition
  GetCelebrityRecognition(input: AwsRekognitionGetCelebrityRecognitionInput!): AwsRekognitionGetCelebrityRecognitionOutput

  # rekognition.GetContentModeration
  GetContentModeration(input: AwsRekognitionGetContentModerationInput!): AwsRekognitionGetContentModerationOutput

  # rekognition.GetFaceDetection
  GetFaceDetection(input: AwsRekognitionGetFaceDetectionInput!): AwsRekognitionGetFaceDetectionOutput

  # rekognition.GetFaceSearch
  GetFaceSearch(input: AwsRekognitionGetFaceSearchInput!): AwsRekognitionGetFaceSearchOutput

  # rekognition.GetLabelDetection
  GetLabelDetection(input: AwsRekognitionGetLabelDetectionInput!): AwsRekognitionGetLabelDetectionOutput

  # rekognition.GetPersonTracking
  GetPersonTracking(input: AwsRekognitionGetPersonTrackingInput!): AwsRekognitionGetPersonTrackingOutput

  # rekognition.IndexFaces
  IndexFaces(input: AwsRekognitionIndexFacesInput!): AwsRekognitionIndexFacesOutput

  # rekognition.ListCollections
  ListCollections(input: AwsRekognitionListCollectionsInput): AwsRekognitionListCollectionsOutput

  # rekognition.ListFaces
  ListFaces(input: AwsRekognitionListFacesInput!): AwsRekognitionListFacesOutput

  # rekognition.ListStreamProcessors
  ListStreamProcessors(input: AwsRekognitionListStreamProcessorsInput): AwsRekognitionListStreamProcessorsOutput

  # rekognition.RecognizeCelebrities
  RecognizeCelebrities(input: AwsRekognitionRecognizeCelebritiesInput!): AwsRekognitionRecognizeCelebritiesOutput

  # rekognition.SearchFaces
  SearchFaces(input: AwsRekognitionSearchFacesInput!): AwsRekognitionSearchFacesOutput

  # rekognition.SearchFacesByImage
  SearchFacesByImage(input: AwsRekognitionSearchFacesByImageInput!): AwsRekognitionSearchFacesByImageOutput

  # rekognition.StartCelebrityRecognition
  StartCelebrityRecognition(input: AwsRekognitionStartCelebrityRecognitionInput!): AwsRekognitionStartCelebrityRecognitionOutput

  # rekognition.StartContentModeration
  StartContentModeration(input: AwsRekognitionStartContentModerationInput!): AwsRekognitionStartContentModerationOutput

  # rekognition.StartFaceDetection
  StartFaceDetection(input: AwsRekognitionStartFaceDetectionInput!): AwsRekognitionStartFaceDetectionOutput

  # rekognition.StartFaceSearch
  StartFaceSearch(input: AwsRekognitionStartFaceSearchInput!): AwsRekognitionStartFaceSearchOutput

  # rekognition.StartLabelDetection
  StartLabelDetection(input: AwsRekognitionStartLabelDetectionInput!): AwsRekognitionStartLabelDetectionOutput

  # rekognition.StartPersonTracking
  StartPersonTracking(input: AwsRekognitionStartPersonTrackingInput!): AwsRekognitionStartPersonTrackingOutput

  # rekognition.StartStreamProcessor
  StartStreamProcessor(input: AwsRekognitionStartStreamProcessorInput!): JSON

  # rekognition.StopStreamProcessor
  StopStreamProcessor(input: AwsRekognitionStopStreamProcessorInput!): JSON
}

input AwsRekognitionCompareFacesInput {
  SourceImage: AwsRekognitionS2Input!
  TargetImage: AwsRekognitionS2Input!
  SimilarityThreshold: Float
}

type AwsRekognitionCompareFacesOutput {
  SourceImageFace: AwsRekognitionCompareFacesOutputSourceImageFace
  FaceMatches: [AwsRekognitionCompareFacesOutputFaceMatches]
  UnmatchedFaces: [AwsRekognitionSf]
  SourceImageOrientationCorrection: String
  TargetImageOrientationCorrection: String
}

type AwsRekognitionCompareFacesOutputFaceMatches {
  Similarity: Float
  Face: AwsRekognitionSf
}

type AwsRekognitionCompareFacesOutputSourceImageFace {
  BoundingBox: AwsRekognitionSb
  Confidence: Float
}

input AwsRekognitionCreateCollectionInput {
  CollectionId: String!
}

type AwsRekognitionCreateCollectionOutput {
  StatusCode: Int
  CollectionArn: String
  FaceModelVersion: String
}

input AwsRekognitionCreateStreamProcessorInput {
  Input: AwsRekognitionSuInput!
  Output: AwsRekognitionSxInput!
  Name: String!
  Settings: AwsRekognitionS11Input!
  RoleArn: String!
}

type AwsRekognitionCreateStreamProcessorOutput {
  StreamProcessorArn: String
}

input AwsRekognitionDeleteCollectionInput {
  CollectionId: String!
}

type AwsRekognitionDeleteCollectionOutput {
  StatusCode: Int
}

input AwsRekognitionDeleteFacesInput {
  CollectionId: String!
  FaceIds: [String]!
}

type AwsRekognitionDeleteFacesOutput {
  DeletedFaces: [String]
}

input AwsRekognitionDeleteStreamProcessorInput {
  Name: String!
}

input AwsRekognitionDescribeStreamProcessorInput {
  Name: String!
}

type AwsRekognitionDescribeStreamProcessorOutput {
  Name: String
  StreamProcessorArn: String
  Status: String
  StatusMessage: String
  CreationTimestamp: Date
  LastUpdateTimestamp: Date
  Input: AwsRekognitionSu
  Output: AwsRekognitionSx
  RoleArn: String
  Settings: AwsRekognitionS11
}

input AwsRekognitionDetectFacesInput {
  Image: AwsRekognitionS2Input!
  Attributes: [String]
}

type AwsRekognitionDetectFacesOutput {
  FaceDetails: [AwsRekognitionS1n]
  OrientationCorrection: String
}

input AwsRekognitionDetectLabelsInput {
  Image: AwsRekognitionS2Input!
  MaxLabels: Int
  MinConfidence: Float
}

type AwsRekognitionDetectLabelsOutput {
  Labels: [AwsRekognitionS25]
  OrientationCorrection: String
}

input AwsRekognitionDetectModerationLabelsInput {
  Image: AwsRekognitionS2Input!
  MinConfidence: Float
}

type AwsRekognitionDetectModerationLabelsOutput {
  ModerationLabels: [AwsRekognitionS29]
}

input AwsRekognitionDetectTextInput {
  Image: AwsRekognitionS2Input!
}

type AwsRekognitionDetectTextOutput {
  TextDetections: [AwsRekognitionDetectTextOutputTextDetections]
}

type AwsRekognitionDetectTextOutputTextDetections {
  DetectedText: String
  Type: String
  Id: Int
  ParentId: Int
  Confidence: Float
  Geometry: AwsRekognitionDetectTextOutputTextDetectionsGeometry
}

type AwsRekognitionDetectTextOutputTextDetectionsGeometry {
  BoundingBox: AwsRekognitionSb
  Polygon: [AwsRekognitionDetectTextOutputTextDetectionsGeometryPolygon]
}

type AwsRekognitionDetectTextOutputTextDetectionsGeometryPolygon {
  X: Float
  Y: Float
}

input AwsRekognitionGetCelebrityInfoInput {
  Id: String!
}

type AwsRekognitionGetCelebrityInfoOutput {
  Urls: [String]
  Name: String
}

input AwsRekognitionGetCelebrityRecognitionInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetCelebrityRecognitionOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS2v
  NextToken: String
  Celebrities: [AwsRekognitionGetCelebrityRecognitionOutputCelebrities]
}

type AwsRekognitionGetCelebrityRecognitionOutputCelebrities {
  Timestamp: JSON
  Celebrity: AwsRekognitionGetCelebrityRecognitionOutputCelebritiesCelebrity
}

type AwsRekognitionGetCelebrityRecognitionOutputCelebritiesCelebrity {
  Urls: [String]
  Name: String
  Id: String
  Confidence: Float
  BoundingBox: AwsRekognitionSb
  Face: AwsRekognitionS1n
}

input AwsRekognitionGetContentModerationInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetContentModerationOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS2v
  ModerationLabels: [AwsRekognitionGetContentModerationOutputModerationLabels]
  NextToken: String
}

type AwsRekognitionGetContentModerationOutputModerationLabels {
  Timestamp: JSON
  ModerationLabel: AwsRekognitionS29
}

input AwsRekognitionGetFaceDetectionInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
}

type AwsRekognitionGetFaceDetectionOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS2v
  NextToken: String
  Faces: [AwsRekognitionGetFaceDetectionOutputFaces]
}

type AwsRekognitionGetFaceDetectionOutputFaces {
  Timestamp: JSON
  Face: AwsRekognitionS1n
}

input AwsRekognitionGetFaceSearchInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetFaceSearchOutput {
  JobStatus: String
  StatusMessage: String
  NextToken: String
  VideoMetadata: AwsRekognitionS2v
  Persons: [AwsRekognitionGetFaceSearchOutputPersons]
}

type AwsRekognitionGetFaceSearchOutputPersons {
  Timestamp: JSON
  Person: AwsRekognitionS3f
  FaceMatches: [AwsRekognitionS3h]
}

input AwsRekognitionGetLabelDetectionInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetLabelDetectionOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS2v
  NextToken: String
  Labels: [AwsRekognitionGetLabelDetectionOutputLabels]
}

type AwsRekognitionGetLabelDetectionOutputLabels {
  Timestamp: JSON
  Label: AwsRekognitionS25
}

input AwsRekognitionGetPersonTrackingInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetPersonTrackingOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS2v
  NextToken: String
  Persons: [AwsRekognitionGetPersonTrackingOutputPersons]
}

type AwsRekognitionGetPersonTrackingOutputPersons {
  Timestamp: JSON
  Person: AwsRekognitionS3f
}

input AwsRekognitionIndexFacesInput {
  CollectionId: String!
  Image: AwsRekognitionS2Input!
  ExternalImageId: String
  DetectionAttributes: [String]
}

type AwsRekognitionIndexFacesOutput {
  FaceRecords: [AwsRekognitionIndexFacesOutputFaceRecords]
  OrientationCorrection: String
  FaceModelVersion: String
}

type AwsRekognitionIndexFacesOutputFaceRecords {
  Face: AwsRekognitionS3j
  FaceDetail: AwsRekognitionS1n
}

input AwsRekognitionListCollectionsInput {
  NextToken: String
  MaxResults: Int
}

type AwsRekognitionListCollectionsOutput {
  CollectionIds: [String]
  NextToken: String
  FaceModelVersions: [String]
}

input AwsRekognitionListFacesInput {
  CollectionId: String!
  NextToken: String
  MaxResults: Int
}

type AwsRekognitionListFacesOutput {
  Faces: [AwsRekognitionS3j]
  NextToken: String
  FaceModelVersion: String
}

input AwsRekognitionListStreamProcessorsInput {
  NextToken: String
  MaxResults: Int
}

type AwsRekognitionListStreamProcessorsOutput {
  NextToken: String
  StreamProcessors: [AwsRekognitionListStreamProcessorsOutputStreamProcessors]
}

type AwsRekognitionListStreamProcessorsOutputStreamProcessors {
  Name: String
  Status: String
}

input AwsRekognitionRecognizeCelebritiesInput {
  Image: AwsRekognitionS2Input!
}

type AwsRekognitionRecognizeCelebritiesOutput {
  CelebrityFaces: [AwsRekognitionRecognizeCelebritiesOutputCelebrityFaces]
  UnrecognizedFaces: [AwsRekognitionSf]
  OrientationCorrection: String
}

type AwsRekognitionRecognizeCelebritiesOutputCelebrityFaces {
  Urls: [String]
  Name: String
  Id: String
  Face: AwsRekognitionSf
  MatchConfidence: Float
}

type AwsRekognitionS11 {
  FaceSearch: AwsRekognitionS11FaceSearch
}

type AwsRekognitionS11FaceSearch {
  CollectionId: String
  FaceMatchThreshold: Float
}

input AwsRekognitionS11FaceSearchInput {
  CollectionId: String
  FaceMatchThreshold: Float
}

input AwsRekognitionS11Input {
  FaceSearch: AwsRekognitionS11FaceSearchInput
}

type AwsRekognitionS1n {
  BoundingBox: AwsRekognitionSb
  AgeRange: AwsRekognitionS1nAgeRange
  Smile: AwsRekognitionS1nSmile
  Eyeglasses: AwsRekognitionS1nEyeglasses
  Sunglasses: AwsRekognitionS1nSunglasses
  Gender: AwsRekognitionS1nGender
  Beard: AwsRekognitionS1nBeard
  Mustache: AwsRekognitionS1nMustache
  EyesOpen: AwsRekognitionS1nEyesOpen
  MouthOpen: AwsRekognitionS1nMouthOpen
  Emotions: [AwsRekognitionS1nEmotions]
  Landmarks: [AwsRekognitionSg]
  Pose: AwsRekognitionSj
  Quality: AwsRekognitionSl
  Confidence: Float
}

type AwsRekognitionS1nAgeRange {
  Low: Int
  High: Int
}

type AwsRekognitionS1nBeard {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1nEmotions {
  Type: String
  Confidence: Float
}

type AwsRekognitionS1nEyeglasses {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1nEyesOpen {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1nGender {
  Value: String
  Confidence: Float
}

type AwsRekognitionS1nMouthOpen {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1nMustache {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1nSmile {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1nSunglasses {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS25 {
  Name: String
  Confidence: Float
}

type AwsRekognitionS29 {
  Confidence: Float
  Name: String
  ParentName: String
}

input AwsRekognitionS2Input {
  Bytes: JSON
  S3Object: AwsRekognitionS4Input
}

type AwsRekognitionS2v {
  Codec: String
  DurationMillis: JSON
  Format: String
  FrameRate: Float
  FrameHeight: JSON
  FrameWidth: JSON
}

type AwsRekognitionS3f {
  Index: JSON
  BoundingBox: AwsRekognitionSb
  Face: AwsRekognitionS1n
}

type AwsRekognitionS3h {
  Similarity: Float
  Face: AwsRekognitionS3j
}

type AwsRekognitionS3j {
  FaceId: String
  BoundingBox: AwsRekognitionSb
  ImageId: String
  ExternalImageId: String
  Confidence: Float
}

input AwsRekognitionS4Input {
  Bucket: String
  Name: String
  Version: String
}

input AwsRekognitionS4nInput {
  S3Object: AwsRekognitionS4Input
}

input AwsRekognitionS4pInput {
  SNSTopicArn: String!
  RoleArn: String!
}

type AwsRekognitionSb {
  Width: Float
  Height: Float
  Left: Float
  Top: Float
}

input AwsRekognitionSearchFacesByImageInput {
  CollectionId: String!
  Image: AwsRekognitionS2Input!
  MaxFaces: Int
  FaceMatchThreshold: Float
}

type AwsRekognitionSearchFacesByImageOutput {
  SearchedFaceBoundingBox: AwsRekognitionSb
  SearchedFaceConfidence: Float
  FaceMatches: [AwsRekognitionS3h]
  FaceModelVersion: String
}

input AwsRekognitionSearchFacesInput {
  CollectionId: String!
  FaceId: String!
  MaxFaces: Int
  FaceMatchThreshold: Float
}

type AwsRekognitionSearchFacesOutput {
  SearchedFaceId: String
  FaceMatches: [AwsRekognitionS3h]
  FaceModelVersion: String
}

type AwsRekognitionSf {
  BoundingBox: AwsRekognitionSb
  Confidence: Float
  Landmarks: [AwsRekognitionSg]
  Pose: AwsRekognitionSj
  Quality: AwsRekognitionSl
}

type AwsRekognitionSg {
  Type: String
  X: Float
  Y: Float
}

type AwsRekognitionSj {
  Roll: Float
  Yaw: Float
  Pitch: Float
}

type AwsRekognitionSl {
  Brightness: Float
  Sharpness: Float
}

input AwsRekognitionStartCelebrityRecognitionInput {
  Video: AwsRekognitionS4nInput!
  ClientRequestToken: String
  NotificationChannel: AwsRekognitionS4pInput
  JobTag: String
}

type AwsRekognitionStartCelebrityRecognitionOutput {
  JobId: String
}

input AwsRekognitionStartContentModerationInput {
  Video: AwsRekognitionS4nInput!
  MinConfidence: Float
  ClientRequestToken: String
  NotificationChannel: AwsRekognitionS4pInput
  JobTag: String
}

type AwsRekognitionStartContentModerationOutput {
  JobId: String
}

input AwsRekognitionStartFaceDetectionInput {
  Video: AwsRekognitionS4nInput!
  ClientRequestToken: String
  NotificationChannel: AwsRekognitionS4pInput
  FaceAttributes: String
  JobTag: String
}

type AwsRekognitionStartFaceDetectionOutput {
  JobId: String
}

input AwsRekognitionStartFaceSearchInput {
  Video: AwsRekognitionS4nInput!
  ClientRequestToken: String
  FaceMatchThreshold: Float
  CollectionId: String!
  NotificationChannel: AwsRekognitionS4pInput
  JobTag: String
}

type AwsRekognitionStartFaceSearchOutput {
  JobId: String
}

input AwsRekognitionStartLabelDetectionInput {
  Video: AwsRekognitionS4nInput!
  ClientRequestToken: String
  MinConfidence: Float
  NotificationChannel: AwsRekognitionS4pInput
  JobTag: String
}

type AwsRekognitionStartLabelDetectionOutput {
  JobId: String
}

input AwsRekognitionStartPersonTrackingInput {
  Video: AwsRekognitionS4nInput!
  ClientRequestToken: String
  NotificationChannel: AwsRekognitionS4pInput
  JobTag: String
}

type AwsRekognitionStartPersonTrackingOutput {
  JobId: String
}

input AwsRekognitionStartStreamProcessorInput {
  Name: String!
}

input AwsRekognitionStopStreamProcessorInput {
  Name: String!
}

type AwsRekognitionSu {
  KinesisVideoStream: AwsRekognitionSuKinesisVideoStream
}

input AwsRekognitionSuInput {
  KinesisVideoStream: AwsRekognitionSuKinesisVideoStreamInput
}

type AwsRekognitionSuKinesisVideoStream {
  Arn: String
}

input AwsRekognitionSuKinesisVideoStreamInput {
  Arn: String
}

type AwsRekognitionSx {
  KinesisDataStream: AwsRekognitionSxKinesisDataStream
}

input AwsRekognitionSxInput {
  KinesisDataStream: AwsRekognitionSxKinesisDataStreamInput
}

type AwsRekognitionSxKinesisDataStream {
  Arn: String
}

input AwsRekognitionSxKinesisDataStreamInput {
  Arn: String
}

# AWS Resource Groups (2017-11-27)
type AwsResourcegroups {
  # resourcegroups.CreateGroup
  CreateGroup(input: AwsResourcegroupsCreateGroupInput!): AwsResourcegroupsCreateGroupOutput

  # resourcegroups.DeleteGroup
  DeleteGroup(input: AwsResourcegroupsDeleteGroupInput!): AwsResourcegroupsDeleteGroupOutput

  # resourcegroups.GetGroup
  GetGroup(input: AwsResourcegroupsGetGroupInput!): AwsResourcegroupsGetGroupOutput

  # resourcegroups.GetGroupQuery
  GetGroupQuery(input: AwsResourcegroupsGetGroupQueryInput!): AwsResourcegroupsGetGroupQueryOutput

  # resourcegroups.GetTags
  GetTags(input: AwsResourcegroupsGetTagsInput!): AwsResourcegroupsGetTagsOutput

  # resourcegroups.ListGroupResources
  ListGroupResources(input: AwsResourcegroupsListGroupResourcesInput!): AwsResourcegroupsListGroupResourcesOutput

  # resourcegroups.ListGroups
  ListGroups(input: AwsResourcegroupsListGroupsInput): AwsResourcegroupsListGroupsOutput

  # resourcegroups.SearchResources
  SearchResources(input: AwsResourcegroupsSearchResourcesInput!): AwsResourcegroupsSearchResourcesOutput

  # resourcegroups.Tag
  Tag(input: AwsResourcegroupsTagInput!): AwsResourcegroupsTagOutput

  # resourcegroups.Untag
  Untag(input: AwsResourcegroupsUntagInput!): AwsResourcegroupsUntagOutput

  # resourcegroups.UpdateGroup
  UpdateGroup(input: AwsResourcegroupsUpdateGroupInput!): AwsResourcegroupsUpdateGroupOutput

  # resourcegroups.UpdateGroupQuery
  UpdateGroupQuery(input: AwsResourcegroupsUpdateGroupQueryInput!): AwsResourcegroupsUpdateGroupQueryOutput
}

input AwsResourcegroupsCreateGroupInput {
  Name: String!
  Description: String
  ResourceQuery: AwsResourcegroupsS4Input!
  Tags: JSON
}

type AwsResourcegroupsCreateGroupOutput {
  Group: AwsResourcegroupsSb
  ResourceQuery: AwsResourcegroupsS4
  Tags: JSON
}

input AwsResourcegroupsDeleteGroupInput {
  GroupName: String!
}

type AwsResourcegroupsDeleteGroupOutput {
  Group: AwsResourcegroupsSb
}

input AwsResourcegroupsGetGroupInput {
  GroupName: String!
}

type AwsResourcegroupsGetGroupOutput {
  Group: AwsResourcegroupsSb
}

input AwsResourcegroupsGetGroupQueryInput {
  GroupName: String!
}

type AwsResourcegroupsGetGroupQueryOutput {
  GroupQuery: AwsResourcegroupsSj
}

input AwsResourcegroupsGetTagsInput {
  Arn: String!
}

type AwsResourcegroupsGetTagsOutput {
  Arn: String
  Tags: JSON
}

input AwsResourcegroupsListGroupResourcesInput {
  GroupName: String!
  MaxResults: Int
  NextToken: String
}

type AwsResourcegroupsListGroupResourcesOutput {
  ResourceIdentifiers: [AwsResourcegroupsSq]
  NextToken: String
}

input AwsResourcegroupsListGroupsInput {
  MaxResults: Int
  NextToken: String
}

type AwsResourcegroupsListGroupsOutput {
  Groups: [AwsResourcegroupsSb]
  NextToken: String
}

type AwsResourcegroupsS4 {
  Type: String!
  Query: String!
}

input AwsResourcegroupsS4Input {
  Type: String!
  Query: String!
}

type AwsResourcegroupsSb {
  GroupArn: String!
  Name: String!
  Description: String
}

input AwsResourcegroupsSearchResourcesInput {
  ResourceQuery: AwsResourcegroupsS4Input!
  MaxResults: Int
  NextToken: String
}

type AwsResourcegroupsSearchResourcesOutput {
  ResourceIdentifiers: [AwsResourcegroupsSq]
  NextToken: String
}

type AwsResourcegroupsSj {
  GroupName: String!
  ResourceQuery: AwsResourcegroupsS4!
}

type AwsResourcegroupsSq {
  ResourceArn: String
  ResourceType: String
}

# AWS Resource Groups Tagging API (2017-01-26)
type AwsResourcegroupstaggingapi {
  # resourcegroupstaggingapi.GetResources
  GetResources(input: AwsResourcegroupstaggingapiGetResourcesInput): AwsResourcegroupstaggingapiGetResourcesOutput

  # resourcegroupstaggingapi.GetTagKeys
  GetTagKeys(input: AwsResourcegroupstaggingapiGetTagKeysInput): AwsResourcegroupstaggingapiGetTagKeysOutput

  # resourcegroupstaggingapi.GetTagValues
  GetTagValues(input: AwsResourcegroupstaggingapiGetTagValuesInput!): AwsResourcegroupstaggingapiGetTagValuesOutput

  # resourcegroupstaggingapi.TagResources
  TagResources(input: AwsResourcegroupstaggingapiTagResourcesInput!): AwsResourcegroupstaggingapiTagResourcesOutput

  # resourcegroupstaggingapi.UntagResources
  UntagResources(input: AwsResourcegroupstaggingapiUntagResourcesInput!): AwsResourcegroupstaggingapiUntagResourcesOutput
}

input AwsResourcegroupstaggingapiGetResourcesInput {
  PaginationToken: String
  TagFilters: [AwsResourcegroupstaggingapiGetResourcesTagFiltersInput]
  ResourcesPerPage: Int
  TagsPerPage: Int
  ResourceTypeFilters: [String]
}

type AwsResourcegroupstaggingapiGetResourcesOutput {
  PaginationToken: String
  ResourceTagMappingList: [AwsResourcegroupstaggingapiGetResourcesOutputResourceTagMappingList]
}

type AwsResourcegroupstaggingapiGetResourcesOutputResourceTagMappingList {
  ResourceARN: String
  Tags: [AwsResourcegroupstaggingapiGetResourcesOutputResourceTagMappingListTags]
}

type AwsResourcegroupstaggingapiGetResourcesOutputResourceTagMappingListTags {
  Key: String!
  Value: String!
}

input AwsResourcegroupstaggingapiGetResourcesTagFiltersInput {
  Key: String
  Values: [String]
}

input AwsResourcegroupstaggingapiGetTagKeysInput {
  PaginationToken: String
}

type AwsResourcegroupstaggingapiGetTagKeysOutput {
  PaginationToken: String
  TagKeys: [String]
}

input AwsResourcegroupstaggingapiGetTagValuesInput {
  PaginationToken: String
  Key: String!
}

type AwsResourcegroupstaggingapiGetTagValuesOutput {
  PaginationToken: String
  TagValues: [String]
}

input AwsResourcegroupstaggingapiTagResourcesInput {
  ResourceARNList: [String]!
  Tags: JSON!
}

type AwsResourcegroupstaggingapiTagResourcesOutput {
  FailedResourcesMap: JSON
}

input AwsResourcegroupstaggingapiUntagResourcesInput {
  ResourceARNList: [String]!
  TagKeys: [String]!
}

type AwsResourcegroupstaggingapiUntagResourcesOutput {
  FailedResourcesMap: JSON
}

input AwsResourcegroupsTagInput {
  Arn: String!
  Tags: JSON!
}

type AwsResourcegroupsTagOutput {
  Arn: String
  Tags: JSON
}

input AwsResourcegroupsUntagInput {
  Arn: String!
  Keys: [String]!
}

type AwsResourcegroupsUntagOutput {
  Arn: String
  Keys: [String]
}

input AwsResourcegroupsUpdateGroupInput {
  GroupName: String!
  Description: String
}

type AwsResourcegroupsUpdateGroupOutput {
  Group: AwsResourcegroupsSb
}

input AwsResourcegroupsUpdateGroupQueryInput {
  GroupName: String!
  ResourceQuery: AwsResourcegroupsS4Input!
}

type AwsResourcegroupsUpdateGroupQueryOutput {
  GroupQuery: AwsResourcegroupsSj
}

# Amazon Route 53 (2013-04-01)
type AwsRoute53 {
  # route53.AssociateVPCWithHostedZone
  AssociateVPCWithHostedZone(input: AwsRoute53AssociateVPCWithHostedZoneInput!): AwsRoute53AssociateVPCWithHostedZoneOutput

  # route53.ChangeResourceRecordSets
  ChangeResourceRecordSets(input: AwsRoute53ChangeResourceRecordSetsInput!): AwsRoute53ChangeResourceRecordSetsOutput

  # route53.ChangeTagsForResource
  ChangeTagsForResource(input: AwsRoute53ChangeTagsForResourceInput!): JSON

  # route53.CreateHealthCheck
  CreateHealthCheck(input: AwsRoute53CreateHealthCheckInput!): AwsRoute53CreateHealthCheckOutput

  # route53.CreateHostedZone
  CreateHostedZone(input: AwsRoute53CreateHostedZoneInput!): AwsRoute53CreateHostedZoneOutput

  # route53.CreateQueryLoggingConfig
  CreateQueryLoggingConfig(input: AwsRoute53CreateQueryLoggingConfigInput!): AwsRoute53CreateQueryLoggingConfigOutput

  # route53.CreateReusableDelegationSet
  CreateReusableDelegationSet(input: AwsRoute53CreateReusableDelegationSetInput!): AwsRoute53CreateReusableDelegationSetOutput

  # route53.CreateTrafficPolicy
  CreateTrafficPolicy(input: AwsRoute53CreateTrafficPolicyInput!): AwsRoute53CreateTrafficPolicyOutput

  # route53.CreateTrafficPolicyInstance
  CreateTrafficPolicyInstance(input: AwsRoute53CreateTrafficPolicyInstanceInput!): AwsRoute53CreateTrafficPolicyInstanceOutput

  # route53.CreateTrafficPolicyVersion
  CreateTrafficPolicyVersion(input: AwsRoute53CreateTrafficPolicyVersionInput!): AwsRoute53CreateTrafficPolicyVersionOutput

  # route53.CreateVPCAssociationAuthorization
  CreateVPCAssociationAuthorization(input: AwsRoute53CreateVPCAssociationAuthorizationInput!): AwsRoute53CreateVPCAssociationAuthorizationOutput

  # route53.DeleteHealthCheck
  DeleteHealthCheck(input: AwsRoute53DeleteHealthCheckInput!): JSON

  # route53.DeleteHostedZone
  DeleteHostedZone(input: AwsRoute53DeleteHostedZoneInput!): AwsRoute53DeleteHostedZoneOutput

  # route53.DeleteQueryLoggingConfig
  DeleteQueryLoggingConfig(input: AwsRoute53DeleteQueryLoggingConfigInput!): JSON

  # route53.DeleteReusableDelegationSet
  DeleteReusableDelegationSet(input: AwsRoute53DeleteReusableDelegationSetInput!): JSON

  # route53.DeleteTrafficPolicy
  DeleteTrafficPolicy(input: AwsRoute53DeleteTrafficPolicyInput!): JSON

  # route53.DeleteTrafficPolicyInstance
  DeleteTrafficPolicyInstance(input: AwsRoute53DeleteTrafficPolicyInstanceInput!): JSON

  # route53.DeleteVPCAssociationAuthorization
  DeleteVPCAssociationAuthorization(input: AwsRoute53DeleteVPCAssociationAuthorizationInput!): JSON

  # route53.DisassociateVPCFromHostedZone
  DisassociateVPCFromHostedZone(input: AwsRoute53DisassociateVPCFromHostedZoneInput!): AwsRoute53DisassociateVPCFromHostedZoneOutput

  # route53.GetAccountLimit
  GetAccountLimit(input: AwsRoute53GetAccountLimitInput!): AwsRoute53GetAccountLimitOutput

  # route53.GetChange
  GetChange(input: AwsRoute53GetChangeInput!): AwsRoute53GetChangeOutput

  # route53.GetCheckerIpRanges
  GetCheckerIpRanges(input: JSON): AwsRoute53GetCheckerIpRangesOutput

  # route53.GetGeoLocation
  GetGeoLocation(input: AwsRoute53GetGeoLocationInput): AwsRoute53GetGeoLocationOutput

  # route53.GetHealthCheck
  GetHealthCheck(input: AwsRoute53GetHealthCheckInput!): AwsRoute53GetHealthCheckOutput

  # route53.GetHealthCheckCount
  GetHealthCheckCount(input: JSON): AwsRoute53GetHealthCheckCountOutput

  # route53.GetHealthCheckLastFailureReason
  GetHealthCheckLastFailureReason(input: AwsRoute53GetHealthCheckLastFailureReasonInput!): AwsRoute53GetHealthCheckLastFailureReasonOutput

  # route53.GetHealthCheckStatus
  GetHealthCheckStatus(input: AwsRoute53GetHealthCheckStatusInput!): AwsRoute53GetHealthCheckStatusOutput

  # route53.GetHostedZone
  GetHostedZone(input: AwsRoute53GetHostedZoneInput!): AwsRoute53GetHostedZoneOutput

  # route53.GetHostedZoneCount
  GetHostedZoneCount(input: JSON): AwsRoute53GetHostedZoneCountOutput

  # route53.GetHostedZoneLimit
  GetHostedZoneLimit(input: AwsRoute53GetHostedZoneLimitInput!): AwsRoute53GetHostedZoneLimitOutput

  # route53.GetQueryLoggingConfig
  GetQueryLoggingConfig(input: AwsRoute53GetQueryLoggingConfigInput!): AwsRoute53GetQueryLoggingConfigOutput

  # route53.GetReusableDelegationSet
  GetReusableDelegationSet(input: AwsRoute53GetReusableDelegationSetInput!): AwsRoute53GetReusableDelegationSetOutput

  # route53.GetReusableDelegationSetLimit
  GetReusableDelegationSetLimit(input: AwsRoute53GetReusableDelegationSetLimitInput!): AwsRoute53GetReusableDelegationSetLimitOutput

  # route53.GetTrafficPolicy
  GetTrafficPolicy(input: AwsRoute53GetTrafficPolicyInput!): AwsRoute53GetTrafficPolicyOutput

  # route53.GetTrafficPolicyInstance
  GetTrafficPolicyInstance(input: AwsRoute53GetTrafficPolicyInstanceInput!): AwsRoute53GetTrafficPolicyInstanceOutput

  # route53.GetTrafficPolicyInstanceCount
  GetTrafficPolicyInstanceCount(input: JSON): AwsRoute53GetTrafficPolicyInstanceCountOutput

  # route53.ListGeoLocations
  ListGeoLocations(input: AwsRoute53ListGeoLocationsInput): AwsRoute53ListGeoLocationsOutput

  # route53.ListHealthChecks
  ListHealthChecks(input: AwsRoute53ListHealthChecksInput): AwsRoute53ListHealthChecksOutput

  # route53.ListHostedZones
  ListHostedZones(input: AwsRoute53ListHostedZonesInput): AwsRoute53ListHostedZonesOutput

  # route53.ListHostedZonesByName
  ListHostedZonesByName(input: AwsRoute53ListHostedZonesByNameInput): AwsRoute53ListHostedZonesByNameOutput

  # route53.ListQueryLoggingConfigs
  ListQueryLoggingConfigs(input: AwsRoute53ListQueryLoggingConfigsInput): AwsRoute53ListQueryLoggingConfigsOutput

  # route53.ListResourceRecordSets
  ListResourceRecordSets(input: AwsRoute53ListResourceRecordSetsInput!): AwsRoute53ListResourceRecordSetsOutput

  # route53.ListReusableDelegationSets
  ListReusableDelegationSets(input: AwsRoute53ListReusableDelegationSetsInput): AwsRoute53ListReusableDelegationSetsOutput

  # route53.ListTagsForResource
  ListTagsForResource(input: AwsRoute53ListTagsForResourceInput!): AwsRoute53ListTagsForResourceOutput

  # route53.ListTagsForResources
  ListTagsForResources(input: AwsRoute53ListTagsForResourcesInput!): AwsRoute53ListTagsForResourcesOutput

  # route53.ListTrafficPolicies
  ListTrafficPolicies(input: AwsRoute53ListTrafficPoliciesInput): AwsRoute53ListTrafficPoliciesOutput

  # route53.ListTrafficPolicyInstances
  ListTrafficPolicyInstances(input: AwsRoute53ListTrafficPolicyInstancesInput): AwsRoute53ListTrafficPolicyInstancesOutput

  # route53.ListTrafficPolicyInstancesByHostedZone
  ListTrafficPolicyInstancesByHostedZone(input: AwsRoute53ListTrafficPolicyInstancesByHostedZoneInput!): AwsRoute53ListTrafficPolicyInstancesByHostedZoneOutput

  # route53.ListTrafficPolicyInstancesByPolicy
  ListTrafficPolicyInstancesByPolicy(input: AwsRoute53ListTrafficPolicyInstancesByPolicyInput!): AwsRoute53ListTrafficPolicyInstancesByPolicyOutput

  # route53.ListTrafficPolicyVersions
  ListTrafficPolicyVersions(input: AwsRoute53ListTrafficPolicyVersionsInput!): AwsRoute53ListTrafficPolicyVersionsOutput

  # route53.ListVPCAssociationAuthorizations
  ListVPCAssociationAuthorizations(input: AwsRoute53ListVPCAssociationAuthorizationsInput!): AwsRoute53ListVPCAssociationAuthorizationsOutput

  # route53.TestDNSAnswer
  TestDNSAnswer(input: AwsRoute53TestDNSAnswerInput!): AwsRoute53TestDNSAnswerOutput

  # route53.UpdateHealthCheck
  UpdateHealthCheck(input: AwsRoute53UpdateHealthCheckInput!): AwsRoute53UpdateHealthCheckOutput

  # route53.UpdateHostedZoneComment
  UpdateHostedZoneComment(input: AwsRoute53UpdateHostedZoneCommentInput!): AwsRoute53UpdateHostedZoneCommentOutput

  # route53.UpdateTrafficPolicyComment
  UpdateTrafficPolicyComment(input: AwsRoute53UpdateTrafficPolicyCommentInput!): AwsRoute53UpdateTrafficPolicyCommentOutput

  # route53.UpdateTrafficPolicyInstance
  UpdateTrafficPolicyInstance(input: AwsRoute53UpdateTrafficPolicyInstanceInput!): AwsRoute53UpdateTrafficPolicyInstanceOutput
}

input AwsRoute53AssociateVPCWithHostedZoneInput {
  HostedZoneId: String!
  VPC: AwsRoute53S3Input!
  Comment: String
}

type AwsRoute53AssociateVPCWithHostedZoneOutput {
  ChangeInfo: AwsRoute53S8!
}

input AwsRoute53ChangeResourceRecordSetsChangeBatchChangesInput {
  Action: String!
  ResourceRecordSet: AwsRoute53ShInput!
}

input AwsRoute53ChangeResourceRecordSetsChangeBatchInput {
  Comment: String
  Changes: [AwsRoute53ChangeResourceRecordSetsChangeBatchChangesInput]!
}

input AwsRoute53ChangeResourceRecordSetsInput {
  HostedZoneId: String!
  ChangeBatch: AwsRoute53ChangeResourceRecordSetsChangeBatchInput!
}

type AwsRoute53ChangeResourceRecordSetsOutput {
  ChangeInfo: AwsRoute53S8!
}

input AwsRoute53ChangeTagsForResourceInput {
  ResourceType: String!
  ResourceId: String!
  AddTags: [AwsRoute53S15Input]
  RemoveTagKeys: [String]
}

input AwsRoute53CreateHealthCheckInput {
  CallerReference: String!
  HealthCheckConfig: AwsRoute53S1dInput!
}

type AwsRoute53CreateHealthCheckOutput {
  HealthCheck: AwsRoute53S1y!
  Location: String!
}

input AwsRoute53CreateHostedZoneInput {
  Name: String!
  VPC: AwsRoute53S3Input
  CallerReference: String!
  HostedZoneConfig: AwsRoute53S2gInput
  DelegationSetId: String
}

type AwsRoute53CreateHostedZoneOutput {
  HostedZone: AwsRoute53S2j!
  ChangeInfo: AwsRoute53S8!
  DelegationSet: AwsRoute53S2l!
  VPC: AwsRoute53S3
  Location: String!
}

input AwsRoute53CreateQueryLoggingConfigInput {
  HostedZoneId: String!
  CloudWatchLogsLogGroupArn: String!
}

type AwsRoute53CreateQueryLoggingConfigOutput {
  QueryLoggingConfig: AwsRoute53S2q!
  Location: String!
}

input AwsRoute53CreateReusableDelegationSetInput {
  CallerReference: String!
  HostedZoneId: String
}

type AwsRoute53CreateReusableDelegationSetOutput {
  DelegationSet: AwsRoute53S2l!
  Location: String!
}

input AwsRoute53CreateTrafficPolicyInput {
  Name: String!
  Document: String!
  Comment: String
}

input AwsRoute53CreateTrafficPolicyInstanceInput {
  HostedZoneId: String!
  Name: String!
  TTL: JSON!
  TrafficPolicyId: String!
  TrafficPolicyVersion: Int!
}

type AwsRoute53CreateTrafficPolicyInstanceOutput {
  TrafficPolicyInstance: AwsRoute53S34!
  Location: String!
}

type AwsRoute53CreateTrafficPolicyOutput {
  TrafficPolicy: AwsRoute53S2z!
  Location: String!
}

input AwsRoute53CreateTrafficPolicyVersionInput {
  Id: String!
  Document: String!
  Comment: String
}

type AwsRoute53CreateTrafficPolicyVersionOutput {
  TrafficPolicy: AwsRoute53S2z!
  Location: String!
}

input AwsRoute53CreateVPCAssociationAuthorizationInput {
  HostedZoneId: String!
  VPC: AwsRoute53S3Input!
}

type AwsRoute53CreateVPCAssociationAuthorizationOutput {
  HostedZoneId: String!
  VPC: AwsRoute53S3!
}

input AwsRoute53DeleteHealthCheckInput {
  HealthCheckId: String!
}

input AwsRoute53DeleteHostedZoneInput {
  Id: String!
}

type AwsRoute53DeleteHostedZoneOutput {
  ChangeInfo: AwsRoute53S8!
}

input AwsRoute53DeleteQueryLoggingConfigInput {
  Id: String!
}

input AwsRoute53DeleteReusableDelegationSetInput {
  Id: String!
}

input AwsRoute53DeleteTrafficPolicyInput {
  Id: String!
  Version: Int!
}

input AwsRoute53DeleteTrafficPolicyInstanceInput {
  Id: String!
}

input AwsRoute53DeleteVPCAssociationAuthorizationInput {
  HostedZoneId: String!
  VPC: AwsRoute53S3Input!
}

input AwsRoute53DisassociateVPCFromHostedZoneInput {
  HostedZoneId: String!
  VPC: AwsRoute53S3Input!
  Comment: String
}

type AwsRoute53DisassociateVPCFromHostedZoneOutput {
  ChangeInfo: AwsRoute53S8!
}

# Amazon Route 53 Domains (2014-05-15)
type AwsRoute53domains {
  # route53domains.CheckDomainAvailability
  CheckDomainAvailability(input: AwsRoute53domainsCheckDomainAvailabilityInput!): AwsRoute53domainsCheckDomainAvailabilityOutput

  # route53domains.CheckDomainTransferability
  CheckDomainTransferability(input: AwsRoute53domainsCheckDomainTransferabilityInput!): AwsRoute53domainsCheckDomainTransferabilityOutput

  # route53domains.DeleteTagsForDomain
  DeleteTagsForDomain(input: AwsRoute53domainsDeleteTagsForDomainInput!): JSON

  # route53domains.DisableDomainAutoRenew
  DisableDomainAutoRenew(input: AwsRoute53domainsDisableDomainAutoRenewInput!): JSON

  # route53domains.DisableDomainTransferLock
  DisableDomainTransferLock(input: AwsRoute53domainsDisableDomainTransferLockInput!): AwsRoute53domainsDisableDomainTransferLockOutput

  # route53domains.EnableDomainAutoRenew
  EnableDomainAutoRenew(input: AwsRoute53domainsEnableDomainAutoRenewInput!): JSON

  # route53domains.EnableDomainTransferLock
  EnableDomainTransferLock(input: AwsRoute53domainsEnableDomainTransferLockInput!): AwsRoute53domainsEnableDomainTransferLockOutput

  # route53domains.GetContactReachabilityStatus
  GetContactReachabilityStatus(input: AwsRoute53domainsGetContactReachabilityStatusInput): AwsRoute53domainsGetContactReachabilityStatusOutput

  # route53domains.GetDomainDetail
  GetDomainDetail(input: AwsRoute53domainsGetDomainDetailInput!): AwsRoute53domainsGetDomainDetailOutput

  # route53domains.GetDomainSuggestions
  GetDomainSuggestions(input: AwsRoute53domainsGetDomainSuggestionsInput!): AwsRoute53domainsGetDomainSuggestionsOutput

  # route53domains.GetOperationDetail
  GetOperationDetail(input: AwsRoute53domainsGetOperationDetailInput!): AwsRoute53domainsGetOperationDetailOutput

  # route53domains.ListDomains
  ListDomains(input: AwsRoute53domainsListDomainsInput): AwsRoute53domainsListDomainsOutput

  # route53domains.ListOperations
  ListOperations(input: AwsRoute53domainsListOperationsInput): AwsRoute53domainsListOperationsOutput

  # route53domains.ListTagsForDomain
  ListTagsForDomain(input: AwsRoute53domainsListTagsForDomainInput!): AwsRoute53domainsListTagsForDomainOutput

  # route53domains.RegisterDomain
  RegisterDomain(input: AwsRoute53domainsRegisterDomainInput!): AwsRoute53domainsRegisterDomainOutput

  # route53domains.RenewDomain
  RenewDomain(input: AwsRoute53domainsRenewDomainInput!): AwsRoute53domainsRenewDomainOutput

  # route53domains.ResendContactReachabilityEmail
  ResendContactReachabilityEmail(input: AwsRoute53domainsResendContactReachabilityEmailInput): AwsRoute53domainsResendContactReachabilityEmailOutput

  # route53domains.RetrieveDomainAuthCode
  RetrieveDomainAuthCode(input: AwsRoute53domainsRetrieveDomainAuthCodeInput!): AwsRoute53domainsRetrieveDomainAuthCodeOutput

  # route53domains.TransferDomain
  TransferDomain(input: AwsRoute53domainsTransferDomainInput!): AwsRoute53domainsTransferDomainOutput

  # route53domains.UpdateDomainContact
  UpdateDomainContact(input: AwsRoute53domainsUpdateDomainContactInput!): AwsRoute53domainsUpdateDomainContactOutput

  # route53domains.UpdateDomainContactPrivacy
  UpdateDomainContactPrivacy(input: AwsRoute53domainsUpdateDomainContactPrivacyInput!): AwsRoute53domainsUpdateDomainContactPrivacyOutput

  # route53domains.UpdateDomainNameservers
  UpdateDomainNameservers(input: AwsRoute53domainsUpdateDomainNameserversInput!): AwsRoute53domainsUpdateDomainNameserversOutput

  # route53domains.UpdateTagsForDomain
  UpdateTagsForDomain(input: AwsRoute53domainsUpdateTagsForDomainInput!): JSON

  # route53domains.ViewBilling
  ViewBilling(input: AwsRoute53domainsViewBillingInput): AwsRoute53domainsViewBillingOutput
}

input AwsRoute53domainsCheckDomainAvailabilityInput {
  DomainName: String!
  IdnLangCode: String
}

type AwsRoute53domainsCheckDomainAvailabilityOutput {
  Availability: String!
}

input AwsRoute53domainsCheckDomainTransferabilityInput {
  DomainName: String!
  AuthCode: String
}

type AwsRoute53domainsCheckDomainTransferabilityOutput {
  Transferability: AwsRoute53domainsCheckDomainTransferabilityOutputTransferability!
}

type AwsRoute53domainsCheckDomainTransferabilityOutputTransferability {
  Transferable: String
}

input AwsRoute53domainsDeleteTagsForDomainInput {
  DomainName: String!
  TagsToDelete: [String]!
}

input AwsRoute53domainsDisableDomainAutoRenewInput {
  DomainName: String!
}

input AwsRoute53domainsDisableDomainTransferLockInput {
  DomainName: String!
}

type AwsRoute53domainsDisableDomainTransferLockOutput {
  OperationId: String!
}

input AwsRoute53domainsEnableDomainAutoRenewInput {
  DomainName: String!
}

input AwsRoute53domainsEnableDomainTransferLockInput {
  DomainName: String!
}

type AwsRoute53domainsEnableDomainTransferLockOutput {
  OperationId: String!
}

input AwsRoute53domainsGetContactReachabilityStatusInput {
  domainName: String
}

type AwsRoute53domainsGetContactReachabilityStatusOutput {
  domainName: String
  status: String
}

input AwsRoute53domainsGetDomainDetailInput {
  DomainName: String!
}

type AwsRoute53domainsGetDomainDetailOutput {
  DomainName: String!
  Nameservers: [AwsRoute53domainsSt]!
  AutoRenew: Boolean
  AdminContact: AwsRoute53domainsSz!
  RegistrantContact: AwsRoute53domainsSz!
  TechContact: AwsRoute53domainsSz!
  AdminPrivacy: Boolean
  RegistrantPrivacy: Boolean
  TechPrivacy: Boolean
  RegistrarName: String
  WhoIsServer: String
  RegistrarUrl: String
  AbuseContactEmail: String
  AbuseContactPhone: String
  RegistryDomainId: String
  CreationDate: Date
  UpdatedDate: Date
  ExpirationDate: Date
  Reseller: String
  DnsSec: String
  StatusList: [String]
}

input AwsRoute53domainsGetDomainSuggestionsInput {
  DomainName: String!
  SuggestionCount: Int!
  OnlyAvailable: Boolean!
}

type AwsRoute53domainsGetDomainSuggestionsOutput {
  SuggestionsList: [AwsRoute53domainsGetDomainSuggestionsOutputSuggestionsList]
}

type AwsRoute53domainsGetDomainSuggestionsOutputSuggestionsList {
  DomainName: String
  Availability: String
}

input AwsRoute53domainsGetOperationDetailInput {
  OperationId: String!
}

type AwsRoute53domainsGetOperationDetailOutput {
  OperationId: String
  Status: String
  Message: String
  DomainName: String
  Type: String
  SubmittedDate: Date
}

input AwsRoute53domainsListDomainsInput {
  Marker: String
  MaxItems: Int
}

type AwsRoute53domainsListDomainsOutput {
  Domains: [AwsRoute53domainsListDomainsOutputDomains]!
  NextPageMarker: String
}

type AwsRoute53domainsListDomainsOutputDomains {
  DomainName: String!
  AutoRenew: Boolean
  TransferLock: Boolean
  Expiry: Date
}

input AwsRoute53domainsListOperationsInput {
  Marker: String
  MaxItems: Int
}

type AwsRoute53domainsListOperationsOutput {
  Operations: [AwsRoute53domainsListOperationsOutputOperations]!
  NextPageMarker: String
}

type AwsRoute53domainsListOperationsOutputOperations {
  OperationId: String!
  Status: String!
  Type: String!
  SubmittedDate: Date!
}

input AwsRoute53domainsListTagsForDomainInput {
  DomainName: String!
}

type AwsRoute53domainsListTagsForDomainOutput {
  TagList: [AwsRoute53domainsS29]!
}

input AwsRoute53domainsRegisterDomainInput {
  DomainName: String!
  IdnLangCode: String
  DurationInYears: Int!
  AutoRenew: Boolean
  AdminContact: AwsRoute53domainsSzInput!
  RegistrantContact: AwsRoute53domainsSzInput!
  TechContact: AwsRoute53domainsSzInput!
  PrivacyProtectAdminContact: Boolean
  PrivacyProtectRegistrantContact: Boolean
  PrivacyProtectTechContact: Boolean
}

type AwsRoute53domainsRegisterDomainOutput {
  OperationId: String!
}

input AwsRoute53domainsRenewDomainInput {
  DomainName: String!
  DurationInYears: Int
  CurrentExpiryYear: Int!
}

type AwsRoute53domainsRenewDomainOutput {
  OperationId: String!
}

input AwsRoute53domainsResendContactReachabilityEmailInput {
  domainName: String
}

type AwsRoute53domainsResendContactReachabilityEmailOutput {
  domainName: String
  emailAddress: String
  isAlreadyVerified: Boolean
}

input AwsRoute53domainsRetrieveDomainAuthCodeInput {
  DomainName: String!
}

type AwsRoute53domainsRetrieveDomainAuthCodeOutput {
  AuthCode: String!
}

type AwsRoute53domainsS29 {
  Key: String
  Value: String
}

input AwsRoute53domainsS29Input {
  Key: String
  Value: String
}

type AwsRoute53domainsSt {
  Name: String!
  GlueIps: [String]
}

input AwsRoute53domainsStInput {
  Name: String!
  GlueIps: [String]
}

type AwsRoute53domainsSz {
  FirstName: String
  LastName: String
  ContactType: String
  OrganizationName: String
  AddressLine1: String
  AddressLine2: String
  City: String
  State: String
  CountryCode: String
  ZipCode: String
  PhoneNumber: String
  Email: String
  Fax: String
  ExtraParams: [AwsRoute53domainsSzExtraParams]
}

type AwsRoute53domainsSzExtraParams {
  Name: String!
  Value: String!
}

input AwsRoute53domainsSzExtraParamsInput {
  Name: String!
  Value: String!
}

input AwsRoute53domainsSzInput {
  FirstName: String
  LastName: String
  ContactType: String
  OrganizationName: String
  AddressLine1: String
  AddressLine2: String
  City: String
  State: String
  CountryCode: String
  ZipCode: String
  PhoneNumber: String
  Email: String
  Fax: String
  ExtraParams: [AwsRoute53domainsSzExtraParamsInput]
}

input AwsRoute53domainsTransferDomainInput {
  DomainName: String!
  IdnLangCode: String
  DurationInYears: Int!
  Nameservers: [AwsRoute53domainsStInput]
  AuthCode: String
  AutoRenew: Boolean
  AdminContact: AwsRoute53domainsSzInput!
  RegistrantContact: AwsRoute53domainsSzInput!
  TechContact: AwsRoute53domainsSzInput!
  PrivacyProtectAdminContact: Boolean
  PrivacyProtectRegistrantContact: Boolean
  PrivacyProtectTechContact: Boolean
}

type AwsRoute53domainsTransferDomainOutput {
  OperationId: String!
}

input AwsRoute53domainsUpdateDomainContactInput {
  DomainName: String!
  AdminContact: AwsRoute53domainsSzInput
  RegistrantContact: AwsRoute53domainsSzInput
  TechContact: AwsRoute53domainsSzInput
}

type AwsRoute53domainsUpdateDomainContactOutput {
  OperationId: String!
}

input AwsRoute53domainsUpdateDomainContactPrivacyInput {
  DomainName: String!
  AdminPrivacy: Boolean
  RegistrantPrivacy: Boolean
  TechPrivacy: Boolean
}

type AwsRoute53domainsUpdateDomainContactPrivacyOutput {
  OperationId: String!
}

input AwsRoute53domainsUpdateDomainNameserversInput {
  DomainName: String!
  FIAuthKey: String
  Nameservers: [AwsRoute53domainsStInput]!
}

type AwsRoute53domainsUpdateDomainNameserversOutput {
  OperationId: String!
}

input AwsRoute53domainsUpdateTagsForDomainInput {
  DomainName: String!
  TagsToUpdate: [AwsRoute53domainsS29Input]
}

input AwsRoute53domainsViewBillingInput {
  Start: Date
  End: Date
  Marker: String
  MaxItems: Int
}

type AwsRoute53domainsViewBillingOutput {
  NextPageMarker: String
  BillingRecords: [AwsRoute53domainsViewBillingOutputBillingRecords]
}

type AwsRoute53domainsViewBillingOutputBillingRecords {
  DomainName: String
  Operation: String
  InvoiceId: String
  BillDate: Date
  Price: JSON
}

input AwsRoute53GetAccountLimitInput {
  Type: String!
}

type AwsRoute53GetAccountLimitOutput {
  Limit: AwsRoute53GetAccountLimitOutputLimit!
  Count: JSON!
}

type AwsRoute53GetAccountLimitOutputLimit {
  Type: String!
  Value: JSON!
}

input AwsRoute53GetChangeInput {
  Id: String!
}

type AwsRoute53GetChangeOutput {
  ChangeInfo: AwsRoute53S8!
}

type AwsRoute53GetCheckerIpRangesOutput {
  CheckerIpRanges: [String]!
}

input AwsRoute53GetGeoLocationInput {
  ContinentCode: String
  CountryCode: String
  SubdivisionCode: String
}

type AwsRoute53GetGeoLocationOutput {
  GeoLocationDetails: AwsRoute53S46!
}

type AwsRoute53GetHealthCheckCountOutput {
  HealthCheckCount: JSON!
}

input AwsRoute53GetHealthCheckInput {
  HealthCheckId: String!
}

input AwsRoute53GetHealthCheckLastFailureReasonInput {
  HealthCheckId: String!
}

type AwsRoute53GetHealthCheckLastFailureReasonOutput {
  HealthCheckObservations: [AwsRoute53S4h]!
}

type AwsRoute53GetHealthCheckOutput {
  HealthCheck: AwsRoute53S1y!
}

input AwsRoute53GetHealthCheckStatusInput {
  HealthCheckId: String!
}

type AwsRoute53GetHealthCheckStatusOutput {
  HealthCheckObservations: [AwsRoute53S4h]!
}

type AwsRoute53GetHostedZoneCountOutput {
  HostedZoneCount: JSON!
}

input AwsRoute53GetHostedZoneInput {
  Id: String!
}

input AwsRoute53GetHostedZoneLimitInput {
  Type: String!
  HostedZoneId: String!
}

type AwsRoute53GetHostedZoneLimitOutput {
  Limit: AwsRoute53GetHostedZoneLimitOutputLimit!
  Count: JSON!
}

type AwsRoute53GetHostedZoneLimitOutputLimit {
  Type: String!
  Value: JSON!
}

type AwsRoute53GetHostedZoneOutput {
  HostedZone: AwsRoute53S2j!
  DelegationSet: AwsRoute53S2l
  VPCs: [AwsRoute53S3]
}

input AwsRoute53GetQueryLoggingConfigInput {
  Id: String!
}

type AwsRoute53GetQueryLoggingConfigOutput {
  QueryLoggingConfig: AwsRoute53S2q!
}

input AwsRoute53GetReusableDelegationSetInput {
  Id: String!
}

input AwsRoute53GetReusableDelegationSetLimitInput {
  Type: String!
  DelegationSetId: String!
}

type AwsRoute53GetReusableDelegationSetLimitOutput {
  Limit: AwsRoute53GetReusableDelegationSetLimitOutputLimit!
  Count: JSON!
}

type AwsRoute53GetReusableDelegationSetLimitOutputLimit {
  Type: String!
  Value: JSON!
}

type AwsRoute53GetReusableDelegationSetOutput {
  DelegationSet: AwsRoute53S2l!
}

input AwsRoute53GetTrafficPolicyInput {
  Id: String!
  Version: Int!
}

type AwsRoute53GetTrafficPolicyInstanceCountOutput {
  TrafficPolicyInstanceCount: Int!
}

input AwsRoute53GetTrafficPolicyInstanceInput {
  Id: String!
}

type AwsRoute53GetTrafficPolicyInstanceOutput {
  TrafficPolicyInstance: AwsRoute53S34!
}

type AwsRoute53GetTrafficPolicyOutput {
  TrafficPolicy: AwsRoute53S2z!
}

input AwsRoute53ListGeoLocationsInput {
  StartContinentCode: String
  StartCountryCode: String
  StartSubdivisionCode: String
  MaxItems: String
}

type AwsRoute53ListGeoLocationsOutput {
  GeoLocationDetailsList: [AwsRoute53S46]!
  IsTruncated: Boolean!
  NextContinentCode: String
  NextCountryCode: String
  NextSubdivisionCode: String
  MaxItems: String!
}

input AwsRoute53ListHealthChecksInput {
  Marker: String
  MaxItems: String
}

type AwsRoute53ListHealthChecksOutput {
  HealthChecks: [AwsRoute53S1y]!
  Marker: String!
  IsTruncated: Boolean!
  NextMarker: String
  MaxItems: String!
}

input AwsRoute53ListHostedZonesByNameInput {
  DNSName: String
  HostedZoneId: String
  MaxItems: String
}

type AwsRoute53ListHostedZonesByNameOutput {
  HostedZones: [AwsRoute53S2j]!
  DNSName: String
  HostedZoneId: String
  IsTruncated: Boolean!
  NextDNSName: String
  NextHostedZoneId: String
  MaxItems: String!
}

input AwsRoute53ListHostedZonesInput {
  Marker: String
  MaxItems: String
  DelegationSetId: String
}

type AwsRoute53ListHostedZonesOutput {
  HostedZones: [AwsRoute53S2j]!
  Marker: String!
  IsTruncated: Boolean!
  NextMarker: String
  MaxItems: String!
}

input AwsRoute53ListQueryLoggingConfigsInput {
  HostedZoneId: String
  NextToken: String
  MaxResults: String
}

type AwsRoute53ListQueryLoggingConfigsOutput {
  QueryLoggingConfigs: [AwsRoute53S2q]!
  NextToken: String
}

input AwsRoute53ListResourceRecordSetsInput {
  HostedZoneId: String!
  StartRecordName: String
  StartRecordType: String
  StartRecordIdentifier: String
  MaxItems: String
}

type AwsRoute53ListResourceRecordSetsOutput {
  ResourceRecordSets: [AwsRoute53Sh]!
  IsTruncated: Boolean!
  NextRecordName: String
  NextRecordType: String
  NextRecordIdentifier: String
  MaxItems: String!
}

input AwsRoute53ListReusableDelegationSetsInput {
  Marker: String
  MaxItems: String
}

type AwsRoute53ListReusableDelegationSetsOutput {
  DelegationSets: [AwsRoute53S2l]!
  Marker: String!
  IsTruncated: Boolean!
  NextMarker: String
  MaxItems: String!
}

input AwsRoute53ListTagsForResourceInput {
  ResourceType: String!
  ResourceId: String!
}

type AwsRoute53ListTagsForResourceOutput {
  ResourceTagSet: AwsRoute53S63!
}

input AwsRoute53ListTagsForResourcesInput {
  ResourceType: String!
  ResourceIds: [String]!
}

type AwsRoute53ListTagsForResourcesOutput {
  ResourceTagSets: [AwsRoute53S63]!
}

input AwsRoute53ListTrafficPoliciesInput {
  TrafficPolicyIdMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPoliciesOutput {
  TrafficPolicySummaries: [AwsRoute53ListTrafficPoliciesOutputTrafficPolicySummaries]!
  IsTruncated: Boolean!
  TrafficPolicyIdMarker: String!
  MaxItems: String!
}

type AwsRoute53ListTrafficPoliciesOutputTrafficPolicySummaries {
  Id: String!
  Name: String!
  Type: String!
  LatestVersion: Int!
  TrafficPolicyCount: Int!
}

input AwsRoute53ListTrafficPolicyInstancesByHostedZoneInput {
  HostedZoneId: String!
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPolicyInstancesByHostedZoneOutput {
  TrafficPolicyInstances: [AwsRoute53S34]!
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  IsTruncated: Boolean!
  MaxItems: String!
}

input AwsRoute53ListTrafficPolicyInstancesByPolicyInput {
  TrafficPolicyId: String!
  TrafficPolicyVersion: Int!
  HostedZoneIdMarker: String
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPolicyInstancesByPolicyOutput {
  TrafficPolicyInstances: [AwsRoute53S34]!
  HostedZoneIdMarker: String
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  IsTruncated: Boolean!
  MaxItems: String!
}

input AwsRoute53ListTrafficPolicyInstancesInput {
  HostedZoneIdMarker: String
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPolicyInstancesOutput {
  TrafficPolicyInstances: [AwsRoute53S34]!
  HostedZoneIdMarker: String
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  IsTruncated: Boolean!
  MaxItems: String!
}

input AwsRoute53ListTrafficPolicyVersionsInput {
  Id: String!
  TrafficPolicyVersionMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPolicyVersionsOutput {
  TrafficPolicies: [AwsRoute53S2z]!
  IsTruncated: Boolean!
  TrafficPolicyVersionMarker: String!
  MaxItems: String!
}

input AwsRoute53ListVPCAssociationAuthorizationsInput {
  HostedZoneId: String!
  NextToken: String
  MaxResults: String
}

type AwsRoute53ListVPCAssociationAuthorizationsOutput {
  HostedZoneId: String!
  NextToken: String
  VPCs: [AwsRoute53S3]!
}

type AwsRoute53S15 {
  Key: String
  Value: String
}

input AwsRoute53S15Input {
  Key: String
  Value: String
}

type AwsRoute53S1d {
  IPAddress: String
  Port: Int
  Type: String!
  ResourcePath: String
  FullyQualifiedDomainName: String
  SearchString: String
  RequestInterval: Int
  FailureThreshold: Int
  MeasureLatency: Boolean
  Inverted: Boolean
  HealthThreshold: Int
  ChildHealthChecks: [String]
  EnableSNI: Boolean
  Regions: [String]
  AlarmIdentifier: AwsRoute53S1t
  InsufficientDataHealthStatus: String
}

input AwsRoute53S1dInput {
  IPAddress: String
  Port: Int
  Type: String!
  ResourcePath: String
  FullyQualifiedDomainName: String
  SearchString: String
  RequestInterval: Int
  FailureThreshold: Int
  MeasureLatency: Boolean
  Inverted: Boolean
  HealthThreshold: Int
  ChildHealthChecks: [String]
  EnableSNI: Boolean
  Regions: [String]
  AlarmIdentifier: AwsRoute53S1tInput
  InsufficientDataHealthStatus: String
}

type AwsRoute53S1t {
  Region: String!
  Name: String!
}

input AwsRoute53S1tInput {
  Region: String!
  Name: String!
}

type AwsRoute53S1y {
  Id: String!
  CallerReference: String!
  LinkedService: AwsRoute53S1z
  HealthCheckConfig: AwsRoute53S1d!
  HealthCheckVersion: JSON!
  CloudWatchAlarmConfiguration: AwsRoute53S1yCloudWatchAlarmConfiguration
}

type AwsRoute53S1yCloudWatchAlarmConfiguration {
  EvaluationPeriods: Int!
  Threshold: JSON!
  ComparisonOperator: String!
  Period: Int!
  MetricName: String!
  Namespace: String!
  Statistic: String!
  Dimensions: [AwsRoute53S1yCloudWatchAlarmConfigurationDimensions]
}

type AwsRoute53S1yCloudWatchAlarmConfigurationDimensions {
  Name: String!
  Value: String!
}

type AwsRoute53S1z {
  ServicePrincipal: String
  Description: String
}

type AwsRoute53S2g {
  Comment: String
  PrivateZone: Boolean
}

input AwsRoute53S2gInput {
  Comment: String
  PrivateZone: Boolean
}

type AwsRoute53S2j {
  Id: String!
  Name: String!
  CallerReference: String!
  Config: AwsRoute53S2g
  ResourceRecordSetCount: JSON
  LinkedService: AwsRoute53S1z
}

type AwsRoute53S2l {
  Id: String
  CallerReference: String
  NameServers: [String]!
}

type AwsRoute53S2q {
  Id: String!
  HostedZoneId: String!
  CloudWatchLogsLogGroupArn: String!
}

type AwsRoute53S2z {
  Id: String!
  Version: Int!
  Name: String!
  Type: String!
  Document: String!
  Comment: String
}

type AwsRoute53S3 {
  VPCRegion: String
  VPCId: String
}

type AwsRoute53S34 {
  Id: String!
  HostedZoneId: String!
  Name: String!
  TTL: JSON!
  State: String!
  Message: String!
  TrafficPolicyId: String!
  TrafficPolicyVersion: Int!
  TrafficPolicyType: String!
}

input AwsRoute53S3Input {
  VPCRegion: String
  VPCId: String
}

type AwsRoute53S46 {
  ContinentCode: String
  ContinentName: String
  CountryCode: String
  CountryName: String
  SubdivisionCode: String
  SubdivisionName: String
}

type AwsRoute53S4h {
  Region: String
  IPAddress: String
  StatusReport: AwsRoute53S4hStatusReport
}

type AwsRoute53S4hStatusReport {
  Status: String
  CheckedTime: Date
}

type AwsRoute53S63 {
  ResourceType: String
  ResourceId: String
  Tags: [AwsRoute53S15]
}

type AwsRoute53S8 {
  Id: String!
  Status: String!
  SubmittedAt: Date!
  Comment: String
}

type AwsRoute53Sh {
  Name: String!
  Type: String!
  SetIdentifier: String
  Weight: JSON
  Region: String
  GeoLocation: AwsRoute53ShGeoLocation
  Failover: String
  MultiValueAnswer: Boolean
  TTL: JSON
  ResourceRecords: [AwsRoute53ShResourceRecords]
  AliasTarget: AwsRoute53ShAliasTarget
  HealthCheckId: String
  TrafficPolicyInstanceId: String
}

type AwsRoute53ShAliasTarget {
  HostedZoneId: String!
  DNSName: String!
  EvaluateTargetHealth: Boolean!
}

input AwsRoute53ShAliasTargetInput {
  HostedZoneId: String!
  DNSName: String!
  EvaluateTargetHealth: Boolean!
}

type AwsRoute53ShGeoLocation {
  ContinentCode: String
  CountryCode: String
  SubdivisionCode: String
}

input AwsRoute53ShGeoLocationInput {
  ContinentCode: String
  CountryCode: String
  SubdivisionCode: String
}

input AwsRoute53ShInput {
  Name: String!
  Type: String!
  SetIdentifier: String
  Weight: JSON
  Region: String
  GeoLocation: AwsRoute53ShGeoLocationInput
  Failover: String
  MultiValueAnswer: Boolean
  TTL: JSON
  ResourceRecords: [AwsRoute53ShResourceRecordsInput]
  AliasTarget: AwsRoute53ShAliasTargetInput
  HealthCheckId: String
  TrafficPolicyInstanceId: String
}

type AwsRoute53ShResourceRecords {
  Value: String!
}

input AwsRoute53ShResourceRecordsInput {
  Value: String!
}

input AwsRoute53TestDNSAnswerInput {
  HostedZoneId: String!
  RecordName: String!
  RecordType: String!
  ResolverIP: String
  EDNS0ClientSubnetIP: String
  EDNS0ClientSubnetMask: String
}

type AwsRoute53TestDNSAnswerOutput {
  Nameserver: String!
  RecordName: String!
  RecordType: String!
  RecordData: [String]!
  ResponseCode: String!
  Protocol: String!
}

input AwsRoute53UpdateHealthCheckInput {
  HealthCheckId: String!
  HealthCheckVersion: JSON
  IPAddress: String
  Port: Int
  ResourcePath: String
  FullyQualifiedDomainName: String
  SearchString: String
  FailureThreshold: Int
  Inverted: Boolean
  HealthThreshold: Int
  ChildHealthChecks: [String]
  EnableSNI: Boolean
  Regions: [String]
  AlarmIdentifier: AwsRoute53S1tInput
  InsufficientDataHealthStatus: String
  ResetElements: [String]
}

type AwsRoute53UpdateHealthCheckOutput {
  HealthCheck: AwsRoute53S1y!
}

input AwsRoute53UpdateHostedZoneCommentInput {
  Id: String!
  Comment: String
}

type AwsRoute53UpdateHostedZoneCommentOutput {
  HostedZone: AwsRoute53S2j!
}

input AwsRoute53UpdateTrafficPolicyCommentInput {
  Id: String!
  Version: Int!
  Comment: String!
}

type AwsRoute53UpdateTrafficPolicyCommentOutput {
  TrafficPolicy: AwsRoute53S2z!
}

input AwsRoute53UpdateTrafficPolicyInstanceInput {
  Id: String!
  TTL: JSON!
  TrafficPolicyId: String!
  TrafficPolicyVersion: Int!
}

type AwsRoute53UpdateTrafficPolicyInstanceOutput {
  TrafficPolicyInstance: AwsRoute53S34!
}

# Amazon Simple Storage Service (2006-03-01)
type AwsS3 {
  # s3.AbortMultipartUpload
  AbortMultipartUpload(input: AwsS3AbortMultipartUploadInput!): AwsS3AbortMultipartUploadOutput

  # s3.CompleteMultipartUpload
  CompleteMultipartUpload(input: AwsS3CompleteMultipartUploadInput!): AwsS3CompleteMultipartUploadOutput

  # s3.CopyObject
  CopyObject(input: AwsS3CopyObjectInput!): AwsS3CopyObjectOutput

  # s3.CreateBucket
  CreateBucket(input: AwsS3CreateBucketInput!): AwsS3CreateBucketOutput

  # s3.CreateMultipartUpload
  CreateMultipartUpload(input: AwsS3CreateMultipartUploadInput!): AwsS3CreateMultipartUploadOutput

  # s3.DeleteBucket
  DeleteBucket(input: AwsS3DeleteBucketInput!): JSON

  # s3.DeleteBucketAnalyticsConfiguration
  DeleteBucketAnalyticsConfiguration(input: AwsS3DeleteBucketAnalyticsConfigurationInput!): JSON

  # s3.DeleteBucketCors
  DeleteBucketCors(input: AwsS3DeleteBucketCorsInput!): JSON

  # s3.DeleteBucketEncryption
  DeleteBucketEncryption(input: AwsS3DeleteBucketEncryptionInput!): JSON

  # s3.DeleteBucketInventoryConfiguration
  DeleteBucketInventoryConfiguration(input: AwsS3DeleteBucketInventoryConfigurationInput!): JSON

  # s3.DeleteBucketLifecycle
  DeleteBucketLifecycle(input: AwsS3DeleteBucketLifecycleInput!): JSON

  # s3.DeleteBucketMetricsConfiguration
  DeleteBucketMetricsConfiguration(input: AwsS3DeleteBucketMetricsConfigurationInput!): JSON

  # s3.DeleteBucketPolicy
  DeleteBucketPolicy(input: AwsS3DeleteBucketPolicyInput!): JSON

  # s3.DeleteBucketReplication
  DeleteBucketReplication(input: AwsS3DeleteBucketReplicationInput!): JSON

  # s3.DeleteBucketTagging
  DeleteBucketTagging(input: AwsS3DeleteBucketTaggingInput!): JSON

  # s3.DeleteBucketWebsite
  DeleteBucketWebsite(input: AwsS3DeleteBucketWebsiteInput!): JSON

  # s3.DeleteObject
  DeleteObject(input: AwsS3DeleteObjectInput!): AwsS3DeleteObjectOutput

  # s3.DeleteObjectTagging
  DeleteObjectTagging(input: AwsS3DeleteObjectTaggingInput!): AwsS3DeleteObjectTaggingOutput

  # s3.DeleteObjects
  DeleteObjects(input: AwsS3DeleteObjectsInput!): AwsS3DeleteObjectsOutput

  # s3.GetBucketAccelerateConfiguration
  GetBucketAccelerateConfiguration(input: AwsS3GetBucketAccelerateConfigurationInput!): AwsS3GetBucketAccelerateConfigurationOutput

  # s3.GetBucketAcl
  GetBucketAcl(input: AwsS3GetBucketAclInput!): AwsS3GetBucketAclOutput

  # s3.GetBucketAnalyticsConfiguration
  GetBucketAnalyticsConfiguration(input: AwsS3GetBucketAnalyticsConfigurationInput!): AwsS3GetBucketAnalyticsConfigurationOutput

  # s3.GetBucketCors
  GetBucketCors(input: AwsS3GetBucketCorsInput!): AwsS3GetBucketCorsOutput

  # s3.GetBucketEncryption
  GetBucketEncryption(input: AwsS3GetBucketEncryptionInput!): AwsS3GetBucketEncryptionOutput

  # s3.GetBucketInventoryConfiguration
  GetBucketInventoryConfiguration(input: AwsS3GetBucketInventoryConfigurationInput!): AwsS3GetBucketInventoryConfigurationOutput

  # s3.GetBucketLifecycle
  GetBucketLifecycle(input: AwsS3GetBucketLifecycleInput!): AwsS3GetBucketLifecycleOutput

  # s3.GetBucketLifecycleConfiguration
  GetBucketLifecycleConfiguration(input: AwsS3GetBucketLifecycleConfigurationInput!): AwsS3GetBucketLifecycleConfigurationOutput

  # s3.GetBucketLocation
  GetBucketLocation(input: AwsS3GetBucketLocationInput!): AwsS3GetBucketLocationOutput

  # s3.GetBucketLogging
  GetBucketLogging(input: AwsS3GetBucketLoggingInput!): AwsS3GetBucketLoggingOutput

  # s3.GetBucketMetricsConfiguration
  GetBucketMetricsConfiguration(input: AwsS3GetBucketMetricsConfigurationInput!): AwsS3GetBucketMetricsConfigurationOutput

  # s3.GetBucketNotification
  GetBucketNotification(input: JSON): JSON

  # s3.GetBucketNotificationConfiguration
  GetBucketNotificationConfiguration(input: JSON): JSON

  # s3.GetBucketPolicy
  GetBucketPolicy(input: AwsS3GetBucketPolicyInput!): AwsS3GetBucketPolicyOutput

  # s3.GetBucketReplication
  GetBucketReplication(input: AwsS3GetBucketReplicationInput!): AwsS3GetBucketReplicationOutput

  # s3.GetBucketRequestPayment
  GetBucketRequestPayment(input: AwsS3GetBucketRequestPaymentInput!): AwsS3GetBucketRequestPaymentOutput

  # s3.GetBucketTagging
  GetBucketTagging(input: AwsS3GetBucketTaggingInput!): AwsS3GetBucketTaggingOutput

  # s3.GetBucketVersioning
  GetBucketVersioning(input: AwsS3GetBucketVersioningInput!): AwsS3GetBucketVersioningOutput

  # s3.GetBucketWebsite
  GetBucketWebsite(input: AwsS3GetBucketWebsiteInput!): AwsS3GetBucketWebsiteOutput

  # s3.GetObject
  GetObject(input: AwsS3GetObjectInput!): AwsS3GetObjectOutput

  # s3.GetObjectAcl
  GetObjectAcl(input: AwsS3GetObjectAclInput!): AwsS3GetObjectAclOutput

  # s3.GetObjectTagging
  GetObjectTagging(input: AwsS3GetObjectTaggingInput!): AwsS3GetObjectTaggingOutput

  # s3.GetObjectTorrent
  GetObjectTorrent(input: AwsS3GetObjectTorrentInput!): AwsS3GetObjectTorrentOutput

  # s3.HeadBucket
  HeadBucket(input: AwsS3HeadBucketInput!): JSON

  # s3.HeadObject
  HeadObject(input: AwsS3HeadObjectInput!): AwsS3HeadObjectOutput

  # s3.ListBucketAnalyticsConfigurations
  ListBucketAnalyticsConfigurations(input: AwsS3ListBucketAnalyticsConfigurationsInput!): AwsS3ListBucketAnalyticsConfigurationsOutput

  # s3.ListBucketInventoryConfigurations
  ListBucketInventoryConfigurations(input: AwsS3ListBucketInventoryConfigurationsInput!): AwsS3ListBucketInventoryConfigurationsOutput

  # s3.ListBucketMetricsConfigurations
  ListBucketMetricsConfigurations(input: AwsS3ListBucketMetricsConfigurationsInput!): AwsS3ListBucketMetricsConfigurationsOutput

  # s3.ListBuckets
  ListBuckets: AwsS3ListBucketsOutput

  # s3.ListMultipartUploads
  ListMultipartUploads(input: AwsS3ListMultipartUploadsInput!): AwsS3ListMultipartUploadsOutput

  # s3.ListObjectVersions
  ListObjectVersions(input: AwsS3ListObjectVersionsInput!): AwsS3ListObjectVersionsOutput

  # s3.ListObjects
  ListObjects(input: AwsS3ListObjectsInput!): AwsS3ListObjectsOutput

  # s3.ListObjectsV2
  ListObjectsV2(input: AwsS3ListObjectsV2Input!): AwsS3ListObjectsV2Output

  # s3.ListParts
  ListParts(input: AwsS3ListPartsInput!): AwsS3ListPartsOutput

  # s3.PutBucketAccelerateConfiguration
  PutBucketAccelerateConfiguration(input: AwsS3PutBucketAccelerateConfigurationInput!): JSON

  # s3.PutBucketAcl
  PutBucketAcl(input: AwsS3PutBucketAclInput!): JSON

  # s3.PutBucketAnalyticsConfiguration
  PutBucketAnalyticsConfiguration(input: AwsS3PutBucketAnalyticsConfigurationInput!): JSON

  # s3.PutBucketCors
  PutBucketCors(input: AwsS3PutBucketCorsInput!): JSON

  # s3.PutBucketEncryption
  PutBucketEncryption(input: AwsS3PutBucketEncryptionInput!): JSON

  # s3.PutBucketInventoryConfiguration
  PutBucketInventoryConfiguration(input: AwsS3PutBucketInventoryConfigurationInput!): JSON

  # s3.PutBucketLifecycle
  PutBucketLifecycle(input: AwsS3PutBucketLifecycleInput!): JSON

  # s3.PutBucketLifecycleConfiguration
  PutBucketLifecycleConfiguration(input: AwsS3PutBucketLifecycleConfigurationInput!): JSON

  # s3.PutBucketLogging
  PutBucketLogging(input: AwsS3PutBucketLoggingInput!): JSON

  # s3.PutBucketMetricsConfiguration
  PutBucketMetricsConfiguration(input: AwsS3PutBucketMetricsConfigurationInput!): JSON

  # s3.PutBucketNotification
  PutBucketNotification(input: AwsS3PutBucketNotificationInput!): JSON

  # s3.PutBucketNotificationConfiguration
  PutBucketNotificationConfiguration(input: AwsS3PutBucketNotificationConfigurationInput!): JSON

  # s3.PutBucketPolicy
  PutBucketPolicy(input: AwsS3PutBucketPolicyInput!): JSON

  # s3.PutBucketReplication
  PutBucketReplication(input: AwsS3PutBucketReplicationInput!): JSON

  # s3.PutBucketRequestPayment
  PutBucketRequestPayment(input: AwsS3PutBucketRequestPaymentInput!): JSON

  # s3.PutBucketTagging
  PutBucketTagging(input: AwsS3PutBucketTaggingInput!): JSON

  # s3.PutBucketVersioning
  PutBucketVersioning(input: AwsS3PutBucketVersioningInput!): JSON

  # s3.PutBucketWebsite
  PutBucketWebsite(input: AwsS3PutBucketWebsiteInput!): JSON

  # s3.PutObject
  PutObject(input: AwsS3PutObjectInput!): AwsS3PutObjectOutput

  # s3.PutObjectAcl
  PutObjectAcl(input: AwsS3PutObjectAclInput!): AwsS3PutObjectAclOutput

  # s3.PutObjectTagging
  PutObjectTagging(input: AwsS3PutObjectTaggingInput!): AwsS3PutObjectTaggingOutput

  # s3.RestoreObject
  RestoreObject(input: AwsS3RestoreObjectInput!): AwsS3RestoreObjectOutput

  # s3.UploadPart
  UploadPart(input: AwsS3UploadPartInput!): AwsS3UploadPartOutput

  # s3.UploadPartCopy
  UploadPartCopy(input: AwsS3UploadPartCopyInput!): AwsS3UploadPartCopyOutput
}

input AwsS3AbortMultipartUploadInput {
  Bucket: String!
  Key: String!
  UploadId: String!
  RequestPayer: String
}

type AwsS3AbortMultipartUploadOutput {
  RequestCharged: String
}

input AwsS3CompleteMultipartUploadInput {
  Bucket: String!
  Key: String!
  MultipartUpload: AwsS3CompleteMultipartUploadMultipartUploadInput
  UploadId: String!
  RequestPayer: String
}

input AwsS3CompleteMultipartUploadMultipartUploadInput {
  Parts: [AwsS3CompleteMultipartUploadMultipartUploadPartsInput]
}

input AwsS3CompleteMultipartUploadMultipartUploadPartsInput {
  ETag: String
  PartNumber: Int
}

type AwsS3CompleteMultipartUploadOutput {
  Location: String
  Bucket: String
  Key: String
  Expiration: String
  ETag: String
  ServerSideEncryption: String
  VersionId: String
  SSEKMSKeyId: String
  RequestCharged: String
}

input AwsS3CopyObjectInput {
  ACL: String
  Bucket: String!
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentType: String
  CopySource: String!
  CopySourceIfMatch: String
  CopySourceIfModifiedSince: Date
  CopySourceIfNoneMatch: String
  CopySourceIfUnmodifiedSince: Date
  Expires: Date
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWriteACP: String
  Key: String!
  Metadata: JSON
  MetadataDirective: String
  TaggingDirective: String
  ServerSideEncryption: String
  StorageClass: String
  WebsiteRedirectLocation: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  CopySourceSSECustomerAlgorithm: String
  CopySourceSSECustomerKey: JSON
  CopySourceSSECustomerKeyMD5: String
  RequestPayer: String
  Tagging: String
}

type AwsS3CopyObjectOutput {
  CopyObjectResult: AwsS3CopyObjectOutputCopyObjectResult
  Expiration: String
  CopySourceVersionId: String
  VersionId: String
  ServerSideEncryption: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestCharged: String
}

type AwsS3CopyObjectOutputCopyObjectResult {
  ETag: String
  LastModified: Date
}

input AwsS3CreateBucketCreateBucketConfigurationInput {
  LocationConstraint: String
}

input AwsS3CreateBucketInput {
  ACL: String
  Bucket: String!
  CreateBucketConfiguration: AwsS3CreateBucketCreateBucketConfigurationInput
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWrite: String
  GrantWriteACP: String
}

type AwsS3CreateBucketOutput {
  Location: String
}

input AwsS3CreateMultipartUploadInput {
  ACL: String
  Bucket: String!
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentType: String
  Expires: Date
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWriteACP: String
  Key: String!
  Metadata: JSON
  ServerSideEncryption: String
  StorageClass: String
  WebsiteRedirectLocation: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestPayer: String
  Tagging: String
}

type AwsS3CreateMultipartUploadOutput {
  AbortDate: Date
  AbortRuleId: String
  Bucket: String
  Key: String
  UploadId: String
  ServerSideEncryption: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestCharged: String
}

input AwsS3DeleteBucketAnalyticsConfigurationInput {
  Bucket: String!
  Id: String!
}

input AwsS3DeleteBucketCorsInput {
  Bucket: String!
}

input AwsS3DeleteBucketEncryptionInput {
  Bucket: String!
}

input AwsS3DeleteBucketInput {
  Bucket: String!
}

input AwsS3DeleteBucketInventoryConfigurationInput {
  Bucket: String!
  Id: String!
}

input AwsS3DeleteBucketLifecycleInput {
  Bucket: String!
}

input AwsS3DeleteBucketMetricsConfigurationInput {
  Bucket: String!
  Id: String!
}

input AwsS3DeleteBucketPolicyInput {
  Bucket: String!
}

input AwsS3DeleteBucketReplicationInput {
  Bucket: String!
}

input AwsS3DeleteBucketTaggingInput {
  Bucket: String!
}

input AwsS3DeleteBucketWebsiteInput {
  Bucket: String!
}

input AwsS3DeleteObjectInput {
  Bucket: String!
  Key: String!
  MFA: String
  VersionId: String
  RequestPayer: String
}

type AwsS3DeleteObjectOutput {
  DeleteMarker: Boolean
  VersionId: String
  RequestCharged: String
}

input AwsS3DeleteObjectsDeleteInput {
  Objects: [AwsS3DeleteObjectsDeleteObjectsInput]!
  Quiet: Boolean
}

input AwsS3DeleteObjectsDeleteObjectsInput {
  Key: String!
  VersionId: String
}

input AwsS3DeleteObjectsInput {
  Bucket: String!
  Delete: AwsS3DeleteObjectsDeleteInput!
  MFA: String
  RequestPayer: String
}

type AwsS3DeleteObjectsOutput {
  Deleted: [AwsS3DeleteObjectsOutputDeleted]
  RequestCharged: String
  Errors: [AwsS3DeleteObjectsOutputErrors]
}

type AwsS3DeleteObjectsOutputDeleted {
  Key: String
  VersionId: String
  DeleteMarker: Boolean
  DeleteMarkerVersionId: String
}

type AwsS3DeleteObjectsOutputErrors {
  Key: String
  VersionId: String
  Code: String
  Message: String
}

input AwsS3DeleteObjectTaggingInput {
  Bucket: String!
  Key: String!
  VersionId: String
}

type AwsS3DeleteObjectTaggingOutput {
  VersionId: String
}

input AwsS3GetBucketAccelerateConfigurationInput {
  Bucket: String!
}

type AwsS3GetBucketAccelerateConfigurationOutput {
  Status: String
}

input AwsS3GetBucketAclInput {
  Bucket: String!
}

type AwsS3GetBucketAclOutput {
  Owner: AwsS3S2v
  Grants: [AwsS3S2y]
}

input AwsS3GetBucketAnalyticsConfigurationInput {
  Bucket: String!
  Id: String!
}

type AwsS3GetBucketAnalyticsConfigurationOutput {
  AnalyticsConfiguration: AwsS3S37
}

input AwsS3GetBucketCorsInput {
  Bucket: String!
}

type AwsS3GetBucketCorsOutput {
  CORSRules: [AwsS3S3n]
}

input AwsS3GetBucketEncryptionInput {
  Bucket: String!
}

type AwsS3GetBucketEncryptionOutput {
  ServerSideEncryptionConfiguration: AwsS3S40
}

input AwsS3GetBucketInventoryConfigurationInput {
  Bucket: String!
  Id: String!
}

type AwsS3GetBucketInventoryConfigurationOutput {
  InventoryConfiguration: AwsS3S46
}

input AwsS3GetBucketLifecycleConfigurationInput {
  Bucket: String!
}

type AwsS3GetBucketLifecycleConfigurationOutput {
  Rules: [AwsS3S51]
}

input AwsS3GetBucketLifecycleInput {
  Bucket: String!
}

type AwsS3GetBucketLifecycleOutput {
  Rules: [AwsS3S4m]
}

input AwsS3GetBucketLocationInput {
  Bucket: String!
}

type AwsS3GetBucketLocationOutput {
  LocationConstraint: String
}

input AwsS3GetBucketLoggingInput {
  Bucket: String!
}

type AwsS3GetBucketLoggingOutput {
  LoggingEnabled: AwsS3S5b
}

input AwsS3GetBucketMetricsConfigurationInput {
  Bucket: String!
  Id: String!
}

type AwsS3GetBucketMetricsConfigurationOutput {
  MetricsConfiguration: AwsS3S5j
}

input AwsS3GetBucketPolicyInput {
  Bucket: String!
}

type AwsS3GetBucketPolicyOutput {
  Policy: String
}

input AwsS3GetBucketReplicationInput {
  Bucket: String!
}

type AwsS3GetBucketReplicationOutput {
  ReplicationConfiguration: AwsS3S6h
}

input AwsS3GetBucketRequestPaymentInput {
  Bucket: String!
}

type AwsS3GetBucketRequestPaymentOutput {
  Payer: String
}

input AwsS3GetBucketTaggingInput {
  Bucket: String!
}

type AwsS3GetBucketTaggingOutput {
  TagSet: [AwsS3S3a]!
}

input AwsS3GetBucketVersioningInput {
  Bucket: String!
}

type AwsS3GetBucketVersioningOutput {
  Status: String
  MFADelete: String
}

input AwsS3GetBucketWebsiteInput {
  Bucket: String!
}

type AwsS3GetBucketWebsiteOutput {
  RedirectAllRequestsTo: AwsS3S75
  IndexDocument: AwsS3S78
  ErrorDocument: AwsS3S7a
  RoutingRules: [AwsS3S7b]
}

input AwsS3GetObjectAclInput {
  Bucket: String!
  Key: String!
  VersionId: String
  RequestPayer: String
}

type AwsS3GetObjectAclOutput {
  Owner: AwsS3S2v
  Grants: [AwsS3S2y]
  RequestCharged: String
}

input AwsS3GetObjectInput {
  Bucket: String!
  IfMatch: String
  IfModifiedSince: Date
  IfNoneMatch: String
  IfUnmodifiedSince: Date
  Key: String!
  Range: String
  ResponseCacheControl: String
  ResponseContentDisposition: String
  ResponseContentEncoding: String
  ResponseContentLanguage: String
  ResponseContentType: String
  ResponseExpires: Date
  VersionId: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  RequestPayer: String
  PartNumber: Int
}

type AwsS3GetObjectOutput {
  Body: JSON
  DeleteMarker: Boolean
  AcceptRanges: String
  Expiration: String
  Restore: String
  LastModified: Date
  ContentLength: JSON
  ETag: String
  MissingMeta: Int
  VersionId: String
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentRange: String
  ContentType: String
  Expires: Date
  WebsiteRedirectLocation: String
  ServerSideEncryption: String
  Metadata: JSON
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  StorageClass: String
  RequestCharged: String
  ReplicationStatus: String
  PartsCount: Int
  TagCount: Int
}

input AwsS3GetObjectTaggingInput {
  Bucket: String!
  Key: String!
  VersionId: String
}

type AwsS3GetObjectTaggingOutput {
  VersionId: String
  TagSet: [AwsS3S3a]!
}

input AwsS3GetObjectTorrentInput {
  Bucket: String!
  Key: String!
  RequestPayer: String
}

type AwsS3GetObjectTorrentOutput {
  Body: JSON
  RequestCharged: String
}

input AwsS3HeadBucketInput {
  Bucket: String!
}

input AwsS3HeadObjectInput {
  Bucket: String!
  IfMatch: String
  IfModifiedSince: Date
  IfNoneMatch: String
  IfUnmodifiedSince: Date
  Key: String!
  Range: String
  VersionId: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  RequestPayer: String
  PartNumber: Int
}

type AwsS3HeadObjectOutput {
  DeleteMarker: Boolean
  AcceptRanges: String
  Expiration: String
  Restore: String
  LastModified: Date
  ContentLength: JSON
  ETag: String
  MissingMeta: Int
  VersionId: String
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentType: String
  Expires: Date
  WebsiteRedirectLocation: String
  ServerSideEncryption: String
  Metadata: JSON
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  StorageClass: String
  RequestCharged: String
  ReplicationStatus: String
  PartsCount: Int
}

input AwsS3ListBucketAnalyticsConfigurationsInput {
  Bucket: String!
  ContinuationToken: String
}

type AwsS3ListBucketAnalyticsConfigurationsOutput {
  IsTruncated: Boolean
  ContinuationToken: String
  NextContinuationToken: String
  AnalyticsConfigurationList: [AwsS3S37]
}

input AwsS3ListBucketInventoryConfigurationsInput {
  Bucket: String!
  ContinuationToken: String
}

type AwsS3ListBucketInventoryConfigurationsOutput {
  ContinuationToken: String
  InventoryConfigurationList: [AwsS3S46]
  IsTruncated: Boolean
  NextContinuationToken: String
}

input AwsS3ListBucketMetricsConfigurationsInput {
  Bucket: String!
  ContinuationToken: String
}

type AwsS3ListBucketMetricsConfigurationsOutput {
  IsTruncated: Boolean
  ContinuationToken: String
  NextContinuationToken: String
  MetricsConfigurationList: [AwsS3S5j]
}

type AwsS3ListBucketsOutput {
  Buckets: [AwsS3ListBucketsOutputBuckets]
  Owner: AwsS3S2v
}

type AwsS3ListBucketsOutputBuckets {
  Name: String
  CreationDate: Date
}

input AwsS3ListMultipartUploadsInput {
  Bucket: String!
  Delimiter: String
  EncodingType: String
  KeyMarker: String
  MaxUploads: Int
  Prefix: String
  UploadIdMarker: String
}

type AwsS3ListMultipartUploadsOutput {
  Bucket: String
  KeyMarker: String
  UploadIdMarker: String
  NextKeyMarker: String
  Prefix: String
  Delimiter: String
  NextUploadIdMarker: String
  MaxUploads: Int
  IsTruncated: Boolean
  Uploads: [AwsS3ListMultipartUploadsOutputUploads]
  CommonPrefixes: [AwsS3S98]
  EncodingType: String
}

type AwsS3ListMultipartUploadsOutputUploads {
  UploadId: String
  Key: String
  Initiated: Date
  StorageClass: String
  Owner: AwsS3S2v
  Initiator: AwsS3S97
}

input AwsS3ListObjectsInput {
  Bucket: String!
  Delimiter: String
  EncodingType: String
  Marker: String
  MaxKeys: Int
  Prefix: String
  RequestPayer: String
}

type AwsS3ListObjectsOutput {
  IsTruncated: Boolean
  Marker: String
  NextMarker: String
  Contents: [AwsS3S9q]
  Name: String
  Prefix: String
  Delimiter: String
  MaxKeys: Int
  CommonPrefixes: [AwsS3S98]
  EncodingType: String
}

input AwsS3ListObjectsV2Input {
  Bucket: String!
  Delimiter: String
  EncodingType: String
  MaxKeys: Int
  Prefix: String
  ContinuationToken: String
  FetchOwner: Boolean
  StartAfter: String
  RequestPayer: String
}

type AwsS3ListObjectsV2Output {
  IsTruncated: Boolean
  Contents: [AwsS3S9q]
  Name: String
  Prefix: String
  Delimiter: String
  MaxKeys: Int
  CommonPrefixes: [AwsS3S98]
  EncodingType: String
  KeyCount: Int
  ContinuationToken: String
  NextContinuationToken: String
  StartAfter: String
}

input AwsS3ListObjectVersionsInput {
  Bucket: String!
  Delimiter: String
  EncodingType: String
  KeyMarker: String
  MaxKeys: Int
  Prefix: String
  VersionIdMarker: String
}

type AwsS3ListObjectVersionsOutput {
  IsTruncated: Boolean
  KeyMarker: String
  VersionIdMarker: String
  NextKeyMarker: String
  NextVersionIdMarker: String
  Versions: [AwsS3ListObjectVersionsOutputVersions]
  DeleteMarkers: [AwsS3ListObjectVersionsOutputDeleteMarkers]
  Name: String
  Prefix: String
  Delimiter: String
  MaxKeys: Int
  CommonPrefixes: [AwsS3S98]
  EncodingType: String
}

type AwsS3ListObjectVersionsOutputDeleteMarkers {
  Owner: AwsS3S2v
  Key: String
  VersionId: String
  IsLatest: Boolean
  LastModified: Date
}

type AwsS3ListObjectVersionsOutputVersions {
  ETag: String
  Size: Int
  StorageClass: String
  Key: String
  VersionId: String
  IsLatest: Boolean
  LastModified: Date
  Owner: AwsS3S2v
}

input AwsS3ListPartsInput {
  Bucket: String!
  Key: String!
  MaxParts: Int
  PartNumberMarker: Int
  UploadId: String!
  RequestPayer: String
}

type AwsS3ListPartsOutput {
  AbortDate: Date
  AbortRuleId: String
  Bucket: String
  Key: String
  UploadId: String
  PartNumberMarker: Int
  NextPartNumberMarker: Int
  MaxParts: Int
  IsTruncated: Boolean
  Parts: [AwsS3ListPartsOutputParts]
  Initiator: AwsS3S97
  Owner: AwsS3S2v
  StorageClass: String
  RequestCharged: String
}

type AwsS3ListPartsOutputParts {
  PartNumber: Int
  LastModified: Date
  ETag: String
  Size: Int
}

input AwsS3PutBucketAccelerateConfigurationAccelerateConfigurationInput {
  Status: String
}

input AwsS3PutBucketAccelerateConfigurationInput {
  Bucket: String!
  AccelerateConfiguration: AwsS3PutBucketAccelerateConfigurationAccelerateConfigurationInput!
}

input AwsS3PutBucketAclInput {
  ACL: String
  AccessControlPolicy: AwsS3Sa8Input
  Bucket: String!
  ContentMD5: String
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWrite: String
  GrantWriteACP: String
}

input AwsS3PutBucketAnalyticsConfigurationInput {
  Bucket: String!
  Id: String!
  AnalyticsConfiguration: AwsS3S37Input!
}

input AwsS3PutBucketCorsCORSConfigurationInput {
  CORSRules: [AwsS3S3nInput]!
}

input AwsS3PutBucketCorsInput {
  Bucket: String!
  CORSConfiguration: AwsS3PutBucketCorsCORSConfigurationInput!
  ContentMD5: String
}

input AwsS3PutBucketEncryptionInput {
  Bucket: String!
  ContentMD5: String
  ServerSideEncryptionConfiguration: AwsS3S40Input!
}

input AwsS3PutBucketInventoryConfigurationInput {
  Bucket: String!
  Id: String!
  InventoryConfiguration: AwsS3S46Input!
}

input AwsS3PutBucketLifecycleConfigurationInput {
  Bucket: String!
  LifecycleConfiguration: AwsS3PutBucketLifecycleConfigurationLifecycleConfigurationInput
}

input AwsS3PutBucketLifecycleConfigurationLifecycleConfigurationInput {
  Rules: [AwsS3S51Input]!
}

input AwsS3PutBucketLifecycleInput {
  Bucket: String!
  ContentMD5: String
  LifecycleConfiguration: AwsS3PutBucketLifecycleLifecycleConfigurationInput
}

input AwsS3PutBucketLifecycleLifecycleConfigurationInput {
  Rules: [AwsS3S4mInput]!
}

input AwsS3PutBucketLoggingBucketLoggingStatusInput {
  LoggingEnabled: AwsS3S5bInput
}

input AwsS3PutBucketLoggingInput {
  Bucket: String!
  BucketLoggingStatus: AwsS3PutBucketLoggingBucketLoggingStatusInput!
  ContentMD5: String
}

input AwsS3PutBucketMetricsConfigurationInput {
  Bucket: String!
  Id: String!
  MetricsConfiguration: AwsS3S5jInput!
}

input AwsS3PutBucketNotificationConfigurationInput {
  Bucket: String!
  NotificationConfiguration: AwsS3S5yInput!
}

input AwsS3PutBucketNotificationInput {
  Bucket: String!
  ContentMD5: String
  NotificationConfiguration: AwsS3S5nInput!
}

input AwsS3PutBucketPolicyInput {
  Bucket: String!
  ContentMD5: String
  ConfirmRemoveSelfBucketAccess: Boolean
  Policy: String!
}

input AwsS3PutBucketReplicationInput {
  Bucket: String!
  ContentMD5: String
  ReplicationConfiguration: AwsS3S6hInput!
}

input AwsS3PutBucketRequestPaymentInput {
  Bucket: String!
  ContentMD5: String
  RequestPaymentConfiguration: AwsS3PutBucketRequestPaymentRequestPaymentConfigurationInput!
}

input AwsS3PutBucketRequestPaymentRequestPaymentConfigurationInput {
  Payer: String!
}

input AwsS3PutBucketTaggingInput {
  Bucket: String!
  ContentMD5: String
  Tagging: AwsS3SauInput!
}

input AwsS3PutBucketVersioningInput {
  Bucket: String!
  ContentMD5: String
  MFA: String
  VersioningConfiguration: AwsS3PutBucketVersioningVersioningConfigurationInput!
}

input AwsS3PutBucketVersioningVersioningConfigurationInput {
  MFADelete: String
  Status: String
}

input AwsS3PutBucketWebsiteInput {
  Bucket: String!
  ContentMD5: String
  WebsiteConfiguration: AwsS3PutBucketWebsiteWebsiteConfigurationInput!
}

input AwsS3PutBucketWebsiteWebsiteConfigurationInput {
  ErrorDocument: AwsS3S7aInput
  IndexDocument: AwsS3S78Input
  RedirectAllRequestsTo: AwsS3S75Input
  RoutingRules: [AwsS3S7bInput]
}

input AwsS3PutObjectAclInput {
  ACL: String
  AccessControlPolicy: AwsS3Sa8Input
  Bucket: String!
  ContentMD5: String
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWrite: String
  GrantWriteACP: String
  Key: String!
  RequestPayer: String
  VersionId: String
}

type AwsS3PutObjectAclOutput {
  RequestCharged: String
}

input AwsS3PutObjectInput {
  ACL: String
  Body: JSON
  Bucket: String!
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentLength: JSON
  ContentMD5: String
  ContentType: String
  Expires: Date
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWriteACP: String
  Key: String!
  Metadata: JSON
  ServerSideEncryption: String
  StorageClass: String
  WebsiteRedirectLocation: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestPayer: String
  Tagging: String
}

type AwsS3PutObjectOutput {
  Expiration: String
  ETag: String
  ServerSideEncryption: String
  VersionId: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestCharged: String
}

input AwsS3PutObjectTaggingInput {
  Bucket: String!
  Key: String!
  VersionId: String
  ContentMD5: String
  Tagging: AwsS3SauInput!
}

type AwsS3PutObjectTaggingOutput {
  VersionId: String
}

input AwsS3RestoreObjectInput {
  Bucket: String!
  Key: String!
  VersionId: String
  RestoreRequest: AwsS3RestoreObjectRestoreRequestInput
  RequestPayer: String
}

type AwsS3RestoreObjectOutput {
  RequestCharged: String
  RestoreOutputPath: String
}

input AwsS3RestoreObjectRestoreRequestGlacierJobParametersInput {
  Tier: String!
}

input AwsS3RestoreObjectRestoreRequestInput {
  Days: Int
  GlacierJobParameters: AwsS3RestoreObjectRestoreRequestGlacierJobParametersInput
  Type: String
  Tier: String
  Description: String
  SelectParameters: AwsS3RestoreObjectRestoreRequestSelectParametersInput
  OutputLocation: AwsS3RestoreObjectRestoreRequestOutputLocationInput
}

input AwsS3RestoreObjectRestoreRequestOutputLocationInput {
  S3: AwsS3RestoreObjectRestoreRequestOutputLocationS3Input
}

input AwsS3RestoreObjectRestoreRequestOutputLocationS3EncryptionInput {
  EncryptionType: String!
  KMSKeyId: String
  KMSContext: String
}

input AwsS3RestoreObjectRestoreRequestOutputLocationS3Input {
  BucketName: String!
  Prefix: String!
  Encryption: AwsS3RestoreObjectRestoreRequestOutputLocationS3EncryptionInput
  CannedACL: String
  AccessControlList: [AwsS3S2yInput]
  Tagging: AwsS3SauInput
  UserMetadata: [AwsS3RestoreObjectRestoreRequestOutputLocationS3UserMetadataInput]
  StorageClass: String
}

input AwsS3RestoreObjectRestoreRequestOutputLocationS3UserMetadataInput {
  Name: String
  Value: String
}

input AwsS3RestoreObjectRestoreRequestSelectParametersInput {
  InputSerialization: AwsS3RestoreObjectRestoreRequestSelectParametersInputSerializationInput!
  ExpressionType: String!
  Expression: String!
  OutputSerialization: AwsS3RestoreObjectRestoreRequestSelectParametersOutputSerializationInput!
}

input AwsS3RestoreObjectRestoreRequestSelectParametersInputSerializationCSVInput {
  FileHeaderInfo: String
  Comments: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsS3RestoreObjectRestoreRequestSelectParametersInputSerializationInput {
  CSV: AwsS3RestoreObjectRestoreRequestSelectParametersInputSerializationCSVInput
}

input AwsS3RestoreObjectRestoreRequestSelectParametersOutputSerializationCSVInput {
  QuoteFields: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsS3RestoreObjectRestoreRequestSelectParametersOutputSerializationInput {
  CSV: AwsS3RestoreObjectRestoreRequestSelectParametersOutputSerializationCSVInput
}

type AwsS3S2v {
  DisplayName: String
  ID: String
}

input AwsS3S2vInput {
  DisplayName: String
  ID: String
}

type AwsS3S2y {
  Grantee: AwsS3S30
  Permission: String
}

input AwsS3S2yInput {
  Grantee: AwsS3S30Input
  Permission: String
}

type AwsS3S30 {
  DisplayName: String
  EmailAddress: String
  ID: String
  Type: String!
  URI: String
}

input AwsS3S30Input {
  DisplayName: String
  EmailAddress: String
  ID: String
  Type: String!
  URI: String
}

type AwsS3S37 {
  Id: String!
  Filter: AwsS3S37Filter
  StorageClassAnalysis: AwsS3S37StorageClassAnalysis!
}

type AwsS3S37Filter {
  Prefix: String
  Tag: AwsS3S3a
  And: AwsS3S37FilterAnd
}

type AwsS3S37FilterAnd {
  Prefix: String
  Tags: [AwsS3S3a]
}

input AwsS3S37FilterAndInput {
  Prefix: String
  Tags: [AwsS3S3aInput]
}

input AwsS3S37FilterInput {
  Prefix: String
  Tag: AwsS3S3aInput
  And: AwsS3S37FilterAndInput
}

input AwsS3S37Input {
  Id: String!
  Filter: AwsS3S37FilterInput
  StorageClassAnalysis: AwsS3S37StorageClassAnalysisInput!
}

type AwsS3S37StorageClassAnalysis {
  DataExport: AwsS3S37StorageClassAnalysisDataExport
}

type AwsS3S37StorageClassAnalysisDataExport {
  OutputSchemaVersion: String!
  Destination: AwsS3S37StorageClassAnalysisDataExportDestination!
}

type AwsS3S37StorageClassAnalysisDataExportDestination {
  S3BucketDestination: AwsS3S37StorageClassAnalysisDataExportDestinationS3BucketDestination!
}

input AwsS3S37StorageClassAnalysisDataExportDestinationInput {
  S3BucketDestination: AwsS3S37StorageClassAnalysisDataExportDestinationS3BucketDestinationInput!
}

type AwsS3S37StorageClassAnalysisDataExportDestinationS3BucketDestination {
  Format: String!
  BucketAccountId: String
  Bucket: String!
  Prefix: String
}

input AwsS3S37StorageClassAnalysisDataExportDestinationS3BucketDestinationInput {
  Format: String!
  BucketAccountId: String
  Bucket: String!
  Prefix: String
}

input AwsS3S37StorageClassAnalysisDataExportInput {
  OutputSchemaVersion: String!
  Destination: AwsS3S37StorageClassAnalysisDataExportDestinationInput!
}

input AwsS3S37StorageClassAnalysisInput {
  DataExport: AwsS3S37StorageClassAnalysisDataExportInput
}

type AwsS3S3a {
  Key: String!
  Value: String!
}

input AwsS3S3aInput {
  Key: String!
  Value: String!
}

type AwsS3S3n {
  AllowedHeaders: [String]
  AllowedMethods: [String]!
  AllowedOrigins: [String]!
  ExposeHeaders: [String]
  MaxAgeSeconds: Int
}

input AwsS3S3nInput {
  AllowedHeaders: [String]
  AllowedMethods: [String]!
  AllowedOrigins: [String]!
  ExposeHeaders: [String]
  MaxAgeSeconds: Int
}

type AwsS3S40 {
  Rules: [AwsS3S40Rules]!
}

input AwsS3S40Input {
  Rules: [AwsS3S40RulesInput]!
}

type AwsS3S40Rules {
  ApplyServerSideEncryptionByDefault: AwsS3S40RulesApplyServerSideEncryptionByDefault
}

type AwsS3S40RulesApplyServerSideEncryptionByDefault {
  SSEAlgorithm: String!
  KMSMasterKeyID: String
}

input AwsS3S40RulesApplyServerSideEncryptionByDefaultInput {
  SSEAlgorithm: String!
  KMSMasterKeyID: String
}

input AwsS3S40RulesInput {
  ApplyServerSideEncryptionByDefault: AwsS3S40RulesApplyServerSideEncryptionByDefaultInput
}

type AwsS3S46 {
  Destination: AwsS3S46Destination!
  IsEnabled: Boolean!
  Filter: AwsS3S46Filter
  Id: String!
  IncludedObjectVersions: String!
  OptionalFields: [String]
  Schedule: AwsS3S46Schedule!
}

type AwsS3S46Destination {
  S3BucketDestination: AwsS3S46DestinationS3BucketDestination!
}

input AwsS3S46DestinationInput {
  S3BucketDestination: AwsS3S46DestinationS3BucketDestinationInput!
}

type AwsS3S46DestinationS3BucketDestination {
  AccountId: String
  Bucket: String!
  Format: String!
  Prefix: String
  Encryption: AwsS3S46DestinationS3BucketDestinationEncryption
}

type AwsS3S46DestinationS3BucketDestinationEncryption {
  SSES3: JSON
  SSEKMS: AwsS3S46DestinationS3BucketDestinationEncryptionSSEKMS
}

input AwsS3S46DestinationS3BucketDestinationEncryptionInput {
  SSES3: JSON
  SSEKMS: AwsS3S46DestinationS3BucketDestinationEncryptionSSEKMSInput
}

type AwsS3S46DestinationS3BucketDestinationEncryptionSSEKMS {
  KeyId: String!
}

input AwsS3S46DestinationS3BucketDestinationEncryptionSSEKMSInput {
  KeyId: String!
}

input AwsS3S46DestinationS3BucketDestinationInput {
  AccountId: String
  Bucket: String!
  Format: String!
  Prefix: String
  Encryption: AwsS3S46DestinationS3BucketDestinationEncryptionInput
}

type AwsS3S46Filter {
  Prefix: String!
}

input AwsS3S46FilterInput {
  Prefix: String!
}

input AwsS3S46Input {
  Destination: AwsS3S46DestinationInput!
  IsEnabled: Boolean!
  Filter: AwsS3S46FilterInput
  Id: String!
  IncludedObjectVersions: String!
  OptionalFields: [String]
  Schedule: AwsS3S46ScheduleInput!
}

type AwsS3S46Schedule {
  Frequency: String!
}

input AwsS3S46ScheduleInput {
  Frequency: String!
}

type AwsS3S4m {
  Expiration: AwsS3S4o
  ID: String
  Prefix: String!
  Status: String!
  Transition: AwsS3S4t
  NoncurrentVersionTransition: AwsS3S4v
  NoncurrentVersionExpiration: AwsS3S4w
  AbortIncompleteMultipartUpload: AwsS3S4x
}

input AwsS3S4mInput {
  Expiration: AwsS3S4oInput
  ID: String
  Prefix: String!
  Status: String!
  Transition: AwsS3S4tInput
  NoncurrentVersionTransition: AwsS3S4vInput
  NoncurrentVersionExpiration: AwsS3S4wInput
  AbortIncompleteMultipartUpload: AwsS3S4xInput
}

type AwsS3S4o {
  Date: Date
  Days: Int
  ExpiredObjectDeleteMarker: Boolean
}

input AwsS3S4oInput {
  Date: Date
  Days: Int
  ExpiredObjectDeleteMarker: Boolean
}

type AwsS3S4t {
  Date: Date
  Days: Int
  StorageClass: String
}

input AwsS3S4tInput {
  Date: Date
  Days: Int
  StorageClass: String
}

type AwsS3S4v {
  NoncurrentDays: Int
  StorageClass: String
}

input AwsS3S4vInput {
  NoncurrentDays: Int
  StorageClass: String
}

type AwsS3S4w {
  NoncurrentDays: Int
}

input AwsS3S4wInput {
  NoncurrentDays: Int
}

type AwsS3S4x {
  DaysAfterInitiation: Int
}

input AwsS3S4xInput {
  DaysAfterInitiation: Int
}

type AwsS3S51 {
  Expiration: AwsS3S4o
  ID: String
  Prefix: String
  Filter: AwsS3S51Filter
  Status: String!
  Transitions: [AwsS3S4t]
  NoncurrentVersionTransitions: [AwsS3S4v]
  NoncurrentVersionExpiration: AwsS3S4w
  AbortIncompleteMultipartUpload: AwsS3S4x
}

type AwsS3S51Filter {
  Prefix: String
  Tag: AwsS3S3a
  And: AwsS3S51FilterAnd
}

type AwsS3S51FilterAnd {
  Prefix: String
  Tags: [AwsS3S3a]
}

input AwsS3S51FilterAndInput {
  Prefix: String
  Tags: [AwsS3S3aInput]
}

input AwsS3S51FilterInput {
  Prefix: String
  Tag: AwsS3S3aInput
  And: AwsS3S51FilterAndInput
}

input AwsS3S51Input {
  Expiration: AwsS3S4oInput
  ID: String
  Prefix: String
  Filter: AwsS3S51FilterInput
  Status: String!
  Transitions: [AwsS3S4tInput]
  NoncurrentVersionTransitions: [AwsS3S4vInput]
  NoncurrentVersionExpiration: AwsS3S4wInput
  AbortIncompleteMultipartUpload: AwsS3S4xInput
}

type AwsS3S5b {
  TargetBucket: String
  TargetGrants: [AwsS3S5bTargetGrants]
  TargetPrefix: String
}

input AwsS3S5bInput {
  TargetBucket: String
  TargetGrants: [AwsS3S5bTargetGrantsInput]
  TargetPrefix: String
}

type AwsS3S5bTargetGrants {
  Grantee: AwsS3S30
  Permission: String
}

input AwsS3S5bTargetGrantsInput {
  Grantee: AwsS3S30Input
  Permission: String
}

type AwsS3S5j {
  Id: String!
  Filter: AwsS3S5jFilter
}

type AwsS3S5jFilter {
  Prefix: String
  Tag: AwsS3S3a
  And: AwsS3S5jFilterAnd
}

type AwsS3S5jFilterAnd {
  Prefix: String
  Tags: [AwsS3S3a]
}

input AwsS3S5jFilterAndInput {
  Prefix: String
  Tags: [AwsS3S3aInput]
}

input AwsS3S5jFilterInput {
  Prefix: String
  Tag: AwsS3S3aInput
  And: AwsS3S5jFilterAndInput
}

input AwsS3S5jInput {
  Id: String!
  Filter: AwsS3S5jFilterInput
}

input AwsS3S5nCloudFunctionConfigurationInput {
  Id: String
  Event: String
  Events: [String]
  CloudFunction: String
  InvocationRole: String
}

input AwsS3S5nInput {
  TopicConfiguration: AwsS3S5nTopicConfigurationInput
  QueueConfiguration: AwsS3S5nQueueConfigurationInput
  CloudFunctionConfiguration: AwsS3S5nCloudFunctionConfigurationInput
}

input AwsS3S5nQueueConfigurationInput {
  Id: String
  Event: String
  Events: [String]
  Queue: String
}

input AwsS3S5nTopicConfigurationInput {
  Id: String
  Events: [String]
  Event: String
  Topic: String
}

input AwsS3S5yInput {
  TopicConfigurations: [AwsS3S5yTopicConfigurationsInput]
  QueueConfigurations: [AwsS3S5yQueueConfigurationsInput]
  LambdaFunctionConfigurations: [AwsS3S5yLambdaFunctionConfigurationsInput]
}

input AwsS3S5yLambdaFunctionConfigurationsInput {
  Id: String
  LambdaFunctionArn: String!
  Events: [String]!
  Filter: AwsS3S61Input
}

input AwsS3S5yQueueConfigurationsInput {
  Id: String
  QueueArn: String!
  Events: [String]!
  Filter: AwsS3S61Input
}

input AwsS3S5yTopicConfigurationsInput {
  Id: String
  TopicArn: String!
  Events: [String]!
  Filter: AwsS3S61Input
}

input AwsS3S61Input {
  Key: AwsS3S61KeyInput
}

input AwsS3S61KeyFilterRulesInput {
  Name: String
  Value: String
}

input AwsS3S61KeyInput {
  FilterRules: [AwsS3S61KeyFilterRulesInput]
}

type AwsS3S6h {
  Role: String!
  Rules: [AwsS3S6hRules]!
}

input AwsS3S6hInput {
  Role: String!
  Rules: [AwsS3S6hRulesInput]!
}

type AwsS3S6hRules {
  ID: String
  Prefix: String!
  Status: String!
  SourceSelectionCriteria: AwsS3S6hRulesSourceSelectionCriteria
  Destination: AwsS3S6hRulesDestination!
}

type AwsS3S6hRulesDestination {
  Bucket: String!
  Account: String
  StorageClass: String
  AccessControlTranslation: AwsS3S6hRulesDestinationAccessControlTranslation
  EncryptionConfiguration: AwsS3S6hRulesDestinationEncryptionConfiguration
}

type AwsS3S6hRulesDestinationAccessControlTranslation {
  Owner: String!
}

input AwsS3S6hRulesDestinationAccessControlTranslationInput {
  Owner: String!
}

type AwsS3S6hRulesDestinationEncryptionConfiguration {
  ReplicaKmsKeyID: String
}

input AwsS3S6hRulesDestinationEncryptionConfigurationInput {
  ReplicaKmsKeyID: String
}

input AwsS3S6hRulesDestinationInput {
  Bucket: String!
  Account: String
  StorageClass: String
  AccessControlTranslation: AwsS3S6hRulesDestinationAccessControlTranslationInput
  EncryptionConfiguration: AwsS3S6hRulesDestinationEncryptionConfigurationInput
}

input AwsS3S6hRulesInput {
  ID: String
  Prefix: String!
  Status: String!
  SourceSelectionCriteria: AwsS3S6hRulesSourceSelectionCriteriaInput
  Destination: AwsS3S6hRulesDestinationInput!
}

type AwsS3S6hRulesSourceSelectionCriteria {
  SseKmsEncryptedObjects: AwsS3S6hRulesSourceSelectionCriteriaSseKmsEncryptedObjects
}

input AwsS3S6hRulesSourceSelectionCriteriaInput {
  SseKmsEncryptedObjects: AwsS3S6hRulesSourceSelectionCriteriaSseKmsEncryptedObjectsInput
}

type AwsS3S6hRulesSourceSelectionCriteriaSseKmsEncryptedObjects {
  Status: String!
}

input AwsS3S6hRulesSourceSelectionCriteriaSseKmsEncryptedObjectsInput {
  Status: String!
}

type AwsS3S75 {
  HostName: String!
  Protocol: String
}

input AwsS3S75Input {
  HostName: String!
  Protocol: String
}

type AwsS3S78 {
  Suffix: String!
}

input AwsS3S78Input {
  Suffix: String!
}

type AwsS3S7a {
  Key: String!
}

input AwsS3S7aInput {
  Key: String!
}

type AwsS3S7b {
  Condition: AwsS3S7bCondition
  Redirect: AwsS3S7bRedirect!
}

type AwsS3S7bCondition {
  HttpErrorCodeReturnedEquals: String
  KeyPrefixEquals: String
}

input AwsS3S7bConditionInput {
  HttpErrorCodeReturnedEquals: String
  KeyPrefixEquals: String
}

input AwsS3S7bInput {
  Condition: AwsS3S7bConditionInput
  Redirect: AwsS3S7bRedirectInput!
}

type AwsS3S7bRedirect {
  HostName: String
  HttpRedirectCode: String
  Protocol: String
  ReplaceKeyPrefixWith: String
  ReplaceKeyWith: String
}

input AwsS3S7bRedirectInput {
  HostName: String
  HttpRedirectCode: String
  Protocol: String
  ReplaceKeyPrefixWith: String
  ReplaceKeyWith: String
}

type AwsS3S97 {
  ID: String
  DisplayName: String
}

type AwsS3S98 {
  Prefix: String
}

type AwsS3S9q {
  Key: String
  LastModified: Date
  ETag: String
  Size: Int
  StorageClass: String
  Owner: AwsS3S2v
}

input AwsS3Sa8Input {
  Grants: [AwsS3S2yInput]
  Owner: AwsS3S2vInput
}

input AwsS3SauInput {
  TagSet: [AwsS3S3aInput]!
}

input AwsS3UploadPartCopyInput {
  Bucket: String!
  CopySource: String!
  CopySourceIfMatch: String
  CopySourceIfModifiedSince: Date
  CopySourceIfNoneMatch: String
  CopySourceIfUnmodifiedSince: Date
  CopySourceRange: String
  Key: String!
  PartNumber: Int!
  UploadId: String!
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  CopySourceSSECustomerAlgorithm: String
  CopySourceSSECustomerKey: JSON
  CopySourceSSECustomerKeyMD5: String
  RequestPayer: String
}

type AwsS3UploadPartCopyOutput {
  CopySourceVersionId: String
  CopyPartResult: AwsS3UploadPartCopyOutputCopyPartResult
  ServerSideEncryption: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestCharged: String
}

type AwsS3UploadPartCopyOutputCopyPartResult {
  ETag: String
  LastModified: Date
}

input AwsS3UploadPartInput {
  Body: JSON
  Bucket: String!
  ContentLength: JSON
  ContentMD5: String
  Key: String!
  PartNumber: Int!
  UploadId: String!
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  RequestPayer: String
}

type AwsS3UploadPartOutput {
  ServerSideEncryption: String
  ETag: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestCharged: String
}

# Amazon SageMaker Service (2017-07-24)
type AwsSagemaker {
  # sagemaker.AddTags
  AddTags(input: AwsSagemakerAddTagsInput!): AwsSagemakerAddTagsOutput

  # sagemaker.CreateEndpoint
  CreateEndpoint(input: AwsSagemakerCreateEndpointInput!): AwsSagemakerCreateEndpointOutput

  # sagemaker.CreateEndpointConfig
  CreateEndpointConfig(input: AwsSagemakerCreateEndpointConfigInput!): AwsSagemakerCreateEndpointConfigOutput

  # sagemaker.CreateModel
  CreateModel(input: AwsSagemakerCreateModelInput!): AwsSagemakerCreateModelOutput

  # sagemaker.CreateNotebookInstance
  CreateNotebookInstance(input: AwsSagemakerCreateNotebookInstanceInput!): AwsSagemakerCreateNotebookInstanceOutput

  # sagemaker.CreatePresignedNotebookInstanceUrl
  CreatePresignedNotebookInstanceUrl(input: AwsSagemakerCreatePresignedNotebookInstanceUrlInput!): AwsSagemakerCreatePresignedNotebookInstanceUrlOutput

  # sagemaker.CreateTrainingJob
  CreateTrainingJob(input: AwsSagemakerCreateTrainingJobInput!): AwsSagemakerCreateTrainingJobOutput

  # sagemaker.DeleteEndpoint
  DeleteEndpoint(input: AwsSagemakerDeleteEndpointInput!): JSON

  # sagemaker.DeleteEndpointConfig
  DeleteEndpointConfig(input: AwsSagemakerDeleteEndpointConfigInput!): JSON

  # sagemaker.DeleteModel
  DeleteModel(input: AwsSagemakerDeleteModelInput!): JSON

  # sagemaker.DeleteNotebookInstance
  DeleteNotebookInstance(input: AwsSagemakerDeleteNotebookInstanceInput!): JSON

  # sagemaker.DeleteTags
  DeleteTags(input: AwsSagemakerDeleteTagsInput!): JSON

  # sagemaker.DescribeEndpoint
  DescribeEndpoint(input: AwsSagemakerDescribeEndpointInput!): AwsSagemakerDescribeEndpointOutput

  # sagemaker.DescribeEndpointConfig
  DescribeEndpointConfig(input: AwsSagemakerDescribeEndpointConfigInput!): AwsSagemakerDescribeEndpointConfigOutput

  # sagemaker.DescribeModel
  DescribeModel(input: AwsSagemakerDescribeModelInput!): AwsSagemakerDescribeModelOutput

  # sagemaker.DescribeNotebookInstance
  DescribeNotebookInstance(input: AwsSagemakerDescribeNotebookInstanceInput!): AwsSagemakerDescribeNotebookInstanceOutput

  # sagemaker.DescribeTrainingJob
  DescribeTrainingJob(input: AwsSagemakerDescribeTrainingJobInput!): AwsSagemakerDescribeTrainingJobOutput

  # sagemaker.ListEndpointConfigs
  ListEndpointConfigs(input: AwsSagemakerListEndpointConfigsInput): AwsSagemakerListEndpointConfigsOutput

  # sagemaker.ListEndpoints
  ListEndpoints(input: AwsSagemakerListEndpointsInput): AwsSagemakerListEndpointsOutput

  # sagemaker.ListModels
  ListModels(input: AwsSagemakerListModelsInput): AwsSagemakerListModelsOutput

  # sagemaker.ListNotebookInstances
  ListNotebookInstances(input: AwsSagemakerListNotebookInstancesInput): AwsSagemakerListNotebookInstancesOutput

  # sagemaker.ListTags
  ListTags(input: AwsSagemakerListTagsInput!): AwsSagemakerListTagsOutput

  # sagemaker.ListTrainingJobs
  ListTrainingJobs(input: AwsSagemakerListTrainingJobsInput): AwsSagemakerListTrainingJobsOutput

  # sagemaker.StartNotebookInstance
  StartNotebookInstance(input: AwsSagemakerStartNotebookInstanceInput!): JSON

  # sagemaker.StopNotebookInstance
  StopNotebookInstance(input: AwsSagemakerStopNotebookInstanceInput!): JSON

  # sagemaker.StopTrainingJob
  StopTrainingJob(input: AwsSagemakerStopTrainingJobInput!): JSON

  # sagemaker.UpdateEndpoint
  UpdateEndpoint(input: AwsSagemakerUpdateEndpointInput!): AwsSagemakerUpdateEndpointOutput

  # sagemaker.UpdateEndpointWeightsAndCapacities
  UpdateEndpointWeightsAndCapacities(input: AwsSagemakerUpdateEndpointWeightsAndCapacitiesInput!): AwsSagemakerUpdateEndpointWeightsAndCapacitiesOutput

  # sagemaker.UpdateNotebookInstance
  UpdateNotebookInstance(input: AwsSagemakerUpdateNotebookInstanceInput!): JSON
}

input AwsSagemakerAddTagsInput {
  ResourceArn: String!
  Tags: [AwsSagemakerS3Input]!
}

type AwsSagemakerAddTagsOutput {
  Tags: [AwsSagemakerS3]
}

input AwsSagemakerCreateEndpointConfigInput {
  EndpointConfigName: String!
  ProductionVariants: [AwsSagemakerSeInput]!
  Tags: [AwsSagemakerS3Input]
}

type AwsSagemakerCreateEndpointConfigOutput {
  EndpointConfigArn: String!
}

input AwsSagemakerCreateEndpointInput {
  EndpointName: String!
  EndpointConfigName: String!
  Tags: [AwsSagemakerS3Input]
}

type AwsSagemakerCreateEndpointOutput {
  EndpointArn: String!
}

input AwsSagemakerCreateModelInput {
  ModelName: String!
  PrimaryContainer: AwsSagemakerSoInput!
  SupplementalContainers: [AwsSagemakerSoInput]
  ExecutionRoleArn: String
  Tags: [AwsSagemakerS3Input]
}

type AwsSagemakerCreateModelOutput {
  ModelArn: String!
}

input AwsSagemakerCreateNotebookInstanceInput {
  NotebookInstanceName: String!
  InstanceType: String!
  SubnetId: String
  SecurityGroupIds: [String]
  RoleArn: String!
  KmsKeyId: String
  Tags: [AwsSagemakerS3Input]
}

type AwsSagemakerCreateNotebookInstanceOutput {
  NotebookInstanceArn: String
}

input AwsSagemakerCreatePresignedNotebookInstanceUrlInput {
  NotebookInstanceName: String!
  SessionExpirationDurationInSeconds: Int
}

type AwsSagemakerCreatePresignedNotebookInstanceUrlOutput {
  AuthorizedUrl: String
}

input AwsSagemakerCreateTrainingJobInput {
  TrainingJobName: String!
  HyperParameters: JSON
  AlgorithmSpecification: AwsSagemakerS1hInput!
  RoleArn: String!
  InputDataConfig: [AwsSagemakerS1kInput]!
  OutputDataConfig: AwsSagemakerS1vInput!
  ResourceConfig: AwsSagemakerS1wInput!
  StoppingCondition: AwsSagemakerS20Input!
  Tags: [AwsSagemakerS3Input]
}

type AwsSagemakerCreateTrainingJobOutput {
  TrainingJobArn: String!
}

input AwsSagemakerDeleteEndpointConfigInput {
  EndpointConfigName: String!
}

input AwsSagemakerDeleteEndpointInput {
  EndpointName: String!
}

input AwsSagemakerDeleteModelInput {
  ModelName: String!
}

input AwsSagemakerDeleteNotebookInstanceInput {
  NotebookInstanceName: String!
}

input AwsSagemakerDeleteTagsInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsSagemakerDescribeEndpointConfigInput {
  EndpointConfigName: String!
}

type AwsSagemakerDescribeEndpointConfigOutput {
  EndpointConfigName: String!
  EndpointConfigArn: String!
  ProductionVariants: [AwsSagemakerSe]!
  CreationTime: Date!
}

input AwsSagemakerDescribeEndpointInput {
  EndpointName: String!
}

type AwsSagemakerDescribeEndpointOutput {
  EndpointName: String!
  EndpointArn: String!
  EndpointConfigName: String!
  ProductionVariants: [AwsSagemakerDescribeEndpointOutputProductionVariants]
  EndpointStatus: String!
  FailureReason: String
  CreationTime: Date!
  LastModifiedTime: Date!
}

type AwsSagemakerDescribeEndpointOutputProductionVariants {
  VariantName: String!
  CurrentWeight: Float
  DesiredWeight: Float
  CurrentInstanceCount: Int
  DesiredInstanceCount: Int
}

input AwsSagemakerDescribeModelInput {
  ModelName: String!
}

type AwsSagemakerDescribeModelOutput {
  ModelName: String!
  PrimaryContainer: AwsSagemakerSo!
  SupplementalContainers: [AwsSagemakerSo]!
  ExecutionRoleArn: String!
  CreationTime: Date!
  ModelArn: String!
}

input AwsSagemakerDescribeNotebookInstanceInput {
  NotebookInstanceName: String!
}

type AwsSagemakerDescribeNotebookInstanceOutput {
  NotebookInstanceArn: String
  NotebookInstanceName: String
  NotebookInstanceStatus: String
  FailureReason: String
  Url: String
  InstanceType: String
  SubnetId: String
  SecurityGroups: [String]
  RoleArn: String
  KmsKeyId: String
  NetworkInterfaceId: String
  LastModifiedTime: Date
  CreationTime: Date
}

input AwsSagemakerDescribeTrainingJobInput {
  TrainingJobName: String!
}

type AwsSagemakerDescribeTrainingJobOutput {
  TrainingJobName: String!
  TrainingJobArn: String!
  ModelArtifacts: AwsSagemakerDescribeTrainingJobOutputModelArtifacts!
  TrainingJobStatus: String!
  SecondaryStatus: String!
  FailureReason: String
  HyperParameters: JSON
  AlgorithmSpecification: AwsSagemakerS1h!
  RoleArn: String
  InputDataConfig: [AwsSagemakerS1k]!
  OutputDataConfig: AwsSagemakerS1v
  ResourceConfig: AwsSagemakerS1w!
  StoppingCondition: AwsSagemakerS20!
  CreationTime: Date!
  TrainingStartTime: Date
  TrainingEndTime: Date
  LastModifiedTime: Date
}

type AwsSagemakerDescribeTrainingJobOutputModelArtifacts {
  S3ModelArtifacts: String!
}

input AwsSagemakerListEndpointConfigsInput {
  SortBy: String
  SortOrder: String
  NextToken: String
  MaxResults: Int
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
}

type AwsSagemakerListEndpointConfigsOutput {
  EndpointConfigs: [AwsSagemakerListEndpointConfigsOutputEndpointConfigs]!
  NextToken: String
}

type AwsSagemakerListEndpointConfigsOutputEndpointConfigs {
  EndpointConfigName: String!
  EndpointConfigArn: String!
  CreationTime: Date!
}

input AwsSagemakerListEndpointsInput {
  SortBy: String
  SortOrder: String
  NextToken: String
  MaxResults: Int
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
  LastModifiedTimeBefore: Date
  LastModifiedTimeAfter: Date
  StatusEquals: String
}

type AwsSagemakerListEndpointsOutput {
  Endpoints: [AwsSagemakerListEndpointsOutputEndpoints]!
  NextToken: String
}

type AwsSagemakerListEndpointsOutputEndpoints {
  EndpointName: String!
  EndpointArn: String!
  CreationTime: Date!
  LastModifiedTime: Date!
  EndpointStatus: String!
}

input AwsSagemakerListModelsInput {
  SortBy: String
  SortOrder: String
  NextToken: String
  MaxResults: Int
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
}

type AwsSagemakerListModelsOutput {
  Models: [AwsSagemakerListModelsOutputModels]!
  NextToken: String
}

type AwsSagemakerListModelsOutputModels {
  ModelName: String!
  ModelArn: String!
  CreationTime: Date!
}

input AwsSagemakerListNotebookInstancesInput {
  NextToken: String
  MaxResults: Int
  SortBy: String
  SortOrder: String
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
  LastModifiedTimeBefore: Date
  LastModifiedTimeAfter: Date
  StatusEquals: String
}

type AwsSagemakerListNotebookInstancesOutput {
  NextToken: String
  NotebookInstances: [AwsSagemakerListNotebookInstancesOutputNotebookInstances]
}

type AwsSagemakerListNotebookInstancesOutputNotebookInstances {
  NotebookInstanceName: String!
  NotebookInstanceArn: String!
  NotebookInstanceStatus: String
  Url: String
  InstanceType: String
  CreationTime: Date
  LastModifiedTime: Date
}

input AwsSagemakerListTagsInput {
  ResourceArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsSagemakerListTagsOutput {
  Tags: [AwsSagemakerS3]
  NextToken: String
}

input AwsSagemakerListTrainingJobsInput {
  NextToken: String
  MaxResults: Int
  CreationTimeAfter: Date
  CreationTimeBefore: Date
  LastModifiedTimeAfter: Date
  LastModifiedTimeBefore: Date
  NameContains: String
  StatusEquals: String
  SortBy: String
  SortOrder: String
}

type AwsSagemakerListTrainingJobsOutput {
  TrainingJobSummaries: [AwsSagemakerListTrainingJobsOutputTrainingJobSummaries]!
  NextToken: String
}

type AwsSagemakerListTrainingJobsOutputTrainingJobSummaries {
  TrainingJobName: String!
  TrainingJobArn: String!
  CreationTime: Date!
  TrainingEndTime: Date
  LastModifiedTime: Date
  TrainingJobStatus: String!
}

# Amazon SageMaker Runtime (2017-05-13)
type AwsSagemakerruntime {
  # sagemakerruntime.InvokeEndpoint
  InvokeEndpoint(input: AwsSagemakerruntimeInvokeEndpointInput!): AwsSagemakerruntimeInvokeEndpointOutput
}

input AwsSagemakerruntimeInvokeEndpointInput {
  EndpointName: String!
  Body: JSON!
  ContentType: String
  Accept: String
}

type AwsSagemakerruntimeInvokeEndpointOutput {
  Body: JSON!
  ContentType: String
  InvokedProductionVariant: String
}

type AwsSagemakerS1h {
  TrainingImage: String!
  TrainingInputMode: String!
}

input AwsSagemakerS1hInput {
  TrainingImage: String!
  TrainingInputMode: String!
}

type AwsSagemakerS1k {
  ChannelName: String!
  DataSource: AwsSagemakerS1kDataSource!
  ContentType: String
  CompressionType: String
  RecordWrapperType: String
}

type AwsSagemakerS1kDataSource {
  S3DataSource: AwsSagemakerS1kDataSourceS3DataSource!
}

input AwsSagemakerS1kDataSourceInput {
  S3DataSource: AwsSagemakerS1kDataSourceS3DataSourceInput!
}

type AwsSagemakerS1kDataSourceS3DataSource {
  S3DataType: String!
  S3Uri: String!
  S3DataDistributionType: String
}

input AwsSagemakerS1kDataSourceS3DataSourceInput {
  S3DataType: String!
  S3Uri: String!
  S3DataDistributionType: String
}

input AwsSagemakerS1kInput {
  ChannelName: String!
  DataSource: AwsSagemakerS1kDataSourceInput!
  ContentType: String
  CompressionType: String
  RecordWrapperType: String
}

type AwsSagemakerS1v {
  KmsKeyId: String
  S3OutputPath: String!
}

input AwsSagemakerS1vInput {
  KmsKeyId: String
  S3OutputPath: String!
}

type AwsSagemakerS1w {
  InstanceType: String!
  InstanceCount: Int!
  VolumeSizeInGB: Int!
}

input AwsSagemakerS1wInput {
  InstanceType: String!
  InstanceCount: Int!
  VolumeSizeInGB: Int!
}

type AwsSagemakerS20 {
  MaxRuntimeInSeconds: Int
}

input AwsSagemakerS20Input {
  MaxRuntimeInSeconds: Int
}

type AwsSagemakerS3 {
  Key: String!
  Value: String!
}

input AwsSagemakerS3Input {
  Key: String!
  Value: String!
}

type AwsSagemakerSe {
  VariantName: String!
  ModelName: String!
  InitialInstanceCount: Int!
  InstanceType: String!
  InitialVariantWeight: Float
}

input AwsSagemakerSeInput {
  VariantName: String!
  ModelName: String!
  InitialInstanceCount: Int!
  InstanceType: String!
  InitialVariantWeight: Float
}

type AwsSagemakerSo {
  ContainerHostname: String
  Image: String!
  ModelDataUrl: String
  Environment: JSON
}

input AwsSagemakerSoInput {
  ContainerHostname: String
  Image: String!
  ModelDataUrl: String
  Environment: JSON
}

input AwsSagemakerStartNotebookInstanceInput {
  NotebookInstanceName: String!
}

input AwsSagemakerStopNotebookInstanceInput {
  NotebookInstanceName: String!
}

input AwsSagemakerStopTrainingJobInput {
  TrainingJobName: String!
}

input AwsSagemakerUpdateEndpointInput {
  EndpointName: String!
  EndpointConfigName: String!
}

type AwsSagemakerUpdateEndpointOutput {
  EndpointArn: String!
}

input AwsSagemakerUpdateEndpointWeightsAndCapacitiesDesiredWeightsAndCapacitiesInput {
  VariantName: String!
  DesiredWeight: Float
  DesiredInstanceCount: Int
}

input AwsSagemakerUpdateEndpointWeightsAndCapacitiesInput {
  EndpointName: String!
  DesiredWeightsAndCapacities: [AwsSagemakerUpdateEndpointWeightsAndCapacitiesDesiredWeightsAndCapacitiesInput]!
}

type AwsSagemakerUpdateEndpointWeightsAndCapacitiesOutput {
  EndpointArn: String!
}

input AwsSagemakerUpdateNotebookInstanceInput {
  NotebookInstanceName: String!
  InstanceType: String
  RoleArn: String
}

# AWS Service Catalog (2015-12-10)
type AwsServicecatalog {
  # servicecatalog.AcceptPortfolioShare
  AcceptPortfolioShare(input: AwsServicecatalogAcceptPortfolioShareInput!): JSON

  # servicecatalog.AssociatePrincipalWithPortfolio
  AssociatePrincipalWithPortfolio(input: AwsServicecatalogAssociatePrincipalWithPortfolioInput!): JSON

  # servicecatalog.AssociateProductWithPortfolio
  AssociateProductWithPortfolio(input: AwsServicecatalogAssociateProductWithPortfolioInput!): JSON

  # servicecatalog.AssociateTagOptionWithResource
  AssociateTagOptionWithResource(input: AwsServicecatalogAssociateTagOptionWithResourceInput!): JSON

  # servicecatalog.CopyProduct
  CopyProduct(input: AwsServicecatalogCopyProductInput!): AwsServicecatalogCopyProductOutput

  # servicecatalog.CreateConstraint
  CreateConstraint(input: AwsServicecatalogCreateConstraintInput!): AwsServicecatalogCreateConstraintOutput

  # servicecatalog.CreatePortfolio
  CreatePortfolio(input: AwsServicecatalogCreatePortfolioInput!): AwsServicecatalogCreatePortfolioOutput

  # servicecatalog.CreatePortfolioShare
  CreatePortfolioShare(input: AwsServicecatalogCreatePortfolioShareInput!): JSON

  # servicecatalog.CreateProduct
  CreateProduct(input: AwsServicecatalogCreateProductInput!): AwsServicecatalogCreateProductOutput

  # servicecatalog.CreateProvisioningArtifact
  CreateProvisioningArtifact(input: AwsServicecatalogCreateProvisioningArtifactInput!): AwsServicecatalogCreateProvisioningArtifactOutput

  # servicecatalog.CreateTagOption
  CreateTagOption(input: AwsServicecatalogCreateTagOptionInput!): AwsServicecatalogCreateTagOptionOutput

  # servicecatalog.DeleteConstraint
  DeleteConstraint(input: AwsServicecatalogDeleteConstraintInput!): JSON

  # servicecatalog.DeletePortfolio
  DeletePortfolio(input: AwsServicecatalogDeletePortfolioInput!): JSON

  # servicecatalog.DeletePortfolioShare
  DeletePortfolioShare(input: AwsServicecatalogDeletePortfolioShareInput!): JSON

  # servicecatalog.DeleteProduct
  DeleteProduct(input: AwsServicecatalogDeleteProductInput!): JSON

  # servicecatalog.DeleteProvisioningArtifact
  DeleteProvisioningArtifact(input: AwsServicecatalogDeleteProvisioningArtifactInput!): JSON

  # servicecatalog.DescribeConstraint
  DescribeConstraint(input: AwsServicecatalogDescribeConstraintInput!): AwsServicecatalogDescribeConstraintOutput

  # servicecatalog.DescribeCopyProductStatus
  DescribeCopyProductStatus(input: AwsServicecatalogDescribeCopyProductStatusInput!): AwsServicecatalogDescribeCopyProductStatusOutput

  # servicecatalog.DescribePortfolio
  DescribePortfolio(input: AwsServicecatalogDescribePortfolioInput!): AwsServicecatalogDescribePortfolioOutput

  # servicecatalog.DescribeProduct
  DescribeProduct(input: AwsServicecatalogDescribeProductInput!): AwsServicecatalogDescribeProductOutput

  # servicecatalog.DescribeProductAsAdmin
  DescribeProductAsAdmin(input: AwsServicecatalogDescribeProductAsAdminInput!): AwsServicecatalogDescribeProductAsAdminOutput

  # servicecatalog.DescribeProductView
  DescribeProductView(input: AwsServicecatalogDescribeProductViewInput!): AwsServicecatalogDescribeProductViewOutput

  # servicecatalog.DescribeProvisionedProduct
  DescribeProvisionedProduct(input: AwsServicecatalogDescribeProvisionedProductInput!): AwsServicecatalogDescribeProvisionedProductOutput

  # servicecatalog.DescribeProvisioningArtifact
  DescribeProvisioningArtifact(input: AwsServicecatalogDescribeProvisioningArtifactInput!): AwsServicecatalogDescribeProvisioningArtifactOutput

  # servicecatalog.DescribeProvisioningParameters
  DescribeProvisioningParameters(input: AwsServicecatalogDescribeProvisioningParametersInput!): AwsServicecatalogDescribeProvisioningParametersOutput

  # servicecatalog.DescribeRecord
  DescribeRecord(input: AwsServicecatalogDescribeRecordInput!): AwsServicecatalogDescribeRecordOutput

  # servicecatalog.DescribeTagOption
  DescribeTagOption(input: AwsServicecatalogDescribeTagOptionInput!): AwsServicecatalogDescribeTagOptionOutput

  # servicecatalog.DisassociatePrincipalFromPortfolio
  DisassociatePrincipalFromPortfolio(input: AwsServicecatalogDisassociatePrincipalFromPortfolioInput!): JSON

  # servicecatalog.DisassociateProductFromPortfolio
  DisassociateProductFromPortfolio(input: AwsServicecatalogDisassociateProductFromPortfolioInput!): JSON

  # servicecatalog.DisassociateTagOptionFromResource
  DisassociateTagOptionFromResource(input: AwsServicecatalogDisassociateTagOptionFromResourceInput!): JSON

  # servicecatalog.ListAcceptedPortfolioShares
  ListAcceptedPortfolioShares(input: AwsServicecatalogListAcceptedPortfolioSharesInput): AwsServicecatalogListAcceptedPortfolioSharesOutput

  # servicecatalog.ListConstraintsForPortfolio
  ListConstraintsForPortfolio(input: AwsServicecatalogListConstraintsForPortfolioInput!): AwsServicecatalogListConstraintsForPortfolioOutput

  # servicecatalog.ListLaunchPaths
  ListLaunchPaths(input: AwsServicecatalogListLaunchPathsInput!): AwsServicecatalogListLaunchPathsOutput

  # servicecatalog.ListPortfolioAccess
  ListPortfolioAccess(input: AwsServicecatalogListPortfolioAccessInput!): AwsServicecatalogListPortfolioAccessOutput

  # servicecatalog.ListPortfolios
  ListPortfolios(input: AwsServicecatalogListPortfoliosInput): AwsServicecatalogListPortfoliosOutput

  # servicecatalog.ListPortfoliosForProduct
  ListPortfoliosForProduct(input: AwsServicecatalogListPortfoliosForProductInput!): AwsServicecatalogListPortfoliosForProductOutput

  # servicecatalog.ListPrincipalsForPortfolio
  ListPrincipalsForPortfolio(input: AwsServicecatalogListPrincipalsForPortfolioInput!): AwsServicecatalogListPrincipalsForPortfolioOutput

  # servicecatalog.ListProvisioningArtifacts
  ListProvisioningArtifacts(input: AwsServicecatalogListProvisioningArtifactsInput!): AwsServicecatalogListProvisioningArtifactsOutput

  # servicecatalog.ListRecordHistory
  ListRecordHistory(input: AwsServicecatalogListRecordHistoryInput): AwsServicecatalogListRecordHistoryOutput

  # servicecatalog.ListResourcesForTagOption
  ListResourcesForTagOption(input: AwsServicecatalogListResourcesForTagOptionInput!): AwsServicecatalogListResourcesForTagOptionOutput

  # servicecatalog.ListTagOptions
  ListTagOptions(input: AwsServicecatalogListTagOptionsInput): AwsServicecatalogListTagOptionsOutput

  # servicecatalog.ProvisionProduct
  ProvisionProduct(input: AwsServicecatalogProvisionProductInput!): AwsServicecatalogProvisionProductOutput

  # servicecatalog.RejectPortfolioShare
  RejectPortfolioShare(input: AwsServicecatalogRejectPortfolioShareInput!): JSON

  # servicecatalog.ScanProvisionedProducts
  ScanProvisionedProducts(input: AwsServicecatalogScanProvisionedProductsInput): AwsServicecatalogScanProvisionedProductsOutput

  # servicecatalog.SearchProducts
  SearchProducts(input: AwsServicecatalogSearchProductsInput): AwsServicecatalogSearchProductsOutput

  # servicecatalog.SearchProductsAsAdmin
  SearchProductsAsAdmin(input: AwsServicecatalogSearchProductsAsAdminInput): AwsServicecatalogSearchProductsAsAdminOutput

  # servicecatalog.TerminateProvisionedProduct
  TerminateProvisionedProduct(input: AwsServicecatalogTerminateProvisionedProductInput!): AwsServicecatalogTerminateProvisionedProductOutput

  # servicecatalog.UpdateConstraint
  UpdateConstraint(input: AwsServicecatalogUpdateConstraintInput!): AwsServicecatalogUpdateConstraintOutput

  # servicecatalog.UpdatePortfolio
  UpdatePortfolio(input: AwsServicecatalogUpdatePortfolioInput!): AwsServicecatalogUpdatePortfolioOutput

  # servicecatalog.UpdateProduct
  UpdateProduct(input: AwsServicecatalogUpdateProductInput!): AwsServicecatalogUpdateProductOutput

  # servicecatalog.UpdateProvisionedProduct
  UpdateProvisionedProduct(input: AwsServicecatalogUpdateProvisionedProductInput!): AwsServicecatalogUpdateProvisionedProductOutput

  # servicecatalog.UpdateProvisioningArtifact
  UpdateProvisioningArtifact(input: AwsServicecatalogUpdateProvisioningArtifactInput!): AwsServicecatalogUpdateProvisioningArtifactOutput

  # servicecatalog.UpdateTagOption
  UpdateTagOption(input: AwsServicecatalogUpdateTagOptionInput!): AwsServicecatalogUpdateTagOptionOutput
}

input AwsServicecatalogAcceptPortfolioShareInput {
  AcceptLanguage: String
  PortfolioId: String!
}

input AwsServicecatalogAssociatePrincipalWithPortfolioInput {
  AcceptLanguage: String
  PortfolioId: String!
  PrincipalARN: String!
  PrincipalType: String!
}

input AwsServicecatalogAssociateProductWithPortfolioInput {
  AcceptLanguage: String
  ProductId: String!
  PortfolioId: String!
  SourcePortfolioId: String
}

input AwsServicecatalogAssociateTagOptionWithResourceInput {
  ResourceId: String!
  TagOptionId: String!
}

input AwsServicecatalogCopyProductInput {
  AcceptLanguage: String
  SourceProductArn: String!
  TargetProductId: String
  TargetProductName: String
  SourceProvisioningArtifactIdentifiers: [JSON]
  CopyOptions: [String]
  IdempotencyToken: String!
}

type AwsServicecatalogCopyProductOutput {
  CopyProductToken: String
}

input AwsServicecatalogCreateConstraintInput {
  AcceptLanguage: String
  PortfolioId: String!
  ProductId: String!
  Parameters: String!
  Type: String!
  Description: String
  IdempotencyToken: String!
}

type AwsServicecatalogCreateConstraintOutput {
  ConstraintDetail: AwsServicecatalogSv
  ConstraintParameters: String
  Status: String
}

input AwsServicecatalogCreatePortfolioInput {
  AcceptLanguage: String
  DisplayName: String!
  Description: String
  ProviderName: String!
  Tags: [AwsServicecatalogS13Input]
  IdempotencyToken: String!
}

type AwsServicecatalogCreatePortfolioOutput {
  PortfolioDetail: AwsServicecatalogS17
  Tags: [AwsServicecatalogS13]
}

input AwsServicecatalogCreatePortfolioShareInput {
  AcceptLanguage: String
  PortfolioId: String!
  AccountId: String!
}

input AwsServicecatalogCreateProductInput {
  AcceptLanguage: String
  Name: String!
  Owner: String!
  Description: String
  Distributor: String
  SupportDescription: String
  SupportEmail: String
  SupportUrl: String
  ProductType: String!
  Tags: [AwsServicecatalogS13Input]
  ProvisioningArtifactParameters: AwsServicecatalogS1kInput!
  IdempotencyToken: String!
}

type AwsServicecatalogCreateProductOutput {
  ProductViewDetail: AwsServicecatalogS1s
  ProvisioningArtifactDetail: AwsServicecatalogS1x
  Tags: [AwsServicecatalogS13]
}

input AwsServicecatalogCreateProvisioningArtifactInput {
  AcceptLanguage: String
  ProductId: String!
  Parameters: AwsServicecatalogS1kInput!
  IdempotencyToken: String!
}

type AwsServicecatalogCreateProvisioningArtifactOutput {
  ProvisioningArtifactDetail: AwsServicecatalogS1x
  Info: JSON
  Status: String
}

input AwsServicecatalogCreateTagOptionInput {
  Key: String!
  Value: String!
}

type AwsServicecatalogCreateTagOptionOutput {
  TagOptionDetail: AwsServicecatalogS24
}

input AwsServicecatalogDeleteConstraintInput {
  AcceptLanguage: String
  Id: String!
}

input AwsServicecatalogDeletePortfolioInput {
  AcceptLanguage: String
  Id: String!
}

input AwsServicecatalogDeletePortfolioShareInput {
  AcceptLanguage: String
  PortfolioId: String!
  AccountId: String!
}

input AwsServicecatalogDeleteProductInput {
  AcceptLanguage: String
  Id: String!
}

input AwsServicecatalogDeleteProvisioningArtifactInput {
  AcceptLanguage: String
  ProductId: String!
  ProvisioningArtifactId: String!
}

input AwsServicecatalogDescribeConstraintInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServicecatalogDescribeConstraintOutput {
  ConstraintDetail: AwsServicecatalogSv
  ConstraintParameters: String
  Status: String
}

input AwsServicecatalogDescribeCopyProductStatusInput {
  AcceptLanguage: String
  CopyProductToken: String!
}

type AwsServicecatalogDescribeCopyProductStatusOutput {
  CopyProductStatus: String
  TargetProductId: String
  StatusDetail: String
}

input AwsServicecatalogDescribePortfolioInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServicecatalogDescribePortfolioOutput {
  PortfolioDetail: AwsServicecatalogS17
  Tags: [AwsServicecatalogS13]
  TagOptions: [AwsServicecatalogS24]
}

input AwsServicecatalogDescribeProductAsAdminInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServicecatalogDescribeProductAsAdminOutput {
  ProductViewDetail: AwsServicecatalogS1s
  ProvisioningArtifactSummaries: [AwsServicecatalogDescribeProductAsAdminOutputProvisioningArtifactSummaries]
  Tags: [AwsServicecatalogS13]
  TagOptions: [AwsServicecatalogS24]
}

type AwsServicecatalogDescribeProductAsAdminOutputProvisioningArtifactSummaries {
  Id: String
  Name: String
  Description: String
  CreatedTime: Date
  ProvisioningArtifactMetadata: JSON
}

input AwsServicecatalogDescribeProductInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServicecatalogDescribeProductOutput {
  ProductViewSummary: AwsServicecatalogS1t
  ProvisioningArtifacts: [AwsServicecatalogS2r]
}

input AwsServicecatalogDescribeProductViewInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServicecatalogDescribeProductViewOutput {
  ProductViewSummary: AwsServicecatalogS1t
  ProvisioningArtifacts: [AwsServicecatalogS2r]
}

input AwsServicecatalogDescribeProvisionedProductInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServicecatalogDescribeProvisionedProductOutput {
  ProvisionedProductDetail: AwsServicecatalogS32
}

input AwsServicecatalogDescribeProvisioningArtifactInput {
  AcceptLanguage: String
  ProvisioningArtifactId: String!
  ProductId: String!
  Verbose: Boolean
}

type AwsServicecatalogDescribeProvisioningArtifactOutput {
  ProvisioningArtifactDetail: AwsServicecatalogS1x
  Info: JSON
  Status: String
}

input AwsServicecatalogDescribeProvisioningParametersInput {
  AcceptLanguage: String
  ProductId: String!
  ProvisioningArtifactId: String!
  PathId: String
}

type AwsServicecatalogDescribeProvisioningParametersOutput {
  ProvisioningArtifactParameters: [AwsServicecatalogDescribeProvisioningParametersOutputProvisioningArtifactParameters]
  ConstraintSummaries: [AwsServicecatalogS3o]
  UsageInstructions: [AwsServicecatalogDescribeProvisioningParametersOutputUsageInstructions]
  TagOptions: [AwsServicecatalogDescribeProvisioningParametersOutputTagOptions]
}

type AwsServicecatalogDescribeProvisioningParametersOutputProvisioningArtifactParameters {
  ParameterKey: String
  DefaultValue: String
  ParameterType: String
  IsNoEcho: Boolean
  Description: String
  ParameterConstraints: AwsServicecatalogDescribeProvisioningParametersOutputProvisioningArtifactParametersParameterConstraints
}

type AwsServicecatalogDescribeProvisioningParametersOutputProvisioningArtifactParametersParameterConstraints {
  AllowedValues: [String]
}

type AwsServicecatalogDescribeProvisioningParametersOutputTagOptions {
  Key: String
  Values: [String]
}

type AwsServicecatalogDescribeProvisioningParametersOutputUsageInstructions {
  Type: String
  Value: String
}

input AwsServicecatalogDescribeRecordInput {
  AcceptLanguage: String
  Id: String!
  PageToken: String
  PageSize: Int
}

type AwsServicecatalogDescribeRecordOutput {
  RecordDetail: AwsServicecatalogS41
  RecordOutputs: [AwsServicecatalogDescribeRecordOutputRecordOutputs]
  NextPageToken: String
}

type AwsServicecatalogDescribeRecordOutputRecordOutputs {
  OutputKey: String
  OutputValue: String
  Description: String
}

input AwsServicecatalogDescribeTagOptionInput {
  Id: String!
}

type AwsServicecatalogDescribeTagOptionOutput {
  TagOptionDetail: AwsServicecatalogS24
}

input AwsServicecatalogDisassociatePrincipalFromPortfolioInput {
  AcceptLanguage: String
  PortfolioId: String!
  PrincipalARN: String!
}

input AwsServicecatalogDisassociateProductFromPortfolioInput {
  AcceptLanguage: String
  ProductId: String!
  PortfolioId: String!
}

input AwsServicecatalogDisassociateTagOptionFromResourceInput {
  ResourceId: String!
  TagOptionId: String!
}

input AwsServicecatalogListAcceptedPortfolioSharesInput {
  AcceptLanguage: String
  PageToken: String
  PageSize: Int
}

type AwsServicecatalogListAcceptedPortfolioSharesOutput {
  PortfolioDetails: [AwsServicecatalogS17]
  NextPageToken: String
}

input AwsServicecatalogListConstraintsForPortfolioInput {
  AcceptLanguage: String
  PortfolioId: String!
  ProductId: String
  PageSize: Int
  PageToken: String
}

type AwsServicecatalogListConstraintsForPortfolioOutput {
  ConstraintDetails: [AwsServicecatalogSv]
  NextPageToken: String
}

input AwsServicecatalogListLaunchPathsInput {
  AcceptLanguage: String
  ProductId: String!
  PageSize: Int
  PageToken: String
}

type AwsServicecatalogListLaunchPathsOutput {
  LaunchPathSummaries: [AwsServicecatalogListLaunchPathsOutputLaunchPathSummaries]
  NextPageToken: String
}

type AwsServicecatalogListLaunchPathsOutputLaunchPathSummaries {
  Id: String
  ConstraintSummaries: [AwsServicecatalogS3o]
  Tags: [AwsServicecatalogS13]
  Name: String
}

input AwsServicecatalogListPortfolioAccessInput {
  AcceptLanguage: String
  PortfolioId: String!
}

type AwsServicecatalogListPortfolioAccessOutput {
  AccountIds: [String]
  NextPageToken: String
}

input AwsServicecatalogListPortfoliosForProductInput {
  AcceptLanguage: String
  ProductId: String!
  PageToken: String
  PageSize: Int
}

type AwsServicecatalogListPortfoliosForProductOutput {
  PortfolioDetails: [AwsServicecatalogS17]
  NextPageToken: String
}

input AwsServicecatalogListPortfoliosInput {
  AcceptLanguage: String
  PageToken: String
  PageSize: Int
}

type AwsServicecatalogListPortfoliosOutput {
  PortfolioDetails: [AwsServicecatalogS17]
  NextPageToken: String
}

input AwsServicecatalogListPrincipalsForPortfolioInput {
  AcceptLanguage: String
  PortfolioId: String!
  PageSize: Int
  PageToken: String
}

type AwsServicecatalogListPrincipalsForPortfolioOutput {
  Principals: [AwsServicecatalogListPrincipalsForPortfolioOutputPrincipals]
  NextPageToken: String
}

type AwsServicecatalogListPrincipalsForPortfolioOutputPrincipals {
  PrincipalARN: String
  PrincipalType: String
}

input AwsServicecatalogListProvisioningArtifactsInput {
  AcceptLanguage: String
  ProductId: String!
}

type AwsServicecatalogListProvisioningArtifactsOutput {
  ProvisioningArtifactDetails: [AwsServicecatalogS1x]
  NextPageToken: String
}

input AwsServicecatalogListRecordHistoryInput {
  AcceptLanguage: String
  AccessLevelFilter: AwsServicecatalogS5gInput
  SearchFilter: AwsServicecatalogListRecordHistorySearchFilterInput
  PageSize: Int
  PageToken: String
}

type AwsServicecatalogListRecordHistoryOutput {
  RecordDetails: [AwsServicecatalogS41]
  NextPageToken: String
}

input AwsServicecatalogListRecordHistorySearchFilterInput {
  Key: String
  Value: String
}

input AwsServicecatalogListResourcesForTagOptionInput {
  TagOptionId: String!
  ResourceType: String
  PageSize: Int
  PageToken: String
}

type AwsServicecatalogListResourcesForTagOptionOutput {
  ResourceDetails: [AwsServicecatalogListResourcesForTagOptionOutputResourceDetails]
  PageToken: String
}

type AwsServicecatalogListResourcesForTagOptionOutputResourceDetails {
  Id: String
  ARN: String
  Name: String
  Description: String
  CreatedTime: Date
}

input AwsServicecatalogListTagOptionsFiltersInput {
  Key: String
  Value: String
  Active: Boolean
}

input AwsServicecatalogListTagOptionsInput {
  Filters: AwsServicecatalogListTagOptionsFiltersInput
  PageSize: Int
  PageToken: String
}

type AwsServicecatalogListTagOptionsOutput {
  TagOptionDetails: [AwsServicecatalogS24]
  PageToken: String
}

input AwsServicecatalogProvisionProductInput {
  AcceptLanguage: String
  ProductId: String!
  ProvisioningArtifactId: String!
  PathId: String
  ProvisionedProductName: String!
  ProvisioningParameters: [AwsServicecatalogProvisionProductProvisioningParametersInput]
  Tags: [AwsServicecatalogS13Input]
  NotificationArns: [String]
  ProvisionToken: String!
}

type AwsServicecatalogProvisionProductOutput {
  RecordDetail: AwsServicecatalogS41
}

input AwsServicecatalogProvisionProductProvisioningParametersInput {
  Key: String
  Value: String
}

input AwsServicecatalogRejectPortfolioShareInput {
  AcceptLanguage: String
  PortfolioId: String!
}

type AwsServicecatalogS13 {
  Key: String!
  Value: String!
}

input AwsServicecatalogS13Input {
  Key: String!
  Value: String!
}

type AwsServicecatalogS17 {
  Id: String
  ARN: String
  DisplayName: String
  Description: String
  CreatedTime: Date
  ProviderName: String
}

input AwsServicecatalogS1kInput {
  Name: String
  Description: String
  Info: JSON!
  Type: String
}

type AwsServicecatalogS1s {
  ProductViewSummary: AwsServicecatalogS1t
  Status: String
  ProductARN: String
  CreatedTime: Date
}

type AwsServicecatalogS1t {
  Id: String
  ProductId: String
  Name: String
  Owner: String
  ShortDescription: String
  Type: String
  Distributor: String
  HasDefaultPath: Boolean
  SupportEmail: String
  SupportDescription: String
  SupportUrl: String
}

type AwsServicecatalogS1x {
  Id: String
  Name: String
  Description: String
  Type: String
  CreatedTime: Date
}

type AwsServicecatalogS24 {
  Key: String
  Value: String
  Active: Boolean
  Id: String
}

type AwsServicecatalogS2r {
  Id: String
  Name: String
  Description: String
  CreatedTime: Date
}

type AwsServicecatalogS32 {
  Name: String
  Arn: String
  Type: String
  Id: String
  Status: String
  StatusMessage: String
  CreatedTime: Date
  IdempotencyToken: String
  LastRecordId: String
}

type AwsServicecatalogS3o {
  Type: String
  Description: String
}

type AwsServicecatalogS41 {
  RecordId: String
  ProvisionedProductName: String
  Status: String
  CreatedTime: Date
  UpdatedTime: Date
  ProvisionedProductType: String
  RecordType: String
  ProvisionedProductId: String
  ProductId: String
  ProvisioningArtifactId: String
  PathId: String
  RecordErrors: [AwsServicecatalogS41RecordErrors]
  RecordTags: [AwsServicecatalogS41RecordTags]
}

type AwsServicecatalogS41RecordErrors {
  Code: String
  Description: String
}

type AwsServicecatalogS41RecordTags {
  Key: String
  Value: String
}

input AwsServicecatalogS5gInput {
  Key: String
  Value: String
}

input AwsServicecatalogScanProvisionedProductsInput {
  AcceptLanguage: String
  AccessLevelFilter: AwsServicecatalogS5gInput
  PageSize: Int
  PageToken: String
}

type AwsServicecatalogScanProvisionedProductsOutput {
  ProvisionedProducts: [AwsServicecatalogS32]
  NextPageToken: String
}

input AwsServicecatalogSearchProductsAsAdminInput {
  AcceptLanguage: String
  PortfolioId: String
  Filters: JSON
  SortBy: String
  SortOrder: String
  PageToken: String
  PageSize: Int
  ProductSource: String
}

type AwsServicecatalogSearchProductsAsAdminOutput {
  ProductViewDetails: [AwsServicecatalogS1s]
  NextPageToken: String
}

input AwsServicecatalogSearchProductsInput {
  AcceptLanguage: String
  Filters: JSON
  PageSize: Int
  SortBy: String
  SortOrder: String
  PageToken: String
}

type AwsServicecatalogSearchProductsOutput {
  ProductViewSummaries: [AwsServicecatalogS1t]
  ProductViewAggregations: JSON
  NextPageToken: String
}

type AwsServicecatalogSv {
  ConstraintId: String
  Type: String
  Description: String
  Owner: String
}

input AwsServicecatalogTerminateProvisionedProductInput {
  ProvisionedProductName: String
  ProvisionedProductId: String
  TerminateToken: String!
  IgnoreErrors: Boolean
  AcceptLanguage: String
}

type AwsServicecatalogTerminateProvisionedProductOutput {
  RecordDetail: AwsServicecatalogS41
}

input AwsServicecatalogUpdateConstraintInput {
  AcceptLanguage: String
  Id: String!
  Description: String
}

type AwsServicecatalogUpdateConstraintOutput {
  ConstraintDetail: AwsServicecatalogSv
  ConstraintParameters: String
  Status: String
}

input AwsServicecatalogUpdatePortfolioInput {
  AcceptLanguage: String
  Id: String!
  DisplayName: String
  Description: String
  ProviderName: String
  AddTags: [AwsServicecatalogS13Input]
  RemoveTags: [String]
}

type AwsServicecatalogUpdatePortfolioOutput {
  PortfolioDetail: AwsServicecatalogS17
  Tags: [AwsServicecatalogS13]
}

input AwsServicecatalogUpdateProductInput {
  AcceptLanguage: String
  Id: String!
  Name: String
  Owner: String
  Description: String
  Distributor: String
  SupportDescription: String
  SupportEmail: String
  SupportUrl: String
  AddTags: [AwsServicecatalogS13Input]
  RemoveTags: [String]
}

type AwsServicecatalogUpdateProductOutput {
  ProductViewDetail: AwsServicecatalogS1s
  Tags: [AwsServicecatalogS13]
}

input AwsServicecatalogUpdateProvisionedProductInput {
  AcceptLanguage: String
  ProvisionedProductName: String
  ProvisionedProductId: String
  ProductId: String
  ProvisioningArtifactId: String
  PathId: String
  ProvisioningParameters: [AwsServicecatalogUpdateProvisionedProductProvisioningParametersInput]
  UpdateToken: String!
}

type AwsServicecatalogUpdateProvisionedProductOutput {
  RecordDetail: AwsServicecatalogS41
}

input AwsServicecatalogUpdateProvisionedProductProvisioningParametersInput {
  Key: String
  Value: String
  UsePreviousValue: Boolean
}

input AwsServicecatalogUpdateProvisioningArtifactInput {
  AcceptLanguage: String
  ProductId: String!
  ProvisioningArtifactId: String!
  Name: String
  Description: String
}

type AwsServicecatalogUpdateProvisioningArtifactOutput {
  ProvisioningArtifactDetail: AwsServicecatalogS1x
  Info: JSON
  Status: String
}

input AwsServicecatalogUpdateTagOptionInput {
  Id: String!
  Value: String
  Active: Boolean
}

type AwsServicecatalogUpdateTagOptionOutput {
  TagOptionDetail: AwsServicecatalogS24
}

# Amazon Simple Email Service (2010-12-01)
type AwsSes {
  # ses.CloneReceiptRuleSet
  CloneReceiptRuleSet(input: AwsSesCloneReceiptRuleSetInput!): JSON

  # ses.CreateConfigurationSet
  CreateConfigurationSet(input: AwsSesCreateConfigurationSetInput!): JSON

  # ses.CreateConfigurationSetEventDestination
  CreateConfigurationSetEventDestination(input: AwsSesCreateConfigurationSetEventDestinationInput!): JSON

  # ses.CreateConfigurationSetTrackingOptions
  CreateConfigurationSetTrackingOptions(input: AwsSesCreateConfigurationSetTrackingOptionsInput!): JSON

  # ses.CreateReceiptFilter
  CreateReceiptFilter(input: AwsSesCreateReceiptFilterInput!): JSON

  # ses.CreateReceiptRule
  CreateReceiptRule(input: AwsSesCreateReceiptRuleInput!): JSON

  # ses.CreateReceiptRuleSet
  CreateReceiptRuleSet(input: AwsSesCreateReceiptRuleSetInput!): JSON

  # ses.CreateTemplate
  CreateTemplate(input: AwsSesCreateTemplateInput!): JSON

  # ses.DeleteConfigurationSet
  DeleteConfigurationSet(input: AwsSesDeleteConfigurationSetInput!): JSON

  # ses.DeleteConfigurationSetEventDestination
  DeleteConfigurationSetEventDestination(input: AwsSesDeleteConfigurationSetEventDestinationInput!): JSON

  # ses.DeleteConfigurationSetTrackingOptions
  DeleteConfigurationSetTrackingOptions(input: AwsSesDeleteConfigurationSetTrackingOptionsInput!): JSON

  # ses.DeleteIdentity
  DeleteIdentity(input: AwsSesDeleteIdentityInput!): JSON

  # ses.DeleteIdentityPolicy
  DeleteIdentityPolicy(input: AwsSesDeleteIdentityPolicyInput!): JSON

  # ses.DeleteReceiptFilter
  DeleteReceiptFilter(input: AwsSesDeleteReceiptFilterInput!): JSON

  # ses.DeleteReceiptRule
  DeleteReceiptRule(input: AwsSesDeleteReceiptRuleInput!): JSON

  # ses.DeleteReceiptRuleSet
  DeleteReceiptRuleSet(input: AwsSesDeleteReceiptRuleSetInput!): JSON

  # ses.DeleteTemplate
  DeleteTemplate(input: AwsSesDeleteTemplateInput!): JSON

  # ses.DeleteVerifiedEmailAddress
  DeleteVerifiedEmailAddress(input: AwsSesDeleteVerifiedEmailAddressInput!): JSON

  # ses.DescribeActiveReceiptRuleSet
  DescribeActiveReceiptRuleSet(input: JSON): AwsSesDescribeActiveReceiptRuleSetOutput

  # ses.DescribeConfigurationSet
  DescribeConfigurationSet(input: AwsSesDescribeConfigurationSetInput!): AwsSesDescribeConfigurationSetOutput

  # ses.DescribeReceiptRule
  DescribeReceiptRule(input: AwsSesDescribeReceiptRuleInput!): AwsSesDescribeReceiptRuleOutput

  # ses.DescribeReceiptRuleSet
  DescribeReceiptRuleSet(input: AwsSesDescribeReceiptRuleSetInput!): AwsSesDescribeReceiptRuleSetOutput

  # ses.GetAccountSendingEnabled
  GetAccountSendingEnabled: AwsSesGetAccountSendingEnabledOutput

  # ses.GetIdentityDkimAttributes
  GetIdentityDkimAttributes(input: AwsSesGetIdentityDkimAttributesInput!): AwsSesGetIdentityDkimAttributesOutput

  # ses.GetIdentityMailFromDomainAttributes
  GetIdentityMailFromDomainAttributes(input: AwsSesGetIdentityMailFromDomainAttributesInput!): AwsSesGetIdentityMailFromDomainAttributesOutput

  # ses.GetIdentityNotificationAttributes
  GetIdentityNotificationAttributes(input: AwsSesGetIdentityNotificationAttributesInput!): AwsSesGetIdentityNotificationAttributesOutput

  # ses.GetIdentityPolicies
  GetIdentityPolicies(input: AwsSesGetIdentityPoliciesInput!): AwsSesGetIdentityPoliciesOutput

  # ses.GetIdentityVerificationAttributes
  GetIdentityVerificationAttributes(input: AwsSesGetIdentityVerificationAttributesInput!): AwsSesGetIdentityVerificationAttributesOutput

  # ses.GetSendQuota
  GetSendQuota: AwsSesGetSendQuotaOutput

  # ses.GetSendStatistics
  GetSendStatistics: AwsSesGetSendStatisticsOutput

  # ses.GetTemplate
  GetTemplate(input: AwsSesGetTemplateInput!): AwsSesGetTemplateOutput

  # ses.ListConfigurationSets
  ListConfigurationSets(input: AwsSesListConfigurationSetsInput): AwsSesListConfigurationSetsOutput

  # ses.ListIdentities
  ListIdentities(input: AwsSesListIdentitiesInput): AwsSesListIdentitiesOutput

  # ses.ListIdentityPolicies
  ListIdentityPolicies(input: AwsSesListIdentityPoliciesInput!): AwsSesListIdentityPoliciesOutput

  # ses.ListReceiptFilters
  ListReceiptFilters(input: JSON): AwsSesListReceiptFiltersOutput

  # ses.ListReceiptRuleSets
  ListReceiptRuleSets(input: AwsSesListReceiptRuleSetsInput): AwsSesListReceiptRuleSetsOutput

  # ses.ListTemplates
  ListTemplates(input: AwsSesListTemplatesInput): AwsSesListTemplatesOutput

  # ses.ListVerifiedEmailAddresses
  ListVerifiedEmailAddresses: AwsSesListVerifiedEmailAddressesOutput

  # ses.PutIdentityPolicy
  PutIdentityPolicy(input: AwsSesPutIdentityPolicyInput!): JSON

  # ses.ReorderReceiptRuleSet
  ReorderReceiptRuleSet(input: AwsSesReorderReceiptRuleSetInput!): JSON

  # ses.SendBounce
  SendBounce(input: AwsSesSendBounceInput!): AwsSesSendBounceOutput

  # ses.SendBulkTemplatedEmail
  SendBulkTemplatedEmail(input: AwsSesSendBulkTemplatedEmailInput!): AwsSesSendBulkTemplatedEmailOutput

  # ses.SendEmail
  SendEmail(input: AwsSesSendEmailInput!): AwsSesSendEmailOutput

  # ses.SendRawEmail
  SendRawEmail(input: AwsSesSendRawEmailInput!): AwsSesSendRawEmailOutput

  # ses.SendTemplatedEmail
  SendTemplatedEmail(input: AwsSesSendTemplatedEmailInput!): AwsSesSendTemplatedEmailOutput

  # ses.SetActiveReceiptRuleSet
  SetActiveReceiptRuleSet(input: AwsSesSetActiveReceiptRuleSetInput): JSON

  # ses.SetIdentityDkimEnabled
  SetIdentityDkimEnabled(input: AwsSesSetIdentityDkimEnabledInput!): JSON

  # ses.SetIdentityFeedbackForwardingEnabled
  SetIdentityFeedbackForwardingEnabled(input: AwsSesSetIdentityFeedbackForwardingEnabledInput!): JSON

  # ses.SetIdentityHeadersInNotificationsEnabled
  SetIdentityHeadersInNotificationsEnabled(input: AwsSesSetIdentityHeadersInNotificationsEnabledInput!): JSON

  # ses.SetIdentityMailFromDomain
  SetIdentityMailFromDomain(input: AwsSesSetIdentityMailFromDomainInput!): JSON

  # ses.SetIdentityNotificationTopic
  SetIdentityNotificationTopic(input: AwsSesSetIdentityNotificationTopicInput!): JSON

  # ses.SetReceiptRulePosition
  SetReceiptRulePosition(input: AwsSesSetReceiptRulePositionInput!): JSON

  # ses.TestRenderTemplate
  TestRenderTemplate(input: AwsSesTestRenderTemplateInput!): AwsSesTestRenderTemplateOutput

  # ses.UpdateAccountSendingEnabled
  UpdateAccountSendingEnabled(input: AwsSesUpdateAccountSendingEnabledInput): JSON

  # ses.UpdateConfigurationSetEventDestination
  UpdateConfigurationSetEventDestination(input: AwsSesUpdateConfigurationSetEventDestinationInput!): JSON

  # ses.UpdateConfigurationSetReputationMetricsEnabled
  UpdateConfigurationSetReputationMetricsEnabled(input: AwsSesUpdateConfigurationSetReputationMetricsEnabledInput!): JSON

  # ses.UpdateConfigurationSetSendingEnabled
  UpdateConfigurationSetSendingEnabled(input: AwsSesUpdateConfigurationSetSendingEnabledInput!): JSON

  # ses.UpdateConfigurationSetTrackingOptions
  UpdateConfigurationSetTrackingOptions(input: AwsSesUpdateConfigurationSetTrackingOptionsInput!): JSON

  # ses.UpdateReceiptRule
  UpdateReceiptRule(input: AwsSesUpdateReceiptRuleInput!): JSON

  # ses.UpdateTemplate
  UpdateTemplate(input: AwsSesUpdateTemplateInput!): JSON

  # ses.VerifyDomainDkim
  VerifyDomainDkim(input: AwsSesVerifyDomainDkimInput!): AwsSesVerifyDomainDkimOutput

  # ses.VerifyDomainIdentity
  VerifyDomainIdentity(input: AwsSesVerifyDomainIdentityInput!): AwsSesVerifyDomainIdentityOutput

  # ses.VerifyEmailAddress
  VerifyEmailAddress(input: AwsSesVerifyEmailAddressInput!): JSON

  # ses.VerifyEmailIdentity
  VerifyEmailIdentity(input: AwsSesVerifyEmailIdentityInput!): JSON
}

input AwsSesCloneReceiptRuleSetInput {
  RuleSetName: String!
  OriginalRuleSetName: String!
}

input AwsSesCreateConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestination: AwsSesS9Input!
}

input AwsSesCreateConfigurationSetInput {
  ConfigurationSet: AwsSesS5Input!
}

input AwsSesCreateConfigurationSetTrackingOptionsInput {
  ConfigurationSetName: String!
  TrackingOptions: AwsSesSpInput!
}

input AwsSesCreateReceiptFilterInput {
  Filter: AwsSesStInput!
}

input AwsSesCreateReceiptRuleInput {
  RuleSetName: String!
  After: String
  Rule: AwsSesS11Input!
}

input AwsSesCreateReceiptRuleSetInput {
  RuleSetName: String!
}

input AwsSesCreateTemplateInput {
  Template: AwsSesS1tInput!
}

input AwsSesDeleteConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestinationName: String!
}

input AwsSesDeleteConfigurationSetInput {
  ConfigurationSetName: String!
}

input AwsSesDeleteConfigurationSetTrackingOptionsInput {
  ConfigurationSetName: String!
}

input AwsSesDeleteIdentityInput {
  Identity: String!
}

input AwsSesDeleteIdentityPolicyInput {
  Identity: String!
  PolicyName: String!
}

input AwsSesDeleteReceiptFilterInput {
  FilterName: String!
}

input AwsSesDeleteReceiptRuleInput {
  RuleSetName: String!
  RuleName: String!
}

input AwsSesDeleteReceiptRuleSetInput {
  RuleSetName: String!
}

input AwsSesDeleteTemplateInput {
  TemplateName: String!
}

input AwsSesDeleteVerifiedEmailAddressInput {
  EmailAddress: String!
}

type AwsSesDescribeActiveReceiptRuleSetOutput {
  Metadata: AwsSesS2m
  Rules: [AwsSesS11]
}

input AwsSesDescribeConfigurationSetInput {
  ConfigurationSetName: String!
  ConfigurationSetAttributeNames: [String]
}

type AwsSesDescribeConfigurationSetOutput {
  ConfigurationSet: AwsSesS5
  EventDestinations: [AwsSesS9]
  TrackingOptions: AwsSesSp
  ReputationOptions: AwsSesDescribeConfigurationSetOutputReputationOptions
}

type AwsSesDescribeConfigurationSetOutputReputationOptions {
  SendingEnabled: Boolean
  ReputationMetricsEnabled: Boolean
  LastFreshStart: Date
}

input AwsSesDescribeReceiptRuleInput {
  RuleSetName: String!
  RuleName: String!
}

type AwsSesDescribeReceiptRuleOutput {
  Rule: AwsSesS11
}

input AwsSesDescribeReceiptRuleSetInput {
  RuleSetName: String!
}

type AwsSesDescribeReceiptRuleSetOutput {
  Metadata: AwsSesS2m
  Rules: [AwsSesS11]
}

type AwsSesGetAccountSendingEnabledOutput {
  Enabled: Boolean
}

input AwsSesGetIdentityDkimAttributesInput {
  Identities: [String]!
}

type AwsSesGetIdentityDkimAttributesOutput {
  DkimAttributes: JSON!
}

input AwsSesGetIdentityMailFromDomainAttributesInput {
  Identities: [String]!
}

type AwsSesGetIdentityMailFromDomainAttributesOutput {
  MailFromDomainAttributes: JSON!
}

input AwsSesGetIdentityNotificationAttributesInput {
  Identities: [String]!
}

type AwsSesGetIdentityNotificationAttributesOutput {
  NotificationAttributes: JSON!
}

input AwsSesGetIdentityPoliciesInput {
  Identity: String!
  PolicyNames: [String]!
}

type AwsSesGetIdentityPoliciesOutput {
  Policies: JSON!
}

input AwsSesGetIdentityVerificationAttributesInput {
  Identities: [String]!
}

type AwsSesGetIdentityVerificationAttributesOutput {
  VerificationAttributes: JSON!
}

type AwsSesGetSendQuotaOutput {
  Max24HourSend: JSON
  MaxSendRate: JSON
  SentLast24Hours: JSON
}

type AwsSesGetSendStatisticsOutput {
  SendDataPoints: [AwsSesGetSendStatisticsOutputSendDataPoints]
}

type AwsSesGetSendStatisticsOutputSendDataPoints {
  Timestamp: Date
  DeliveryAttempts: JSON
  Bounces: JSON
  Complaints: JSON
  Rejects: JSON
}

input AwsSesGetTemplateInput {
  TemplateName: String!
}

type AwsSesGetTemplateOutput {
  Template: AwsSesS1t
}

input AwsSesListConfigurationSetsInput {
  NextToken: String
  MaxItems: Int
}

type AwsSesListConfigurationSetsOutput {
  ConfigurationSets: [AwsSesS5]
  NextToken: String
}

input AwsSesListIdentitiesInput {
  IdentityType: String
  NextToken: String
  MaxItems: Int
}

type AwsSesListIdentitiesOutput {
  Identities: [String]!
  NextToken: String
}

input AwsSesListIdentityPoliciesInput {
  Identity: String!
}

type AwsSesListIdentityPoliciesOutput {
  PolicyNames: [String]!
}

type AwsSesListReceiptFiltersOutput {
  Filters: [AwsSesSt]
}

input AwsSesListReceiptRuleSetsInput {
  NextToken: String
}

type AwsSesListReceiptRuleSetsOutput {
  RuleSets: [AwsSesS2m]
  NextToken: String
}

input AwsSesListTemplatesInput {
  NextToken: String
  MaxItems: Int
}

type AwsSesListTemplatesOutput {
  TemplatesMetadata: [AwsSesListTemplatesOutputTemplatesMetadata]
  NextToken: String
}

type AwsSesListTemplatesOutputTemplatesMetadata {
  Name: String
  CreatedTimestamp: Date
}

type AwsSesListVerifiedEmailAddressesOutput {
  VerifiedEmailAddresses: [String]
}

input AwsSesPutIdentityPolicyInput {
  Identity: String!
  PolicyName: String!
  Policy: String!
}

input AwsSesReorderReceiptRuleSetInput {
  RuleSetName: String!
  RuleNames: [String]!
}

type AwsSesS11 {
  Name: String!
  Enabled: Boolean
  TlsPolicy: String
  Recipients: [String]
  Actions: [AwsSesS11Actions]
  ScanEnabled: Boolean
}

type AwsSesS11Actions {
  S3Action: AwsSesS11ActionsS3Action
  BounceAction: AwsSesS11ActionsBounceAction
  WorkmailAction: AwsSesS11ActionsWorkmailAction
  LambdaAction: AwsSesS11ActionsLambdaAction
  StopAction: AwsSesS11ActionsStopAction
  AddHeaderAction: AwsSesS11ActionsAddHeaderAction
  SNSAction: AwsSesS11ActionsSNSAction
}

type AwsSesS11ActionsAddHeaderAction {
  HeaderName: String!
  HeaderValue: String!
}

input AwsSesS11ActionsAddHeaderActionInput {
  HeaderName: String!
  HeaderValue: String!
}

type AwsSesS11ActionsBounceAction {
  TopicArn: String
  SmtpReplyCode: String!
  StatusCode: String
  Message: String!
  Sender: String!
}

input AwsSesS11ActionsBounceActionInput {
  TopicArn: String
  SmtpReplyCode: String!
  StatusCode: String
  Message: String!
  Sender: String!
}

input AwsSesS11ActionsInput {
  S3Action: AwsSesS11ActionsS3ActionInput
  BounceAction: AwsSesS11ActionsBounceActionInput
  WorkmailAction: AwsSesS11ActionsWorkmailActionInput
  LambdaAction: AwsSesS11ActionsLambdaActionInput
  StopAction: AwsSesS11ActionsStopActionInput
  AddHeaderAction: AwsSesS11ActionsAddHeaderActionInput
  SNSAction: AwsSesS11ActionsSNSActionInput
}

type AwsSesS11ActionsLambdaAction {
  TopicArn: String
  FunctionArn: String!
  InvocationType: String
}

input AwsSesS11ActionsLambdaActionInput {
  TopicArn: String
  FunctionArn: String!
  InvocationType: String
}

type AwsSesS11ActionsS3Action {
  TopicArn: String
  BucketName: String!
  ObjectKeyPrefix: String
  KmsKeyArn: String
}

input AwsSesS11ActionsS3ActionInput {
  TopicArn: String
  BucketName: String!
  ObjectKeyPrefix: String
  KmsKeyArn: String
}

type AwsSesS11ActionsSNSAction {
  TopicArn: String!
  Encoding: String
}

input AwsSesS11ActionsSNSActionInput {
  TopicArn: String!
  Encoding: String
}

type AwsSesS11ActionsStopAction {
  Scope: String!
  TopicArn: String
}

input AwsSesS11ActionsStopActionInput {
  Scope: String!
  TopicArn: String
}

type AwsSesS11ActionsWorkmailAction {
  TopicArn: String
  OrganizationArn: String!
}

input AwsSesS11ActionsWorkmailActionInput {
  TopicArn: String
  OrganizationArn: String!
}

input AwsSesS11Input {
  Name: String!
  Enabled: Boolean
  TlsPolicy: String
  Recipients: [String]
  Actions: [AwsSesS11ActionsInput]
  ScanEnabled: Boolean
}

type AwsSesS1t {
  TemplateName: String!
  SubjectPart: String
  TextPart: String
  HtmlPart: String
}

input AwsSesS1tInput {
  TemplateName: String!
  SubjectPart: String
  TextPart: String
  HtmlPart: String
}

type AwsSesS2m {
  Name: String
  CreatedTimestamp: Date
}

type AwsSesS5 {
  Name: String!
}

input AwsSesS51Input {
  Name: String!
  Value: String!
}

input AwsSesS5gInput {
  Name: String!
  Value: String!
}

input AwsSesS5Input {
  Name: String!
}

input AwsSesS5nInput {
  ToAddresses: [String]
  CcAddresses: [String]
  BccAddresses: [String]
}

input AwsSesS5vInput {
  Data: String!
  Charset: String
}

type AwsSesS9 {
  Name: String!
  Enabled: Boolean
  MatchingEventTypes: [String]!
  KinesisFirehoseDestination: AwsSesS9KinesisFirehoseDestination
  CloudWatchDestination: AwsSesS9CloudWatchDestination
  SNSDestination: AwsSesS9SNSDestination
}

type AwsSesS9CloudWatchDestination {
  DimensionConfigurations: [AwsSesS9CloudWatchDestinationDimensionConfigurations]!
}

type AwsSesS9CloudWatchDestinationDimensionConfigurations {
  DimensionName: String!
  DimensionValueSource: String!
  DefaultDimensionValue: String!
}

input AwsSesS9CloudWatchDestinationDimensionConfigurationsInput {
  DimensionName: String!
  DimensionValueSource: String!
  DefaultDimensionValue: String!
}

input AwsSesS9CloudWatchDestinationInput {
  DimensionConfigurations: [AwsSesS9CloudWatchDestinationDimensionConfigurationsInput]!
}

input AwsSesS9Input {
  Name: String!
  Enabled: Boolean
  MatchingEventTypes: [String]!
  KinesisFirehoseDestination: AwsSesS9KinesisFirehoseDestinationInput
  CloudWatchDestination: AwsSesS9CloudWatchDestinationInput
  SNSDestination: AwsSesS9SNSDestinationInput
}

type AwsSesS9KinesisFirehoseDestination {
  IAMRoleARN: String!
  DeliveryStreamARN: String!
}

input AwsSesS9KinesisFirehoseDestinationInput {
  IAMRoleARN: String!
  DeliveryStreamARN: String!
}

type AwsSesS9SNSDestination {
  TopicARN: String!
}

input AwsSesS9SNSDestinationInput {
  TopicARN: String!
}

input AwsSesSendBounceBouncedRecipientInfoListInput {
  Recipient: String!
  RecipientArn: String
  BounceType: String
  RecipientDsnFields: AwsSesSendBounceBouncedRecipientInfoListRecipientDsnFieldsInput
}

input AwsSesSendBounceBouncedRecipientInfoListRecipientDsnFieldsInput {
  FinalRecipient: String
  Action: String!
  RemoteMta: String
  Status: String!
  DiagnosticCode: String
  LastAttemptDate: Date
  ExtensionFields: [AwsSesS51Input]
}

input AwsSesSendBounceInput {
  OriginalMessageId: String!
  BounceSender: String!
  Explanation: String
  MessageDsn: AwsSesSendBounceMessageDsnInput
  BouncedRecipientInfoList: [AwsSesSendBounceBouncedRecipientInfoListInput]!
  BounceSenderArn: String
}

input AwsSesSendBounceMessageDsnInput {
  ReportingMta: String!
  ArrivalDate: Date
  ExtensionFields: [AwsSesS51Input]
}

type AwsSesSendBounceOutput {
  MessageId: String
}

input AwsSesSendBulkTemplatedEmailDestinationsInput {
  Destination: AwsSesS5nInput!
  ReplacementTags: [AwsSesS5gInput]
  ReplacementTemplateData: String
}

input AwsSesSendBulkTemplatedEmailInput {
  Source: String!
  SourceArn: String
  ReplyToAddresses: [String]
  ReturnPath: String
  ReturnPathArn: String
  ConfigurationSetName: String
  DefaultTags: [AwsSesS5gInput]
  Template: String!
  TemplateArn: String
  DefaultTemplateData: String
  Destinations: [AwsSesSendBulkTemplatedEmailDestinationsInput]!
}

type AwsSesSendBulkTemplatedEmailOutput {
  Status: [AwsSesSendBulkTemplatedEmailOutputStatus]!
}

type AwsSesSendBulkTemplatedEmailOutputStatus {
  Status: String
  Error: String
  MessageId: String
}

input AwsSesSendEmailInput {
  Source: String!
  Destination: AwsSesS5nInput!
  Message: AwsSesSendEmailMessageInput!
  ReplyToAddresses: [String]
  ReturnPath: String
  SourceArn: String
  ReturnPathArn: String
  Tags: [AwsSesS5gInput]
  ConfigurationSetName: String
}

input AwsSesSendEmailMessageBodyInput {
  Text: AwsSesS5vInput
  Html: AwsSesS5vInput
}

input AwsSesSendEmailMessageInput {
  Subject: AwsSesS5vInput!
  Body: AwsSesSendEmailMessageBodyInput!
}

type AwsSesSendEmailOutput {
  MessageId: String!
}

input AwsSesSendRawEmailInput {
  Source: String
  Destinations: [String]
  RawMessage: AwsSesSendRawEmailRawMessageInput!
  FromArn: String
  SourceArn: String
  ReturnPathArn: String
  Tags: [AwsSesS5gInput]
  ConfigurationSetName: String
}

type AwsSesSendRawEmailOutput {
  MessageId: String!
}

input AwsSesSendRawEmailRawMessageInput {
  Data: JSON!
}

input AwsSesSendTemplatedEmailInput {
  Source: String!
  Destination: AwsSesS5nInput!
  ReplyToAddresses: [String]
  ReturnPath: String
  SourceArn: String
  ReturnPathArn: String
  Tags: [AwsSesS5gInput]
  ConfigurationSetName: String
  Template: String!
  TemplateArn: String
  TemplateData: String!
}

type AwsSesSendTemplatedEmailOutput {
  MessageId: String!
}

input AwsSesSetActiveReceiptRuleSetInput {
  RuleSetName: String
}

input AwsSesSetIdentityDkimEnabledInput {
  Identity: String!
  DkimEnabled: Boolean!
}

input AwsSesSetIdentityFeedbackForwardingEnabledInput {
  Identity: String!
  ForwardingEnabled: Boolean!
}

input AwsSesSetIdentityHeadersInNotificationsEnabledInput {
  Identity: String!
  NotificationType: String!
  Enabled: Boolean!
}

input AwsSesSetIdentityMailFromDomainInput {
  Identity: String!
  MailFromDomain: String
  BehaviorOnMXFailure: String
}

input AwsSesSetIdentityNotificationTopicInput {
  Identity: String!
  NotificationType: String!
  SnsTopic: String
}

input AwsSesSetReceiptRulePositionInput {
  RuleSetName: String!
  RuleName: String!
  After: String
}

type AwsSesSp {
  CustomRedirectDomain: String
}

input AwsSesSpInput {
  CustomRedirectDomain: String
}

type AwsSesSt {
  Name: String!
  IpFilter: AwsSesStIpFilter!
}

input AwsSesStInput {
  Name: String!
  IpFilter: AwsSesStIpFilterInput!
}

type AwsSesStIpFilter {
  Policy: String!
  Cidr: String!
}

input AwsSesStIpFilterInput {
  Policy: String!
  Cidr: String!
}

input AwsSesTestRenderTemplateInput {
  TemplateName: String!
  TemplateData: String!
}

type AwsSesTestRenderTemplateOutput {
  RenderedTemplate: String
}

input AwsSesUpdateAccountSendingEnabledInput {
  Enabled: Boolean
}

input AwsSesUpdateConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestination: AwsSesS9Input!
}

input AwsSesUpdateConfigurationSetReputationMetricsEnabledInput {
  ConfigurationSetName: String!
  Enabled: Boolean!
}

input AwsSesUpdateConfigurationSetSendingEnabledInput {
  ConfigurationSetName: String!
  Enabled: Boolean!
}

input AwsSesUpdateConfigurationSetTrackingOptionsInput {
  ConfigurationSetName: String!
  TrackingOptions: AwsSesSpInput!
}

input AwsSesUpdateReceiptRuleInput {
  RuleSetName: String!
  Rule: AwsSesS11Input!
}

input AwsSesUpdateTemplateInput {
  Template: AwsSesS1tInput!
}

input AwsSesVerifyDomainDkimInput {
  Domain: String!
}

type AwsSesVerifyDomainDkimOutput {
  DkimTokens: [String]!
}

input AwsSesVerifyDomainIdentityInput {
  Domain: String!
}

type AwsSesVerifyDomainIdentityOutput {
  VerificationToken: String!
}

input AwsSesVerifyEmailAddressInput {
  EmailAddress: String!
}

input AwsSesVerifyEmailIdentityInput {
  EmailAddress: String!
}

# AWS Shield (2016-06-02)
type AwsShield {
  # shield.CreateProtection
  CreateProtection(input: AwsShieldCreateProtectionInput!): AwsShieldCreateProtectionOutput

  # shield.CreateSubscription
  CreateSubscription(input: JSON): JSON

  # shield.DeleteProtection
  DeleteProtection(input: AwsShieldDeleteProtectionInput!): JSON

  # shield.DeleteSubscription
  DeleteSubscription(input: JSON): JSON

  # shield.DescribeAttack
  DescribeAttack(input: AwsShieldDescribeAttackInput!): AwsShieldDescribeAttackOutput

  # shield.DescribeProtection
  DescribeProtection(input: AwsShieldDescribeProtectionInput!): AwsShieldDescribeProtectionOutput

  # shield.DescribeSubscription
  DescribeSubscription(input: JSON): AwsShieldDescribeSubscriptionOutput

  # shield.GetSubscriptionState
  GetSubscriptionState(input: JSON): AwsShieldGetSubscriptionStateOutput

  # shield.ListAttacks
  ListAttacks(input: AwsShieldListAttacksInput): AwsShieldListAttacksOutput

  # shield.ListProtections
  ListProtections(input: AwsShieldListProtectionsInput): AwsShieldListProtectionsOutput
}

input AwsShieldCreateProtectionInput {
  Name: String!
  ResourceArn: String!
}

type AwsShieldCreateProtectionOutput {
  ProtectionId: String
}

input AwsShieldDeleteProtectionInput {
  ProtectionId: String!
}

input AwsShieldDescribeAttackInput {
  AttackId: String!
}

type AwsShieldDescribeAttackOutput {
  Attack: AwsShieldDescribeAttackOutputAttack
}

type AwsShieldDescribeAttackOutputAttack {
  AttackId: String
  ResourceArn: String
  SubResources: [AwsShieldDescribeAttackOutputAttackSubResources]
  StartTime: Date
  EndTime: Date
  AttackCounters: [AwsShieldSm]
  AttackProperties: [AwsShieldDescribeAttackOutputAttackAttackProperties]
  Mitigations: [AwsShieldDescribeAttackOutputAttackMitigations]
}

type AwsShieldDescribeAttackOutputAttackAttackProperties {
  AttackLayer: String
  AttackPropertyIdentifier: String
  TopContributors: [AwsShieldDescribeAttackOutputAttackAttackPropertiesTopContributors]
  Unit: String
  Total: JSON
}

type AwsShieldDescribeAttackOutputAttackAttackPropertiesTopContributors {
  Name: String
  Value: JSON
}

type AwsShieldDescribeAttackOutputAttackMitigations {
  MitigationName: String
}

type AwsShieldDescribeAttackOutputAttackSubResources {
  Type: String
  Id: String
  AttackVectors: [AwsShieldDescribeAttackOutputAttackSubResourcesAttackVectors]
  Counters: [AwsShieldSm]
}

type AwsShieldDescribeAttackOutputAttackSubResourcesAttackVectors {
  VectorType: String!
  VectorCounters: [AwsShieldSm]
}

input AwsShieldDescribeProtectionInput {
  ProtectionId: String!
}

type AwsShieldDescribeProtectionOutput {
  Protection: AwsShieldS13
}

type AwsShieldDescribeSubscriptionOutput {
  Subscription: AwsShieldDescribeSubscriptionOutputSubscription
}

type AwsShieldDescribeSubscriptionOutputSubscription {
  StartTime: Date
  TimeCommitmentInSeconds: JSON
}

type AwsShieldGetSubscriptionStateOutput {
  SubscriptionState: String!
}

input AwsShieldListAttacksInput {
  ResourceArns: [String]
  StartTime: AwsShieldS1eInput
  EndTime: AwsShieldS1eInput
  NextToken: String
  MaxResults: Int
}

type AwsShieldListAttacksOutput {
  AttackSummaries: [AwsShieldListAttacksOutputAttackSummaries]
  NextToken: String
}

type AwsShieldListAttacksOutputAttackSummaries {
  AttackId: String
  ResourceArn: String
  StartTime: Date
  EndTime: Date
  AttackVectors: [AwsShieldListAttacksOutputAttackSummariesAttackVectors]
}

type AwsShieldListAttacksOutputAttackSummariesAttackVectors {
  VectorType: String!
}

input AwsShieldListProtectionsInput {
  NextToken: String
  MaxResults: Int
}

type AwsShieldListProtectionsOutput {
  Protections: [AwsShieldS13]
  NextToken: String
}

type AwsShieldS13 {
  Id: String
  Name: String
  ResourceArn: String
}

input AwsShieldS1eInput {
  FromInclusive: Date
  ToExclusive: Date
}

type AwsShieldSm {
  Name: String
  Max: JSON
  Average: JSON
  Sum: JSON
  N: Int
  Unit: String
}

# Amazon SimpleDB (2009-04-15)
type AwsSimpledb {
  # simpledb.BatchDeleteAttributes
  BatchDeleteAttributes(input: AwsSimpledbBatchDeleteAttributesInput!): JSON

  # simpledb.BatchPutAttributes
  BatchPutAttributes(input: AwsSimpledbBatchPutAttributesInput!): JSON

  # simpledb.CreateDomain
  CreateDomain(input: AwsSimpledbCreateDomainInput!): JSON

  # simpledb.DeleteAttributes
  DeleteAttributes(input: AwsSimpledbDeleteAttributesInput!): JSON

  # simpledb.DeleteDomain
  DeleteDomain(input: AwsSimpledbDeleteDomainInput!): JSON

  # simpledb.DomainMetadata
  DomainMetadata(input: AwsSimpledbDomainMetadataInput!): AwsSimpledbDomainMetadataOutput

  # simpledb.GetAttributes
  GetAttributes(input: AwsSimpledbGetAttributesInput!): AwsSimpledbGetAttributesOutput

  # simpledb.ListDomains
  ListDomains(input: AwsSimpledbListDomainsInput): AwsSimpledbListDomainsOutput

  # simpledb.PutAttributes
  PutAttributes(input: AwsSimpledbPutAttributesInput!): JSON

  # simpledb.Select
  Select(input: AwsSimpledbSelectInput!): AwsSimpledbSelectOutput
}

input AwsSimpledbBatchDeleteAttributesInput {
  DomainName: String!
  Items: [AwsSimpledbBatchDeleteAttributesItemsInput]!
}

input AwsSimpledbBatchDeleteAttributesItemsInput {
  Name: String!
  Attributes: [AwsSimpledbS5Input]
}

input AwsSimpledbBatchPutAttributesInput {
  DomainName: String!
  Items: [AwsSimpledbBatchPutAttributesItemsInput]!
}

input AwsSimpledbBatchPutAttributesItemsInput {
  Name: String!
  Attributes: [AwsSimpledbSaInput]!
}

input AwsSimpledbCreateDomainInput {
  DomainName: String!
}

input AwsSimpledbDeleteAttributesInput {
  DomainName: String!
  ItemName: String!
  Attributes: [AwsSimpledbS5Input]
  Expected: AwsSimpledbSfInput
}

input AwsSimpledbDeleteDomainInput {
  DomainName: String!
}

input AwsSimpledbDomainMetadataInput {
  DomainName: String!
}

type AwsSimpledbDomainMetadataOutput {
  ItemCount: Int
  ItemNamesSizeBytes: JSON
  AttributeNameCount: Int
  AttributeNamesSizeBytes: JSON
  AttributeValueCount: Int
  AttributeValuesSizeBytes: JSON
  Timestamp: Int
}

input AwsSimpledbGetAttributesInput {
  DomainName: String!
  ItemName: String!
  AttributeNames: [String]
  ConsistentRead: Boolean
}

type AwsSimpledbGetAttributesOutput {
  Attributes: [AwsSimpledbSo]
}

input AwsSimpledbListDomainsInput {
  MaxNumberOfDomains: Int
  NextToken: String
}

type AwsSimpledbListDomainsOutput {
  DomainNames: [String]
  NextToken: String
}

input AwsSimpledbPutAttributesInput {
  DomainName: String!
  ItemName: String!
  Attributes: [AwsSimpledbSaInput]!
  Expected: AwsSimpledbSfInput
}

input AwsSimpledbS5Input {
  Name: String!
  Value: String
}

input AwsSimpledbSaInput {
  Name: String!
  Value: String!
  Replace: Boolean
}

input AwsSimpledbSelectInput {
  SelectExpression: String!
  NextToken: String
  ConsistentRead: Boolean
}

type AwsSimpledbSelectOutput {
  Items: [AwsSimpledbSelectOutputItems]
  NextToken: String
}

type AwsSimpledbSelectOutputItems {
  Name: String!
  AlternateNameEncoding: String
  Attributes: [AwsSimpledbSo]!
}

input AwsSimpledbSfInput {
  Name: String
  Value: String
  Exists: Boolean
}

type AwsSimpledbSo {
  Name: String!
  AlternateNameEncoding: String
  Value: String!
  AlternateValueEncoding: String
}

# AWS Server Migration Service (2016-10-24)
type AwsSms {
  # sms.CreateReplicationJob
  CreateReplicationJob(input: AwsSmsCreateReplicationJobInput!): AwsSmsCreateReplicationJobOutput

  # sms.DeleteReplicationJob
  DeleteReplicationJob(input: AwsSmsDeleteReplicationJobInput!): JSON

  # sms.DeleteServerCatalog
  DeleteServerCatalog(input: JSON): JSON

  # sms.DisassociateConnector
  DisassociateConnector(input: AwsSmsDisassociateConnectorInput!): JSON

  # sms.GetConnectors
  GetConnectors(input: AwsSmsGetConnectorsInput): AwsSmsGetConnectorsOutput

  # sms.GetReplicationJobs
  GetReplicationJobs(input: AwsSmsGetReplicationJobsInput): AwsSmsGetReplicationJobsOutput

  # sms.GetReplicationRuns
  GetReplicationRuns(input: AwsSmsGetReplicationRunsInput!): AwsSmsGetReplicationRunsOutput

  # sms.GetServers
  GetServers(input: AwsSmsGetServersInput): AwsSmsGetServersOutput

  # sms.ImportServerCatalog
  ImportServerCatalog(input: JSON): JSON

  # sms.StartOnDemandReplicationRun
  StartOnDemandReplicationRun(input: AwsSmsStartOnDemandReplicationRunInput!): AwsSmsStartOnDemandReplicationRunOutput

  # sms.UpdateReplicationJob
  UpdateReplicationJob(input: AwsSmsUpdateReplicationJobInput!): JSON
}

input AwsSmsCreateReplicationJobInput {
  serverId: String!
  seedReplicationTime: Date!
  frequency: Int!
  licenseType: String
  roleName: String
  description: String
}

type AwsSmsCreateReplicationJobOutput {
  replicationJobId: String
}

input AwsSmsDeleteReplicationJobInput {
  replicationJobId: String!
}

input AwsSmsDisassociateConnectorInput {
  connectorId: String!
}

input AwsSmsGetConnectorsInput {
  nextToken: String
  maxResults: Int
}

type AwsSmsGetConnectorsOutput {
  connectorList: [AwsSmsGetConnectorsOutputConnectorList]
  nextToken: String
}

type AwsSmsGetConnectorsOutputConnectorList {
  connectorId: String
  version: String
  status: String
  capabilityList: [String]
  vmManagerName: String
  vmManagerType: String
  vmManagerId: String
  ipAddress: String
  macAddress: String
  associatedOn: Date
}

input AwsSmsGetReplicationJobsInput {
  replicationJobId: String
  nextToken: String
  maxResults: Int
}

type AwsSmsGetReplicationJobsOutput {
  replicationJobList: [AwsSmsSz]
  nextToken: String
}

input AwsSmsGetReplicationRunsInput {
  replicationJobId: String!
  nextToken: String
  maxResults: Int
}

type AwsSmsGetReplicationRunsOutput {
  replicationJob: AwsSmsSz
  replicationRunList: [AwsSmsS19]
  nextToken: String
}

input AwsSmsGetServersInput {
  nextToken: String
  maxResults: Int
}

type AwsSmsGetServersOutput {
  lastModifiedOn: Date
  serverCatalogStatus: String
  serverList: [AwsSmsGetServersOutputServerList]
  nextToken: String
}

type AwsSmsGetServersOutputServerList {
  serverId: String
  serverType: String
  vmServer: AwsSmsS11
  replicationJobId: String
  replicationJobTerminated: Boolean
}

type AwsSmsS11 {
  vmServerAddress: AwsSmsS11VmServerAddress
  vmName: String
  vmManagerName: String
  vmManagerType: String
  vmPath: String
}

type AwsSmsS11VmServerAddress {
  vmManagerId: String
  vmId: String
}

type AwsSmsS19 {
  replicationRunId: String
  state: String
  type: String
  statusMessage: String
  amiId: String
  scheduledStartTime: Date
  completedTime: Date
  description: String
}

input AwsSmsStartOnDemandReplicationRunInput {
  replicationJobId: String!
  description: String
}

type AwsSmsStartOnDemandReplicationRunOutput {
  replicationRunId: String
}

type AwsSmsSz {
  replicationJobId: String
  serverId: String
  serverType: String
  vmServer: AwsSmsS11
  seedReplicationTime: Date
  frequency: Int
  nextReplicationRunStartTime: Date
  licenseType: String
  roleName: String
  latestAmiId: String
  state: String
  statusMessage: String
  description: String
  replicationRunList: [AwsSmsS19]
}

input AwsSmsUpdateReplicationJobInput {
  replicationJobId: String!
  frequency: Int
  nextReplicationRunStartTime: Date
  licenseType: String
  roleName: String
  description: String
}

# Amazon Import/Export Snowball (2016-06-30)
type AwsSnowball {
  # snowball.CancelCluster
  CancelCluster(input: AwsSnowballCancelClusterInput!): JSON

  # snowball.CancelJob
  CancelJob(input: AwsSnowballCancelJobInput!): JSON

  # snowball.CreateAddress
  CreateAddress(input: AwsSnowballCreateAddressInput!): AwsSnowballCreateAddressOutput

  # snowball.CreateCluster
  CreateCluster(input: AwsSnowballCreateClusterInput!): AwsSnowballCreateClusterOutput

  # snowball.CreateJob
  CreateJob(input: AwsSnowballCreateJobInput): AwsSnowballCreateJobOutput

  # snowball.DescribeAddress
  DescribeAddress(input: AwsSnowballDescribeAddressInput!): AwsSnowballDescribeAddressOutput

  # snowball.DescribeAddresses
  DescribeAddresses(input: AwsSnowballDescribeAddressesInput): AwsSnowballDescribeAddressesOutput

  # snowball.DescribeCluster
  DescribeCluster(input: AwsSnowballDescribeClusterInput!): AwsSnowballDescribeClusterOutput

  # snowball.DescribeJob
  DescribeJob(input: AwsSnowballDescribeJobInput!): AwsSnowballDescribeJobOutput

  # snowball.GetJobManifest
  GetJobManifest(input: AwsSnowballGetJobManifestInput!): AwsSnowballGetJobManifestOutput

  # snowball.GetJobUnlockCode
  GetJobUnlockCode(input: AwsSnowballGetJobUnlockCodeInput!): AwsSnowballGetJobUnlockCodeOutput

  # snowball.GetSnowballUsage
  GetSnowballUsage(input: JSON): AwsSnowballGetSnowballUsageOutput

  # snowball.ListClusterJobs
  ListClusterJobs(input: AwsSnowballListClusterJobsInput!): AwsSnowballListClusterJobsOutput

  # snowball.ListClusters
  ListClusters(input: AwsSnowballListClustersInput): AwsSnowballListClustersOutput

  # snowball.ListJobs
  ListJobs(input: AwsSnowballListJobsInput): AwsSnowballListJobsOutput

  # snowball.UpdateCluster
  UpdateCluster(input: AwsSnowballUpdateClusterInput!): JSON

  # snowball.UpdateJob
  UpdateJob(input: AwsSnowballUpdateJobInput!): JSON
}

input AwsSnowballCancelClusterInput {
  ClusterId: String!
}

input AwsSnowballCancelJobInput {
  JobId: String!
}

input AwsSnowballCreateAddressInput {
  Address: AwsSnowballS8Input!
}

type AwsSnowballCreateAddressOutput {
  AddressId: String
}

input AwsSnowballCreateClusterInput {
  JobType: String!
  Resources: AwsSnowballSfInput!
  Description: String
  AddressId: String!
  KmsKeyARN: String
  RoleARN: String!
  SnowballType: String
  ShippingOption: String!
  Notification: AwsSnowballSsInput
  ForwardingAddressId: String
}

type AwsSnowballCreateClusterOutput {
  ClusterId: String
}

input AwsSnowballCreateJobInput {
  JobType: String
  Resources: AwsSnowballSfInput
  Description: String
  AddressId: String
  KmsKeyARN: String
  RoleARN: String
  SnowballCapacityPreference: String
  ShippingOption: String
  Notification: AwsSnowballSsInput
  ClusterId: String
  SnowballType: String
  ForwardingAddressId: String
}

type AwsSnowballCreateJobOutput {
  JobId: String
}

input AwsSnowballDescribeAddressesInput {
  MaxResults: Int
  NextToken: String
}

type AwsSnowballDescribeAddressesOutput {
  Addresses: [AwsSnowballS8]
  NextToken: String
}

input AwsSnowballDescribeAddressInput {
  AddressId: String!
}

type AwsSnowballDescribeAddressOutput {
  Address: AwsSnowballS8
}

input AwsSnowballDescribeClusterInput {
  ClusterId: String!
}

type AwsSnowballDescribeClusterOutput {
  ClusterMetadata: AwsSnowballDescribeClusterOutputClusterMetadata
}

type AwsSnowballDescribeClusterOutputClusterMetadata {
  ClusterId: String
  Description: String
  KmsKeyARN: String
  RoleARN: String
  ClusterState: String
  JobType: String
  SnowballType: String
  CreationDate: Date
  Resources: AwsSnowballSf
  AddressId: String
  ShippingOption: String
  Notification: AwsSnowballSs
  ForwardingAddressId: String
}

input AwsSnowballDescribeJobInput {
  JobId: String!
}

type AwsSnowballDescribeJobOutput {
  JobMetadata: AwsSnowballS1d
  SubJobMetadata: [AwsSnowballS1d]
}

input AwsSnowballGetJobManifestInput {
  JobId: String!
}

type AwsSnowballGetJobManifestOutput {
  ManifestURI: String
}

input AwsSnowballGetJobUnlockCodeInput {
  JobId: String!
}

type AwsSnowballGetJobUnlockCodeOutput {
  UnlockCode: String
}

type AwsSnowballGetSnowballUsageOutput {
  SnowballLimit: Int
  SnowballsInUse: Int
}

input AwsSnowballListClusterJobsInput {
  ClusterId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSnowballListClusterJobsOutput {
  JobListEntries: [AwsSnowballS1t]
  NextToken: String
}

input AwsSnowballListClustersInput {
  MaxResults: Int
  NextToken: String
}

type AwsSnowballListClustersOutput {
  ClusterListEntries: [AwsSnowballListClustersOutputClusterListEntries]
  NextToken: String
}

type AwsSnowballListClustersOutputClusterListEntries {
  ClusterId: String
  ClusterState: String
  CreationDate: Date
  Description: String
}

input AwsSnowballListJobsInput {
  MaxResults: Int
  NextToken: String
}

type AwsSnowballListJobsOutput {
  JobListEntries: [AwsSnowballS1t]
  NextToken: String
}

type AwsSnowballS1d {
  JobId: String
  JobState: String
  JobType: String
  SnowballType: String
  CreationDate: Date
  Resources: AwsSnowballSf
  Description: String
  KmsKeyARN: String
  RoleARN: String
  AddressId: String
  ShippingDetails: AwsSnowballS1dShippingDetails
  SnowballCapacityPreference: String
  Notification: AwsSnowballSs
  DataTransferProgress: AwsSnowballS1dDataTransferProgress
  JobLogInfo: AwsSnowballS1dJobLogInfo
  ClusterId: String
  ForwardingAddressId: String
}

type AwsSnowballS1dDataTransferProgress {
  BytesTransferred: JSON
  ObjectsTransferred: JSON
  TotalBytes: JSON
  TotalObjects: JSON
}

type AwsSnowballS1dJobLogInfo {
  JobCompletionReportURI: String
  JobSuccessLogURI: String
  JobFailureLogURI: String
}

type AwsSnowballS1dShippingDetails {
  ShippingOption: String
  InboundShipment: AwsSnowballS1f
  OutboundShipment: AwsSnowballS1f
}

type AwsSnowballS1f {
  Status: String
  TrackingNumber: String
}

type AwsSnowballS1t {
  JobId: String
  JobState: String
  IsMaster: Boolean
  JobType: String
  SnowballType: String
  CreationDate: Date
  Description: String
}

type AwsSnowballS8 {
  AddressId: String
  Name: String
  Company: String
  Street1: String
  Street2: String
  Street3: String
  City: String
  StateOrProvince: String
  PrefectureOrDistrict: String
  Landmark: String
  Country: String
  PostalCode: String
  PhoneNumber: String
  IsRestricted: Boolean
}

input AwsSnowballS8Input {
  AddressId: String
  Name: String
  Company: String
  Street1: String
  Street2: String
  Street3: String
  City: String
  StateOrProvince: String
  PrefectureOrDistrict: String
  Landmark: String
  Country: String
  PostalCode: String
  PhoneNumber: String
  IsRestricted: Boolean
}

type AwsSnowballSf {
  S3Resources: [AwsSnowballSfS3Resources]
  LambdaResources: [AwsSnowballSfLambdaResources]
}

input AwsSnowballSfInput {
  S3Resources: [AwsSnowballSfS3ResourcesInput]
  LambdaResources: [AwsSnowballSfLambdaResourcesInput]
}

type AwsSnowballSfLambdaResources {
  LambdaArn: String
  EventTriggers: [AwsSnowballSfLambdaResourcesEventTriggers]
}

type AwsSnowballSfLambdaResourcesEventTriggers {
  EventResourceARN: String
}

input AwsSnowballSfLambdaResourcesEventTriggersInput {
  EventResourceARN: String
}

input AwsSnowballSfLambdaResourcesInput {
  LambdaArn: String
  EventTriggers: [AwsSnowballSfLambdaResourcesEventTriggersInput]
}

type AwsSnowballSfS3Resources {
  BucketArn: String
  KeyRange: AwsSnowballSfS3ResourcesKeyRange
}

input AwsSnowballSfS3ResourcesInput {
  BucketArn: String
  KeyRange: AwsSnowballSfS3ResourcesKeyRangeInput
}

type AwsSnowballSfS3ResourcesKeyRange {
  BeginMarker: String
  EndMarker: String
}

input AwsSnowballSfS3ResourcesKeyRangeInput {
  BeginMarker: String
  EndMarker: String
}

type AwsSnowballSs {
  SnsTopicARN: String
  JobStatesToNotify: [String]
  NotifyAll: Boolean
}

input AwsSnowballSsInput {
  SnsTopicARN: String
  JobStatesToNotify: [String]
  NotifyAll: Boolean
}

input AwsSnowballUpdateClusterInput {
  ClusterId: String!
  RoleARN: String
  Description: String
  Resources: AwsSnowballSfInput
  AddressId: String
  ShippingOption: String
  Notification: AwsSnowballSsInput
  ForwardingAddressId: String
}

input AwsSnowballUpdateJobInput {
  JobId: String!
  RoleARN: String
  Notification: AwsSnowballSsInput
  Resources: AwsSnowballSfInput
  AddressId: String
  ShippingOption: String
  Description: String
  SnowballCapacityPreference: String
  ForwardingAddressId: String
}

# Amazon Simple Notification Service (2010-03-31)
type AwsSns {
  # sns.AddPermission
  AddPermission(input: AwsSnsAddPermissionInput!): JSON

  # sns.CheckIfPhoneNumberIsOptedOut
  CheckIfPhoneNumberIsOptedOut(input: AwsSnsCheckIfPhoneNumberIsOptedOutInput!): AwsSnsCheckIfPhoneNumberIsOptedOutOutput

  # sns.ConfirmSubscription
  ConfirmSubscription(input: AwsSnsConfirmSubscriptionInput!): AwsSnsConfirmSubscriptionOutput

  # sns.CreatePlatformApplication
  CreatePlatformApplication(input: AwsSnsCreatePlatformApplicationInput!): AwsSnsCreatePlatformApplicationOutput

  # sns.CreatePlatformEndpoint
  CreatePlatformEndpoint(input: AwsSnsCreatePlatformEndpointInput!): AwsSnsCreatePlatformEndpointOutput

  # sns.CreateTopic
  CreateTopic(input: AwsSnsCreateTopicInput!): AwsSnsCreateTopicOutput

  # sns.DeleteEndpoint
  DeleteEndpoint(input: AwsSnsDeleteEndpointInput!): JSON

  # sns.DeletePlatformApplication
  DeletePlatformApplication(input: AwsSnsDeletePlatformApplicationInput!): JSON

  # sns.DeleteTopic
  DeleteTopic(input: AwsSnsDeleteTopicInput!): JSON

  # sns.GetEndpointAttributes
  GetEndpointAttributes(input: AwsSnsGetEndpointAttributesInput!): AwsSnsGetEndpointAttributesOutput

  # sns.GetPlatformApplicationAttributes
  GetPlatformApplicationAttributes(input: AwsSnsGetPlatformApplicationAttributesInput!): AwsSnsGetPlatformApplicationAttributesOutput

  # sns.GetSMSAttributes
  GetSMSAttributes(input: AwsSnsGetSMSAttributesInput): AwsSnsGetSMSAttributesOutput

  # sns.GetSubscriptionAttributes
  GetSubscriptionAttributes(input: AwsSnsGetSubscriptionAttributesInput!): AwsSnsGetSubscriptionAttributesOutput

  # sns.GetTopicAttributes
  GetTopicAttributes(input: AwsSnsGetTopicAttributesInput!): AwsSnsGetTopicAttributesOutput

  # sns.ListEndpointsByPlatformApplication
  ListEndpointsByPlatformApplication(input: AwsSnsListEndpointsByPlatformApplicationInput!): AwsSnsListEndpointsByPlatformApplicationOutput

  # sns.ListPhoneNumbersOptedOut
  ListPhoneNumbersOptedOut(input: AwsSnsListPhoneNumbersOptedOutInput): AwsSnsListPhoneNumbersOptedOutOutput

  # sns.ListPlatformApplications
  ListPlatformApplications(input: AwsSnsListPlatformApplicationsInput): AwsSnsListPlatformApplicationsOutput

  # sns.ListSubscriptions
  ListSubscriptions(input: AwsSnsListSubscriptionsInput): AwsSnsListSubscriptionsOutput

  # sns.ListSubscriptionsByTopic
  ListSubscriptionsByTopic(input: AwsSnsListSubscriptionsByTopicInput!): AwsSnsListSubscriptionsByTopicOutput

  # sns.ListTopics
  ListTopics(input: AwsSnsListTopicsInput): AwsSnsListTopicsOutput

  # sns.OptInPhoneNumber
  OptInPhoneNumber(input: AwsSnsOptInPhoneNumberInput!): JSON

  # sns.Publish
  Publish(input: AwsSnsPublishInput!): AwsSnsPublishOutput

  # sns.RemovePermission
  RemovePermission(input: AwsSnsRemovePermissionInput!): JSON

  # sns.SetEndpointAttributes
  SetEndpointAttributes(input: AwsSnsSetEndpointAttributesInput!): JSON

  # sns.SetPlatformApplicationAttributes
  SetPlatformApplicationAttributes(input: AwsSnsSetPlatformApplicationAttributesInput!): JSON

  # sns.SetSMSAttributes
  SetSMSAttributes(input: AwsSnsSetSMSAttributesInput!): JSON

  # sns.SetSubscriptionAttributes
  SetSubscriptionAttributes(input: AwsSnsSetSubscriptionAttributesInput!): JSON

  # sns.SetTopicAttributes
  SetTopicAttributes(input: AwsSnsSetTopicAttributesInput!): JSON

  # sns.Subscribe
  Subscribe(input: AwsSnsSubscribeInput!): AwsSnsSubscribeOutput

  # sns.Unsubscribe
  Unsubscribe(input: AwsSnsUnsubscribeInput!): JSON
}

input AwsSnsAddPermissionInput {
  TopicArn: String!
  Label: String!
  AWSAccountId: [String]!
  ActionName: [String]!
}

input AwsSnsCheckIfPhoneNumberIsOptedOutInput {
  phoneNumber: String!
}

type AwsSnsCheckIfPhoneNumberIsOptedOutOutput {
  isOptedOut: Boolean
}

input AwsSnsConfirmSubscriptionInput {
  TopicArn: String!
  Token: String!
  AuthenticateOnUnsubscribe: String
}

type AwsSnsConfirmSubscriptionOutput {
  SubscriptionArn: String
}

input AwsSnsCreatePlatformApplicationInput {
  Name: String!
  Platform: String!
  Attributes: JSON!
}

type AwsSnsCreatePlatformApplicationOutput {
  PlatformApplicationArn: String
}

input AwsSnsCreatePlatformEndpointInput {
  PlatformApplicationArn: String!
  Token: String!
  CustomUserData: String
  Attributes: JSON
}

type AwsSnsCreatePlatformEndpointOutput {
  EndpointArn: String
}

input AwsSnsCreateTopicInput {
  Name: String!
}

type AwsSnsCreateTopicOutput {
  TopicArn: String
}

input AwsSnsDeleteEndpointInput {
  EndpointArn: String!
}

input AwsSnsDeletePlatformApplicationInput {
  PlatformApplicationArn: String!
}

input AwsSnsDeleteTopicInput {
  TopicArn: String!
}

input AwsSnsGetEndpointAttributesInput {
  EndpointArn: String!
}

type AwsSnsGetEndpointAttributesOutput {
  Attributes: JSON
}

input AwsSnsGetPlatformApplicationAttributesInput {
  PlatformApplicationArn: String!
}

type AwsSnsGetPlatformApplicationAttributesOutput {
  Attributes: JSON
}

input AwsSnsGetSMSAttributesInput {
  attributes: [String]
}

type AwsSnsGetSMSAttributesOutput {
  attributes: JSON
}

input AwsSnsGetSubscriptionAttributesInput {
  SubscriptionArn: String!
}

type AwsSnsGetSubscriptionAttributesOutput {
  Attributes: JSON
}

input AwsSnsGetTopicAttributesInput {
  TopicArn: String!
}

type AwsSnsGetTopicAttributesOutput {
  Attributes: JSON
}

input AwsSnsListEndpointsByPlatformApplicationInput {
  PlatformApplicationArn: String!
  NextToken: String
}

type AwsSnsListEndpointsByPlatformApplicationOutput {
  Endpoints: [AwsSnsListEndpointsByPlatformApplicationOutputEndpoints]
  NextToken: String
}

type AwsSnsListEndpointsByPlatformApplicationOutputEndpoints {
  EndpointArn: String
  Attributes: JSON
}

input AwsSnsListPhoneNumbersOptedOutInput {
  nextToken: String
}

type AwsSnsListPhoneNumbersOptedOutOutput {
  phoneNumbers: [String]
  nextToken: String
}

input AwsSnsListPlatformApplicationsInput {
  NextToken: String
}

type AwsSnsListPlatformApplicationsOutput {
  PlatformApplications: [AwsSnsListPlatformApplicationsOutputPlatformApplications]
  NextToken: String
}

type AwsSnsListPlatformApplicationsOutputPlatformApplications {
  PlatformApplicationArn: String
  Attributes: JSON
}

input AwsSnsListSubscriptionsByTopicInput {
  TopicArn: String!
  NextToken: String
}

type AwsSnsListSubscriptionsByTopicOutput {
  Subscriptions: [AwsSnsS1n]
  NextToken: String
}

input AwsSnsListSubscriptionsInput {
  NextToken: String
}

type AwsSnsListSubscriptionsOutput {
  Subscriptions: [AwsSnsS1n]
  NextToken: String
}

input AwsSnsListTopicsInput {
  NextToken: String
}

type AwsSnsListTopicsOutput {
  Topics: [AwsSnsListTopicsOutputTopics]
  NextToken: String
}

type AwsSnsListTopicsOutputTopics {
  TopicArn: String
}

input AwsSnsOptInPhoneNumberInput {
  phoneNumber: String!
}

input AwsSnsPublishInput {
  TopicArn: String
  TargetArn: String
  PhoneNumber: String
  Message: String!
  Subject: String
  MessageStructure: String
  MessageAttributes: JSON
}

type AwsSnsPublishOutput {
  MessageId: String
}

input AwsSnsRemovePermissionInput {
  TopicArn: String!
  Label: String!
}

type AwsSnsS1n {
  SubscriptionArn: String
  Owner: String
  Protocol: String
  Endpoint: String
  TopicArn: String
}

input AwsSnsSetEndpointAttributesInput {
  EndpointArn: String!
  Attributes: JSON!
}

input AwsSnsSetPlatformApplicationAttributesInput {
  PlatformApplicationArn: String!
  Attributes: JSON!
}

input AwsSnsSetSMSAttributesInput {
  attributes: JSON!
}

input AwsSnsSetSubscriptionAttributesInput {
  SubscriptionArn: String!
  AttributeName: String!
  AttributeValue: String
}

input AwsSnsSetTopicAttributesInput {
  TopicArn: String!
  AttributeName: String!
  AttributeValue: String
}

input AwsSnsSubscribeInput {
  TopicArn: String!
  Protocol: String!
  Endpoint: String
}

type AwsSnsSubscribeOutput {
  SubscriptionArn: String
}

input AwsSnsUnsubscribeInput {
  SubscriptionArn: String!
}

# Amazon Simple Queue Service (2012-11-05)
type AwsSqs {
  # sqs.AddPermission
  AddPermission(input: AwsSqsAddPermissionInput!): JSON

  # sqs.ChangeMessageVisibility
  ChangeMessageVisibility(input: AwsSqsChangeMessageVisibilityInput!): JSON

  # sqs.ChangeMessageVisibilityBatch
  ChangeMessageVisibilityBatch(input: AwsSqsChangeMessageVisibilityBatchInput!): AwsSqsChangeMessageVisibilityBatchOutput

  # sqs.CreateQueue
  CreateQueue(input: AwsSqsCreateQueueInput!): AwsSqsCreateQueueOutput

  # sqs.DeleteMessage
  DeleteMessage(input: AwsSqsDeleteMessageInput!): JSON

  # sqs.DeleteMessageBatch
  DeleteMessageBatch(input: AwsSqsDeleteMessageBatchInput!): AwsSqsDeleteMessageBatchOutput

  # sqs.DeleteQueue
  DeleteQueue(input: AwsSqsDeleteQueueInput!): JSON

  # sqs.GetQueueAttributes
  GetQueueAttributes(input: AwsSqsGetQueueAttributesInput!): AwsSqsGetQueueAttributesOutput

  # sqs.GetQueueUrl
  GetQueueUrl(input: AwsSqsGetQueueUrlInput!): AwsSqsGetQueueUrlOutput

  # sqs.ListDeadLetterSourceQueues
  ListDeadLetterSourceQueues(input: AwsSqsListDeadLetterSourceQueuesInput!): AwsSqsListDeadLetterSourceQueuesOutput

  # sqs.ListQueueTags
  ListQueueTags(input: AwsSqsListQueueTagsInput!): AwsSqsListQueueTagsOutput

  # sqs.ListQueues
  ListQueues(input: AwsSqsListQueuesInput): AwsSqsListQueuesOutput

  # sqs.PurgeQueue
  PurgeQueue(input: AwsSqsPurgeQueueInput!): JSON

  # sqs.ReceiveMessage
  ReceiveMessage(input: AwsSqsReceiveMessageInput!): AwsSqsReceiveMessageOutput

  # sqs.RemovePermission
  RemovePermission(input: AwsSqsRemovePermissionInput!): JSON

  # sqs.SendMessage
  SendMessage(input: AwsSqsSendMessageInput!): AwsSqsSendMessageOutput

  # sqs.SendMessageBatch
  SendMessageBatch(input: AwsSqsSendMessageBatchInput!): AwsSqsSendMessageBatchOutput

  # sqs.SetQueueAttributes
  SetQueueAttributes(input: AwsSqsSetQueueAttributesInput!): JSON

  # sqs.TagQueue
  TagQueue(input: AwsSqsTagQueueInput!): JSON

  # sqs.UntagQueue
  UntagQueue(input: AwsSqsUntagQueueInput!): JSON
}

input AwsSqsAddPermissionInput {
  QueueUrl: String!
  Label: String!
  AWSAccountIds: [String]!
  Actions: [String]!
}

input AwsSqsChangeMessageVisibilityBatchEntriesInput {
  Id: String!
  ReceiptHandle: String!
  VisibilityTimeout: Int
}

input AwsSqsChangeMessageVisibilityBatchInput {
  QueueUrl: String!
  Entries: [AwsSqsChangeMessageVisibilityBatchEntriesInput]!
}

type AwsSqsChangeMessageVisibilityBatchOutput {
  Successful: [AwsSqsChangeMessageVisibilityBatchOutputSuccessful]!
  Failed: [AwsSqsSd]!
}

type AwsSqsChangeMessageVisibilityBatchOutputSuccessful {
  Id: String!
}

input AwsSqsChangeMessageVisibilityInput {
  QueueUrl: String!
  ReceiptHandle: String!
  VisibilityTimeout: Int!
}

input AwsSqsCreateQueueInput {
  QueueName: String!
  Attributes: JSON
}

type AwsSqsCreateQueueOutput {
  QueueUrl: String
}

input AwsSqsDeleteMessageBatchEntriesInput {
  Id: String!
  ReceiptHandle: String!
}

input AwsSqsDeleteMessageBatchInput {
  QueueUrl: String!
  Entries: [AwsSqsDeleteMessageBatchEntriesInput]!
}

type AwsSqsDeleteMessageBatchOutput {
  Successful: [AwsSqsDeleteMessageBatchOutputSuccessful]!
  Failed: [AwsSqsSd]!
}

type AwsSqsDeleteMessageBatchOutputSuccessful {
  Id: String!
}

input AwsSqsDeleteMessageInput {
  QueueUrl: String!
  ReceiptHandle: String!
}

input AwsSqsDeleteQueueInput {
  QueueUrl: String!
}

input AwsSqsGetQueueAttributesInput {
  QueueUrl: String!
  AttributeNames: [String]
}

type AwsSqsGetQueueAttributesOutput {
  Attributes: JSON
}

input AwsSqsGetQueueUrlInput {
  QueueName: String!
  QueueOwnerAWSAccountId: String
}

type AwsSqsGetQueueUrlOutput {
  QueueUrl: String
}

input AwsSqsListDeadLetterSourceQueuesInput {
  QueueUrl: String!
}

type AwsSqsListDeadLetterSourceQueuesOutput {
  queueUrls: [String]!
}

input AwsSqsListQueuesInput {
  QueueNamePrefix: String
}

type AwsSqsListQueuesOutput {
  QueueUrls: [String]
}

input AwsSqsListQueueTagsInput {
  QueueUrl: String!
}

type AwsSqsListQueueTagsOutput {
  Tags: JSON
}

input AwsSqsPurgeQueueInput {
  QueueUrl: String!
}

input AwsSqsReceiveMessageInput {
  QueueUrl: String!
  AttributeNames: [String]
  MessageAttributeNames: [String]
  MaxNumberOfMessages: Int
  VisibilityTimeout: Int
  WaitTimeSeconds: Int
  ReceiveRequestAttemptId: String
}

type AwsSqsReceiveMessageOutput {
  Messages: [AwsSqsReceiveMessageOutputMessages]
}

type AwsSqsReceiveMessageOutputMessages {
  MessageId: String
  ReceiptHandle: String
  MD5OfBody: String
  Body: String
  Attributes: JSON
  MD5OfMessageAttributes: String
  MessageAttributes: JSON
}

input AwsSqsRemovePermissionInput {
  QueueUrl: String!
  Label: String!
}

type AwsSqsSd {
  Id: String!
  SenderFault: Boolean!
  Code: String!
  Message: String
}

input AwsSqsSendMessageBatchEntriesInput {
  Id: String!
  MessageBody: String!
  DelaySeconds: Int
  MessageAttributes: JSON
  MessageDeduplicationId: String
  MessageGroupId: String
}

input AwsSqsSendMessageBatchInput {
  QueueUrl: String!
  Entries: [AwsSqsSendMessageBatchEntriesInput]!
}

type AwsSqsSendMessageBatchOutput {
  Successful: [AwsSqsSendMessageBatchOutputSuccessful]!
  Failed: [AwsSqsSd]!
}

type AwsSqsSendMessageBatchOutputSuccessful {
  Id: String!
  MessageId: String!
  MD5OfMessageBody: String!
  MD5OfMessageAttributes: String
  SequenceNumber: String
}

input AwsSqsSendMessageInput {
  QueueUrl: String!
  MessageBody: String!
  DelaySeconds: Int
  MessageAttributes: JSON
  MessageDeduplicationId: String
  MessageGroupId: String
}

type AwsSqsSendMessageOutput {
  MD5OfMessageBody: String
  MD5OfMessageAttributes: String
  MessageId: String
  SequenceNumber: String
}

input AwsSqsSetQueueAttributesInput {
  QueueUrl: String!
  Attributes: JSON!
}

input AwsSqsTagQueueInput {
  QueueUrl: String!
  Tags: JSON!
}

input AwsSqsUntagQueueInput {
  QueueUrl: String!
  TagKeys: [String]!
}

# Amazon Simple Systems Manager (SSM) (2014-11-06)
type AwsSsm {
  # ssm.AddTagsToResource
  AddTagsToResource(input: AwsSsmAddTagsToResourceInput!): JSON

  # ssm.CancelCommand
  CancelCommand(input: AwsSsmCancelCommandInput!): JSON

  # ssm.CreateActivation
  CreateActivation(input: AwsSsmCreateActivationInput!): AwsSsmCreateActivationOutput

  # ssm.CreateAssociation
  CreateAssociation(input: AwsSsmCreateAssociationInput!): AwsSsmCreateAssociationOutput

  # ssm.CreateAssociationBatch
  CreateAssociationBatch(input: AwsSsmCreateAssociationBatchInput!): AwsSsmCreateAssociationBatchOutput

  # ssm.CreateDocument
  CreateDocument(input: AwsSsmCreateDocumentInput!): AwsSsmCreateDocumentOutput

  # ssm.CreateMaintenanceWindow
  CreateMaintenanceWindow(input: AwsSsmCreateMaintenanceWindowInput!): AwsSsmCreateMaintenanceWindowOutput

  # ssm.CreatePatchBaseline
  CreatePatchBaseline(input: AwsSsmCreatePatchBaselineInput!): AwsSsmCreatePatchBaselineOutput

  # ssm.CreateResourceDataSync
  CreateResourceDataSync(input: AwsSsmCreateResourceDataSyncInput!): JSON

  # ssm.DeleteActivation
  DeleteActivation(input: AwsSsmDeleteActivationInput!): JSON

  # ssm.DeleteAssociation
  DeleteAssociation(input: AwsSsmDeleteAssociationInput): JSON

  # ssm.DeleteDocument
  DeleteDocument(input: AwsSsmDeleteDocumentInput!): JSON

  # ssm.DeleteMaintenanceWindow
  DeleteMaintenanceWindow(input: AwsSsmDeleteMaintenanceWindowInput!): AwsSsmDeleteMaintenanceWindowOutput

  # ssm.DeleteParameter
  DeleteParameter(input: AwsSsmDeleteParameterInput!): JSON

  # ssm.DeleteParameters
  DeleteParameters(input: AwsSsmDeleteParametersInput!): AwsSsmDeleteParametersOutput

  # ssm.DeletePatchBaseline
  DeletePatchBaseline(input: AwsSsmDeletePatchBaselineInput!): AwsSsmDeletePatchBaselineOutput

  # ssm.DeleteResourceDataSync
  DeleteResourceDataSync(input: AwsSsmDeleteResourceDataSyncInput!): JSON

  # ssm.DeregisterManagedInstance
  DeregisterManagedInstance(input: AwsSsmDeregisterManagedInstanceInput!): JSON

  # ssm.DeregisterPatchBaselineForPatchGroup
  DeregisterPatchBaselineForPatchGroup(input: AwsSsmDeregisterPatchBaselineForPatchGroupInput!): AwsSsmDeregisterPatchBaselineForPatchGroupOutput

  # ssm.DeregisterTargetFromMaintenanceWindow
  DeregisterTargetFromMaintenanceWindow(input: AwsSsmDeregisterTargetFromMaintenanceWindowInput!): AwsSsmDeregisterTargetFromMaintenanceWindowOutput

  # ssm.DeregisterTaskFromMaintenanceWindow
  DeregisterTaskFromMaintenanceWindow(input: AwsSsmDeregisterTaskFromMaintenanceWindowInput!): AwsSsmDeregisterTaskFromMaintenanceWindowOutput

  # ssm.DescribeActivations
  DescribeActivations(input: AwsSsmDescribeActivationsInput): AwsSsmDescribeActivationsOutput

  # ssm.DescribeAssociation
  DescribeAssociation(input: AwsSsmDescribeAssociationInput): AwsSsmDescribeAssociationOutput

  # ssm.DescribeAutomationExecutions
  DescribeAutomationExecutions(input: AwsSsmDescribeAutomationExecutionsInput): AwsSsmDescribeAutomationExecutionsOutput

  # ssm.DescribeAutomationStepExecutions
  DescribeAutomationStepExecutions(input: AwsSsmDescribeAutomationStepExecutionsInput!): AwsSsmDescribeAutomationStepExecutionsOutput

  # ssm.DescribeAvailablePatches
  DescribeAvailablePatches(input: AwsSsmDescribeAvailablePatchesInput): AwsSsmDescribeAvailablePatchesOutput

  # ssm.DescribeDocument
  DescribeDocument(input: AwsSsmDescribeDocumentInput!): AwsSsmDescribeDocumentOutput

  # ssm.DescribeDocumentPermission
  DescribeDocumentPermission(input: AwsSsmDescribeDocumentPermissionInput!): AwsSsmDescribeDocumentPermissionOutput

  # ssm.DescribeEffectiveInstanceAssociations
  DescribeEffectiveInstanceAssociations(input: AwsSsmDescribeEffectiveInstanceAssociationsInput!): AwsSsmDescribeEffectiveInstanceAssociationsOutput

  # ssm.DescribeEffectivePatchesForPatchBaseline
  DescribeEffectivePatchesForPatchBaseline(input: AwsSsmDescribeEffectivePatchesForPatchBaselineInput!): AwsSsmDescribeEffectivePatchesForPatchBaselineOutput

  # ssm.DescribeInstanceAssociationsStatus
  DescribeInstanceAssociationsStatus(input: AwsSsmDescribeInstanceAssociationsStatusInput!): AwsSsmDescribeInstanceAssociationsStatusOutput

  # ssm.DescribeInstanceInformation
  DescribeInstanceInformation(input: AwsSsmDescribeInstanceInformationInput): AwsSsmDescribeInstanceInformationOutput

  # ssm.DescribeInstancePatchStates
  DescribeInstancePatchStates(input: AwsSsmDescribeInstancePatchStatesInput!): AwsSsmDescribeInstancePatchStatesOutput

  # ssm.DescribeInstancePatchStatesForPatchGroup
  DescribeInstancePatchStatesForPatchGroup(input: AwsSsmDescribeInstancePatchStatesForPatchGroupInput!): AwsSsmDescribeInstancePatchStatesForPatchGroupOutput

  # ssm.DescribeInstancePatches
  DescribeInstancePatches(input: AwsSsmDescribeInstancePatchesInput!): AwsSsmDescribeInstancePatchesOutput

  # ssm.DescribeMaintenanceWindowExecutionTaskInvocations
  DescribeMaintenanceWindowExecutionTaskInvocations(input: AwsSsmDescribeMaintenanceWindowExecutionTaskInvocationsInput!): AwsSsmDescribeMaintenanceWindowExecutionTaskInvocationsOutput

  # ssm.DescribeMaintenanceWindowExecutionTasks
  DescribeMaintenanceWindowExecutionTasks(input: AwsSsmDescribeMaintenanceWindowExecutionTasksInput!): AwsSsmDescribeMaintenanceWindowExecutionTasksOutput

  # ssm.DescribeMaintenanceWindowExecutions
  DescribeMaintenanceWindowExecutions(input: AwsSsmDescribeMaintenanceWindowExecutionsInput!): AwsSsmDescribeMaintenanceWindowExecutionsOutput

  # ssm.DescribeMaintenanceWindowTargets
  DescribeMaintenanceWindowTargets(input: AwsSsmDescribeMaintenanceWindowTargetsInput!): AwsSsmDescribeMaintenanceWindowTargetsOutput

  # ssm.DescribeMaintenanceWindowTasks
  DescribeMaintenanceWindowTasks(input: AwsSsmDescribeMaintenanceWindowTasksInput!): AwsSsmDescribeMaintenanceWindowTasksOutput

  # ssm.DescribeMaintenanceWindows
  DescribeMaintenanceWindows(input: AwsSsmDescribeMaintenanceWindowsInput): AwsSsmDescribeMaintenanceWindowsOutput

  # ssm.DescribeParameters
  DescribeParameters(input: AwsSsmDescribeParametersInput): AwsSsmDescribeParametersOutput

  # ssm.DescribePatchBaselines
  DescribePatchBaselines(input: AwsSsmDescribePatchBaselinesInput): AwsSsmDescribePatchBaselinesOutput

  # ssm.DescribePatchGroupState
  DescribePatchGroupState(input: AwsSsmDescribePatchGroupStateInput!): AwsSsmDescribePatchGroupStateOutput

  # ssm.DescribePatchGroups
  DescribePatchGroups(input: AwsSsmDescribePatchGroupsInput): AwsSsmDescribePatchGroupsOutput

  # ssm.GetAutomationExecution
  GetAutomationExecution(input: AwsSsmGetAutomationExecutionInput!): AwsSsmGetAutomationExecutionOutput

  # ssm.GetCommandInvocation
  GetCommandInvocation(input: AwsSsmGetCommandInvocationInput!): AwsSsmGetCommandInvocationOutput

  # ssm.GetDefaultPatchBaseline
  GetDefaultPatchBaseline(input: AwsSsmGetDefaultPatchBaselineInput): AwsSsmGetDefaultPatchBaselineOutput

  # ssm.GetDeployablePatchSnapshotForInstance
  GetDeployablePatchSnapshotForInstance(input: AwsSsmGetDeployablePatchSnapshotForInstanceInput!): AwsSsmGetDeployablePatchSnapshotForInstanceOutput

  # ssm.GetDocument
  GetDocument(input: AwsSsmGetDocumentInput!): AwsSsmGetDocumentOutput

  # ssm.GetInventory
  GetInventory(input: AwsSsmGetInventoryInput): AwsSsmGetInventoryOutput

  # ssm.GetInventorySchema
  GetInventorySchema(input: AwsSsmGetInventorySchemaInput): AwsSsmGetInventorySchemaOutput

  # ssm.GetMaintenanceWindow
  GetMaintenanceWindow(input: AwsSsmGetMaintenanceWindowInput!): AwsSsmGetMaintenanceWindowOutput

  # ssm.GetMaintenanceWindowExecution
  GetMaintenanceWindowExecution(input: AwsSsmGetMaintenanceWindowExecutionInput!): AwsSsmGetMaintenanceWindowExecutionOutput

  # ssm.GetMaintenanceWindowExecutionTask
  GetMaintenanceWindowExecutionTask(input: AwsSsmGetMaintenanceWindowExecutionTaskInput!): AwsSsmGetMaintenanceWindowExecutionTaskOutput

  # ssm.GetMaintenanceWindowExecutionTaskInvocation
  GetMaintenanceWindowExecutionTaskInvocation(input: AwsSsmGetMaintenanceWindowExecutionTaskInvocationInput!): AwsSsmGetMaintenanceWindowExecutionTaskInvocationOutput

  # ssm.GetMaintenanceWindowTask
  GetMaintenanceWindowTask(input: AwsSsmGetMaintenanceWindowTaskInput!): AwsSsmGetMaintenanceWindowTaskOutput

  # ssm.GetParameter
  GetParameter(input: AwsSsmGetParameterInput!): AwsSsmGetParameterOutput

  # ssm.GetParameterHistory
  GetParameterHistory(input: AwsSsmGetParameterHistoryInput!): AwsSsmGetParameterHistoryOutput

  # ssm.GetParameters
  GetParameters(input: AwsSsmGetParametersInput!): AwsSsmGetParametersOutput

  # ssm.GetParametersByPath
  GetParametersByPath(input: AwsSsmGetParametersByPathInput!): AwsSsmGetParametersByPathOutput

  # ssm.GetPatchBaseline
  GetPatchBaseline(input: AwsSsmGetPatchBaselineInput!): AwsSsmGetPatchBaselineOutput

  # ssm.GetPatchBaselineForPatchGroup
  GetPatchBaselineForPatchGroup(input: AwsSsmGetPatchBaselineForPatchGroupInput!): AwsSsmGetPatchBaselineForPatchGroupOutput

  # ssm.ListAssociationVersions
  ListAssociationVersions(input: AwsSsmListAssociationVersionsInput!): AwsSsmListAssociationVersionsOutput

  # ssm.ListAssociations
  ListAssociations(input: AwsSsmListAssociationsInput): AwsSsmListAssociationsOutput

  # ssm.ListCommandInvocations
  ListCommandInvocations(input: AwsSsmListCommandInvocationsInput): AwsSsmListCommandInvocationsOutput

  # ssm.ListCommands
  ListCommands(input: AwsSsmListCommandsInput): AwsSsmListCommandsOutput

  # ssm.ListComplianceItems
  ListComplianceItems(input: AwsSsmListComplianceItemsInput): AwsSsmListComplianceItemsOutput

  # ssm.ListComplianceSummaries
  ListComplianceSummaries(input: AwsSsmListComplianceSummariesInput): AwsSsmListComplianceSummariesOutput

  # ssm.ListDocumentVersions
  ListDocumentVersions(input: AwsSsmListDocumentVersionsInput!): AwsSsmListDocumentVersionsOutput

  # ssm.ListDocuments
  ListDocuments(input: AwsSsmListDocumentsInput): AwsSsmListDocumentsOutput

  # ssm.ListInventoryEntries
  ListInventoryEntries(input: AwsSsmListInventoryEntriesInput!): AwsSsmListInventoryEntriesOutput

  # ssm.ListResourceComplianceSummaries
  ListResourceComplianceSummaries(input: AwsSsmListResourceComplianceSummariesInput): AwsSsmListResourceComplianceSummariesOutput

  # ssm.ListResourceDataSync
  ListResourceDataSync(input: AwsSsmListResourceDataSyncInput): AwsSsmListResourceDataSyncOutput

  # ssm.ListTagsForResource
  ListTagsForResource(input: AwsSsmListTagsForResourceInput!): AwsSsmListTagsForResourceOutput

  # ssm.ModifyDocumentPermission
  ModifyDocumentPermission(input: AwsSsmModifyDocumentPermissionInput!): JSON

  # ssm.PutComplianceItems
  PutComplianceItems(input: AwsSsmPutComplianceItemsInput!): JSON

  # ssm.PutInventory
  PutInventory(input: AwsSsmPutInventoryInput!): JSON

  # ssm.PutParameter
  PutParameter(input: AwsSsmPutParameterInput!): AwsSsmPutParameterOutput

  # ssm.RegisterDefaultPatchBaseline
  RegisterDefaultPatchBaseline(input: AwsSsmRegisterDefaultPatchBaselineInput!): AwsSsmRegisterDefaultPatchBaselineOutput

  # ssm.RegisterPatchBaselineForPatchGroup
  RegisterPatchBaselineForPatchGroup(input: AwsSsmRegisterPatchBaselineForPatchGroupInput!): AwsSsmRegisterPatchBaselineForPatchGroupOutput

  # ssm.RegisterTargetWithMaintenanceWindow
  RegisterTargetWithMaintenanceWindow(input: AwsSsmRegisterTargetWithMaintenanceWindowInput!): AwsSsmRegisterTargetWithMaintenanceWindowOutput

  # ssm.RegisterTaskWithMaintenanceWindow
  RegisterTaskWithMaintenanceWindow(input: AwsSsmRegisterTaskWithMaintenanceWindowInput!): AwsSsmRegisterTaskWithMaintenanceWindowOutput

  # ssm.RemoveTagsFromResource
  RemoveTagsFromResource(input: AwsSsmRemoveTagsFromResourceInput!): JSON

  # ssm.SendAutomationSignal
  SendAutomationSignal(input: AwsSsmSendAutomationSignalInput!): JSON

  # ssm.SendCommand
  SendCommand(input: AwsSsmSendCommandInput!): AwsSsmSendCommandOutput

  # ssm.StartAutomationExecution
  StartAutomationExecution(input: AwsSsmStartAutomationExecutionInput!): AwsSsmStartAutomationExecutionOutput

  # ssm.StopAutomationExecution
  StopAutomationExecution(input: AwsSsmStopAutomationExecutionInput!): JSON

  # ssm.UpdateAssociation
  UpdateAssociation(input: AwsSsmUpdateAssociationInput!): AwsSsmUpdateAssociationOutput

  # ssm.UpdateAssociationStatus
  UpdateAssociationStatus(input: AwsSsmUpdateAssociationStatusInput!): AwsSsmUpdateAssociationStatusOutput

  # ssm.UpdateDocument
  UpdateDocument(input: AwsSsmUpdateDocumentInput!): AwsSsmUpdateDocumentOutput

  # ssm.UpdateDocumentDefaultVersion
  UpdateDocumentDefaultVersion(input: AwsSsmUpdateDocumentDefaultVersionInput!): AwsSsmUpdateDocumentDefaultVersionOutput

  # ssm.UpdateMaintenanceWindow
  UpdateMaintenanceWindow(input: AwsSsmUpdateMaintenanceWindowInput!): AwsSsmUpdateMaintenanceWindowOutput

  # ssm.UpdateMaintenanceWindowTarget
  UpdateMaintenanceWindowTarget(input: AwsSsmUpdateMaintenanceWindowTargetInput!): AwsSsmUpdateMaintenanceWindowTargetOutput

  # ssm.UpdateMaintenanceWindowTask
  UpdateMaintenanceWindowTask(input: AwsSsmUpdateMaintenanceWindowTaskInput!): AwsSsmUpdateMaintenanceWindowTaskOutput

  # ssm.UpdateManagedInstanceRole
  UpdateManagedInstanceRole(input: AwsSsmUpdateManagedInstanceRoleInput!): JSON

  # ssm.UpdatePatchBaseline
  UpdatePatchBaseline(input: AwsSsmUpdatePatchBaselineInput!): AwsSsmUpdatePatchBaselineOutput
}

input AwsSsmAddTagsToResourceInput {
  ResourceType: String!
  ResourceId: String!
  Tags: [AwsSsmS4Input]!
}

input AwsSsmCancelCommandInput {
  CommandId: String!
  InstanceIds: [String]
}

input AwsSsmCreateActivationInput {
  Description: String
  DefaultInstanceName: String
  IamRole: String!
  RegistrationLimit: Int
  ExpirationDate: Date
}

type AwsSsmCreateActivationOutput {
  ActivationId: String
  ActivationCode: String
}

input AwsSsmCreateAssociationBatchInput {
  Entries: [AwsSsmS1lInput]!
}

type AwsSsmCreateAssociationBatchOutput {
  Successful: [AwsSsmS17]
  Failed: [AwsSsmCreateAssociationBatchOutputFailed]
}

type AwsSsmCreateAssociationBatchOutputFailed {
  Entry: AwsSsmS1l
  Message: String
  Fault: String
}

input AwsSsmCreateAssociationInput {
  Name: String!
  DocumentVersion: String
  InstanceId: String
  Parameters: JSON
  Targets: [AwsSsmSuInput]
  ScheduleExpression: String
  OutputLocation: AwsSsmS10Input
  AssociationName: String
}

type AwsSsmCreateAssociationOutput {
  AssociationDescription: AwsSsmS17
}

input AwsSsmCreateDocumentInput {
  Content: String!
  Name: String!
  DocumentType: String
  DocumentFormat: String
  TargetType: String
}

type AwsSsmCreateDocumentOutput {
  DocumentDescription: AwsSsmS1y
}

input AwsSsmCreateMaintenanceWindowInput {
  Name: String!
  Description: String
  Schedule: String!
  Duration: Int!
  Cutoff: Int!
  AllowUnassociatedTargets: Boolean!
  ClientToken: String
}

type AwsSsmCreateMaintenanceWindowOutput {
  WindowId: String
}

input AwsSsmCreatePatchBaselineInput {
  OperatingSystem: String
  Name: String!
  GlobalFilters: AwsSsmS2sInput
  ApprovalRules: AwsSsmS2yInput
  ApprovedPatches: [String]
  ApprovedPatchesComplianceLevel: String
  RejectedPatches: [String]
  Description: String
  ClientToken: String
}

type AwsSsmCreatePatchBaselineOutput {
  BaselineId: String
}

input AwsSsmCreateResourceDataSyncInput {
  SyncName: String!
  S3Destination: AwsSsmS3aInput!
}

input AwsSsmDeleteActivationInput {
  ActivationId: String!
}

input AwsSsmDeleteAssociationInput {
  Name: String
  InstanceId: String
  AssociationId: String
}

input AwsSsmDeleteDocumentInput {
  Name: String!
}

input AwsSsmDeleteMaintenanceWindowInput {
  WindowId: String!
}

type AwsSsmDeleteMaintenanceWindowOutput {
  WindowId: String
}

input AwsSsmDeleteParameterInput {
  Name: String!
}

input AwsSsmDeleteParametersInput {
  Names: [String]!
}

type AwsSsmDeleteParametersOutput {
  DeletedParameters: [String]
  InvalidParameters: [String]
}

input AwsSsmDeletePatchBaselineInput {
  BaselineId: String!
}

type AwsSsmDeletePatchBaselineOutput {
  BaselineId: String
}

input AwsSsmDeleteResourceDataSyncInput {
  SyncName: String!
}

input AwsSsmDeregisterManagedInstanceInput {
  InstanceId: String!
}

input AwsSsmDeregisterPatchBaselineForPatchGroupInput {
  BaselineId: String!
  PatchGroup: String!
}

type AwsSsmDeregisterPatchBaselineForPatchGroupOutput {
  BaselineId: String
  PatchGroup: String
}

input AwsSsmDeregisterTargetFromMaintenanceWindowInput {
  WindowId: String!
  WindowTargetId: String!
  Safe: Boolean
}

type AwsSsmDeregisterTargetFromMaintenanceWindowOutput {
  WindowId: String
  WindowTargetId: String
}

input AwsSsmDeregisterTaskFromMaintenanceWindowInput {
  WindowId: String!
  WindowTaskId: String!
}

type AwsSsmDeregisterTaskFromMaintenanceWindowOutput {
  WindowId: String
  WindowTaskId: String
}

input AwsSsmDescribeActivationsFiltersInput {
  FilterKey: String
  FilterValues: [String]
}

input AwsSsmDescribeActivationsInput {
  Filters: [AwsSsmDescribeActivationsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeActivationsOutput {
  ActivationList: [AwsSsmDescribeActivationsOutputActivationList]
  NextToken: String
}

type AwsSsmDescribeActivationsOutputActivationList {
  ActivationId: String
  Description: String
  DefaultInstanceName: String
  IamRole: String
  RegistrationLimit: Int
  RegistrationsCount: Int
  ExpirationDate: Date
  Expired: Boolean
  CreatedDate: Date
}

input AwsSsmDescribeAssociationInput {
  Name: String
  InstanceId: String
  AssociationId: String
  AssociationVersion: String
}

type AwsSsmDescribeAssociationOutput {
  AssociationDescription: AwsSsmS17
}

input AwsSsmDescribeAutomationExecutionsFiltersInput {
  Key: String!
  Values: [String]!
}

input AwsSsmDescribeAutomationExecutionsInput {
  Filters: [AwsSsmDescribeAutomationExecutionsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeAutomationExecutionsOutput {
  AutomationExecutionMetadataList: [AwsSsmDescribeAutomationExecutionsOutputAutomationExecutionMetadataList]
  NextToken: String
}

type AwsSsmDescribeAutomationExecutionsOutputAutomationExecutionMetadataList {
  AutomationExecutionId: String
  DocumentName: String
  DocumentVersion: String
  AutomationExecutionStatus: String
  ExecutionStartTime: Date
  ExecutionEndTime: Date
  ExecutedBy: String
  LogFile: String
  Outputs: JSON
  Mode: String
  ParentAutomationExecutionId: String
  CurrentStepName: String
  CurrentAction: String
  FailureMessage: String
  TargetParameterName: String
  Targets: [AwsSsmSu]
  ResolvedTargets: AwsSsmS57
  MaxConcurrency: String
  MaxErrors: String
  Target: String
}

input AwsSsmDescribeAutomationStepExecutionsFiltersInput {
  Key: String!
  Values: [String]!
}

input AwsSsmDescribeAutomationStepExecutionsInput {
  AutomationExecutionId: String!
  Filters: [AwsSsmDescribeAutomationStepExecutionsFiltersInput]
  NextToken: String
  MaxResults: Int
  ReverseOrder: Boolean
}

type AwsSsmDescribeAutomationStepExecutionsOutput {
  StepExecutions: [AwsSsmS5i]
  NextToken: String
}

input AwsSsmDescribeAvailablePatchesInput {
  Filters: [AwsSsmS5qInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeAvailablePatchesOutput {
  Patches: [AwsSsmS5y]
  NextToken: String
}

input AwsSsmDescribeDocumentInput {
  Name: String!
  DocumentVersion: String
}

type AwsSsmDescribeDocumentOutput {
  Document: AwsSsmS1y
}

input AwsSsmDescribeDocumentPermissionInput {
  Name: String!
  PermissionType: String!
}

type AwsSsmDescribeDocumentPermissionOutput {
  AccountIds: [String]
}

input AwsSsmDescribeEffectiveInstanceAssociationsInput {
  InstanceId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeEffectiveInstanceAssociationsOutput {
  Associations: [AwsSsmDescribeEffectiveInstanceAssociationsOutputAssociations]
  NextToken: String
}

type AwsSsmDescribeEffectiveInstanceAssociationsOutputAssociations {
  AssociationId: String
  InstanceId: String
  Content: String
  AssociationVersion: String
}

input AwsSsmDescribeEffectivePatchesForPatchBaselineInput {
  BaselineId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeEffectivePatchesForPatchBaselineOutput {
  EffectivePatches: [AwsSsmDescribeEffectivePatchesForPatchBaselineOutputEffectivePatches]
  NextToken: String
}

type AwsSsmDescribeEffectivePatchesForPatchBaselineOutputEffectivePatches {
  Patch: AwsSsmS5y
  PatchStatus: AwsSsmDescribeEffectivePatchesForPatchBaselineOutputEffectivePatchesPatchStatus
}

type AwsSsmDescribeEffectivePatchesForPatchBaselineOutputEffectivePatchesPatchStatus {
  DeploymentStatus: String
  ComplianceLevel: String
  ApprovalDate: Date
}

input AwsSsmDescribeInstanceAssociationsStatusInput {
  InstanceId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeInstanceAssociationsStatusOutput {
  InstanceAssociationStatusInfos: [AwsSsmDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfos]
  NextToken: String
}

type AwsSsmDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfos {
  AssociationId: String
  Name: String
  DocumentVersion: String
  AssociationVersion: String
  InstanceId: String
  ExecutionDate: Date
  Status: String
  DetailedStatus: String
  ExecutionSummary: String
  ErrorCode: String
  OutputUrl: AwsSsmDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfosOutputUrl
  AssociationName: String
}

type AwsSsmDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfosOutputUrl {
  S3OutputUrl: AwsSsmDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfosOutputUrlS3OutputUrl
}

type AwsSsmDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfosOutputUrlS3OutputUrl {
  OutputUrl: String
}

input AwsSsmDescribeInstanceInformationFiltersInput {
  Key: String!
  Values: [String]!
}

input AwsSsmDescribeInstanceInformationInput {
  InstanceInformationFilterList: [AwsSsmDescribeInstanceInformationInstanceInformationFilterListInput]
  Filters: [AwsSsmDescribeInstanceInformationFiltersInput]
  MaxResults: Int
  NextToken: String
}

input AwsSsmDescribeInstanceInformationInstanceInformationFilterListInput {
  key: String!
  valueSet: [String]!
}

type AwsSsmDescribeInstanceInformationOutput {
  InstanceInformationList: [AwsSsmDescribeInstanceInformationOutputInstanceInformationList]
  NextToken: String
}

type AwsSsmDescribeInstanceInformationOutputInstanceInformationList {
  InstanceId: String
  PingStatus: String
  LastPingDateTime: Date
  AgentVersion: String
  IsLatestVersion: Boolean
  PlatformType: String
  PlatformName: String
  PlatformVersion: String
  ActivationId: String
  IamRole: String
  RegistrationDate: Date
  ResourceType: String
  Name: String
  IPAddress: String
  ComputerName: String
  AssociationStatus: String
  LastAssociationExecutionDate: Date
  LastSuccessfulAssociationExecutionDate: Date
  AssociationOverview: AwsSsmDescribeInstanceInformationOutputInstanceInformationListAssociationOverview
}

type AwsSsmDescribeInstanceInformationOutputInstanceInformationListAssociationOverview {
  DetailedStatus: String
  InstanceAssociationStatusAggregatedCount: JSON
}

input AwsSsmDescribeInstancePatchesInput {
  InstanceId: String!
  Filters: [AwsSsmS5qInput]
  NextToken: String
  MaxResults: Int
}

type AwsSsmDescribeInstancePatchesOutput {
  Patches: [AwsSsmDescribeInstancePatchesOutputPatches]
  NextToken: String
}

type AwsSsmDescribeInstancePatchesOutputPatches {
  Title: String!
  KBId: String!
  Classification: String!
  Severity: String!
  State: String!
  InstalledTime: Date!
}

input AwsSsmDescribeInstancePatchStatesForPatchGroupFiltersInput {
  Key: String!
  Values: [String]!
  Type: String!
}

input AwsSsmDescribeInstancePatchStatesForPatchGroupInput {
  PatchGroup: String!
  Filters: [AwsSsmDescribeInstancePatchStatesForPatchGroupFiltersInput]
  NextToken: String
  MaxResults: Int
}

type AwsSsmDescribeInstancePatchStatesForPatchGroupOutput {
  InstancePatchStates: [AwsSsmS7p]
  NextToken: String
}

input AwsSsmDescribeInstancePatchStatesInput {
  InstanceIds: [String]!
  NextToken: String
  MaxResults: Int
}

type AwsSsmDescribeInstancePatchStatesOutput {
  InstancePatchStates: [AwsSsmS7p]
  NextToken: String
}

input AwsSsmDescribeMaintenanceWindowExecutionsInput {
  WindowId: String!
  Filters: [AwsSsmS8gInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeMaintenanceWindowExecutionsOutput {
  WindowExecutions: [AwsSsmDescribeMaintenanceWindowExecutionsOutputWindowExecutions]
  NextToken: String
}

type AwsSsmDescribeMaintenanceWindowExecutionsOutputWindowExecutions {
  WindowId: String
  WindowExecutionId: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
}

input AwsSsmDescribeMaintenanceWindowExecutionTaskInvocationsInput {
  WindowExecutionId: String!
  TaskId: String!
  Filters: [AwsSsmS8gInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeMaintenanceWindowExecutionTaskInvocationsOutput {
  WindowExecutionTaskInvocationIdentities: [AwsSsmDescribeMaintenanceWindowExecutionTaskInvocationsOutputWindowExecutionTaskInvocationIdentities]
  NextToken: String
}

type AwsSsmDescribeMaintenanceWindowExecutionTaskInvocationsOutputWindowExecutionTaskInvocationIdentities {
  WindowExecutionId: String
  TaskExecutionId: String
  InvocationId: String
  ExecutionId: String
  TaskType: String
  Parameters: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
  OwnerInformation: String
  WindowTargetId: String
}

input AwsSsmDescribeMaintenanceWindowExecutionTasksInput {
  WindowExecutionId: String!
  Filters: [AwsSsmS8gInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeMaintenanceWindowExecutionTasksOutput {
  WindowExecutionTaskIdentities: [AwsSsmDescribeMaintenanceWindowExecutionTasksOutputWindowExecutionTaskIdentities]
  NextToken: String
}

type AwsSsmDescribeMaintenanceWindowExecutionTasksOutputWindowExecutionTaskIdentities {
  WindowExecutionId: String
  TaskExecutionId: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
  TaskArn: String
  TaskType: String
}

input AwsSsmDescribeMaintenanceWindowsInput {
  Filters: [AwsSsmS8gInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeMaintenanceWindowsOutput {
  WindowIdentities: [AwsSsmDescribeMaintenanceWindowsOutputWindowIdentities]
  NextToken: String
}

type AwsSsmDescribeMaintenanceWindowsOutputWindowIdentities {
  WindowId: String
  Name: String
  Description: String
  Enabled: Boolean
  Duration: Int
  Cutoff: Int
}

input AwsSsmDescribeMaintenanceWindowTargetsInput {
  WindowId: String!
  Filters: [AwsSsmS8gInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeMaintenanceWindowTargetsOutput {
  Targets: [AwsSsmDescribeMaintenanceWindowTargetsOutputTargets]
  NextToken: String
}

type AwsSsmDescribeMaintenanceWindowTargetsOutputTargets {
  WindowId: String
  WindowTargetId: String
  ResourceType: String
  Targets: [AwsSsmSu]
  OwnerInformation: String
  Name: String
  Description: String
}

input AwsSsmDescribeMaintenanceWindowTasksInput {
  WindowId: String!
  Filters: [AwsSsmS8gInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeMaintenanceWindowTasksOutput {
  Tasks: [AwsSsmDescribeMaintenanceWindowTasksOutputTasks]
  NextToken: String
}

type AwsSsmDescribeMaintenanceWindowTasksOutputTasks {
  WindowId: String
  WindowTaskId: String
  TaskArn: String
  Type: String
  Targets: [AwsSsmSu]
  TaskParameters: JSON
  Priority: Int
  LoggingInfo: AwsSsmS9k
  ServiceRoleArn: String
  MaxConcurrency: String
  MaxErrors: String
  Name: String
  Description: String
}

input AwsSsmDescribeParametersFiltersInput {
  Key: String!
  Values: [String]!
}

input AwsSsmDescribeParametersInput {
  Filters: [AwsSsmDescribeParametersFiltersInput]
  ParameterFilters: [AwsSsmS9xInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribeParametersOutput {
  Parameters: [AwsSsmDescribeParametersOutputParameters]
  NextToken: String
}

type AwsSsmDescribeParametersOutputParameters {
  Name: String
  Type: String
  KeyId: String
  LastModifiedDate: Date
  LastModifiedUser: String
  Description: String
  AllowedPattern: String
  Version: JSON
}

input AwsSsmDescribePatchBaselinesInput {
  Filters: [AwsSsmS5qInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmDescribePatchBaselinesOutput {
  BaselineIdentities: [AwsSsmSae]
  NextToken: String
}

input AwsSsmDescribePatchGroupsInput {
  MaxResults: Int
  Filters: [AwsSsmS5qInput]
  NextToken: String
}

type AwsSsmDescribePatchGroupsOutput {
  Mappings: [AwsSsmDescribePatchGroupsOutputMappings]
  NextToken: String
}

type AwsSsmDescribePatchGroupsOutputMappings {
  PatchGroup: String
  BaselineIdentity: AwsSsmSae
}

input AwsSsmDescribePatchGroupStateInput {
  PatchGroup: String!
}

type AwsSsmDescribePatchGroupStateOutput {
  Instances: Int
  InstancesWithInstalledPatches: Int
  InstancesWithInstalledOtherPatches: Int
  InstancesWithMissingPatches: Int
  InstancesWithFailedPatches: Int
  InstancesWithNotApplicablePatches: Int
}

input AwsSsmGetAutomationExecutionInput {
  AutomationExecutionId: String!
}

type AwsSsmGetAutomationExecutionOutput {
  AutomationExecution: AwsSsmGetAutomationExecutionOutputAutomationExecution
}

type AwsSsmGetAutomationExecutionOutputAutomationExecution {
  AutomationExecutionId: String
  DocumentName: String
  DocumentVersion: String
  ExecutionStartTime: Date
  ExecutionEndTime: Date
  AutomationExecutionStatus: String
  StepExecutions: [AwsSsmS5i]
  StepExecutionsTruncated: Boolean
  Parameters: JSON
  Outputs: JSON
  FailureMessage: String
  Mode: String
  ParentAutomationExecutionId: String
  ExecutedBy: String
  CurrentStepName: String
  CurrentAction: String
  TargetParameterName: String
  Targets: [AwsSsmSu]
  ResolvedTargets: AwsSsmS57
  MaxConcurrency: String
  MaxErrors: String
  Target: String
}

input AwsSsmGetCommandInvocationInput {
  CommandId: String!
  InstanceId: String!
  PluginName: String
}

type AwsSsmGetCommandInvocationOutput {
  CommandId: String
  InstanceId: String
  Comment: String
  DocumentName: String
  PluginName: String
  ResponseCode: Int
  ExecutionStartDateTime: String
  ExecutionElapsedTime: String
  ExecutionEndDateTime: String
  Status: String
  StatusDetails: String
  StandardOutputContent: String
  StandardOutputUrl: String
  StandardErrorContent: String
  StandardErrorUrl: String
}

input AwsSsmGetDefaultPatchBaselineInput {
  OperatingSystem: String
}

type AwsSsmGetDefaultPatchBaselineOutput {
  BaselineId: String
  OperatingSystem: String
}

input AwsSsmGetDeployablePatchSnapshotForInstanceInput {
  InstanceId: String!
  SnapshotId: String!
}

type AwsSsmGetDeployablePatchSnapshotForInstanceOutput {
  InstanceId: String
  SnapshotId: String
  SnapshotDownloadUrl: String
  Product: String
}

input AwsSsmGetDocumentInput {
  Name: String!
  DocumentVersion: String
  DocumentFormat: String
}

type AwsSsmGetDocumentOutput {
  Name: String
  DocumentVersion: String
  Content: String
  DocumentType: String
  DocumentFormat: String
}

input AwsSsmGetInventoryInput {
  Filters: [AwsSsmSb8Input]
  Aggregators: [AwsSsmSbeInput]
  ResultAttributes: [AwsSsmGetInventoryResultAttributesInput]
  NextToken: String
  MaxResults: Int
}

type AwsSsmGetInventoryOutput {
  Entities: [AwsSsmGetInventoryOutputEntities]
  NextToken: String
}

type AwsSsmGetInventoryOutputEntities {
  Id: String
  Data: JSON
}

input AwsSsmGetInventoryResultAttributesInput {
  TypeName: String!
}

input AwsSsmGetInventorySchemaInput {
  TypeName: String
  NextToken: String
  MaxResults: Int
  Aggregator: Boolean
  SubType: Boolean
}

type AwsSsmGetInventorySchemaOutput {
  Schemas: [AwsSsmGetInventorySchemaOutputSchemas]
  NextToken: String
}

type AwsSsmGetInventorySchemaOutputSchemas {
  TypeName: String!
  Version: String
  Attributes: [AwsSsmGetInventorySchemaOutputSchemasAttributes]!
  DisplayName: String
}

type AwsSsmGetInventorySchemaOutputSchemasAttributes {
  Name: String!
  DataType: String!
}

input AwsSsmGetMaintenanceWindowExecutionInput {
  WindowExecutionId: String!
}

type AwsSsmGetMaintenanceWindowExecutionOutput {
  WindowExecutionId: String
  TaskIds: [String]
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
}

input AwsSsmGetMaintenanceWindowExecutionTaskInput {
  WindowExecutionId: String!
  TaskId: String!
}

input AwsSsmGetMaintenanceWindowExecutionTaskInvocationInput {
  WindowExecutionId: String!
  TaskId: String!
  InvocationId: String!
}

type AwsSsmGetMaintenanceWindowExecutionTaskInvocationOutput {
  WindowExecutionId: String
  TaskExecutionId: String
  InvocationId: String
  ExecutionId: String
  TaskType: String
  Parameters: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
  OwnerInformation: String
  WindowTargetId: String
}

type AwsSsmGetMaintenanceWindowExecutionTaskOutput {
  WindowExecutionId: String
  TaskExecutionId: String
  TaskArn: String
  ServiceRole: String
  Type: String
  TaskParameters: [JSON]
  Priority: Int
  MaxConcurrency: String
  MaxErrors: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
}

input AwsSsmGetMaintenanceWindowInput {
  WindowId: String!
}

type AwsSsmGetMaintenanceWindowOutput {
  WindowId: String
  Name: String
  Description: String
  Schedule: String
  Duration: Int
  Cutoff: Int
  AllowUnassociatedTargets: Boolean
  Enabled: Boolean
  CreatedDate: Date
  ModifiedDate: Date
}

input AwsSsmGetMaintenanceWindowTaskInput {
  WindowId: String!
  WindowTaskId: String!
}

type AwsSsmGetMaintenanceWindowTaskOutput {
  WindowId: String
  WindowTaskId: String
  Targets: [AwsSsmSu]
  TaskArn: String
  ServiceRoleArn: String
  TaskType: String
  TaskParameters: JSON
  TaskInvocationParameters: AwsSsmScn
  Priority: Int
  MaxConcurrency: String
  MaxErrors: String
  LoggingInfo: AwsSsmS9k
  Name: String
  Description: String
}

input AwsSsmGetParameterHistoryInput {
  Name: String!
  WithDecryption: Boolean
  MaxResults: Int
  NextToken: String
}

type AwsSsmGetParameterHistoryOutput {
  Parameters: [AwsSsmGetParameterHistoryOutputParameters]
  NextToken: String
}

type AwsSsmGetParameterHistoryOutputParameters {
  Name: String
  Type: String
  KeyId: String
  LastModifiedDate: Date
  LastModifiedUser: String
  Description: String
  Value: String
  AllowedPattern: String
  Version: JSON
}

input AwsSsmGetParameterInput {
  Name: String!
  WithDecryption: Boolean
}

type AwsSsmGetParameterOutput {
  Parameter: AwsSsmSd5
}

input AwsSsmGetParametersByPathInput {
  Path: String!
  Recursive: Boolean
  ParameterFilters: [AwsSsmS9xInput]
  WithDecryption: Boolean
  MaxResults: Int
  NextToken: String
}

type AwsSsmGetParametersByPathOutput {
  Parameters: [AwsSsmSd5]
  NextToken: String
}

input AwsSsmGetParametersInput {
  Names: [String]!
  WithDecryption: Boolean
}

type AwsSsmGetParametersOutput {
  Parameters: [AwsSsmSd5]
  InvalidParameters: [String]
}

input AwsSsmGetPatchBaselineForPatchGroupInput {
  PatchGroup: String!
  OperatingSystem: String
}

type AwsSsmGetPatchBaselineForPatchGroupOutput {
  BaselineId: String
  PatchGroup: String
  OperatingSystem: String
}

input AwsSsmGetPatchBaselineInput {
  BaselineId: String!
}

type AwsSsmGetPatchBaselineOutput {
  BaselineId: String
  Name: String
  OperatingSystem: String
  GlobalFilters: AwsSsmS2s
  ApprovalRules: AwsSsmS2y
  ApprovedPatches: [String]
  ApprovedPatchesComplianceLevel: String
  RejectedPatches: [String]
  PatchGroups: [String]
  CreatedDate: Date
  ModifiedDate: Date
  Description: String
}

input AwsSsmListAssociationsAssociationFilterListInput {
  key: String!
  value: String!
}

input AwsSsmListAssociationsInput {
  AssociationFilterList: [AwsSsmListAssociationsAssociationFilterListInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmListAssociationsOutput {
  Associations: [AwsSsmListAssociationsOutputAssociations]
  NextToken: String
}

type AwsSsmListAssociationsOutputAssociations {
  Name: String
  InstanceId: String
  AssociationId: String
  AssociationVersion: String
  DocumentVersion: String
  Targets: [AwsSsmSu]
  LastExecutionDate: Date
  Overview: AwsSsmS1e
  ScheduleExpression: String
  AssociationName: String
}

input AwsSsmListAssociationVersionsInput {
  AssociationId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSsmListAssociationVersionsOutput {
  AssociationVersions: [AwsSsmListAssociationVersionsOutputAssociationVersions]
  NextToken: String
}

type AwsSsmListAssociationVersionsOutputAssociationVersions {
  AssociationId: String
  AssociationVersion: String
  CreatedDate: Date
  Name: String
  DocumentVersion: String
  Parameters: JSON
  Targets: [AwsSsmSu]
  ScheduleExpression: String
  OutputLocation: AwsSsmS10
  AssociationName: String
}

input AwsSsmListCommandInvocationsInput {
  CommandId: String
  InstanceId: String
  MaxResults: Int
  NextToken: String
  Filters: [AwsSsmSe0Input]
  Details: Boolean
}

type AwsSsmListCommandInvocationsOutput {
  CommandInvocations: [AwsSsmListCommandInvocationsOutputCommandInvocations]
  NextToken: String
}

type AwsSsmListCommandInvocationsOutputCommandInvocations {
  CommandId: String
  InstanceId: String
  InstanceName: String
  Comment: String
  DocumentName: String
  RequestedDateTime: Date
  Status: String
  StatusDetails: String
  TraceOutput: String
  StandardOutputUrl: String
  StandardErrorUrl: String
  CommandPlugins: [AwsSsmListCommandInvocationsOutputCommandInvocationsCommandPlugins]
  ServiceRole: String
  NotificationConfig: AwsSsmScp
}

type AwsSsmListCommandInvocationsOutputCommandInvocationsCommandPlugins {
  Name: String
  Status: String
  StatusDetails: String
  ResponseCode: Int
  ResponseStartDateTime: Date
  ResponseFinishDateTime: Date
  Output: String
  StandardOutputUrl: String
  StandardErrorUrl: String
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
}

input AwsSsmListCommandsInput {
  CommandId: String
  InstanceId: String
  MaxResults: Int
  NextToken: String
  Filters: [AwsSsmSe0Input]
}

type AwsSsmListCommandsOutput {
  Commands: [AwsSsmSeg]
  NextToken: String
}

input AwsSsmListComplianceItemsInput {
  Filters: [AwsSsmSemInput]
  ResourceIds: [String]
  ResourceTypes: [String]
  NextToken: String
  MaxResults: Int
}

type AwsSsmListComplianceItemsOutput {
  ComplianceItems: [AwsSsmListComplianceItemsOutputComplianceItems]
  NextToken: String
}

type AwsSsmListComplianceItemsOutputComplianceItems {
  ComplianceType: String
  ResourceType: String
  ResourceId: String
  Id: String
  Title: String
  Status: String
  Severity: String
  ExecutionSummary: AwsSsmSf4
  Details: JSON
}

input AwsSsmListComplianceSummariesInput {
  Filters: [AwsSsmSemInput]
  NextToken: String
  MaxResults: Int
}

type AwsSsmListComplianceSummariesOutput {
  ComplianceSummaryItems: [AwsSsmListComplianceSummariesOutputComplianceSummaryItems]
  NextToken: String
}

type AwsSsmListComplianceSummariesOutputComplianceSummaryItems {
  ComplianceType: String
  CompliantSummary: AwsSsmSfc
  NonCompliantSummary: AwsSsmSff
}

input AwsSsmListDocumentsDocumentFilterListInput {
  key: String!
  value: String!
}

input AwsSsmListDocumentsFiltersInput {
  Key: String
  Values: [String]
}

input AwsSsmListDocumentsInput {
  DocumentFilterList: [AwsSsmListDocumentsDocumentFilterListInput]
  Filters: [AwsSsmListDocumentsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsSsmListDocumentsOutput {
  DocumentIdentifiers: [AwsSsmListDocumentsOutputDocumentIdentifiers]
  NextToken: String
}

type AwsSsmListDocumentsOutputDocumentIdentifiers {
  Name: String
  Owner: String
  PlatformTypes: [String]
  DocumentVersion: String
  DocumentType: String
  SchemaVersion: String
  DocumentFormat: String
  TargetType: String
  Tags: [AwsSsmS4]
}

input AwsSsmListDocumentVersionsInput {
  Name: String!
  MaxResults: Int
  NextToken: String
}

type AwsSsmListDocumentVersionsOutput {
  DocumentVersions: [AwsSsmListDocumentVersionsOutputDocumentVersions]
  NextToken: String
}

type AwsSsmListDocumentVersionsOutputDocumentVersions {
  Name: String
  DocumentVersion: String
  CreatedDate: Date
  IsDefaultVersion: Boolean
  DocumentFormat: String
}

input AwsSsmListInventoryEntriesInput {
  InstanceId: String!
  TypeName: String!
  Filters: [AwsSsmSb8Input]
  NextToken: String
  MaxResults: Int
}

type AwsSsmListInventoryEntriesOutput {
  TypeName: String
  InstanceId: String
  SchemaVersion: String
  CaptureTime: String
  Entries: [JSON]
  NextToken: String
}

input AwsSsmListResourceComplianceSummariesInput {
  Filters: [AwsSsmSemInput]
  NextToken: String
  MaxResults: Int
}

type AwsSsmListResourceComplianceSummariesOutput {
  ResourceComplianceSummaryItems: [AwsSsmListResourceComplianceSummariesOutputResourceComplianceSummaryItems]
  NextToken: String
}

type AwsSsmListResourceComplianceSummariesOutputResourceComplianceSummaryItems {
  ComplianceType: String
  ResourceType: String
  ResourceId: String
  Status: String
  OverallSeverity: String
  ExecutionSummary: AwsSsmSf4
  CompliantSummary: AwsSsmSfc
  NonCompliantSummary: AwsSsmSff
}

input AwsSsmListResourceDataSyncInput {
  NextToken: String
  MaxResults: Int
}

type AwsSsmListResourceDataSyncOutput {
  ResourceDataSyncItems: [AwsSsmListResourceDataSyncOutputResourceDataSyncItems]
  NextToken: String
}

type AwsSsmListResourceDataSyncOutputResourceDataSyncItems {
  SyncName: String
  S3Destination: AwsSsmS3a
  LastSyncTime: Date
  LastSuccessfulSyncTime: Date
  LastStatus: String
  SyncCreatedTime: Date
}

input AwsSsmListTagsForResourceInput {
  ResourceType: String!
  ResourceId: String!
}

type AwsSsmListTagsForResourceOutput {
  TagList: [AwsSsmS4]
}

input AwsSsmModifyDocumentPermissionInput {
  Name: String!
  PermissionType: String!
  AccountIdsToAdd: [String]
  AccountIdsToRemove: [String]
}

input AwsSsmPutComplianceItemsInput {
  ResourceId: String!
  ResourceType: String!
  ComplianceType: String!
  ExecutionSummary: AwsSsmSf4Input!
  Items: [AwsSsmPutComplianceItemsItemsInput]!
  ItemContentHash: String
}

input AwsSsmPutComplianceItemsItemsInput {
  Id: String
  Title: String
  Severity: String!
  Status: String!
  Details: JSON
}

input AwsSsmPutInventoryInput {
  InstanceId: String!
  Items: [AwsSsmPutInventoryItemsInput]!
}

input AwsSsmPutInventoryItemsInput {
  TypeName: String!
  SchemaVersion: String!
  CaptureTime: String!
  ContentHash: String
  Content: [JSON]
  Context: JSON
}

input AwsSsmPutParameterInput {
  Name: String!
  Description: String
  Value: String!
  Type: String!
  KeyId: String
  Overwrite: Boolean
  AllowedPattern: String
}

type AwsSsmPutParameterOutput {
  Version: JSON
}

input AwsSsmRegisterDefaultPatchBaselineInput {
  BaselineId: String!
}

type AwsSsmRegisterDefaultPatchBaselineOutput {
  BaselineId: String
}

input AwsSsmRegisterPatchBaselineForPatchGroupInput {
  BaselineId: String!
  PatchGroup: String!
}

type AwsSsmRegisterPatchBaselineForPatchGroupOutput {
  BaselineId: String
  PatchGroup: String
}

input AwsSsmRegisterTargetWithMaintenanceWindowInput {
  WindowId: String!
  ResourceType: String!
  Targets: [AwsSsmSuInput]!
  OwnerInformation: String
  Name: String
  Description: String
  ClientToken: String
}

type AwsSsmRegisterTargetWithMaintenanceWindowOutput {
  WindowTargetId: String
}

input AwsSsmRegisterTaskWithMaintenanceWindowInput {
  WindowId: String!
  Targets: [AwsSsmSuInput]!
  TaskArn: String!
  ServiceRoleArn: String!
  TaskType: String!
  TaskParameters: JSON
  TaskInvocationParameters: AwsSsmScnInput
  Priority: Int
  MaxConcurrency: String!
  MaxErrors: String!
  LoggingInfo: AwsSsmS9kInput
  Name: String
  Description: String
  ClientToken: String
}

type AwsSsmRegisterTaskWithMaintenanceWindowOutput {
  WindowTaskId: String
}

input AwsSsmRemoveTagsFromResourceInput {
  ResourceType: String!
  ResourceId: String!
  TagKeys: [String]!
}

type AwsSsmS10 {
  S3Location: AwsSsmS10S3Location
}

input AwsSsmS10Input {
  S3Location: AwsSsmS10S3LocationInput
}

type AwsSsmS10S3Location {
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
}

input AwsSsmS10S3LocationInput {
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
}

type AwsSsmS17 {
  Name: String
  InstanceId: String
  AssociationVersion: String
  Date: Date
  LastUpdateAssociationDate: Date
  Status: AwsSsmS1a
  Overview: AwsSsmS1e
  DocumentVersion: String
  Parameters: JSON
  AssociationId: String
  Targets: [AwsSsmSu]
  ScheduleExpression: String
  OutputLocation: AwsSsmS10
  LastExecutionDate: Date
  LastSuccessfulExecutionDate: Date
  AssociationName: String
}

type AwsSsmS1a {
  Date: Date!
  Name: String!
  Message: String!
  AdditionalInfo: String
}

input AwsSsmS1aInput {
  Date: Date!
  Name: String!
  Message: String!
  AdditionalInfo: String
}

type AwsSsmS1e {
  Status: String
  DetailedStatus: String
  AssociationStatusAggregatedCount: JSON
}

type AwsSsmS1l {
  Name: String!
  InstanceId: String
  Parameters: JSON
  DocumentVersion: String
  Targets: [AwsSsmSu]
  ScheduleExpression: String
  OutputLocation: AwsSsmS10
  AssociationName: String
}

input AwsSsmS1lInput {
  Name: String!
  InstanceId: String
  Parameters: JSON
  DocumentVersion: String
  Targets: [AwsSsmSuInput]
  ScheduleExpression: String
  OutputLocation: AwsSsmS10Input
  AssociationName: String
}

type AwsSsmS1y {
  Sha1: String
  Hash: String
  HashType: String
  Name: String
  Owner: String
  CreatedDate: Date
  Status: String
  DocumentVersion: String
  Description: String
  Parameters: [AwsSsmS1yParameters]
  PlatformTypes: [String]
  DocumentType: String
  SchemaVersion: String
  LatestVersion: String
  DefaultVersion: String
  DocumentFormat: String
  TargetType: String
  Tags: [AwsSsmS4]
}

type AwsSsmS1yParameters {
  Name: String
  Type: String
  Description: String
  DefaultValue: String
}

type AwsSsmS2s {
  PatchFilters: [AwsSsmS2sPatchFilters]!
}

input AwsSsmS2sInput {
  PatchFilters: [AwsSsmS2sPatchFiltersInput]!
}

type AwsSsmS2sPatchFilters {
  Key: String!
  Values: [String]!
}

input AwsSsmS2sPatchFiltersInput {
  Key: String!
  Values: [String]!
}

type AwsSsmS2y {
  PatchRules: [AwsSsmS2yPatchRules]!
}

input AwsSsmS2yInput {
  PatchRules: [AwsSsmS2yPatchRulesInput]!
}

type AwsSsmS2yPatchRules {
  PatchFilterGroup: AwsSsmS2s!
  ComplianceLevel: String
  ApproveAfterDays: Int!
}

input AwsSsmS2yPatchRulesInput {
  PatchFilterGroup: AwsSsmS2sInput!
  ComplianceLevel: String
  ApproveAfterDays: Int!
}

type AwsSsmS3a {
  BucketName: String!
  Prefix: String
  SyncFormat: String!
  Region: String!
  AWSKMSKeyARN: String
}

input AwsSsmS3aInput {
  BucketName: String!
  Prefix: String
  SyncFormat: String!
  Region: String!
  AWSKMSKeyARN: String
}

type AwsSsmS4 {
  Key: String!
  Value: String!
}

input AwsSsmS4Input {
  Key: String!
  Value: String!
}

type AwsSsmS57 {
  ParameterValues: [String]
  Truncated: Boolean
}

type AwsSsmS5i {
  StepName: String
  Action: String
  TimeoutSeconds: JSON
  OnFailure: String
  MaxAttempts: Int
  ExecutionStartTime: Date
  ExecutionEndTime: Date
  StepStatus: String
  ResponseCode: String
  Inputs: JSON
  Outputs: JSON
  Response: String
  FailureMessage: String
  FailureDetails: AwsSsmS5iFailureDetails
  StepExecutionId: String
  OverriddenParameters: JSON
}

type AwsSsmS5iFailureDetails {
  FailureStage: String
  FailureType: String
  Details: JSON
}

input AwsSsmS5qInput {
  Key: String
  Values: [String]
}

type AwsSsmS5y {
  Id: String
  ReleaseDate: Date
  Title: String
  Description: String
  ContentUrl: String
  Vendor: String
  ProductFamily: String
  Product: String
  Classification: String
  MsrcSeverity: String
  KbNumber: String
  MsrcNumber: String
  Language: String
}

type AwsSsmS7p {
  InstanceId: String!
  PatchGroup: String!
  BaselineId: String!
  SnapshotId: String
  OwnerInformation: String
  InstalledCount: Int
  InstalledOtherCount: Int
  MissingCount: Int
  FailedCount: Int
  NotApplicableCount: Int
  OperationStartTime: Date!
  OperationEndTime: Date!
  Operation: String!
}

input AwsSsmS8gInput {
  Key: String
  Values: [String]
}

type AwsSsmS9k {
  S3BucketName: String!
  S3KeyPrefix: String
  S3Region: String!
}

input AwsSsmS9kInput {
  S3BucketName: String!
  S3KeyPrefix: String
  S3Region: String!
}

input AwsSsmS9xInput {
  Key: String!
  Option: String
  Values: [String]
}

type AwsSsmSae {
  BaselineId: String
  BaselineName: String
  OperatingSystem: String
  BaselineDescription: String
  DefaultBaseline: Boolean
}

input AwsSsmSb8Input {
  Key: String!
  Values: [String]!
  Type: String
}

input AwsSsmSbeInput {
  Expression: String
  Aggregators: JSON
}

type AwsSsmScn {
  RunCommand: AwsSsmScnRunCommand
  Automation: AwsSsmScnAutomation
  StepFunctions: AwsSsmScnStepFunctions
  Lambda: AwsSsmScnLambda
}

type AwsSsmScnAutomation {
  DocumentVersion: String
  Parameters: JSON
}

input AwsSsmScnAutomationInput {
  DocumentVersion: String
  Parameters: JSON
}

input AwsSsmScnInput {
  RunCommand: AwsSsmScnRunCommandInput
  Automation: AwsSsmScnAutomationInput
  StepFunctions: AwsSsmScnStepFunctionsInput
  Lambda: AwsSsmScnLambdaInput
}

type AwsSsmScnLambda {
  ClientContext: String
  Qualifier: String
  Payload: JSON
}

input AwsSsmScnLambdaInput {
  ClientContext: String
  Qualifier: String
  Payload: JSON
}

type AwsSsmScnRunCommand {
  Comment: String
  DocumentHash: String
  DocumentHashType: String
  NotificationConfig: AwsSsmScp
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
  Parameters: JSON
  ServiceRoleArn: String
  TimeoutSeconds: Int
}

input AwsSsmScnRunCommandInput {
  Comment: String
  DocumentHash: String
  DocumentHashType: String
  NotificationConfig: AwsSsmScpInput
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
  Parameters: JSON
  ServiceRoleArn: String
  TimeoutSeconds: Int
}

type AwsSsmScnStepFunctions {
  Input: String
  Name: String
}

input AwsSsmScnStepFunctionsInput {
  Input: String
  Name: String
}

type AwsSsmScp {
  NotificationArn: String
  NotificationEvents: [String]
  NotificationType: String
}

input AwsSsmScpInput {
  NotificationArn: String
  NotificationEvents: [String]
  NotificationType: String
}

type AwsSsmSd5 {
  Name: String
  Type: String
  Value: String
  Version: JSON
}

input AwsSsmSe0Input {
  key: String!
  value: String!
}

type AwsSsmSeg {
  CommandId: String
  DocumentName: String
  Comment: String
  ExpiresAfter: Date
  Parameters: JSON
  InstanceIds: [String]
  Targets: [AwsSsmSu]
  RequestedDateTime: Date
  Status: String
  StatusDetails: String
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
  MaxConcurrency: String
  MaxErrors: String
  TargetCount: Int
  CompletedCount: Int
  ErrorCount: Int
  ServiceRole: String
  NotificationConfig: AwsSsmScp
}

input AwsSsmSemInput {
  Key: String
  Values: [String]
  Type: String
}

input AwsSsmSendAutomationSignalInput {
  AutomationExecutionId: String!
  SignalType: String!
  Payload: JSON
}

input AwsSsmSendCommandInput {
  InstanceIds: [String]
  Targets: [AwsSsmSuInput]
  DocumentName: String!
  DocumentHash: String
  DocumentHashType: String
  TimeoutSeconds: Int
  Comment: String
  Parameters: JSON
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
  MaxConcurrency: String
  MaxErrors: String
  ServiceRoleArn: String
  NotificationConfig: AwsSsmScpInput
}

type AwsSsmSendCommandOutput {
  Command: AwsSsmSeg
}

type AwsSsmSf4 {
  ExecutionTime: Date!
  ExecutionId: String
  ExecutionType: String
}

input AwsSsmSf4Input {
  ExecutionTime: Date!
  ExecutionId: String
  ExecutionType: String
}

type AwsSsmSfc {
  CompliantCount: Int
  SeveritySummary: AwsSsmSfe
}

type AwsSsmSfe {
  CriticalCount: Int
  HighCount: Int
  MediumCount: Int
  LowCount: Int
  InformationalCount: Int
  UnspecifiedCount: Int
}

type AwsSsmSff {
  NonCompliantCount: Int
  SeveritySummary: AwsSsmSfe
}

input AwsSsmStartAutomationExecutionInput {
  DocumentName: String!
  DocumentVersion: String
  Parameters: JSON
  ClientToken: String
  Mode: String
  TargetParameterName: String
  Targets: [AwsSsmSuInput]
  MaxConcurrency: String
  MaxErrors: String
}

type AwsSsmStartAutomationExecutionOutput {
  AutomationExecutionId: String
}

input AwsSsmStopAutomationExecutionInput {
  AutomationExecutionId: String!
  Type: String
}

type AwsSsmSu {
  Key: String
  Values: [String]
}

input AwsSsmSuInput {
  Key: String
  Values: [String]
}

input AwsSsmUpdateAssociationInput {
  AssociationId: String!
  Parameters: JSON
  DocumentVersion: String
  ScheduleExpression: String
  OutputLocation: AwsSsmS10Input
  Name: String
  Targets: [AwsSsmSuInput]
  AssociationName: String
  AssociationVersion: String
}

type AwsSsmUpdateAssociationOutput {
  AssociationDescription: AwsSsmS17
}

input AwsSsmUpdateAssociationStatusInput {
  Name: String!
  InstanceId: String!
  AssociationStatus: AwsSsmS1aInput!
}

type AwsSsmUpdateAssociationStatusOutput {
  AssociationDescription: AwsSsmS17
}

input AwsSsmUpdateDocumentDefaultVersionInput {
  Name: String!
  DocumentVersion: String!
}

type AwsSsmUpdateDocumentDefaultVersionOutput {
  Description: AwsSsmUpdateDocumentDefaultVersionOutputDescription
}

type AwsSsmUpdateDocumentDefaultVersionOutputDescription {
  Name: String
  DefaultVersion: String
}

input AwsSsmUpdateDocumentInput {
  Content: String!
  Name: String!
  DocumentVersion: String
  DocumentFormat: String
  TargetType: String
}

type AwsSsmUpdateDocumentOutput {
  DocumentDescription: AwsSsmS1y
}

input AwsSsmUpdateMaintenanceWindowInput {
  WindowId: String!
  Name: String
  Description: String
  Schedule: String
  Duration: Int
  Cutoff: Int
  AllowUnassociatedTargets: Boolean
  Enabled: Boolean
  Replace: Boolean
}

type AwsSsmUpdateMaintenanceWindowOutput {
  WindowId: String
  Name: String
  Description: String
  Schedule: String
  Duration: Int
  Cutoff: Int
  AllowUnassociatedTargets: Boolean
  Enabled: Boolean
}

input AwsSsmUpdateMaintenanceWindowTargetInput {
  WindowId: String!
  WindowTargetId: String!
  Targets: [AwsSsmSuInput]
  OwnerInformation: String
  Name: String
  Description: String
  Replace: Boolean
}

type AwsSsmUpdateMaintenanceWindowTargetOutput {
  WindowId: String
  WindowTargetId: String
  Targets: [AwsSsmSu]
  OwnerInformation: String
  Name: String
  Description: String
}

input AwsSsmUpdateMaintenanceWindowTaskInput {
  WindowId: String!
  WindowTaskId: String!
  Targets: [AwsSsmSuInput]
  TaskArn: String
  ServiceRoleArn: String
  TaskParameters: JSON
  TaskInvocationParameters: AwsSsmScnInput
  Priority: Int
  MaxConcurrency: String
  MaxErrors: String
  LoggingInfo: AwsSsmS9kInput
  Name: String
  Description: String
  Replace: Boolean
}

type AwsSsmUpdateMaintenanceWindowTaskOutput {
  WindowId: String
  WindowTaskId: String
  Targets: [AwsSsmSu]
  TaskArn: String
  ServiceRoleArn: String
  TaskParameters: JSON
  TaskInvocationParameters: AwsSsmScn
  Priority: Int
  MaxConcurrency: String
  MaxErrors: String
  LoggingInfo: AwsSsmS9k
  Name: String
  Description: String
}

input AwsSsmUpdateManagedInstanceRoleInput {
  InstanceId: String!
  IamRole: String!
}

input AwsSsmUpdatePatchBaselineInput {
  BaselineId: String!
  Name: String
  GlobalFilters: AwsSsmS2sInput
  ApprovalRules: AwsSsmS2yInput
  ApprovedPatches: [String]
  ApprovedPatchesComplianceLevel: String
  RejectedPatches: [String]
  Description: String
}

type AwsSsmUpdatePatchBaselineOutput {
  BaselineId: String
  Name: String
  OperatingSystem: String
  GlobalFilters: AwsSsmS2s
  ApprovalRules: AwsSsmS2y
  ApprovedPatches: [String]
  ApprovedPatchesComplianceLevel: String
  RejectedPatches: [String]
  CreatedDate: Date
  ModifiedDate: Date
  Description: String
}

# AWS Step Functions (2016-11-23)
type AwsStepfunctions {
  # stepfunctions.CreateActivity
  CreateActivity(input: AwsStepfunctionsCreateActivityInput!): AwsStepfunctionsCreateActivityOutput

  # stepfunctions.CreateStateMachine
  CreateStateMachine(input: AwsStepfunctionsCreateStateMachineInput!): AwsStepfunctionsCreateStateMachineOutput

  # stepfunctions.DeleteActivity
  DeleteActivity(input: AwsStepfunctionsDeleteActivityInput!): JSON

  # stepfunctions.DeleteStateMachine
  DeleteStateMachine(input: AwsStepfunctionsDeleteStateMachineInput!): JSON

  # stepfunctions.DescribeActivity
  DescribeActivity(input: AwsStepfunctionsDescribeActivityInput!): AwsStepfunctionsDescribeActivityOutput

  # stepfunctions.DescribeExecution
  DescribeExecution(input: AwsStepfunctionsDescribeExecutionInput!): AwsStepfunctionsDescribeExecutionOutput

  # stepfunctions.DescribeStateMachine
  DescribeStateMachine(input: AwsStepfunctionsDescribeStateMachineInput!): AwsStepfunctionsDescribeStateMachineOutput

  # stepfunctions.DescribeStateMachineForExecution
  DescribeStateMachineForExecution(input: AwsStepfunctionsDescribeStateMachineForExecutionInput!): AwsStepfunctionsDescribeStateMachineForExecutionOutput

  # stepfunctions.GetActivityTask
  GetActivityTask(input: AwsStepfunctionsGetActivityTaskInput!): AwsStepfunctionsGetActivityTaskOutput

  # stepfunctions.GetExecutionHistory
  GetExecutionHistory(input: AwsStepfunctionsGetExecutionHistoryInput!): AwsStepfunctionsGetExecutionHistoryOutput

  # stepfunctions.ListActivities
  ListActivities(input: AwsStepfunctionsListActivitiesInput): AwsStepfunctionsListActivitiesOutput

  # stepfunctions.ListExecutions
  ListExecutions(input: AwsStepfunctionsListExecutionsInput!): AwsStepfunctionsListExecutionsOutput

  # stepfunctions.ListStateMachines
  ListStateMachines(input: AwsStepfunctionsListStateMachinesInput): AwsStepfunctionsListStateMachinesOutput

  # stepfunctions.SendTaskFailure
  SendTaskFailure(input: AwsStepfunctionsSendTaskFailureInput!): JSON

  # stepfunctions.SendTaskHeartbeat
  SendTaskHeartbeat(input: AwsStepfunctionsSendTaskHeartbeatInput!): JSON

  # stepfunctions.SendTaskSuccess
  SendTaskSuccess(input: AwsStepfunctionsSendTaskSuccessInput!): JSON

  # stepfunctions.StartExecution
  StartExecution(input: AwsStepfunctionsStartExecutionInput!): AwsStepfunctionsStartExecutionOutput

  # stepfunctions.StopExecution
  StopExecution(input: AwsStepfunctionsStopExecutionInput!): AwsStepfunctionsStopExecutionOutput

  # stepfunctions.UpdateStateMachine
  UpdateStateMachine(input: AwsStepfunctionsUpdateStateMachineInput!): AwsStepfunctionsUpdateStateMachineOutput
}

input AwsStepfunctionsCreateActivityInput {
  name: String!
}

type AwsStepfunctionsCreateActivityOutput {
  activityArn: String!
  creationDate: Date!
}

input AwsStepfunctionsCreateStateMachineInput {
  name: String!
  definition: String!
  roleArn: String!
}

type AwsStepfunctionsCreateStateMachineOutput {
  stateMachineArn: String!
  creationDate: Date!
}

input AwsStepfunctionsDeleteActivityInput {
  activityArn: String!
}

input AwsStepfunctionsDeleteStateMachineInput {
  stateMachineArn: String!
}

input AwsStepfunctionsDescribeActivityInput {
  activityArn: String!
}

type AwsStepfunctionsDescribeActivityOutput {
  activityArn: String!
  name: String!
  creationDate: Date!
}

input AwsStepfunctionsDescribeExecutionInput {
  executionArn: String!
}

type AwsStepfunctionsDescribeExecutionOutput {
  executionArn: String!
  stateMachineArn: String!
  name: String
  status: String!
  startDate: Date!
  stopDate: Date
  input: String!
  output: String
}

input AwsStepfunctionsDescribeStateMachineForExecutionInput {
  executionArn: String!
}

type AwsStepfunctionsDescribeStateMachineForExecutionOutput {
  stateMachineArn: String!
  name: String!
  definition: String!
  roleArn: String!
  updateDate: Date!
}

input AwsStepfunctionsDescribeStateMachineInput {
  stateMachineArn: String!
}

type AwsStepfunctionsDescribeStateMachineOutput {
  stateMachineArn: String!
  name: String!
  status: String
  definition: String!
  roleArn: String!
  creationDate: Date!
}

input AwsStepfunctionsGetActivityTaskInput {
  activityArn: String!
  workerName: String
}

type AwsStepfunctionsGetActivityTaskOutput {
  taskToken: String
  input: String
}

input AwsStepfunctionsGetExecutionHistoryInput {
  executionArn: String!
  maxResults: Int
  reverseOrder: Boolean
  nextToken: String
}

type AwsStepfunctionsGetExecutionHistoryOutput {
  events: [AwsStepfunctionsGetExecutionHistoryOutputEvents]!
  nextToken: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEvents {
  timestamp: Date!
  type: String!
  id: JSON!
  previousEventId: JSON
  activityFailedEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsActivityFailedEventDetails
  activityScheduleFailedEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsActivityScheduleFailedEventDetails
  activityScheduledEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsActivityScheduledEventDetails
  activityStartedEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsActivityStartedEventDetails
  activitySucceededEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsActivitySucceededEventDetails
  activityTimedOutEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsActivityTimedOutEventDetails
  executionFailedEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsExecutionFailedEventDetails
  executionStartedEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsExecutionStartedEventDetails
  executionSucceededEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsExecutionSucceededEventDetails
  executionAbortedEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsExecutionAbortedEventDetails
  executionTimedOutEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsExecutionTimedOutEventDetails
  lambdaFunctionFailedEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsLambdaFunctionFailedEventDetails
  lambdaFunctionScheduleFailedEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsLambdaFunctionScheduleFailedEventDetails
  lambdaFunctionScheduledEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsLambdaFunctionScheduledEventDetails
  lambdaFunctionStartFailedEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsLambdaFunctionStartFailedEventDetails
  lambdaFunctionSucceededEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsLambdaFunctionSucceededEventDetails
  lambdaFunctionTimedOutEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsLambdaFunctionTimedOutEventDetails
  stateEnteredEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsStateEnteredEventDetails
  stateExitedEventDetails: AwsStepfunctionsGetExecutionHistoryOutputEventsStateExitedEventDetails
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsActivityFailedEventDetails {
  error: String
  cause: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsActivityScheduledEventDetails {
  resource: String!
  input: String
  timeoutInSeconds: JSON
  heartbeatInSeconds: JSON
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsActivityScheduleFailedEventDetails {
  error: String
  cause: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsActivityStartedEventDetails {
  workerName: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsActivitySucceededEventDetails {
  output: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsActivityTimedOutEventDetails {
  error: String
  cause: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsExecutionAbortedEventDetails {
  error: String
  cause: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsExecutionFailedEventDetails {
  error: String
  cause: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsExecutionStartedEventDetails {
  input: String
  roleArn: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsExecutionSucceededEventDetails {
  output: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsExecutionTimedOutEventDetails {
  error: String
  cause: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsLambdaFunctionFailedEventDetails {
  error: String
  cause: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsLambdaFunctionScheduledEventDetails {
  resource: String!
  input: String
  timeoutInSeconds: JSON
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsLambdaFunctionScheduleFailedEventDetails {
  error: String
  cause: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsLambdaFunctionStartFailedEventDetails {
  error: String
  cause: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsLambdaFunctionSucceededEventDetails {
  output: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsLambdaFunctionTimedOutEventDetails {
  error: String
  cause: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsStateEnteredEventDetails {
  name: String!
  input: String
}

type AwsStepfunctionsGetExecutionHistoryOutputEventsStateExitedEventDetails {
  name: String!
  output: String
}

input AwsStepfunctionsListActivitiesInput {
  maxResults: Int
  nextToken: String
}

type AwsStepfunctionsListActivitiesOutput {
  activities: [AwsStepfunctionsListActivitiesOutputActivities]!
  nextToken: String
}

type AwsStepfunctionsListActivitiesOutputActivities {
  activityArn: String!
  name: String!
  creationDate: Date!
}

input AwsStepfunctionsListExecutionsInput {
  stateMachineArn: String!
  statusFilter: String
  maxResults: Int
  nextToken: String
}

type AwsStepfunctionsListExecutionsOutput {
  executions: [AwsStepfunctionsListExecutionsOutputExecutions]!
  nextToken: String
}

type AwsStepfunctionsListExecutionsOutputExecutions {
  executionArn: String!
  stateMachineArn: String!
  name: String!
  status: String!
  startDate: Date!
  stopDate: Date
}

input AwsStepfunctionsListStateMachinesInput {
  maxResults: Int
  nextToken: String
}

type AwsStepfunctionsListStateMachinesOutput {
  stateMachines: [AwsStepfunctionsListStateMachinesOutputStateMachines]!
  nextToken: String
}

type AwsStepfunctionsListStateMachinesOutputStateMachines {
  stateMachineArn: String!
  name: String!
  creationDate: Date!
}

input AwsStepfunctionsSendTaskFailureInput {
  taskToken: String!
  error: String
  cause: String
}

input AwsStepfunctionsSendTaskHeartbeatInput {
  taskToken: String!
}

input AwsStepfunctionsSendTaskSuccessInput {
  taskToken: String!
  output: String!
}

input AwsStepfunctionsStartExecutionInput {
  stateMachineArn: String!
  name: String
  input: String
}

type AwsStepfunctionsStartExecutionOutput {
  executionArn: String!
  startDate: Date!
}

input AwsStepfunctionsStopExecutionInput {
  executionArn: String!
  error: String
  cause: String
}

type AwsStepfunctionsStopExecutionOutput {
  stopDate: Date!
}

input AwsStepfunctionsUpdateStateMachineInput {
  stateMachineArn: String!
  definition: String
  roleArn: String
}

type AwsStepfunctionsUpdateStateMachineOutput {
  updateDate: Date!
}

# AWS Storage Gateway (2013-06-30)
type AwsStoragegateway {
  # storagegateway.ActivateGateway
  ActivateGateway(input: AwsStoragegatewayActivateGatewayInput!): AwsStoragegatewayActivateGatewayOutput

  # storagegateway.AddCache
  AddCache(input: AwsStoragegatewayAddCacheInput!): AwsStoragegatewayAddCacheOutput

  # storagegateway.AddTagsToResource
  AddTagsToResource(input: AwsStoragegatewayAddTagsToResourceInput!): AwsStoragegatewayAddTagsToResourceOutput

  # storagegateway.AddUploadBuffer
  AddUploadBuffer(input: AwsStoragegatewayAddUploadBufferInput!): AwsStoragegatewayAddUploadBufferOutput

  # storagegateway.AddWorkingStorage
  AddWorkingStorage(input: AwsStoragegatewayAddWorkingStorageInput!): AwsStoragegatewayAddWorkingStorageOutput

  # storagegateway.CancelArchival
  CancelArchival(input: AwsStoragegatewayCancelArchivalInput!): AwsStoragegatewayCancelArchivalOutput

  # storagegateway.CancelRetrieval
  CancelRetrieval(input: AwsStoragegatewayCancelRetrievalInput!): AwsStoragegatewayCancelRetrievalOutput

  # storagegateway.CreateCachediSCSIVolume
  CreateCachediSCSIVolume(input: AwsStoragegatewayCreateCachediSCSIVolumeInput!): AwsStoragegatewayCreateCachediSCSIVolumeOutput

  # storagegateway.CreateNFSFileShare
  CreateNFSFileShare(input: AwsStoragegatewayCreateNFSFileShareInput!): AwsStoragegatewayCreateNFSFileShareOutput

  # storagegateway.CreateSnapshot
  CreateSnapshot(input: AwsStoragegatewayCreateSnapshotInput!): AwsStoragegatewayCreateSnapshotOutput

  # storagegateway.CreateSnapshotFromVolumeRecoveryPoint
  CreateSnapshotFromVolumeRecoveryPoint(input: AwsStoragegatewayCreateSnapshotFromVolumeRecoveryPointInput!): AwsStoragegatewayCreateSnapshotFromVolumeRecoveryPointOutput

  # storagegateway.CreateStorediSCSIVolume
  CreateStorediSCSIVolume(input: AwsStoragegatewayCreateStorediSCSIVolumeInput!): AwsStoragegatewayCreateStorediSCSIVolumeOutput

  # storagegateway.CreateTapeWithBarcode
  CreateTapeWithBarcode(input: AwsStoragegatewayCreateTapeWithBarcodeInput!): AwsStoragegatewayCreateTapeWithBarcodeOutput

  # storagegateway.CreateTapes
  CreateTapes(input: AwsStoragegatewayCreateTapesInput!): AwsStoragegatewayCreateTapesOutput

  # storagegateway.DeleteBandwidthRateLimit
  DeleteBandwidthRateLimit(input: AwsStoragegatewayDeleteBandwidthRateLimitInput!): AwsStoragegatewayDeleteBandwidthRateLimitOutput

  # storagegateway.DeleteChapCredentials
  DeleteChapCredentials(input: AwsStoragegatewayDeleteChapCredentialsInput!): AwsStoragegatewayDeleteChapCredentialsOutput

  # storagegateway.DeleteFileShare
  DeleteFileShare(input: AwsStoragegatewayDeleteFileShareInput!): AwsStoragegatewayDeleteFileShareOutput

  # storagegateway.DeleteGateway
  DeleteGateway(input: AwsStoragegatewayDeleteGatewayInput!): AwsStoragegatewayDeleteGatewayOutput

  # storagegateway.DeleteSnapshotSchedule
  DeleteSnapshotSchedule(input: AwsStoragegatewayDeleteSnapshotScheduleInput!): AwsStoragegatewayDeleteSnapshotScheduleOutput

  # storagegateway.DeleteTape
  DeleteTape(input: AwsStoragegatewayDeleteTapeInput!): AwsStoragegatewayDeleteTapeOutput

  # storagegateway.DeleteTapeArchive
  DeleteTapeArchive(input: AwsStoragegatewayDeleteTapeArchiveInput!): AwsStoragegatewayDeleteTapeArchiveOutput

  # storagegateway.DeleteVolume
  DeleteVolume(input: AwsStoragegatewayDeleteVolumeInput!): AwsStoragegatewayDeleteVolumeOutput

  # storagegateway.DescribeBandwidthRateLimit
  DescribeBandwidthRateLimit(input: AwsStoragegatewayDescribeBandwidthRateLimitInput!): AwsStoragegatewayDescribeBandwidthRateLimitOutput

  # storagegateway.DescribeCache
  DescribeCache(input: AwsStoragegatewayDescribeCacheInput!): AwsStoragegatewayDescribeCacheOutput

  # storagegateway.DescribeCachediSCSIVolumes
  DescribeCachediSCSIVolumes(input: AwsStoragegatewayDescribeCachediSCSIVolumesInput!): AwsStoragegatewayDescribeCachediSCSIVolumesOutput

  # storagegateway.DescribeChapCredentials
  DescribeChapCredentials(input: AwsStoragegatewayDescribeChapCredentialsInput!): AwsStoragegatewayDescribeChapCredentialsOutput

  # storagegateway.DescribeGatewayInformation
  DescribeGatewayInformation(input: AwsStoragegatewayDescribeGatewayInformationInput!): AwsStoragegatewayDescribeGatewayInformationOutput

  # storagegateway.DescribeMaintenanceStartTime
  DescribeMaintenanceStartTime(input: AwsStoragegatewayDescribeMaintenanceStartTimeInput!): AwsStoragegatewayDescribeMaintenanceStartTimeOutput

  # storagegateway.DescribeNFSFileShares
  DescribeNFSFileShares(input: AwsStoragegatewayDescribeNFSFileSharesInput!): AwsStoragegatewayDescribeNFSFileSharesOutput

  # storagegateway.DescribeSnapshotSchedule
  DescribeSnapshotSchedule(input: AwsStoragegatewayDescribeSnapshotScheduleInput!): AwsStoragegatewayDescribeSnapshotScheduleOutput

  # storagegateway.DescribeStorediSCSIVolumes
  DescribeStorediSCSIVolumes(input: AwsStoragegatewayDescribeStorediSCSIVolumesInput!): AwsStoragegatewayDescribeStorediSCSIVolumesOutput

  # storagegateway.DescribeTapeArchives
  DescribeTapeArchives(input: AwsStoragegatewayDescribeTapeArchivesInput): AwsStoragegatewayDescribeTapeArchivesOutput

  # storagegateway.DescribeTapeRecoveryPoints
  DescribeTapeRecoveryPoints(input: AwsStoragegatewayDescribeTapeRecoveryPointsInput!): AwsStoragegatewayDescribeTapeRecoveryPointsOutput

  # storagegateway.DescribeTapes
  DescribeTapes(input: AwsStoragegatewayDescribeTapesInput!): AwsStoragegatewayDescribeTapesOutput

  # storagegateway.DescribeUploadBuffer
  DescribeUploadBuffer(input: AwsStoragegatewayDescribeUploadBufferInput!): AwsStoragegatewayDescribeUploadBufferOutput

  # storagegateway.DescribeVTLDevices
  DescribeVTLDevices(input: AwsStoragegatewayDescribeVTLDevicesInput!): AwsStoragegatewayDescribeVTLDevicesOutput

  # storagegateway.DescribeWorkingStorage
  DescribeWorkingStorage(input: AwsStoragegatewayDescribeWorkingStorageInput!): AwsStoragegatewayDescribeWorkingStorageOutput

  # storagegateway.DisableGateway
  DisableGateway(input: AwsStoragegatewayDisableGatewayInput!): AwsStoragegatewayDisableGatewayOutput

  # storagegateway.ListFileShares
  ListFileShares(input: AwsStoragegatewayListFileSharesInput): AwsStoragegatewayListFileSharesOutput

  # storagegateway.ListGateways
  ListGateways(input: AwsStoragegatewayListGatewaysInput): AwsStoragegatewayListGatewaysOutput

  # storagegateway.ListLocalDisks
  ListLocalDisks(input: AwsStoragegatewayListLocalDisksInput!): AwsStoragegatewayListLocalDisksOutput

  # storagegateway.ListTagsForResource
  ListTagsForResource(input: AwsStoragegatewayListTagsForResourceInput!): AwsStoragegatewayListTagsForResourceOutput

  # storagegateway.ListTapes
  ListTapes(input: AwsStoragegatewayListTapesInput): AwsStoragegatewayListTapesOutput

  # storagegateway.ListVolumeInitiators
  ListVolumeInitiators(input: AwsStoragegatewayListVolumeInitiatorsInput!): AwsStoragegatewayListVolumeInitiatorsOutput

  # storagegateway.ListVolumeRecoveryPoints
  ListVolumeRecoveryPoints(input: AwsStoragegatewayListVolumeRecoveryPointsInput!): AwsStoragegatewayListVolumeRecoveryPointsOutput

  # storagegateway.ListVolumes
  ListVolumes(input: AwsStoragegatewayListVolumesInput): AwsStoragegatewayListVolumesOutput

  # storagegateway.NotifyWhenUploaded
  NotifyWhenUploaded(input: AwsStoragegatewayNotifyWhenUploadedInput!): AwsStoragegatewayNotifyWhenUploadedOutput

  # storagegateway.RefreshCache
  RefreshCache(input: AwsStoragegatewayRefreshCacheInput!): AwsStoragegatewayRefreshCacheOutput

  # storagegateway.RemoveTagsFromResource
  RemoveTagsFromResource(input: AwsStoragegatewayRemoveTagsFromResourceInput!): AwsStoragegatewayRemoveTagsFromResourceOutput

  # storagegateway.ResetCache
  ResetCache(input: AwsStoragegatewayResetCacheInput!): AwsStoragegatewayResetCacheOutput

  # storagegateway.RetrieveTapeArchive
  RetrieveTapeArchive(input: AwsStoragegatewayRetrieveTapeArchiveInput!): AwsStoragegatewayRetrieveTapeArchiveOutput

  # storagegateway.RetrieveTapeRecoveryPoint
  RetrieveTapeRecoveryPoint(input: AwsStoragegatewayRetrieveTapeRecoveryPointInput!): AwsStoragegatewayRetrieveTapeRecoveryPointOutput

  # storagegateway.SetLocalConsolePassword
  SetLocalConsolePassword(input: AwsStoragegatewaySetLocalConsolePasswordInput!): AwsStoragegatewaySetLocalConsolePasswordOutput

  # storagegateway.ShutdownGateway
  ShutdownGateway(input: AwsStoragegatewayShutdownGatewayInput!): AwsStoragegatewayShutdownGatewayOutput

  # storagegateway.StartGateway
  StartGateway(input: AwsStoragegatewayStartGatewayInput!): AwsStoragegatewayStartGatewayOutput

  # storagegateway.UpdateBandwidthRateLimit
  UpdateBandwidthRateLimit(input: AwsStoragegatewayUpdateBandwidthRateLimitInput!): AwsStoragegatewayUpdateBandwidthRateLimitOutput

  # storagegateway.UpdateChapCredentials
  UpdateChapCredentials(input: AwsStoragegatewayUpdateChapCredentialsInput!): AwsStoragegatewayUpdateChapCredentialsOutput

  # storagegateway.UpdateGatewayInformation
  UpdateGatewayInformation(input: AwsStoragegatewayUpdateGatewayInformationInput!): AwsStoragegatewayUpdateGatewayInformationOutput

  # storagegateway.UpdateGatewaySoftwareNow
  UpdateGatewaySoftwareNow(input: AwsStoragegatewayUpdateGatewaySoftwareNowInput!): AwsStoragegatewayUpdateGatewaySoftwareNowOutput

  # storagegateway.UpdateMaintenanceStartTime
  UpdateMaintenanceStartTime(input: AwsStoragegatewayUpdateMaintenanceStartTimeInput!): AwsStoragegatewayUpdateMaintenanceStartTimeOutput

  # storagegateway.UpdateNFSFileShare
  UpdateNFSFileShare(input: AwsStoragegatewayUpdateNFSFileShareInput!): AwsStoragegatewayUpdateNFSFileShareOutput

  # storagegateway.UpdateSnapshotSchedule
  UpdateSnapshotSchedule(input: AwsStoragegatewayUpdateSnapshotScheduleInput!): AwsStoragegatewayUpdateSnapshotScheduleOutput

  # storagegateway.UpdateVTLDeviceType
  UpdateVTLDeviceType(input: AwsStoragegatewayUpdateVTLDeviceTypeInput!): AwsStoragegatewayUpdateVTLDeviceTypeOutput
}

input AwsStoragegatewayActivateGatewayInput {
  ActivationKey: String!
  GatewayName: String!
  GatewayTimezone: String!
  GatewayRegion: String!
  GatewayType: String
  TapeDriveType: String
  MediumChangerType: String
}

type AwsStoragegatewayActivateGatewayOutput {
  GatewayARN: String
}

input AwsStoragegatewayAddCacheInput {
  GatewayARN: String!
  DiskIds: [String]!
}

type AwsStoragegatewayAddCacheOutput {
  GatewayARN: String
}

input AwsStoragegatewayAddTagsToResourceInput {
  ResourceARN: String!
  Tags: [AwsStoragegatewayShInput]!
}

type AwsStoragegatewayAddTagsToResourceOutput {
  ResourceARN: String
}

input AwsStoragegatewayAddUploadBufferInput {
  GatewayARN: String!
  DiskIds: [String]!
}

type AwsStoragegatewayAddUploadBufferOutput {
  GatewayARN: String
}

input AwsStoragegatewayAddWorkingStorageInput {
  GatewayARN: String!
  DiskIds: [String]!
}

type AwsStoragegatewayAddWorkingStorageOutput {
  GatewayARN: String
}

input AwsStoragegatewayCancelArchivalInput {
  GatewayARN: String!
  TapeARN: String!
}

type AwsStoragegatewayCancelArchivalOutput {
  TapeARN: String
}

input AwsStoragegatewayCancelRetrievalInput {
  GatewayARN: String!
  TapeARN: String!
}

type AwsStoragegatewayCancelRetrievalOutput {
  TapeARN: String
}

input AwsStoragegatewayCreateCachediSCSIVolumeInput {
  GatewayARN: String!
  VolumeSizeInBytes: JSON!
  SnapshotId: String
  TargetName: String!
  SourceVolumeARN: String
  NetworkInterfaceId: String!
  ClientToken: String!
}

type AwsStoragegatewayCreateCachediSCSIVolumeOutput {
  VolumeARN: String
  TargetARN: String
}

input AwsStoragegatewayCreateNFSFileShareInput {
  ClientToken: String!
  NFSFileShareDefaults: AwsStoragegatewayS15Input
  GatewayARN: String!
  KMSEncrypted: Boolean
  KMSKey: String
  Role: String!
  LocationARN: String!
  DefaultStorageClass: String
  ClientList: [String]
  Squash: String
  ReadOnly: Boolean
  GuessMIMETypeEnabled: Boolean
}

type AwsStoragegatewayCreateNFSFileShareOutput {
  FileShareARN: String
}

input AwsStoragegatewayCreateSnapshotFromVolumeRecoveryPointInput {
  VolumeARN: String!
  SnapshotDescription: String!
}

type AwsStoragegatewayCreateSnapshotFromVolumeRecoveryPointOutput {
  SnapshotId: String
  VolumeARN: String
  VolumeRecoveryPointTime: String
}

input AwsStoragegatewayCreateSnapshotInput {
  VolumeARN: String!
  SnapshotDescription: String!
}

type AwsStoragegatewayCreateSnapshotOutput {
  VolumeARN: String
  SnapshotId: String
}

input AwsStoragegatewayCreateStorediSCSIVolumeInput {
  GatewayARN: String!
  DiskId: String!
  SnapshotId: String
  PreserveExistingData: Boolean!
  TargetName: String!
  NetworkInterfaceId: String!
}

type AwsStoragegatewayCreateStorediSCSIVolumeOutput {
  VolumeARN: String
  VolumeSizeInBytes: JSON
  TargetARN: String
}

input AwsStoragegatewayCreateTapesInput {
  GatewayARN: String!
  TapeSizeInBytes: JSON!
  ClientToken: String!
  NumTapesToCreate: Int!
  TapeBarcodePrefix: String!
}

type AwsStoragegatewayCreateTapesOutput {
  TapeARNs: [String]
}

input AwsStoragegatewayCreateTapeWithBarcodeInput {
  GatewayARN: String!
  TapeSizeInBytes: JSON!
  TapeBarcode: String!
}

type AwsStoragegatewayCreateTapeWithBarcodeOutput {
  TapeARN: String
}

input AwsStoragegatewayDeleteBandwidthRateLimitInput {
  GatewayARN: String!
  BandwidthType: String!
}

type AwsStoragegatewayDeleteBandwidthRateLimitOutput {
  GatewayARN: String
}

input AwsStoragegatewayDeleteChapCredentialsInput {
  TargetARN: String!
  InitiatorName: String!
}

type AwsStoragegatewayDeleteChapCredentialsOutput {
  TargetARN: String
  InitiatorName: String
}

input AwsStoragegatewayDeleteFileShareInput {
  FileShareARN: String!
  ForceDelete: Boolean
}

type AwsStoragegatewayDeleteFileShareOutput {
  FileShareARN: String
}

input AwsStoragegatewayDeleteGatewayInput {
  GatewayARN: String!
}

type AwsStoragegatewayDeleteGatewayOutput {
  GatewayARN: String
}

input AwsStoragegatewayDeleteSnapshotScheduleInput {
  VolumeARN: String!
}

type AwsStoragegatewayDeleteSnapshotScheduleOutput {
  VolumeARN: String
}

input AwsStoragegatewayDeleteTapeArchiveInput {
  TapeARN: String!
}

type AwsStoragegatewayDeleteTapeArchiveOutput {
  TapeARN: String
}

input AwsStoragegatewayDeleteTapeInput {
  GatewayARN: String!
  TapeARN: String!
}

type AwsStoragegatewayDeleteTapeOutput {
  TapeARN: String
}

input AwsStoragegatewayDeleteVolumeInput {
  VolumeARN: String!
}

type AwsStoragegatewayDeleteVolumeOutput {
  VolumeARN: String
}

input AwsStoragegatewayDescribeBandwidthRateLimitInput {
  GatewayARN: String!
}

type AwsStoragegatewayDescribeBandwidthRateLimitOutput {
  GatewayARN: String
  AverageUploadRateLimitInBitsPerSec: JSON
  AverageDownloadRateLimitInBitsPerSec: JSON
}

input AwsStoragegatewayDescribeCachediSCSIVolumesInput {
  VolumeARNs: [String]!
}

type AwsStoragegatewayDescribeCachediSCSIVolumesOutput {
  CachediSCSIVolumes: [AwsStoragegatewayDescribeCachediSCSIVolumesOutputCachediSCSIVolumes]
}

type AwsStoragegatewayDescribeCachediSCSIVolumesOutputCachediSCSIVolumes {
  VolumeARN: String
  VolumeId: String
  VolumeType: String
  VolumeStatus: String
  VolumeSizeInBytes: JSON
  VolumeProgress: JSON
  SourceSnapshotId: String
  VolumeiSCSIAttributes: AwsStoragegatewayS2y
  CreatedDate: Date
  VolumeUsedInBytes: JSON
}

input AwsStoragegatewayDescribeCacheInput {
  GatewayARN: String!
}

type AwsStoragegatewayDescribeCacheOutput {
  GatewayARN: String
  DiskIds: [String]
  CacheAllocatedInBytes: JSON
  CacheUsedPercentage: JSON
  CacheDirtyPercentage: JSON
  CacheHitPercentage: JSON
  CacheMissPercentage: JSON
}

input AwsStoragegatewayDescribeChapCredentialsInput {
  TargetARN: String!
}

type AwsStoragegatewayDescribeChapCredentialsOutput {
  ChapCredentials: [AwsStoragegatewayDescribeChapCredentialsOutputChapCredentials]
}

type AwsStoragegatewayDescribeChapCredentialsOutputChapCredentials {
  TargetARN: String
  SecretToAuthenticateInitiator: String
  InitiatorName: String
  SecretToAuthenticateTarget: String
}

input AwsStoragegatewayDescribeGatewayInformationInput {
  GatewayARN: String!
}

type AwsStoragegatewayDescribeGatewayInformationOutput {
  GatewayARN: String
  GatewayId: String
  GatewayName: String
  GatewayTimezone: String
  GatewayState: String
  GatewayNetworkInterfaces: [AwsStoragegatewayDescribeGatewayInformationOutputGatewayNetworkInterfaces]
  GatewayType: String
  NextUpdateAvailabilityDate: String
  LastSoftwareUpdate: String
}

type AwsStoragegatewayDescribeGatewayInformationOutputGatewayNetworkInterfaces {
  Ipv4Address: String
  MacAddress: String
  Ipv6Address: String
}

input AwsStoragegatewayDescribeMaintenanceStartTimeInput {
  GatewayARN: String!
}

type AwsStoragegatewayDescribeMaintenanceStartTimeOutput {
  GatewayARN: String
  HourOfDay: Int
  MinuteOfHour: Int
  DayOfWeek: Int
  Timezone: String
}

input AwsStoragegatewayDescribeNFSFileSharesInput {
  FileShareARNList: [String]!
}

type AwsStoragegatewayDescribeNFSFileSharesOutput {
  NFSFileShareInfoList: [AwsStoragegatewayDescribeNFSFileSharesOutputNFSFileShareInfoList]
}

type AwsStoragegatewayDescribeNFSFileSharesOutputNFSFileShareInfoList {
  NFSFileShareDefaults: AwsStoragegatewayS15
  FileShareARN: String
  FileShareId: String
  FileShareStatus: String
  GatewayARN: String
  KMSEncrypted: Boolean
  KMSKey: String
  Path: String
  Role: String
  LocationARN: String
  DefaultStorageClass: String
  ClientList: [String]
  Squash: String
  ReadOnly: Boolean
  GuessMIMETypeEnabled: Boolean
}

input AwsStoragegatewayDescribeSnapshotScheduleInput {
  VolumeARN: String!
}

type AwsStoragegatewayDescribeSnapshotScheduleOutput {
  VolumeARN: String
  StartAt: Int
  RecurrenceInHours: Int
  Description: String
  Timezone: String
}

input AwsStoragegatewayDescribeStorediSCSIVolumesInput {
  VolumeARNs: [String]!
}

type AwsStoragegatewayDescribeStorediSCSIVolumesOutput {
  StorediSCSIVolumes: [AwsStoragegatewayDescribeStorediSCSIVolumesOutputStorediSCSIVolumes]
}

type AwsStoragegatewayDescribeStorediSCSIVolumesOutputStorediSCSIVolumes {
  VolumeARN: String
  VolumeId: String
  VolumeType: String
  VolumeStatus: String
  VolumeSizeInBytes: JSON
  VolumeProgress: JSON
  VolumeDiskId: String
  SourceSnapshotId: String
  PreservedExistingData: Boolean
  VolumeiSCSIAttributes: AwsStoragegatewayS2y
  CreatedDate: Date
  VolumeUsedInBytes: JSON
}

input AwsStoragegatewayDescribeTapeArchivesInput {
  TapeARNs: [String]
  Marker: String
  Limit: Int
}

type AwsStoragegatewayDescribeTapeArchivesOutput {
  TapeArchives: [AwsStoragegatewayDescribeTapeArchivesOutputTapeArchives]
  Marker: String
}

type AwsStoragegatewayDescribeTapeArchivesOutputTapeArchives {
  TapeARN: String
  TapeBarcode: String
  TapeCreatedDate: Date
  TapeSizeInBytes: JSON
  CompletionTime: Date
  RetrievedTo: String
  TapeStatus: String
  TapeUsedInBytes: JSON
}

input AwsStoragegatewayDescribeTapeRecoveryPointsInput {
  GatewayARN: String!
  Marker: String
  Limit: Int
}

type AwsStoragegatewayDescribeTapeRecoveryPointsOutput {
  GatewayARN: String
  TapeRecoveryPointInfos: [AwsStoragegatewayDescribeTapeRecoveryPointsOutputTapeRecoveryPointInfos]
  Marker: String
}

type AwsStoragegatewayDescribeTapeRecoveryPointsOutputTapeRecoveryPointInfos {
  TapeARN: String
  TapeRecoveryPointTime: Date
  TapeSizeInBytes: JSON
  TapeStatus: String
}

input AwsStoragegatewayDescribeTapesInput {
  GatewayARN: String!
  TapeARNs: [String]
  Marker: String
  Limit: Int
}

type AwsStoragegatewayDescribeTapesOutput {
  Tapes: [AwsStoragegatewayDescribeTapesOutputTapes]
  Marker: String
}

type AwsStoragegatewayDescribeTapesOutputTapes {
  TapeARN: String
  TapeBarcode: String
  TapeCreatedDate: Date
  TapeSizeInBytes: JSON
  TapeStatus: String
  VTLDevice: String
  Progress: JSON
  TapeUsedInBytes: JSON
}

input AwsStoragegatewayDescribeUploadBufferInput {
  GatewayARN: String!
}

type AwsStoragegatewayDescribeUploadBufferOutput {
  GatewayARN: String
  DiskIds: [String]
  UploadBufferUsedInBytes: JSON
  UploadBufferAllocatedInBytes: JSON
}

input AwsStoragegatewayDescribeVTLDevicesInput {
  GatewayARN: String!
  VTLDeviceARNs: [String]
  Marker: String
  Limit: Int
}

type AwsStoragegatewayDescribeVTLDevicesOutput {
  GatewayARN: String
  VTLDevices: [AwsStoragegatewayDescribeVTLDevicesOutputVTLDevices]
  Marker: String
}

type AwsStoragegatewayDescribeVTLDevicesOutputVTLDevices {
  VTLDeviceARN: String
  VTLDeviceType: String
  VTLDeviceVendor: String
  VTLDeviceProductIdentifier: String
  DeviceiSCSIAttributes: AwsStoragegatewayDescribeVTLDevicesOutputVTLDevicesDeviceiSCSIAttributes
}

type AwsStoragegatewayDescribeVTLDevicesOutputVTLDevicesDeviceiSCSIAttributes {
  TargetARN: String
  NetworkInterfaceId: String
  NetworkInterfacePort: Int
  ChapEnabled: Boolean
}

input AwsStoragegatewayDescribeWorkingStorageInput {
  GatewayARN: String!
}

type AwsStoragegatewayDescribeWorkingStorageOutput {
  GatewayARN: String
  DiskIds: [String]
  WorkingStorageUsedInBytes: JSON
  WorkingStorageAllocatedInBytes: JSON
}

input AwsStoragegatewayDisableGatewayInput {
  GatewayARN: String!
}

type AwsStoragegatewayDisableGatewayOutput {
  GatewayARN: String
}

input AwsStoragegatewayListFileSharesInput {
  GatewayARN: String
  Limit: Int
  Marker: String
}

type AwsStoragegatewayListFileSharesOutput {
  Marker: String
  NextMarker: String
  FileShareInfoList: [AwsStoragegatewayListFileSharesOutputFileShareInfoList]
}

type AwsStoragegatewayListFileSharesOutputFileShareInfoList {
  FileShareARN: String
  FileShareId: String
  FileShareStatus: String
  GatewayARN: String
}

input AwsStoragegatewayListGatewaysInput {
  Marker: String
  Limit: Int
}

type AwsStoragegatewayListGatewaysOutput {
  Gateways: [AwsStoragegatewayListGatewaysOutputGateways]
  Marker: String
}

type AwsStoragegatewayListGatewaysOutputGateways {
  GatewayId: String
  GatewayARN: String
  GatewayType: String
  GatewayOperationalState: String
  GatewayName: String
}

input AwsStoragegatewayListLocalDisksInput {
  GatewayARN: String!
}

type AwsStoragegatewayListLocalDisksOutput {
  GatewayARN: String
  Disks: [AwsStoragegatewayListLocalDisksOutputDisks]
}

type AwsStoragegatewayListLocalDisksOutputDisks {
  DiskId: String
  DiskPath: String
  DiskNode: String
  DiskStatus: String
  DiskSizeInBytes: JSON
  DiskAllocationType: String
  DiskAllocationResource: String
}

input AwsStoragegatewayListTagsForResourceInput {
  ResourceARN: String!
  Marker: String
  Limit: Int
}

type AwsStoragegatewayListTagsForResourceOutput {
  ResourceARN: String
  Marker: String
  Tags: [AwsStoragegatewaySh]
}

input AwsStoragegatewayListTapesInput {
  TapeARNs: [String]
  Marker: String
  Limit: Int
}

type AwsStoragegatewayListTapesOutput {
  TapeInfos: [AwsStoragegatewayListTapesOutputTapeInfos]
  Marker: String
}

type AwsStoragegatewayListTapesOutputTapeInfos {
  TapeARN: String
  TapeBarcode: String
  TapeSizeInBytes: JSON
  TapeStatus: String
  GatewayARN: String
}

input AwsStoragegatewayListVolumeInitiatorsInput {
  VolumeARN: String!
}

type AwsStoragegatewayListVolumeInitiatorsOutput {
  Initiators: [String]
}

input AwsStoragegatewayListVolumeRecoveryPointsInput {
  GatewayARN: String!
}

type AwsStoragegatewayListVolumeRecoveryPointsOutput {
  GatewayARN: String
  VolumeRecoveryPointInfos: [AwsStoragegatewayListVolumeRecoveryPointsOutputVolumeRecoveryPointInfos]
}

type AwsStoragegatewayListVolumeRecoveryPointsOutputVolumeRecoveryPointInfos {
  VolumeARN: String
  VolumeSizeInBytes: JSON
  VolumeUsageInBytes: JSON
  VolumeRecoveryPointTime: String
}

input AwsStoragegatewayListVolumesInput {
  GatewayARN: String
  Marker: String
  Limit: Int
}

type AwsStoragegatewayListVolumesOutput {
  GatewayARN: String
  Marker: String
  VolumeInfos: [AwsStoragegatewayListVolumesOutputVolumeInfos]
}

type AwsStoragegatewayListVolumesOutputVolumeInfos {
  VolumeARN: String
  VolumeId: String
  GatewayARN: String
  GatewayId: String
  VolumeType: String
  VolumeSizeInBytes: JSON
}

input AwsStoragegatewayNotifyWhenUploadedInput {
  FileShareARN: String!
}

type AwsStoragegatewayNotifyWhenUploadedOutput {
  FileShareARN: String
  NotificationId: String
}

input AwsStoragegatewayRefreshCacheInput {
  FileShareARN: String!
}

type AwsStoragegatewayRefreshCacheOutput {
  FileShareARN: String
}

input AwsStoragegatewayRemoveTagsFromResourceInput {
  ResourceARN: String!
  TagKeys: [String]!
}

type AwsStoragegatewayRemoveTagsFromResourceOutput {
  ResourceARN: String
}

input AwsStoragegatewayResetCacheInput {
  GatewayARN: String!
}

type AwsStoragegatewayResetCacheOutput {
  GatewayARN: String
}

input AwsStoragegatewayRetrieveTapeArchiveInput {
  TapeARN: String!
  GatewayARN: String!
}

type AwsStoragegatewayRetrieveTapeArchiveOutput {
  TapeARN: String
}

input AwsStoragegatewayRetrieveTapeRecoveryPointInput {
  TapeARN: String!
  GatewayARN: String!
}

type AwsStoragegatewayRetrieveTapeRecoveryPointOutput {
  TapeARN: String
}

type AwsStoragegatewayS15 {
  FileMode: String
  DirectoryMode: String
  GroupId: JSON
  OwnerId: JSON
}

input AwsStoragegatewayS15Input {
  FileMode: String
  DirectoryMode: String
  GroupId: JSON
  OwnerId: JSON
}

type AwsStoragegatewayS2y {
  TargetARN: String
  NetworkInterfaceId: String
  NetworkInterfacePort: Int
  LunNumber: Int
  ChapEnabled: Boolean
}

input AwsStoragegatewaySetLocalConsolePasswordInput {
  GatewayARN: String!
  LocalConsolePassword: String!
}

type AwsStoragegatewaySetLocalConsolePasswordOutput {
  GatewayARN: String
}

type AwsStoragegatewaySh {
  Key: String!
  Value: String!
}

input AwsStoragegatewayShInput {
  Key: String!
  Value: String!
}

input AwsStoragegatewayShutdownGatewayInput {
  GatewayARN: String!
}

type AwsStoragegatewayShutdownGatewayOutput {
  GatewayARN: String
}

input AwsStoragegatewayStartGatewayInput {
  GatewayARN: String!
}

type AwsStoragegatewayStartGatewayOutput {
  GatewayARN: String
}

input AwsStoragegatewayUpdateBandwidthRateLimitInput {
  GatewayARN: String!
  AverageUploadRateLimitInBitsPerSec: JSON
  AverageDownloadRateLimitInBitsPerSec: JSON
}

type AwsStoragegatewayUpdateBandwidthRateLimitOutput {
  GatewayARN: String
}

input AwsStoragegatewayUpdateChapCredentialsInput {
  TargetARN: String!
  SecretToAuthenticateInitiator: String!
  InitiatorName: String!
  SecretToAuthenticateTarget: String
}

type AwsStoragegatewayUpdateChapCredentialsOutput {
  TargetARN: String
  InitiatorName: String
}

input AwsStoragegatewayUpdateGatewayInformationInput {
  GatewayARN: String!
  GatewayName: String
  GatewayTimezone: String
}

type AwsStoragegatewayUpdateGatewayInformationOutput {
  GatewayARN: String
  GatewayName: String
}

input AwsStoragegatewayUpdateGatewaySoftwareNowInput {
  GatewayARN: String!
}

type AwsStoragegatewayUpdateGatewaySoftwareNowOutput {
  GatewayARN: String
}

input AwsStoragegatewayUpdateMaintenanceStartTimeInput {
  GatewayARN: String!
  HourOfDay: Int!
  MinuteOfHour: Int!
  DayOfWeek: Int!
}

type AwsStoragegatewayUpdateMaintenanceStartTimeOutput {
  GatewayARN: String
}

input AwsStoragegatewayUpdateNFSFileShareInput {
  FileShareARN: String!
  KMSEncrypted: Boolean
  KMSKey: String
  NFSFileShareDefaults: AwsStoragegatewayS15Input
  DefaultStorageClass: String
  ClientList: [String]
  Squash: String
  ReadOnly: Boolean
  GuessMIMETypeEnabled: Boolean
}

type AwsStoragegatewayUpdateNFSFileShareOutput {
  FileShareARN: String
}

input AwsStoragegatewayUpdateSnapshotScheduleInput {
  VolumeARN: String!
  StartAt: Int!
  RecurrenceInHours: Int!
  Description: String
}

type AwsStoragegatewayUpdateSnapshotScheduleOutput {
  VolumeARN: String
}

input AwsStoragegatewayUpdateVTLDeviceTypeInput {
  VTLDeviceARN: String!
  DeviceType: String!
}

type AwsStoragegatewayUpdateVTLDeviceTypeOutput {
  VTLDeviceARN: String
}

# AWS Security Token Service (2011-06-15)
type AwsSts {
  # sts.AssumeRole
  AssumeRole(input: AwsStsAssumeRoleInput!): AwsStsAssumeRoleOutput

  # sts.AssumeRoleWithSAML
  AssumeRoleWithSAML(input: AwsStsAssumeRoleWithSAMLInput!): AwsStsAssumeRoleWithSAMLOutput

  # sts.AssumeRoleWithWebIdentity
  AssumeRoleWithWebIdentity(input: AwsStsAssumeRoleWithWebIdentityInput!): AwsStsAssumeRoleWithWebIdentityOutput

  # sts.DecodeAuthorizationMessage
  DecodeAuthorizationMessage(input: AwsStsDecodeAuthorizationMessageInput!): AwsStsDecodeAuthorizationMessageOutput

  # sts.GetCallerIdentity
  GetCallerIdentity(input: JSON): AwsStsGetCallerIdentityOutput

  # sts.GetFederationToken
  GetFederationToken(input: AwsStsGetFederationTokenInput!): AwsStsGetFederationTokenOutput

  # sts.GetSessionToken
  GetSessionToken(input: AwsStsGetSessionTokenInput): AwsStsGetSessionTokenOutput
}

input AwsStsAssumeRoleInput {
  RoleArn: String!
  RoleSessionName: String!
  Policy: String
  DurationSeconds: Int
  ExternalId: String
  SerialNumber: String
  TokenCode: String
}

type AwsStsAssumeRoleOutput {
  Credentials: AwsStsSa
  AssumedRoleUser: AwsStsSf
  PackedPolicySize: Int
}

input AwsStsAssumeRoleWithSAMLInput {
  RoleArn: String!
  PrincipalArn: String!
  SAMLAssertion: String!
  Policy: String
  DurationSeconds: Int
}

type AwsStsAssumeRoleWithSAMLOutput {
  Credentials: AwsStsSa
  AssumedRoleUser: AwsStsSf
  PackedPolicySize: Int
  Subject: String
  SubjectType: String
  Issuer: String
  Audience: String
  NameQualifier: String
}

input AwsStsAssumeRoleWithWebIdentityInput {
  RoleArn: String!
  RoleSessionName: String!
  WebIdentityToken: String!
  ProviderId: String
  Policy: String
  DurationSeconds: Int
}

type AwsStsAssumeRoleWithWebIdentityOutput {
  Credentials: AwsStsSa
  SubjectFromWebIdentityToken: String
  AssumedRoleUser: AwsStsSf
  PackedPolicySize: Int
  Provider: String
  Audience: String
}

input AwsStsDecodeAuthorizationMessageInput {
  EncodedMessage: String!
}

type AwsStsDecodeAuthorizationMessageOutput {
  DecodedMessage: String
}

type AwsStsGetCallerIdentityOutput {
  UserId: String
  Account: String
  Arn: String
}

input AwsStsGetFederationTokenInput {
  Name: String!
  Policy: String
  DurationSeconds: Int
}

type AwsStsGetFederationTokenOutput {
  Credentials: AwsStsSa
  FederatedUser: AwsStsGetFederationTokenOutputFederatedUser
  PackedPolicySize: Int
}

type AwsStsGetFederationTokenOutputFederatedUser {
  FederatedUserId: String!
  Arn: String!
}

input AwsStsGetSessionTokenInput {
  DurationSeconds: Int
  SerialNumber: String
  TokenCode: String
}

type AwsStsGetSessionTokenOutput {
  Credentials: AwsStsSa
}

type AwsStsSa {
  AccessKeyId: String!
  SecretAccessKey: String!
  SessionToken: String!
  Expiration: Date!
}

type AwsStsSf {
  AssumedRoleId: String!
  Arn: String!
}

# AWS Support (2013-04-15)
type AwsSupport {
  # support.AddAttachmentsToSet
  AddAttachmentsToSet(input: AwsSupportAddAttachmentsToSetInput!): AwsSupportAddAttachmentsToSetOutput

  # support.AddCommunicationToCase
  AddCommunicationToCase(input: AwsSupportAddCommunicationToCaseInput!): AwsSupportAddCommunicationToCaseOutput

  # support.CreateCase
  CreateCase(input: AwsSupportCreateCaseInput!): AwsSupportCreateCaseOutput

  # support.DescribeAttachment
  DescribeAttachment(input: AwsSupportDescribeAttachmentInput!): AwsSupportDescribeAttachmentOutput

  # support.DescribeCases
  DescribeCases(input: AwsSupportDescribeCasesInput): AwsSupportDescribeCasesOutput

  # support.DescribeCommunications
  DescribeCommunications(input: AwsSupportDescribeCommunicationsInput!): AwsSupportDescribeCommunicationsOutput

  # support.DescribeServices
  DescribeServices(input: AwsSupportDescribeServicesInput): AwsSupportDescribeServicesOutput

  # support.DescribeSeverityLevels
  DescribeSeverityLevels(input: AwsSupportDescribeSeverityLevelsInput): AwsSupportDescribeSeverityLevelsOutput

  # support.DescribeTrustedAdvisorCheckRefreshStatuses
  DescribeTrustedAdvisorCheckRefreshStatuses(input: AwsSupportDescribeTrustedAdvisorCheckRefreshStatusesInput!): AwsSupportDescribeTrustedAdvisorCheckRefreshStatusesOutput

  # support.DescribeTrustedAdvisorCheckResult
  DescribeTrustedAdvisorCheckResult(input: AwsSupportDescribeTrustedAdvisorCheckResultInput!): AwsSupportDescribeTrustedAdvisorCheckResultOutput

  # support.DescribeTrustedAdvisorCheckSummaries
  DescribeTrustedAdvisorCheckSummaries(input: AwsSupportDescribeTrustedAdvisorCheckSummariesInput!): AwsSupportDescribeTrustedAdvisorCheckSummariesOutput

  # support.DescribeTrustedAdvisorChecks
  DescribeTrustedAdvisorChecks(input: AwsSupportDescribeTrustedAdvisorChecksInput!): AwsSupportDescribeTrustedAdvisorChecksOutput

  # support.RefreshTrustedAdvisorCheck
  RefreshTrustedAdvisorCheck(input: AwsSupportRefreshTrustedAdvisorCheckInput!): AwsSupportRefreshTrustedAdvisorCheckOutput

  # support.ResolveCase
  ResolveCase(input: AwsSupportResolveCaseInput): AwsSupportResolveCaseOutput
}

input AwsSupportAddAttachmentsToSetInput {
  attachmentSetId: String
  attachments: [AwsSupportS4Input]!
}

type AwsSupportAddAttachmentsToSetOutput {
  attachmentSetId: String
  expiryTime: String
}

input AwsSupportAddCommunicationToCaseInput {
  caseId: String
  communicationBody: String!
  ccEmailAddresses: [String]
  attachmentSetId: String
}

type AwsSupportAddCommunicationToCaseOutput {
  result: Boolean
}

input AwsSupportCreateCaseInput {
  subject: String!
  serviceCode: String
  severityCode: String
  categoryCode: String
  communicationBody: String!
  ccEmailAddresses: [String]
  language: String
  issueType: String
  attachmentSetId: String
}

type AwsSupportCreateCaseOutput {
  caseId: String
}

input AwsSupportDescribeAttachmentInput {
  attachmentId: String!
}

type AwsSupportDescribeAttachmentOutput {
  attachment: AwsSupportS4
}

input AwsSupportDescribeCasesInput {
  caseIdList: [String]
  displayId: String
  afterTime: String
  beforeTime: String
  includeResolvedCases: Boolean
  nextToken: String
  maxResults: Int
  language: String
  includeCommunications: Boolean
}

type AwsSupportDescribeCasesOutput {
  cases: [AwsSupportDescribeCasesOutputCases]
  nextToken: String
}

type AwsSupportDescribeCasesOutputCases {
  caseId: String
  displayId: String
  subject: String
  status: String
  serviceCode: String
  categoryCode: String
  severityCode: String
  submittedBy: String
  timeCreated: String
  recentCommunications: AwsSupportDescribeCasesOutputCasesRecentCommunications
  ccEmailAddresses: [String]
  language: String
}

type AwsSupportDescribeCasesOutputCasesRecentCommunications {
  communications: [AwsSupportS17]
  nextToken: String
}

input AwsSupportDescribeCommunicationsInput {
  caseId: String!
  beforeTime: String
  afterTime: String
  nextToken: String
  maxResults: Int
}

type AwsSupportDescribeCommunicationsOutput {
  communications: [AwsSupportS17]
  nextToken: String
}

input AwsSupportDescribeServicesInput {
  serviceCodeList: [String]
  language: String
}

type AwsSupportDescribeServicesOutput {
  services: [AwsSupportDescribeServicesOutputServices]
}

type AwsSupportDescribeServicesOutputServices {
  code: String
  name: String
  categories: [AwsSupportDescribeServicesOutputServicesCategories]
}

type AwsSupportDescribeServicesOutputServicesCategories {
  code: String
  name: String
}

input AwsSupportDescribeSeverityLevelsInput {
  language: String
}

type AwsSupportDescribeSeverityLevelsOutput {
  severityLevels: [AwsSupportDescribeSeverityLevelsOutputSeverityLevels]
}

type AwsSupportDescribeSeverityLevelsOutputSeverityLevels {
  code: String
  name: String
}

input AwsSupportDescribeTrustedAdvisorCheckRefreshStatusesInput {
  checkIds: [String]!
}

type AwsSupportDescribeTrustedAdvisorCheckRefreshStatusesOutput {
  statuses: [AwsSupportS1x]!
}

input AwsSupportDescribeTrustedAdvisorCheckResultInput {
  checkId: String!
  language: String
}

type AwsSupportDescribeTrustedAdvisorCheckResultOutput {
  result: AwsSupportDescribeTrustedAdvisorCheckResultOutputResult
}

type AwsSupportDescribeTrustedAdvisorCheckResultOutputResult {
  checkId: String!
  timestamp: String!
  status: String!
  resourcesSummary: AwsSupportS22!
  categorySpecificSummary: AwsSupportS23!
  flaggedResources: [AwsSupportDescribeTrustedAdvisorCheckResultOutputResultFlaggedResources]!
}

type AwsSupportDescribeTrustedAdvisorCheckResultOutputResultFlaggedResources {
  status: String!
  region: String
  resourceId: String!
  isSuppressed: Boolean
  metadata: [String]!
}

input AwsSupportDescribeTrustedAdvisorChecksInput {
  language: String!
}

type AwsSupportDescribeTrustedAdvisorChecksOutput {
  checks: [AwsSupportDescribeTrustedAdvisorChecksOutputChecks]!
}

type AwsSupportDescribeTrustedAdvisorChecksOutputChecks {
  id: String!
  name: String!
  description: String!
  category: String!
  metadata: [String]!
}

input AwsSupportDescribeTrustedAdvisorCheckSummariesInput {
  checkIds: [String]!
}

type AwsSupportDescribeTrustedAdvisorCheckSummariesOutput {
  summaries: [AwsSupportDescribeTrustedAdvisorCheckSummariesOutputSummaries]!
}

type AwsSupportDescribeTrustedAdvisorCheckSummariesOutputSummaries {
  checkId: String!
  timestamp: String!
  status: String!
  hasFlaggedResources: Boolean
  resourcesSummary: AwsSupportS22!
  categorySpecificSummary: AwsSupportS23!
}

input AwsSupportRefreshTrustedAdvisorCheckInput {
  checkId: String!
}

type AwsSupportRefreshTrustedAdvisorCheckOutput {
  status: AwsSupportS1x!
}

input AwsSupportResolveCaseInput {
  caseId: String
}

type AwsSupportResolveCaseOutput {
  initialCaseStatus: String
  finalCaseStatus: String
}

type AwsSupportS17 {
  caseId: String
  body: String
  submittedBy: String
  timeCreated: String
  attachmentSet: [AwsSupportS17AttachmentSet]
}

type AwsSupportS17AttachmentSet {
  attachmentId: String
  fileName: String
}

type AwsSupportS1x {
  checkId: String!
  status: String!
  millisUntilNextRefreshable: JSON!
}

type AwsSupportS22 {
  resourcesProcessed: JSON!
  resourcesFlagged: JSON!
  resourcesIgnored: JSON!
  resourcesSuppressed: JSON!
}

type AwsSupportS23 {
  costOptimizing: AwsSupportS23CostOptimizing
}

type AwsSupportS23CostOptimizing {
  estimatedMonthlySavings: JSON!
  estimatedPercentMonthlySavings: JSON!
}

type AwsSupportS4 {
  fileName: String
  data: JSON
}

input AwsSupportS4Input {
  fileName: String
  data: JSON
}

# Amazon Simple Workflow Service (2012-01-25)
type AwsSwf {
  # swf.CountClosedWorkflowExecutions
  CountClosedWorkflowExecutions(input: AwsSwfCountClosedWorkflowExecutionsInput!): JSON

  # swf.CountOpenWorkflowExecutions
  CountOpenWorkflowExecutions(input: AwsSwfCountOpenWorkflowExecutionsInput!): JSON

  # swf.CountPendingActivityTasks
  CountPendingActivityTasks(input: AwsSwfCountPendingActivityTasksInput!): JSON

  # swf.CountPendingDecisionTasks
  CountPendingDecisionTasks(input: AwsSwfCountPendingDecisionTasksInput!): JSON

  # swf.DeprecateActivityType
  DeprecateActivityType(input: AwsSwfDeprecateActivityTypeInput!): JSON

  # swf.DeprecateDomain
  DeprecateDomain(input: AwsSwfDeprecateDomainInput!): JSON

  # swf.DeprecateWorkflowType
  DeprecateWorkflowType(input: AwsSwfDeprecateWorkflowTypeInput!): JSON

  # swf.DescribeActivityType
  DescribeActivityType(input: AwsSwfDescribeActivityTypeInput!): AwsSwfDescribeActivityTypeOutput

  # swf.DescribeDomain
  DescribeDomain(input: AwsSwfDescribeDomainInput!): AwsSwfDescribeDomainOutput

  # swf.DescribeWorkflowExecution
  DescribeWorkflowExecution(input: AwsSwfDescribeWorkflowExecutionInput!): AwsSwfDescribeWorkflowExecutionOutput

  # swf.DescribeWorkflowType
  DescribeWorkflowType(input: AwsSwfDescribeWorkflowTypeInput!): AwsSwfDescribeWorkflowTypeOutput

  # swf.GetWorkflowExecutionHistory
  GetWorkflowExecutionHistory(input: AwsSwfGetWorkflowExecutionHistoryInput!): AwsSwfGetWorkflowExecutionHistoryOutput

  # swf.ListActivityTypes
  ListActivityTypes(input: AwsSwfListActivityTypesInput!): AwsSwfListActivityTypesOutput

  # swf.ListClosedWorkflowExecutions
  ListClosedWorkflowExecutions(input: AwsSwfListClosedWorkflowExecutionsInput!): JSON

  # swf.ListDomains
  ListDomains(input: AwsSwfListDomainsInput!): AwsSwfListDomainsOutput

  # swf.ListOpenWorkflowExecutions
  ListOpenWorkflowExecutions(input: AwsSwfListOpenWorkflowExecutionsInput!): JSON

  # swf.ListWorkflowTypes
  ListWorkflowTypes(input: AwsSwfListWorkflowTypesInput!): AwsSwfListWorkflowTypesOutput

  # swf.PollForActivityTask
  PollForActivityTask(input: AwsSwfPollForActivityTaskInput!): AwsSwfPollForActivityTaskOutput

  # swf.PollForDecisionTask
  PollForDecisionTask(input: AwsSwfPollForDecisionTaskInput!): AwsSwfPollForDecisionTaskOutput

  # swf.RecordActivityTaskHeartbeat
  RecordActivityTaskHeartbeat(input: AwsSwfRecordActivityTaskHeartbeatInput!): AwsSwfRecordActivityTaskHeartbeatOutput

  # swf.RegisterActivityType
  RegisterActivityType(input: AwsSwfRegisterActivityTypeInput!): JSON

  # swf.RegisterDomain
  RegisterDomain(input: AwsSwfRegisterDomainInput!): JSON

  # swf.RegisterWorkflowType
  RegisterWorkflowType(input: AwsSwfRegisterWorkflowTypeInput!): JSON

  # swf.RequestCancelWorkflowExecution
  RequestCancelWorkflowExecution(input: AwsSwfRequestCancelWorkflowExecutionInput!): JSON

  # swf.RespondActivityTaskCanceled
  RespondActivityTaskCanceled(input: AwsSwfRespondActivityTaskCanceledInput!): JSON

  # swf.RespondActivityTaskCompleted
  RespondActivityTaskCompleted(input: AwsSwfRespondActivityTaskCompletedInput!): JSON

  # swf.RespondActivityTaskFailed
  RespondActivityTaskFailed(input: AwsSwfRespondActivityTaskFailedInput!): JSON

  # swf.RespondDecisionTaskCompleted
  RespondDecisionTaskCompleted(input: AwsSwfRespondDecisionTaskCompletedInput!): JSON

  # swf.SignalWorkflowExecution
  SignalWorkflowExecution(input: AwsSwfSignalWorkflowExecutionInput!): JSON

  # swf.StartWorkflowExecution
  StartWorkflowExecution(input: AwsSwfStartWorkflowExecutionInput!): AwsSwfStartWorkflowExecutionOutput

  # swf.TerminateWorkflowExecution
  TerminateWorkflowExecution(input: AwsSwfTerminateWorkflowExecutionInput!): JSON
}

input AwsSwfCountClosedWorkflowExecutionsInput {
  domain: String!
  startTimeFilter: AwsSwfS3Input
  closeTimeFilter: AwsSwfS3Input
  executionFilter: AwsSwfS5Input
  typeFilter: AwsSwfS7Input
  tagFilter: AwsSwfSaInput
  closeStatusFilter: AwsSwfScInput
}

input AwsSwfCountOpenWorkflowExecutionsInput {
  domain: String!
  startTimeFilter: AwsSwfS3Input!
  typeFilter: AwsSwfS7Input
  tagFilter: AwsSwfSaInput
  executionFilter: AwsSwfS5Input
}

input AwsSwfCountPendingActivityTasksInput {
  domain: String!
  taskList: AwsSwfSjInput!
}

input AwsSwfCountPendingDecisionTasksInput {
  domain: String!
  taskList: AwsSwfSjInput!
}

input AwsSwfDeprecateActivityTypeInput {
  domain: String!
  activityType: AwsSwfSnInput!
}

input AwsSwfDeprecateDomainInput {
  name: String!
}

input AwsSwfDeprecateWorkflowTypeInput {
  domain: String!
  workflowType: AwsSwfSrInput!
}

input AwsSwfDescribeActivityTypeInput {
  domain: String!
  activityType: AwsSwfSnInput!
}

type AwsSwfDescribeActivityTypeOutput {
  typeInfo: AwsSwfSu!
  configuration: AwsSwfDescribeActivityTypeOutputConfiguration!
}

type AwsSwfDescribeActivityTypeOutputConfiguration {
  defaultTaskStartToCloseTimeout: String
  defaultTaskHeartbeatTimeout: String
  defaultTaskList: AwsSwfSj
  defaultTaskPriority: String
  defaultTaskScheduleToStartTimeout: String
  defaultTaskScheduleToCloseTimeout: String
}

input AwsSwfDescribeDomainInput {
  name: String!
}

type AwsSwfDescribeDomainOutput {
  domainInfo: AwsSwfS12!
  configuration: AwsSwfDescribeDomainOutputConfiguration!
}

type AwsSwfDescribeDomainOutputConfiguration {
  workflowExecutionRetentionPeriodInDays: String!
}

input AwsSwfDescribeWorkflowExecutionInput {
  domain: String!
  execution: AwsSwfS16Input!
}

type AwsSwfDescribeWorkflowExecutionOutput {
  executionInfo: AwsSwfS19!
  executionConfiguration: AwsSwfDescribeWorkflowExecutionOutputExecutionConfiguration!
  openCounts: AwsSwfDescribeWorkflowExecutionOutputOpenCounts!
  latestActivityTaskTimestamp: Date
  latestExecutionContext: String
}

type AwsSwfDescribeWorkflowExecutionOutputExecutionConfiguration {
  taskStartToCloseTimeout: String!
  executionStartToCloseTimeout: String!
  taskList: AwsSwfSj!
  taskPriority: String
  childPolicy: String!
  lambdaRole: String
}

type AwsSwfDescribeWorkflowExecutionOutputOpenCounts {
  openActivityTasks: Int!
  openDecisionTasks: Int!
  openTimers: Int!
  openChildWorkflowExecutions: Int!
  openLambdaFunctions: Int
}

input AwsSwfDescribeWorkflowTypeInput {
  domain: String!
  workflowType: AwsSwfSrInput!
}

type AwsSwfDescribeWorkflowTypeOutput {
  typeInfo: AwsSwfS1m!
  configuration: AwsSwfDescribeWorkflowTypeOutputConfiguration!
}

type AwsSwfDescribeWorkflowTypeOutputConfiguration {
  defaultTaskStartToCloseTimeout: String
  defaultExecutionStartToCloseTimeout: String
  defaultTaskList: AwsSwfSj
  defaultTaskPriority: String
  defaultChildPolicy: String
  defaultLambdaRole: String
}

input AwsSwfGetWorkflowExecutionHistoryInput {
  domain: String!
  execution: AwsSwfS16Input!
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSwfGetWorkflowExecutionHistoryOutput {
  events: [AwsSwfS1t]!
  nextPageToken: String
}

input AwsSwfListActivityTypesInput {
  domain: String!
  name: String
  registrationStatus: String!
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSwfListActivityTypesOutput {
  typeInfos: [AwsSwfSu]!
  nextPageToken: String
}

input AwsSwfListClosedWorkflowExecutionsInput {
  domain: String!
  startTimeFilter: AwsSwfS3Input
  closeTimeFilter: AwsSwfS3Input
  executionFilter: AwsSwfS5Input
  closeStatusFilter: AwsSwfScInput
  typeFilter: AwsSwfS7Input
  tagFilter: AwsSwfSaInput
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

input AwsSwfListDomainsInput {
  nextPageToken: String
  registrationStatus: String!
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSwfListDomainsOutput {
  domainInfos: [AwsSwfS12]!
  nextPageToken: String
}

input AwsSwfListOpenWorkflowExecutionsInput {
  domain: String!
  startTimeFilter: AwsSwfS3Input!
  typeFilter: AwsSwfS7Input
  tagFilter: AwsSwfSaInput
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
  executionFilter: AwsSwfS5Input
}

input AwsSwfListWorkflowTypesInput {
  domain: String!
  name: String
  registrationStatus: String!
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSwfListWorkflowTypesOutput {
  typeInfos: [AwsSwfS1m]!
  nextPageToken: String
}

input AwsSwfPollForActivityTaskInput {
  domain: String!
  taskList: AwsSwfSjInput!
  identity: String
}

type AwsSwfPollForActivityTaskOutput {
  taskToken: String!
  activityId: String!
  startedEventId: JSON!
  workflowExecution: AwsSwfS16!
  activityType: AwsSwfSn!
  input: String
}

input AwsSwfPollForDecisionTaskInput {
  domain: String!
  taskList: AwsSwfSjInput!
  identity: String
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSwfPollForDecisionTaskOutput {
  taskToken: String!
  startedEventId: JSON!
  workflowExecution: AwsSwfS16!
  workflowType: AwsSwfSr!
  events: [AwsSwfS1t]!
  nextPageToken: String
  previousStartedEventId: JSON
}

input AwsSwfRecordActivityTaskHeartbeatInput {
  taskToken: String!
  details: String
}

type AwsSwfRecordActivityTaskHeartbeatOutput {
  cancelRequested: Boolean!
}

input AwsSwfRegisterActivityTypeInput {
  domain: String!
  name: String!
  version: String!
  description: String
  defaultTaskStartToCloseTimeout: String
  defaultTaskHeartbeatTimeout: String
  defaultTaskList: AwsSwfSjInput
  defaultTaskPriority: String
  defaultTaskScheduleToStartTimeout: String
  defaultTaskScheduleToCloseTimeout: String
}

input AwsSwfRegisterDomainInput {
  name: String!
  description: String
  workflowExecutionRetentionPeriodInDays: String!
}

input AwsSwfRegisterWorkflowTypeInput {
  domain: String!
  name: String!
  version: String!
  description: String
  defaultTaskStartToCloseTimeout: String
  defaultExecutionStartToCloseTimeout: String
  defaultTaskList: AwsSwfSjInput
  defaultTaskPriority: String
  defaultChildPolicy: String
  defaultLambdaRole: String
}

input AwsSwfRequestCancelWorkflowExecutionInput {
  domain: String!
  workflowId: String!
  runId: String
}

input AwsSwfRespondActivityTaskCanceledInput {
  taskToken: String!
  details: String
}

input AwsSwfRespondActivityTaskCompletedInput {
  taskToken: String!
  result: String
}

input AwsSwfRespondActivityTaskFailedInput {
  taskToken: String!
  reason: String
  details: String
}

input AwsSwfRespondDecisionTaskCompletedDecisionsCancelTimerDecisionAttributesInput {
  timerId: String!
}

input AwsSwfRespondDecisionTaskCompletedDecisionsCancelWorkflowExecutionDecisionAttributesInput {
  details: String
}

input AwsSwfRespondDecisionTaskCompletedDecisionsCompleteWorkflowExecutionDecisionAttributesInput {
  result: String
}

input AwsSwfRespondDecisionTaskCompletedDecisionsContinueAsNewWorkflowExecutionDecisionAttributesInput {
  input: String
  executionStartToCloseTimeout: String
  taskList: AwsSwfSjInput
  taskPriority: String
  taskStartToCloseTimeout: String
  childPolicy: String
  tagList: [String]
  workflowTypeVersion: String
  lambdaRole: String
}

input AwsSwfRespondDecisionTaskCompletedDecisionsFailWorkflowExecutionDecisionAttributesInput {
  reason: String
  details: String
}

input AwsSwfRespondDecisionTaskCompletedDecisionsInput {
  decisionType: String!
  scheduleActivityTaskDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsScheduleActivityTaskDecisionAttributesInput
  requestCancelActivityTaskDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsRequestCancelActivityTaskDecisionAttributesInput
  completeWorkflowExecutionDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsCompleteWorkflowExecutionDecisionAttributesInput
  failWorkflowExecutionDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsFailWorkflowExecutionDecisionAttributesInput
  cancelWorkflowExecutionDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsCancelWorkflowExecutionDecisionAttributesInput
  continueAsNewWorkflowExecutionDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsContinueAsNewWorkflowExecutionDecisionAttributesInput
  recordMarkerDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsRecordMarkerDecisionAttributesInput
  startTimerDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsStartTimerDecisionAttributesInput
  cancelTimerDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsCancelTimerDecisionAttributesInput
  signalExternalWorkflowExecutionDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsSignalExternalWorkflowExecutionDecisionAttributesInput
  requestCancelExternalWorkflowExecutionDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsRequestCancelExternalWorkflowExecutionDecisionAttributesInput
  startChildWorkflowExecutionDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsStartChildWorkflowExecutionDecisionAttributesInput
  scheduleLambdaFunctionDecisionAttributes: AwsSwfRespondDecisionTaskCompletedDecisionsScheduleLambdaFunctionDecisionAttributesInput
}

input AwsSwfRespondDecisionTaskCompletedDecisionsRecordMarkerDecisionAttributesInput {
  markerName: String!
  details: String
}

input AwsSwfRespondDecisionTaskCompletedDecisionsRequestCancelActivityTaskDecisionAttributesInput {
  activityId: String!
}

input AwsSwfRespondDecisionTaskCompletedDecisionsRequestCancelExternalWorkflowExecutionDecisionAttributesInput {
  workflowId: String!
  runId: String
  control: String
}

input AwsSwfRespondDecisionTaskCompletedDecisionsScheduleActivityTaskDecisionAttributesInput {
  activityType: AwsSwfSnInput!
  activityId: String!
  control: String
  input: String
  scheduleToCloseTimeout: String
  taskList: AwsSwfSjInput
  taskPriority: String
  scheduleToStartTimeout: String
  startToCloseTimeout: String
  heartbeatTimeout: String
}

input AwsSwfRespondDecisionTaskCompletedDecisionsScheduleLambdaFunctionDecisionAttributesInput {
  id: String!
  name: String!
  control: String
  input: String
  startToCloseTimeout: String
}

input AwsSwfRespondDecisionTaskCompletedDecisionsSignalExternalWorkflowExecutionDecisionAttributesInput {
  workflowId: String!
  runId: String
  signalName: String!
  input: String
  control: String
}

input AwsSwfRespondDecisionTaskCompletedDecisionsStartChildWorkflowExecutionDecisionAttributesInput {
  workflowType: AwsSwfSrInput!
  workflowId: String!
  control: String
  input: String
  executionStartToCloseTimeout: String
  taskList: AwsSwfSjInput
  taskPriority: String
  taskStartToCloseTimeout: String
  childPolicy: String
  tagList: [String]
  lambdaRole: String
}

input AwsSwfRespondDecisionTaskCompletedDecisionsStartTimerDecisionAttributesInput {
  timerId: String!
  control: String
  startToFireTimeout: String!
}

input AwsSwfRespondDecisionTaskCompletedInput {
  taskToken: String!
  decisions: [AwsSwfRespondDecisionTaskCompletedDecisionsInput]
  executionContext: String
}

type AwsSwfS12 {
  name: String!
  status: String!
  description: String
}

type AwsSwfS16 {
  workflowId: String!
  runId: String!
}

input AwsSwfS16Input {
  workflowId: String!
  runId: String!
}

type AwsSwfS19 {
  execution: AwsSwfS16!
  workflowType: AwsSwfSr!
  startTimestamp: Date!
  closeTimestamp: Date
  executionStatus: String!
  closeStatus: String
  parent: AwsSwfS16
  tagList: [String]
  cancelRequested: Boolean
}

type AwsSwfS1m {
  workflowType: AwsSwfSr!
  status: String!
  description: String
  creationDate: Date!
  deprecationDate: Date
}

type AwsSwfS1t {
  eventTimestamp: Date!
  eventType: String!
  eventId: JSON!
  workflowExecutionStartedEventAttributes: AwsSwfS1tWorkflowExecutionStartedEventAttributes
  workflowExecutionCompletedEventAttributes: AwsSwfS1tWorkflowExecutionCompletedEventAttributes
  completeWorkflowExecutionFailedEventAttributes: AwsSwfS1tCompleteWorkflowExecutionFailedEventAttributes
  workflowExecutionFailedEventAttributes: AwsSwfS1tWorkflowExecutionFailedEventAttributes
  failWorkflowExecutionFailedEventAttributes: AwsSwfS1tFailWorkflowExecutionFailedEventAttributes
  workflowExecutionTimedOutEventAttributes: AwsSwfS1tWorkflowExecutionTimedOutEventAttributes
  workflowExecutionCanceledEventAttributes: AwsSwfS1tWorkflowExecutionCanceledEventAttributes
  cancelWorkflowExecutionFailedEventAttributes: AwsSwfS1tCancelWorkflowExecutionFailedEventAttributes
  workflowExecutionContinuedAsNewEventAttributes: AwsSwfS1tWorkflowExecutionContinuedAsNewEventAttributes
  continueAsNewWorkflowExecutionFailedEventAttributes: AwsSwfS1tContinueAsNewWorkflowExecutionFailedEventAttributes
  workflowExecutionTerminatedEventAttributes: AwsSwfS1tWorkflowExecutionTerminatedEventAttributes
  workflowExecutionCancelRequestedEventAttributes: AwsSwfS1tWorkflowExecutionCancelRequestedEventAttributes
  decisionTaskScheduledEventAttributes: AwsSwfS1tDecisionTaskScheduledEventAttributes
  decisionTaskStartedEventAttributes: AwsSwfS1tDecisionTaskStartedEventAttributes
  decisionTaskCompletedEventAttributes: AwsSwfS1tDecisionTaskCompletedEventAttributes
  decisionTaskTimedOutEventAttributes: AwsSwfS1tDecisionTaskTimedOutEventAttributes
  activityTaskScheduledEventAttributes: AwsSwfS1tActivityTaskScheduledEventAttributes
  activityTaskStartedEventAttributes: AwsSwfS1tActivityTaskStartedEventAttributes
  activityTaskCompletedEventAttributes: AwsSwfS1tActivityTaskCompletedEventAttributes
  activityTaskFailedEventAttributes: AwsSwfS1tActivityTaskFailedEventAttributes
  activityTaskTimedOutEventAttributes: AwsSwfS1tActivityTaskTimedOutEventAttributes
  activityTaskCanceledEventAttributes: AwsSwfS1tActivityTaskCanceledEventAttributes
  activityTaskCancelRequestedEventAttributes: AwsSwfS1tActivityTaskCancelRequestedEventAttributes
  workflowExecutionSignaledEventAttributes: AwsSwfS1tWorkflowExecutionSignaledEventAttributes
  markerRecordedEventAttributes: AwsSwfS1tMarkerRecordedEventAttributes
  recordMarkerFailedEventAttributes: AwsSwfS1tRecordMarkerFailedEventAttributes
  timerStartedEventAttributes: AwsSwfS1tTimerStartedEventAttributes
  timerFiredEventAttributes: AwsSwfS1tTimerFiredEventAttributes
  timerCanceledEventAttributes: AwsSwfS1tTimerCanceledEventAttributes
  startChildWorkflowExecutionInitiatedEventAttributes: AwsSwfS1tStartChildWorkflowExecutionInitiatedEventAttributes
  childWorkflowExecutionStartedEventAttributes: AwsSwfS1tChildWorkflowExecutionStartedEventAttributes
  childWorkflowExecutionCompletedEventAttributes: AwsSwfS1tChildWorkflowExecutionCompletedEventAttributes
  childWorkflowExecutionFailedEventAttributes: AwsSwfS1tChildWorkflowExecutionFailedEventAttributes
  childWorkflowExecutionTimedOutEventAttributes: AwsSwfS1tChildWorkflowExecutionTimedOutEventAttributes
  childWorkflowExecutionCanceledEventAttributes: AwsSwfS1tChildWorkflowExecutionCanceledEventAttributes
  childWorkflowExecutionTerminatedEventAttributes: AwsSwfS1tChildWorkflowExecutionTerminatedEventAttributes
  signalExternalWorkflowExecutionInitiatedEventAttributes: AwsSwfS1tSignalExternalWorkflowExecutionInitiatedEventAttributes
  externalWorkflowExecutionSignaledEventAttributes: AwsSwfS1tExternalWorkflowExecutionSignaledEventAttributes
  signalExternalWorkflowExecutionFailedEventAttributes: AwsSwfS1tSignalExternalWorkflowExecutionFailedEventAttributes
  externalWorkflowExecutionCancelRequestedEventAttributes: AwsSwfS1tExternalWorkflowExecutionCancelRequestedEventAttributes
  requestCancelExternalWorkflowExecutionInitiatedEventAttributes: AwsSwfS1tRequestCancelExternalWorkflowExecutionInitiatedEventAttributes
  requestCancelExternalWorkflowExecutionFailedEventAttributes: AwsSwfS1tRequestCancelExternalWorkflowExecutionFailedEventAttributes
  scheduleActivityTaskFailedEventAttributes: AwsSwfS1tScheduleActivityTaskFailedEventAttributes
  requestCancelActivityTaskFailedEventAttributes: AwsSwfS1tRequestCancelActivityTaskFailedEventAttributes
  startTimerFailedEventAttributes: AwsSwfS1tStartTimerFailedEventAttributes
  cancelTimerFailedEventAttributes: AwsSwfS1tCancelTimerFailedEventAttributes
  startChildWorkflowExecutionFailedEventAttributes: AwsSwfS1tStartChildWorkflowExecutionFailedEventAttributes
  lambdaFunctionScheduledEventAttributes: AwsSwfS1tLambdaFunctionScheduledEventAttributes
  lambdaFunctionStartedEventAttributes: AwsSwfS1tLambdaFunctionStartedEventAttributes
  lambdaFunctionCompletedEventAttributes: AwsSwfS1tLambdaFunctionCompletedEventAttributes
  lambdaFunctionFailedEventAttributes: AwsSwfS1tLambdaFunctionFailedEventAttributes
  lambdaFunctionTimedOutEventAttributes: AwsSwfS1tLambdaFunctionTimedOutEventAttributes
  scheduleLambdaFunctionFailedEventAttributes: AwsSwfS1tScheduleLambdaFunctionFailedEventAttributes
  startLambdaFunctionFailedEventAttributes: AwsSwfS1tStartLambdaFunctionFailedEventAttributes
}

type AwsSwfS1tActivityTaskCanceledEventAttributes {
  details: String
  scheduledEventId: JSON!
  startedEventId: JSON!
  latestCancelRequestedEventId: JSON
}

type AwsSwfS1tActivityTaskCancelRequestedEventAttributes {
  decisionTaskCompletedEventId: JSON!
  activityId: String!
}

type AwsSwfS1tActivityTaskCompletedEventAttributes {
  result: String
  scheduledEventId: JSON!
  startedEventId: JSON!
}

type AwsSwfS1tActivityTaskFailedEventAttributes {
  reason: String
  details: String
  scheduledEventId: JSON!
  startedEventId: JSON!
}

type AwsSwfS1tActivityTaskScheduledEventAttributes {
  activityType: AwsSwfSn!
  activityId: String!
  input: String
  control: String
  scheduleToStartTimeout: String
  scheduleToCloseTimeout: String
  startToCloseTimeout: String
  taskList: AwsSwfSj!
  taskPriority: String
  decisionTaskCompletedEventId: JSON!
  heartbeatTimeout: String
}

type AwsSwfS1tActivityTaskStartedEventAttributes {
  identity: String
  scheduledEventId: JSON!
}

type AwsSwfS1tActivityTaskTimedOutEventAttributes {
  timeoutType: String!
  scheduledEventId: JSON!
  startedEventId: JSON!
  details: String
}

type AwsSwfS1tCancelTimerFailedEventAttributes {
  timerId: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tCancelWorkflowExecutionFailedEventAttributes {
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tChildWorkflowExecutionCanceledEventAttributes {
  workflowExecution: AwsSwfS16!
  workflowType: AwsSwfSr!
  details: String
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSwfS1tChildWorkflowExecutionCompletedEventAttributes {
  workflowExecution: AwsSwfS16!
  workflowType: AwsSwfSr!
  result: String
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSwfS1tChildWorkflowExecutionFailedEventAttributes {
  workflowExecution: AwsSwfS16!
  workflowType: AwsSwfSr!
  reason: String
  details: String
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSwfS1tChildWorkflowExecutionStartedEventAttributes {
  workflowExecution: AwsSwfS16!
  workflowType: AwsSwfSr!
  initiatedEventId: JSON!
}

type AwsSwfS1tChildWorkflowExecutionTerminatedEventAttributes {
  workflowExecution: AwsSwfS16!
  workflowType: AwsSwfSr!
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSwfS1tChildWorkflowExecutionTimedOutEventAttributes {
  workflowExecution: AwsSwfS16!
  workflowType: AwsSwfSr!
  timeoutType: String!
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSwfS1tCompleteWorkflowExecutionFailedEventAttributes {
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tContinueAsNewWorkflowExecutionFailedEventAttributes {
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tDecisionTaskCompletedEventAttributes {
  executionContext: String
  scheduledEventId: JSON!
  startedEventId: JSON!
}

type AwsSwfS1tDecisionTaskScheduledEventAttributes {
  taskList: AwsSwfSj!
  taskPriority: String
  startToCloseTimeout: String
}

type AwsSwfS1tDecisionTaskStartedEventAttributes {
  identity: String
  scheduledEventId: JSON!
}

type AwsSwfS1tDecisionTaskTimedOutEventAttributes {
  timeoutType: String!
  scheduledEventId: JSON!
  startedEventId: JSON!
}

type AwsSwfS1tExternalWorkflowExecutionCancelRequestedEventAttributes {
  workflowExecution: AwsSwfS16!
  initiatedEventId: JSON!
}

type AwsSwfS1tExternalWorkflowExecutionSignaledEventAttributes {
  workflowExecution: AwsSwfS16!
  initiatedEventId: JSON!
}

type AwsSwfS1tFailWorkflowExecutionFailedEventAttributes {
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tLambdaFunctionCompletedEventAttributes {
  scheduledEventId: JSON!
  startedEventId: JSON!
  result: String
}

type AwsSwfS1tLambdaFunctionFailedEventAttributes {
  scheduledEventId: JSON!
  startedEventId: JSON!
  reason: String
  details: String
}

type AwsSwfS1tLambdaFunctionScheduledEventAttributes {
  id: String!
  name: String!
  control: String
  input: String
  startToCloseTimeout: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tLambdaFunctionStartedEventAttributes {
  scheduledEventId: JSON!
}

type AwsSwfS1tLambdaFunctionTimedOutEventAttributes {
  scheduledEventId: JSON!
  startedEventId: JSON!
  timeoutType: String
}

type AwsSwfS1tMarkerRecordedEventAttributes {
  markerName: String!
  details: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tRecordMarkerFailedEventAttributes {
  markerName: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tRequestCancelActivityTaskFailedEventAttributes {
  activityId: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tRequestCancelExternalWorkflowExecutionFailedEventAttributes {
  workflowId: String!
  runId: String
  cause: String!
  initiatedEventId: JSON!
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSwfS1tRequestCancelExternalWorkflowExecutionInitiatedEventAttributes {
  workflowId: String!
  runId: String
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSwfS1tScheduleActivityTaskFailedEventAttributes {
  activityType: AwsSwfSn!
  activityId: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tScheduleLambdaFunctionFailedEventAttributes {
  id: String!
  name: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tSignalExternalWorkflowExecutionFailedEventAttributes {
  workflowId: String!
  runId: String
  cause: String!
  initiatedEventId: JSON!
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSwfS1tSignalExternalWorkflowExecutionInitiatedEventAttributes {
  workflowId: String!
  runId: String
  signalName: String!
  input: String
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSwfS1tStartChildWorkflowExecutionFailedEventAttributes {
  workflowType: AwsSwfSr!
  cause: String!
  workflowId: String!
  initiatedEventId: JSON!
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSwfS1tStartChildWorkflowExecutionInitiatedEventAttributes {
  workflowId: String!
  workflowType: AwsSwfSr!
  control: String
  input: String
  executionStartToCloseTimeout: String
  taskList: AwsSwfSj!
  taskPriority: String
  decisionTaskCompletedEventId: JSON!
  childPolicy: String!
  taskStartToCloseTimeout: String
  tagList: [String]
  lambdaRole: String
}

type AwsSwfS1tStartLambdaFunctionFailedEventAttributes {
  scheduledEventId: JSON
  cause: String
  message: String
}

type AwsSwfS1tStartTimerFailedEventAttributes {
  timerId: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tTimerCanceledEventAttributes {
  timerId: String!
  startedEventId: JSON!
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tTimerFiredEventAttributes {
  timerId: String!
  startedEventId: JSON!
}

type AwsSwfS1tTimerStartedEventAttributes {
  timerId: String!
  control: String
  startToFireTimeout: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tWorkflowExecutionCanceledEventAttributes {
  details: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tWorkflowExecutionCancelRequestedEventAttributes {
  externalWorkflowExecution: AwsSwfS16
  externalInitiatedEventId: JSON
  cause: String
}

type AwsSwfS1tWorkflowExecutionCompletedEventAttributes {
  result: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tWorkflowExecutionContinuedAsNewEventAttributes {
  input: String
  decisionTaskCompletedEventId: JSON!
  newExecutionRunId: String!
  executionStartToCloseTimeout: String
  taskList: AwsSwfSj!
  taskPriority: String
  taskStartToCloseTimeout: String
  childPolicy: String!
  tagList: [String]
  workflowType: AwsSwfSr!
  lambdaRole: String
}

type AwsSwfS1tWorkflowExecutionFailedEventAttributes {
  reason: String
  details: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSwfS1tWorkflowExecutionSignaledEventAttributes {
  signalName: String!
  input: String
  externalWorkflowExecution: AwsSwfS16
  externalInitiatedEventId: JSON
}

type AwsSwfS1tWorkflowExecutionStartedEventAttributes {
  input: String
  executionStartToCloseTimeout: String
  taskStartToCloseTimeout: String
  childPolicy: String!
  taskList: AwsSwfSj!
  taskPriority: String
  workflowType: AwsSwfSr!
  tagList: [String]
  continuedExecutionRunId: String
  parentWorkflowExecution: AwsSwfS16
  parentInitiatedEventId: JSON
  lambdaRole: String
}

type AwsSwfS1tWorkflowExecutionTerminatedEventAttributes {
  reason: String
  details: String
  childPolicy: String!
  cause: String
}

type AwsSwfS1tWorkflowExecutionTimedOutEventAttributes {
  timeoutType: String!
  childPolicy: String!
}

input AwsSwfS3Input {
  oldestDate: Date!
  latestDate: Date
}

input AwsSwfS5Input {
  workflowId: String!
}

input AwsSwfS7Input {
  name: String!
  version: String
}

input AwsSwfSaInput {
  tag: String!
}

input AwsSwfScInput {
  status: String!
}

input AwsSwfSignalWorkflowExecutionInput {
  domain: String!
  workflowId: String!
  runId: String
  signalName: String!
  input: String
}

type AwsSwfSj {
  name: String!
}

input AwsSwfSjInput {
  name: String!
}

type AwsSwfSn {
  name: String!
  version: String!
}

input AwsSwfSnInput {
  name: String!
  version: String!
}

type AwsSwfSr {
  name: String!
  version: String!
}

input AwsSwfSrInput {
  name: String!
  version: String!
}

input AwsSwfStartWorkflowExecutionInput {
  domain: String!
  workflowId: String!
  workflowType: AwsSwfSrInput!
  taskList: AwsSwfSjInput
  taskPriority: String
  input: String
  executionStartToCloseTimeout: String
  tagList: [String]
  taskStartToCloseTimeout: String
  childPolicy: String
  lambdaRole: String
}

type AwsSwfStartWorkflowExecutionOutput {
  runId: String
}

type AwsSwfSu {
  activityType: AwsSwfSn!
  status: String!
  description: String
  creationDate: Date!
  deprecationDate: Date
}

input AwsSwfTerminateWorkflowExecutionInput {
  domain: String!
  workflowId: String!
  runId: String
  reason: String
  details: String
  childPolicy: String
}

# Amazon Translate (2017-07-01)
type AwsTranslate {
  # translate.TranslateText
  TranslateText(input: AwsTranslateTranslateTextInput!): AwsTranslateTranslateTextOutput
}

input AwsTranslateTranslateTextInput {
  Text: String!
  SourceLanguageCode: String!
  TargetLanguageCode: String!
}

type AwsTranslateTranslateTextOutput {
  TranslatedText: String!
  SourceLanguageCode: String!
  TargetLanguageCode: String!
}

# AWS WAF (2015-08-24)
type AwsWaf {
  # waf.CreateByteMatchSet
  CreateByteMatchSet(input: AwsWafCreateByteMatchSetInput!): AwsWafCreateByteMatchSetOutput

  # waf.CreateGeoMatchSet
  CreateGeoMatchSet(input: AwsWafCreateGeoMatchSetInput!): AwsWafCreateGeoMatchSetOutput

  # waf.CreateIPSet
  CreateIPSet(input: AwsWafCreateIPSetInput!): AwsWafCreateIPSetOutput

  # waf.CreateRateBasedRule
  CreateRateBasedRule(input: AwsWafCreateRateBasedRuleInput!): AwsWafCreateRateBasedRuleOutput

  # waf.CreateRegexMatchSet
  CreateRegexMatchSet(input: AwsWafCreateRegexMatchSetInput!): AwsWafCreateRegexMatchSetOutput

  # waf.CreateRegexPatternSet
  CreateRegexPatternSet(input: AwsWafCreateRegexPatternSetInput!): AwsWafCreateRegexPatternSetOutput

  # waf.CreateRule
  CreateRule(input: AwsWafCreateRuleInput!): AwsWafCreateRuleOutput

  # waf.CreateRuleGroup
  CreateRuleGroup(input: AwsWafCreateRuleGroupInput!): AwsWafCreateRuleGroupOutput

  # waf.CreateSizeConstraintSet
  CreateSizeConstraintSet(input: AwsWafCreateSizeConstraintSetInput!): AwsWafCreateSizeConstraintSetOutput

  # waf.CreateSqlInjectionMatchSet
  CreateSqlInjectionMatchSet(input: AwsWafCreateSqlInjectionMatchSetInput!): AwsWafCreateSqlInjectionMatchSetOutput

  # waf.CreateWebACL
  CreateWebACL(input: AwsWafCreateWebACLInput!): AwsWafCreateWebACLOutput

  # waf.CreateXssMatchSet
  CreateXssMatchSet(input: AwsWafCreateXssMatchSetInput!): AwsWafCreateXssMatchSetOutput

  # waf.DeleteByteMatchSet
  DeleteByteMatchSet(input: AwsWafDeleteByteMatchSetInput!): AwsWafDeleteByteMatchSetOutput

  # waf.DeleteGeoMatchSet
  DeleteGeoMatchSet(input: AwsWafDeleteGeoMatchSetInput!): AwsWafDeleteGeoMatchSetOutput

  # waf.DeleteIPSet
  DeleteIPSet(input: AwsWafDeleteIPSetInput!): AwsWafDeleteIPSetOutput

  # waf.DeleteRateBasedRule
  DeleteRateBasedRule(input: AwsWafDeleteRateBasedRuleInput!): AwsWafDeleteRateBasedRuleOutput

  # waf.DeleteRegexMatchSet
  DeleteRegexMatchSet(input: AwsWafDeleteRegexMatchSetInput!): AwsWafDeleteRegexMatchSetOutput

  # waf.DeleteRegexPatternSet
  DeleteRegexPatternSet(input: AwsWafDeleteRegexPatternSetInput!): AwsWafDeleteRegexPatternSetOutput

  # waf.DeleteRule
  DeleteRule(input: AwsWafDeleteRuleInput!): AwsWafDeleteRuleOutput

  # waf.DeleteRuleGroup
  DeleteRuleGroup(input: AwsWafDeleteRuleGroupInput!): AwsWafDeleteRuleGroupOutput

  # waf.DeleteSizeConstraintSet
  DeleteSizeConstraintSet(input: AwsWafDeleteSizeConstraintSetInput!): AwsWafDeleteSizeConstraintSetOutput

  # waf.DeleteSqlInjectionMatchSet
  DeleteSqlInjectionMatchSet(input: AwsWafDeleteSqlInjectionMatchSetInput!): AwsWafDeleteSqlInjectionMatchSetOutput

  # waf.DeleteWebACL
  DeleteWebACL(input: AwsWafDeleteWebACLInput!): AwsWafDeleteWebACLOutput

  # waf.DeleteXssMatchSet
  DeleteXssMatchSet(input: AwsWafDeleteXssMatchSetInput!): AwsWafDeleteXssMatchSetOutput

  # waf.GetByteMatchSet
  GetByteMatchSet(input: AwsWafGetByteMatchSetInput!): AwsWafGetByteMatchSetOutput

  # waf.GetChangeToken
  GetChangeToken(input: JSON): AwsWafGetChangeTokenOutput

  # waf.GetChangeTokenStatus
  GetChangeTokenStatus(input: AwsWafGetChangeTokenStatusInput!): AwsWafGetChangeTokenStatusOutput

  # waf.GetGeoMatchSet
  GetGeoMatchSet(input: AwsWafGetGeoMatchSetInput!): AwsWafGetGeoMatchSetOutput

  # waf.GetIPSet
  GetIPSet(input: AwsWafGetIPSetInput!): AwsWafGetIPSetOutput

  # waf.GetRateBasedRule
  GetRateBasedRule(input: AwsWafGetRateBasedRuleInput!): AwsWafGetRateBasedRuleOutput

  # waf.GetRateBasedRuleManagedKeys
  GetRateBasedRuleManagedKeys(input: AwsWafGetRateBasedRuleManagedKeysInput!): AwsWafGetRateBasedRuleManagedKeysOutput

  # waf.GetRegexMatchSet
  GetRegexMatchSet(input: AwsWafGetRegexMatchSetInput!): AwsWafGetRegexMatchSetOutput

  # waf.GetRegexPatternSet
  GetRegexPatternSet(input: AwsWafGetRegexPatternSetInput!): AwsWafGetRegexPatternSetOutput

  # waf.GetRule
  GetRule(input: AwsWafGetRuleInput!): AwsWafGetRuleOutput

  # waf.GetRuleGroup
  GetRuleGroup(input: AwsWafGetRuleGroupInput!): AwsWafGetRuleGroupOutput

  # waf.GetSampledRequests
  GetSampledRequests(input: AwsWafGetSampledRequestsInput!): AwsWafGetSampledRequestsOutput

  # waf.GetSizeConstraintSet
  GetSizeConstraintSet(input: AwsWafGetSizeConstraintSetInput!): AwsWafGetSizeConstraintSetOutput

  # waf.GetSqlInjectionMatchSet
  GetSqlInjectionMatchSet(input: AwsWafGetSqlInjectionMatchSetInput!): AwsWafGetSqlInjectionMatchSetOutput

  # waf.GetWebACL
  GetWebACL(input: AwsWafGetWebACLInput!): AwsWafGetWebACLOutput

  # waf.GetXssMatchSet
  GetXssMatchSet(input: AwsWafGetXssMatchSetInput!): AwsWafGetXssMatchSetOutput

  # waf.ListActivatedRulesInRuleGroup
  ListActivatedRulesInRuleGroup(input: AwsWafListActivatedRulesInRuleGroupInput): AwsWafListActivatedRulesInRuleGroupOutput

  # waf.ListByteMatchSets
  ListByteMatchSets(input: AwsWafListByteMatchSetsInput): AwsWafListByteMatchSetsOutput

  # waf.ListGeoMatchSets
  ListGeoMatchSets(input: AwsWafListGeoMatchSetsInput): AwsWafListGeoMatchSetsOutput

  # waf.ListIPSets
  ListIPSets(input: AwsWafListIPSetsInput): AwsWafListIPSetsOutput

  # waf.ListRateBasedRules
  ListRateBasedRules(input: AwsWafListRateBasedRulesInput): AwsWafListRateBasedRulesOutput

  # waf.ListRegexMatchSets
  ListRegexMatchSets(input: AwsWafListRegexMatchSetsInput): AwsWafListRegexMatchSetsOutput

  # waf.ListRegexPatternSets
  ListRegexPatternSets(input: AwsWafListRegexPatternSetsInput): AwsWafListRegexPatternSetsOutput

  # waf.ListRuleGroups
  ListRuleGroups(input: AwsWafListRuleGroupsInput): AwsWafListRuleGroupsOutput

  # waf.ListRules
  ListRules(input: AwsWafListRulesInput): AwsWafListRulesOutput

  # waf.ListSizeConstraintSets
  ListSizeConstraintSets(input: AwsWafListSizeConstraintSetsInput): AwsWafListSizeConstraintSetsOutput

  # waf.ListSqlInjectionMatchSets
  ListSqlInjectionMatchSets(input: AwsWafListSqlInjectionMatchSetsInput): AwsWafListSqlInjectionMatchSetsOutput

  # waf.ListSubscribedRuleGroups
  ListSubscribedRuleGroups(input: AwsWafListSubscribedRuleGroupsInput): AwsWafListSubscribedRuleGroupsOutput

  # waf.ListWebACLs
  ListWebACLs(input: AwsWafListWebACLsInput): AwsWafListWebACLsOutput

  # waf.ListXssMatchSets
  ListXssMatchSets(input: AwsWafListXssMatchSetsInput): AwsWafListXssMatchSetsOutput

  # waf.UpdateByteMatchSet
  UpdateByteMatchSet(input: AwsWafUpdateByteMatchSetInput!): AwsWafUpdateByteMatchSetOutput

  # waf.UpdateGeoMatchSet
  UpdateGeoMatchSet(input: AwsWafUpdateGeoMatchSetInput!): AwsWafUpdateGeoMatchSetOutput

  # waf.UpdateIPSet
  UpdateIPSet(input: AwsWafUpdateIPSetInput!): AwsWafUpdateIPSetOutput

  # waf.UpdateRateBasedRule
  UpdateRateBasedRule(input: AwsWafUpdateRateBasedRuleInput!): AwsWafUpdateRateBasedRuleOutput

  # waf.UpdateRegexMatchSet
  UpdateRegexMatchSet(input: AwsWafUpdateRegexMatchSetInput!): AwsWafUpdateRegexMatchSetOutput

  # waf.UpdateRegexPatternSet
  UpdateRegexPatternSet(input: AwsWafUpdateRegexPatternSetInput!): AwsWafUpdateRegexPatternSetOutput

  # waf.UpdateRule
  UpdateRule(input: AwsWafUpdateRuleInput!): AwsWafUpdateRuleOutput

  # waf.UpdateRuleGroup
  UpdateRuleGroup(input: AwsWafUpdateRuleGroupInput!): AwsWafUpdateRuleGroupOutput

  # waf.UpdateSizeConstraintSet
  UpdateSizeConstraintSet(input: AwsWafUpdateSizeConstraintSetInput!): AwsWafUpdateSizeConstraintSetOutput

  # waf.UpdateSqlInjectionMatchSet
  UpdateSqlInjectionMatchSet(input: AwsWafUpdateSqlInjectionMatchSetInput!): AwsWafUpdateSqlInjectionMatchSetOutput

  # waf.UpdateWebACL
  UpdateWebACL(input: AwsWafUpdateWebACLInput!): AwsWafUpdateWebACLOutput

  # waf.UpdateXssMatchSet
  UpdateXssMatchSet(input: AwsWafUpdateXssMatchSetInput!): AwsWafUpdateXssMatchSetOutput
}

input AwsWafCreateByteMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafCreateByteMatchSetOutput {
  ByteMatchSet: AwsWafS5
  ChangeToken: String
}

input AwsWafCreateGeoMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafCreateGeoMatchSetOutput {
  GeoMatchSet: AwsWafSh
  ChangeToken: String
}

input AwsWafCreateIPSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafCreateIPSetOutput {
  IPSet: AwsWafSo
  ChangeToken: String
}

input AwsWafCreateRateBasedRuleInput {
  Name: String!
  MetricName: String!
  RateKey: String!
  RateLimit: JSON!
  ChangeToken: String!
}

type AwsWafCreateRateBasedRuleOutput {
  Rule: AwsWafSy
  ChangeToken: String
}

input AwsWafCreateRegexMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafCreateRegexMatchSetOutput {
  RegexMatchSet: AwsWafS15
  ChangeToken: String
}

input AwsWafCreateRegexPatternSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafCreateRegexPatternSetOutput {
  RegexPatternSet: AwsWafS1a
  ChangeToken: String
}

input AwsWafCreateRuleGroupInput {
  Name: String!
  MetricName: String!
  ChangeToken: String!
}

type AwsWafCreateRuleGroupOutput {
  RuleGroup: AwsWafS1i
  ChangeToken: String
}

input AwsWafCreateRuleInput {
  Name: String!
  MetricName: String!
  ChangeToken: String!
}

type AwsWafCreateRuleOutput {
  Rule: AwsWafS1f
  ChangeToken: String
}

input AwsWafCreateSizeConstraintSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafCreateSizeConstraintSetOutput {
  SizeConstraintSet: AwsWafS1l
  ChangeToken: String
}

input AwsWafCreateSqlInjectionMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafCreateSqlInjectionMatchSetOutput {
  SqlInjectionMatchSet: AwsWafS1s
  ChangeToken: String
}

input AwsWafCreateWebACLInput {
  Name: String!
  MetricName: String!
  DefaultAction: AwsWafS1wInput!
  ChangeToken: String!
}

type AwsWafCreateWebACLOutput {
  WebACL: AwsWafS1z
  ChangeToken: String
}

input AwsWafCreateXssMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafCreateXssMatchSetOutput {
  XssMatchSet: AwsWafS28
  ChangeToken: String
}

input AwsWafDeleteByteMatchSetInput {
  ByteMatchSetId: String!
  ChangeToken: String!
}

type AwsWafDeleteByteMatchSetOutput {
  ChangeToken: String
}

input AwsWafDeleteGeoMatchSetInput {
  GeoMatchSetId: String!
  ChangeToken: String!
}

type AwsWafDeleteGeoMatchSetOutput {
  ChangeToken: String
}

input AwsWafDeleteIPSetInput {
  IPSetId: String!
  ChangeToken: String!
}

type AwsWafDeleteIPSetOutput {
  ChangeToken: String
}

input AwsWafDeleteRateBasedRuleInput {
  RuleId: String!
  ChangeToken: String!
}

type AwsWafDeleteRateBasedRuleOutput {
  ChangeToken: String
}

input AwsWafDeleteRegexMatchSetInput {
  RegexMatchSetId: String!
  ChangeToken: String!
}

type AwsWafDeleteRegexMatchSetOutput {
  ChangeToken: String
}

input AwsWafDeleteRegexPatternSetInput {
  RegexPatternSetId: String!
  ChangeToken: String!
}

type AwsWafDeleteRegexPatternSetOutput {
  ChangeToken: String
}

input AwsWafDeleteRuleGroupInput {
  RuleGroupId: String!
  ChangeToken: String!
}

type AwsWafDeleteRuleGroupOutput {
  ChangeToken: String
}

input AwsWafDeleteRuleInput {
  RuleId: String!
  ChangeToken: String!
}

type AwsWafDeleteRuleOutput {
  ChangeToken: String
}

input AwsWafDeleteSizeConstraintSetInput {
  SizeConstraintSetId: String!
  ChangeToken: String!
}

type AwsWafDeleteSizeConstraintSetOutput {
  ChangeToken: String
}

input AwsWafDeleteSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
  ChangeToken: String!
}

type AwsWafDeleteSqlInjectionMatchSetOutput {
  ChangeToken: String
}

input AwsWafDeleteWebACLInput {
  WebACLId: String!
  ChangeToken: String!
}

type AwsWafDeleteWebACLOutput {
  ChangeToken: String
}

input AwsWafDeleteXssMatchSetInput {
  XssMatchSetId: String!
  ChangeToken: String!
}

type AwsWafDeleteXssMatchSetOutput {
  ChangeToken: String
}

input AwsWafGetByteMatchSetInput {
  ByteMatchSetId: String!
}

type AwsWafGetByteMatchSetOutput {
  ByteMatchSet: AwsWafS5
}

type AwsWafGetChangeTokenOutput {
  ChangeToken: String
}

input AwsWafGetChangeTokenStatusInput {
  ChangeToken: String!
}

type AwsWafGetChangeTokenStatusOutput {
  ChangeTokenStatus: String
}

input AwsWafGetGeoMatchSetInput {
  GeoMatchSetId: String!
}

type AwsWafGetGeoMatchSetOutput {
  GeoMatchSet: AwsWafSh
}

input AwsWafGetIPSetInput {
  IPSetId: String!
}

type AwsWafGetIPSetOutput {
  IPSet: AwsWafSo
}

input AwsWafGetRateBasedRuleInput {
  RuleId: String!
}

input AwsWafGetRateBasedRuleManagedKeysInput {
  RuleId: String!
  NextMarker: String
}

type AwsWafGetRateBasedRuleManagedKeysOutput {
  ManagedKeys: [String]
  NextMarker: String
}

type AwsWafGetRateBasedRuleOutput {
  Rule: AwsWafSy
}

input AwsWafGetRegexMatchSetInput {
  RegexMatchSetId: String!
}

type AwsWafGetRegexMatchSetOutput {
  RegexMatchSet: AwsWafS15
}

input AwsWafGetRegexPatternSetInput {
  RegexPatternSetId: String!
}

type AwsWafGetRegexPatternSetOutput {
  RegexPatternSet: AwsWafS1a
}

input AwsWafGetRuleGroupInput {
  RuleGroupId: String!
}

type AwsWafGetRuleGroupOutput {
  RuleGroup: AwsWafS1i
}

input AwsWafGetRuleInput {
  RuleId: String!
}

type AwsWafGetRuleOutput {
  Rule: AwsWafS1f
}

input AwsWafGetSampledRequestsInput {
  WebAclId: String!
  RuleId: String!
  TimeWindow: AwsWafS3qInput!
  MaxItems: JSON!
}

type AwsWafGetSampledRequestsOutput {
  SampledRequests: [AwsWafGetSampledRequestsOutputSampledRequests]
  PopulationSize: JSON
  TimeWindow: AwsWafS3q
}

type AwsWafGetSampledRequestsOutputSampledRequests {
  Request: AwsWafGetSampledRequestsOutputSampledRequestsRequest!
  Weight: JSON!
  Timestamp: Date
  Action: String
  RuleWithinRuleGroup: String
}

type AwsWafGetSampledRequestsOutputSampledRequestsRequest {
  ClientIP: String
  Country: String
  URI: String
  Method: String
  HTTPVersion: String
  Headers: [AwsWafGetSampledRequestsOutputSampledRequestsRequestHeaders]
}

type AwsWafGetSampledRequestsOutputSampledRequestsRequestHeaders {
  Name: String
  Value: String
}

input AwsWafGetSizeConstraintSetInput {
  SizeConstraintSetId: String!
}

type AwsWafGetSizeConstraintSetOutput {
  SizeConstraintSet: AwsWafS1l
}

input AwsWafGetSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
}

type AwsWafGetSqlInjectionMatchSetOutput {
  SqlInjectionMatchSet: AwsWafS1s
}

input AwsWafGetWebACLInput {
  WebACLId: String!
}

type AwsWafGetWebACLOutput {
  WebACL: AwsWafS1z
}

input AwsWafGetXssMatchSetInput {
  XssMatchSetId: String!
}

type AwsWafGetXssMatchSetOutput {
  XssMatchSet: AwsWafS28
}

input AwsWafListActivatedRulesInRuleGroupInput {
  RuleGroupId: String
  NextMarker: String
  Limit: Int
}

type AwsWafListActivatedRulesInRuleGroupOutput {
  NextMarker: String
  ActivatedRules: [AwsWafS21]
}

input AwsWafListByteMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListByteMatchSetsOutput {
  NextMarker: String
  ByteMatchSets: [AwsWafListByteMatchSetsOutputByteMatchSets]
}

type AwsWafListByteMatchSetsOutputByteMatchSets {
  ByteMatchSetId: String!
  Name: String!
}

input AwsWafListGeoMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListGeoMatchSetsOutput {
  NextMarker: String
  GeoMatchSets: [AwsWafListGeoMatchSetsOutputGeoMatchSets]
}

type AwsWafListGeoMatchSetsOutputGeoMatchSets {
  GeoMatchSetId: String!
  Name: String!
}

input AwsWafListIPSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListIPSetsOutput {
  NextMarker: String
  IPSets: [AwsWafListIPSetsOutputIPSets]
}

type AwsWafListIPSetsOutputIPSets {
  IPSetId: String!
  Name: String!
}

input AwsWafListRateBasedRulesInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListRateBasedRulesOutput {
  NextMarker: String
  Rules: [AwsWafS4y]
}

input AwsWafListRegexMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListRegexMatchSetsOutput {
  NextMarker: String
  RegexMatchSets: [AwsWafListRegexMatchSetsOutputRegexMatchSets]
}

type AwsWafListRegexMatchSetsOutputRegexMatchSets {
  RegexMatchSetId: String!
  Name: String!
}

input AwsWafListRegexPatternSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListRegexPatternSetsOutput {
  NextMarker: String
  RegexPatternSets: [AwsWafListRegexPatternSetsOutputRegexPatternSets]
}

type AwsWafListRegexPatternSetsOutputRegexPatternSets {
  RegexPatternSetId: String!
  Name: String!
}

input AwsWafListRuleGroupsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListRuleGroupsOutput {
  NextMarker: String
  RuleGroups: [AwsWafListRuleGroupsOutputRuleGroups]
}

type AwsWafListRuleGroupsOutputRuleGroups {
  RuleGroupId: String!
  Name: String!
}

input AwsWafListRulesInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListRulesOutput {
  NextMarker: String
  Rules: [AwsWafS4y]
}

input AwsWafListSizeConstraintSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListSizeConstraintSetsOutput {
  NextMarker: String
  SizeConstraintSets: [AwsWafListSizeConstraintSetsOutputSizeConstraintSets]
}

type AwsWafListSizeConstraintSetsOutputSizeConstraintSets {
  SizeConstraintSetId: String!
  Name: String!
}

input AwsWafListSqlInjectionMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListSqlInjectionMatchSetsOutput {
  NextMarker: String
  SqlInjectionMatchSets: [AwsWafListSqlInjectionMatchSetsOutputSqlInjectionMatchSets]
}

type AwsWafListSqlInjectionMatchSetsOutputSqlInjectionMatchSets {
  SqlInjectionMatchSetId: String!
  Name: String!
}

input AwsWafListSubscribedRuleGroupsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListSubscribedRuleGroupsOutput {
  NextMarker: String
  RuleGroups: [AwsWafListSubscribedRuleGroupsOutputRuleGroups]
}

type AwsWafListSubscribedRuleGroupsOutputRuleGroups {
  RuleGroupId: String!
  Name: String!
  MetricName: String!
}

input AwsWafListWebACLsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListWebACLsOutput {
  NextMarker: String
  WebACLs: [AwsWafListWebACLsOutputWebACLs]
}

type AwsWafListWebACLsOutputWebACLs {
  WebACLId: String!
  Name: String!
}

input AwsWafListXssMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafListXssMatchSetsOutput {
  NextMarker: String
  XssMatchSets: [AwsWafListXssMatchSetsOutputXssMatchSets]
}

type AwsWafListXssMatchSetsOutputXssMatchSets {
  XssMatchSetId: String!
  Name: String!
}

# AWS WAF Regional (2016-11-28)
type AwsWafregional {
  # wafregional.AssociateWebACL
  AssociateWebACL(input: AwsWafregionalAssociateWebACLInput!): JSON

  # wafregional.CreateByteMatchSet
  CreateByteMatchSet(input: AwsWafregionalCreateByteMatchSetInput!): AwsWafregionalCreateByteMatchSetOutput

  # wafregional.CreateGeoMatchSet
  CreateGeoMatchSet(input: AwsWafregionalCreateGeoMatchSetInput!): AwsWafregionalCreateGeoMatchSetOutput

  # wafregional.CreateIPSet
  CreateIPSet(input: AwsWafregionalCreateIPSetInput!): AwsWafregionalCreateIPSetOutput

  # wafregional.CreateRateBasedRule
  CreateRateBasedRule(input: AwsWafregionalCreateRateBasedRuleInput!): AwsWafregionalCreateRateBasedRuleOutput

  # wafregional.CreateRegexMatchSet
  CreateRegexMatchSet(input: AwsWafregionalCreateRegexMatchSetInput!): AwsWafregionalCreateRegexMatchSetOutput

  # wafregional.CreateRegexPatternSet
  CreateRegexPatternSet(input: AwsWafregionalCreateRegexPatternSetInput!): AwsWafregionalCreateRegexPatternSetOutput

  # wafregional.CreateRule
  CreateRule(input: AwsWafregionalCreateRuleInput!): AwsWafregionalCreateRuleOutput

  # wafregional.CreateRuleGroup
  CreateRuleGroup(input: AwsWafregionalCreateRuleGroupInput!): AwsWafregionalCreateRuleGroupOutput

  # wafregional.CreateSizeConstraintSet
  CreateSizeConstraintSet(input: AwsWafregionalCreateSizeConstraintSetInput!): AwsWafregionalCreateSizeConstraintSetOutput

  # wafregional.CreateSqlInjectionMatchSet
  CreateSqlInjectionMatchSet(input: AwsWafregionalCreateSqlInjectionMatchSetInput!): AwsWafregionalCreateSqlInjectionMatchSetOutput

  # wafregional.CreateWebACL
  CreateWebACL(input: AwsWafregionalCreateWebACLInput!): AwsWafregionalCreateWebACLOutput

  # wafregional.CreateXssMatchSet
  CreateXssMatchSet(input: AwsWafregionalCreateXssMatchSetInput!): AwsWafregionalCreateXssMatchSetOutput

  # wafregional.DeleteByteMatchSet
  DeleteByteMatchSet(input: AwsWafregionalDeleteByteMatchSetInput!): AwsWafregionalDeleteByteMatchSetOutput

  # wafregional.DeleteGeoMatchSet
  DeleteGeoMatchSet(input: AwsWafregionalDeleteGeoMatchSetInput!): AwsWafregionalDeleteGeoMatchSetOutput

  # wafregional.DeleteIPSet
  DeleteIPSet(input: AwsWafregionalDeleteIPSetInput!): AwsWafregionalDeleteIPSetOutput

  # wafregional.DeleteRateBasedRule
  DeleteRateBasedRule(input: AwsWafregionalDeleteRateBasedRuleInput!): AwsWafregionalDeleteRateBasedRuleOutput

  # wafregional.DeleteRegexMatchSet
  DeleteRegexMatchSet(input: AwsWafregionalDeleteRegexMatchSetInput!): AwsWafregionalDeleteRegexMatchSetOutput

  # wafregional.DeleteRegexPatternSet
  DeleteRegexPatternSet(input: AwsWafregionalDeleteRegexPatternSetInput!): AwsWafregionalDeleteRegexPatternSetOutput

  # wafregional.DeleteRule
  DeleteRule(input: AwsWafregionalDeleteRuleInput!): AwsWafregionalDeleteRuleOutput

  # wafregional.DeleteRuleGroup
  DeleteRuleGroup(input: AwsWafregionalDeleteRuleGroupInput!): AwsWafregionalDeleteRuleGroupOutput

  # wafregional.DeleteSizeConstraintSet
  DeleteSizeConstraintSet(input: AwsWafregionalDeleteSizeConstraintSetInput!): AwsWafregionalDeleteSizeConstraintSetOutput

  # wafregional.DeleteSqlInjectionMatchSet
  DeleteSqlInjectionMatchSet(input: AwsWafregionalDeleteSqlInjectionMatchSetInput!): AwsWafregionalDeleteSqlInjectionMatchSetOutput

  # wafregional.DeleteWebACL
  DeleteWebACL(input: AwsWafregionalDeleteWebACLInput!): AwsWafregionalDeleteWebACLOutput

  # wafregional.DeleteXssMatchSet
  DeleteXssMatchSet(input: AwsWafregionalDeleteXssMatchSetInput!): AwsWafregionalDeleteXssMatchSetOutput

  # wafregional.DisassociateWebACL
  DisassociateWebACL(input: AwsWafregionalDisassociateWebACLInput!): JSON

  # wafregional.GetByteMatchSet
  GetByteMatchSet(input: AwsWafregionalGetByteMatchSetInput!): AwsWafregionalGetByteMatchSetOutput

  # wafregional.GetChangeToken
  GetChangeToken(input: JSON): AwsWafregionalGetChangeTokenOutput

  # wafregional.GetChangeTokenStatus
  GetChangeTokenStatus(input: AwsWafregionalGetChangeTokenStatusInput!): AwsWafregionalGetChangeTokenStatusOutput

  # wafregional.GetGeoMatchSet
  GetGeoMatchSet(input: AwsWafregionalGetGeoMatchSetInput!): AwsWafregionalGetGeoMatchSetOutput

  # wafregional.GetIPSet
  GetIPSet(input: AwsWafregionalGetIPSetInput!): AwsWafregionalGetIPSetOutput

  # wafregional.GetRateBasedRule
  GetRateBasedRule(input: AwsWafregionalGetRateBasedRuleInput!): AwsWafregionalGetRateBasedRuleOutput

  # wafregional.GetRateBasedRuleManagedKeys
  GetRateBasedRuleManagedKeys(input: AwsWafregionalGetRateBasedRuleManagedKeysInput!): AwsWafregionalGetRateBasedRuleManagedKeysOutput

  # wafregional.GetRegexMatchSet
  GetRegexMatchSet(input: AwsWafregionalGetRegexMatchSetInput!): AwsWafregionalGetRegexMatchSetOutput

  # wafregional.GetRegexPatternSet
  GetRegexPatternSet(input: AwsWafregionalGetRegexPatternSetInput!): AwsWafregionalGetRegexPatternSetOutput

  # wafregional.GetRule
  GetRule(input: AwsWafregionalGetRuleInput!): AwsWafregionalGetRuleOutput

  # wafregional.GetRuleGroup
  GetRuleGroup(input: AwsWafregionalGetRuleGroupInput!): AwsWafregionalGetRuleGroupOutput

  # wafregional.GetSampledRequests
  GetSampledRequests(input: AwsWafregionalGetSampledRequestsInput!): AwsWafregionalGetSampledRequestsOutput

  # wafregional.GetSizeConstraintSet
  GetSizeConstraintSet(input: AwsWafregionalGetSizeConstraintSetInput!): AwsWafregionalGetSizeConstraintSetOutput

  # wafregional.GetSqlInjectionMatchSet
  GetSqlInjectionMatchSet(input: AwsWafregionalGetSqlInjectionMatchSetInput!): AwsWafregionalGetSqlInjectionMatchSetOutput

  # wafregional.GetWebACL
  GetWebACL(input: AwsWafregionalGetWebACLInput!): AwsWafregionalGetWebACLOutput

  # wafregional.GetWebACLForResource
  GetWebACLForResource(input: AwsWafregionalGetWebACLForResourceInput!): AwsWafregionalGetWebACLForResourceOutput

  # wafregional.GetXssMatchSet
  GetXssMatchSet(input: AwsWafregionalGetXssMatchSetInput!): AwsWafregionalGetXssMatchSetOutput

  # wafregional.ListActivatedRulesInRuleGroup
  ListActivatedRulesInRuleGroup(input: AwsWafregionalListActivatedRulesInRuleGroupInput): AwsWafregionalListActivatedRulesInRuleGroupOutput

  # wafregional.ListByteMatchSets
  ListByteMatchSets(input: AwsWafregionalListByteMatchSetsInput): AwsWafregionalListByteMatchSetsOutput

  # wafregional.ListGeoMatchSets
  ListGeoMatchSets(input: AwsWafregionalListGeoMatchSetsInput): AwsWafregionalListGeoMatchSetsOutput

  # wafregional.ListIPSets
  ListIPSets(input: AwsWafregionalListIPSetsInput): AwsWafregionalListIPSetsOutput

  # wafregional.ListRateBasedRules
  ListRateBasedRules(input: AwsWafregionalListRateBasedRulesInput): AwsWafregionalListRateBasedRulesOutput

  # wafregional.ListRegexMatchSets
  ListRegexMatchSets(input: AwsWafregionalListRegexMatchSetsInput): AwsWafregionalListRegexMatchSetsOutput

  # wafregional.ListRegexPatternSets
  ListRegexPatternSets(input: AwsWafregionalListRegexPatternSetsInput): AwsWafregionalListRegexPatternSetsOutput

  # wafregional.ListResourcesForWebACL
  ListResourcesForWebACL(input: AwsWafregionalListResourcesForWebACLInput!): AwsWafregionalListResourcesForWebACLOutput

  # wafregional.ListRuleGroups
  ListRuleGroups(input: AwsWafregionalListRuleGroupsInput): AwsWafregionalListRuleGroupsOutput

  # wafregional.ListRules
  ListRules(input: AwsWafregionalListRulesInput): AwsWafregionalListRulesOutput

  # wafregional.ListSizeConstraintSets
  ListSizeConstraintSets(input: AwsWafregionalListSizeConstraintSetsInput): AwsWafregionalListSizeConstraintSetsOutput

  # wafregional.ListSqlInjectionMatchSets
  ListSqlInjectionMatchSets(input: AwsWafregionalListSqlInjectionMatchSetsInput): AwsWafregionalListSqlInjectionMatchSetsOutput

  # wafregional.ListSubscribedRuleGroups
  ListSubscribedRuleGroups(input: AwsWafregionalListSubscribedRuleGroupsInput): AwsWafregionalListSubscribedRuleGroupsOutput

  # wafregional.ListWebACLs
  ListWebACLs(input: AwsWafregionalListWebACLsInput): AwsWafregionalListWebACLsOutput

  # wafregional.ListXssMatchSets
  ListXssMatchSets(input: AwsWafregionalListXssMatchSetsInput): AwsWafregionalListXssMatchSetsOutput

  # wafregional.UpdateByteMatchSet
  UpdateByteMatchSet(input: AwsWafregionalUpdateByteMatchSetInput!): AwsWafregionalUpdateByteMatchSetOutput

  # wafregional.UpdateGeoMatchSet
  UpdateGeoMatchSet(input: AwsWafregionalUpdateGeoMatchSetInput!): AwsWafregionalUpdateGeoMatchSetOutput

  # wafregional.UpdateIPSet
  UpdateIPSet(input: AwsWafregionalUpdateIPSetInput!): AwsWafregionalUpdateIPSetOutput

  # wafregional.UpdateRateBasedRule
  UpdateRateBasedRule(input: AwsWafregionalUpdateRateBasedRuleInput!): AwsWafregionalUpdateRateBasedRuleOutput

  # wafregional.UpdateRegexMatchSet
  UpdateRegexMatchSet(input: AwsWafregionalUpdateRegexMatchSetInput!): AwsWafregionalUpdateRegexMatchSetOutput

  # wafregional.UpdateRegexPatternSet
  UpdateRegexPatternSet(input: AwsWafregionalUpdateRegexPatternSetInput!): AwsWafregionalUpdateRegexPatternSetOutput

  # wafregional.UpdateRule
  UpdateRule(input: AwsWafregionalUpdateRuleInput!): AwsWafregionalUpdateRuleOutput

  # wafregional.UpdateRuleGroup
  UpdateRuleGroup(input: AwsWafregionalUpdateRuleGroupInput!): AwsWafregionalUpdateRuleGroupOutput

  # wafregional.UpdateSizeConstraintSet
  UpdateSizeConstraintSet(input: AwsWafregionalUpdateSizeConstraintSetInput!): AwsWafregionalUpdateSizeConstraintSetOutput

  # wafregional.UpdateSqlInjectionMatchSet
  UpdateSqlInjectionMatchSet(input: AwsWafregionalUpdateSqlInjectionMatchSetInput!): AwsWafregionalUpdateSqlInjectionMatchSetOutput

  # wafregional.UpdateWebACL
  UpdateWebACL(input: AwsWafregionalUpdateWebACLInput!): AwsWafregionalUpdateWebACLOutput

  # wafregional.UpdateXssMatchSet
  UpdateXssMatchSet(input: AwsWafregionalUpdateXssMatchSetInput!): AwsWafregionalUpdateXssMatchSetOutput
}

input AwsWafregionalAssociateWebACLInput {
  WebACLId: String!
  ResourceArn: String!
}

input AwsWafregionalCreateByteMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafregionalCreateByteMatchSetOutput {
  ByteMatchSet: AwsWafregionalS9
  ChangeToken: String
}

input AwsWafregionalCreateGeoMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafregionalCreateGeoMatchSetOutput {
  GeoMatchSet: AwsWafregionalSk
  ChangeToken: String
}

input AwsWafregionalCreateIPSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafregionalCreateIPSetOutput {
  IPSet: AwsWafregionalSr
  ChangeToken: String
}

input AwsWafregionalCreateRateBasedRuleInput {
  Name: String!
  MetricName: String!
  RateKey: String!
  RateLimit: JSON!
  ChangeToken: String!
}

type AwsWafregionalCreateRateBasedRuleOutput {
  Rule: AwsWafregionalS11
  ChangeToken: String
}

input AwsWafregionalCreateRegexMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafregionalCreateRegexMatchSetOutput {
  RegexMatchSet: AwsWafregionalS18
  ChangeToken: String
}

input AwsWafregionalCreateRegexPatternSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafregionalCreateRegexPatternSetOutput {
  RegexPatternSet: AwsWafregionalS1d
  ChangeToken: String
}

input AwsWafregionalCreateRuleGroupInput {
  Name: String!
  MetricName: String!
  ChangeToken: String!
}

type AwsWafregionalCreateRuleGroupOutput {
  RuleGroup: AwsWafregionalS1l
  ChangeToken: String
}

input AwsWafregionalCreateRuleInput {
  Name: String!
  MetricName: String!
  ChangeToken: String!
}

type AwsWafregionalCreateRuleOutput {
  Rule: AwsWafregionalS1i
  ChangeToken: String
}

input AwsWafregionalCreateSizeConstraintSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafregionalCreateSizeConstraintSetOutput {
  SizeConstraintSet: AwsWafregionalS1o
  ChangeToken: String
}

input AwsWafregionalCreateSqlInjectionMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafregionalCreateSqlInjectionMatchSetOutput {
  SqlInjectionMatchSet: AwsWafregionalS1v
  ChangeToken: String
}

input AwsWafregionalCreateWebACLInput {
  Name: String!
  MetricName: String!
  DefaultAction: AwsWafregionalS1zInput!
  ChangeToken: String!
}

type AwsWafregionalCreateWebACLOutput {
  WebACL: AwsWafregionalS22
  ChangeToken: String
}

input AwsWafregionalCreateXssMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWafregionalCreateXssMatchSetOutput {
  XssMatchSet: AwsWafregionalS2b
  ChangeToken: String
}

input AwsWafregionalDeleteByteMatchSetInput {
  ByteMatchSetId: String!
  ChangeToken: String!
}

type AwsWafregionalDeleteByteMatchSetOutput {
  ChangeToken: String
}

input AwsWafregionalDeleteGeoMatchSetInput {
  GeoMatchSetId: String!
  ChangeToken: String!
}

type AwsWafregionalDeleteGeoMatchSetOutput {
  ChangeToken: String
}

input AwsWafregionalDeleteIPSetInput {
  IPSetId: String!
  ChangeToken: String!
}

type AwsWafregionalDeleteIPSetOutput {
  ChangeToken: String
}

input AwsWafregionalDeleteRateBasedRuleInput {
  RuleId: String!
  ChangeToken: String!
}

type AwsWafregionalDeleteRateBasedRuleOutput {
  ChangeToken: String
}

input AwsWafregionalDeleteRegexMatchSetInput {
  RegexMatchSetId: String!
  ChangeToken: String!
}

type AwsWafregionalDeleteRegexMatchSetOutput {
  ChangeToken: String
}

input AwsWafregionalDeleteRegexPatternSetInput {
  RegexPatternSetId: String!
  ChangeToken: String!
}

type AwsWafregionalDeleteRegexPatternSetOutput {
  ChangeToken: String
}

input AwsWafregionalDeleteRuleGroupInput {
  RuleGroupId: String!
  ChangeToken: String!
}

type AwsWafregionalDeleteRuleGroupOutput {
  ChangeToken: String
}

input AwsWafregionalDeleteRuleInput {
  RuleId: String!
  ChangeToken: String!
}

type AwsWafregionalDeleteRuleOutput {
  ChangeToken: String
}

input AwsWafregionalDeleteSizeConstraintSetInput {
  SizeConstraintSetId: String!
  ChangeToken: String!
}

type AwsWafregionalDeleteSizeConstraintSetOutput {
  ChangeToken: String
}

input AwsWafregionalDeleteSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
  ChangeToken: String!
}

type AwsWafregionalDeleteSqlInjectionMatchSetOutput {
  ChangeToken: String
}

input AwsWafregionalDeleteWebACLInput {
  WebACLId: String!
  ChangeToken: String!
}

type AwsWafregionalDeleteWebACLOutput {
  ChangeToken: String
}

input AwsWafregionalDeleteXssMatchSetInput {
  XssMatchSetId: String!
  ChangeToken: String!
}

type AwsWafregionalDeleteXssMatchSetOutput {
  ChangeToken: String
}

input AwsWafregionalDisassociateWebACLInput {
  ResourceArn: String!
}

input AwsWafregionalGetByteMatchSetInput {
  ByteMatchSetId: String!
}

type AwsWafregionalGetByteMatchSetOutput {
  ByteMatchSet: AwsWafregionalS9
}

type AwsWafregionalGetChangeTokenOutput {
  ChangeToken: String
}

input AwsWafregionalGetChangeTokenStatusInput {
  ChangeToken: String!
}

type AwsWafregionalGetChangeTokenStatusOutput {
  ChangeTokenStatus: String
}

input AwsWafregionalGetGeoMatchSetInput {
  GeoMatchSetId: String!
}

type AwsWafregionalGetGeoMatchSetOutput {
  GeoMatchSet: AwsWafregionalSk
}

input AwsWafregionalGetIPSetInput {
  IPSetId: String!
}

type AwsWafregionalGetIPSetOutput {
  IPSet: AwsWafregionalSr
}

input AwsWafregionalGetRateBasedRuleInput {
  RuleId: String!
}

input AwsWafregionalGetRateBasedRuleManagedKeysInput {
  RuleId: String!
  NextMarker: String
}

type AwsWafregionalGetRateBasedRuleManagedKeysOutput {
  ManagedKeys: [String]
  NextMarker: String
}

type AwsWafregionalGetRateBasedRuleOutput {
  Rule: AwsWafregionalS11
}

input AwsWafregionalGetRegexMatchSetInput {
  RegexMatchSetId: String!
}

type AwsWafregionalGetRegexMatchSetOutput {
  RegexMatchSet: AwsWafregionalS18
}

input AwsWafregionalGetRegexPatternSetInput {
  RegexPatternSetId: String!
}

type AwsWafregionalGetRegexPatternSetOutput {
  RegexPatternSet: AwsWafregionalS1d
}

input AwsWafregionalGetRuleGroupInput {
  RuleGroupId: String!
}

type AwsWafregionalGetRuleGroupOutput {
  RuleGroup: AwsWafregionalS1l
}

input AwsWafregionalGetRuleInput {
  RuleId: String!
}

type AwsWafregionalGetRuleOutput {
  Rule: AwsWafregionalS1i
}

input AwsWafregionalGetSampledRequestsInput {
  WebAclId: String!
  RuleId: String!
  TimeWindow: AwsWafregionalS3vInput!
  MaxItems: JSON!
}

type AwsWafregionalGetSampledRequestsOutput {
  SampledRequests: [AwsWafregionalGetSampledRequestsOutputSampledRequests]
  PopulationSize: JSON
  TimeWindow: AwsWafregionalS3v
}

type AwsWafregionalGetSampledRequestsOutputSampledRequests {
  Request: AwsWafregionalGetSampledRequestsOutputSampledRequestsRequest!
  Weight: JSON!
  Timestamp: Date
  Action: String
  RuleWithinRuleGroup: String
}

type AwsWafregionalGetSampledRequestsOutputSampledRequestsRequest {
  ClientIP: String
  Country: String
  URI: String
  Method: String
  HTTPVersion: String
  Headers: [AwsWafregionalGetSampledRequestsOutputSampledRequestsRequestHeaders]
}

type AwsWafregionalGetSampledRequestsOutputSampledRequestsRequestHeaders {
  Name: String
  Value: String
}

input AwsWafregionalGetSizeConstraintSetInput {
  SizeConstraintSetId: String!
}

type AwsWafregionalGetSizeConstraintSetOutput {
  SizeConstraintSet: AwsWafregionalS1o
}

input AwsWafregionalGetSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
}

type AwsWafregionalGetSqlInjectionMatchSetOutput {
  SqlInjectionMatchSet: AwsWafregionalS1v
}

input AwsWafregionalGetWebACLForResourceInput {
  ResourceArn: String!
}

type AwsWafregionalGetWebACLForResourceOutput {
  WebACLSummary: AwsWafregionalS4m
}

input AwsWafregionalGetWebACLInput {
  WebACLId: String!
}

type AwsWafregionalGetWebACLOutput {
  WebACL: AwsWafregionalS22
}

input AwsWafregionalGetXssMatchSetInput {
  XssMatchSetId: String!
}

type AwsWafregionalGetXssMatchSetOutput {
  XssMatchSet: AwsWafregionalS2b
}

input AwsWafregionalListActivatedRulesInRuleGroupInput {
  RuleGroupId: String
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListActivatedRulesInRuleGroupOutput {
  NextMarker: String
  ActivatedRules: [AwsWafregionalS24]
}

input AwsWafregionalListByteMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListByteMatchSetsOutput {
  NextMarker: String
  ByteMatchSets: [AwsWafregionalListByteMatchSetsOutputByteMatchSets]
}

type AwsWafregionalListByteMatchSetsOutputByteMatchSets {
  ByteMatchSetId: String!
  Name: String!
}

input AwsWafregionalListGeoMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListGeoMatchSetsOutput {
  NextMarker: String
  GeoMatchSets: [AwsWafregionalListGeoMatchSetsOutputGeoMatchSets]
}

type AwsWafregionalListGeoMatchSetsOutputGeoMatchSets {
  GeoMatchSetId: String!
  Name: String!
}

input AwsWafregionalListIPSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListIPSetsOutput {
  NextMarker: String
  IPSets: [AwsWafregionalListIPSetsOutputIPSets]
}

type AwsWafregionalListIPSetsOutputIPSets {
  IPSetId: String!
  Name: String!
}

input AwsWafregionalListRateBasedRulesInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListRateBasedRulesOutput {
  NextMarker: String
  Rules: [AwsWafregionalS56]
}

input AwsWafregionalListRegexMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListRegexMatchSetsOutput {
  NextMarker: String
  RegexMatchSets: [AwsWafregionalListRegexMatchSetsOutputRegexMatchSets]
}

type AwsWafregionalListRegexMatchSetsOutputRegexMatchSets {
  RegexMatchSetId: String!
  Name: String!
}

input AwsWafregionalListRegexPatternSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListRegexPatternSetsOutput {
  NextMarker: String
  RegexPatternSets: [AwsWafregionalListRegexPatternSetsOutputRegexPatternSets]
}

type AwsWafregionalListRegexPatternSetsOutputRegexPatternSets {
  RegexPatternSetId: String!
  Name: String!
}

input AwsWafregionalListResourcesForWebACLInput {
  WebACLId: String!
}

type AwsWafregionalListResourcesForWebACLOutput {
  ResourceArns: [String]
}

input AwsWafregionalListRuleGroupsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListRuleGroupsOutput {
  NextMarker: String
  RuleGroups: [AwsWafregionalListRuleGroupsOutputRuleGroups]
}

type AwsWafregionalListRuleGroupsOutputRuleGroups {
  RuleGroupId: String!
  Name: String!
}

input AwsWafregionalListRulesInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListRulesOutput {
  NextMarker: String
  Rules: [AwsWafregionalS56]
}

input AwsWafregionalListSizeConstraintSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListSizeConstraintSetsOutput {
  NextMarker: String
  SizeConstraintSets: [AwsWafregionalListSizeConstraintSetsOutputSizeConstraintSets]
}

type AwsWafregionalListSizeConstraintSetsOutputSizeConstraintSets {
  SizeConstraintSetId: String!
  Name: String!
}

input AwsWafregionalListSqlInjectionMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListSqlInjectionMatchSetsOutput {
  NextMarker: String
  SqlInjectionMatchSets: [AwsWafregionalListSqlInjectionMatchSetsOutputSqlInjectionMatchSets]
}

type AwsWafregionalListSqlInjectionMatchSetsOutputSqlInjectionMatchSets {
  SqlInjectionMatchSetId: String!
  Name: String!
}

input AwsWafregionalListSubscribedRuleGroupsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListSubscribedRuleGroupsOutput {
  NextMarker: String
  RuleGroups: [AwsWafregionalListSubscribedRuleGroupsOutputRuleGroups]
}

type AwsWafregionalListSubscribedRuleGroupsOutputRuleGroups {
  RuleGroupId: String!
  Name: String!
  MetricName: String!
}

input AwsWafregionalListWebACLsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListWebACLsOutput {
  NextMarker: String
  WebACLs: [AwsWafregionalS4m]
}

input AwsWafregionalListXssMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWafregionalListXssMatchSetsOutput {
  NextMarker: String
  XssMatchSets: [AwsWafregionalListXssMatchSetsOutputXssMatchSets]
}

type AwsWafregionalListXssMatchSetsOutputXssMatchSets {
  XssMatchSetId: String!
  Name: String!
}

type AwsWafregionalS11 {
  RuleId: String!
  Name: String
  MetricName: String
  MatchPredicates: [AwsWafregionalS13]!
  RateKey: String!
  RateLimit: JSON!
}

type AwsWafregionalS13 {
  Negated: Boolean!
  Type: String!
  DataId: String!
}

input AwsWafregionalS13Input {
  Negated: Boolean!
  Type: String!
  DataId: String!
}

type AwsWafregionalS18 {
  RegexMatchSetId: String
  Name: String
  RegexMatchTuples: [AwsWafregionalS1a]
}

type AwsWafregionalS1a {
  FieldToMatch: AwsWafregionalSc!
  TextTransformation: String!
  RegexPatternSetId: String!
}

input AwsWafregionalS1aInput {
  FieldToMatch: AwsWafregionalScInput!
  TextTransformation: String!
  RegexPatternSetId: String!
}

type AwsWafregionalS1d {
  RegexPatternSetId: String!
  Name: String
  RegexPatternStrings: [String]!
}

type AwsWafregionalS1i {
  RuleId: String!
  Name: String
  MetricName: String
  Predicates: [AwsWafregionalS13]!
}

type AwsWafregionalS1l {
  RuleGroupId: String!
  Name: String
  MetricName: String
}

type AwsWafregionalS1o {
  SizeConstraintSetId: String!
  Name: String
  SizeConstraints: [AwsWafregionalS1q]!
}

type AwsWafregionalS1q {
  FieldToMatch: AwsWafregionalSc!
  TextTransformation: String!
  ComparisonOperator: String!
  Size: JSON!
}

input AwsWafregionalS1qInput {
  FieldToMatch: AwsWafregionalScInput!
  TextTransformation: String!
  ComparisonOperator: String!
  Size: JSON!
}

type AwsWafregionalS1v {
  SqlInjectionMatchSetId: String!
  Name: String
  SqlInjectionMatchTuples: [AwsWafregionalS1x]!
}

type AwsWafregionalS1x {
  FieldToMatch: AwsWafregionalSc!
  TextTransformation: String!
}

input AwsWafregionalS1xInput {
  FieldToMatch: AwsWafregionalScInput!
  TextTransformation: String!
}

type AwsWafregionalS1z {
  Type: String!
}

input AwsWafregionalS1zInput {
  Type: String!
}

type AwsWafregionalS22 {
  WebACLId: String!
  Name: String
  MetricName: String
  DefaultAction: AwsWafregionalS1z!
  Rules: [AwsWafregionalS24]!
}

type AwsWafregionalS24 {
  Priority: Int!
  RuleId: String!
  Action: AwsWafregionalS1z
  OverrideAction: AwsWafregionalS24OverrideAction
  Type: String
}

input AwsWafregionalS24Input {
  Priority: Int!
  RuleId: String!
  Action: AwsWafregionalS1zInput
  OverrideAction: AwsWafregionalS24OverrideActionInput
  Type: String
}

type AwsWafregionalS24OverrideAction {
  Type: String!
}

input AwsWafregionalS24OverrideActionInput {
  Type: String!
}

type AwsWafregionalS2b {
  XssMatchSetId: String!
  Name: String
  XssMatchTuples: [AwsWafregionalS2d]!
}

type AwsWafregionalS2d {
  FieldToMatch: AwsWafregionalSc!
  TextTransformation: String!
}

input AwsWafregionalS2dInput {
  FieldToMatch: AwsWafregionalScInput!
  TextTransformation: String!
}

type AwsWafregionalS3v {
  StartTime: Date!
  EndTime: Date!
}

input AwsWafregionalS3vInput {
  StartTime: Date!
  EndTime: Date!
}

type AwsWafregionalS4m {
  WebACLId: String!
  Name: String!
}

type AwsWafregionalS56 {
  RuleId: String!
  Name: String!
}

input AwsWafregionalS6mInput {
  Action: String!
  Predicate: AwsWafregionalS13Input!
}

type AwsWafregionalS9 {
  ByteMatchSetId: String!
  Name: String
  ByteMatchTuples: [AwsWafregionalSb]!
}

type AwsWafregionalSb {
  FieldToMatch: AwsWafregionalSc!
  TargetString: JSON!
  TextTransformation: String!
  PositionalConstraint: String!
}

input AwsWafregionalSbInput {
  FieldToMatch: AwsWafregionalScInput!
  TargetString: JSON!
  TextTransformation: String!
  PositionalConstraint: String!
}

type AwsWafregionalSc {
  Type: String!
  Data: String
}

input AwsWafregionalScInput {
  Type: String!
  Data: String
}

type AwsWafregionalSk {
  GeoMatchSetId: String!
  Name: String
  GeoMatchConstraints: [AwsWafregionalSm]!
}

type AwsWafregionalSm {
  Type: String!
  Value: String!
}

input AwsWafregionalSmInput {
  Type: String!
  Value: String!
}

type AwsWafregionalSr {
  IPSetId: String!
  Name: String
  IPSetDescriptors: [AwsWafregionalSt]!
}

type AwsWafregionalSt {
  Type: String!
  Value: String!
}

input AwsWafregionalStInput {
  Type: String!
  Value: String!
}

input AwsWafregionalUpdateByteMatchSetInput {
  ByteMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWafregionalUpdateByteMatchSetUpdatesInput]!
}

type AwsWafregionalUpdateByteMatchSetOutput {
  ChangeToken: String
}

input AwsWafregionalUpdateByteMatchSetUpdatesInput {
  Action: String!
  ByteMatchTuple: AwsWafregionalSbInput!
}

input AwsWafregionalUpdateGeoMatchSetInput {
  GeoMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWafregionalUpdateGeoMatchSetUpdatesInput]!
}

type AwsWafregionalUpdateGeoMatchSetOutput {
  ChangeToken: String
}

input AwsWafregionalUpdateGeoMatchSetUpdatesInput {
  Action: String!
  GeoMatchConstraint: AwsWafregionalSmInput!
}

input AwsWafregionalUpdateIPSetInput {
  IPSetId: String!
  ChangeToken: String!
  Updates: [AwsWafregionalUpdateIPSetUpdatesInput]!
}

type AwsWafregionalUpdateIPSetOutput {
  ChangeToken: String
}

input AwsWafregionalUpdateIPSetUpdatesInput {
  Action: String!
  IPSetDescriptor: AwsWafregionalStInput!
}

input AwsWafregionalUpdateRateBasedRuleInput {
  RuleId: String!
  ChangeToken: String!
  Updates: [AwsWafregionalS6mInput]!
  RateLimit: JSON!
}

type AwsWafregionalUpdateRateBasedRuleOutput {
  ChangeToken: String
}

input AwsWafregionalUpdateRegexMatchSetInput {
  RegexMatchSetId: String!
  Updates: [AwsWafregionalUpdateRegexMatchSetUpdatesInput]!
  ChangeToken: String!
}

type AwsWafregionalUpdateRegexMatchSetOutput {
  ChangeToken: String
}

input AwsWafregionalUpdateRegexMatchSetUpdatesInput {
  Action: String!
  RegexMatchTuple: AwsWafregionalS1aInput!
}

input AwsWafregionalUpdateRegexPatternSetInput {
  RegexPatternSetId: String!
  Updates: [AwsWafregionalUpdateRegexPatternSetUpdatesInput]!
  ChangeToken: String!
}

type AwsWafregionalUpdateRegexPatternSetOutput {
  ChangeToken: String
}

input AwsWafregionalUpdateRegexPatternSetUpdatesInput {
  Action: String!
  RegexPatternString: String!
}

input AwsWafregionalUpdateRuleGroupInput {
  RuleGroupId: String!
  Updates: [AwsWafregionalUpdateRuleGroupUpdatesInput]!
  ChangeToken: String!
}

type AwsWafregionalUpdateRuleGroupOutput {
  ChangeToken: String
}

input AwsWafregionalUpdateRuleGroupUpdatesInput {
  Action: String!
  ActivatedRule: AwsWafregionalS24Input!
}

input AwsWafregionalUpdateRuleInput {
  RuleId: String!
  ChangeToken: String!
  Updates: [AwsWafregionalS6mInput]!
}

type AwsWafregionalUpdateRuleOutput {
  ChangeToken: String
}

input AwsWafregionalUpdateSizeConstraintSetInput {
  SizeConstraintSetId: String!
  ChangeToken: String!
  Updates: [AwsWafregionalUpdateSizeConstraintSetUpdatesInput]!
}

type AwsWafregionalUpdateSizeConstraintSetOutput {
  ChangeToken: String
}

input AwsWafregionalUpdateSizeConstraintSetUpdatesInput {
  Action: String!
  SizeConstraint: AwsWafregionalS1qInput!
}

input AwsWafregionalUpdateSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWafregionalUpdateSqlInjectionMatchSetUpdatesInput]!
}

type AwsWafregionalUpdateSqlInjectionMatchSetOutput {
  ChangeToken: String
}

input AwsWafregionalUpdateSqlInjectionMatchSetUpdatesInput {
  Action: String!
  SqlInjectionMatchTuple: AwsWafregionalS1xInput!
}

input AwsWafregionalUpdateWebACLInput {
  WebACLId: String!
  ChangeToken: String!
  Updates: [AwsWafregionalUpdateWebACLUpdatesInput]
  DefaultAction: AwsWafregionalS1zInput
}

type AwsWafregionalUpdateWebACLOutput {
  ChangeToken: String
}

input AwsWafregionalUpdateWebACLUpdatesInput {
  Action: String!
  ActivatedRule: AwsWafregionalS24Input!
}

input AwsWafregionalUpdateXssMatchSetInput {
  XssMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWafregionalUpdateXssMatchSetUpdatesInput]!
}

type AwsWafregionalUpdateXssMatchSetOutput {
  ChangeToken: String
}

input AwsWafregionalUpdateXssMatchSetUpdatesInput {
  Action: String!
  XssMatchTuple: AwsWafregionalS2dInput!
}

type AwsWafS10 {
  Negated: Boolean!
  Type: String!
  DataId: String!
}

input AwsWafS10Input {
  Negated: Boolean!
  Type: String!
  DataId: String!
}

type AwsWafS15 {
  RegexMatchSetId: String
  Name: String
  RegexMatchTuples: [AwsWafS17]
}

type AwsWafS17 {
  FieldToMatch: AwsWafS9!
  TextTransformation: String!
  RegexPatternSetId: String!
}

input AwsWafS17Input {
  FieldToMatch: AwsWafS9Input!
  TextTransformation: String!
  RegexPatternSetId: String!
}

type AwsWafS1a {
  RegexPatternSetId: String!
  Name: String
  RegexPatternStrings: [String]!
}

type AwsWafS1f {
  RuleId: String!
  Name: String
  MetricName: String
  Predicates: [AwsWafS10]!
}

type AwsWafS1i {
  RuleGroupId: String!
  Name: String
  MetricName: String
}

type AwsWafS1l {
  SizeConstraintSetId: String!
  Name: String
  SizeConstraints: [AwsWafS1n]!
}

type AwsWafS1n {
  FieldToMatch: AwsWafS9!
  TextTransformation: String!
  ComparisonOperator: String!
  Size: JSON!
}

input AwsWafS1nInput {
  FieldToMatch: AwsWafS9Input!
  TextTransformation: String!
  ComparisonOperator: String!
  Size: JSON!
}

type AwsWafS1s {
  SqlInjectionMatchSetId: String!
  Name: String
  SqlInjectionMatchTuples: [AwsWafS1u]!
}

type AwsWafS1u {
  FieldToMatch: AwsWafS9!
  TextTransformation: String!
}

input AwsWafS1uInput {
  FieldToMatch: AwsWafS9Input!
  TextTransformation: String!
}

type AwsWafS1w {
  Type: String!
}

input AwsWafS1wInput {
  Type: String!
}

type AwsWafS1z {
  WebACLId: String!
  Name: String
  MetricName: String
  DefaultAction: AwsWafS1w!
  Rules: [AwsWafS21]!
}

type AwsWafS21 {
  Priority: Int!
  RuleId: String!
  Action: AwsWafS1w
  OverrideAction: AwsWafS21OverrideAction
  Type: String
}

input AwsWafS21Input {
  Priority: Int!
  RuleId: String!
  Action: AwsWafS1wInput
  OverrideAction: AwsWafS21OverrideActionInput
  Type: String
}

type AwsWafS21OverrideAction {
  Type: String!
}

input AwsWafS21OverrideActionInput {
  Type: String!
}

type AwsWafS28 {
  XssMatchSetId: String!
  Name: String
  XssMatchTuples: [AwsWafS2a]!
}

type AwsWafS2a {
  FieldToMatch: AwsWafS9!
  TextTransformation: String!
}

input AwsWafS2aInput {
  FieldToMatch: AwsWafS9Input!
  TextTransformation: String!
}

type AwsWafS3q {
  StartTime: Date!
  EndTime: Date!
}

input AwsWafS3qInput {
  StartTime: Date!
  EndTime: Date!
}

type AwsWafS4y {
  RuleId: String!
  Name: String!
}

type AwsWafS5 {
  ByteMatchSetId: String!
  Name: String
  ByteMatchTuples: [AwsWafS8]!
}

input AwsWafS6cInput {
  Action: String!
  Predicate: AwsWafS10Input!
}

type AwsWafS8 {
  FieldToMatch: AwsWafS9!
  TargetString: JSON!
  TextTransformation: String!
  PositionalConstraint: String!
}

input AwsWafS8Input {
  FieldToMatch: AwsWafS9Input!
  TargetString: JSON!
  TextTransformation: String!
  PositionalConstraint: String!
}

type AwsWafS9 {
  Type: String!
  Data: String
}

input AwsWafS9Input {
  Type: String!
  Data: String
}

type AwsWafSh {
  GeoMatchSetId: String!
  Name: String
  GeoMatchConstraints: [AwsWafSj]!
}

type AwsWafSj {
  Type: String!
  Value: String!
}

input AwsWafSjInput {
  Type: String!
  Value: String!
}

type AwsWafSo {
  IPSetId: String!
  Name: String
  IPSetDescriptors: [AwsWafSq]!
}

type AwsWafSq {
  Type: String!
  Value: String!
}

input AwsWafSqInput {
  Type: String!
  Value: String!
}

type AwsWafSy {
  RuleId: String!
  Name: String
  MetricName: String
  MatchPredicates: [AwsWafS10]!
  RateKey: String!
  RateLimit: JSON!
}

input AwsWafUpdateByteMatchSetInput {
  ByteMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWafUpdateByteMatchSetUpdatesInput]!
}

type AwsWafUpdateByteMatchSetOutput {
  ChangeToken: String
}

input AwsWafUpdateByteMatchSetUpdatesInput {
  Action: String!
  ByteMatchTuple: AwsWafS8Input!
}

input AwsWafUpdateGeoMatchSetInput {
  GeoMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWafUpdateGeoMatchSetUpdatesInput]!
}

type AwsWafUpdateGeoMatchSetOutput {
  ChangeToken: String
}

input AwsWafUpdateGeoMatchSetUpdatesInput {
  Action: String!
  GeoMatchConstraint: AwsWafSjInput!
}

input AwsWafUpdateIPSetInput {
  IPSetId: String!
  ChangeToken: String!
  Updates: [AwsWafUpdateIPSetUpdatesInput]!
}

type AwsWafUpdateIPSetOutput {
  ChangeToken: String
}

input AwsWafUpdateIPSetUpdatesInput {
  Action: String!
  IPSetDescriptor: AwsWafSqInput!
}

input AwsWafUpdateRateBasedRuleInput {
  RuleId: String!
  ChangeToken: String!
  Updates: [AwsWafS6cInput]!
  RateLimit: JSON!
}

type AwsWafUpdateRateBasedRuleOutput {
  ChangeToken: String
}

input AwsWafUpdateRegexMatchSetInput {
  RegexMatchSetId: String!
  Updates: [AwsWafUpdateRegexMatchSetUpdatesInput]!
  ChangeToken: String!
}

type AwsWafUpdateRegexMatchSetOutput {
  ChangeToken: String
}

input AwsWafUpdateRegexMatchSetUpdatesInput {
  Action: String!
  RegexMatchTuple: AwsWafS17Input!
}

input AwsWafUpdateRegexPatternSetInput {
  RegexPatternSetId: String!
  Updates: [AwsWafUpdateRegexPatternSetUpdatesInput]!
  ChangeToken: String!
}

type AwsWafUpdateRegexPatternSetOutput {
  ChangeToken: String
}

input AwsWafUpdateRegexPatternSetUpdatesInput {
  Action: String!
  RegexPatternString: String!
}

input AwsWafUpdateRuleGroupInput {
  RuleGroupId: String!
  Updates: [AwsWafUpdateRuleGroupUpdatesInput]!
  ChangeToken: String!
}

type AwsWafUpdateRuleGroupOutput {
  ChangeToken: String
}

input AwsWafUpdateRuleGroupUpdatesInput {
  Action: String!
  ActivatedRule: AwsWafS21Input!
}

input AwsWafUpdateRuleInput {
  RuleId: String!
  ChangeToken: String!
  Updates: [AwsWafS6cInput]!
}

type AwsWafUpdateRuleOutput {
  ChangeToken: String
}

input AwsWafUpdateSizeConstraintSetInput {
  SizeConstraintSetId: String!
  ChangeToken: String!
  Updates: [AwsWafUpdateSizeConstraintSetUpdatesInput]!
}

type AwsWafUpdateSizeConstraintSetOutput {
  ChangeToken: String
}

input AwsWafUpdateSizeConstraintSetUpdatesInput {
  Action: String!
  SizeConstraint: AwsWafS1nInput!
}

input AwsWafUpdateSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWafUpdateSqlInjectionMatchSetUpdatesInput]!
}

type AwsWafUpdateSqlInjectionMatchSetOutput {
  ChangeToken: String
}

input AwsWafUpdateSqlInjectionMatchSetUpdatesInput {
  Action: String!
  SqlInjectionMatchTuple: AwsWafS1uInput!
}

input AwsWafUpdateWebACLInput {
  WebACLId: String!
  ChangeToken: String!
  Updates: [AwsWafUpdateWebACLUpdatesInput]
  DefaultAction: AwsWafS1wInput
}

type AwsWafUpdateWebACLOutput {
  ChangeToken: String
}

input AwsWafUpdateWebACLUpdatesInput {
  Action: String!
  ActivatedRule: AwsWafS21Input!
}

input AwsWafUpdateXssMatchSetInput {
  XssMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWafUpdateXssMatchSetUpdatesInput]!
}

type AwsWafUpdateXssMatchSetOutput {
  ChangeToken: String
}

input AwsWafUpdateXssMatchSetUpdatesInput {
  Action: String!
  XssMatchTuple: AwsWafS2aInput!
}

# Amazon WorkDocs (2016-05-01)
type AwsWorkdocs {
  # workdocs.AbortDocumentVersionUpload
  AbortDocumentVersionUpload(input: AwsWorkdocsAbortDocumentVersionUploadInput!): JSON

  # workdocs.ActivateUser
  ActivateUser(input: AwsWorkdocsActivateUserInput!): AwsWorkdocsActivateUserOutput

  # workdocs.AddResourcePermissions
  AddResourcePermissions(input: AwsWorkdocsAddResourcePermissionsInput!): AwsWorkdocsAddResourcePermissionsOutput

  # workdocs.CreateComment
  CreateComment(input: AwsWorkdocsCreateCommentInput!): AwsWorkdocsCreateCommentOutput

  # workdocs.CreateCustomMetadata
  CreateCustomMetadata(input: AwsWorkdocsCreateCustomMetadataInput!): JSON

  # workdocs.CreateFolder
  CreateFolder(input: AwsWorkdocsCreateFolderInput!): AwsWorkdocsCreateFolderOutput

  # workdocs.CreateLabels
  CreateLabels(input: AwsWorkdocsCreateLabelsInput!): JSON

  # workdocs.CreateNotificationSubscription
  CreateNotificationSubscription(input: AwsWorkdocsCreateNotificationSubscriptionInput!): AwsWorkdocsCreateNotificationSubscriptionOutput

  # workdocs.CreateUser
  CreateUser(input: AwsWorkdocsCreateUserInput!): AwsWorkdocsCreateUserOutput

  # workdocs.DeactivateUser
  DeactivateUser(input: AwsWorkdocsDeactivateUserInput!): JSON

  # workdocs.DeleteComment
  DeleteComment(input: AwsWorkdocsDeleteCommentInput!): JSON

  # workdocs.DeleteCustomMetadata
  DeleteCustomMetadata(input: AwsWorkdocsDeleteCustomMetadataInput!): JSON

  # workdocs.DeleteDocument
  DeleteDocument(input: AwsWorkdocsDeleteDocumentInput!): JSON

  # workdocs.DeleteFolder
  DeleteFolder(input: AwsWorkdocsDeleteFolderInput!): JSON

  # workdocs.DeleteFolderContents
  DeleteFolderContents(input: AwsWorkdocsDeleteFolderContentsInput!): JSON

  # workdocs.DeleteLabels
  DeleteLabels(input: AwsWorkdocsDeleteLabelsInput!): JSON

  # workdocs.DeleteNotificationSubscription
  DeleteNotificationSubscription(input: AwsWorkdocsDeleteNotificationSubscriptionInput!): JSON

  # workdocs.DeleteUser
  DeleteUser(input: AwsWorkdocsDeleteUserInput!): JSON

  # workdocs.DescribeActivities
  DescribeActivities(input: AwsWorkdocsDescribeActivitiesInput): AwsWorkdocsDescribeActivitiesOutput

  # workdocs.DescribeComments
  DescribeComments(input: AwsWorkdocsDescribeCommentsInput!): AwsWorkdocsDescribeCommentsOutput

  # workdocs.DescribeDocumentVersions
  DescribeDocumentVersions(input: AwsWorkdocsDescribeDocumentVersionsInput!): AwsWorkdocsDescribeDocumentVersionsOutput

  # workdocs.DescribeFolderContents
  DescribeFolderContents(input: AwsWorkdocsDescribeFolderContentsInput!): AwsWorkdocsDescribeFolderContentsOutput

  # workdocs.DescribeGroups
  DescribeGroups(input: AwsWorkdocsDescribeGroupsInput!): AwsWorkdocsDescribeGroupsOutput

  # workdocs.DescribeNotificationSubscriptions
  DescribeNotificationSubscriptions(input: AwsWorkdocsDescribeNotificationSubscriptionsInput!): AwsWorkdocsDescribeNotificationSubscriptionsOutput

  # workdocs.DescribeResourcePermissions
  DescribeResourcePermissions(input: AwsWorkdocsDescribeResourcePermissionsInput!): AwsWorkdocsDescribeResourcePermissionsOutput

  # workdocs.DescribeRootFolders
  DescribeRootFolders(input: AwsWorkdocsDescribeRootFoldersInput!): AwsWorkdocsDescribeRootFoldersOutput

  # workdocs.DescribeUsers
  DescribeUsers(input: AwsWorkdocsDescribeUsersInput): AwsWorkdocsDescribeUsersOutput

  # workdocs.GetCurrentUser
  GetCurrentUser(input: AwsWorkdocsGetCurrentUserInput!): AwsWorkdocsGetCurrentUserOutput

  # workdocs.GetDocument
  GetDocument(input: AwsWorkdocsGetDocumentInput!): AwsWorkdocsGetDocumentOutput

  # workdocs.GetDocumentPath
  GetDocumentPath(input: AwsWorkdocsGetDocumentPathInput!): AwsWorkdocsGetDocumentPathOutput

  # workdocs.GetDocumentVersion
  GetDocumentVersion(input: AwsWorkdocsGetDocumentVersionInput!): AwsWorkdocsGetDocumentVersionOutput

  # workdocs.GetFolder
  GetFolder(input: AwsWorkdocsGetFolderInput!): AwsWorkdocsGetFolderOutput

  # workdocs.GetFolderPath
  GetFolderPath(input: AwsWorkdocsGetFolderPathInput!): AwsWorkdocsGetFolderPathOutput

  # workdocs.InitiateDocumentVersionUpload
  InitiateDocumentVersionUpload(input: AwsWorkdocsInitiateDocumentVersionUploadInput!): AwsWorkdocsInitiateDocumentVersionUploadOutput

  # workdocs.RemoveAllResourcePermissions
  RemoveAllResourcePermissions(input: AwsWorkdocsRemoveAllResourcePermissionsInput!): JSON

  # workdocs.RemoveResourcePermission
  RemoveResourcePermission(input: AwsWorkdocsRemoveResourcePermissionInput!): JSON

  # workdocs.UpdateDocument
  UpdateDocument(input: AwsWorkdocsUpdateDocumentInput!): JSON

  # workdocs.UpdateDocumentVersion
  UpdateDocumentVersion(input: AwsWorkdocsUpdateDocumentVersionInput!): JSON

  # workdocs.UpdateFolder
  UpdateFolder(input: AwsWorkdocsUpdateFolderInput!): JSON

  # workdocs.UpdateUser
  UpdateUser(input: AwsWorkdocsUpdateUserInput!): AwsWorkdocsUpdateUserOutput
}

input AwsWorkdocsAbortDocumentVersionUploadInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
}

input AwsWorkdocsActivateUserInput {
  UserId: String!
  AuthenticationToken: String
}

type AwsWorkdocsActivateUserOutput {
  User: AwsWorkdocsS8
}

input AwsWorkdocsAddResourcePermissionsInput {
  AuthenticationToken: String
  ResourceId: String!
  Principals: [AwsWorkdocsAddResourcePermissionsPrincipalsInput]!
  NotificationOptions: AwsWorkdocsAddResourcePermissionsNotificationOptionsInput
}

input AwsWorkdocsAddResourcePermissionsNotificationOptionsInput {
  SendEmail: Boolean
  EmailMessage: String
}

type AwsWorkdocsAddResourcePermissionsOutput {
  ShareResults: [AwsWorkdocsAddResourcePermissionsOutputShareResults]
}

type AwsWorkdocsAddResourcePermissionsOutputShareResults {
  PrincipalId: String
  Role: String
  Status: String
  ShareId: String
  StatusMessage: String
}

input AwsWorkdocsAddResourcePermissionsPrincipalsInput {
  Id: String!
  Type: String!
  Role: String!
}

input AwsWorkdocsCreateCommentInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  ParentId: String
  ThreadId: String
  Text: String!
  Visibility: String
  NotifyCollaborators: Boolean
}

type AwsWorkdocsCreateCommentOutput {
  Comment: AwsWorkdocsS13
}

input AwsWorkdocsCreateCustomMetadataInput {
  AuthenticationToken: String
  ResourceId: String!
  VersionId: String
  CustomMetadata: JSON!
}

input AwsWorkdocsCreateFolderInput {
  AuthenticationToken: String
  Name: String
  ParentFolderId: String!
}

type AwsWorkdocsCreateFolderOutput {
  Metadata: AwsWorkdocsS1d
}

input AwsWorkdocsCreateLabelsInput {
  ResourceId: String!
  Labels: [String]!
  AuthenticationToken: String
}

input AwsWorkdocsCreateNotificationSubscriptionInput {
  OrganizationId: String!
  Endpoint: String!
  Protocol: String!
  SubscriptionType: String!
}

type AwsWorkdocsCreateNotificationSubscriptionOutput {
  Subscription: AwsWorkdocsS1p
}

input AwsWorkdocsCreateUserInput {
  OrganizationId: String
  Username: String!
  EmailAddress: String
  GivenName: String!
  Surname: String!
  Password: String!
  TimeZoneId: String
  StorageRule: AwsWorkdocsSjInput
  AuthenticationToken: String
}

type AwsWorkdocsCreateUserOutput {
  User: AwsWorkdocsS8
}

input AwsWorkdocsDeactivateUserInput {
  UserId: String!
  AuthenticationToken: String
}

input AwsWorkdocsDeleteCommentInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  CommentId: String!
}

input AwsWorkdocsDeleteCustomMetadataInput {
  AuthenticationToken: String
  ResourceId: String!
  VersionId: String
  Keys: [String]
  DeleteAll: Boolean
}

input AwsWorkdocsDeleteDocumentInput {
  AuthenticationToken: String
  DocumentId: String!
}

input AwsWorkdocsDeleteFolderContentsInput {
  AuthenticationToken: String
  FolderId: String!
}

input AwsWorkdocsDeleteFolderInput {
  AuthenticationToken: String
  FolderId: String!
}

input AwsWorkdocsDeleteLabelsInput {
  ResourceId: String!
  AuthenticationToken: String
  Labels: [String]
  DeleteAll: Boolean
}

input AwsWorkdocsDeleteNotificationSubscriptionInput {
  SubscriptionId: String!
  OrganizationId: String!
}

input AwsWorkdocsDeleteUserInput {
  AuthenticationToken: String
  UserId: String!
}

input AwsWorkdocsDescribeActivitiesInput {
  AuthenticationToken: String
  StartTime: Date
  EndTime: Date
  OrganizationId: String
  UserId: String
  Limit: Int
  Marker: String
}

type AwsWorkdocsDescribeActivitiesOutput {
  UserActivities: [AwsWorkdocsDescribeActivitiesOutputUserActivities]
  Marker: String
}

type AwsWorkdocsDescribeActivitiesOutputUserActivities {
  Type: String
  TimeStamp: Date
  OrganizationId: String
  Initiator: AwsWorkdocsS2c
  Participants: AwsWorkdocsDescribeActivitiesOutputUserActivitiesParticipants
  ResourceMetadata: AwsWorkdocsS2i
  OriginalParent: AwsWorkdocsS2i
  CommentMetadata: AwsWorkdocsDescribeActivitiesOutputUserActivitiesCommentMetadata
}

type AwsWorkdocsDescribeActivitiesOutputUserActivitiesCommentMetadata {
  CommentId: String
  Contributor: AwsWorkdocsS8
  CreatedTimestamp: Date
  CommentStatus: String
  RecipientId: String
}

type AwsWorkdocsDescribeActivitiesOutputUserActivitiesParticipants {
  Users: [AwsWorkdocsS2c]
  Groups: [AwsWorkdocsS2f]
}

input AwsWorkdocsDescribeCommentsInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  Limit: Int
  Marker: String
}

type AwsWorkdocsDescribeCommentsOutput {
  Comments: [AwsWorkdocsS13]
  Marker: String
}

input AwsWorkdocsDescribeDocumentVersionsInput {
  AuthenticationToken: String
  DocumentId: String!
  Marker: String
  Limit: Int
  Include: String
  Fields: String
}

type AwsWorkdocsDescribeDocumentVersionsOutput {
  DocumentVersions: [AwsWorkdocsS2t]
  Marker: String
}

input AwsWorkdocsDescribeFolderContentsInput {
  AuthenticationToken: String
  FolderId: String!
  Sort: String
  Order: String
  Limit: Int
  Marker: String
  Type: String
  Include: String
}

type AwsWorkdocsDescribeFolderContentsOutput {
  Folders: [AwsWorkdocsS1d]
  Documents: [AwsWorkdocsS38]
  Marker: String
}

input AwsWorkdocsDescribeGroupsInput {
  AuthenticationToken: String
  SearchQuery: String!
  OrganizationId: String
  Marker: String
  Limit: Int
}

type AwsWorkdocsDescribeGroupsOutput {
  Groups: [AwsWorkdocsS2f]
  Marker: String
}

input AwsWorkdocsDescribeNotificationSubscriptionsInput {
  OrganizationId: String!
  Marker: String
  Limit: Int
}

type AwsWorkdocsDescribeNotificationSubscriptionsOutput {
  Subscriptions: [AwsWorkdocsS1p]
  Marker: String
}

input AwsWorkdocsDescribeResourcePermissionsInput {
  AuthenticationToken: String
  ResourceId: String!
  PrincipalId: String
  Limit: Int
  Marker: String
}

type AwsWorkdocsDescribeResourcePermissionsOutput {
  Principals: [AwsWorkdocsDescribeResourcePermissionsOutputPrincipals]
  Marker: String
}

type AwsWorkdocsDescribeResourcePermissionsOutputPrincipals {
  Id: String
  Type: String
  Roles: [AwsWorkdocsDescribeResourcePermissionsOutputPrincipalsRoles]
}

type AwsWorkdocsDescribeResourcePermissionsOutputPrincipalsRoles {
  Role: String
  Type: String
}

input AwsWorkdocsDescribeRootFoldersInput {
  AuthenticationToken: String!
  Limit: Int
  Marker: String
}

type AwsWorkdocsDescribeRootFoldersOutput {
  Folders: [AwsWorkdocsS1d]
  Marker: String
}

input AwsWorkdocsDescribeUsersInput {
  AuthenticationToken: String
  OrganizationId: String
  UserIds: String
  Query: String
  Include: String
  Order: String
  Sort: String
  Marker: String
  Limit: Int
  Fields: String
}

type AwsWorkdocsDescribeUsersOutput {
  Users: [AwsWorkdocsS8]
  TotalNumberOfUsers: JSON
  Marker: String
}

input AwsWorkdocsGetCurrentUserInput {
  AuthenticationToken: String!
}

type AwsWorkdocsGetCurrentUserOutput {
  User: AwsWorkdocsS8
}

input AwsWorkdocsGetDocumentInput {
  AuthenticationToken: String
  DocumentId: String!
  IncludeCustomMetadata: Boolean
}

type AwsWorkdocsGetDocumentOutput {
  Metadata: AwsWorkdocsS38
  CustomMetadata: JSON
}

input AwsWorkdocsGetDocumentPathInput {
  AuthenticationToken: String
  DocumentId: String!
  Limit: Int
  Fields: String
  Marker: String
}

type AwsWorkdocsGetDocumentPathOutput {
  Path: AwsWorkdocsS41
}

input AwsWorkdocsGetDocumentVersionInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  Fields: String
  IncludeCustomMetadata: Boolean
}

type AwsWorkdocsGetDocumentVersionOutput {
  Metadata: AwsWorkdocsS2t
  CustomMetadata: JSON
}

input AwsWorkdocsGetFolderInput {
  AuthenticationToken: String
  FolderId: String!
  IncludeCustomMetadata: Boolean
}

type AwsWorkdocsGetFolderOutput {
  Metadata: AwsWorkdocsS1d
  CustomMetadata: JSON
}

input AwsWorkdocsGetFolderPathInput {
  AuthenticationToken: String
  FolderId: String!
  Limit: Int
  Fields: String
  Marker: String
}

type AwsWorkdocsGetFolderPathOutput {
  Path: AwsWorkdocsS41
}

input AwsWorkdocsInitiateDocumentVersionUploadInput {
  AuthenticationToken: String
  Id: String
  Name: String
  ContentCreatedTimestamp: Date
  ContentModifiedTimestamp: Date
  ContentType: String
  DocumentSizeInBytes: JSON
  ParentFolderId: String!
}

type AwsWorkdocsInitiateDocumentVersionUploadOutput {
  Metadata: AwsWorkdocsS38
  UploadMetadata: AwsWorkdocsInitiateDocumentVersionUploadOutputUploadMetadata
}

type AwsWorkdocsInitiateDocumentVersionUploadOutputUploadMetadata {
  UploadUrl: String
  SignedHeaders: JSON
}

input AwsWorkdocsRemoveAllResourcePermissionsInput {
  AuthenticationToken: String
  ResourceId: String!
}

input AwsWorkdocsRemoveResourcePermissionInput {
  AuthenticationToken: String
  ResourceId: String!
  PrincipalId: String!
  PrincipalType: String
}

type AwsWorkdocsS13 {
  CommentId: String!
  ParentId: String
  ThreadId: String
  Text: String
  Contributor: AwsWorkdocsS8
  CreatedTimestamp: Date
  Status: String
  Visibility: String
  RecipientId: String
}

type AwsWorkdocsS1d {
  Id: String
  Name: String
  CreatorId: String
  ParentFolderId: String
  CreatedTimestamp: Date
  ModifiedTimestamp: Date
  ResourceState: String
  Signature: String
  Labels: [String]
  Size: JSON
  LatestVersionSize: JSON
}

type AwsWorkdocsS1p {
  SubscriptionId: String
  EndPoint: String
  Protocol: String
}

type AwsWorkdocsS2c {
  Id: String
  Username: String
  GivenName: String
  Surname: String
  EmailAddress: String
}

type AwsWorkdocsS2f {
  Id: String
  Name: String
}

type AwsWorkdocsS2i {
  Type: String
  Name: String
  OriginalName: String
  Id: String
  VersionId: String
  Owner: AwsWorkdocsS2c
  ParentId: String
}

type AwsWorkdocsS2t {
  Id: String
  Name: String
  ContentType: String
  Size: JSON
  Signature: String
  Status: String
  CreatedTimestamp: Date
  ModifiedTimestamp: Date
  ContentCreatedTimestamp: Date
  ContentModifiedTimestamp: Date
  CreatorId: String
  Thumbnail: JSON
  Source: JSON
}

type AwsWorkdocsS38 {
  Id: String
  CreatorId: String
  ParentFolderId: String
  CreatedTimestamp: Date
  ModifiedTimestamp: Date
  LatestVersionMetadata: AwsWorkdocsS2t
  ResourceState: String
  Labels: [String]
}

type AwsWorkdocsS41 {
  Components: [AwsWorkdocsS41Components]
}

type AwsWorkdocsS41Components {
  Id: String
  Name: String
}

type AwsWorkdocsS8 {
  Id: String
  Username: String
  EmailAddress: String
  GivenName: String
  Surname: String
  OrganizationId: String
  RootFolderId: String
  RecycleBinFolderId: String
  Status: String
  Type: String
  CreatedTimestamp: Date
  ModifiedTimestamp: Date
  TimeZoneId: String
  Locale: String
  Storage: AwsWorkdocsS8Storage
}

type AwsWorkdocsS8Storage {
  StorageUtilizedInBytes: JSON
  StorageRule: AwsWorkdocsSj
}

type AwsWorkdocsSj {
  StorageAllocatedInBytes: JSON
  StorageType: String
}

input AwsWorkdocsSjInput {
  StorageAllocatedInBytes: JSON
  StorageType: String
}

input AwsWorkdocsUpdateDocumentInput {
  AuthenticationToken: String
  DocumentId: String!
  Name: String
  ParentFolderId: String
  ResourceState: String
}

input AwsWorkdocsUpdateDocumentVersionInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  VersionStatus: String
}

input AwsWorkdocsUpdateFolderInput {
  AuthenticationToken: String
  FolderId: String!
  Name: String
  ParentFolderId: String
  ResourceState: String
}

input AwsWorkdocsUpdateUserInput {
  AuthenticationToken: String
  UserId: String!
  GivenName: String
  Surname: String
  Type: String
  StorageRule: AwsWorkdocsSjInput
  TimeZoneId: String
  Locale: String
  GrantPoweruserPrivileges: String
}

type AwsWorkdocsUpdateUserOutput {
  User: AwsWorkdocsS8
}

# Amazon WorkSpaces (2015-04-08)
type AwsWorkspaces {
  # workspaces.CreateTags
  CreateTags(input: AwsWorkspacesCreateTagsInput!): JSON

  # workspaces.CreateWorkspaces
  CreateWorkspaces(input: AwsWorkspacesCreateWorkspacesInput!): AwsWorkspacesCreateWorkspacesOutput

  # workspaces.DeleteTags
  DeleteTags(input: AwsWorkspacesDeleteTagsInput!): JSON

  # workspaces.DescribeTags
  DescribeTags(input: AwsWorkspacesDescribeTagsInput!): AwsWorkspacesDescribeTagsOutput

  # workspaces.DescribeWorkspaceBundles
  DescribeWorkspaceBundles(input: AwsWorkspacesDescribeWorkspaceBundlesInput): AwsWorkspacesDescribeWorkspaceBundlesOutput

  # workspaces.DescribeWorkspaceDirectories
  DescribeWorkspaceDirectories(input: AwsWorkspacesDescribeWorkspaceDirectoriesInput): AwsWorkspacesDescribeWorkspaceDirectoriesOutput

  # workspaces.DescribeWorkspaces
  DescribeWorkspaces(input: AwsWorkspacesDescribeWorkspacesInput): AwsWorkspacesDescribeWorkspacesOutput

  # workspaces.DescribeWorkspacesConnectionStatus
  DescribeWorkspacesConnectionStatus(input: AwsWorkspacesDescribeWorkspacesConnectionStatusInput): AwsWorkspacesDescribeWorkspacesConnectionStatusOutput

  # workspaces.ModifyWorkspaceProperties
  ModifyWorkspaceProperties(input: AwsWorkspacesModifyWorkspacePropertiesInput!): JSON

  # workspaces.RebootWorkspaces
  RebootWorkspaces(input: AwsWorkspacesRebootWorkspacesInput!): AwsWorkspacesRebootWorkspacesOutput

  # workspaces.RebuildWorkspaces
  RebuildWorkspaces(input: AwsWorkspacesRebuildWorkspacesInput!): AwsWorkspacesRebuildWorkspacesOutput

  # workspaces.StartWorkspaces
  StartWorkspaces(input: AwsWorkspacesStartWorkspacesInput!): AwsWorkspacesStartWorkspacesOutput

  # workspaces.StopWorkspaces
  StopWorkspaces(input: AwsWorkspacesStopWorkspacesInput!): AwsWorkspacesStopWorkspacesOutput

  # workspaces.TerminateWorkspaces
  TerminateWorkspaces(input: AwsWorkspacesTerminateWorkspacesInput!): AwsWorkspacesTerminateWorkspacesOutput
}

input AwsWorkspacesCreateTagsInput {
  ResourceId: String!
  Tags: [AwsWorkspacesS3Input]!
}

input AwsWorkspacesCreateWorkspacesInput {
  Workspaces: [AwsWorkspacesSaInput]!
}

type AwsWorkspacesCreateWorkspacesOutput {
  FailedRequests: [AwsWorkspacesCreateWorkspacesOutputFailedRequests]
  PendingRequests: [AwsWorkspacesSo]
}

type AwsWorkspacesCreateWorkspacesOutputFailedRequests {
  WorkspaceRequest: AwsWorkspacesSa
  ErrorCode: String
  ErrorMessage: String
}

input AwsWorkspacesDeleteTagsInput {
  ResourceId: String!
  TagKeys: [String]!
}

input AwsWorkspacesDescribeTagsInput {
  ResourceId: String!
}

type AwsWorkspacesDescribeTagsOutput {
  TagList: [AwsWorkspacesS3]
}

input AwsWorkspacesDescribeWorkspaceBundlesInput {
  BundleIds: [String]
  Owner: String
  NextToken: String
}

type AwsWorkspacesDescribeWorkspaceBundlesOutput {
  Bundles: [AwsWorkspacesDescribeWorkspaceBundlesOutputBundles]
  NextToken: String
}

type AwsWorkspacesDescribeWorkspaceBundlesOutputBundles {
  BundleId: String
  Name: String
  Owner: String
  Description: String
  UserStorage: AwsWorkspacesDescribeWorkspaceBundlesOutputBundlesUserStorage
  ComputeType: AwsWorkspacesDescribeWorkspaceBundlesOutputBundlesComputeType
}

type AwsWorkspacesDescribeWorkspaceBundlesOutputBundlesComputeType {
  Name: String
}

type AwsWorkspacesDescribeWorkspaceBundlesOutputBundlesUserStorage {
  Capacity: String
}

input AwsWorkspacesDescribeWorkspaceDirectoriesInput {
  DirectoryIds: [String]
  NextToken: String
}

type AwsWorkspacesDescribeWorkspaceDirectoriesOutput {
  Directories: [AwsWorkspacesDescribeWorkspaceDirectoriesOutputDirectories]
  NextToken: String
}

type AwsWorkspacesDescribeWorkspaceDirectoriesOutputDirectories {
  DirectoryId: String
  Alias: String
  DirectoryName: String
  RegistrationCode: String
  SubnetIds: [String]
  DnsIpAddresses: [String]
  CustomerUserName: String
  IamRoleId: String
  DirectoryType: String
  WorkspaceSecurityGroupId: String
  State: String
  WorkspaceCreationProperties: AwsWorkspacesDescribeWorkspaceDirectoriesOutputDirectoriesWorkspaceCreationProperties
}

type AwsWorkspacesDescribeWorkspaceDirectoriesOutputDirectoriesWorkspaceCreationProperties {
  EnableWorkDocs: Boolean
  EnableInternetAccess: Boolean
  DefaultOu: String
  CustomSecurityGroupId: String
  UserEnabledAsLocalAdministrator: Boolean
}

input AwsWorkspacesDescribeWorkspacesConnectionStatusInput {
  WorkspaceIds: [String]
  NextToken: String
}

type AwsWorkspacesDescribeWorkspacesConnectionStatusOutput {
  WorkspacesConnectionStatus: [AwsWorkspacesDescribeWorkspacesConnectionStatusOutputWorkspacesConnectionStatus]
  NextToken: String
}

type AwsWorkspacesDescribeWorkspacesConnectionStatusOutputWorkspacesConnectionStatus {
  WorkspaceId: String
  ConnectionState: String
  ConnectionStateCheckTimestamp: Date
  LastKnownUserConnectionTimestamp: Date
}

input AwsWorkspacesDescribeWorkspacesInput {
  WorkspaceIds: [String]
  DirectoryId: String
  UserName: String
  BundleId: String
  Limit: Int
  NextToken: String
}

type AwsWorkspacesDescribeWorkspacesOutput {
  Workspaces: [AwsWorkspacesSo]
  NextToken: String
}

input AwsWorkspacesModifyWorkspacePropertiesInput {
  WorkspaceId: String!
  WorkspaceProperties: AwsWorkspacesSgInput!
}

input AwsWorkspacesRebootWorkspacesInput {
  RebootWorkspaceRequests: [AwsWorkspacesRebootWorkspacesRebootWorkspaceRequestsInput]!
}

type AwsWorkspacesRebootWorkspacesOutput {
  FailedRequests: [AwsWorkspacesS28]
}

input AwsWorkspacesRebootWorkspacesRebootWorkspaceRequestsInput {
  WorkspaceId: String!
}

input AwsWorkspacesRebuildWorkspacesInput {
  RebuildWorkspaceRequests: [AwsWorkspacesRebuildWorkspacesRebuildWorkspaceRequestsInput]!
}

type AwsWorkspacesRebuildWorkspacesOutput {
  FailedRequests: [AwsWorkspacesS28]
}

input AwsWorkspacesRebuildWorkspacesRebuildWorkspaceRequestsInput {
  WorkspaceId: String!
}

type AwsWorkspacesS28 {
  WorkspaceId: String
  ErrorCode: String
  ErrorMessage: String
}

type AwsWorkspacesS3 {
  Key: String!
  Value: String
}

input AwsWorkspacesS3Input {
  Key: String!
  Value: String
}

type AwsWorkspacesSa {
  DirectoryId: String!
  UserName: String!
  BundleId: String!
  VolumeEncryptionKey: String
  UserVolumeEncryptionEnabled: Boolean
  RootVolumeEncryptionEnabled: Boolean
  WorkspaceProperties: AwsWorkspacesSg
  Tags: [AwsWorkspacesS3]
}

input AwsWorkspacesSaInput {
  DirectoryId: String!
  UserName: String!
  BundleId: String!
  VolumeEncryptionKey: String
  UserVolumeEncryptionEnabled: Boolean
  RootVolumeEncryptionEnabled: Boolean
  WorkspaceProperties: AwsWorkspacesSgInput
  Tags: [AwsWorkspacesS3Input]
}

type AwsWorkspacesSg {
  RunningMode: String
  RunningModeAutoStopTimeoutInMinutes: Int
}

input AwsWorkspacesSgInput {
  RunningMode: String
  RunningModeAutoStopTimeoutInMinutes: Int
}

type AwsWorkspacesSo {
  WorkspaceId: String
  DirectoryId: String
  UserName: String
  IpAddress: String
  State: String
  BundleId: String
  SubnetId: String
  ErrorMessage: String
  ErrorCode: String
  ComputerName: String
  VolumeEncryptionKey: String
  UserVolumeEncryptionEnabled: Boolean
  RootVolumeEncryptionEnabled: Boolean
  WorkspaceProperties: AwsWorkspacesSg
}

input AwsWorkspacesStartWorkspacesInput {
  StartWorkspaceRequests: [AwsWorkspacesStartWorkspacesStartWorkspaceRequestsInput]!
}

type AwsWorkspacesStartWorkspacesOutput {
  FailedRequests: [AwsWorkspacesS28]
}

input AwsWorkspacesStartWorkspacesStartWorkspaceRequestsInput {
  WorkspaceId: String
}

input AwsWorkspacesStopWorkspacesInput {
  StopWorkspaceRequests: [AwsWorkspacesStopWorkspacesStopWorkspaceRequestsInput]!
}

type AwsWorkspacesStopWorkspacesOutput {
  FailedRequests: [AwsWorkspacesS28]
}

input AwsWorkspacesStopWorkspacesStopWorkspaceRequestsInput {
  WorkspaceId: String
}

input AwsWorkspacesTerminateWorkspacesInput {
  TerminateWorkspaceRequests: [AwsWorkspacesTerminateWorkspacesTerminateWorkspaceRequestsInput]!
}

type AwsWorkspacesTerminateWorkspacesOutput {
  FailedRequests: [AwsWorkspacesS28]
}

input AwsWorkspacesTerminateWorkspacesTerminateWorkspaceRequestsInput {
  WorkspaceId: String!
}

# AWS X-Ray (2016-04-12)
type AwsXray {
  # xray.BatchGetTraces
  BatchGetTraces(input: AwsXrayBatchGetTracesInput!): AwsXrayBatchGetTracesOutput

  # xray.GetServiceGraph
  GetServiceGraph(input: AwsXrayGetServiceGraphInput!): AwsXrayGetServiceGraphOutput

  # xray.GetTraceGraph
  GetTraceGraph(input: AwsXrayGetTraceGraphInput!): AwsXrayGetTraceGraphOutput

  # xray.GetTraceSummaries
  GetTraceSummaries(input: AwsXrayGetTraceSummariesInput!): AwsXrayGetTraceSummariesOutput

  # xray.PutTelemetryRecords
  PutTelemetryRecords(input: AwsXrayPutTelemetryRecordsInput!): JSON

  # xray.PutTraceSegments
  PutTraceSegments(input: AwsXrayPutTraceSegmentsInput!): AwsXrayPutTraceSegmentsOutput
}

input AwsXrayBatchGetTracesInput {
  TraceIds: [String]!
  NextToken: String
}

type AwsXrayBatchGetTracesOutput {
  Traces: [AwsXrayBatchGetTracesOutputTraces]
  UnprocessedTraceIds: [String]
  NextToken: String
}

type AwsXrayBatchGetTracesOutputTraces {
  Id: String
  Duration: JSON
  Segments: [AwsXrayBatchGetTracesOutputTracesSegments]
}

type AwsXrayBatchGetTracesOutputTracesSegments {
  Id: String
  Document: String
}

input AwsXrayGetServiceGraphInput {
  StartTime: Date!
  EndTime: Date!
  NextToken: String
}

type AwsXrayGetServiceGraphOutput {
  StartTime: Date
  EndTime: Date
  Services: [AwsXraySh]
  NextToken: String
}

input AwsXrayGetTraceGraphInput {
  TraceIds: [String]!
  NextToken: String
}

type AwsXrayGetTraceGraphOutput {
  Services: [AwsXraySh]
  NextToken: String
}

input AwsXrayGetTraceSummariesInput {
  StartTime: Date!
  EndTime: Date!
  Sampling: Boolean
  FilterExpression: String
  NextToken: String
}

type AwsXrayGetTraceSummariesOutput {
  TraceSummaries: [AwsXrayGetTraceSummariesOutputTraceSummaries]
  ApproximateTime: Date
  TracesProcessedCount: JSON
  NextToken: String
}

type AwsXrayGetTraceSummariesOutputTraceSummaries {
  Id: String
  Duration: JSON
  ResponseTime: JSON
  HasFault: Boolean
  HasError: Boolean
  HasThrottle: Boolean
  IsPartial: Boolean
  Http: AwsXrayGetTraceSummariesOutputTraceSummariesHttp
  Annotations: JSON
  Users: [AwsXrayGetTraceSummariesOutputTraceSummariesUsers]
  ServiceIds: [AwsXrayS1d]
}

type AwsXrayGetTraceSummariesOutputTraceSummariesHttp {
  HttpURL: String
  HttpStatus: Int
  HttpMethod: String
  UserAgent: String
  ClientIp: String
}

type AwsXrayGetTraceSummariesOutputTraceSummariesUsers {
  UserName: String
  ServiceIds: [AwsXrayS1d]
}

input AwsXrayPutTelemetryRecordsInput {
  TelemetryRecords: [AwsXrayPutTelemetryRecordsTelemetryRecordsInput]!
  EC2InstanceId: String
  Hostname: String
  ResourceARN: String
}

input AwsXrayPutTelemetryRecordsTelemetryRecordsBackendConnectionErrorsInput {
  TimeoutCount: Int
  ConnectionRefusedCount: Int
  HTTPCode4XXCount: Int
  HTTPCode5XXCount: Int
  UnknownHostCount: Int
  OtherCount: Int
}

input AwsXrayPutTelemetryRecordsTelemetryRecordsInput {
  Timestamp: Date!
  SegmentsReceivedCount: Int
  SegmentsSentCount: Int
  SegmentsSpilloverCount: Int
  SegmentsRejectedCount: Int
  BackendConnectionErrors: AwsXrayPutTelemetryRecordsTelemetryRecordsBackendConnectionErrorsInput
}

input AwsXrayPutTraceSegmentsInput {
  TraceSegmentDocuments: [String]!
}

type AwsXrayPutTraceSegmentsOutput {
  UnprocessedTraceSegments: [AwsXrayPutTraceSegmentsOutputUnprocessedTraceSegments]
}

type AwsXrayPutTraceSegmentsOutputUnprocessedTraceSegments {
  Id: String
  ErrorCode: String
  Message: String
}

type AwsXrayS1d {
  Name: String
  Names: [String]
  AccountId: String
  Type: String
}

type AwsXraySh {
  ReferenceId: Int
  Name: String
  Names: [String]
  Root: Boolean
  AccountId: String
  Type: String
  State: String
  StartTime: Date
  EndTime: Date
  Edges: [AwsXrayShEdges]
  SummaryStatistics: AwsXrayShSummaryStatistics
  DurationHistogram: [AwsXraySs]
  ResponseTimeHistogram: [AwsXraySs]
}

type AwsXrayShEdges {
  ReferenceId: Int
  StartTime: Date
  EndTime: Date
  SummaryStatistics: AwsXrayShEdgesSummaryStatistics
  ResponseTimeHistogram: [AwsXraySs]
  Aliases: [AwsXrayShEdgesAliases]
}

type AwsXrayShEdgesAliases {
  Name: String
  Names: [String]
  Type: String
}

type AwsXrayShEdgesSummaryStatistics {
  OkCount: JSON
  ErrorStatistics: AwsXraySq
  FaultStatistics: AwsXraySr
  TotalCount: JSON
  TotalResponseTime: JSON
}

type AwsXrayShSummaryStatistics {
  OkCount: JSON
  ErrorStatistics: AwsXraySq
  FaultStatistics: AwsXraySr
  TotalCount: JSON
  TotalResponseTime: JSON
}

type AwsXraySq {
  ThrottleCount: JSON
  OtherCount: JSON
  TotalCount: JSON
}

type AwsXraySr {
  OtherCount: JSON
  TotalCount: JSON
}

type AwsXraySs {
  Value: JSON
  Count: Int
}

scalar Date

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON

type Query {
  # AWS SDK 2.160.0
  aws: Aws
}
