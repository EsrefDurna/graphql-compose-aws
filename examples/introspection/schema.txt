# AWS SDK 2.160.0
type Aws {
  acm(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsACM
  apigateway(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsAPIGateway
  appstream(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsAppStream
  appsync(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsAppSync
  applicationautoscaling(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsApplicationAutoScaling
  athena(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsAthena
  autoscaling(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsAutoScaling
  batch(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsBatch
  budgets(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsBudgets
  cur(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCUR
  clouddirectory(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCloudDirectory
  cloudformation(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCloudFormation
  cloudfront(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCloudFront
  cloudhsm(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCloudHSM
  cloudhsmv2(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCloudHSMV2
  cloudsearch(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCloudSearch
  cloudsearchdomain(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCloudSearchDomain
  cloudtrail(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCloudTrail
  cloudwatch(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCloudWatch
  cloudwatchevents(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCloudWatchEvents
  cloudwatchlogs(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCloudWatchLogs
  codebuild(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCodeBuild
  codecommit(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCodeCommit
  codedeploy(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCodeDeploy
  codepipeline(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCodePipeline
  codestar(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCodeStar
  cognitoidentity(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCognitoIdentity
  cognitoidentityserviceprovider(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCognitoIdentityServiceProvider
  cognitosync(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCognitoSync
  comprehend(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsComprehend
  configservice(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsConfigService
  costexplorer(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsCostExplorer
  dax(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsDAX
  dms(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsDMS
  datapipeline(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsDataPipeline
  devicefarm(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsDeviceFarm
  directconnect(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsDirectConnect
  directoryservice(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsDirectoryService
  discovery(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsDiscovery
  dynamodb(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsDynamoDB
  dynamodbstreams(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsDynamoDBStreams
  ec2(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsEC2
  ecr(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsECR
  ecs(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsECS
  efs(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsEFS
  elb(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsELB
  elbv2(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsELBv2
  emr(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsEMR
  es(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsES
  elasticache(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsElastiCache
  elasticbeanstalk(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsElasticBeanstalk
  elastictranscoder(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsElasticTranscoder
  firehose(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsFirehose
  gamelift(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsGameLift
  glacier(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsGlacier
  glue(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsGlue
  greengrass(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsGreengrass
  guardduty(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsGuardDuty
  health(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsHealth
  iam(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsIAM
  importexport(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsImportExport
  inspector(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsInspector
  iotjobsdataplane(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsIoTJobsDataPlane
  iot(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsIot
  iotdata(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsIotData
  kms(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsKMS
  kinesis(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsKinesis
  kinesisanalytics(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsKinesisAnalytics
  kinesisvideo(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsKinesisVideo
  kinesisvideoarchivedmedia(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsKinesisVideoArchivedMedia
  kinesisvideomedia(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsKinesisVideoMedia
  lambda(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsLambda
  lexmodelbuildingservice(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsLexModelBuildingService
  lexruntime(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsLexRuntime
  lightsail(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsLightsail
  mq(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMQ
  mturk(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMTurk
  machinelearning(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMachineLearning
  marketplacecommerceanalytics(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMarketplaceCommerceAnalytics
  marketplaceentitlementservice(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMarketplaceEntitlementService
  marketplacemetering(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMarketplaceMetering
  mediaconvert(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMediaConvert
  medialive(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMediaLive
  mediapackage(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMediaPackage
  mediastore(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMediaStore
  mediastoredata(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMediaStoreData
  migrationhub(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMigrationHub
  mobile(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMobile
  mobileanalytics(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsMobileAnalytics
  opsworks(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsOpsWorks
  opsworkscm(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsOpsWorksCM
  organizations(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsOrganizations
  pinpoint(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsPinpoint
  polly(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsPolly
  pricing(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsPricing
  rds(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsRDS
  redshift(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsRedshift
  rekognition(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsRekognition
  resourcegroups(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsResourceGroups
  resourcegroupstaggingapi(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsResourceGroupsTaggingAPI
  route53(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsRoute53
  route53domains(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsRoute53Domains
  s3(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsS3
  ses(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsSES
  sms(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsSMS
  sns(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsSNS
  sqs(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsSQS
  ssm(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsSSM
  sts(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsSTS
  swf(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsSWF
  sagemaker(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsSageMaker
  sagemakerruntime(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsSageMakerRuntime
  servicecatalog(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsServiceCatalog
  shield(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsShield
  simpledb(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsSimpleDB
  snowball(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsSnowball
  stepfunctions(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsStepFunctions
  storagegateway(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsStorageGateway
  support(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsSupport
  translate(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsTranslate
  waf(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsWAF
  wafregional(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsWAFRegional
  workdocs(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsWorkDocs
  workspaces(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsWorkSpaces
  xray(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): AwsXRay
}

# AWS Certificate Manager (2015-12-08)
type AwsACM {
  addTagsToCertificate(input: AwsACMAddTagsToCertificateInput!, config: AwsConfig): JSON
  deleteCertificate(input: AwsACMDeleteCertificateInput!, config: AwsConfig): JSON
  describeCertificate(input: AwsACMDescribeCertificateInput!, config: AwsConfig): AwsACMDescribeCertificateOutput
  getCertificate(input: AwsACMGetCertificateInput!, config: AwsConfig): AwsACMGetCertificateOutput
  importCertificate(input: AwsACMImportCertificateInput!, config: AwsConfig): AwsACMImportCertificateOutput
  listCertificates(input: AwsACMListCertificatesInput, config: AwsConfig): AwsACMListCertificatesOutput
  listTagsForCertificate(input: AwsACMListTagsForCertificateInput!, config: AwsConfig): AwsACMListTagsForCertificateOutput
  removeTagsFromCertificate(input: AwsACMRemoveTagsFromCertificateInput!, config: AwsConfig): JSON
  requestCertificate(input: AwsACMRequestCertificateInput!, config: AwsConfig): AwsACMRequestCertificateOutput
  resendValidationEmail(input: AwsACMResendValidationEmailInput!, config: AwsConfig): JSON
}

input AwsACMAddTagsToCertificateInput {
  CertificateArn: String!
  Tags: [AwsACMS3Input]!
}

input AwsACMDeleteCertificateInput {
  CertificateArn: String!
}

input AwsACMDescribeCertificateInput {
  CertificateArn: String!
}

type AwsACMDescribeCertificateOutput {
  Certificate: AwsACMDescribeCertificateOutputCertificate
}

type AwsACMDescribeCertificateOutputCertificate {
  CertificateArn: String
  DomainName: String
  SubjectAlternativeNames: [String]
  DomainValidationOptions: [AwsACMSd]
  Serial: String
  Subject: String
  Issuer: String
  CreatedAt: Date
  IssuedAt: Date
  ImportedAt: Date
  Status: String
  RevokedAt: Date
  RevocationReason: String
  NotBefore: Date
  NotAfter: Date
  KeyAlgorithm: String
  SignatureAlgorithm: String
  InUseBy: [String]
  FailureReason: String
  Type: String
  RenewalSummary: AwsACMDescribeCertificateOutputCertificateRenewalSummary
  KeyUsages: [AwsACMDescribeCertificateOutputCertificateKeyUsages]
  ExtendedKeyUsages: [AwsACMDescribeCertificateOutputCertificateExtendedKeyUsages]
}

type AwsACMDescribeCertificateOutputCertificateExtendedKeyUsages {
  Name: String
  OID: String
}

type AwsACMDescribeCertificateOutputCertificateKeyUsages {
  Name: String
}

type AwsACMDescribeCertificateOutputCertificateRenewalSummary {
  RenewalStatus: String!
  DomainValidationOptions: [AwsACMSd]!
}

input AwsACMGetCertificateInput {
  CertificateArn: String!
}

type AwsACMGetCertificateOutput {
  Certificate: String
  CertificateChain: String
}

input AwsACMImportCertificateInput {
  CertificateArn: String
  Certificate: JSON!
  PrivateKey: JSON!
  CertificateChain: JSON
}

type AwsACMImportCertificateOutput {
  CertificateArn: String
}

input AwsACMListCertificatesIncludesInput {
  extendedKeyUsage: [String]
  keyUsage: [String]
  keyTypes: [String]
}

input AwsACMListCertificatesInput {
  CertificateStatuses: [String]
  Includes: AwsACMListCertificatesIncludesInput
  NextToken: String
  MaxItems: Int
}

type AwsACMListCertificatesOutput {
  NextToken: String
  CertificateSummaryList: [AwsACMListCertificatesOutputCertificateSummaryList]
}

type AwsACMListCertificatesOutputCertificateSummaryList {
  CertificateArn: String
  DomainName: String
}

input AwsACMListTagsForCertificateInput {
  CertificateArn: String!
}

type AwsACMListTagsForCertificateOutput {
  Tags: [AwsACMS3]
}

input AwsACMRemoveTagsFromCertificateInput {
  CertificateArn: String!
  Tags: [AwsACMS3Input]!
}

input AwsACMRequestCertificateDomainValidationOptionsInput {
  DomainName: String!
  ValidationDomain: String!
}

input AwsACMRequestCertificateInput {
  DomainName: String!
  ValidationMethod: String
  SubjectAlternativeNames: [String]
  IdempotencyToken: String
  DomainValidationOptions: [AwsACMRequestCertificateDomainValidationOptionsInput]
}

type AwsACMRequestCertificateOutput {
  CertificateArn: String
}

input AwsACMResendValidationEmailInput {
  CertificateArn: String!
  Domain: String!
  ValidationDomain: String!
}

type AwsACMS3 {
  Key: String!
  Value: String
}

input AwsACMS3Input {
  Key: String!
  Value: String
}

type AwsACMSd {
  DomainName: String!
  ValidationEmails: [String]
  ValidationDomain: String
  ValidationStatus: String
  ResourceRecord: AwsACMSdResourceRecord
  ValidationMethod: String
}

type AwsACMSdResourceRecord {
  Name: String!
  Type: String!
  Value: String!
}

# Amazon API Gateway (2015-07-09)
type AwsAPIGateway {
  createApiKey(input: AwsAPIGatewayCreateApiKeyInput, config: AwsConfig): JSON
  createAuthorizer(input: AwsAPIGatewayCreateAuthorizerInput!, config: AwsConfig): JSON
  createBasePathMapping(input: AwsAPIGatewayCreateBasePathMappingInput!, config: AwsConfig): JSON
  createDeployment(input: AwsAPIGatewayCreateDeploymentInput!, config: AwsConfig): JSON
  createDocumentationPart(input: AwsAPIGatewayCreateDocumentationPartInput!, config: AwsConfig): JSON
  createDocumentationVersion(input: AwsAPIGatewayCreateDocumentationVersionInput!, config: AwsConfig): JSON
  createDomainName(input: AwsAPIGatewayCreateDomainNameInput!, config: AwsConfig): JSON
  createModel(input: AwsAPIGatewayCreateModelInput!, config: AwsConfig): JSON
  createRequestValidator(input: AwsAPIGatewayCreateRequestValidatorInput!, config: AwsConfig): JSON
  createResource(input: AwsAPIGatewayCreateResourceInput!, config: AwsConfig): JSON
  createRestApi(input: AwsAPIGatewayCreateRestApiInput!, config: AwsConfig): JSON
  createStage(input: AwsAPIGatewayCreateStageInput!, config: AwsConfig): JSON
  createUsagePlan(input: AwsAPIGatewayCreateUsagePlanInput!, config: AwsConfig): JSON
  createUsagePlanKey(input: AwsAPIGatewayCreateUsagePlanKeyInput!, config: AwsConfig): JSON
  deleteApiKey(input: AwsAPIGatewayDeleteApiKeyInput!, config: AwsConfig): JSON
  deleteAuthorizer(input: AwsAPIGatewayDeleteAuthorizerInput!, config: AwsConfig): JSON
  deleteBasePathMapping(input: AwsAPIGatewayDeleteBasePathMappingInput!, config: AwsConfig): JSON
  deleteClientCertificate(input: AwsAPIGatewayDeleteClientCertificateInput!, config: AwsConfig): JSON
  deleteDeployment(input: AwsAPIGatewayDeleteDeploymentInput!, config: AwsConfig): JSON
  deleteDocumentationPart(input: AwsAPIGatewayDeleteDocumentationPartInput!, config: AwsConfig): JSON
  deleteDocumentationVersion(input: AwsAPIGatewayDeleteDocumentationVersionInput!, config: AwsConfig): JSON
  deleteDomainName(input: AwsAPIGatewayDeleteDomainNameInput!, config: AwsConfig): JSON
  deleteGatewayResponse(input: AwsAPIGatewayDeleteGatewayResponseInput!, config: AwsConfig): JSON
  deleteIntegration(input: AwsAPIGatewayDeleteIntegrationInput!, config: AwsConfig): JSON
  deleteIntegrationResponse(input: AwsAPIGatewayDeleteIntegrationResponseInput!, config: AwsConfig): JSON
  deleteMethod(input: AwsAPIGatewayDeleteMethodInput!, config: AwsConfig): JSON
  deleteMethodResponse(input: AwsAPIGatewayDeleteMethodResponseInput!, config: AwsConfig): JSON
  deleteModel(input: AwsAPIGatewayDeleteModelInput!, config: AwsConfig): JSON
  deleteRequestValidator(input: AwsAPIGatewayDeleteRequestValidatorInput!, config: AwsConfig): JSON
  deleteResource(input: AwsAPIGatewayDeleteResourceInput!, config: AwsConfig): JSON
  deleteRestApi(input: AwsAPIGatewayDeleteRestApiInput!, config: AwsConfig): JSON
  deleteStage(input: AwsAPIGatewayDeleteStageInput!, config: AwsConfig): JSON
  deleteUsagePlan(input: AwsAPIGatewayDeleteUsagePlanInput!, config: AwsConfig): JSON
  deleteUsagePlanKey(input: AwsAPIGatewayDeleteUsagePlanKeyInput!, config: AwsConfig): JSON
  flushStageAuthorizersCache(input: AwsAPIGatewayFlushStageAuthorizersCacheInput!, config: AwsConfig): JSON
  flushStageCache(input: AwsAPIGatewayFlushStageCacheInput!, config: AwsConfig): JSON
  generateClientCertificate(input: AwsAPIGatewayGenerateClientCertificateInput, config: AwsConfig): JSON
  getAccount(input: JSON, config: AwsConfig): JSON
  getApiKey(input: AwsAPIGatewayGetApiKeyInput!, config: AwsConfig): JSON
  getApiKeys(input: AwsAPIGatewayGetApiKeysInput, config: AwsConfig): AwsAPIGatewayGetApiKeysOutput
  getAuthorizer(input: AwsAPIGatewayGetAuthorizerInput!, config: AwsConfig): JSON
  getAuthorizers(input: AwsAPIGatewayGetAuthorizersInput!, config: AwsConfig): AwsAPIGatewayGetAuthorizersOutput
  getBasePathMapping(input: AwsAPIGatewayGetBasePathMappingInput!, config: AwsConfig): JSON
  getBasePathMappings(input: AwsAPIGatewayGetBasePathMappingsInput!, config: AwsConfig): AwsAPIGatewayGetBasePathMappingsOutput
  getClientCertificate(input: AwsAPIGatewayGetClientCertificateInput!, config: AwsConfig): JSON
  getClientCertificates(input: AwsAPIGatewayGetClientCertificatesInput, config: AwsConfig): AwsAPIGatewayGetClientCertificatesOutput
  getDeployment(input: AwsAPIGatewayGetDeploymentInput!, config: AwsConfig): JSON
  getDeployments(input: AwsAPIGatewayGetDeploymentsInput!, config: AwsConfig): AwsAPIGatewayGetDeploymentsOutput
  getDocumentationPart(input: AwsAPIGatewayGetDocumentationPartInput!, config: AwsConfig): JSON
  getDocumentationParts(input: AwsAPIGatewayGetDocumentationPartsInput!, config: AwsConfig): AwsAPIGatewayGetDocumentationPartsOutput
  getDocumentationVersion(input: AwsAPIGatewayGetDocumentationVersionInput!, config: AwsConfig): JSON
  getDocumentationVersions(input: AwsAPIGatewayGetDocumentationVersionsInput!, config: AwsConfig): AwsAPIGatewayGetDocumentationVersionsOutput
  getDomainName(input: AwsAPIGatewayGetDomainNameInput!, config: AwsConfig): JSON
  getDomainNames(input: AwsAPIGatewayGetDomainNamesInput, config: AwsConfig): AwsAPIGatewayGetDomainNamesOutput
  getExport(input: AwsAPIGatewayGetExportInput!, config: AwsConfig): AwsAPIGatewayGetExportOutput
  getGatewayResponse(input: AwsAPIGatewayGetGatewayResponseInput!, config: AwsConfig): JSON
  getGatewayResponses(input: AwsAPIGatewayGetGatewayResponsesInput!, config: AwsConfig): AwsAPIGatewayGetGatewayResponsesOutput
  getIntegration(input: AwsAPIGatewayGetIntegrationInput!, config: AwsConfig): JSON
  getIntegrationResponse(input: AwsAPIGatewayGetIntegrationResponseInput!, config: AwsConfig): JSON
  getMethod(input: AwsAPIGatewayGetMethodInput!, config: AwsConfig): JSON
  getMethodResponse(input: AwsAPIGatewayGetMethodResponseInput!, config: AwsConfig): JSON
  getModel(input: AwsAPIGatewayGetModelInput!, config: AwsConfig): JSON
  getModelTemplate(input: AwsAPIGatewayGetModelTemplateInput!, config: AwsConfig): AwsAPIGatewayGetModelTemplateOutput
  getModels(input: AwsAPIGatewayGetModelsInput!, config: AwsConfig): AwsAPIGatewayGetModelsOutput
  getRequestValidator(input: AwsAPIGatewayGetRequestValidatorInput!, config: AwsConfig): JSON
  getRequestValidators(input: AwsAPIGatewayGetRequestValidatorsInput!, config: AwsConfig): AwsAPIGatewayGetRequestValidatorsOutput
  getResource(input: AwsAPIGatewayGetResourceInput!, config: AwsConfig): JSON
  getResources(input: AwsAPIGatewayGetResourcesInput!, config: AwsConfig): AwsAPIGatewayGetResourcesOutput
  getRestApi(input: AwsAPIGatewayGetRestApiInput!, config: AwsConfig): JSON
  getRestApis(input: AwsAPIGatewayGetRestApisInput, config: AwsConfig): AwsAPIGatewayGetRestApisOutput
  getSdk(input: AwsAPIGatewayGetSdkInput!, config: AwsConfig): AwsAPIGatewayGetSdkOutput
  getSdkType(input: AwsAPIGatewayGetSdkTypeInput!, config: AwsConfig): JSON
  getSdkTypes(input: AwsAPIGatewayGetSdkTypesInput, config: AwsConfig): AwsAPIGatewayGetSdkTypesOutput
  getStage(input: AwsAPIGatewayGetStageInput!, config: AwsConfig): JSON
  getStages(input: AwsAPIGatewayGetStagesInput!, config: AwsConfig): AwsAPIGatewayGetStagesOutput
  getUsage(input: AwsAPIGatewayGetUsageInput!, config: AwsConfig): JSON
  getUsagePlan(input: AwsAPIGatewayGetUsagePlanInput!, config: AwsConfig): JSON
  getUsagePlanKey(input: AwsAPIGatewayGetUsagePlanKeyInput!, config: AwsConfig): JSON
  getUsagePlanKeys(input: AwsAPIGatewayGetUsagePlanKeysInput!, config: AwsConfig): AwsAPIGatewayGetUsagePlanKeysOutput
  getUsagePlans(input: AwsAPIGatewayGetUsagePlansInput, config: AwsConfig): AwsAPIGatewayGetUsagePlansOutput
  importApiKeys(input: AwsAPIGatewayImportApiKeysInput!, config: AwsConfig): AwsAPIGatewayImportApiKeysOutput
  importDocumentationParts(input: AwsAPIGatewayImportDocumentationPartsInput!, config: AwsConfig): AwsAPIGatewayImportDocumentationPartsOutput
  importRestApi(input: AwsAPIGatewayImportRestApiInput!, config: AwsConfig): JSON
  putGatewayResponse(input: AwsAPIGatewayPutGatewayResponseInput!, config: AwsConfig): JSON
  putIntegration(input: AwsAPIGatewayPutIntegrationInput!, config: AwsConfig): JSON
  putIntegrationResponse(input: AwsAPIGatewayPutIntegrationResponseInput!, config: AwsConfig): JSON
  putMethod(input: AwsAPIGatewayPutMethodInput!, config: AwsConfig): JSON
  putMethodResponse(input: AwsAPIGatewayPutMethodResponseInput!, config: AwsConfig): JSON
  putRestApi(input: AwsAPIGatewayPutRestApiInput!, config: AwsConfig): JSON
  testInvokeAuthorizer(input: AwsAPIGatewayTestInvokeAuthorizerInput!, config: AwsConfig): AwsAPIGatewayTestInvokeAuthorizerOutput
  testInvokeMethod(input: AwsAPIGatewayTestInvokeMethodInput!, config: AwsConfig): AwsAPIGatewayTestInvokeMethodOutput
  updateAccount(input: AwsAPIGatewayUpdateAccountInput, config: AwsConfig): JSON
  updateApiKey(input: AwsAPIGatewayUpdateApiKeyInput!, config: AwsConfig): JSON
  updateAuthorizer(input: AwsAPIGatewayUpdateAuthorizerInput!, config: AwsConfig): JSON
  updateBasePathMapping(input: AwsAPIGatewayUpdateBasePathMappingInput!, config: AwsConfig): JSON
  updateClientCertificate(input: AwsAPIGatewayUpdateClientCertificateInput!, config: AwsConfig): JSON
  updateDeployment(input: AwsAPIGatewayUpdateDeploymentInput!, config: AwsConfig): JSON
  updateDocumentationPart(input: AwsAPIGatewayUpdateDocumentationPartInput!, config: AwsConfig): JSON
  updateDocumentationVersion(input: AwsAPIGatewayUpdateDocumentationVersionInput!, config: AwsConfig): JSON
  updateDomainName(input: AwsAPIGatewayUpdateDomainNameInput!, config: AwsConfig): JSON
  updateGatewayResponse(input: AwsAPIGatewayUpdateGatewayResponseInput!, config: AwsConfig): JSON
  updateIntegration(input: AwsAPIGatewayUpdateIntegrationInput!, config: AwsConfig): JSON
  updateIntegrationResponse(input: AwsAPIGatewayUpdateIntegrationResponseInput!, config: AwsConfig): JSON
  updateMethod(input: AwsAPIGatewayUpdateMethodInput!, config: AwsConfig): JSON
  updateMethodResponse(input: AwsAPIGatewayUpdateMethodResponseInput!, config: AwsConfig): JSON
  updateModel(input: AwsAPIGatewayUpdateModelInput!, config: AwsConfig): JSON
  updateRequestValidator(input: AwsAPIGatewayUpdateRequestValidatorInput!, config: AwsConfig): JSON
  updateResource(input: AwsAPIGatewayUpdateResourceInput!, config: AwsConfig): JSON
  updateRestApi(input: AwsAPIGatewayUpdateRestApiInput!, config: AwsConfig): JSON
  updateStage(input: AwsAPIGatewayUpdateStageInput!, config: AwsConfig): JSON
  updateUsage(input: AwsAPIGatewayUpdateUsageInput!, config: AwsConfig): JSON
  updateUsagePlan(input: AwsAPIGatewayUpdateUsagePlanInput!, config: AwsConfig): JSON
}

input AwsAPIGatewayCreateApiKeyInput {
  name: String
  description: String
  enabled: Boolean
  generateDistinctId: Boolean
  value: String
  stageKeys: [AwsAPIGatewayCreateApiKeyStageKeysInput]
  customerId: String
}

input AwsAPIGatewayCreateApiKeyStageKeysInput {
  restApiId: String
  stageName: String
}

input AwsAPIGatewayCreateAuthorizerInput {
  restApiId: String!
  name: String!
  type: String!
  providerARNs: [String]
  authType: String
  authorizerUri: String
  authorizerCredentials: String
  identitySource: String
  identityValidationExpression: String
  authorizerResultTtlInSeconds: Int
}

input AwsAPIGatewayCreateBasePathMappingInput {
  domainName: String!
  basePath: String
  restApiId: String!
  stage: String
}

input AwsAPIGatewayCreateDeploymentCanarySettingsInput {
  percentTraffic: JSON
  stageVariableOverrides: JSON
  useStageCache: Boolean
}

input AwsAPIGatewayCreateDeploymentInput {
  restApiId: String!
  stageName: String
  stageDescription: String
  description: String
  cacheClusterEnabled: Boolean
  cacheClusterSize: String
  variables: JSON
  canarySettings: AwsAPIGatewayCreateDeploymentCanarySettingsInput
}

input AwsAPIGatewayCreateDocumentationPartInput {
  restApiId: String!
  location: AwsAPIGatewaySsInput!
  properties: String!
}

input AwsAPIGatewayCreateDocumentationVersionInput {
  restApiId: String!
  documentationVersion: String!
  stageName: String
  description: String
}

input AwsAPIGatewayCreateDomainNameInput {
  domainName: String!
  certificateName: String
  certificateBody: String
  certificatePrivateKey: String
  certificateChain: String
  certificateArn: String
  regionalCertificateName: String
  regionalCertificateArn: String
  endpointConfiguration: AwsAPIGatewaySzInput
}

input AwsAPIGatewayCreateModelInput {
  restApiId: String!
  name: String!
  description: String
  schema: String
  contentType: String!
}

input AwsAPIGatewayCreateRequestValidatorInput {
  restApiId: String!
  name: String
  validateRequestBody: Boolean
  validateRequestParameters: Boolean
}

input AwsAPIGatewayCreateResourceInput {
  restApiId: String!
  parentId: String!
  pathPart: String!
}

input AwsAPIGatewayCreateRestApiInput {
  name: String!
  description: String
  version: String
  cloneFrom: String
  binaryMediaTypes: [String]
  endpointConfiguration: AwsAPIGatewaySzInput
}

input AwsAPIGatewayCreateStageInput {
  restApiId: String!
  stageName: String!
  deploymentId: String!
  description: String
  cacheClusterEnabled: Boolean
  cacheClusterSize: String
  variables: JSON
  documentationVersion: String
  canarySettings: AwsAPIGatewayS1oInput
}

input AwsAPIGatewayCreateUsagePlanInput {
  name: String!
  description: String
  apiStages: [AwsAPIGatewayS1wInput]
  throttle: AwsAPIGatewayS1yInput
  quota: AwsAPIGatewayS1zInput
}

input AwsAPIGatewayCreateUsagePlanKeyInput {
  usagePlanId: String!
  keyId: String!
  keyType: String!
}

input AwsAPIGatewayDeleteApiKeyInput {
  apiKey: String!
}

input AwsAPIGatewayDeleteAuthorizerInput {
  restApiId: String!
  authorizerId: String!
}

input AwsAPIGatewayDeleteBasePathMappingInput {
  domainName: String!
  basePath: String!
}

input AwsAPIGatewayDeleteClientCertificateInput {
  clientCertificateId: String!
}

input AwsAPIGatewayDeleteDeploymentInput {
  restApiId: String!
  deploymentId: String!
}

input AwsAPIGatewayDeleteDocumentationPartInput {
  restApiId: String!
  documentationPartId: String!
}

input AwsAPIGatewayDeleteDocumentationVersionInput {
  restApiId: String!
  documentationVersion: String!
}

input AwsAPIGatewayDeleteDomainNameInput {
  domainName: String!
}

input AwsAPIGatewayDeleteGatewayResponseInput {
  restApiId: String!
  responseType: String!
}

input AwsAPIGatewayDeleteIntegrationInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
}

input AwsAPIGatewayDeleteIntegrationResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
}

input AwsAPIGatewayDeleteMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
}

input AwsAPIGatewayDeleteMethodResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
}

input AwsAPIGatewayDeleteModelInput {
  restApiId: String!
  modelName: String!
}

input AwsAPIGatewayDeleteRequestValidatorInput {
  restApiId: String!
  requestValidatorId: String!
}

input AwsAPIGatewayDeleteResourceInput {
  restApiId: String!
  resourceId: String!
}

input AwsAPIGatewayDeleteRestApiInput {
  restApiId: String!
}

input AwsAPIGatewayDeleteStageInput {
  restApiId: String!
  stageName: String!
}

input AwsAPIGatewayDeleteUsagePlanInput {
  usagePlanId: String!
}

input AwsAPIGatewayDeleteUsagePlanKeyInput {
  usagePlanId: String!
  keyId: String!
}

input AwsAPIGatewayFlushStageAuthorizersCacheInput {
  restApiId: String!
  stageName: String!
}

input AwsAPIGatewayFlushStageCacheInput {
  restApiId: String!
  stageName: String!
}

input AwsAPIGatewayGenerateClientCertificateInput {
  description: String
}

input AwsAPIGatewayGetApiKeyInput {
  apiKey: String!
  includeValue: Boolean
}

input AwsAPIGatewayGetApiKeysInput {
  position: String
  limit: Int
  nameQuery: String
  customerId: String
  includeValues: Boolean
}

type AwsAPIGatewayGetApiKeysOutput {
  warnings: [String]
  position: String
  items: [AwsAPIGatewayS6]
}

input AwsAPIGatewayGetAuthorizerInput {
  restApiId: String!
  authorizerId: String!
}

input AwsAPIGatewayGetAuthorizersInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetAuthorizersOutput {
  position: String
  items: [AwsAPIGatewaySe]
}

input AwsAPIGatewayGetBasePathMappingInput {
  domainName: String!
  basePath: String!
}

input AwsAPIGatewayGetBasePathMappingsInput {
  domainName: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetBasePathMappingsOutput {
  position: String
  items: [AwsAPIGatewaySg]
}

input AwsAPIGatewayGetClientCertificateInput {
  clientCertificateId: String!
}

input AwsAPIGatewayGetClientCertificatesInput {
  position: String
  limit: Int
}

type AwsAPIGatewayGetClientCertificatesOutput {
  position: String
  items: [AwsAPIGatewayS2s]
}

input AwsAPIGatewayGetDeploymentInput {
  restApiId: String!
  deploymentId: String!
  embed: [String]
}

input AwsAPIGatewayGetDeploymentsInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetDeploymentsOutput {
  position: String
  items: [AwsAPIGatewaySn]
}

input AwsAPIGatewayGetDocumentationPartInput {
  restApiId: String!
  documentationPartId: String!
}

input AwsAPIGatewayGetDocumentationPartsInput {
  restApiId: String!
  type: String
  nameQuery: String
  path: String
  position: String
  limit: Int
  locationStatus: String
}

type AwsAPIGatewayGetDocumentationPartsOutput {
  position: String
  items: [AwsAPIGatewaySv]
}

input AwsAPIGatewayGetDocumentationVersionInput {
  restApiId: String!
  documentationVersion: String!
}

input AwsAPIGatewayGetDocumentationVersionsInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetDocumentationVersionsOutput {
  position: String
  items: [AwsAPIGatewaySx]
}

input AwsAPIGatewayGetDomainNameInput {
  domainName: String!
}

input AwsAPIGatewayGetDomainNamesInput {
  position: String
  limit: Int
}

type AwsAPIGatewayGetDomainNamesOutput {
  position: String
  items: [AwsAPIGatewayS12]
}

input AwsAPIGatewayGetExportInput {
  restApiId: String!
  stageName: String!
  exportType: String!
  parameters: JSON
  accepts: String
}

type AwsAPIGatewayGetExportOutput {
  contentType: String
  contentDisposition: String
  body: JSON
}

input AwsAPIGatewayGetGatewayResponseInput {
  restApiId: String!
  responseType: String!
}

input AwsAPIGatewayGetGatewayResponsesInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetGatewayResponsesOutput {
  position: String
  items: [AwsAPIGatewayS3w]
}

input AwsAPIGatewayGetIntegrationInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
}

input AwsAPIGatewayGetIntegrationResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
}

input AwsAPIGatewayGetMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
}

input AwsAPIGatewayGetMethodResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
}

input AwsAPIGatewayGetModelInput {
  restApiId: String!
  modelName: String!
  flatten: Boolean
}

input AwsAPIGatewayGetModelsInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetModelsOutput {
  position: String
  items: [AwsAPIGatewayS14]
}

input AwsAPIGatewayGetModelTemplateInput {
  restApiId: String!
  modelName: String!
}

type AwsAPIGatewayGetModelTemplateOutput {
  value: String
}

input AwsAPIGatewayGetRequestValidatorInput {
  restApiId: String!
  requestValidatorId: String!
}

input AwsAPIGatewayGetRequestValidatorsInput {
  restApiId: String!
  position: String
  limit: Int
}

type AwsAPIGatewayGetRequestValidatorsOutput {
  position: String
  items: [AwsAPIGatewayS16]
}

input AwsAPIGatewayGetResourceInput {
  restApiId: String!
  resourceId: String!
  embed: [String]
}

input AwsAPIGatewayGetResourcesInput {
  restApiId: String!
  position: String
  limit: Int
  embed: [String]
}

type AwsAPIGatewayGetResourcesOutput {
  position: String
  items: [AwsAPIGatewayS18]
}

input AwsAPIGatewayGetRestApiInput {
  restApiId: String!
}

input AwsAPIGatewayGetRestApisInput {
  position: String
  limit: Int
}

type AwsAPIGatewayGetRestApisOutput {
  position: String
  items: [AwsAPIGatewayS1m]
}

input AwsAPIGatewayGetSdkInput {
  restApiId: String!
  stageName: String!
  sdkType: String!
  parameters: JSON
}

type AwsAPIGatewayGetSdkOutput {
  contentType: String
  contentDisposition: String
  body: JSON
}

input AwsAPIGatewayGetSdkTypeInput {
  id: String!
}

input AwsAPIGatewayGetSdkTypesInput {
  position: String
  limit: Int
}

type AwsAPIGatewayGetSdkTypesOutput {
  position: String
  items: [AwsAPIGatewayS4p]
}

input AwsAPIGatewayGetStageInput {
  restApiId: String!
  stageName: String!
}

input AwsAPIGatewayGetStagesInput {
  restApiId: String!
  deploymentId: String
}

type AwsAPIGatewayGetStagesOutput {
  item: [AwsAPIGatewayS1p]
}

input AwsAPIGatewayGetUsageInput {
  usagePlanId: String!
  keyId: String
  startDate: String!
  endDate: String!
  position: String
  limit: Int
}

input AwsAPIGatewayGetUsagePlanInput {
  usagePlanId: String!
}

input AwsAPIGatewayGetUsagePlanKeyInput {
  usagePlanId: String!
  keyId: String!
}

input AwsAPIGatewayGetUsagePlanKeysInput {
  usagePlanId: String!
  position: String
  limit: Int
  nameQuery: String
}

type AwsAPIGatewayGetUsagePlanKeysOutput {
  position: String
  items: [AwsAPIGatewayS23]
}

input AwsAPIGatewayGetUsagePlansInput {
  position: String
  keyId: String
  limit: Int
}

type AwsAPIGatewayGetUsagePlansOutput {
  position: String
  items: [AwsAPIGatewayS21]
}

input AwsAPIGatewayImportApiKeysInput {
  body: JSON!
  format: String!
  failOnWarnings: Boolean
}

type AwsAPIGatewayImportApiKeysOutput {
  ids: [String]
  warnings: [String]
}

input AwsAPIGatewayImportDocumentationPartsInput {
  restApiId: String!
  mode: String
  failOnWarnings: Boolean
  body: JSON!
}

type AwsAPIGatewayImportDocumentationPartsOutput {
  ids: [String]
  warnings: [String]
}

input AwsAPIGatewayImportRestApiInput {
  failOnWarnings: Boolean
  parameters: JSON
  body: JSON!
}

input AwsAPIGatewayPutGatewayResponseInput {
  restApiId: String!
  responseType: String!
  statusCode: String
  responseParameters: JSON
  responseTemplates: JSON
}

input AwsAPIGatewayPutIntegrationInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  type: String!
  integrationHttpMethod: String
  uri: String
  credentials: String
  requestParameters: JSON
  requestTemplates: JSON
  passthroughBehavior: String
  cacheNamespace: String
  cacheKeyParameters: [String]
  contentHandling: String
  timeoutInMillis: Int
}

input AwsAPIGatewayPutIntegrationResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
  selectionPattern: String
  responseParameters: JSON
  responseTemplates: JSON
  contentHandling: String
}

input AwsAPIGatewayPutMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  authorizationType: String!
  authorizerId: String
  apiKeyRequired: Boolean
  operationName: String
  requestParameters: JSON
  requestModels: JSON
  requestValidatorId: String
}

input AwsAPIGatewayPutMethodResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
  responseParameters: JSON
  responseModels: JSON
}

input AwsAPIGatewayPutRestApiInput {
  restApiId: String!
  mode: String
  failOnWarnings: Boolean
  parameters: JSON
  body: JSON!
}

type AwsAPIGatewayS12 {
  domainName: String
  certificateName: String
  certificateArn: String
  certificateUploadDate: Date
  regionalDomainName: String
  regionalHostedZoneId: String
  regionalCertificateName: String
  regionalCertificateArn: String
  distributionDomainName: String
  distributionHostedZoneId: String
  endpointConfiguration: AwsAPIGatewaySz
}

type AwsAPIGatewayS14 {
  id: String
  name: String
  description: String
  schema: String
  contentType: String
}

type AwsAPIGatewayS16 {
  id: String
  name: String
  validateRequestBody: Boolean
  validateRequestParameters: Boolean
}

type AwsAPIGatewayS18 {
  id: String
  parentId: String
  pathPart: String
  path: String
  resourceMethods: JSON
}

type AwsAPIGatewayS1m {
  id: String
  name: String
  description: String
  createdDate: Date
  version: String
  warnings: [String]
  binaryMediaTypes: [String]
  endpointConfiguration: AwsAPIGatewaySz
}

type AwsAPIGatewayS1o {
  percentTraffic: JSON
  deploymentId: String
  stageVariableOverrides: JSON
  useStageCache: Boolean
}

input AwsAPIGatewayS1oInput {
  percentTraffic: JSON
  deploymentId: String
  stageVariableOverrides: JSON
  useStageCache: Boolean
}

type AwsAPIGatewayS1p {
  deploymentId: String
  clientCertificateId: String
  stageName: String
  description: String
  cacheClusterEnabled: Boolean
  cacheClusterSize: String
  cacheClusterStatus: String
  methodSettings: JSON
  variables: JSON
  documentationVersion: String
  accessLogSettings: AwsAPIGatewayS1pAccessLogSettings
  canarySettings: AwsAPIGatewayS1o
  createdDate: Date
  lastUpdatedDate: Date
}

type AwsAPIGatewayS1pAccessLogSettings {
  format: String
  destinationArn: String
}

type AwsAPIGatewayS1w {
  apiId: String
  stage: String
}

input AwsAPIGatewayS1wInput {
  apiId: String
  stage: String
}

type AwsAPIGatewayS1y {
  burstLimit: Int
  rateLimit: JSON
}

input AwsAPIGatewayS1yInput {
  burstLimit: Int
  rateLimit: JSON
}

type AwsAPIGatewayS1z {
  limit: Int
  offset: Int
  period: String
}

input AwsAPIGatewayS1zInput {
  limit: Int
  offset: Int
  period: String
}

type AwsAPIGatewayS21 {
  id: String
  name: String
  description: String
  apiStages: [AwsAPIGatewayS1w]
  throttle: AwsAPIGatewayS1y
  quota: AwsAPIGatewayS1z
  productCode: String
}

type AwsAPIGatewayS23 {
  id: String
  type: String
  value: String
  name: String
}

type AwsAPIGatewayS2s {
  clientCertificateId: String
  description: String
  pemEncodedCertificate: String
  createdDate: Date
  expirationDate: Date
}

type AwsAPIGatewayS3w {
  responseType: String
  statusCode: String
  responseParameters: JSON
  responseTemplates: JSON
  defaultResponse: Boolean
}

type AwsAPIGatewayS4p {
  id: String
  friendlyName: String
  description: String
  configurationProperties: [AwsAPIGatewayS4pConfigurationProperties]
}

type AwsAPIGatewayS4pConfigurationProperties {
  name: String
  friendlyName: String
  description: String
  required: Boolean
  defaultValue: String
}

input AwsAPIGatewayS5xInput {
  op: String
  path: String
  value: String
  from: String
}

type AwsAPIGatewayS6 {
  id: String
  value: String
  name: String
  customerId: String
  description: String
  enabled: Boolean
  createdDate: Date
  lastUpdatedDate: Date
  stageKeys: [String]
}

type AwsAPIGatewaySe {
  id: String
  name: String
  type: String
  providerARNs: [String]
  authType: String
  authorizerUri: String
  authorizerCredentials: String
  identitySource: String
  identityValidationExpression: String
  authorizerResultTtlInSeconds: Int
}

type AwsAPIGatewaySg {
  basePath: String
  restApiId: String
  stage: String
}

type AwsAPIGatewaySn {
  id: String
  description: String
  createdDate: Date
  apiSummary: JSON
}

type AwsAPIGatewaySs {
  type: String!
  path: String
  method: String
  statusCode: String
  name: String
}

input AwsAPIGatewaySsInput {
  type: String!
  path: String
  method: String
  statusCode: String
  name: String
}

type AwsAPIGatewaySv {
  id: String
  location: AwsAPIGatewaySs
  properties: String
}

type AwsAPIGatewaySx {
  version: String
  createdDate: Date
  description: String
}

type AwsAPIGatewaySz {
  types: [String]
}

input AwsAPIGatewaySzInput {
  types: [String]
}

input AwsAPIGatewayTestInvokeAuthorizerInput {
  restApiId: String!
  authorizerId: String!
  headers: JSON
  pathWithQueryString: String
  body: String
  stageVariables: JSON
  additionalContext: JSON
}

type AwsAPIGatewayTestInvokeAuthorizerOutput {
  clientStatus: Int
  log: String
  latency: JSON
  principalId: String
  policy: String
  authorization: JSON
  claims: JSON
}

input AwsAPIGatewayTestInvokeMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  pathWithQueryString: String
  body: String
  headers: JSON
  clientCertificateId: String
  stageVariables: JSON
}

type AwsAPIGatewayTestInvokeMethodOutput {
  status: Int
  body: String
  headers: JSON
  log: String
  latency: JSON
}

input AwsAPIGatewayUpdateAccountInput {
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateApiKeyInput {
  apiKey: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateAuthorizerInput {
  restApiId: String!
  authorizerId: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateBasePathMappingInput {
  domainName: String!
  basePath: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateClientCertificateInput {
  clientCertificateId: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateDeploymentInput {
  restApiId: String!
  deploymentId: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateDocumentationPartInput {
  restApiId: String!
  documentationPartId: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateDocumentationVersionInput {
  restApiId: String!
  documentationVersion: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateDomainNameInput {
  domainName: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateGatewayResponseInput {
  restApiId: String!
  responseType: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateIntegrationInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateIntegrationResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateMethodInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateMethodResponseInput {
  restApiId: String!
  resourceId: String!
  httpMethod: String!
  statusCode: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateModelInput {
  restApiId: String!
  modelName: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateRequestValidatorInput {
  restApiId: String!
  requestValidatorId: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateResourceInput {
  restApiId: String!
  resourceId: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateRestApiInput {
  restApiId: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateStageInput {
  restApiId: String!
  stageName: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateUsageInput {
  usagePlanId: String!
  keyId: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

input AwsAPIGatewayUpdateUsagePlanInput {
  usagePlanId: String!
  patchOperations: [AwsAPIGatewayS5xInput]
}

# Application Auto Scaling (2016-02-06)
type AwsApplicationAutoScaling {
  deleteScalingPolicy(input: AwsApplicationAutoScalingDeleteScalingPolicyInput!, config: AwsConfig): JSON
  deleteScheduledAction(input: AwsApplicationAutoScalingDeleteScheduledActionInput!, config: AwsConfig): JSON
  deregisterScalableTarget(input: AwsApplicationAutoScalingDeregisterScalableTargetInput!, config: AwsConfig): JSON
  describeScalableTargets(input: AwsApplicationAutoScalingDescribeScalableTargetsInput!, config: AwsConfig): AwsApplicationAutoScalingDescribeScalableTargetsOutput
  describeScalingActivities(input: AwsApplicationAutoScalingDescribeScalingActivitiesInput!, config: AwsConfig): AwsApplicationAutoScalingDescribeScalingActivitiesOutput
  describeScalingPolicies(input: AwsApplicationAutoScalingDescribeScalingPoliciesInput!, config: AwsConfig): AwsApplicationAutoScalingDescribeScalingPoliciesOutput
  describeScheduledActions(input: AwsApplicationAutoScalingDescribeScheduledActionsInput!, config: AwsConfig): AwsApplicationAutoScalingDescribeScheduledActionsOutput
  putScalingPolicy(input: AwsApplicationAutoScalingPutScalingPolicyInput!, config: AwsConfig): AwsApplicationAutoScalingPutScalingPolicyOutput
  putScheduledAction(input: AwsApplicationAutoScalingPutScheduledActionInput!, config: AwsConfig): JSON
  registerScalableTarget(input: AwsApplicationAutoScalingRegisterScalableTargetInput!, config: AwsConfig): JSON
}

input AwsApplicationAutoScalingDeleteScalingPolicyInput {
  PolicyName: String!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
}

input AwsApplicationAutoScalingDeleteScheduledActionInput {
  ServiceNamespace: String!
  ScheduledActionName: String!
  ResourceId: String!
  ScalableDimension: String
}

input AwsApplicationAutoScalingDeregisterScalableTargetInput {
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
}

input AwsApplicationAutoScalingDescribeScalableTargetsInput {
  ServiceNamespace: String!
  ResourceIds: [String]
  ScalableDimension: String
  MaxResults: Int
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScalableTargetsOutput {
  ScalableTargets: [AwsApplicationAutoScalingDescribeScalableTargetsOutputScalableTargets]
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScalableTargetsOutputScalableTargets {
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  MinCapacity: Int!
  MaxCapacity: Int!
  RoleARN: String!
  CreationTime: Date!
}

input AwsApplicationAutoScalingDescribeScalingActivitiesInput {
  ServiceNamespace: String!
  ResourceId: String
  ScalableDimension: String
  MaxResults: Int
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScalingActivitiesOutput {
  ScalingActivities: [AwsApplicationAutoScalingDescribeScalingActivitiesOutputScalingActivities]
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScalingActivitiesOutputScalingActivities {
  ActivityId: String!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  Description: String!
  Cause: String!
  StartTime: Date!
  EndTime: Date
  StatusCode: String!
  StatusMessage: String
  Details: String
}

input AwsApplicationAutoScalingDescribeScalingPoliciesInput {
  PolicyNames: [String]
  ServiceNamespace: String!
  ResourceId: String
  ScalableDimension: String
  MaxResults: Int
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScalingPoliciesOutput {
  ScalingPolicies: [AwsApplicationAutoScalingDescribeScalingPoliciesOutputScalingPolicies]
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScalingPoliciesOutputScalingPolicies {
  PolicyARN: String!
  PolicyName: String!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  PolicyType: String!
  StepScalingPolicyConfiguration: AwsApplicationAutoScalingSv
  TargetTrackingScalingPolicyConfiguration: AwsApplicationAutoScalingS14
  Alarms: [AwsApplicationAutoScalingS1i]
  CreationTime: Date!
}

input AwsApplicationAutoScalingDescribeScheduledActionsInput {
  ScheduledActionNames: [String]
  ServiceNamespace: String!
  ResourceId: String
  ScalableDimension: String
  MaxResults: Int
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScheduledActionsOutput {
  ScheduledActions: [AwsApplicationAutoScalingDescribeScheduledActionsOutputScheduledActions]
  NextToken: String
}

type AwsApplicationAutoScalingDescribeScheduledActionsOutputScheduledActions {
  ScheduledActionName: String!
  ScheduledActionARN: String!
  ServiceNamespace: String!
  Schedule: String!
  ResourceId: String!
  ScalableDimension: String
  StartTime: Date
  EndTime: Date
  ScalableTargetAction: AwsApplicationAutoScalingS1p
  CreationTime: Date!
}

input AwsApplicationAutoScalingPutScalingPolicyInput {
  PolicyName: String!
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  PolicyType: String
  StepScalingPolicyConfiguration: AwsApplicationAutoScalingSvInput
  TargetTrackingScalingPolicyConfiguration: AwsApplicationAutoScalingS14Input
}

type AwsApplicationAutoScalingPutScalingPolicyOutput {
  PolicyARN: String!
  Alarms: [AwsApplicationAutoScalingS1i]
}

input AwsApplicationAutoScalingPutScheduledActionInput {
  ServiceNamespace: String!
  Schedule: String
  ScheduledActionName: String!
  ResourceId: String!
  ScalableDimension: String
  StartTime: Date
  EndTime: Date
  ScalableTargetAction: AwsApplicationAutoScalingS1pInput
}

input AwsApplicationAutoScalingRegisterScalableTargetInput {
  ServiceNamespace: String!
  ResourceId: String!
  ScalableDimension: String!
  MinCapacity: Int
  MaxCapacity: Int
  RoleARN: String
}

type AwsApplicationAutoScalingS14 {
  TargetValue: JSON!
  PredefinedMetricSpecification: AwsApplicationAutoScalingS14PredefinedMetricSpecification
  CustomizedMetricSpecification: AwsApplicationAutoScalingS14CustomizedMetricSpecification
  ScaleOutCooldown: Int
  ScaleInCooldown: Int
  DisableScaleIn: Boolean
}

type AwsApplicationAutoScalingS14CustomizedMetricSpecification {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsApplicationAutoScalingS14CustomizedMetricSpecificationDimensions]
  Statistic: String!
  Unit: String
}

type AwsApplicationAutoScalingS14CustomizedMetricSpecificationDimensions {
  Name: String!
  Value: String!
}

input AwsApplicationAutoScalingS14CustomizedMetricSpecificationDimensionsInput {
  Name: String!
  Value: String!
}

input AwsApplicationAutoScalingS14CustomizedMetricSpecificationInput {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsApplicationAutoScalingS14CustomizedMetricSpecificationDimensionsInput]
  Statistic: String!
  Unit: String
}

input AwsApplicationAutoScalingS14Input {
  TargetValue: JSON!
  PredefinedMetricSpecification: AwsApplicationAutoScalingS14PredefinedMetricSpecificationInput
  CustomizedMetricSpecification: AwsApplicationAutoScalingS14CustomizedMetricSpecificationInput
  ScaleOutCooldown: Int
  ScaleInCooldown: Int
  DisableScaleIn: Boolean
}

type AwsApplicationAutoScalingS14PredefinedMetricSpecification {
  PredefinedMetricType: String!
  ResourceLabel: String
}

input AwsApplicationAutoScalingS14PredefinedMetricSpecificationInput {
  PredefinedMetricType: String!
  ResourceLabel: String
}

type AwsApplicationAutoScalingS1i {
  AlarmName: String!
  AlarmARN: String!
}

type AwsApplicationAutoScalingS1p {
  MinCapacity: Int
  MaxCapacity: Int
}

input AwsApplicationAutoScalingS1pInput {
  MinCapacity: Int
  MaxCapacity: Int
}

type AwsApplicationAutoScalingSv {
  AdjustmentType: String
  StepAdjustments: [AwsApplicationAutoScalingSvStepAdjustments]
  MinAdjustmentMagnitude: Int
  Cooldown: Int
  MetricAggregationType: String
}

input AwsApplicationAutoScalingSvInput {
  AdjustmentType: String
  StepAdjustments: [AwsApplicationAutoScalingSvStepAdjustmentsInput]
  MinAdjustmentMagnitude: Int
  Cooldown: Int
  MetricAggregationType: String
}

type AwsApplicationAutoScalingSvStepAdjustments {
  MetricIntervalLowerBound: JSON
  MetricIntervalUpperBound: JSON
  ScalingAdjustment: Int!
}

input AwsApplicationAutoScalingSvStepAdjustmentsInput {
  MetricIntervalLowerBound: JSON
  MetricIntervalUpperBound: JSON
  ScalingAdjustment: Int!
}

# Amazon AppStream (2016-12-01)
type AwsAppStream {
  associateFleet(input: AwsAppStreamAssociateFleetInput!, config: AwsConfig): JSON
  createDirectoryConfig(input: AwsAppStreamCreateDirectoryConfigInput!, config: AwsConfig): AwsAppStreamCreateDirectoryConfigOutput
  createFleet(input: AwsAppStreamCreateFleetInput!, config: AwsConfig): AwsAppStreamCreateFleetOutput
  createImageBuilder(input: AwsAppStreamCreateImageBuilderInput!, config: AwsConfig): AwsAppStreamCreateImageBuilderOutput
  createImageBuilderStreamingURL(input: AwsAppStreamCreateImageBuilderStreamingURLInput!, config: AwsConfig): AwsAppStreamCreateImageBuilderStreamingURLOutput
  createStack(input: AwsAppStreamCreateStackInput!, config: AwsConfig): AwsAppStreamCreateStackOutput
  createStreamingURL(input: AwsAppStreamCreateStreamingURLInput!, config: AwsConfig): AwsAppStreamCreateStreamingURLOutput
  deleteDirectoryConfig(input: AwsAppStreamDeleteDirectoryConfigInput!, config: AwsConfig): JSON
  deleteFleet(input: AwsAppStreamDeleteFleetInput!, config: AwsConfig): JSON
  deleteImage(input: AwsAppStreamDeleteImageInput!, config: AwsConfig): AwsAppStreamDeleteImageOutput
  deleteImageBuilder(input: AwsAppStreamDeleteImageBuilderInput!, config: AwsConfig): AwsAppStreamDeleteImageBuilderOutput
  deleteStack(input: AwsAppStreamDeleteStackInput!, config: AwsConfig): JSON
  describeDirectoryConfigs(input: AwsAppStreamDescribeDirectoryConfigsInput, config: AwsConfig): AwsAppStreamDescribeDirectoryConfigsOutput
  describeFleets(input: AwsAppStreamDescribeFleetsInput, config: AwsConfig): AwsAppStreamDescribeFleetsOutput
  describeImageBuilders(input: AwsAppStreamDescribeImageBuildersInput, config: AwsConfig): AwsAppStreamDescribeImageBuildersOutput
  describeImages(input: AwsAppStreamDescribeImagesInput, config: AwsConfig): AwsAppStreamDescribeImagesOutput
  describeSessions(input: AwsAppStreamDescribeSessionsInput!, config: AwsConfig): AwsAppStreamDescribeSessionsOutput
  describeStacks(input: AwsAppStreamDescribeStacksInput, config: AwsConfig): AwsAppStreamDescribeStacksOutput
  disassociateFleet(input: AwsAppStreamDisassociateFleetInput!, config: AwsConfig): JSON
  expireSession(input: AwsAppStreamExpireSessionInput!, config: AwsConfig): JSON
  listAssociatedFleets(input: AwsAppStreamListAssociatedFleetsInput!, config: AwsConfig): AwsAppStreamListAssociatedFleetsOutput
  listAssociatedStacks(input: AwsAppStreamListAssociatedStacksInput!, config: AwsConfig): AwsAppStreamListAssociatedStacksOutput
  startFleet(input: AwsAppStreamStartFleetInput!, config: AwsConfig): JSON
  startImageBuilder(input: AwsAppStreamStartImageBuilderInput!, config: AwsConfig): AwsAppStreamStartImageBuilderOutput
  stopFleet(input: AwsAppStreamStopFleetInput!, config: AwsConfig): JSON
  stopImageBuilder(input: AwsAppStreamStopImageBuilderInput!, config: AwsConfig): AwsAppStreamStopImageBuilderOutput
  updateDirectoryConfig(input: AwsAppStreamUpdateDirectoryConfigInput!, config: AwsConfig): AwsAppStreamUpdateDirectoryConfigOutput
  updateFleet(input: AwsAppStreamUpdateFleetInput!, config: AwsConfig): AwsAppStreamUpdateFleetOutput
  updateStack(input: AwsAppStreamUpdateStackInput!, config: AwsConfig): AwsAppStreamUpdateStackOutput
}

input AwsAppStreamAssociateFleetInput {
  FleetName: String!
  StackName: String!
}

input AwsAppStreamCreateDirectoryConfigInput {
  DirectoryName: String!
  OrganizationalUnitDistinguishedNames: [String]!
  ServiceAccountCredentials: AwsAppStreamS8Input!
}

type AwsAppStreamCreateDirectoryConfigOutput {
  DirectoryConfig: AwsAppStreamSc
}

input AwsAppStreamCreateFleetInput {
  Name: String!
  ImageName: String!
  InstanceType: String!
  FleetType: String
  ComputeCapacity: AwsAppStreamShInput!
  VpcConfig: AwsAppStreamSjInput
  MaxUserDurationInSeconds: Int
  DisconnectTimeoutInSeconds: Int
  Description: String
  DisplayName: String
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppStreamSpInput
}

type AwsAppStreamCreateFleetOutput {
  Fleet: AwsAppStreamSr
}

input AwsAppStreamCreateImageBuilderInput {
  Name: String!
  ImageName: String!
  InstanceType: String!
  Description: String
  DisplayName: String
  VpcConfig: AwsAppStreamSjInput
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppStreamSpInput
}

type AwsAppStreamCreateImageBuilderOutput {
  ImageBuilder: AwsAppStreamS10
}

input AwsAppStreamCreateImageBuilderStreamingURLInput {
  Name: String!
  Validity: JSON
}

type AwsAppStreamCreateImageBuilderStreamingURLOutput {
  StreamingURL: String
  Expires: Date
}

input AwsAppStreamCreateStackInput {
  Name: String!
  Description: String
  DisplayName: String
  StorageConnectors: [AwsAppStreamS1bInput]
}

type AwsAppStreamCreateStackOutput {
  Stack: AwsAppStreamS1g
}

input AwsAppStreamCreateStreamingURLInput {
  StackName: String!
  FleetName: String!
  UserId: String!
  ApplicationId: String
  Validity: JSON
  SessionContext: String
}

type AwsAppStreamCreateStreamingURLOutput {
  StreamingURL: String
  Expires: Date
}

input AwsAppStreamDeleteDirectoryConfigInput {
  DirectoryName: String!
}

input AwsAppStreamDeleteFleetInput {
  Name: String!
}

input AwsAppStreamDeleteImageBuilderInput {
  Name: String!
}

type AwsAppStreamDeleteImageBuilderOutput {
  ImageBuilder: AwsAppStreamS10
}

input AwsAppStreamDeleteImageInput {
  Name: String!
}

type AwsAppStreamDeleteImageOutput {
  Image: AwsAppStreamS1t
}

input AwsAppStreamDeleteStackInput {
  Name: String!
}

input AwsAppStreamDescribeDirectoryConfigsInput {
  DirectoryNames: [String]
  MaxResults: Int
  NextToken: String
}

type AwsAppStreamDescribeDirectoryConfigsOutput {
  DirectoryConfigs: [AwsAppStreamSc]
  NextToken: String
}

input AwsAppStreamDescribeFleetsInput {
  Names: [String]
  NextToken: String
}

type AwsAppStreamDescribeFleetsOutput {
  Fleets: [AwsAppStreamSr]
  NextToken: String
}

input AwsAppStreamDescribeImageBuildersInput {
  Names: [String]
  MaxResults: Int
  NextToken: String
}

type AwsAppStreamDescribeImageBuildersOutput {
  ImageBuilders: [AwsAppStreamS10]
  NextToken: String
}

input AwsAppStreamDescribeImagesInput {
  Names: [String]
}

type AwsAppStreamDescribeImagesOutput {
  Images: [AwsAppStreamS1t]
}

input AwsAppStreamDescribeSessionsInput {
  StackName: String!
  FleetName: String!
  UserId: String
  NextToken: String
  Limit: Int
  AuthenticationType: String
}

type AwsAppStreamDescribeSessionsOutput {
  Sessions: [AwsAppStreamDescribeSessionsOutputSessions]
  NextToken: String
}

type AwsAppStreamDescribeSessionsOutputSessions {
  Id: String!
  UserId: String!
  StackName: String!
  FleetName: String!
  State: String!
  AuthenticationType: String
}

input AwsAppStreamDescribeStacksInput {
  Names: [String]
  NextToken: String
}

type AwsAppStreamDescribeStacksOutput {
  Stacks: [AwsAppStreamS1g]
  NextToken: String
}

input AwsAppStreamDisassociateFleetInput {
  FleetName: String!
  StackName: String!
}

input AwsAppStreamExpireSessionInput {
  SessionId: String!
}

input AwsAppStreamListAssociatedFleetsInput {
  StackName: String!
  NextToken: String
}

type AwsAppStreamListAssociatedFleetsOutput {
  Names: [String]
  NextToken: String
}

input AwsAppStreamListAssociatedStacksInput {
  FleetName: String!
  NextToken: String
}

type AwsAppStreamListAssociatedStacksOutput {
  Names: [String]
  NextToken: String
}

type AwsAppStreamS10 {
  Name: String!
  Arn: String
  ImageArn: String
  Description: String
  DisplayName: String
  VpcConfig: AwsAppStreamSj
  InstanceType: String
  Platform: String
  State: String
  StateChangeReason: AwsAppStreamS10StateChangeReason
  CreatedTime: Date
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppStreamSp
  ImageBuilderErrors: [AwsAppStreamS10ImageBuilderErrors]
}

type AwsAppStreamS10ImageBuilderErrors {
  ErrorCode: String
  ErrorMessage: String
  ErrorTimestamp: Date
}

type AwsAppStreamS10StateChangeReason {
  Code: String
  Message: String
}

type AwsAppStreamS1b {
  ConnectorType: String!
  ResourceIdentifier: String
}

input AwsAppStreamS1bInput {
  ConnectorType: String!
  ResourceIdentifier: String
}

type AwsAppStreamS1g {
  Arn: String
  Name: String!
  Description: String
  DisplayName: String
  CreatedTime: Date
  StorageConnectors: [AwsAppStreamS1b]
  StackErrors: [AwsAppStreamS1gStackErrors]
}

type AwsAppStreamS1gStackErrors {
  ErrorCode: String
  ErrorMessage: String
}

type AwsAppStreamS1t {
  Name: String!
  Arn: String
  BaseImageArn: String
  DisplayName: String
  State: String
  Visibility: String
  ImageBuilderSupported: Boolean
  Platform: String
  Description: String
  StateChangeReason: AwsAppStreamS1tStateChangeReason
  Applications: [AwsAppStreamS1tApplications]
  CreatedTime: Date
  PublicBaseImageReleasedDate: Date
}

type AwsAppStreamS1tApplications {
  Name: String
  DisplayName: String
  IconURL: String
  LaunchPath: String
  LaunchParameters: String
  Enabled: Boolean
  Metadata: JSON
}

type AwsAppStreamS1tStateChangeReason {
  Code: String
  Message: String
}

type AwsAppStreamS8 {
  AccountName: String!
  AccountPassword: String!
}

input AwsAppStreamS8Input {
  AccountName: String!
  AccountPassword: String!
}

type AwsAppStreamSc {
  DirectoryName: String!
  OrganizationalUnitDistinguishedNames: [String]
  ServiceAccountCredentials: AwsAppStreamS8
  CreatedTime: Date
}

input AwsAppStreamShInput {
  DesiredInstances: Int!
}

type AwsAppStreamSj {
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

input AwsAppStreamSjInput {
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

type AwsAppStreamSp {
  DirectoryName: String
  OrganizationalUnitDistinguishedName: String
}

input AwsAppStreamSpInput {
  DirectoryName: String
  OrganizationalUnitDistinguishedName: String
}

type AwsAppStreamSr {
  Arn: String!
  Name: String!
  DisplayName: String
  Description: String
  ImageName: String!
  InstanceType: String!
  FleetType: String
  ComputeCapacityStatus: AwsAppStreamSrComputeCapacityStatus!
  MaxUserDurationInSeconds: Int
  DisconnectTimeoutInSeconds: Int
  State: String!
  VpcConfig: AwsAppStreamSj
  CreatedTime: Date
  FleetErrors: [AwsAppStreamSrFleetErrors]
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppStreamSp
}

type AwsAppStreamSrComputeCapacityStatus {
  Desired: Int!
  Running: Int
  InUse: Int
  Available: Int
}

type AwsAppStreamSrFleetErrors {
  ErrorCode: String
  ErrorMessage: String
}

input AwsAppStreamStartFleetInput {
  Name: String!
}

input AwsAppStreamStartImageBuilderInput {
  Name: String!
}

type AwsAppStreamStartImageBuilderOutput {
  ImageBuilder: AwsAppStreamS10
}

input AwsAppStreamStopFleetInput {
  Name: String!
}

input AwsAppStreamStopImageBuilderInput {
  Name: String!
}

type AwsAppStreamStopImageBuilderOutput {
  ImageBuilder: AwsAppStreamS10
}

input AwsAppStreamUpdateDirectoryConfigInput {
  DirectoryName: String!
  OrganizationalUnitDistinguishedNames: [String]
  ServiceAccountCredentials: AwsAppStreamS8Input
}

type AwsAppStreamUpdateDirectoryConfigOutput {
  DirectoryConfig: AwsAppStreamSc
}

input AwsAppStreamUpdateFleetInput {
  ImageName: String
  Name: String!
  InstanceType: String
  ComputeCapacity: AwsAppStreamShInput
  VpcConfig: AwsAppStreamSjInput
  MaxUserDurationInSeconds: Int
  DisconnectTimeoutInSeconds: Int
  DeleteVpcConfig: Boolean
  Description: String
  DisplayName: String
  EnableDefaultInternetAccess: Boolean
  DomainJoinInfo: AwsAppStreamSpInput
  AttributesToDelete: [String]
}

type AwsAppStreamUpdateFleetOutput {
  Fleet: AwsAppStreamSr
}

input AwsAppStreamUpdateStackInput {
  DisplayName: String
  Description: String
  Name: String!
  StorageConnectors: [AwsAppStreamS1bInput]
  DeleteStorageConnectors: Boolean
}

type AwsAppStreamUpdateStackOutput {
  Stack: AwsAppStreamS1g
}

# AWS AppSync (2017-07-25)
type AwsAppSync {
  createApiKey(input: AwsAppSyncCreateApiKeyInput!, config: AwsConfig): AwsAppSyncCreateApiKeyOutput
  createDataSource(input: AwsAppSyncCreateDataSourceInput!, config: AwsConfig): AwsAppSyncCreateDataSourceOutput
  createGraphqlApi(input: AwsAppSyncCreateGraphqlApiInput!, config: AwsConfig): AwsAppSyncCreateGraphqlApiOutput
  createResolver(input: AwsAppSyncCreateResolverInput!, config: AwsConfig): AwsAppSyncCreateResolverOutput
  createType(input: AwsAppSyncCreateTypeInput!, config: AwsConfig): AwsAppSyncCreateTypeOutput
  deleteApiKey(input: AwsAppSyncDeleteApiKeyInput!, config: AwsConfig): JSON
  deleteDataSource(input: AwsAppSyncDeleteDataSourceInput!, config: AwsConfig): JSON
  deleteGraphqlApi(input: AwsAppSyncDeleteGraphqlApiInput!, config: AwsConfig): JSON
  deleteResolver(input: AwsAppSyncDeleteResolverInput!, config: AwsConfig): JSON
  deleteType(input: AwsAppSyncDeleteTypeInput!, config: AwsConfig): JSON
  getDataSource(input: AwsAppSyncGetDataSourceInput!, config: AwsConfig): AwsAppSyncGetDataSourceOutput
  getGraphqlApi(input: AwsAppSyncGetGraphqlApiInput!, config: AwsConfig): AwsAppSyncGetGraphqlApiOutput
  getIntrospectionSchema(input: AwsAppSyncGetIntrospectionSchemaInput!, config: AwsConfig): AwsAppSyncGetIntrospectionSchemaOutput
  getResolver(input: AwsAppSyncGetResolverInput!, config: AwsConfig): AwsAppSyncGetResolverOutput
  getSchemaCreationStatus(input: AwsAppSyncGetSchemaCreationStatusInput!, config: AwsConfig): AwsAppSyncGetSchemaCreationStatusOutput
  getType(input: AwsAppSyncGetTypeInput!, config: AwsConfig): AwsAppSyncGetTypeOutput
  listApiKeys(input: AwsAppSyncListApiKeysInput!, config: AwsConfig): AwsAppSyncListApiKeysOutput
  listDataSources(input: AwsAppSyncListDataSourcesInput!, config: AwsConfig): AwsAppSyncListDataSourcesOutput
  listGraphqlApis(input: AwsAppSyncListGraphqlApisInput, config: AwsConfig): AwsAppSyncListGraphqlApisOutput
  listResolvers(input: AwsAppSyncListResolversInput!, config: AwsConfig): AwsAppSyncListResolversOutput
  listTypes(input: AwsAppSyncListTypesInput!, config: AwsConfig): AwsAppSyncListTypesOutput
  startSchemaCreation(input: AwsAppSyncStartSchemaCreationInput!, config: AwsConfig): AwsAppSyncStartSchemaCreationOutput
  updateDataSource(input: AwsAppSyncUpdateDataSourceInput!, config: AwsConfig): AwsAppSyncUpdateDataSourceOutput
  updateGraphqlApi(input: AwsAppSyncUpdateGraphqlApiInput!, config: AwsConfig): AwsAppSyncUpdateGraphqlApiOutput
  updateResolver(input: AwsAppSyncUpdateResolverInput!, config: AwsConfig): AwsAppSyncUpdateResolverOutput
  updateType(input: AwsAppSyncUpdateTypeInput!, config: AwsConfig): AwsAppSyncUpdateTypeOutput
}

input AwsAppSyncCreateApiKeyInput {
  apiId: String!
  description: String
}

type AwsAppSyncCreateApiKeyOutput {
  apiKey: AwsAppSyncS4
}

input AwsAppSyncCreateDataSourceInput {
  apiId: String!
  name: String!
  description: String
  type: String!
  serviceRoleArn: String
  dynamodbConfig: AwsAppSyncS9Input
  lambdaConfig: AwsAppSyncSbInput
  elasticsearchConfig: AwsAppSyncScInput
}

type AwsAppSyncCreateDataSourceOutput {
  dataSource: AwsAppSyncSe
}

input AwsAppSyncCreateGraphqlApiInput {
  name: String!
  authenticationType: String!
  userPoolConfig: AwsAppSyncShInput
}

type AwsAppSyncCreateGraphqlApiOutput {
  graphqlApi: AwsAppSyncSk
}

input AwsAppSyncCreateResolverInput {
  apiId: String!
  typeName: String!
  fieldName: String!
  dataSourceName: String!
  requestMappingTemplate: String!
  responseMappingTemplate: String
}

type AwsAppSyncCreateResolverOutput {
  resolver: AwsAppSyncSp
}

input AwsAppSyncCreateTypeInput {
  apiId: String!
  definition: String!
  format: String!
}

type AwsAppSyncCreateTypeOutput {
  type: AwsAppSyncSt
}

input AwsAppSyncDeleteApiKeyInput {
  apiId: String!
  id: String!
}

input AwsAppSyncDeleteDataSourceInput {
  apiId: String!
  name: String!
}

input AwsAppSyncDeleteGraphqlApiInput {
  apiId: String!
}

input AwsAppSyncDeleteResolverInput {
  apiId: String!
  typeName: String!
  fieldName: String!
}

input AwsAppSyncDeleteTypeInput {
  apiId: String!
  typeName: String!
}

input AwsAppSyncGetDataSourceInput {
  apiId: String!
  name: String!
}

type AwsAppSyncGetDataSourceOutput {
  dataSource: AwsAppSyncSe
}

input AwsAppSyncGetGraphqlApiInput {
  apiId: String!
}

type AwsAppSyncGetGraphqlApiOutput {
  graphqlApi: AwsAppSyncSk
}

input AwsAppSyncGetIntrospectionSchemaInput {
  apiId: String!
  format: String!
}

type AwsAppSyncGetIntrospectionSchemaOutput {
  schema: JSON
}

input AwsAppSyncGetResolverInput {
  apiId: String!
  typeName: String!
  fieldName: String!
}

type AwsAppSyncGetResolverOutput {
  resolver: AwsAppSyncSp
}

input AwsAppSyncGetSchemaCreationStatusInput {
  apiId: String!
}

type AwsAppSyncGetSchemaCreationStatusOutput {
  status: String
  details: String
}

input AwsAppSyncGetTypeInput {
  apiId: String!
  typeName: String!
  format: String!
}

type AwsAppSyncGetTypeOutput {
  type: AwsAppSyncSt
}

input AwsAppSyncListApiKeysInput {
  apiId: String!
  nextToken: String
  maxResults: Int
}

type AwsAppSyncListApiKeysOutput {
  apiKeys: [AwsAppSyncS4]
  nextToken: String
}

input AwsAppSyncListDataSourcesInput {
  apiId: String!
  nextToken: String
  maxResults: Int
}

type AwsAppSyncListDataSourcesOutput {
  dataSources: [AwsAppSyncSe]
  nextToken: String
}

input AwsAppSyncListGraphqlApisInput {
  nextToken: String
  maxResults: Int
}

type AwsAppSyncListGraphqlApisOutput {
  graphqlApis: [AwsAppSyncSk]
  nextToken: String
}

input AwsAppSyncListResolversInput {
  apiId: String!
  typeName: String!
  nextToken: String
  maxResults: Int
}

type AwsAppSyncListResolversOutput {
  resolvers: [AwsAppSyncSp]
  nextToken: String
}

input AwsAppSyncListTypesInput {
  apiId: String!
  format: String!
  nextToken: String
  maxResults: Int
}

type AwsAppSyncListTypesOutput {
  types: [AwsAppSyncSt]
  nextToken: String
}

type AwsAppSyncS4 {
  id: String
  description: String
  expires: JSON
}

type AwsAppSyncS9 {
  tableName: String!
  awsRegion: String!
  useCallerCredentials: Boolean
}

input AwsAppSyncS9Input {
  tableName: String!
  awsRegion: String!
  useCallerCredentials: Boolean
}

type AwsAppSyncSb {
  lambdaFunctionArn: String!
}

input AwsAppSyncSbInput {
  lambdaFunctionArn: String!
}

type AwsAppSyncSc {
  endpoint: String!
  awsRegion: String!
}

input AwsAppSyncScInput {
  endpoint: String!
  awsRegion: String!
}

type AwsAppSyncSe {
  dataSourceArn: String
  name: String
  description: String
  type: String
  serviceRoleArn: String
  dynamodbConfig: AwsAppSyncS9
  lambdaConfig: AwsAppSyncSb
  elasticsearchConfig: AwsAppSyncSc
}

type AwsAppSyncSh {
  userPoolId: String!
  awsRegion: String!
  defaultAction: String!
  appIdClientRegex: String
}

input AwsAppSyncShInput {
  userPoolId: String!
  awsRegion: String!
  defaultAction: String!
  appIdClientRegex: String
}

type AwsAppSyncSk {
  name: String
  apiId: String
  authenticationType: String
  userPoolConfig: AwsAppSyncSh
  arn: String
  uris: JSON
}

type AwsAppSyncSp {
  typeName: String
  fieldName: String
  dataSourceName: String
  resolverArn: String
  requestMappingTemplate: String
  responseMappingTemplate: String
}

type AwsAppSyncSt {
  name: String
  description: String
  arn: String
  definition: String
  format: String
}

input AwsAppSyncStartSchemaCreationInput {
  apiId: String!
  definition: JSON!
}

type AwsAppSyncStartSchemaCreationOutput {
  status: String
}

input AwsAppSyncUpdateDataSourceInput {
  apiId: String!
  name: String!
  description: String
  type: String!
  serviceRoleArn: String
  dynamodbConfig: AwsAppSyncS9Input
  lambdaConfig: AwsAppSyncSbInput
  elasticsearchConfig: AwsAppSyncScInput
}

type AwsAppSyncUpdateDataSourceOutput {
  dataSource: AwsAppSyncSe
}

input AwsAppSyncUpdateGraphqlApiInput {
  apiId: String!
  name: String!
  authenticationType: String
  userPoolConfig: AwsAppSyncShInput
}

type AwsAppSyncUpdateGraphqlApiOutput {
  graphqlApi: AwsAppSyncSk
}

input AwsAppSyncUpdateResolverInput {
  apiId: String!
  typeName: String!
  fieldName: String!
  dataSourceName: String!
  requestMappingTemplate: String!
  responseMappingTemplate: String
}

type AwsAppSyncUpdateResolverOutput {
  resolver: AwsAppSyncSp
}

input AwsAppSyncUpdateTypeInput {
  apiId: String!
  typeName: String!
  definition: String
  format: String!
}

type AwsAppSyncUpdateTypeOutput {
  type: AwsAppSyncSt
}

# Amazon Athena (2017-05-18)
type AwsAthena {
  batchGetNamedQuery(input: AwsAthenaBatchGetNamedQueryInput!, config: AwsConfig): AwsAthenaBatchGetNamedQueryOutput
  batchGetQueryExecution(input: AwsAthenaBatchGetQueryExecutionInput!, config: AwsConfig): AwsAthenaBatchGetQueryExecutionOutput
  createNamedQuery(input: AwsAthenaCreateNamedQueryInput!, config: AwsConfig): AwsAthenaCreateNamedQueryOutput
  deleteNamedQuery(input: AwsAthenaDeleteNamedQueryInput!, config: AwsConfig): JSON
  getNamedQuery(input: AwsAthenaGetNamedQueryInput!, config: AwsConfig): AwsAthenaGetNamedQueryOutput
  getQueryExecution(input: AwsAthenaGetQueryExecutionInput!, config: AwsConfig): AwsAthenaGetQueryExecutionOutput
  getQueryResults(input: AwsAthenaGetQueryResultsInput!, config: AwsConfig): AwsAthenaGetQueryResultsOutput
  listNamedQueries(input: AwsAthenaListNamedQueriesInput, config: AwsConfig): AwsAthenaListNamedQueriesOutput
  listQueryExecutions(input: AwsAthenaListQueryExecutionsInput, config: AwsConfig): AwsAthenaListQueryExecutionsOutput
  startQueryExecution(input: AwsAthenaStartQueryExecutionInput!, config: AwsConfig): AwsAthenaStartQueryExecutionOutput
  stopQueryExecution(input: AwsAthenaStopQueryExecutionInput!, config: AwsConfig): JSON
}

input AwsAthenaBatchGetNamedQueryInput {
  NamedQueryIds: [String]!
}

type AwsAthenaBatchGetNamedQueryOutput {
  NamedQueries: [AwsAthenaS6]
  UnprocessedNamedQueryIds: [AwsAthenaBatchGetNamedQueryOutputUnprocessedNamedQueryIds]
}

type AwsAthenaBatchGetNamedQueryOutputUnprocessedNamedQueryIds {
  NamedQueryId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsAthenaBatchGetQueryExecutionInput {
  QueryExecutionIds: [String]!
}

type AwsAthenaBatchGetQueryExecutionOutput {
  QueryExecutions: [AwsAthenaSk]
  UnprocessedQueryExecutionIds: [AwsAthenaBatchGetQueryExecutionOutputUnprocessedQueryExecutionIds]
}

type AwsAthenaBatchGetQueryExecutionOutputUnprocessedQueryExecutionIds {
  QueryExecutionId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsAthenaCreateNamedQueryInput {
  Name: String!
  Description: String
  Database: String!
  QueryString: String!
  ClientRequestToken: String
}

type AwsAthenaCreateNamedQueryOutput {
  NamedQueryId: String
}

input AwsAthenaDeleteNamedQueryInput {
  NamedQueryId: String!
}

input AwsAthenaGetNamedQueryInput {
  NamedQueryId: String!
}

type AwsAthenaGetNamedQueryOutput {
  NamedQuery: AwsAthenaS6
}

input AwsAthenaGetQueryExecutionInput {
  QueryExecutionId: String!
}

type AwsAthenaGetQueryExecutionOutput {
  QueryExecution: AwsAthenaSk
}

input AwsAthenaGetQueryResultsInput {
  QueryExecutionId: String!
  NextToken: String
  MaxResults: Int
}

type AwsAthenaGetQueryResultsOutput {
  ResultSet: AwsAthenaGetQueryResultsOutputResultSet
  NextToken: String
}

type AwsAthenaGetQueryResultsOutputResultSet {
  Rows: [AwsAthenaGetQueryResultsOutputResultSetRows]
  ResultSetMetadata: AwsAthenaGetQueryResultsOutputResultSetResultSetMetadata
}

type AwsAthenaGetQueryResultsOutputResultSetResultSetMetadata {
  ColumnInfo: [AwsAthenaGetQueryResultsOutputResultSetResultSetMetadataColumnInfo]
}

type AwsAthenaGetQueryResultsOutputResultSetResultSetMetadataColumnInfo {
  CatalogName: String
  SchemaName: String
  TableName: String
  Name: String!
  Label: String
  Type: String!
  Precision: Int
  Scale: Int
  Nullable: String
  CaseSensitive: Boolean
}

type AwsAthenaGetQueryResultsOutputResultSetRows {
  Data: [AwsAthenaGetQueryResultsOutputResultSetRowsData]
}

type AwsAthenaGetQueryResultsOutputResultSetRowsData {
  VarCharValue: String
}

input AwsAthenaListNamedQueriesInput {
  NextToken: String
  MaxResults: Int
}

type AwsAthenaListNamedQueriesOutput {
  NamedQueryIds: [String]
  NextToken: String
}

input AwsAthenaListQueryExecutionsInput {
  NextToken: String
  MaxResults: Int
}

type AwsAthenaListQueryExecutionsOutput {
  QueryExecutionIds: [String]
  NextToken: String
}

type AwsAthenaS6 {
  Name: String!
  Description: String
  Database: String!
  QueryString: String!
  NamedQueryId: String
}

type AwsAthenaSk {
  QueryExecutionId: String
  Query: String
  ResultConfiguration: AwsAthenaSl
  QueryExecutionContext: AwsAthenaSp
  Status: AwsAthenaSkStatus
  Statistics: AwsAthenaSkStatistics
}

type AwsAthenaSkStatistics {
  EngineExecutionTimeInMillis: JSON
  DataScannedInBytes: JSON
}

type AwsAthenaSkStatus {
  State: String
  StateChangeReason: String
  SubmissionDateTime: Date
  CompletionDateTime: Date
}

type AwsAthenaSl {
  OutputLocation: String!
  EncryptionConfiguration: AwsAthenaSlEncryptionConfiguration
}

type AwsAthenaSlEncryptionConfiguration {
  EncryptionOption: String!
  KmsKey: String
}

input AwsAthenaSlEncryptionConfigurationInput {
  EncryptionOption: String!
  KmsKey: String
}

input AwsAthenaSlInput {
  OutputLocation: String!
  EncryptionConfiguration: AwsAthenaSlEncryptionConfigurationInput
}

type AwsAthenaSp {
  Database: String
}

input AwsAthenaSpInput {
  Database: String
}

input AwsAthenaStartQueryExecutionInput {
  QueryString: String!
  ClientRequestToken: String
  QueryExecutionContext: AwsAthenaSpInput
  ResultConfiguration: AwsAthenaSlInput!
}

type AwsAthenaStartQueryExecutionOutput {
  QueryExecutionId: String
}

input AwsAthenaStopQueryExecutionInput {
  QueryExecutionId: String!
}

# Auto Scaling (2011-01-01)
type AwsAutoScaling {
  attachInstances(input: AwsAutoScalingAttachInstancesInput!, config: AwsConfig): JSON
  attachLoadBalancerTargetGroups(input: AwsAutoScalingAttachLoadBalancerTargetGroupsInput!, config: AwsConfig): JSON
  attachLoadBalancers(input: AwsAutoScalingAttachLoadBalancersInput!, config: AwsConfig): JSON
  completeLifecycleAction(input: AwsAutoScalingCompleteLifecycleActionInput!, config: AwsConfig): JSON
  createAutoScalingGroup(input: AwsAutoScalingCreateAutoScalingGroupInput!, config: AwsConfig): JSON
  createLaunchConfiguration(input: AwsAutoScalingCreateLaunchConfigurationInput!, config: AwsConfig): JSON
  createOrUpdateTags(input: AwsAutoScalingCreateOrUpdateTagsInput!, config: AwsConfig): JSON
  deleteAutoScalingGroup(input: AwsAutoScalingDeleteAutoScalingGroupInput!, config: AwsConfig): JSON
  deleteLaunchConfiguration(input: AwsAutoScalingDeleteLaunchConfigurationInput!, config: AwsConfig): JSON
  deleteLifecycleHook(input: AwsAutoScalingDeleteLifecycleHookInput!, config: AwsConfig): JSON
  deleteNotificationConfiguration(input: AwsAutoScalingDeleteNotificationConfigurationInput!, config: AwsConfig): JSON
  deletePolicy(input: AwsAutoScalingDeletePolicyInput!, config: AwsConfig): JSON
  deleteScheduledAction(input: AwsAutoScalingDeleteScheduledActionInput!, config: AwsConfig): JSON
  deleteTags(input: AwsAutoScalingDeleteTagsInput!, config: AwsConfig): JSON
  describeAccountLimits(config: AwsConfig): AwsAutoScalingDescribeAccountLimitsOutput
  describeAdjustmentTypes(config: AwsConfig): AwsAutoScalingDescribeAdjustmentTypesOutput
  describeAutoScalingGroups(input: AwsAutoScalingDescribeAutoScalingGroupsInput, config: AwsConfig): AwsAutoScalingDescribeAutoScalingGroupsOutput
  describeAutoScalingInstances(input: AwsAutoScalingDescribeAutoScalingInstancesInput, config: AwsConfig): AwsAutoScalingDescribeAutoScalingInstancesOutput
  describeAutoScalingNotificationTypes(config: AwsConfig): AwsAutoScalingDescribeAutoScalingNotificationTypesOutput
  describeLaunchConfigurations(input: AwsAutoScalingDescribeLaunchConfigurationsInput, config: AwsConfig): AwsAutoScalingDescribeLaunchConfigurationsOutput
  describeLifecycleHookTypes(config: AwsConfig): AwsAutoScalingDescribeLifecycleHookTypesOutput
  describeLifecycleHooks(input: AwsAutoScalingDescribeLifecycleHooksInput!, config: AwsConfig): AwsAutoScalingDescribeLifecycleHooksOutput
  describeLoadBalancerTargetGroups(input: AwsAutoScalingDescribeLoadBalancerTargetGroupsInput!, config: AwsConfig): AwsAutoScalingDescribeLoadBalancerTargetGroupsOutput
  describeLoadBalancers(input: AwsAutoScalingDescribeLoadBalancersInput!, config: AwsConfig): AwsAutoScalingDescribeLoadBalancersOutput
  describeMetricCollectionTypes(config: AwsConfig): AwsAutoScalingDescribeMetricCollectionTypesOutput
  describeNotificationConfigurations(input: AwsAutoScalingDescribeNotificationConfigurationsInput, config: AwsConfig): AwsAutoScalingDescribeNotificationConfigurationsOutput
  describePolicies(input: AwsAutoScalingDescribePoliciesInput, config: AwsConfig): AwsAutoScalingDescribePoliciesOutput
  describeScalingActivities(input: AwsAutoScalingDescribeScalingActivitiesInput, config: AwsConfig): AwsAutoScalingDescribeScalingActivitiesOutput
  describeScalingProcessTypes(config: AwsConfig): AwsAutoScalingDescribeScalingProcessTypesOutput
  describeScheduledActions(input: AwsAutoScalingDescribeScheduledActionsInput, config: AwsConfig): AwsAutoScalingDescribeScheduledActionsOutput
  describeTags(input: AwsAutoScalingDescribeTagsInput, config: AwsConfig): AwsAutoScalingDescribeTagsOutput
  describeTerminationPolicyTypes(config: AwsConfig): AwsAutoScalingDescribeTerminationPolicyTypesOutput
  detachInstances(input: AwsAutoScalingDetachInstancesInput!, config: AwsConfig): AwsAutoScalingDetachInstancesOutput
  detachLoadBalancerTargetGroups(input: AwsAutoScalingDetachLoadBalancerTargetGroupsInput!, config: AwsConfig): JSON
  detachLoadBalancers(input: AwsAutoScalingDetachLoadBalancersInput!, config: AwsConfig): JSON
  disableMetricsCollection(input: AwsAutoScalingDisableMetricsCollectionInput!, config: AwsConfig): JSON
  enableMetricsCollection(input: AwsAutoScalingEnableMetricsCollectionInput!, config: AwsConfig): JSON
  enterStandby(input: AwsAutoScalingEnterStandbyInput!, config: AwsConfig): AwsAutoScalingEnterStandbyOutput
  executePolicy(input: AwsAutoScalingExecutePolicyInput!, config: AwsConfig): JSON
  exitStandby(input: AwsAutoScalingExitStandbyInput!, config: AwsConfig): AwsAutoScalingExitStandbyOutput
  putLifecycleHook(input: AwsAutoScalingPutLifecycleHookInput!, config: AwsConfig): JSON
  putNotificationConfiguration(input: AwsAutoScalingPutNotificationConfigurationInput!, config: AwsConfig): JSON
  putScalingPolicy(input: AwsAutoScalingPutScalingPolicyInput!, config: AwsConfig): AwsAutoScalingPutScalingPolicyOutput
  putScheduledUpdateGroupAction(input: AwsAutoScalingPutScheduledUpdateGroupActionInput!, config: AwsConfig): JSON
  recordLifecycleActionHeartbeat(input: AwsAutoScalingRecordLifecycleActionHeartbeatInput!, config: AwsConfig): JSON
  resumeProcesses(input: JSON, config: AwsConfig): JSON
  setDesiredCapacity(input: AwsAutoScalingSetDesiredCapacityInput!, config: AwsConfig): JSON
  setInstanceHealth(input: AwsAutoScalingSetInstanceHealthInput!, config: AwsConfig): JSON
  setInstanceProtection(input: AwsAutoScalingSetInstanceProtectionInput!, config: AwsConfig): JSON
  suspendProcesses(input: JSON, config: AwsConfig): JSON
  terminateInstanceInAutoScalingGroup(input: AwsAutoScalingTerminateInstanceInAutoScalingGroupInput!, config: AwsConfig): AwsAutoScalingTerminateInstanceInAutoScalingGroupOutput
  updateAutoScalingGroup(input: AwsAutoScalingUpdateAutoScalingGroupInput!, config: AwsConfig): JSON
}

input AwsAutoScalingAttachInstancesInput {
  InstanceIds: [String]
  AutoScalingGroupName: String!
}

input AwsAutoScalingAttachLoadBalancersInput {
  AutoScalingGroupName: String!
  LoadBalancerNames: [String]!
}

input AwsAutoScalingAttachLoadBalancerTargetGroupsInput {
  AutoScalingGroupName: String!
  TargetGroupARNs: [String]!
}

input AwsAutoScalingCompleteLifecycleActionInput {
  LifecycleHookName: String!
  AutoScalingGroupName: String!
  LifecycleActionToken: String
  LifecycleActionResult: String!
  InstanceId: String
}

input AwsAutoScalingCreateAutoScalingGroupInput {
  AutoScalingGroupName: String!
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoScalingSjInput
  InstanceId: String
  MinSize: Int!
  MaxSize: Int!
  DesiredCapacity: Int
  DefaultCooldown: Int
  AvailabilityZones: [String]
  LoadBalancerNames: [String]
  TargetGroupARNs: [String]
  HealthCheckType: String
  HealthCheckGracePeriod: Int
  PlacementGroup: String
  VPCZoneIdentifier: String
  TerminationPolicies: [String]
  NewInstancesProtectedFromScaleIn: Boolean
  LifecycleHookSpecificationList: [AwsAutoScalingCreateAutoScalingGroupLifecycleHookSpecificationListInput]
  Tags: [AwsAutoScalingS12Input]
}

input AwsAutoScalingCreateAutoScalingGroupLifecycleHookSpecificationListInput {
  LifecycleHookName: String!
  LifecycleTransition: String!
  NotificationMetadata: String
  HeartbeatTimeout: Int
  DefaultResult: String
  NotificationTargetARN: String
  RoleARN: String
}

input AwsAutoScalingCreateLaunchConfigurationInput {
  LaunchConfigurationName: String!
  ImageId: String
  KeyName: String
  SecurityGroups: [String]
  ClassicLinkVPCId: String
  ClassicLinkVPCSecurityGroups: [String]
  UserData: String
  InstanceId: String
  InstanceType: String
  KernelId: String
  RamdiskId: String
  BlockDeviceMappings: [AwsAutoScalingS1cInput]
  InstanceMonitoring: AwsAutoScalingS1lInput
  SpotPrice: String
  IamInstanceProfile: String
  EbsOptimized: Boolean
  AssociatePublicIpAddress: Boolean
  PlacementTenancy: String
}

input AwsAutoScalingCreateOrUpdateTagsInput {
  Tags: [AwsAutoScalingS12Input]!
}

input AwsAutoScalingDeleteAutoScalingGroupInput {
  AutoScalingGroupName: String!
  ForceDelete: Boolean
}

input AwsAutoScalingDeleteLaunchConfigurationInput {
  LaunchConfigurationName: String!
}

input AwsAutoScalingDeleteLifecycleHookInput {
  LifecycleHookName: String!
  AutoScalingGroupName: String!
}

input AwsAutoScalingDeleteNotificationConfigurationInput {
  AutoScalingGroupName: String!
  TopicARN: String!
}

input AwsAutoScalingDeletePolicyInput {
  AutoScalingGroupName: String
  PolicyName: String!
}

input AwsAutoScalingDeleteScheduledActionInput {
  AutoScalingGroupName: String!
  ScheduledActionName: String!
}

input AwsAutoScalingDeleteTagsInput {
  Tags: [AwsAutoScalingS12Input]!
}

type AwsAutoScalingDescribeAccountLimitsOutput {
  MaxNumberOfAutoScalingGroups: Int
  MaxNumberOfLaunchConfigurations: Int
  NumberOfAutoScalingGroups: Int
  NumberOfLaunchConfigurations: Int
}

type AwsAutoScalingDescribeAdjustmentTypesOutput {
  AdjustmentTypes: [AwsAutoScalingDescribeAdjustmentTypesOutputAdjustmentTypes]
}

type AwsAutoScalingDescribeAdjustmentTypesOutputAdjustmentTypes {
  AdjustmentType: String
}

input AwsAutoScalingDescribeAutoScalingGroupsInput {
  AutoScalingGroupNames: [String]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeAutoScalingGroupsOutput {
  AutoScalingGroups: [AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroups]!
  NextToken: String
}

type AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroups {
  AutoScalingGroupName: String!
  AutoScalingGroupARN: String
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoScalingSj
  MinSize: Int!
  MaxSize: Int!
  DesiredCapacity: Int!
  DefaultCooldown: Int!
  AvailabilityZones: [String]!
  LoadBalancerNames: [String]
  TargetGroupARNs: [String]
  HealthCheckType: String!
  HealthCheckGracePeriod: Int
  Instances: [AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroupsInstances]
  CreatedTime: Date!
  SuspendedProcesses: [AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroupsSuspendedProcesses]
  PlacementGroup: String
  VPCZoneIdentifier: String
  EnabledMetrics: [AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroupsEnabledMetrics]
  Status: String
  Tags: [AwsAutoScalingS2n]
  TerminationPolicies: [String]
  NewInstancesProtectedFromScaleIn: Boolean
}

type AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroupsEnabledMetrics {
  Metric: String
  Granularity: String
}

type AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroupsInstances {
  InstanceId: String!
  AvailabilityZone: String!
  LifecycleState: String!
  HealthStatus: String!
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoScalingSj
  ProtectedFromScaleIn: Boolean!
}

type AwsAutoScalingDescribeAutoScalingGroupsOutputAutoScalingGroupsSuspendedProcesses {
  ProcessName: String
  SuspensionReason: String
}

input AwsAutoScalingDescribeAutoScalingInstancesInput {
  InstanceIds: [String]
  MaxRecords: Int
  NextToken: String
}

type AwsAutoScalingDescribeAutoScalingInstancesOutput {
  AutoScalingInstances: [AwsAutoScalingDescribeAutoScalingInstancesOutputAutoScalingInstances]
  NextToken: String
}

type AwsAutoScalingDescribeAutoScalingInstancesOutputAutoScalingInstances {
  InstanceId: String!
  AutoScalingGroupName: String!
  AvailabilityZone: String!
  LifecycleState: String!
  HealthStatus: String!
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoScalingSj
  ProtectedFromScaleIn: Boolean!
}

type AwsAutoScalingDescribeAutoScalingNotificationTypesOutput {
  AutoScalingNotificationTypes: [String]
}

input AwsAutoScalingDescribeLaunchConfigurationsInput {
  LaunchConfigurationNames: [String]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeLaunchConfigurationsOutput {
  LaunchConfigurations: [AwsAutoScalingDescribeLaunchConfigurationsOutputLaunchConfigurations]!
  NextToken: String
}

type AwsAutoScalingDescribeLaunchConfigurationsOutputLaunchConfigurations {
  LaunchConfigurationName: String!
  LaunchConfigurationARN: String
  ImageId: String!
  KeyName: String
  SecurityGroups: [String]
  ClassicLinkVPCId: String
  ClassicLinkVPCSecurityGroups: [String]
  UserData: String
  InstanceType: String!
  KernelId: String
  RamdiskId: String
  BlockDeviceMappings: [AwsAutoScalingS1c]
  InstanceMonitoring: AwsAutoScalingS1l
  SpotPrice: String
  IamInstanceProfile: String
  CreatedTime: Date!
  EbsOptimized: Boolean
  AssociatePublicIpAddress: Boolean
  PlacementTenancy: String
}

input AwsAutoScalingDescribeLifecycleHooksInput {
  AutoScalingGroupName: String!
  LifecycleHookNames: [String]
}

type AwsAutoScalingDescribeLifecycleHooksOutput {
  LifecycleHooks: [AwsAutoScalingDescribeLifecycleHooksOutputLifecycleHooks]
}

type AwsAutoScalingDescribeLifecycleHooksOutputLifecycleHooks {
  LifecycleHookName: String
  AutoScalingGroupName: String
  LifecycleTransition: String
  NotificationTargetARN: String
  RoleARN: String
  NotificationMetadata: String
  HeartbeatTimeout: Int
  GlobalTimeout: Int
  DefaultResult: String
}

type AwsAutoScalingDescribeLifecycleHookTypesOutput {
  LifecycleHookTypes: [String]
}

input AwsAutoScalingDescribeLoadBalancersInput {
  AutoScalingGroupName: String!
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeLoadBalancersOutput {
  LoadBalancers: [AwsAutoScalingDescribeLoadBalancersOutputLoadBalancers]
  NextToken: String
}

type AwsAutoScalingDescribeLoadBalancersOutputLoadBalancers {
  LoadBalancerName: String
  State: String
}

input AwsAutoScalingDescribeLoadBalancerTargetGroupsInput {
  AutoScalingGroupName: String!
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeLoadBalancerTargetGroupsOutput {
  LoadBalancerTargetGroups: [AwsAutoScalingDescribeLoadBalancerTargetGroupsOutputLoadBalancerTargetGroups]
  NextToken: String
}

type AwsAutoScalingDescribeLoadBalancerTargetGroupsOutputLoadBalancerTargetGroups {
  LoadBalancerTargetGroupARN: String
  State: String
}

type AwsAutoScalingDescribeMetricCollectionTypesOutput {
  Metrics: [AwsAutoScalingDescribeMetricCollectionTypesOutputMetrics]
  Granularities: [AwsAutoScalingDescribeMetricCollectionTypesOutputGranularities]
}

type AwsAutoScalingDescribeMetricCollectionTypesOutputGranularities {
  Granularity: String
}

type AwsAutoScalingDescribeMetricCollectionTypesOutputMetrics {
  Metric: String
}

input AwsAutoScalingDescribeNotificationConfigurationsInput {
  AutoScalingGroupNames: [String]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeNotificationConfigurationsOutput {
  NotificationConfigurations: [AwsAutoScalingDescribeNotificationConfigurationsOutputNotificationConfigurations]!
  NextToken: String
}

type AwsAutoScalingDescribeNotificationConfigurationsOutputNotificationConfigurations {
  AutoScalingGroupName: String
  TopicARN: String
  NotificationType: String
}

input AwsAutoScalingDescribePoliciesInput {
  AutoScalingGroupName: String
  PolicyNames: [String]
  PolicyTypes: [String]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribePoliciesOutput {
  ScalingPolicies: [AwsAutoScalingDescribePoliciesOutputScalingPolicies]
  NextToken: String
}

type AwsAutoScalingDescribePoliciesOutputScalingPolicies {
  AutoScalingGroupName: String
  PolicyName: String
  PolicyARN: String
  PolicyType: String
  AdjustmentType: String
  MinAdjustmentStep: Int
  MinAdjustmentMagnitude: Int
  ScalingAdjustment: Int
  Cooldown: Int
  StepAdjustments: [AwsAutoScalingS3x]
  MetricAggregationType: String
  EstimatedInstanceWarmup: Int
  Alarms: [AwsAutoScalingS41]
  TargetTrackingConfiguration: AwsAutoScalingS43
}

input AwsAutoScalingDescribeScalingActivitiesInput {
  ActivityIds: [String]
  AutoScalingGroupName: String
  MaxRecords: Int
  NextToken: String
}

type AwsAutoScalingDescribeScalingActivitiesOutput {
  Activities: [AwsAutoScalingS4k]!
  NextToken: String
}

type AwsAutoScalingDescribeScalingProcessTypesOutput {
  Processes: [AwsAutoScalingDescribeScalingProcessTypesOutputProcesses]
}

type AwsAutoScalingDescribeScalingProcessTypesOutputProcesses {
  ProcessName: String!
}

input AwsAutoScalingDescribeScheduledActionsInput {
  AutoScalingGroupName: String
  ScheduledActionNames: [String]
  StartTime: Date
  EndTime: Date
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeScheduledActionsOutput {
  ScheduledUpdateGroupActions: [AwsAutoScalingDescribeScheduledActionsOutputScheduledUpdateGroupActions]
  NextToken: String
}

type AwsAutoScalingDescribeScheduledActionsOutputScheduledUpdateGroupActions {
  AutoScalingGroupName: String
  ScheduledActionName: String
  ScheduledActionARN: String
  Time: Date
  StartTime: Date
  EndTime: Date
  Recurrence: String
  MinSize: Int
  MaxSize: Int
  DesiredCapacity: Int
}

input AwsAutoScalingDescribeTagsFiltersInput {
  Name: String
  Values: [String]
}

input AwsAutoScalingDescribeTagsInput {
  Filters: [AwsAutoScalingDescribeTagsFiltersInput]
  NextToken: String
  MaxRecords: Int
}

type AwsAutoScalingDescribeTagsOutput {
  Tags: [AwsAutoScalingS2n]
  NextToken: String
}

type AwsAutoScalingDescribeTerminationPolicyTypesOutput {
  TerminationPolicyTypes: [String]
}

input AwsAutoScalingDetachInstancesInput {
  InstanceIds: [String]
  AutoScalingGroupName: String!
  ShouldDecrementDesiredCapacity: Boolean!
}

type AwsAutoScalingDetachInstancesOutput {
  Activities: [AwsAutoScalingS4k]
}

input AwsAutoScalingDetachLoadBalancersInput {
  AutoScalingGroupName: String!
  LoadBalancerNames: [String]!
}

input AwsAutoScalingDetachLoadBalancerTargetGroupsInput {
  AutoScalingGroupName: String!
  TargetGroupARNs: [String]!
}

input AwsAutoScalingDisableMetricsCollectionInput {
  AutoScalingGroupName: String!
  Metrics: [String]
}

input AwsAutoScalingEnableMetricsCollectionInput {
  AutoScalingGroupName: String!
  Metrics: [String]
  Granularity: String!
}

input AwsAutoScalingEnterStandbyInput {
  InstanceIds: [String]
  AutoScalingGroupName: String!
  ShouldDecrementDesiredCapacity: Boolean!
}

type AwsAutoScalingEnterStandbyOutput {
  Activities: [AwsAutoScalingS4k]
}

input AwsAutoScalingExecutePolicyInput {
  AutoScalingGroupName: String
  PolicyName: String!
  HonorCooldown: Boolean
  MetricValue: JSON
  BreachThreshold: JSON
}

input AwsAutoScalingExitStandbyInput {
  InstanceIds: [String]
  AutoScalingGroupName: String!
}

type AwsAutoScalingExitStandbyOutput {
  Activities: [AwsAutoScalingS4k]
}

input AwsAutoScalingPutLifecycleHookInput {
  LifecycleHookName: String!
  AutoScalingGroupName: String!
  LifecycleTransition: String
  RoleARN: String
  NotificationTargetARN: String
  NotificationMetadata: String
  HeartbeatTimeout: Int
  DefaultResult: String
}

input AwsAutoScalingPutNotificationConfigurationInput {
  AutoScalingGroupName: String!
  TopicARN: String!
  NotificationTypes: [String]!
}

input AwsAutoScalingPutScalingPolicyInput {
  AutoScalingGroupName: String!
  PolicyName: String!
  PolicyType: String
  AdjustmentType: String
  MinAdjustmentStep: Int
  MinAdjustmentMagnitude: Int
  ScalingAdjustment: Int
  Cooldown: Int
  MetricAggregationType: String
  StepAdjustments: [AwsAutoScalingS3xInput]
  EstimatedInstanceWarmup: Int
  TargetTrackingConfiguration: AwsAutoScalingS43Input
}

type AwsAutoScalingPutScalingPolicyOutput {
  PolicyARN: String
  Alarms: [AwsAutoScalingS41]
}

input AwsAutoScalingPutScheduledUpdateGroupActionInput {
  AutoScalingGroupName: String!
  ScheduledActionName: String!
  Time: Date
  StartTime: Date
  EndTime: Date
  Recurrence: String
  MinSize: Int
  MaxSize: Int
  DesiredCapacity: Int
}

input AwsAutoScalingRecordLifecycleActionHeartbeatInput {
  LifecycleHookName: String!
  AutoScalingGroupName: String!
  LifecycleActionToken: String
  InstanceId: String
}

input AwsAutoScalingS12Input {
  ResourceId: String
  ResourceType: String
  Key: String!
  Value: String
  PropagateAtLaunch: Boolean
}

type AwsAutoScalingS1c {
  VirtualName: String
  DeviceName: String!
  Ebs: AwsAutoScalingS1cEbs
  NoDevice: Boolean
}

type AwsAutoScalingS1cEbs {
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
  DeleteOnTermination: Boolean
  Iops: Int
  Encrypted: Boolean
}

input AwsAutoScalingS1cEbsInput {
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
  DeleteOnTermination: Boolean
  Iops: Int
  Encrypted: Boolean
}

input AwsAutoScalingS1cInput {
  VirtualName: String
  DeviceName: String!
  Ebs: AwsAutoScalingS1cEbsInput
  NoDevice: Boolean
}

type AwsAutoScalingS1l {
  Enabled: Boolean
}

input AwsAutoScalingS1lInput {
  Enabled: Boolean
}

type AwsAutoScalingS2n {
  ResourceId: String
  ResourceType: String
  Key: String
  Value: String
  PropagateAtLaunch: Boolean
}

type AwsAutoScalingS3x {
  MetricIntervalLowerBound: JSON
  MetricIntervalUpperBound: JSON
  ScalingAdjustment: Int!
}

input AwsAutoScalingS3xInput {
  MetricIntervalLowerBound: JSON
  MetricIntervalUpperBound: JSON
  ScalingAdjustment: Int!
}

type AwsAutoScalingS41 {
  AlarmName: String
  AlarmARN: String
}

type AwsAutoScalingS43 {
  PredefinedMetricSpecification: AwsAutoScalingS43PredefinedMetricSpecification
  CustomizedMetricSpecification: AwsAutoScalingS43CustomizedMetricSpecification
  TargetValue: JSON!
  DisableScaleIn: Boolean
}

type AwsAutoScalingS43CustomizedMetricSpecification {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsAutoScalingS43CustomizedMetricSpecificationDimensions]
  Statistic: String!
  Unit: String
}

type AwsAutoScalingS43CustomizedMetricSpecificationDimensions {
  Name: String!
  Value: String!
}

input AwsAutoScalingS43CustomizedMetricSpecificationDimensionsInput {
  Name: String!
  Value: String!
}

input AwsAutoScalingS43CustomizedMetricSpecificationInput {
  MetricName: String!
  Namespace: String!
  Dimensions: [AwsAutoScalingS43CustomizedMetricSpecificationDimensionsInput]
  Statistic: String!
  Unit: String
}

input AwsAutoScalingS43Input {
  PredefinedMetricSpecification: AwsAutoScalingS43PredefinedMetricSpecificationInput
  CustomizedMetricSpecification: AwsAutoScalingS43CustomizedMetricSpecificationInput
  TargetValue: JSON!
  DisableScaleIn: Boolean
}

type AwsAutoScalingS43PredefinedMetricSpecification {
  PredefinedMetricType: String!
  ResourceLabel: String
}

input AwsAutoScalingS43PredefinedMetricSpecificationInput {
  PredefinedMetricType: String!
  ResourceLabel: String
}

type AwsAutoScalingS4k {
  ActivityId: String!
  AutoScalingGroupName: String!
  Description: String
  Cause: String!
  StartTime: Date!
  EndTime: Date
  StatusCode: String!
  StatusMessage: String
  Progress: Int
  Details: String
}

input AwsAutoScalingSetDesiredCapacityInput {
  AutoScalingGroupName: String!
  DesiredCapacity: Int!
  HonorCooldown: Boolean
}

input AwsAutoScalingSetInstanceHealthInput {
  InstanceId: String!
  HealthStatus: String!
  ShouldRespectGracePeriod: Boolean
}

input AwsAutoScalingSetInstanceProtectionInput {
  InstanceIds: [String]!
  AutoScalingGroupName: String!
  ProtectedFromScaleIn: Boolean!
}

type AwsAutoScalingSj {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsAutoScalingSjInput {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsAutoScalingTerminateInstanceInAutoScalingGroupInput {
  InstanceId: String!
  ShouldDecrementDesiredCapacity: Boolean!
}

type AwsAutoScalingTerminateInstanceInAutoScalingGroupOutput {
  Activity: AwsAutoScalingS4k
}

input AwsAutoScalingUpdateAutoScalingGroupInput {
  AutoScalingGroupName: String!
  LaunchConfigurationName: String
  LaunchTemplate: AwsAutoScalingSjInput
  MinSize: Int
  MaxSize: Int
  DesiredCapacity: Int
  DefaultCooldown: Int
  AvailabilityZones: [String]
  HealthCheckType: String
  HealthCheckGracePeriod: Int
  PlacementGroup: String
  VPCZoneIdentifier: String
  TerminationPolicies: [String]
  NewInstancesProtectedFromScaleIn: Boolean
}

# AWS Batch (2016-08-10)
type AwsBatch {
  cancelJob(input: AwsBatchCancelJobInput!, config: AwsConfig): JSON
  createComputeEnvironment(input: AwsBatchCreateComputeEnvironmentInput!, config: AwsConfig): AwsBatchCreateComputeEnvironmentOutput
  createJobQueue(input: AwsBatchCreateJobQueueInput!, config: AwsConfig): AwsBatchCreateJobQueueOutput
  deleteComputeEnvironment(input: AwsBatchDeleteComputeEnvironmentInput!, config: AwsConfig): JSON
  deleteJobQueue(input: AwsBatchDeleteJobQueueInput!, config: AwsConfig): JSON
  deregisterJobDefinition(input: AwsBatchDeregisterJobDefinitionInput!, config: AwsConfig): JSON
  describeComputeEnvironments(input: AwsBatchDescribeComputeEnvironmentsInput, config: AwsConfig): AwsBatchDescribeComputeEnvironmentsOutput
  describeJobDefinitions(input: AwsBatchDescribeJobDefinitionsInput, config: AwsConfig): AwsBatchDescribeJobDefinitionsOutput
  describeJobQueues(input: AwsBatchDescribeJobQueuesInput, config: AwsConfig): AwsBatchDescribeJobQueuesOutput
  describeJobs(input: AwsBatchDescribeJobsInput!, config: AwsConfig): AwsBatchDescribeJobsOutput
  listJobs(input: AwsBatchListJobsInput, config: AwsConfig): AwsBatchListJobsOutput
  registerJobDefinition(input: AwsBatchRegisterJobDefinitionInput!, config: AwsConfig): AwsBatchRegisterJobDefinitionOutput
  submitJob(input: AwsBatchSubmitJobInput!, config: AwsConfig): AwsBatchSubmitJobOutput
  terminateJob(input: AwsBatchTerminateJobInput!, config: AwsConfig): JSON
  updateComputeEnvironment(input: AwsBatchUpdateComputeEnvironmentInput!, config: AwsConfig): AwsBatchUpdateComputeEnvironmentOutput
  updateJobQueue(input: AwsBatchUpdateJobQueueInput!, config: AwsConfig): AwsBatchUpdateJobQueueOutput
}

input AwsBatchCancelJobInput {
  jobId: String!
  reason: String!
}

input AwsBatchCreateComputeEnvironmentInput {
  computeEnvironmentName: String!
  type: String!
  state: String
  computeResources: AwsBatchS7Input
  serviceRole: String!
}

type AwsBatchCreateComputeEnvironmentOutput {
  computeEnvironmentName: String
  computeEnvironmentArn: String
}

input AwsBatchCreateJobQueueInput {
  jobQueueName: String!
  state: String
  priority: Int!
  computeEnvironmentOrder: [AwsBatchSfInput]!
}

type AwsBatchCreateJobQueueOutput {
  jobQueueName: String!
  jobQueueArn: String!
}

input AwsBatchDeleteComputeEnvironmentInput {
  computeEnvironment: String!
}

input AwsBatchDeleteJobQueueInput {
  jobQueue: String!
}

input AwsBatchDeregisterJobDefinitionInput {
  jobDefinition: String!
}

input AwsBatchDescribeComputeEnvironmentsInput {
  computeEnvironments: [String]
  maxResults: Int
  nextToken: String
}

type AwsBatchDescribeComputeEnvironmentsOutput {
  computeEnvironments: [AwsBatchDescribeComputeEnvironmentsOutputComputeEnvironments]
  nextToken: String
}

type AwsBatchDescribeComputeEnvironmentsOutputComputeEnvironments {
  computeEnvironmentName: String!
  computeEnvironmentArn: String!
  ecsClusterArn: String!
  type: String
  state: String
  status: String
  statusReason: String
  computeResources: AwsBatchS7
  serviceRole: String
}

input AwsBatchDescribeJobDefinitionsInput {
  jobDefinitions: [String]
  maxResults: Int
  jobDefinitionName: String
  status: String
  nextToken: String
}

type AwsBatchDescribeJobDefinitionsOutput {
  jobDefinitions: [AwsBatchDescribeJobDefinitionsOutputJobDefinitions]
  nextToken: String
}

type AwsBatchDescribeJobDefinitionsOutputJobDefinitions {
  jobDefinitionName: String!
  jobDefinitionArn: String!
  revision: Int!
  status: String
  type: String!
  parameters: JSON
  retryStrategy: AwsBatchSy
  containerProperties: AwsBatchSz
}

input AwsBatchDescribeJobQueuesInput {
  jobQueues: [String]
  maxResults: Int
  nextToken: String
}

type AwsBatchDescribeJobQueuesOutput {
  jobQueues: [AwsBatchDescribeJobQueuesOutputJobQueues]
  nextToken: String
}

type AwsBatchDescribeJobQueuesOutputJobQueues {
  jobQueueName: String!
  jobQueueArn: String!
  state: String!
  status: String
  statusReason: String
  priority: Int!
  computeEnvironmentOrder: [AwsBatchSf]!
}

input AwsBatchDescribeJobsInput {
  jobs: [String]!
}

type AwsBatchDescribeJobsOutput {
  jobs: [AwsBatchDescribeJobsOutputJobs]
}

type AwsBatchDescribeJobsOutputJobs {
  jobName: String!
  jobId: String!
  jobQueue: String!
  status: String!
  attempts: [AwsBatchDescribeJobsOutputJobsAttempts]
  statusReason: String
  createdAt: JSON
  retryStrategy: AwsBatchSy
  startedAt: JSON!
  stoppedAt: JSON
  dependsOn: [AwsBatchS1o]
  jobDefinition: String!
  parameters: JSON
  container: AwsBatchDescribeJobsOutputJobsContainer
  arrayProperties: AwsBatchDescribeJobsOutputJobsArrayProperties
}

type AwsBatchDescribeJobsOutputJobsArrayProperties {
  statusSummary: JSON
  size: Int
  index: Int
}

type AwsBatchDescribeJobsOutputJobsAttempts {
  container: AwsBatchDescribeJobsOutputJobsAttemptsContainer
  startedAt: JSON
  stoppedAt: JSON
  statusReason: String
}

type AwsBatchDescribeJobsOutputJobsAttemptsContainer {
  containerInstanceArn: String
  taskArn: String
  exitCode: Int
  reason: String
  logStreamName: String
}

type AwsBatchDescribeJobsOutputJobsContainer {
  image: String
  vcpus: Int
  memory: Int
  command: [String]
  jobRoleArn: String
  volumes: [AwsBatchS10]
  environment: [AwsBatchS13]
  mountPoints: [AwsBatchS15]
  readonlyRootFilesystem: Boolean
  ulimits: [AwsBatchS18]
  privileged: Boolean
  user: String
  exitCode: Int
  reason: String
  containerInstanceArn: String
  taskArn: String
  logStreamName: String
}

input AwsBatchListJobsInput {
  jobQueue: String
  arrayJobId: String
  jobStatus: String
  maxResults: Int
  nextToken: String
}

type AwsBatchListJobsOutput {
  jobSummaryList: [AwsBatchListJobsOutputJobSummaryList]!
  nextToken: String
}

type AwsBatchListJobsOutputJobSummaryList {
  jobId: String!
  jobName: String!
  createdAt: JSON
  status: String
  statusReason: String
  startedAt: JSON
  stoppedAt: JSON
  container: AwsBatchListJobsOutputJobSummaryListContainer
  arrayProperties: AwsBatchListJobsOutputJobSummaryListArrayProperties
}

type AwsBatchListJobsOutputJobSummaryListArrayProperties {
  size: Int
  index: Int
}

type AwsBatchListJobsOutputJobSummaryListContainer {
  exitCode: Int
  reason: String
}

input AwsBatchRegisterJobDefinitionInput {
  jobDefinitionName: String!
  type: String!
  parameters: JSON
  containerProperties: AwsBatchSzInput
  retryStrategy: AwsBatchSyInput
}

type AwsBatchRegisterJobDefinitionOutput {
  jobDefinitionName: String!
  jobDefinitionArn: String!
  revision: Int!
}

type AwsBatchS10 {
  host: AwsBatchS10Host
  name: String
}

type AwsBatchS10Host {
  sourcePath: String
}

input AwsBatchS10HostInput {
  sourcePath: String
}

input AwsBatchS10Input {
  host: AwsBatchS10HostInput
  name: String
}

type AwsBatchS13 {
  name: String
  value: String
}

input AwsBatchS13Input {
  name: String
  value: String
}

type AwsBatchS15 {
  containerPath: String
  readOnly: Boolean
  sourceVolume: String
}

input AwsBatchS15Input {
  containerPath: String
  readOnly: Boolean
  sourceVolume: String
}

type AwsBatchS18 {
  hardLimit: Int!
  name: String!
  softLimit: Int!
}

input AwsBatchS18Input {
  hardLimit: Int!
  name: String!
  softLimit: Int!
}

type AwsBatchS1o {
  jobId: String
  type: String
}

input AwsBatchS1oInput {
  jobId: String
  type: String
}

type AwsBatchS7 {
  type: String!
  minvCpus: Int!
  maxvCpus: Int!
  desiredvCpus: Int
  instanceTypes: [String]!
  imageId: String
  subnets: [String]!
  securityGroupIds: [String]!
  ec2KeyPair: String
  instanceRole: String!
  tags: JSON
  bidPercentage: Int
  spotIamFleetRole: String
}

input AwsBatchS7Input {
  type: String!
  minvCpus: Int!
  maxvCpus: Int!
  desiredvCpus: Int
  instanceTypes: [String]!
  imageId: String
  subnets: [String]!
  securityGroupIds: [String]!
  ec2KeyPair: String
  instanceRole: String!
  tags: JSON
  bidPercentage: Int
  spotIamFleetRole: String
}

type AwsBatchSf {
  order: Int!
  computeEnvironment: String!
}

input AwsBatchSfInput {
  order: Int!
  computeEnvironment: String!
}

input AwsBatchSubmitJobArrayPropertiesInput {
  size: Int
}

input AwsBatchSubmitJobContainerOverridesInput {
  vcpus: Int
  memory: Int
  command: [String]
  environment: [AwsBatchS13Input]
}

input AwsBatchSubmitJobInput {
  jobName: String!
  jobQueue: String!
  arrayProperties: AwsBatchSubmitJobArrayPropertiesInput
  dependsOn: [AwsBatchS1oInput]
  jobDefinition: String!
  parameters: JSON
  containerOverrides: AwsBatchSubmitJobContainerOverridesInput
  retryStrategy: AwsBatchSyInput
}

type AwsBatchSubmitJobOutput {
  jobName: String!
  jobId: String!
}

type AwsBatchSy {
  attempts: Int
}

input AwsBatchSyInput {
  attempts: Int
}

type AwsBatchSz {
  image: String!
  vcpus: Int!
  memory: Int!
  command: [String]
  jobRoleArn: String
  volumes: [AwsBatchS10]
  environment: [AwsBatchS13]
  mountPoints: [AwsBatchS15]
  readonlyRootFilesystem: Boolean
  privileged: Boolean
  ulimits: [AwsBatchS18]
  user: String
}

input AwsBatchSzInput {
  image: String!
  vcpus: Int!
  memory: Int!
  command: [String]
  jobRoleArn: String
  volumes: [AwsBatchS10Input]
  environment: [AwsBatchS13Input]
  mountPoints: [AwsBatchS15Input]
  readonlyRootFilesystem: Boolean
  privileged: Boolean
  ulimits: [AwsBatchS18Input]
  user: String
}

input AwsBatchTerminateJobInput {
  jobId: String!
  reason: String!
}

input AwsBatchUpdateComputeEnvironmentComputeResourcesInput {
  minvCpus: Int
  maxvCpus: Int
  desiredvCpus: Int
}

input AwsBatchUpdateComputeEnvironmentInput {
  computeEnvironment: String!
  state: String
  computeResources: AwsBatchUpdateComputeEnvironmentComputeResourcesInput
  serviceRole: String
}

type AwsBatchUpdateComputeEnvironmentOutput {
  computeEnvironmentName: String
  computeEnvironmentArn: String
}

input AwsBatchUpdateJobQueueInput {
  jobQueue: String!
  state: String
  priority: Int
  computeEnvironmentOrder: [AwsBatchSfInput]
}

type AwsBatchUpdateJobQueueOutput {
  jobQueueName: String
  jobQueueArn: String
}

# AWS Budgets (2016-10-20)
type AwsBudgets {
  createBudget(input: AwsBudgetsCreateBudgetInput!, config: AwsConfig): JSON
  createNotification(input: AwsBudgetsCreateNotificationInput!, config: AwsConfig): JSON
  createSubscriber(input: AwsBudgetsCreateSubscriberInput!, config: AwsConfig): JSON
  deleteBudget(input: AwsBudgetsDeleteBudgetInput!, config: AwsConfig): JSON
  deleteNotification(input: AwsBudgetsDeleteNotificationInput!, config: AwsConfig): JSON
  deleteSubscriber(input: AwsBudgetsDeleteSubscriberInput!, config: AwsConfig): JSON
  describeBudget(input: AwsBudgetsDescribeBudgetInput!, config: AwsConfig): AwsBudgetsDescribeBudgetOutput
  describeBudgets(input: AwsBudgetsDescribeBudgetsInput!, config: AwsConfig): AwsBudgetsDescribeBudgetsOutput
  describeNotificationsForBudget(input: AwsBudgetsDescribeNotificationsForBudgetInput!, config: AwsConfig): AwsBudgetsDescribeNotificationsForBudgetOutput
  describeSubscribersForNotification(input: AwsBudgetsDescribeSubscribersForNotificationInput!, config: AwsConfig): AwsBudgetsDescribeSubscribersForNotificationOutput
  updateBudget(input: AwsBudgetsUpdateBudgetInput!, config: AwsConfig): JSON
  updateNotification(input: AwsBudgetsUpdateNotificationInput!, config: AwsConfig): JSON
  updateSubscriber(input: AwsBudgetsUpdateSubscriberInput!, config: AwsConfig): JSON
}

input AwsBudgetsCreateBudgetInput {
  AccountId: String!
  Budget: AwsBudgetsS3Input!
  NotificationsWithSubscribers: [AwsBudgetsCreateBudgetNotificationsWithSubscribersInput]
}

input AwsBudgetsCreateBudgetNotificationsWithSubscribersInput {
  Notification: AwsBudgetsSkInput!
  Subscribers: [AwsBudgetsSqInput]!
}

input AwsBudgetsCreateNotificationInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSkInput!
  Subscribers: [AwsBudgetsSqInput]!
}

input AwsBudgetsCreateSubscriberInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSkInput!
  Subscriber: AwsBudgetsSqInput!
}

input AwsBudgetsDeleteBudgetInput {
  AccountId: String!
  BudgetName: String!
}

input AwsBudgetsDeleteNotificationInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSkInput!
}

input AwsBudgetsDeleteSubscriberInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSkInput!
  Subscriber: AwsBudgetsSqInput!
}

input AwsBudgetsDescribeBudgetInput {
  AccountId: String!
  BudgetName: String!
}

type AwsBudgetsDescribeBudgetOutput {
  Budget: AwsBudgetsS3
}

input AwsBudgetsDescribeBudgetsInput {
  AccountId: String!
  MaxResults: Int
  NextToken: String
}

type AwsBudgetsDescribeBudgetsOutput {
  Budgets: [AwsBudgetsS3]
  NextToken: String
}

input AwsBudgetsDescribeNotificationsForBudgetInput {
  AccountId: String!
  BudgetName: String!
  MaxResults: Int
  NextToken: String
}

type AwsBudgetsDescribeNotificationsForBudgetOutput {
  Notifications: [AwsBudgetsSk]
  NextToken: String
}

input AwsBudgetsDescribeSubscribersForNotificationInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSkInput!
  MaxResults: Int
  NextToken: String
}

type AwsBudgetsDescribeSubscribersForNotificationOutput {
  Subscribers: [AwsBudgetsSq]
  NextToken: String
}

type AwsBudgetsS3 {
  BudgetName: String!
  BudgetLimit: AwsBudgetsS5!
  CostFilters: JSON
  CostTypes: AwsBudgetsS3CostTypes!
  TimeUnit: String!
  TimePeriod: AwsBudgetsS3TimePeriod!
  CalculatedSpend: AwsBudgetsS3CalculatedSpend
  BudgetType: String!
}

type AwsBudgetsS3CalculatedSpend {
  ActualSpend: AwsBudgetsS5!
  ForecastedSpend: AwsBudgetsS5
}

input AwsBudgetsS3CalculatedSpendInput {
  ActualSpend: AwsBudgetsS5Input!
  ForecastedSpend: AwsBudgetsS5Input
}

type AwsBudgetsS3CostTypes {
  IncludeTax: Boolean!
  IncludeSubscription: Boolean!
  UseBlended: Boolean!
}

input AwsBudgetsS3CostTypesInput {
  IncludeTax: Boolean!
  IncludeSubscription: Boolean!
  UseBlended: Boolean!
}

input AwsBudgetsS3Input {
  BudgetName: String!
  BudgetLimit: AwsBudgetsS5Input!
  CostFilters: JSON
  CostTypes: AwsBudgetsS3CostTypesInput!
  TimeUnit: String!
  TimePeriod: AwsBudgetsS3TimePeriodInput!
  CalculatedSpend: AwsBudgetsS3CalculatedSpendInput
  BudgetType: String!
}

type AwsBudgetsS3TimePeriod {
  Start: Date!
  End: Date!
}

input AwsBudgetsS3TimePeriodInput {
  Start: Date!
  End: Date!
}

type AwsBudgetsS5 {
  Amount: String!
  Unit: String!
}

input AwsBudgetsS5Input {
  Amount: String!
  Unit: String!
}

type AwsBudgetsSk {
  NotificationType: String!
  ComparisonOperator: String!
  Threshold: JSON!
  ThresholdType: String
}

input AwsBudgetsSkInput {
  NotificationType: String!
  ComparisonOperator: String!
  Threshold: JSON!
  ThresholdType: String
}

type AwsBudgetsSq {
  SubscriptionType: String!
  Address: String!
}

input AwsBudgetsSqInput {
  SubscriptionType: String!
  Address: String!
}

input AwsBudgetsUpdateBudgetInput {
  AccountId: String!
  NewBudget: AwsBudgetsS3Input!
}

input AwsBudgetsUpdateNotificationInput {
  AccountId: String!
  BudgetName: String!
  OldNotification: AwsBudgetsSkInput!
  NewNotification: AwsBudgetsSkInput!
}

input AwsBudgetsUpdateSubscriberInput {
  AccountId: String!
  BudgetName: String!
  Notification: AwsBudgetsSkInput!
  OldSubscriber: AwsBudgetsSqInput!
  NewSubscriber: AwsBudgetsSqInput!
}

# Amazon CloudDirectory (2016-05-10)
type AwsCloudDirectory {
  addFacetToObject(input: AwsCloudDirectoryAddFacetToObjectInput!, config: AwsConfig): JSON
  applySchema(input: AwsCloudDirectoryApplySchemaInput!, config: AwsConfig): AwsCloudDirectoryApplySchemaOutput
  attachObject(input: AwsCloudDirectoryAttachObjectInput!, config: AwsConfig): AwsCloudDirectoryAttachObjectOutput
  attachPolicy(input: AwsCloudDirectoryAttachPolicyInput!, config: AwsConfig): JSON
  attachToIndex(input: AwsCloudDirectoryAttachToIndexInput!, config: AwsConfig): AwsCloudDirectoryAttachToIndexOutput
  attachTypedLink(input: AwsCloudDirectoryAttachTypedLinkInput!, config: AwsConfig): AwsCloudDirectoryAttachTypedLinkOutput
  batchRead(input: AwsCloudDirectoryBatchReadInput!, config: AwsConfig): AwsCloudDirectoryBatchReadOutput
  batchWrite(input: AwsCloudDirectoryBatchWriteInput!, config: AwsConfig): AwsCloudDirectoryBatchWriteOutput
  createDirectory(input: AwsCloudDirectoryCreateDirectoryInput!, config: AwsConfig): AwsCloudDirectoryCreateDirectoryOutput
  createFacet(input: AwsCloudDirectoryCreateFacetInput!, config: AwsConfig): JSON
  createIndex(input: AwsCloudDirectoryCreateIndexInput!, config: AwsConfig): AwsCloudDirectoryCreateIndexOutput
  createObject(input: AwsCloudDirectoryCreateObjectInput!, config: AwsConfig): AwsCloudDirectoryCreateObjectOutput
  createSchema(input: AwsCloudDirectoryCreateSchemaInput!, config: AwsConfig): AwsCloudDirectoryCreateSchemaOutput
  createTypedLinkFacet(input: AwsCloudDirectoryCreateTypedLinkFacetInput!, config: AwsConfig): JSON
  deleteDirectory(input: AwsCloudDirectoryDeleteDirectoryInput!, config: AwsConfig): AwsCloudDirectoryDeleteDirectoryOutput
  deleteFacet(input: AwsCloudDirectoryDeleteFacetInput!, config: AwsConfig): JSON
  deleteObject(input: AwsCloudDirectoryDeleteObjectInput!, config: AwsConfig): JSON
  deleteSchema(input: AwsCloudDirectoryDeleteSchemaInput!, config: AwsConfig): AwsCloudDirectoryDeleteSchemaOutput
  deleteTypedLinkFacet(input: AwsCloudDirectoryDeleteTypedLinkFacetInput!, config: AwsConfig): JSON
  detachFromIndex(input: AwsCloudDirectoryDetachFromIndexInput!, config: AwsConfig): AwsCloudDirectoryDetachFromIndexOutput
  detachObject(input: AwsCloudDirectoryDetachObjectInput!, config: AwsConfig): AwsCloudDirectoryDetachObjectOutput
  detachPolicy(input: AwsCloudDirectoryDetachPolicyInput!, config: AwsConfig): JSON
  detachTypedLink(input: AwsCloudDirectoryDetachTypedLinkInput!, config: AwsConfig): JSON
  disableDirectory(input: AwsCloudDirectoryDisableDirectoryInput!, config: AwsConfig): AwsCloudDirectoryDisableDirectoryOutput
  enableDirectory(input: AwsCloudDirectoryEnableDirectoryInput!, config: AwsConfig): AwsCloudDirectoryEnableDirectoryOutput
  getDirectory(input: AwsCloudDirectoryGetDirectoryInput!, config: AwsConfig): AwsCloudDirectoryGetDirectoryOutput
  getFacet(input: AwsCloudDirectoryGetFacetInput!, config: AwsConfig): AwsCloudDirectoryGetFacetOutput
  getObjectInformation(input: AwsCloudDirectoryGetObjectInformationInput!, config: AwsConfig): AwsCloudDirectoryGetObjectInformationOutput
  getSchemaAsJson(input: AwsCloudDirectoryGetSchemaAsJsonInput!, config: AwsConfig): AwsCloudDirectoryGetSchemaAsJsonOutput
  getTypedLinkFacetInformation(input: AwsCloudDirectoryGetTypedLinkFacetInformationInput!, config: AwsConfig): AwsCloudDirectoryGetTypedLinkFacetInformationOutput
  listAppliedSchemaArns(input: AwsCloudDirectoryListAppliedSchemaArnsInput!, config: AwsConfig): AwsCloudDirectoryListAppliedSchemaArnsOutput
  listAttachedIndices(input: AwsCloudDirectoryListAttachedIndicesInput!, config: AwsConfig): AwsCloudDirectoryListAttachedIndicesOutput
  listDevelopmentSchemaArns(input: AwsCloudDirectoryListDevelopmentSchemaArnsInput, config: AwsConfig): AwsCloudDirectoryListDevelopmentSchemaArnsOutput
  listDirectories(input: AwsCloudDirectoryListDirectoriesInput, config: AwsConfig): AwsCloudDirectoryListDirectoriesOutput
  listFacetAttributes(input: AwsCloudDirectoryListFacetAttributesInput!, config: AwsConfig): AwsCloudDirectoryListFacetAttributesOutput
  listFacetNames(input: AwsCloudDirectoryListFacetNamesInput!, config: AwsConfig): AwsCloudDirectoryListFacetNamesOutput
  listIncomingTypedLinks(input: AwsCloudDirectoryListIncomingTypedLinksInput!, config: AwsConfig): AwsCloudDirectoryListIncomingTypedLinksOutput
  listIndex(input: AwsCloudDirectoryListIndexInput!, config: AwsConfig): AwsCloudDirectoryListIndexOutput
  listObjectAttributes(input: AwsCloudDirectoryListObjectAttributesInput!, config: AwsConfig): AwsCloudDirectoryListObjectAttributesOutput
  listObjectChildren(input: AwsCloudDirectoryListObjectChildrenInput!, config: AwsConfig): AwsCloudDirectoryListObjectChildrenOutput
  listObjectParentPaths(input: AwsCloudDirectoryListObjectParentPathsInput!, config: AwsConfig): AwsCloudDirectoryListObjectParentPathsOutput
  listObjectParents(input: AwsCloudDirectoryListObjectParentsInput!, config: AwsConfig): AwsCloudDirectoryListObjectParentsOutput
  listObjectPolicies(input: AwsCloudDirectoryListObjectPoliciesInput!, config: AwsConfig): AwsCloudDirectoryListObjectPoliciesOutput
  listOutgoingTypedLinks(input: AwsCloudDirectoryListOutgoingTypedLinksInput!, config: AwsConfig): AwsCloudDirectoryListOutgoingTypedLinksOutput
  listPolicyAttachments(input: AwsCloudDirectoryListPolicyAttachmentsInput!, config: AwsConfig): AwsCloudDirectoryListPolicyAttachmentsOutput
  listPublishedSchemaArns(input: AwsCloudDirectoryListPublishedSchemaArnsInput, config: AwsConfig): AwsCloudDirectoryListPublishedSchemaArnsOutput
  listTagsForResource(input: AwsCloudDirectoryListTagsForResourceInput!, config: AwsConfig): AwsCloudDirectoryListTagsForResourceOutput
  listTypedLinkFacetAttributes(input: AwsCloudDirectoryListTypedLinkFacetAttributesInput!, config: AwsConfig): AwsCloudDirectoryListTypedLinkFacetAttributesOutput
  listTypedLinkFacetNames(input: AwsCloudDirectoryListTypedLinkFacetNamesInput!, config: AwsConfig): AwsCloudDirectoryListTypedLinkFacetNamesOutput
  lookupPolicy(input: AwsCloudDirectoryLookupPolicyInput!, config: AwsConfig): AwsCloudDirectoryLookupPolicyOutput
  publishSchema(input: AwsCloudDirectoryPublishSchemaInput!, config: AwsConfig): AwsCloudDirectoryPublishSchemaOutput
  putSchemaFromJson(input: AwsCloudDirectoryPutSchemaFromJsonInput!, config: AwsConfig): AwsCloudDirectoryPutSchemaFromJsonOutput
  removeFacetFromObject(input: AwsCloudDirectoryRemoveFacetFromObjectInput!, config: AwsConfig): JSON
  tagResource(input: AwsCloudDirectoryTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsCloudDirectoryUntagResourceInput!, config: AwsConfig): JSON
  updateFacet(input: AwsCloudDirectoryUpdateFacetInput!, config: AwsConfig): JSON
  updateObjectAttributes(input: AwsCloudDirectoryUpdateObjectAttributesInput!, config: AwsConfig): AwsCloudDirectoryUpdateObjectAttributesOutput
  updateSchema(input: AwsCloudDirectoryUpdateSchemaInput!, config: AwsConfig): AwsCloudDirectoryUpdateSchemaOutput
  updateTypedLinkFacet(input: AwsCloudDirectoryUpdateTypedLinkFacetInput!, config: AwsConfig): JSON
}

input AwsCloudDirectoryAddFacetToObjectInput {
  DirectoryArn: String!
  SchemaFacet: AwsCloudDirectoryS3Input!
  ObjectAttributeList: [AwsCloudDirectoryS5Input]
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryApplySchemaInput {
  PublishedSchemaArn: String!
  DirectoryArn: String!
}

type AwsCloudDirectoryApplySchemaOutput {
  AppliedSchemaArn: String
  DirectoryArn: String
}

input AwsCloudDirectoryAttachObjectInput {
  DirectoryArn: String!
  ParentReference: AwsCloudDirectorySfInput!
  ChildReference: AwsCloudDirectorySfInput!
  LinkName: String!
}

type AwsCloudDirectoryAttachObjectOutput {
  AttachedObjectIdentifier: String
}

input AwsCloudDirectoryAttachPolicyInput {
  DirectoryArn: String
  PolicyReference: AwsCloudDirectorySfInput!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryAttachToIndexInput {
  DirectoryArn: String!
  IndexReference: AwsCloudDirectorySfInput!
  TargetReference: AwsCloudDirectorySfInput!
}

type AwsCloudDirectoryAttachToIndexOutput {
  AttachedObjectIdentifier: String
}

input AwsCloudDirectoryAttachTypedLinkInput {
  DirectoryArn: String!
  SourceObjectReference: AwsCloudDirectorySfInput!
  TargetObjectReference: AwsCloudDirectorySfInput!
  TypedLinkFacet: AwsCloudDirectoryStInput!
  Attributes: [AwsCloudDirectorySvInput]!
}

type AwsCloudDirectoryAttachTypedLinkOutput {
  TypedLinkSpecifier: AwsCloudDirectorySy
}

input AwsCloudDirectoryBatchReadInput {
  DirectoryArn: String!
  Operations: [AwsCloudDirectoryBatchReadOperationsInput]!
  ConsistencyLevel: String
}

input AwsCloudDirectoryBatchReadOperationsGetObjectInformationInput {
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchReadOperationsInput {
  ListObjectAttributes: AwsCloudDirectoryBatchReadOperationsListObjectAttributesInput
  ListObjectChildren: AwsCloudDirectoryBatchReadOperationsListObjectChildrenInput
  ListAttachedIndices: AwsCloudDirectoryBatchReadOperationsListAttachedIndicesInput
  ListObjectParentPaths: AwsCloudDirectoryBatchReadOperationsListObjectParentPathsInput
  GetObjectInformation: AwsCloudDirectoryBatchReadOperationsGetObjectInformationInput
  ListObjectPolicies: AwsCloudDirectoryBatchReadOperationsListObjectPoliciesInput
  ListPolicyAttachments: AwsCloudDirectoryBatchReadOperationsListPolicyAttachmentsInput
  LookupPolicy: AwsCloudDirectoryBatchReadOperationsLookupPolicyInput
  ListIndex: AwsCloudDirectoryBatchReadOperationsListIndexInput
  ListOutgoingTypedLinks: AwsCloudDirectoryBatchReadOperationsListOutgoingTypedLinksInput
  ListIncomingTypedLinks: AwsCloudDirectoryBatchReadOperationsListIncomingTypedLinksInput
}

input AwsCloudDirectoryBatchReadOperationsListAttachedIndicesInput {
  TargetReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListIncomingTypedLinksInput {
  ObjectReference: AwsCloudDirectorySfInput!
  FilterAttributeRanges: [AwsCloudDirectoryS1iInput]
  FilterTypedLink: AwsCloudDirectoryStInput
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListIndexInput {
  RangesOnIndexedValues: [AwsCloudDirectoryS1dInput]
  IndexReference: AwsCloudDirectorySfInput!
  MaxResults: Int
  NextToken: String
}

input AwsCloudDirectoryBatchReadOperationsListObjectAttributesInput {
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  FacetFilter: AwsCloudDirectoryS3Input
}

input AwsCloudDirectoryBatchReadOperationsListObjectChildrenInput {
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListObjectParentPathsInput {
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListObjectPoliciesInput {
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListOutgoingTypedLinksInput {
  ObjectReference: AwsCloudDirectorySfInput!
  FilterAttributeRanges: [AwsCloudDirectoryS1iInput]
  FilterTypedLink: AwsCloudDirectoryStInput
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsListPolicyAttachmentsInput {
  PolicyReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

input AwsCloudDirectoryBatchReadOperationsLookupPolicyInput {
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryBatchReadOutput {
  Responses: [AwsCloudDirectoryBatchReadOutputResponses]
}

type AwsCloudDirectoryBatchReadOutputResponses {
  SuccessfulResponse: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponse
  ExceptionResponse: AwsCloudDirectoryBatchReadOutputResponsesExceptionResponse
}

type AwsCloudDirectoryBatchReadOutputResponsesExceptionResponse {
  Type: String
  Message: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponse {
  ListObjectAttributes: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectAttributes
  ListObjectChildren: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectChildren
  GetObjectInformation: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseGetObjectInformation
  ListAttachedIndices: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListAttachedIndices
  ListObjectParentPaths: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectParentPaths
  ListObjectPolicies: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectPolicies
  ListPolicyAttachments: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListPolicyAttachments
  LookupPolicy: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseLookupPolicy
  ListIndex: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListIndex
  ListOutgoingTypedLinks: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListOutgoingTypedLinks
  ListIncomingTypedLinks: AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListIncomingTypedLinks
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseGetObjectInformation {
  SchemaFacets: [AwsCloudDirectoryS3]
  ObjectIdentifier: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListAttachedIndices {
  IndexAttachments: [AwsCloudDirectoryS1w]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListIncomingTypedLinks {
  LinkSpecifiers: [AwsCloudDirectorySy]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListIndex {
  IndexAttachments: [AwsCloudDirectoryS1w]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectAttributes {
  Attributes: [AwsCloudDirectoryS5]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectChildren {
  Children: JSON
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectParentPaths {
  PathToObjectIdentifiersList: [AwsCloudDirectoryS1z]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListObjectPolicies {
  AttachedPolicyIds: [String]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListOutgoingTypedLinks {
  TypedLinkSpecifiers: [AwsCloudDirectorySy]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseListPolicyAttachments {
  ObjectIdentifiers: [String]
  NextToken: String
}

type AwsCloudDirectoryBatchReadOutputResponsesSuccessfulResponseLookupPolicy {
  PolicyToPathList: [AwsCloudDirectoryS26]
  NextToken: String
}

input AwsCloudDirectoryBatchWriteInput {
  DirectoryArn: String!
  Operations: [AwsCloudDirectoryBatchWriteOperationsInput]!
}

input AwsCloudDirectoryBatchWriteOperationsAddFacetToObjectInput {
  SchemaFacet: AwsCloudDirectoryS3Input!
  ObjectAttributeList: [AwsCloudDirectoryS5Input]!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsAttachObjectInput {
  ParentReference: AwsCloudDirectorySfInput!
  ChildReference: AwsCloudDirectorySfInput!
  LinkName: String!
}

input AwsCloudDirectoryBatchWriteOperationsAttachPolicyInput {
  PolicyReference: AwsCloudDirectorySfInput!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsAttachToIndexInput {
  IndexReference: AwsCloudDirectorySfInput!
  TargetReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsAttachTypedLinkInput {
  SourceObjectReference: AwsCloudDirectorySfInput!
  TargetObjectReference: AwsCloudDirectorySfInput!
  TypedLinkFacet: AwsCloudDirectoryStInput!
  Attributes: [AwsCloudDirectorySvInput]!
}

input AwsCloudDirectoryBatchWriteOperationsCreateIndexInput {
  OrderedIndexedAttributeList: [AwsCloudDirectoryS7Input]!
  IsUnique: Boolean!
  ParentReference: AwsCloudDirectorySfInput
  LinkName: String
  BatchReferenceName: String
}

input AwsCloudDirectoryBatchWriteOperationsCreateObjectInput {
  SchemaFacet: [AwsCloudDirectoryS3Input]!
  ObjectAttributeList: [AwsCloudDirectoryS5Input]!
  ParentReference: AwsCloudDirectorySfInput!
  LinkName: String!
  BatchReferenceName: String!
}

input AwsCloudDirectoryBatchWriteOperationsDeleteObjectInput {
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsDetachFromIndexInput {
  IndexReference: AwsCloudDirectorySfInput!
  TargetReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsDetachObjectInput {
  ParentReference: AwsCloudDirectorySfInput!
  LinkName: String!
  BatchReferenceName: String!
}

input AwsCloudDirectoryBatchWriteOperationsDetachPolicyInput {
  PolicyReference: AwsCloudDirectorySfInput!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsDetachTypedLinkInput {
  TypedLinkSpecifier: AwsCloudDirectorySyInput!
}

input AwsCloudDirectoryBatchWriteOperationsInput {
  CreateObject: AwsCloudDirectoryBatchWriteOperationsCreateObjectInput
  AttachObject: AwsCloudDirectoryBatchWriteOperationsAttachObjectInput
  DetachObject: AwsCloudDirectoryBatchWriteOperationsDetachObjectInput
  UpdateObjectAttributes: AwsCloudDirectoryBatchWriteOperationsUpdateObjectAttributesInput
  DeleteObject: AwsCloudDirectoryBatchWriteOperationsDeleteObjectInput
  AddFacetToObject: AwsCloudDirectoryBatchWriteOperationsAddFacetToObjectInput
  RemoveFacetFromObject: AwsCloudDirectoryBatchWriteOperationsRemoveFacetFromObjectInput
  AttachPolicy: AwsCloudDirectoryBatchWriteOperationsAttachPolicyInput
  DetachPolicy: AwsCloudDirectoryBatchWriteOperationsDetachPolicyInput
  CreateIndex: AwsCloudDirectoryBatchWriteOperationsCreateIndexInput
  AttachToIndex: AwsCloudDirectoryBatchWriteOperationsAttachToIndexInput
  DetachFromIndex: AwsCloudDirectoryBatchWriteOperationsDetachFromIndexInput
  AttachTypedLink: AwsCloudDirectoryBatchWriteOperationsAttachTypedLinkInput
  DetachTypedLink: AwsCloudDirectoryBatchWriteOperationsDetachTypedLinkInput
}

input AwsCloudDirectoryBatchWriteOperationsRemoveFacetFromObjectInput {
  SchemaFacet: AwsCloudDirectoryS3Input!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryBatchWriteOperationsUpdateObjectAttributesInput {
  ObjectReference: AwsCloudDirectorySfInput!
  AttributeUpdates: [AwsCloudDirectoryS2qInput]!
}

type AwsCloudDirectoryBatchWriteOutput {
  Responses: [AwsCloudDirectoryBatchWriteOutputResponses]
}

type AwsCloudDirectoryBatchWriteOutputResponses {
  CreateObject: AwsCloudDirectoryBatchWriteOutputResponsesCreateObject
  AttachObject: AwsCloudDirectoryBatchWriteOutputResponsesAttachObject
  DetachObject: AwsCloudDirectoryBatchWriteOutputResponsesDetachObject
  UpdateObjectAttributes: AwsCloudDirectoryBatchWriteOutputResponsesUpdateObjectAttributes
  DeleteObject: JSON
  AddFacetToObject: JSON
  RemoveFacetFromObject: JSON
  AttachPolicy: JSON
  DetachPolicy: JSON
  CreateIndex: AwsCloudDirectoryBatchWriteOutputResponsesCreateIndex
  AttachToIndex: AwsCloudDirectoryBatchWriteOutputResponsesAttachToIndex
  DetachFromIndex: AwsCloudDirectoryBatchWriteOutputResponsesDetachFromIndex
  AttachTypedLink: AwsCloudDirectoryBatchWriteOutputResponsesAttachTypedLink
  DetachTypedLink: JSON
}

type AwsCloudDirectoryBatchWriteOutputResponsesAttachObject {
  attachedObjectIdentifier: String
}

type AwsCloudDirectoryBatchWriteOutputResponsesAttachToIndex {
  AttachedObjectIdentifier: String
}

type AwsCloudDirectoryBatchWriteOutputResponsesAttachTypedLink {
  TypedLinkSpecifier: AwsCloudDirectorySy
}

type AwsCloudDirectoryBatchWriteOutputResponsesCreateIndex {
  ObjectIdentifier: String
}

type AwsCloudDirectoryBatchWriteOutputResponsesCreateObject {
  ObjectIdentifier: String
}

type AwsCloudDirectoryBatchWriteOutputResponsesDetachFromIndex {
  DetachedObjectIdentifier: String
}

type AwsCloudDirectoryBatchWriteOutputResponsesDetachObject {
  detachedObjectIdentifier: String
}

type AwsCloudDirectoryBatchWriteOutputResponsesUpdateObjectAttributes {
  ObjectIdentifier: String
}

input AwsCloudDirectoryCreateDirectoryInput {
  Name: String!
  SchemaArn: String!
}

type AwsCloudDirectoryCreateDirectoryOutput {
  DirectoryArn: String!
  Name: String!
  ObjectIdentifier: String!
  AppliedSchemaArn: String!
}

input AwsCloudDirectoryCreateFacetInput {
  SchemaArn: String!
  Name: String!
  Attributes: [AwsCloudDirectoryS3tInput]
  ObjectType: String!
}

input AwsCloudDirectoryCreateIndexInput {
  DirectoryArn: String!
  OrderedIndexedAttributeList: [AwsCloudDirectoryS7Input]!
  IsUnique: Boolean!
  ParentReference: AwsCloudDirectorySfInput
  LinkName: String
}

type AwsCloudDirectoryCreateIndexOutput {
  ObjectIdentifier: String
}

input AwsCloudDirectoryCreateObjectInput {
  DirectoryArn: String!
  SchemaFacets: [AwsCloudDirectoryS3Input]!
  ObjectAttributeList: [AwsCloudDirectoryS5Input]
  ParentReference: AwsCloudDirectorySfInput
  LinkName: String
}

type AwsCloudDirectoryCreateObjectOutput {
  ObjectIdentifier: String
}

input AwsCloudDirectoryCreateSchemaInput {
  Name: String!
}

type AwsCloudDirectoryCreateSchemaOutput {
  SchemaArn: String
}

input AwsCloudDirectoryCreateTypedLinkFacetFacetInput {
  Name: String!
  Attributes: [AwsCloudDirectoryS4hInput]!
  IdentityAttributeOrder: [String]!
}

input AwsCloudDirectoryCreateTypedLinkFacetInput {
  SchemaArn: String!
  Facet: AwsCloudDirectoryCreateTypedLinkFacetFacetInput!
}

input AwsCloudDirectoryDeleteDirectoryInput {
  DirectoryArn: String!
}

type AwsCloudDirectoryDeleteDirectoryOutput {
  DirectoryArn: String!
}

input AwsCloudDirectoryDeleteFacetInput {
  SchemaArn: String!
  Name: String!
}

input AwsCloudDirectoryDeleteObjectInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryDeleteSchemaInput {
  SchemaArn: String!
}

type AwsCloudDirectoryDeleteSchemaOutput {
  SchemaArn: String
}

input AwsCloudDirectoryDeleteTypedLinkFacetInput {
  SchemaArn: String!
  Name: String!
}

input AwsCloudDirectoryDetachFromIndexInput {
  DirectoryArn: String!
  IndexReference: AwsCloudDirectorySfInput!
  TargetReference: AwsCloudDirectorySfInput!
}

type AwsCloudDirectoryDetachFromIndexOutput {
  DetachedObjectIdentifier: String
}

input AwsCloudDirectoryDetachObjectInput {
  DirectoryArn: String!
  ParentReference: AwsCloudDirectorySfInput!
  LinkName: String!
}

type AwsCloudDirectoryDetachObjectOutput {
  DetachedObjectIdentifier: String
}

input AwsCloudDirectoryDetachPolicyInput {
  DirectoryArn: String!
  PolicyReference: AwsCloudDirectorySfInput!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryDetachTypedLinkInput {
  DirectoryArn: String!
  TypedLinkSpecifier: AwsCloudDirectorySyInput!
}

input AwsCloudDirectoryDisableDirectoryInput {
  DirectoryArn: String!
}

type AwsCloudDirectoryDisableDirectoryOutput {
  DirectoryArn: String!
}

input AwsCloudDirectoryEnableDirectoryInput {
  DirectoryArn: String!
}

type AwsCloudDirectoryEnableDirectoryOutput {
  DirectoryArn: String!
}

input AwsCloudDirectoryGetDirectoryInput {
  DirectoryArn: String!
}

type AwsCloudDirectoryGetDirectoryOutput {
  Directory: AwsCloudDirectoryS57!
}

input AwsCloudDirectoryGetFacetInput {
  SchemaArn: String!
  Name: String!
}

type AwsCloudDirectoryGetFacetOutput {
  Facet: AwsCloudDirectoryGetFacetOutputFacet
}

type AwsCloudDirectoryGetFacetOutputFacet {
  Name: String
  ObjectType: String
}

input AwsCloudDirectoryGetObjectInformationInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  ConsistencyLevel: String
}

type AwsCloudDirectoryGetObjectInformationOutput {
  SchemaFacets: [AwsCloudDirectoryS3]
  ObjectIdentifier: String
}

input AwsCloudDirectoryGetSchemaAsJsonInput {
  SchemaArn: String!
}

type AwsCloudDirectoryGetSchemaAsJsonOutput {
  Name: String
  Document: String
}

input AwsCloudDirectoryGetTypedLinkFacetInformationInput {
  SchemaArn: String!
  Name: String!
}

type AwsCloudDirectoryGetTypedLinkFacetInformationOutput {
  IdentityAttributeOrder: [String]
}

input AwsCloudDirectoryListAppliedSchemaArnsInput {
  DirectoryArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListAppliedSchemaArnsOutput {
  SchemaArns: [String]
  NextToken: String
}

input AwsCloudDirectoryListAttachedIndicesInput {
  DirectoryArn: String!
  TargetReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListAttachedIndicesOutput {
  IndexAttachments: [AwsCloudDirectoryS1w]
  NextToken: String
}

input AwsCloudDirectoryListDevelopmentSchemaArnsInput {
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListDevelopmentSchemaArnsOutput {
  SchemaArns: [String]
  NextToken: String
}

input AwsCloudDirectoryListDirectoriesInput {
  NextToken: String
  MaxResults: Int
  state: String
}

type AwsCloudDirectoryListDirectoriesOutput {
  Directories: [AwsCloudDirectoryS57]!
  NextToken: String
}

input AwsCloudDirectoryListFacetAttributesInput {
  SchemaArn: String!
  Name: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListFacetAttributesOutput {
  Attributes: [AwsCloudDirectoryS3t]
  NextToken: String
}

input AwsCloudDirectoryListFacetNamesInput {
  SchemaArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListFacetNamesOutput {
  FacetNames: [String]
  NextToken: String
}

input AwsCloudDirectoryListIncomingTypedLinksInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  FilterAttributeRanges: [AwsCloudDirectoryS1iInput]
  FilterTypedLink: AwsCloudDirectoryStInput
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListIncomingTypedLinksOutput {
  LinkSpecifiers: [AwsCloudDirectorySy]
  NextToken: String
}

input AwsCloudDirectoryListIndexInput {
  DirectoryArn: String!
  RangesOnIndexedValues: [AwsCloudDirectoryS1dInput]
  IndexReference: AwsCloudDirectorySfInput!
  MaxResults: Int
  NextToken: String
  ConsistencyLevel: String
}

type AwsCloudDirectoryListIndexOutput {
  IndexAttachments: [AwsCloudDirectoryS1w]
  NextToken: String
}

input AwsCloudDirectoryListObjectAttributesInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
  FacetFilter: AwsCloudDirectoryS3Input
}

type AwsCloudDirectoryListObjectAttributesOutput {
  Attributes: [AwsCloudDirectoryS5]
  NextToken: String
}

input AwsCloudDirectoryListObjectChildrenInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListObjectChildrenOutput {
  Children: JSON
  NextToken: String
}

input AwsCloudDirectoryListObjectParentPathsInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListObjectParentPathsOutput {
  PathToObjectIdentifiersList: [AwsCloudDirectoryS1z]
  NextToken: String
}

input AwsCloudDirectoryListObjectParentsInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListObjectParentsOutput {
  Parents: JSON
  NextToken: String
}

input AwsCloudDirectoryListObjectPoliciesInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListObjectPoliciesOutput {
  AttachedPolicyIds: [String]
  NextToken: String
}

input AwsCloudDirectoryListOutgoingTypedLinksInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  FilterAttributeRanges: [AwsCloudDirectoryS1iInput]
  FilterTypedLink: AwsCloudDirectoryStInput
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListOutgoingTypedLinksOutput {
  TypedLinkSpecifiers: [AwsCloudDirectorySy]
  NextToken: String
}

input AwsCloudDirectoryListPolicyAttachmentsInput {
  DirectoryArn: String!
  PolicyReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
  ConsistencyLevel: String
}

type AwsCloudDirectoryListPolicyAttachmentsOutput {
  ObjectIdentifiers: [String]
  NextToken: String
}

input AwsCloudDirectoryListPublishedSchemaArnsInput {
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListPublishedSchemaArnsOutput {
  SchemaArns: [String]
  NextToken: String
}

input AwsCloudDirectoryListTagsForResourceInput {
  ResourceArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListTagsForResourceOutput {
  Tags: [AwsCloudDirectoryS6n]
  NextToken: String
}

input AwsCloudDirectoryListTypedLinkFacetAttributesInput {
  SchemaArn: String!
  Name: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListTypedLinkFacetAttributesOutput {
  Attributes: [AwsCloudDirectoryS4h]
  NextToken: String
}

input AwsCloudDirectoryListTypedLinkFacetNamesInput {
  SchemaArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryListTypedLinkFacetNamesOutput {
  FacetNames: [String]
  NextToken: String
}

input AwsCloudDirectoryLookupPolicyInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  NextToken: String
  MaxResults: Int
}

type AwsCloudDirectoryLookupPolicyOutput {
  PolicyToPathList: [AwsCloudDirectoryS26]
  NextToken: String
}

input AwsCloudDirectoryPublishSchemaInput {
  DevelopmentSchemaArn: String!
  Version: String!
  Name: String
}

type AwsCloudDirectoryPublishSchemaOutput {
  PublishedSchemaArn: String
}

input AwsCloudDirectoryPutSchemaFromJsonInput {
  SchemaArn: String!
  Document: String!
}

type AwsCloudDirectoryPutSchemaFromJsonOutput {
  Arn: String
}

input AwsCloudDirectoryRemoveFacetFromObjectInput {
  DirectoryArn: String!
  SchemaFacet: AwsCloudDirectoryS3Input!
  ObjectReference: AwsCloudDirectorySfInput!
}

input AwsCloudDirectoryS1dInput {
  AttributeKey: AwsCloudDirectoryS7Input
  Range: AwsCloudDirectoryS1fInput
}

input AwsCloudDirectoryS1fInput {
  StartMode: String!
  StartValue: AwsCloudDirectoryS9Input
  EndMode: String!
  EndValue: AwsCloudDirectoryS9Input
}

input AwsCloudDirectoryS1iInput {
  AttributeName: String
  Range: AwsCloudDirectoryS1fInput!
}

type AwsCloudDirectoryS1w {
  IndexedAttributes: [AwsCloudDirectoryS5]
  ObjectIdentifier: String
}

type AwsCloudDirectoryS1z {
  Path: String
  ObjectIdentifiers: [String]
}

type AwsCloudDirectoryS26 {
  Path: String
  Policies: [AwsCloudDirectoryS26Policies]
}

type AwsCloudDirectoryS26Policies {
  PolicyId: String
  ObjectIdentifier: String
  PolicyType: String
}

input AwsCloudDirectoryS2qInput {
  ObjectAttributeKey: AwsCloudDirectoryS7Input
  ObjectAttributeAction: AwsCloudDirectoryS2qObjectAttributeActionInput
}

input AwsCloudDirectoryS2qObjectAttributeActionInput {
  ObjectAttributeActionType: String
  ObjectAttributeUpdateValue: AwsCloudDirectoryS9Input
}

type AwsCloudDirectoryS3 {
  SchemaArn: String
  FacetName: String
}

input AwsCloudDirectoryS3Input {
  SchemaArn: String
  FacetName: String
}

type AwsCloudDirectoryS3t {
  Name: String!
  AttributeDefinition: AwsCloudDirectoryS3tAttributeDefinition
  AttributeReference: AwsCloudDirectoryS3tAttributeReference
  RequiredBehavior: String
}

type AwsCloudDirectoryS3tAttributeDefinition {
  Type: String!
  DefaultValue: AwsCloudDirectoryS9
  IsImmutable: Boolean
  Rules: JSON
}

input AwsCloudDirectoryS3tAttributeDefinitionInput {
  Type: String!
  DefaultValue: AwsCloudDirectoryS9Input
  IsImmutable: Boolean
  Rules: JSON
}

type AwsCloudDirectoryS3tAttributeReference {
  TargetFacetName: String!
  TargetAttributeName: String!
}

input AwsCloudDirectoryS3tAttributeReferenceInput {
  TargetFacetName: String!
  TargetAttributeName: String!
}

input AwsCloudDirectoryS3tInput {
  Name: String!
  AttributeDefinition: AwsCloudDirectoryS3tAttributeDefinitionInput
  AttributeReference: AwsCloudDirectoryS3tAttributeReferenceInput
  RequiredBehavior: String
}

type AwsCloudDirectoryS4h {
  Name: String!
  Type: String!
  DefaultValue: AwsCloudDirectoryS9
  IsImmutable: Boolean
  Rules: JSON
  RequiredBehavior: String!
}

input AwsCloudDirectoryS4hInput {
  Name: String!
  Type: String!
  DefaultValue: AwsCloudDirectoryS9Input
  IsImmutable: Boolean
  Rules: JSON
  RequiredBehavior: String!
}

type AwsCloudDirectoryS5 {
  Key: AwsCloudDirectoryS7!
  Value: AwsCloudDirectoryS9!
}

type AwsCloudDirectoryS57 {
  Name: String
  DirectoryArn: String
  State: String
  CreationDateTime: Date
}

input AwsCloudDirectoryS5Input {
  Key: AwsCloudDirectoryS7Input!
  Value: AwsCloudDirectoryS9Input!
}

type AwsCloudDirectoryS6n {
  Key: String
  Value: String
}

input AwsCloudDirectoryS6nInput {
  Key: String
  Value: String
}

type AwsCloudDirectoryS7 {
  SchemaArn: String!
  FacetName: String!
  Name: String!
}

input AwsCloudDirectoryS7Input {
  SchemaArn: String!
  FacetName: String!
  Name: String!
}

type AwsCloudDirectoryS9 {
  StringValue: String
  BinaryValue: JSON
  BooleanValue: Boolean
  NumberValue: String
  DatetimeValue: Date
}

input AwsCloudDirectoryS9Input {
  StringValue: String
  BinaryValue: JSON
  BooleanValue: Boolean
  NumberValue: String
  DatetimeValue: Date
}

type AwsCloudDirectorySf {
  Selector: String
}

input AwsCloudDirectorySfInput {
  Selector: String
}

type AwsCloudDirectorySt {
  SchemaArn: String!
  TypedLinkName: String!
}

input AwsCloudDirectoryStInput {
  SchemaArn: String!
  TypedLinkName: String!
}

type AwsCloudDirectorySv {
  AttributeName: String!
  Value: AwsCloudDirectoryS9!
}

input AwsCloudDirectorySvInput {
  AttributeName: String!
  Value: AwsCloudDirectoryS9Input!
}

type AwsCloudDirectorySy {
  TypedLinkFacet: AwsCloudDirectorySt!
  SourceObjectReference: AwsCloudDirectorySf!
  TargetObjectReference: AwsCloudDirectorySf!
  IdentityAttributeValues: [AwsCloudDirectorySv]!
}

input AwsCloudDirectorySyInput {
  TypedLinkFacet: AwsCloudDirectoryStInput!
  SourceObjectReference: AwsCloudDirectorySfInput!
  TargetObjectReference: AwsCloudDirectorySfInput!
  IdentityAttributeValues: [AwsCloudDirectorySvInput]!
}

input AwsCloudDirectoryTagResourceInput {
  ResourceArn: String!
  Tags: [AwsCloudDirectoryS6nInput]!
}

input AwsCloudDirectoryUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsCloudDirectoryUpdateFacetAttributeUpdatesInput {
  Attribute: AwsCloudDirectoryS3tInput
  Action: String
}

input AwsCloudDirectoryUpdateFacetInput {
  SchemaArn: String!
  Name: String!
  AttributeUpdates: [AwsCloudDirectoryUpdateFacetAttributeUpdatesInput]
  ObjectType: String
}

input AwsCloudDirectoryUpdateObjectAttributesInput {
  DirectoryArn: String!
  ObjectReference: AwsCloudDirectorySfInput!
  AttributeUpdates: [AwsCloudDirectoryS2qInput]!
}

type AwsCloudDirectoryUpdateObjectAttributesOutput {
  ObjectIdentifier: String
}

input AwsCloudDirectoryUpdateSchemaInput {
  SchemaArn: String!
  Name: String!
}

type AwsCloudDirectoryUpdateSchemaOutput {
  SchemaArn: String
}

input AwsCloudDirectoryUpdateTypedLinkFacetAttributeUpdatesInput {
  Attribute: AwsCloudDirectoryS4hInput!
  Action: String!
}

input AwsCloudDirectoryUpdateTypedLinkFacetInput {
  SchemaArn: String!
  Name: String!
  AttributeUpdates: [AwsCloudDirectoryUpdateTypedLinkFacetAttributeUpdatesInput]!
  IdentityAttributeOrder: [String]!
}

# AWS CloudFormation (2010-05-15)
type AwsCloudFormation {
  cancelUpdateStack(input: AwsCloudFormationCancelUpdateStackInput!, config: AwsConfig): JSON
  continueUpdateRollback(input: AwsCloudFormationContinueUpdateRollbackInput!, config: AwsConfig): JSON
  createChangeSet(input: AwsCloudFormationCreateChangeSetInput!, config: AwsConfig): AwsCloudFormationCreateChangeSetOutput
  createStack(input: AwsCloudFormationCreateStackInput!, config: AwsConfig): AwsCloudFormationCreateStackOutput
  createStackInstances(input: AwsCloudFormationCreateStackInstancesInput!, config: AwsConfig): AwsCloudFormationCreateStackInstancesOutput
  createStackSet(input: AwsCloudFormationCreateStackSetInput!, config: AwsConfig): AwsCloudFormationCreateStackSetOutput
  deleteChangeSet(input: AwsCloudFormationDeleteChangeSetInput!, config: AwsConfig): JSON
  deleteStack(input: AwsCloudFormationDeleteStackInput!, config: AwsConfig): JSON
  deleteStackInstances(input: AwsCloudFormationDeleteStackInstancesInput!, config: AwsConfig): AwsCloudFormationDeleteStackInstancesOutput
  deleteStackSet(input: AwsCloudFormationDeleteStackSetInput!, config: AwsConfig): JSON
  describeAccountLimits(input: AwsCloudFormationDescribeAccountLimitsInput, config: AwsConfig): AwsCloudFormationDescribeAccountLimitsOutput
  describeChangeSet(input: AwsCloudFormationDescribeChangeSetInput!, config: AwsConfig): AwsCloudFormationDescribeChangeSetOutput
  describeStackEvents(input: AwsCloudFormationDescribeStackEventsInput, config: AwsConfig): AwsCloudFormationDescribeStackEventsOutput
  describeStackInstance(input: AwsCloudFormationDescribeStackInstanceInput!, config: AwsConfig): AwsCloudFormationDescribeStackInstanceOutput
  describeStackResource(input: AwsCloudFormationDescribeStackResourceInput!, config: AwsConfig): AwsCloudFormationDescribeStackResourceOutput
  describeStackResources(input: AwsCloudFormationDescribeStackResourcesInput, config: AwsConfig): AwsCloudFormationDescribeStackResourcesOutput
  describeStackSet(input: AwsCloudFormationDescribeStackSetInput!, config: AwsConfig): AwsCloudFormationDescribeStackSetOutput
  describeStackSetOperation(input: AwsCloudFormationDescribeStackSetOperationInput!, config: AwsConfig): AwsCloudFormationDescribeStackSetOperationOutput
  describeStacks(input: AwsCloudFormationDescribeStacksInput, config: AwsConfig): AwsCloudFormationDescribeStacksOutput
  estimateTemplateCost(input: AwsCloudFormationEstimateTemplateCostInput, config: AwsConfig): AwsCloudFormationEstimateTemplateCostOutput
  executeChangeSet(input: AwsCloudFormationExecuteChangeSetInput!, config: AwsConfig): JSON
  getStackPolicy(input: AwsCloudFormationGetStackPolicyInput!, config: AwsConfig): AwsCloudFormationGetStackPolicyOutput
  getTemplate(input: AwsCloudFormationGetTemplateInput, config: AwsConfig): AwsCloudFormationGetTemplateOutput
  getTemplateSummary(input: AwsCloudFormationGetTemplateSummaryInput, config: AwsConfig): AwsCloudFormationGetTemplateSummaryOutput
  listChangeSets(input: AwsCloudFormationListChangeSetsInput!, config: AwsConfig): AwsCloudFormationListChangeSetsOutput
  listExports(input: AwsCloudFormationListExportsInput, config: AwsConfig): AwsCloudFormationListExportsOutput
  listImports(input: AwsCloudFormationListImportsInput!, config: AwsConfig): AwsCloudFormationListImportsOutput
  listStackInstances(input: AwsCloudFormationListStackInstancesInput!, config: AwsConfig): AwsCloudFormationListStackInstancesOutput
  listStackResources(input: AwsCloudFormationListStackResourcesInput!, config: AwsConfig): AwsCloudFormationListStackResourcesOutput
  listStackSetOperationResults(input: AwsCloudFormationListStackSetOperationResultsInput!, config: AwsConfig): AwsCloudFormationListStackSetOperationResultsOutput
  listStackSetOperations(input: AwsCloudFormationListStackSetOperationsInput!, config: AwsConfig): AwsCloudFormationListStackSetOperationsOutput
  listStackSets(input: AwsCloudFormationListStackSetsInput, config: AwsConfig): AwsCloudFormationListStackSetsOutput
  listStacks(input: AwsCloudFormationListStacksInput, config: AwsConfig): AwsCloudFormationListStacksOutput
  setStackPolicy(input: AwsCloudFormationSetStackPolicyInput!, config: AwsConfig): JSON
  signalResource(input: AwsCloudFormationSignalResourceInput!, config: AwsConfig): JSON
  stopStackSetOperation(input: AwsCloudFormationStopStackSetOperationInput!, config: AwsConfig): JSON
  updateStack(input: AwsCloudFormationUpdateStackInput!, config: AwsConfig): AwsCloudFormationUpdateStackOutput
  updateStackInstances(input: AwsCloudFormationUpdateStackInstancesInput!, config: AwsConfig): AwsCloudFormationUpdateStackInstancesOutput
  updateStackSet(input: AwsCloudFormationUpdateStackSetInput!, config: AwsConfig): AwsCloudFormationUpdateStackSetOutput
  updateTerminationProtection(input: AwsCloudFormationUpdateTerminationProtectionInput!, config: AwsConfig): AwsCloudFormationUpdateTerminationProtectionOutput
  validateTemplate(input: AwsCloudFormationValidateTemplateInput, config: AwsConfig): AwsCloudFormationValidateTemplateOutput
}

input AwsCloudFormationCancelUpdateStackInput {
  StackName: String!
  ClientRequestToken: String
}

input AwsCloudFormationContinueUpdateRollbackInput {
  StackName: String!
  RoleARN: String
  ResourcesToSkip: [String]
  ClientRequestToken: String
}

input AwsCloudFormationCreateChangeSetInput {
  StackName: String!
  TemplateBody: String
  TemplateURL: String
  UsePreviousTemplate: Boolean
  Parameters: [AwsCloudFormationSeInput]
  Capabilities: [String]
  ResourceTypes: [String]
  RoleARN: String
  RollbackConfiguration: AwsCloudFormationSnInput
  NotificationARNs: [String]
  Tags: [AwsCloudFormationSvInput]
  ChangeSetName: String!
  ClientToken: String
  Description: String
  ChangeSetType: String
}

type AwsCloudFormationCreateChangeSetOutput {
  Id: String
  StackId: String
}

input AwsCloudFormationCreateStackInput {
  StackName: String!
  TemplateBody: String
  TemplateURL: String
  Parameters: [AwsCloudFormationSeInput]
  DisableRollback: Boolean
  RollbackConfiguration: AwsCloudFormationSnInput
  TimeoutInMinutes: Int
  NotificationARNs: [String]
  Capabilities: [String]
  ResourceTypes: [String]
  RoleARN: String
  OnFailure: String
  StackPolicyBody: String
  StackPolicyURL: String
  Tags: [AwsCloudFormationSvInput]
  ClientRequestToken: String
  EnableTerminationProtection: Boolean
}

input AwsCloudFormationCreateStackInstancesInput {
  StackSetName: String!
  Accounts: [String]!
  Regions: [String]!
  ParameterOverrides: [AwsCloudFormationSeInput]
  OperationPreferences: AwsCloudFormationS1kInput
  OperationId: String
}

type AwsCloudFormationCreateStackInstancesOutput {
  OperationId: String
}

type AwsCloudFormationCreateStackOutput {
  StackId: String
}

input AwsCloudFormationCreateStackSetInput {
  StackSetName: String!
  Description: String
  TemplateBody: String
  TemplateURL: String
  Parameters: [AwsCloudFormationSeInput]
  Capabilities: [String]
  Tags: [AwsCloudFormationSvInput]
  ClientRequestToken: String
}

type AwsCloudFormationCreateStackSetOutput {
  StackSetId: String
}

input AwsCloudFormationDeleteChangeSetInput {
  ChangeSetName: String!
  StackName: String
}

input AwsCloudFormationDeleteStackInput {
  StackName: String!
  RetainResources: [String]
  RoleARN: String
  ClientRequestToken: String
}

input AwsCloudFormationDeleteStackInstancesInput {
  StackSetName: String!
  Accounts: [String]!
  Regions: [String]!
  OperationPreferences: AwsCloudFormationS1kInput
  RetainStacks: Boolean!
  OperationId: String
}

type AwsCloudFormationDeleteStackInstancesOutput {
  OperationId: String
}

input AwsCloudFormationDeleteStackSetInput {
  StackSetName: String!
}

input AwsCloudFormationDescribeAccountLimitsInput {
  NextToken: String
}

type AwsCloudFormationDescribeAccountLimitsOutput {
  AccountLimits: [AwsCloudFormationDescribeAccountLimitsOutputAccountLimits]
  NextToken: String
}

type AwsCloudFormationDescribeAccountLimitsOutputAccountLimits {
  Name: String
  Value: Int
}

input AwsCloudFormationDescribeChangeSetInput {
  ChangeSetName: String!
  StackName: String
  NextToken: String
}

type AwsCloudFormationDescribeChangeSetOutput {
  ChangeSetName: String
  ChangeSetId: String
  StackId: String
  StackName: String
  Description: String
  Parameters: [AwsCloudFormationSe]
  CreationTime: Date
  ExecutionStatus: String
  Status: String
  StatusReason: String
  NotificationARNs: [String]
  RollbackConfiguration: AwsCloudFormationSn
  Capabilities: [String]
  Tags: [AwsCloudFormationSv]
  Changes: [AwsCloudFormationDescribeChangeSetOutputChanges]
  NextToken: String
}

type AwsCloudFormationDescribeChangeSetOutputChanges {
  Type: String
  ResourceChange: AwsCloudFormationDescribeChangeSetOutputChangesResourceChange
}

type AwsCloudFormationDescribeChangeSetOutputChangesResourceChange {
  Action: String
  LogicalResourceId: String
  PhysicalResourceId: String
  ResourceType: String
  Replacement: String
  Scope: [String]
  Details: [AwsCloudFormationDescribeChangeSetOutputChangesResourceChangeDetails]
}

type AwsCloudFormationDescribeChangeSetOutputChangesResourceChangeDetails {
  Target: AwsCloudFormationDescribeChangeSetOutputChangesResourceChangeDetailsTarget
  Evaluation: String
  ChangeSource: String
  CausingEntity: String
}

type AwsCloudFormationDescribeChangeSetOutputChangesResourceChangeDetailsTarget {
  Attribute: String
  Name: String
  RequiresRecreation: String
}

input AwsCloudFormationDescribeStackEventsInput {
  StackName: String
  NextToken: String
}

type AwsCloudFormationDescribeStackEventsOutput {
  StackEvents: [AwsCloudFormationDescribeStackEventsOutputStackEvents]
  NextToken: String
}

type AwsCloudFormationDescribeStackEventsOutputStackEvents {
  StackId: String!
  EventId: String!
  StackName: String!
  LogicalResourceId: String
  PhysicalResourceId: String
  ResourceType: String
  Timestamp: Date!
  ResourceStatus: String
  ResourceStatusReason: String
  ResourceProperties: String
  ClientRequestToken: String
}

input AwsCloudFormationDescribeStackInstanceInput {
  StackSetName: String!
  StackInstanceAccount: String!
  StackInstanceRegion: String!
}

type AwsCloudFormationDescribeStackInstanceOutput {
  StackInstance: AwsCloudFormationDescribeStackInstanceOutputStackInstance
}

type AwsCloudFormationDescribeStackInstanceOutputStackInstance {
  StackSetId: String
  Region: String
  Account: String
  StackId: String
  ParameterOverrides: [AwsCloudFormationSe]
  Status: String
  StatusReason: String
}

input AwsCloudFormationDescribeStackResourceInput {
  StackName: String!
  LogicalResourceId: String!
}

type AwsCloudFormationDescribeStackResourceOutput {
  StackResourceDetail: AwsCloudFormationDescribeStackResourceOutputStackResourceDetail
}

type AwsCloudFormationDescribeStackResourceOutputStackResourceDetail {
  StackName: String
  StackId: String
  LogicalResourceId: String!
  PhysicalResourceId: String
  ResourceType: String!
  LastUpdatedTimestamp: Date!
  ResourceStatus: String!
  ResourceStatusReason: String
  Description: String
  Metadata: String
}

input AwsCloudFormationDescribeStackResourcesInput {
  StackName: String
  LogicalResourceId: String
  PhysicalResourceId: String
}

type AwsCloudFormationDescribeStackResourcesOutput {
  StackResources: [AwsCloudFormationDescribeStackResourcesOutputStackResources]
}

type AwsCloudFormationDescribeStackResourcesOutputStackResources {
  StackName: String
  StackId: String
  LogicalResourceId: String!
  PhysicalResourceId: String
  ResourceType: String!
  Timestamp: Date!
  ResourceStatus: String!
  ResourceStatusReason: String
  Description: String
}

input AwsCloudFormationDescribeStackSetInput {
  StackSetName: String!
}

input AwsCloudFormationDescribeStackSetOperationInput {
  StackSetName: String!
  OperationId: String!
}

type AwsCloudFormationDescribeStackSetOperationOutput {
  StackSetOperation: AwsCloudFormationDescribeStackSetOperationOutputStackSetOperation
}

type AwsCloudFormationDescribeStackSetOperationOutputStackSetOperation {
  OperationId: String
  StackSetId: String
  Action: String
  Status: String
  OperationPreferences: AwsCloudFormationS1k
  RetainStacks: Boolean
  CreationTimestamp: Date
  EndTimestamp: Date
}

type AwsCloudFormationDescribeStackSetOutput {
  StackSet: AwsCloudFormationDescribeStackSetOutputStackSet
}

type AwsCloudFormationDescribeStackSetOutputStackSet {
  StackSetName: String
  StackSetId: String
  Description: String
  Status: String
  TemplateBody: String
  Parameters: [AwsCloudFormationSe]
  Capabilities: [String]
  Tags: [AwsCloudFormationSv]
}

input AwsCloudFormationDescribeStacksInput {
  StackName: String
  NextToken: String
}

type AwsCloudFormationDescribeStacksOutput {
  Stacks: [AwsCloudFormationDescribeStacksOutputStacks]
  NextToken: String
}

type AwsCloudFormationDescribeStacksOutputStacks {
  StackId: String
  StackName: String!
  ChangeSetId: String
  Description: String
  Parameters: [AwsCloudFormationSe]
  CreationTime: Date!
  DeletionTime: Date
  LastUpdatedTime: Date
  RollbackConfiguration: AwsCloudFormationSn
  StackStatus: String!
  StackStatusReason: String
  DisableRollback: Boolean
  NotificationARNs: [String]
  TimeoutInMinutes: Int
  Capabilities: [String]
  Outputs: [AwsCloudFormationDescribeStacksOutputStacksOutputs]
  RoleARN: String
  Tags: [AwsCloudFormationSv]
  EnableTerminationProtection: Boolean
  ParentId: String
  RootId: String
}

type AwsCloudFormationDescribeStacksOutputStacksOutputs {
  OutputKey: String
  OutputValue: String
  Description: String
  ExportName: String
}

input AwsCloudFormationEstimateTemplateCostInput {
  TemplateBody: String
  TemplateURL: String
  Parameters: [AwsCloudFormationSeInput]
}

type AwsCloudFormationEstimateTemplateCostOutput {
  Url: String
}

input AwsCloudFormationExecuteChangeSetInput {
  ChangeSetName: String!
  StackName: String
  ClientRequestToken: String
}

input AwsCloudFormationGetStackPolicyInput {
  StackName: String!
}

type AwsCloudFormationGetStackPolicyOutput {
  StackPolicyBody: String
}

input AwsCloudFormationGetTemplateInput {
  StackName: String
  ChangeSetName: String
  TemplateStage: String
}

type AwsCloudFormationGetTemplateOutput {
  TemplateBody: String
  StagesAvailable: [String]
}

input AwsCloudFormationGetTemplateSummaryInput {
  TemplateBody: String
  TemplateURL: String
  StackName: String
  StackSetName: String
}

type AwsCloudFormationGetTemplateSummaryOutput {
  Parameters: [AwsCloudFormationGetTemplateSummaryOutputParameters]
  Description: String
  Capabilities: [String]
  CapabilitiesReason: String
  ResourceTypes: [String]
  Version: String
  Metadata: String
  DeclaredTransforms: [String]
}

type AwsCloudFormationGetTemplateSummaryOutputParameters {
  ParameterKey: String
  DefaultValue: String
  ParameterType: String
  NoEcho: Boolean
  Description: String
  ParameterConstraints: AwsCloudFormationGetTemplateSummaryOutputParametersParameterConstraints
}

type AwsCloudFormationGetTemplateSummaryOutputParametersParameterConstraints {
  AllowedValues: [String]
}

input AwsCloudFormationListChangeSetsInput {
  StackName: String!
  NextToken: String
}

type AwsCloudFormationListChangeSetsOutput {
  Summaries: [AwsCloudFormationListChangeSetsOutputSummaries]
  NextToken: String
}

type AwsCloudFormationListChangeSetsOutputSummaries {
  StackId: String
  StackName: String
  ChangeSetId: String
  ChangeSetName: String
  ExecutionStatus: String
  Status: String
  StatusReason: String
  CreationTime: Date
  Description: String
}

input AwsCloudFormationListExportsInput {
  NextToken: String
}

type AwsCloudFormationListExportsOutput {
  Exports: [AwsCloudFormationListExportsOutputExports]
  NextToken: String
}

type AwsCloudFormationListExportsOutputExports {
  ExportingStackId: String
  Name: String
  Value: String
}

input AwsCloudFormationListImportsInput {
  ExportName: String!
  NextToken: String
}

type AwsCloudFormationListImportsOutput {
  Imports: [String]
  NextToken: String
}

input AwsCloudFormationListStackInstancesInput {
  StackSetName: String!
  NextToken: String
  MaxResults: Int
  StackInstanceAccount: String
  StackInstanceRegion: String
}

type AwsCloudFormationListStackInstancesOutput {
  Summaries: [AwsCloudFormationListStackInstancesOutputSummaries]
  NextToken: String
}

type AwsCloudFormationListStackInstancesOutputSummaries {
  StackSetId: String
  Region: String
  Account: String
  StackId: String
  Status: String
  StatusReason: String
}

input AwsCloudFormationListStackResourcesInput {
  StackName: String!
  NextToken: String
}

type AwsCloudFormationListStackResourcesOutput {
  StackResourceSummaries: [AwsCloudFormationListStackResourcesOutputStackResourceSummaries]
  NextToken: String
}

type AwsCloudFormationListStackResourcesOutputStackResourceSummaries {
  LogicalResourceId: String!
  PhysicalResourceId: String
  ResourceType: String!
  LastUpdatedTimestamp: Date!
  ResourceStatus: String!
  ResourceStatusReason: String
}

input AwsCloudFormationListStackSetOperationResultsInput {
  StackSetName: String!
  OperationId: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudFormationListStackSetOperationResultsOutput {
  Summaries: [AwsCloudFormationListStackSetOperationResultsOutputSummaries]
  NextToken: String
}

type AwsCloudFormationListStackSetOperationResultsOutputSummaries {
  Account: String
  Region: String
  Status: String
  StatusReason: String
  AccountGateResult: AwsCloudFormationListStackSetOperationResultsOutputSummariesAccountGateResult
}

type AwsCloudFormationListStackSetOperationResultsOutputSummariesAccountGateResult {
  Status: String
  StatusReason: String
}

input AwsCloudFormationListStackSetOperationsInput {
  StackSetName: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudFormationListStackSetOperationsOutput {
  Summaries: [AwsCloudFormationListStackSetOperationsOutputSummaries]
  NextToken: String
}

type AwsCloudFormationListStackSetOperationsOutputSummaries {
  OperationId: String
  Action: String
  Status: String
  CreationTimestamp: Date
  EndTimestamp: Date
}

input AwsCloudFormationListStackSetsInput {
  NextToken: String
  MaxResults: Int
  Status: String
}

type AwsCloudFormationListStackSetsOutput {
  Summaries: [AwsCloudFormationListStackSetsOutputSummaries]
  NextToken: String
}

type AwsCloudFormationListStackSetsOutputSummaries {
  StackSetName: String
  StackSetId: String
  Description: String
  Status: String
}

input AwsCloudFormationListStacksInput {
  NextToken: String
  StackStatusFilter: [String]
}

type AwsCloudFormationListStacksOutput {
  StackSummaries: [AwsCloudFormationListStacksOutputStackSummaries]
  NextToken: String
}

type AwsCloudFormationListStacksOutputStackSummaries {
  StackId: String
  StackName: String!
  TemplateDescription: String
  CreationTime: Date!
  LastUpdatedTime: Date
  DeletionTime: Date
  StackStatus: String!
  StackStatusReason: String
  ParentId: String
  RootId: String
}

type AwsCloudFormationS1k {
  RegionOrder: [String]
  FailureToleranceCount: Int
  FailureTolerancePercentage: Int
  MaxConcurrentCount: Int
  MaxConcurrentPercentage: Int
}

input AwsCloudFormationS1kInput {
  RegionOrder: [String]
  FailureToleranceCount: Int
  FailureTolerancePercentage: Int
  MaxConcurrentCount: Int
  MaxConcurrentPercentage: Int
}

type AwsCloudFormationSe {
  ParameterKey: String
  ParameterValue: String
  UsePreviousValue: Boolean
  ResolvedValue: String
}

input AwsCloudFormationSeInput {
  ParameterKey: String
  ParameterValue: String
  UsePreviousValue: Boolean
  ResolvedValue: String
}

input AwsCloudFormationSetStackPolicyInput {
  StackName: String!
  StackPolicyBody: String
  StackPolicyURL: String
}

input AwsCloudFormationSignalResourceInput {
  StackName: String!
  LogicalResourceId: String!
  UniqueId: String!
  Status: String!
}

type AwsCloudFormationSn {
  RollbackTriggers: [AwsCloudFormationSnRollbackTriggers]
  MonitoringTimeInMinutes: Int
}

input AwsCloudFormationSnInput {
  RollbackTriggers: [AwsCloudFormationSnRollbackTriggersInput]
  MonitoringTimeInMinutes: Int
}

type AwsCloudFormationSnRollbackTriggers {
  Arn: String!
  Type: String!
}

input AwsCloudFormationSnRollbackTriggersInput {
  Arn: String!
  Type: String!
}

input AwsCloudFormationStopStackSetOperationInput {
  StackSetName: String!
  OperationId: String!
}

type AwsCloudFormationSv {
  Key: String!
  Value: String!
}

input AwsCloudFormationSvInput {
  Key: String!
  Value: String!
}

input AwsCloudFormationUpdateStackInput {
  StackName: String!
  TemplateBody: String
  TemplateURL: String
  UsePreviousTemplate: Boolean
  StackPolicyDuringUpdateBody: String
  StackPolicyDuringUpdateURL: String
  Parameters: [AwsCloudFormationSeInput]
  Capabilities: [String]
  ResourceTypes: [String]
  RoleARN: String
  RollbackConfiguration: AwsCloudFormationSnInput
  StackPolicyBody: String
  StackPolicyURL: String
  NotificationARNs: [String]
  Tags: [AwsCloudFormationSvInput]
  ClientRequestToken: String
}

input AwsCloudFormationUpdateStackInstancesInput {
  StackSetName: String!
  Accounts: [String]!
  Regions: [String]!
  ParameterOverrides: [AwsCloudFormationSeInput]
  OperationPreferences: AwsCloudFormationS1kInput
  OperationId: String
}

type AwsCloudFormationUpdateStackInstancesOutput {
  OperationId: String
}

type AwsCloudFormationUpdateStackOutput {
  StackId: String
}

input AwsCloudFormationUpdateStackSetInput {
  StackSetName: String!
  Description: String
  TemplateBody: String
  TemplateURL: String
  UsePreviousTemplate: Boolean
  Parameters: [AwsCloudFormationSeInput]
  Capabilities: [String]
  Tags: [AwsCloudFormationSvInput]
  OperationPreferences: AwsCloudFormationS1kInput
  OperationId: String
}

type AwsCloudFormationUpdateStackSetOutput {
  OperationId: String
}

input AwsCloudFormationUpdateTerminationProtectionInput {
  EnableTerminationProtection: Boolean!
  StackName: String!
}

type AwsCloudFormationUpdateTerminationProtectionOutput {
  StackId: String
}

input AwsCloudFormationValidateTemplateInput {
  TemplateBody: String
  TemplateURL: String
}

type AwsCloudFormationValidateTemplateOutput {
  Parameters: [AwsCloudFormationValidateTemplateOutputParameters]
  Description: String
  Capabilities: [String]
  CapabilitiesReason: String
  DeclaredTransforms: [String]
}

type AwsCloudFormationValidateTemplateOutputParameters {
  ParameterKey: String
  DefaultValue: String
  NoEcho: Boolean
  Description: String
}

# Amazon CloudFront (2017-03-25)
type AwsCloudFront {
  createCloudFrontOriginAccessIdentity(input: AwsCloudFrontCreateCloudFrontOriginAccessIdentityInput!, config: AwsConfig): AwsCloudFrontCreateCloudFrontOriginAccessIdentityOutput
  createDistribution(input: AwsCloudFrontCreateDistributionInput!, config: AwsConfig): AwsCloudFrontCreateDistributionOutput
  createDistributionWithTags(input: AwsCloudFrontCreateDistributionWithTagsInput!, config: AwsConfig): AwsCloudFrontCreateDistributionWithTagsOutput
  createInvalidation(input: AwsCloudFrontCreateInvalidationInput!, config: AwsConfig): AwsCloudFrontCreateInvalidationOutput
  createStreamingDistribution(input: AwsCloudFrontCreateStreamingDistributionInput!, config: AwsConfig): AwsCloudFrontCreateStreamingDistributionOutput
  createStreamingDistributionWithTags(input: AwsCloudFrontCreateStreamingDistributionWithTagsInput!, config: AwsConfig): AwsCloudFrontCreateStreamingDistributionWithTagsOutput
  deleteCloudFrontOriginAccessIdentity(input: AwsCloudFrontDeleteCloudFrontOriginAccessIdentityInput!, config: AwsConfig): JSON
  deleteDistribution(input: AwsCloudFrontDeleteDistributionInput!, config: AwsConfig): JSON
  deleteServiceLinkedRole(input: AwsCloudFrontDeleteServiceLinkedRoleInput!, config: AwsConfig): JSON
  deleteStreamingDistribution(input: AwsCloudFrontDeleteStreamingDistributionInput!, config: AwsConfig): JSON
  getCloudFrontOriginAccessIdentity(input: AwsCloudFrontGetCloudFrontOriginAccessIdentityInput!, config: AwsConfig): AwsCloudFrontGetCloudFrontOriginAccessIdentityOutput
  getCloudFrontOriginAccessIdentityConfig(input: AwsCloudFrontGetCloudFrontOriginAccessIdentityConfigInput!, config: AwsConfig): AwsCloudFrontGetCloudFrontOriginAccessIdentityConfigOutput
  getDistribution(input: AwsCloudFrontGetDistributionInput!, config: AwsConfig): AwsCloudFrontGetDistributionOutput
  getDistributionConfig(input: AwsCloudFrontGetDistributionConfigInput!, config: AwsConfig): AwsCloudFrontGetDistributionConfigOutput
  getInvalidation(input: AwsCloudFrontGetInvalidationInput!, config: AwsConfig): AwsCloudFrontGetInvalidationOutput
  getStreamingDistribution(input: AwsCloudFrontGetStreamingDistributionInput!, config: AwsConfig): AwsCloudFrontGetStreamingDistributionOutput
  getStreamingDistributionConfig(input: AwsCloudFrontGetStreamingDistributionConfigInput!, config: AwsConfig): AwsCloudFrontGetStreamingDistributionConfigOutput
  listCloudFrontOriginAccessIdentities(input: AwsCloudFrontListCloudFrontOriginAccessIdentitiesInput, config: AwsConfig): AwsCloudFrontListCloudFrontOriginAccessIdentitiesOutput
  listDistributions(input: AwsCloudFrontListDistributionsInput, config: AwsConfig): AwsCloudFrontListDistributionsOutput
  listDistributionsByWebACLId(input: AwsCloudFrontListDistributionsByWebACLIdInput!, config: AwsConfig): AwsCloudFrontListDistributionsByWebACLIdOutput
  listInvalidations(input: AwsCloudFrontListInvalidationsInput!, config: AwsConfig): AwsCloudFrontListInvalidationsOutput
  listStreamingDistributions(input: AwsCloudFrontListStreamingDistributionsInput, config: AwsConfig): AwsCloudFrontListStreamingDistributionsOutput
  listTagsForResource(input: AwsCloudFrontListTagsForResourceInput!, config: AwsConfig): AwsCloudFrontListTagsForResourceOutput
  tagResource(input: AwsCloudFrontTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsCloudFrontUntagResourceInput!, config: AwsConfig): JSON
  updateCloudFrontOriginAccessIdentity(input: AwsCloudFrontUpdateCloudFrontOriginAccessIdentityInput!, config: AwsConfig): AwsCloudFrontUpdateCloudFrontOriginAccessIdentityOutput
  updateDistribution(input: AwsCloudFrontUpdateDistributionInput!, config: AwsConfig): AwsCloudFrontUpdateDistributionOutput
  updateStreamingDistribution(input: AwsCloudFrontUpdateStreamingDistributionInput!, config: AwsConfig): AwsCloudFrontUpdateStreamingDistributionOutput
}

input AwsCloudFrontCreateCloudFrontOriginAccessIdentityInput {
  CloudFrontOriginAccessIdentityConfig: AwsCloudFrontS2Input!
}

type AwsCloudFrontCreateCloudFrontOriginAccessIdentityOutput {
  CloudFrontOriginAccessIdentity: AwsCloudFrontS5
  Location: String
  ETag: String
}

input AwsCloudFrontCreateDistributionInput {
  DistributionConfig: AwsCloudFrontS7Input!
}

type AwsCloudFrontCreateDistributionOutput {
  Distribution: AwsCloudFrontS1s
  Location: String
  ETag: String
}

input AwsCloudFrontCreateDistributionWithTagsDistributionConfigWithTagsInput {
  DistributionConfig: AwsCloudFrontS7Input!
  Tags: AwsCloudFrontS21Input!
}

input AwsCloudFrontCreateDistributionWithTagsInput {
  DistributionConfigWithTags: AwsCloudFrontCreateDistributionWithTagsDistributionConfigWithTagsInput!
}

type AwsCloudFrontCreateDistributionWithTagsOutput {
  Distribution: AwsCloudFrontS1s
  Location: String
  ETag: String
}

input AwsCloudFrontCreateInvalidationInput {
  DistributionId: String!
  InvalidationBatch: AwsCloudFrontS28Input!
}

type AwsCloudFrontCreateInvalidationOutput {
  Location: String
  Invalidation: AwsCloudFrontS2c
}

input AwsCloudFrontCreateStreamingDistributionInput {
  StreamingDistributionConfig: AwsCloudFrontS2eInput!
}

type AwsCloudFrontCreateStreamingDistributionOutput {
  StreamingDistribution: AwsCloudFrontS2i
  Location: String
  ETag: String
}

input AwsCloudFrontCreateStreamingDistributionWithTagsInput {
  StreamingDistributionConfigWithTags: AwsCloudFrontCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsInput!
}

type AwsCloudFrontCreateStreamingDistributionWithTagsOutput {
  StreamingDistribution: AwsCloudFrontS2i
  Location: String
  ETag: String
}

input AwsCloudFrontCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsInput {
  StreamingDistributionConfig: AwsCloudFrontS2eInput!
  Tags: AwsCloudFrontS21Input!
}

input AwsCloudFrontDeleteCloudFrontOriginAccessIdentityInput {
  Id: String!
  IfMatch: String
}

input AwsCloudFrontDeleteDistributionInput {
  Id: String!
  IfMatch: String
}

input AwsCloudFrontDeleteServiceLinkedRoleInput {
  RoleName: String!
}

input AwsCloudFrontDeleteStreamingDistributionInput {
  Id: String!
  IfMatch: String
}

input AwsCloudFrontGetCloudFrontOriginAccessIdentityConfigInput {
  Id: String!
}

type AwsCloudFrontGetCloudFrontOriginAccessIdentityConfigOutput {
  CloudFrontOriginAccessIdentityConfig: AwsCloudFrontS2
  ETag: String
}

input AwsCloudFrontGetCloudFrontOriginAccessIdentityInput {
  Id: String!
}

type AwsCloudFrontGetCloudFrontOriginAccessIdentityOutput {
  CloudFrontOriginAccessIdentity: AwsCloudFrontS5
  ETag: String
}

input AwsCloudFrontGetDistributionConfigInput {
  Id: String!
}

type AwsCloudFrontGetDistributionConfigOutput {
  DistributionConfig: AwsCloudFrontS7
  ETag: String
}

input AwsCloudFrontGetDistributionInput {
  Id: String!
}

type AwsCloudFrontGetDistributionOutput {
  Distribution: AwsCloudFrontS1s
  ETag: String
}

input AwsCloudFrontGetInvalidationInput {
  DistributionId: String!
  Id: String!
}

type AwsCloudFrontGetInvalidationOutput {
  Invalidation: AwsCloudFrontS2c
}

input AwsCloudFrontGetStreamingDistributionConfigInput {
  Id: String!
}

type AwsCloudFrontGetStreamingDistributionConfigOutput {
  StreamingDistributionConfig: AwsCloudFrontS2e
  ETag: String
}

input AwsCloudFrontGetStreamingDistributionInput {
  Id: String!
}

type AwsCloudFrontGetStreamingDistributionOutput {
  StreamingDistribution: AwsCloudFrontS2i
  ETag: String
}

input AwsCloudFrontListCloudFrontOriginAccessIdentitiesInput {
  Marker: String
  MaxItems: String
}

type AwsCloudFrontListCloudFrontOriginAccessIdentitiesOutput {
  CloudFrontOriginAccessIdentityList: AwsCloudFrontListCloudFrontOriginAccessIdentitiesOutputCloudFrontOriginAccessIdentityList
}

type AwsCloudFrontListCloudFrontOriginAccessIdentitiesOutputCloudFrontOriginAccessIdentityList {
  Marker: String!
  NextMarker: String
  MaxItems: Int!
  IsTruncated: Boolean!
  Quantity: Int!
  Items: [AwsCloudFrontListCloudFrontOriginAccessIdentitiesOutputCloudFrontOriginAccessIdentityListItems]
}

type AwsCloudFrontListCloudFrontOriginAccessIdentitiesOutputCloudFrontOriginAccessIdentityListItems {
  Id: String!
  S3CanonicalUserId: String!
  Comment: String!
}

input AwsCloudFrontListDistributionsByWebACLIdInput {
  Marker: String
  MaxItems: String
  WebACLId: String!
}

type AwsCloudFrontListDistributionsByWebACLIdOutput {
  DistributionList: AwsCloudFrontS3b
}

input AwsCloudFrontListDistributionsInput {
  Marker: String
  MaxItems: String
}

type AwsCloudFrontListDistributionsOutput {
  DistributionList: AwsCloudFrontS3b
}

input AwsCloudFrontListInvalidationsInput {
  DistributionId: String!
  Marker: String
  MaxItems: String
}

type AwsCloudFrontListInvalidationsOutput {
  InvalidationList: AwsCloudFrontListInvalidationsOutputInvalidationList
}

type AwsCloudFrontListInvalidationsOutputInvalidationList {
  Marker: String!
  NextMarker: String
  MaxItems: Int!
  IsTruncated: Boolean!
  Quantity: Int!
  Items: [AwsCloudFrontListInvalidationsOutputInvalidationListItems]
}

type AwsCloudFrontListInvalidationsOutputInvalidationListItems {
  Id: String!
  CreateTime: Date!
  Status: String!
}

input AwsCloudFrontListStreamingDistributionsInput {
  Marker: String
  MaxItems: String
}

type AwsCloudFrontListStreamingDistributionsOutput {
  StreamingDistributionList: AwsCloudFrontListStreamingDistributionsOutputStreamingDistributionList
}

type AwsCloudFrontListStreamingDistributionsOutputStreamingDistributionList {
  Marker: String!
  NextMarker: String
  MaxItems: Int!
  IsTruncated: Boolean!
  Quantity: Int!
  Items: [AwsCloudFrontListStreamingDistributionsOutputStreamingDistributionListItems]
}

type AwsCloudFrontListStreamingDistributionsOutputStreamingDistributionListItems {
  Id: String!
  ARN: String!
  Status: String!
  LastModifiedTime: Date!
  DomainName: String!
  S3Origin: AwsCloudFrontS2f!
  Aliases: AwsCloudFrontS8!
  TrustedSigners: AwsCloudFrontSy!
  Comment: String!
  PriceClass: String!
  Enabled: Boolean!
}

input AwsCloudFrontListTagsForResourceInput {
  Resource: String!
}

type AwsCloudFrontListTagsForResourceOutput {
  Tags: AwsCloudFrontS21!
}

type AwsCloudFrontS12 {
  Quantity: Int!
  Items: [String]!
  CachedMethods: AwsCloudFrontS12CachedMethods
}

type AwsCloudFrontS12CachedMethods {
  Quantity: Int!
  Items: [String]!
}

input AwsCloudFrontS12CachedMethodsInput {
  Quantity: Int!
  Items: [String]!
}

input AwsCloudFrontS12Input {
  Quantity: Int!
  Items: [String]!
  CachedMethods: AwsCloudFrontS12CachedMethodsInput
}

type AwsCloudFrontS16 {
  Quantity: Int!
  Items: [AwsCloudFrontS16Items]
}

input AwsCloudFrontS16Input {
  Quantity: Int!
  Items: [AwsCloudFrontS16ItemsInput]
}

type AwsCloudFrontS16Items {
  LambdaFunctionARN: String
  EventType: String
}

input AwsCloudFrontS16ItemsInput {
  LambdaFunctionARN: String
  EventType: String
}

type AwsCloudFrontS1a {
  Quantity: Int!
  Items: [AwsCloudFrontS1aItems]
}

input AwsCloudFrontS1aInput {
  Quantity: Int!
  Items: [AwsCloudFrontS1aItemsInput]
}

type AwsCloudFrontS1aItems {
  PathPattern: String!
  TargetOriginId: String!
  ForwardedValues: AwsCloudFrontSo!
  TrustedSigners: AwsCloudFrontSy!
  ViewerProtocolPolicy: String!
  MinTTL: JSON!
  AllowedMethods: AwsCloudFrontS12
  SmoothStreaming: Boolean
  DefaultTTL: JSON
  MaxTTL: JSON
  Compress: Boolean
  LambdaFunctionAssociations: AwsCloudFrontS16
}

input AwsCloudFrontS1aItemsInput {
  PathPattern: String!
  TargetOriginId: String!
  ForwardedValues: AwsCloudFrontSoInput!
  TrustedSigners: AwsCloudFrontSyInput!
  ViewerProtocolPolicy: String!
  MinTTL: JSON!
  AllowedMethods: AwsCloudFrontS12Input
  SmoothStreaming: Boolean
  DefaultTTL: JSON
  MaxTTL: JSON
  Compress: Boolean
  LambdaFunctionAssociations: AwsCloudFrontS16Input
}

type AwsCloudFrontS1d {
  Quantity: Int!
  Items: [AwsCloudFrontS1dItems]
}

input AwsCloudFrontS1dInput {
  Quantity: Int!
  Items: [AwsCloudFrontS1dItemsInput]
}

type AwsCloudFrontS1dItems {
  ErrorCode: Int!
  ResponsePagePath: String
  ResponseCode: String
  ErrorCachingMinTTL: JSON
}

input AwsCloudFrontS1dItemsInput {
  ErrorCode: Int!
  ResponsePagePath: String
  ResponseCode: String
  ErrorCachingMinTTL: JSON
}

type AwsCloudFrontS1i {
  CloudFrontDefaultCertificate: Boolean
  IAMCertificateId: String
  ACMCertificateArn: String
  SSLSupportMethod: String
  MinimumProtocolVersion: String
  Certificate: String
  CertificateSource: String
}

input AwsCloudFrontS1iInput {
  CloudFrontDefaultCertificate: Boolean
  IAMCertificateId: String
  ACMCertificateArn: String
  SSLSupportMethod: String
  MinimumProtocolVersion: String
  Certificate: String
  CertificateSource: String
}

type AwsCloudFrontS1m {
  GeoRestriction: AwsCloudFrontS1mGeoRestriction!
}

type AwsCloudFrontS1mGeoRestriction {
  RestrictionType: String!
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontS1mGeoRestrictionInput {
  RestrictionType: String!
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontS1mInput {
  GeoRestriction: AwsCloudFrontS1mGeoRestrictionInput!
}

type AwsCloudFrontS1s {
  Id: String!
  ARN: String!
  Status: String!
  LastModifiedTime: Date!
  InProgressInvalidationBatches: Int!
  DomainName: String!
  ActiveTrustedSigners: AwsCloudFrontS1u!
  DistributionConfig: AwsCloudFrontS7!
}

type AwsCloudFrontS1u {
  Enabled: Boolean!
  Quantity: Int!
  Items: [AwsCloudFrontS1uItems]
}

type AwsCloudFrontS1uItems {
  AwsAccountNumber: String
  KeyPairIds: AwsCloudFrontS1uItemsKeyPairIds
}

type AwsCloudFrontS1uItemsKeyPairIds {
  Quantity: Int!
  Items: [String]
}

type AwsCloudFrontS2 {
  CallerReference: String!
  Comment: String!
}

type AwsCloudFrontS21 {
  Items: [AwsCloudFrontS21Items]
}

input AwsCloudFrontS21Input {
  Items: [AwsCloudFrontS21ItemsInput]
}

type AwsCloudFrontS21Items {
  Key: String!
  Value: String
}

input AwsCloudFrontS21ItemsInput {
  Key: String!
  Value: String
}

type AwsCloudFrontS28 {
  Paths: AwsCloudFrontS28Paths!
  CallerReference: String!
}

input AwsCloudFrontS28Input {
  Paths: AwsCloudFrontS28PathsInput!
  CallerReference: String!
}

type AwsCloudFrontS28Paths {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontS28PathsInput {
  Quantity: Int!
  Items: [String]
}

type AwsCloudFrontS2c {
  Id: String!
  Status: String!
  CreateTime: Date!
  InvalidationBatch: AwsCloudFrontS28!
}

type AwsCloudFrontS2e {
  CallerReference: String!
  S3Origin: AwsCloudFrontS2f!
  Aliases: AwsCloudFrontS8
  Comment: String!
  Logging: AwsCloudFrontS2eLogging
  TrustedSigners: AwsCloudFrontSy!
  PriceClass: String
  Enabled: Boolean!
}

input AwsCloudFrontS2eInput {
  CallerReference: String!
  S3Origin: AwsCloudFrontS2fInput!
  Aliases: AwsCloudFrontS8Input
  Comment: String!
  Logging: AwsCloudFrontS2eLoggingInput
  TrustedSigners: AwsCloudFrontSyInput!
  PriceClass: String
  Enabled: Boolean!
}

type AwsCloudFrontS2eLogging {
  Enabled: Boolean!
  Bucket: String!
  Prefix: String!
}

input AwsCloudFrontS2eLoggingInput {
  Enabled: Boolean!
  Bucket: String!
  Prefix: String!
}

type AwsCloudFrontS2f {
  DomainName: String!
  OriginAccessIdentity: String!
}

input AwsCloudFrontS2fInput {
  DomainName: String!
  OriginAccessIdentity: String!
}

type AwsCloudFrontS2i {
  Id: String!
  ARN: String!
  Status: String!
  LastModifiedTime: Date
  DomainName: String!
  ActiveTrustedSigners: AwsCloudFrontS1u!
  StreamingDistributionConfig: AwsCloudFrontS2e!
}

input AwsCloudFrontS2Input {
  CallerReference: String!
  Comment: String!
}

type AwsCloudFrontS3b {
  Marker: String!
  NextMarker: String
  MaxItems: Int!
  IsTruncated: Boolean!
  Quantity: Int!
  Items: [AwsCloudFrontS3bItems]
}

type AwsCloudFrontS3bItems {
  Id: String!
  ARN: String!
  Status: String!
  LastModifiedTime: Date!
  DomainName: String!
  Aliases: AwsCloudFrontS8!
  Origins: AwsCloudFrontSb!
  DefaultCacheBehavior: AwsCloudFrontSn!
  CacheBehaviors: AwsCloudFrontS1a!
  CustomErrorResponses: AwsCloudFrontS1d!
  Comment: String!
  PriceClass: String!
  Enabled: Boolean!
  ViewerCertificate: AwsCloudFrontS1i!
  Restrictions: AwsCloudFrontS1m!
  WebACLId: String!
  HttpVersion: String!
  IsIPV6Enabled: Boolean!
}

type AwsCloudFrontS5 {
  Id: String!
  S3CanonicalUserId: String!
  CloudFrontOriginAccessIdentityConfig: AwsCloudFrontS2
}

type AwsCloudFrontS7 {
  CallerReference: String!
  Aliases: AwsCloudFrontS8
  DefaultRootObject: String
  Origins: AwsCloudFrontSb!
  DefaultCacheBehavior: AwsCloudFrontSn!
  CacheBehaviors: AwsCloudFrontS1a
  CustomErrorResponses: AwsCloudFrontS1d
  Comment: String!
  Logging: AwsCloudFrontS7Logging
  PriceClass: String
  Enabled: Boolean!
  ViewerCertificate: AwsCloudFrontS1i
  Restrictions: AwsCloudFrontS1m
  WebACLId: String
  HttpVersion: String
  IsIPV6Enabled: Boolean
}

input AwsCloudFrontS7Input {
  CallerReference: String!
  Aliases: AwsCloudFrontS8Input
  DefaultRootObject: String
  Origins: AwsCloudFrontSbInput!
  DefaultCacheBehavior: AwsCloudFrontSnInput!
  CacheBehaviors: AwsCloudFrontS1aInput
  CustomErrorResponses: AwsCloudFrontS1dInput
  Comment: String!
  Logging: AwsCloudFrontS7LoggingInput
  PriceClass: String
  Enabled: Boolean!
  ViewerCertificate: AwsCloudFrontS1iInput
  Restrictions: AwsCloudFrontS1mInput
  WebACLId: String
  HttpVersion: String
  IsIPV6Enabled: Boolean
}

type AwsCloudFrontS7Logging {
  Enabled: Boolean!
  IncludeCookies: Boolean!
  Bucket: String!
  Prefix: String!
}

input AwsCloudFrontS7LoggingInput {
  Enabled: Boolean!
  IncludeCookies: Boolean!
  Bucket: String!
  Prefix: String!
}

type AwsCloudFrontS8 {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontS8Input {
  Quantity: Int!
  Items: [String]
}

type AwsCloudFrontSb {
  Quantity: Int!
  Items: [AwsCloudFrontSbItems]
}

input AwsCloudFrontSbInput {
  Quantity: Int!
  Items: [AwsCloudFrontSbItemsInput]
}

type AwsCloudFrontSbItems {
  Id: String!
  DomainName: String!
  OriginPath: String
  CustomHeaders: AwsCloudFrontSbItemsCustomHeaders
  S3OriginConfig: AwsCloudFrontSbItemsS3OriginConfig
  CustomOriginConfig: AwsCloudFrontSbItemsCustomOriginConfig
}

type AwsCloudFrontSbItemsCustomHeaders {
  Quantity: Int!
  Items: [AwsCloudFrontSbItemsCustomHeadersItems]
}

input AwsCloudFrontSbItemsCustomHeadersInput {
  Quantity: Int!
  Items: [AwsCloudFrontSbItemsCustomHeadersItemsInput]
}

type AwsCloudFrontSbItemsCustomHeadersItems {
  HeaderName: String!
  HeaderValue: String!
}

input AwsCloudFrontSbItemsCustomHeadersItemsInput {
  HeaderName: String!
  HeaderValue: String!
}

type AwsCloudFrontSbItemsCustomOriginConfig {
  HTTPPort: Int!
  HTTPSPort: Int!
  OriginProtocolPolicy: String!
  OriginSslProtocols: AwsCloudFrontSbItemsCustomOriginConfigOriginSslProtocols
  OriginReadTimeout: Int
  OriginKeepaliveTimeout: Int
}

input AwsCloudFrontSbItemsCustomOriginConfigInput {
  HTTPPort: Int!
  HTTPSPort: Int!
  OriginProtocolPolicy: String!
  OriginSslProtocols: AwsCloudFrontSbItemsCustomOriginConfigOriginSslProtocolsInput
  OriginReadTimeout: Int
  OriginKeepaliveTimeout: Int
}

type AwsCloudFrontSbItemsCustomOriginConfigOriginSslProtocols {
  Quantity: Int!
  Items: [String]!
}

input AwsCloudFrontSbItemsCustomOriginConfigOriginSslProtocolsInput {
  Quantity: Int!
  Items: [String]!
}

input AwsCloudFrontSbItemsInput {
  Id: String!
  DomainName: String!
  OriginPath: String
  CustomHeaders: AwsCloudFrontSbItemsCustomHeadersInput
  S3OriginConfig: AwsCloudFrontSbItemsS3OriginConfigInput
  CustomOriginConfig: AwsCloudFrontSbItemsCustomOriginConfigInput
}

type AwsCloudFrontSbItemsS3OriginConfig {
  OriginAccessIdentity: String!
}

input AwsCloudFrontSbItemsS3OriginConfigInput {
  OriginAccessIdentity: String!
}

type AwsCloudFrontSn {
  TargetOriginId: String!
  ForwardedValues: AwsCloudFrontSo!
  TrustedSigners: AwsCloudFrontSy!
  ViewerProtocolPolicy: String!
  MinTTL: JSON!
  AllowedMethods: AwsCloudFrontS12
  SmoothStreaming: Boolean
  DefaultTTL: JSON
  MaxTTL: JSON
  Compress: Boolean
  LambdaFunctionAssociations: AwsCloudFrontS16
}

input AwsCloudFrontSnInput {
  TargetOriginId: String!
  ForwardedValues: AwsCloudFrontSoInput!
  TrustedSigners: AwsCloudFrontSyInput!
  ViewerProtocolPolicy: String!
  MinTTL: JSON!
  AllowedMethods: AwsCloudFrontS12Input
  SmoothStreaming: Boolean
  DefaultTTL: JSON
  MaxTTL: JSON
  Compress: Boolean
  LambdaFunctionAssociations: AwsCloudFrontS16Input
}

type AwsCloudFrontSo {
  QueryString: Boolean!
  Cookies: AwsCloudFrontSoCookies!
  Headers: AwsCloudFrontSoHeaders
  QueryStringCacheKeys: AwsCloudFrontSoQueryStringCacheKeys
}

type AwsCloudFrontSoCookies {
  Forward: String!
  WhitelistedNames: AwsCloudFrontSoCookiesWhitelistedNames
}

input AwsCloudFrontSoCookiesInput {
  Forward: String!
  WhitelistedNames: AwsCloudFrontSoCookiesWhitelistedNamesInput
}

type AwsCloudFrontSoCookiesWhitelistedNames {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontSoCookiesWhitelistedNamesInput {
  Quantity: Int!
  Items: [String]
}

type AwsCloudFrontSoHeaders {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontSoHeadersInput {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontSoInput {
  QueryString: Boolean!
  Cookies: AwsCloudFrontSoCookiesInput!
  Headers: AwsCloudFrontSoHeadersInput
  QueryStringCacheKeys: AwsCloudFrontSoQueryStringCacheKeysInput
}

type AwsCloudFrontSoQueryStringCacheKeys {
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontSoQueryStringCacheKeysInput {
  Quantity: Int!
  Items: [String]
}

type AwsCloudFrontSy {
  Enabled: Boolean!
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontSyInput {
  Enabled: Boolean!
  Quantity: Int!
  Items: [String]
}

input AwsCloudFrontTagResourceInput {
  Resource: String!
  Tags: AwsCloudFrontS21Input!
}

input AwsCloudFrontUntagResourceInput {
  Resource: String!
  TagKeys: AwsCloudFrontUntagResourceTagKeysInput!
}

input AwsCloudFrontUntagResourceTagKeysInput {
  Items: [String]
}

input AwsCloudFrontUpdateCloudFrontOriginAccessIdentityInput {
  CloudFrontOriginAccessIdentityConfig: AwsCloudFrontS2Input!
  Id: String!
  IfMatch: String
}

type AwsCloudFrontUpdateCloudFrontOriginAccessIdentityOutput {
  CloudFrontOriginAccessIdentity: AwsCloudFrontS5
  ETag: String
}

input AwsCloudFrontUpdateDistributionInput {
  DistributionConfig: AwsCloudFrontS7Input!
  Id: String!
  IfMatch: String
}

type AwsCloudFrontUpdateDistributionOutput {
  Distribution: AwsCloudFrontS1s
  ETag: String
}

input AwsCloudFrontUpdateStreamingDistributionInput {
  StreamingDistributionConfig: AwsCloudFrontS2eInput!
  Id: String!
  IfMatch: String
}

type AwsCloudFrontUpdateStreamingDistributionOutput {
  StreamingDistribution: AwsCloudFrontS2i
  ETag: String
}

# Amazon CloudHSM (2014-05-30)
type AwsCloudHSM {
  addTagsToResource(input: AwsCloudHSMAddTagsToResourceInput!, config: AwsConfig): AwsCloudHSMAddTagsToResourceOutput
  createHapg(input: AwsCloudHSMCreateHapgInput!, config: AwsConfig): AwsCloudHSMCreateHapgOutput
  createHsm(input: AwsCloudHSMCreateHsmInput!, config: AwsConfig): AwsCloudHSMCreateHsmOutput
  createLunaClient(input: AwsCloudHSMCreateLunaClientInput!, config: AwsConfig): AwsCloudHSMCreateLunaClientOutput
  deleteHapg(input: AwsCloudHSMDeleteHapgInput!, config: AwsConfig): AwsCloudHSMDeleteHapgOutput
  deleteHsm(input: AwsCloudHSMDeleteHsmInput!, config: AwsConfig): AwsCloudHSMDeleteHsmOutput
  deleteLunaClient(input: AwsCloudHSMDeleteLunaClientInput!, config: AwsConfig): AwsCloudHSMDeleteLunaClientOutput
  describeHapg(input: AwsCloudHSMDescribeHapgInput!, config: AwsConfig): AwsCloudHSMDescribeHapgOutput
  describeHsm(input: AwsCloudHSMDescribeHsmInput, config: AwsConfig): AwsCloudHSMDescribeHsmOutput
  describeLunaClient(input: AwsCloudHSMDescribeLunaClientInput, config: AwsConfig): AwsCloudHSMDescribeLunaClientOutput
  getConfig(input: AwsCloudHSMGetConfigInput!, config: AwsConfig): AwsCloudHSMGetConfigOutput
  listAvailableZones(input: JSON, config: AwsConfig): AwsCloudHSMListAvailableZonesOutput
  listHapgs(input: AwsCloudHSMListHapgsInput, config: AwsConfig): AwsCloudHSMListHapgsOutput
  listHsms(input: AwsCloudHSMListHsmsInput, config: AwsConfig): AwsCloudHSMListHsmsOutput
  listLunaClients(input: AwsCloudHSMListLunaClientsInput, config: AwsConfig): AwsCloudHSMListLunaClientsOutput
  listTagsForResource(input: AwsCloudHSMListTagsForResourceInput!, config: AwsConfig): AwsCloudHSMListTagsForResourceOutput
  modifyHapg(input: AwsCloudHSMModifyHapgInput!, config: AwsConfig): AwsCloudHSMModifyHapgOutput
  modifyHsm(input: AwsCloudHSMModifyHsmInput!, config: AwsConfig): AwsCloudHSMModifyHsmOutput
  modifyLunaClient(input: AwsCloudHSMModifyLunaClientInput!, config: AwsConfig): AwsCloudHSMModifyLunaClientOutput
  removeTagsFromResource(input: AwsCloudHSMRemoveTagsFromResourceInput!, config: AwsConfig): AwsCloudHSMRemoveTagsFromResourceOutput
}

input AwsCloudHSMAddTagsToResourceInput {
  ResourceArn: String!
  TagList: [AwsCloudHSMS3Input]!
}

type AwsCloudHSMAddTagsToResourceOutput {
  Status: String!
}

input AwsCloudHSMCreateHapgInput {
  Label: String!
}

type AwsCloudHSMCreateHapgOutput {
  HapgArn: String
}

input AwsCloudHSMCreateHsmInput {
  SubnetId: String!
  SshKey: String!
  EniIp: String
  IamRoleArn: String!
  ExternalId: String
  SubscriptionType: String!
  ClientToken: String
  SyslogIp: String
}

type AwsCloudHSMCreateHsmOutput {
  HsmArn: String
}

input AwsCloudHSMCreateLunaClientInput {
  Label: String
  Certificate: String!
}

type AwsCloudHSMCreateLunaClientOutput {
  ClientArn: String
}

input AwsCloudHSMDeleteHapgInput {
  HapgArn: String!
}

type AwsCloudHSMDeleteHapgOutput {
  Status: String!
}

input AwsCloudHSMDeleteHsmInput {
  HsmArn: String!
}

type AwsCloudHSMDeleteHsmOutput {
  Status: String!
}

input AwsCloudHSMDeleteLunaClientInput {
  ClientArn: String!
}

type AwsCloudHSMDeleteLunaClientOutput {
  Status: String!
}

input AwsCloudHSMDescribeHapgInput {
  HapgArn: String!
}

type AwsCloudHSMDescribeHapgOutput {
  HapgArn: String
  HapgSerial: String
  HsmsLastActionFailed: [String]
  HsmsPendingDeletion: [String]
  HsmsPendingRegistration: [String]
  Label: String
  LastModifiedTimestamp: String
  PartitionSerialList: [String]
  State: String
}

input AwsCloudHSMDescribeHsmInput {
  HsmArn: String
  HsmSerialNumber: String
}

type AwsCloudHSMDescribeHsmOutput {
  HsmArn: String
  Status: String
  StatusDetails: String
  AvailabilityZone: String
  EniId: String
  EniIp: String
  SubscriptionType: String
  SubscriptionStartDate: String
  SubscriptionEndDate: String
  VpcId: String
  SubnetId: String
  IamRoleArn: String
  SerialNumber: String
  VendorName: String
  HsmType: String
  SoftwareVersion: String
  SshPublicKey: String
  SshKeyLastUpdated: String
  ServerCertUri: String
  ServerCertLastUpdated: String
  Partitions: [String]
}

input AwsCloudHSMDescribeLunaClientInput {
  ClientArn: String
  CertificateFingerprint: String
}

type AwsCloudHSMDescribeLunaClientOutput {
  ClientArn: String
  Certificate: String
  CertificateFingerprint: String
  LastModifiedTimestamp: String
  Label: String
}

input AwsCloudHSMGetConfigInput {
  ClientArn: String!
  ClientVersion: String!
  HapgList: [String]!
}

type AwsCloudHSMGetConfigOutput {
  ConfigType: String
  ConfigFile: String
  ConfigCred: String
}

type AwsCloudHSMListAvailableZonesOutput {
  AZList: [String]
}

input AwsCloudHSMListHapgsInput {
  NextToken: String
}

type AwsCloudHSMListHapgsOutput {
  HapgList: [String]!
  NextToken: String
}

input AwsCloudHSMListHsmsInput {
  NextToken: String
}

type AwsCloudHSMListHsmsOutput {
  HsmList: [String]
  NextToken: String
}

input AwsCloudHSMListLunaClientsInput {
  NextToken: String
}

type AwsCloudHSMListLunaClientsOutput {
  ClientList: [String]!
  NextToken: String
}

input AwsCloudHSMListTagsForResourceInput {
  ResourceArn: String!
}

type AwsCloudHSMListTagsForResourceOutput {
  TagList: [AwsCloudHSMS3]!
}

input AwsCloudHSMModifyHapgInput {
  HapgArn: String!
  Label: String
  PartitionSerialList: [String]
}

type AwsCloudHSMModifyHapgOutput {
  HapgArn: String
}

input AwsCloudHSMModifyHsmInput {
  HsmArn: String!
  SubnetId: String
  EniIp: String
  IamRoleArn: String
  ExternalId: String
  SyslogIp: String
}

type AwsCloudHSMModifyHsmOutput {
  HsmArn: String
}

input AwsCloudHSMModifyLunaClientInput {
  ClientArn: String!
  Certificate: String!
}

type AwsCloudHSMModifyLunaClientOutput {
  ClientArn: String
}

input AwsCloudHSMRemoveTagsFromResourceInput {
  ResourceArn: String!
  TagKeyList: [String]!
}

type AwsCloudHSMRemoveTagsFromResourceOutput {
  Status: String!
}

type AwsCloudHSMS3 {
  Key: String!
  Value: String!
}

input AwsCloudHSMS3Input {
  Key: String!
  Value: String!
}

# AWS CloudHSM V2 (2017-04-28)
type AwsCloudHSMV2 {
  createCluster(input: AwsCloudHSMV2CreateClusterInput!, config: AwsConfig): AwsCloudHSMV2CreateClusterOutput
  createHsm(input: AwsCloudHSMV2CreateHsmInput!, config: AwsConfig): AwsCloudHSMV2CreateHsmOutput
  deleteCluster(input: AwsCloudHSMV2DeleteClusterInput!, config: AwsConfig): AwsCloudHSMV2DeleteClusterOutput
  deleteHsm(input: AwsCloudHSMV2DeleteHsmInput!, config: AwsConfig): AwsCloudHSMV2DeleteHsmOutput
  describeBackups(input: AwsCloudHSMV2DescribeBackupsInput, config: AwsConfig): AwsCloudHSMV2DescribeBackupsOutput
  describeClusters(input: AwsCloudHSMV2DescribeClustersInput, config: AwsConfig): AwsCloudHSMV2DescribeClustersOutput
  initializeCluster(input: AwsCloudHSMV2InitializeClusterInput!, config: AwsConfig): AwsCloudHSMV2InitializeClusterOutput
  listTags(input: AwsCloudHSMV2ListTagsInput!, config: AwsConfig): AwsCloudHSMV2ListTagsOutput
  tagResource(input: AwsCloudHSMV2TagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsCloudHSMV2UntagResourceInput!, config: AwsConfig): JSON
}

input AwsCloudHSMV2CreateClusterInput {
  SubnetIds: [String]!
  HsmType: String!
  SourceBackupId: String
}

type AwsCloudHSMV2CreateClusterOutput {
  Cluster: AwsCloudHSMV2S7
}

input AwsCloudHSMV2CreateHsmInput {
  ClusterId: String!
  AvailabilityZone: String!
  IpAddress: String
}

type AwsCloudHSMV2CreateHsmOutput {
  Hsm: AwsCloudHSMV2Sc
}

input AwsCloudHSMV2DeleteClusterInput {
  ClusterId: String!
}

type AwsCloudHSMV2DeleteClusterOutput {
  Cluster: AwsCloudHSMV2S7
}

input AwsCloudHSMV2DeleteHsmInput {
  ClusterId: String!
  HsmId: String
  EniId: String
  EniIp: String
}

type AwsCloudHSMV2DeleteHsmOutput {
  HsmId: String
}

input AwsCloudHSMV2DescribeBackupsInput {
  NextToken: String
  MaxResults: Int
  Filters: JSON
}

type AwsCloudHSMV2DescribeBackupsOutput {
  Backups: [AwsCloudHSMV2DescribeBackupsOutputBackups]
  NextToken: String
}

type AwsCloudHSMV2DescribeBackupsOutputBackups {
  BackupId: String!
  BackupState: String
  ClusterId: String
  CreateTimestamp: Date
}

input AwsCloudHSMV2DescribeClustersInput {
  Filters: JSON
  NextToken: String
  MaxResults: Int
}

type AwsCloudHSMV2DescribeClustersOutput {
  Clusters: [AwsCloudHSMV2S7]
  NextToken: String
}

input AwsCloudHSMV2InitializeClusterInput {
  ClusterId: String!
  SignedCert: String!
  TrustAnchor: String!
}

type AwsCloudHSMV2InitializeClusterOutput {
  State: String
  StateMessage: String
}

input AwsCloudHSMV2ListTagsInput {
  ResourceId: String!
  NextToken: String
  MaxResults: Int
}

type AwsCloudHSMV2ListTagsOutput {
  TagList: [AwsCloudHSMV2S1e]!
  NextToken: String
}

type AwsCloudHSMV2S1e {
  Key: String!
  Value: String!
}

input AwsCloudHSMV2S1eInput {
  Key: String!
  Value: String!
}

type AwsCloudHSMV2S7 {
  BackupPolicy: String
  ClusterId: String
  CreateTimestamp: Date
  Hsms: [AwsCloudHSMV2Sc]
  HsmType: String
  PreCoPassword: String
  SecurityGroup: String
  SourceBackupId: String
  State: String
  StateMessage: String
  SubnetMapping: JSON
  VpcId: String
  Certificates: AwsCloudHSMV2S7Certificates
}

type AwsCloudHSMV2S7Certificates {
  ClusterCsr: String
  HsmCertificate: String
  AwsHardwareCertificate: String
  ManufacturerHardwareCertificate: String
  ClusterCertificate: String
}

type AwsCloudHSMV2Sc {
  AvailabilityZone: String
  ClusterId: String
  SubnetId: String
  EniId: String
  EniIp: String
  HsmId: String!
  State: String
  StateMessage: String
}

input AwsCloudHSMV2TagResourceInput {
  ResourceId: String!
  TagList: [AwsCloudHSMV2S1eInput]!
}

input AwsCloudHSMV2UntagResourceInput {
  ResourceId: String!
  TagKeyList: [String]!
}

# Amazon CloudSearch (2013-01-01)
type AwsCloudSearch {
  buildSuggesters(input: AwsCloudSearchBuildSuggestersInput!, config: AwsConfig): AwsCloudSearchBuildSuggestersOutput
  createDomain(input: AwsCloudSearchCreateDomainInput!, config: AwsConfig): AwsCloudSearchCreateDomainOutput
  defineAnalysisScheme(input: AwsCloudSearchDefineAnalysisSchemeInput!, config: AwsConfig): AwsCloudSearchDefineAnalysisSchemeOutput
  defineExpression(input: AwsCloudSearchDefineExpressionInput!, config: AwsConfig): AwsCloudSearchDefineExpressionOutput
  defineIndexField(input: AwsCloudSearchDefineIndexFieldInput!, config: AwsConfig): AwsCloudSearchDefineIndexFieldOutput
  defineSuggester(input: AwsCloudSearchDefineSuggesterInput!, config: AwsConfig): AwsCloudSearchDefineSuggesterOutput
  deleteAnalysisScheme(input: AwsCloudSearchDeleteAnalysisSchemeInput!, config: AwsConfig): AwsCloudSearchDeleteAnalysisSchemeOutput
  deleteDomain(input: AwsCloudSearchDeleteDomainInput!, config: AwsConfig): AwsCloudSearchDeleteDomainOutput
  deleteExpression(input: AwsCloudSearchDeleteExpressionInput!, config: AwsConfig): AwsCloudSearchDeleteExpressionOutput
  deleteIndexField(input: AwsCloudSearchDeleteIndexFieldInput!, config: AwsConfig): AwsCloudSearchDeleteIndexFieldOutput
  deleteSuggester(input: AwsCloudSearchDeleteSuggesterInput!, config: AwsConfig): AwsCloudSearchDeleteSuggesterOutput
  describeAnalysisSchemes(input: AwsCloudSearchDescribeAnalysisSchemesInput!, config: AwsConfig): AwsCloudSearchDescribeAnalysisSchemesOutput
  describeAvailabilityOptions(input: AwsCloudSearchDescribeAvailabilityOptionsInput!, config: AwsConfig): AwsCloudSearchDescribeAvailabilityOptionsOutput
  describeDomains(input: AwsCloudSearchDescribeDomainsInput, config: AwsConfig): AwsCloudSearchDescribeDomainsOutput
  describeExpressions(input: AwsCloudSearchDescribeExpressionsInput!, config: AwsConfig): AwsCloudSearchDescribeExpressionsOutput
  describeIndexFields(input: AwsCloudSearchDescribeIndexFieldsInput!, config: AwsConfig): AwsCloudSearchDescribeIndexFieldsOutput
  describeScalingParameters(input: AwsCloudSearchDescribeScalingParametersInput!, config: AwsConfig): AwsCloudSearchDescribeScalingParametersOutput
  describeServiceAccessPolicies(input: AwsCloudSearchDescribeServiceAccessPoliciesInput!, config: AwsConfig): AwsCloudSearchDescribeServiceAccessPoliciesOutput
  describeSuggesters(input: AwsCloudSearchDescribeSuggestersInput!, config: AwsConfig): AwsCloudSearchDescribeSuggestersOutput
  indexDocuments(input: AwsCloudSearchIndexDocumentsInput!, config: AwsConfig): AwsCloudSearchIndexDocumentsOutput
  listDomainNames(config: AwsConfig): AwsCloudSearchListDomainNamesOutput
  updateAvailabilityOptions(input: AwsCloudSearchUpdateAvailabilityOptionsInput!, config: AwsConfig): AwsCloudSearchUpdateAvailabilityOptionsOutput
  updateScalingParameters(input: AwsCloudSearchUpdateScalingParametersInput!, config: AwsConfig): AwsCloudSearchUpdateScalingParametersOutput
  updateServiceAccessPolicies(input: AwsCloudSearchUpdateServiceAccessPoliciesInput!, config: AwsConfig): AwsCloudSearchUpdateServiceAccessPoliciesOutput
}

input AwsCloudSearchBuildSuggestersInput {
  DomainName: String!
}

type AwsCloudSearchBuildSuggestersOutput {
  FieldNames: [String]
}

input AwsCloudSearchCreateDomainInput {
  DomainName: String!
}

type AwsCloudSearchCreateDomainOutput {
  DomainStatus: AwsCloudSearchS8
}

input AwsCloudSearchDefineAnalysisSchemeInput {
  DomainName: String!
  AnalysisScheme: AwsCloudSearchSlInput!
}

type AwsCloudSearchDefineAnalysisSchemeOutput {
  AnalysisScheme: AwsCloudSearchSs!
}

input AwsCloudSearchDefineExpressionInput {
  DomainName: String!
  Expression: AwsCloudSearchSyInput!
}

type AwsCloudSearchDefineExpressionOutput {
  Expression: AwsCloudSearchS11!
}

input AwsCloudSearchDefineIndexFieldInput {
  DomainName: String!
  IndexField: AwsCloudSearchS13Input!
}

type AwsCloudSearchDefineIndexFieldOutput {
  IndexField: AwsCloudSearchS1n!
}

input AwsCloudSearchDefineSuggesterInput {
  DomainName: String!
  Suggester: AwsCloudSearchS1pInput!
}

type AwsCloudSearchDefineSuggesterOutput {
  Suggester: AwsCloudSearchS1t!
}

input AwsCloudSearchDeleteAnalysisSchemeInput {
  DomainName: String!
  AnalysisSchemeName: String!
}

type AwsCloudSearchDeleteAnalysisSchemeOutput {
  AnalysisScheme: AwsCloudSearchSs!
}

input AwsCloudSearchDeleteDomainInput {
  DomainName: String!
}

type AwsCloudSearchDeleteDomainOutput {
  DomainStatus: AwsCloudSearchS8
}

input AwsCloudSearchDeleteExpressionInput {
  DomainName: String!
  ExpressionName: String!
}

type AwsCloudSearchDeleteExpressionOutput {
  Expression: AwsCloudSearchS11!
}

input AwsCloudSearchDeleteIndexFieldInput {
  DomainName: String!
  IndexFieldName: String!
}

type AwsCloudSearchDeleteIndexFieldOutput {
  IndexField: AwsCloudSearchS1n!
}

input AwsCloudSearchDeleteSuggesterInput {
  DomainName: String!
  SuggesterName: String!
}

type AwsCloudSearchDeleteSuggesterOutput {
  Suggester: AwsCloudSearchS1t!
}

input AwsCloudSearchDescribeAnalysisSchemesInput {
  DomainName: String!
  AnalysisSchemeNames: [String]
  Deployed: Boolean
}

type AwsCloudSearchDescribeAnalysisSchemesOutput {
  AnalysisSchemes: [AwsCloudSearchSs]!
}

input AwsCloudSearchDescribeAvailabilityOptionsInput {
  DomainName: String!
  Deployed: Boolean
}

type AwsCloudSearchDescribeAvailabilityOptionsOutput {
  AvailabilityOptions: AwsCloudSearchS2a
}

input AwsCloudSearchDescribeDomainsInput {
  DomainNames: [String]
}

type AwsCloudSearchDescribeDomainsOutput {
  DomainStatusList: [AwsCloudSearchS8]!
}

input AwsCloudSearchDescribeExpressionsInput {
  DomainName: String!
  ExpressionNames: [String]
  Deployed: Boolean
}

type AwsCloudSearchDescribeExpressionsOutput {
  Expressions: [AwsCloudSearchS11]!
}

input AwsCloudSearchDescribeIndexFieldsInput {
  DomainName: String!
  FieldNames: [String]
  Deployed: Boolean
}

type AwsCloudSearchDescribeIndexFieldsOutput {
  IndexFields: [AwsCloudSearchS1n]!
}

input AwsCloudSearchDescribeScalingParametersInput {
  DomainName: String!
}

type AwsCloudSearchDescribeScalingParametersOutput {
  ScalingParameters: AwsCloudSearchS2p!
}

input AwsCloudSearchDescribeServiceAccessPoliciesInput {
  DomainName: String!
  Deployed: Boolean
}

type AwsCloudSearchDescribeServiceAccessPoliciesOutput {
  AccessPolicies: AwsCloudSearchS2u!
}

input AwsCloudSearchDescribeSuggestersInput {
  DomainName: String!
  SuggesterNames: [String]
  Deployed: Boolean
}

type AwsCloudSearchDescribeSuggestersOutput {
  Suggesters: [AwsCloudSearchS1t]!
}

# Amazon CloudSearch Domain (2013-01-01)
type AwsCloudSearchDomain {
  search(input: AwsCloudSearchDomainSearchInput!, config: AwsConfig): AwsCloudSearchDomainSearchOutput
  suggest(input: AwsCloudSearchDomainSuggestInput!, config: AwsConfig): AwsCloudSearchDomainSuggestOutput
  uploadDocuments(input: AwsCloudSearchDomainUploadDocumentsInput!, config: AwsConfig): AwsCloudSearchDomainUploadDocumentsOutput
}

input AwsCloudSearchDomainSearchInput {
  cursor: String
  expr: String
  facet: String
  filterQuery: String
  highlight: String
  partial: Boolean
  query: String!
  queryOptions: String
  queryParser: String
  return: String
  size: JSON
  sort: String
  start: JSON
  stats: String
}

type AwsCloudSearchDomainSearchOutput {
  status: AwsCloudSearchDomainSearchOutputStatus
  hits: AwsCloudSearchDomainSearchOutputHits
  facets: JSON
  stats: JSON
}

type AwsCloudSearchDomainSearchOutputHits {
  found: JSON
  start: JSON
  cursor: String
  hit: [AwsCloudSearchDomainSearchOutputHitsHit]
}

type AwsCloudSearchDomainSearchOutputHitsHit {
  id: String
  fields: JSON
  exprs: JSON
  highlights: JSON
}

type AwsCloudSearchDomainSearchOutputStatus {
  timems: JSON
  rid: String
}

input AwsCloudSearchDomainSuggestInput {
  query: String!
  suggester: String!
  size: JSON
}

type AwsCloudSearchDomainSuggestOutput {
  status: AwsCloudSearchDomainSuggestOutputStatus
  suggest: AwsCloudSearchDomainSuggestOutputSuggest
}

type AwsCloudSearchDomainSuggestOutputStatus {
  timems: JSON
  rid: String
}

type AwsCloudSearchDomainSuggestOutputSuggest {
  query: String
  found: JSON
  suggestions: [AwsCloudSearchDomainSuggestOutputSuggestSuggestions]
}

type AwsCloudSearchDomainSuggestOutputSuggestSuggestions {
  suggestion: String
  score: JSON
  id: String
}

input AwsCloudSearchDomainUploadDocumentsInput {
  documents: JSON!
  contentType: String!
}

type AwsCloudSearchDomainUploadDocumentsOutput {
  status: String
  adds: JSON
  deletes: JSON
  warnings: [AwsCloudSearchDomainUploadDocumentsOutputWarnings]
}

type AwsCloudSearchDomainUploadDocumentsOutputWarnings {
  message: String
}

input AwsCloudSearchIndexDocumentsInput {
  DomainName: String!
}

type AwsCloudSearchIndexDocumentsOutput {
  FieldNames: [String]
}

type AwsCloudSearchListDomainNamesOutput {
  DomainNames: JSON
}

type AwsCloudSearchS11 {
  Options: AwsCloudSearchSy!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchS13 {
  IndexFieldName: String!
  IndexFieldType: String!
  IntOptions: AwsCloudSearchS13IntOptions
  DoubleOptions: AwsCloudSearchS13DoubleOptions
  LiteralOptions: AwsCloudSearchS13LiteralOptions
  TextOptions: AwsCloudSearchS13TextOptions
  DateOptions: AwsCloudSearchS13DateOptions
  LatLonOptions: AwsCloudSearchS13LatLonOptions
  IntArrayOptions: AwsCloudSearchS13IntArrayOptions
  DoubleArrayOptions: AwsCloudSearchS13DoubleArrayOptions
  LiteralArrayOptions: AwsCloudSearchS13LiteralArrayOptions
  TextArrayOptions: AwsCloudSearchS13TextArrayOptions
  DateArrayOptions: AwsCloudSearchS13DateArrayOptions
}

type AwsCloudSearchS13DateArrayOptions {
  DefaultValue: String
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

input AwsCloudSearchS13DateArrayOptionsInput {
  DefaultValue: String
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

type AwsCloudSearchS13DateOptions {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudSearchS13DateOptionsInput {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

type AwsCloudSearchS13DoubleArrayOptions {
  DefaultValue: JSON
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

input AwsCloudSearchS13DoubleArrayOptionsInput {
  DefaultValue: JSON
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

type AwsCloudSearchS13DoubleOptions {
  DefaultValue: JSON
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudSearchS13DoubleOptionsInput {
  DefaultValue: JSON
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudSearchS13Input {
  IndexFieldName: String!
  IndexFieldType: String!
  IntOptions: AwsCloudSearchS13IntOptionsInput
  DoubleOptions: AwsCloudSearchS13DoubleOptionsInput
  LiteralOptions: AwsCloudSearchS13LiteralOptionsInput
  TextOptions: AwsCloudSearchS13TextOptionsInput
  DateOptions: AwsCloudSearchS13DateOptionsInput
  LatLonOptions: AwsCloudSearchS13LatLonOptionsInput
  IntArrayOptions: AwsCloudSearchS13IntArrayOptionsInput
  DoubleArrayOptions: AwsCloudSearchS13DoubleArrayOptionsInput
  LiteralArrayOptions: AwsCloudSearchS13LiteralArrayOptionsInput
  TextArrayOptions: AwsCloudSearchS13TextArrayOptionsInput
  DateArrayOptions: AwsCloudSearchS13DateArrayOptionsInput
}

type AwsCloudSearchS13IntArrayOptions {
  DefaultValue: JSON
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

input AwsCloudSearchS13IntArrayOptionsInput {
  DefaultValue: JSON
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

type AwsCloudSearchS13IntOptions {
  DefaultValue: JSON
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudSearchS13IntOptionsInput {
  DefaultValue: JSON
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

type AwsCloudSearchS13LatLonOptions {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudSearchS13LatLonOptionsInput {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

type AwsCloudSearchS13LiteralArrayOptions {
  DefaultValue: String
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

input AwsCloudSearchS13LiteralArrayOptionsInput {
  DefaultValue: String
  SourceFields: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
}

type AwsCloudSearchS13LiteralOptions {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

input AwsCloudSearchS13LiteralOptionsInput {
  DefaultValue: String
  SourceField: String
  FacetEnabled: Boolean
  SearchEnabled: Boolean
  ReturnEnabled: Boolean
  SortEnabled: Boolean
}

type AwsCloudSearchS13TextArrayOptions {
  DefaultValue: String
  SourceFields: String
  ReturnEnabled: Boolean
  HighlightEnabled: Boolean
  AnalysisScheme: String
}

input AwsCloudSearchS13TextArrayOptionsInput {
  DefaultValue: String
  SourceFields: String
  ReturnEnabled: Boolean
  HighlightEnabled: Boolean
  AnalysisScheme: String
}

type AwsCloudSearchS13TextOptions {
  DefaultValue: String
  SourceField: String
  ReturnEnabled: Boolean
  SortEnabled: Boolean
  HighlightEnabled: Boolean
  AnalysisScheme: String
}

input AwsCloudSearchS13TextOptionsInput {
  DefaultValue: String
  SourceField: String
  ReturnEnabled: Boolean
  SortEnabled: Boolean
  HighlightEnabled: Boolean
  AnalysisScheme: String
}

type AwsCloudSearchS1n {
  Options: AwsCloudSearchS13!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchS1p {
  SuggesterName: String!
  DocumentSuggesterOptions: AwsCloudSearchS1pDocumentSuggesterOptions!
}

type AwsCloudSearchS1pDocumentSuggesterOptions {
  SourceField: String!
  FuzzyMatching: String
  SortExpression: String
}

input AwsCloudSearchS1pDocumentSuggesterOptionsInput {
  SourceField: String!
  FuzzyMatching: String
  SortExpression: String
}

input AwsCloudSearchS1pInput {
  SuggesterName: String!
  DocumentSuggesterOptions: AwsCloudSearchS1pDocumentSuggesterOptionsInput!
}

type AwsCloudSearchS1t {
  Options: AwsCloudSearchS1p!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchS2a {
  Options: Boolean!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchS2p {
  Options: AwsCloudSearchS2q!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchS2q {
  DesiredInstanceType: String
  DesiredReplicationCount: Int
  DesiredPartitionCount: Int
}

input AwsCloudSearchS2qInput {
  DesiredInstanceType: String
  DesiredReplicationCount: Int
  DesiredPartitionCount: Int
}

type AwsCloudSearchS2u {
  Options: String!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchS8 {
  DomainId: String!
  DomainName: String!
  ARN: String
  Created: Boolean
  Deleted: Boolean
  DocService: AwsCloudSearchSc
  SearchService: AwsCloudSearchSc
  RequiresIndexDocuments: Boolean!
  Processing: Boolean
  SearchInstanceType: String
  SearchPartitionCount: Int
  SearchInstanceCount: Int
  Limits: AwsCloudSearchS8Limits
}

type AwsCloudSearchS8Limits {
  MaximumReplicationCount: Int!
  MaximumPartitionCount: Int!
}

type AwsCloudSearchSc {
  Endpoint: String
}

type AwsCloudSearchSl {
  AnalysisSchemeName: String!
  AnalysisSchemeLanguage: String!
  AnalysisOptions: AwsCloudSearchSlAnalysisOptions
}

type AwsCloudSearchSlAnalysisOptions {
  Synonyms: String
  Stopwords: String
  StemmingDictionary: String
  JapaneseTokenizationDictionary: String
  AlgorithmicStemming: String
}

input AwsCloudSearchSlAnalysisOptionsInput {
  Synonyms: String
  Stopwords: String
  StemmingDictionary: String
  JapaneseTokenizationDictionary: String
  AlgorithmicStemming: String
}

input AwsCloudSearchSlInput {
  AnalysisSchemeName: String!
  AnalysisSchemeLanguage: String!
  AnalysisOptions: AwsCloudSearchSlAnalysisOptionsInput
}

type AwsCloudSearchSs {
  Options: AwsCloudSearchSl!
  Status: AwsCloudSearchSt!
}

type AwsCloudSearchSt {
  CreationDate: Date!
  UpdateDate: Date!
  UpdateVersion: Int
  State: String!
  PendingDeletion: Boolean
}

type AwsCloudSearchSy {
  ExpressionName: String!
  ExpressionValue: String!
}

input AwsCloudSearchSyInput {
  ExpressionName: String!
  ExpressionValue: String!
}

input AwsCloudSearchUpdateAvailabilityOptionsInput {
  DomainName: String!
  MultiAZ: Boolean!
}

type AwsCloudSearchUpdateAvailabilityOptionsOutput {
  AvailabilityOptions: AwsCloudSearchS2a
}

input AwsCloudSearchUpdateScalingParametersInput {
  DomainName: String!
  ScalingParameters: AwsCloudSearchS2qInput!
}

type AwsCloudSearchUpdateScalingParametersOutput {
  ScalingParameters: AwsCloudSearchS2p!
}

input AwsCloudSearchUpdateServiceAccessPoliciesInput {
  DomainName: String!
  AccessPolicies: String!
}

type AwsCloudSearchUpdateServiceAccessPoliciesOutput {
  AccessPolicies: AwsCloudSearchS2u!
}

# AWS CloudTrail (2013-11-01)
type AwsCloudTrail {
  addTags(input: AwsCloudTrailAddTagsInput!, config: AwsConfig): JSON
  createTrail(input: AwsCloudTrailCreateTrailInput!, config: AwsConfig): AwsCloudTrailCreateTrailOutput
  deleteTrail(input: AwsCloudTrailDeleteTrailInput!, config: AwsConfig): JSON
  describeTrails(input: AwsCloudTrailDescribeTrailsInput, config: AwsConfig): AwsCloudTrailDescribeTrailsOutput
  getEventSelectors(input: AwsCloudTrailGetEventSelectorsInput!, config: AwsConfig): AwsCloudTrailGetEventSelectorsOutput
  getTrailStatus(input: AwsCloudTrailGetTrailStatusInput!, config: AwsConfig): AwsCloudTrailGetTrailStatusOutput
  listPublicKeys(input: AwsCloudTrailListPublicKeysInput, config: AwsConfig): AwsCloudTrailListPublicKeysOutput
  listTags(input: AwsCloudTrailListTagsInput!, config: AwsConfig): AwsCloudTrailListTagsOutput
  lookupEvents(input: AwsCloudTrailLookupEventsInput, config: AwsConfig): AwsCloudTrailLookupEventsOutput
  putEventSelectors(input: AwsCloudTrailPutEventSelectorsInput!, config: AwsConfig): AwsCloudTrailPutEventSelectorsOutput
  removeTags(input: AwsCloudTrailRemoveTagsInput!, config: AwsConfig): JSON
  startLogging(input: AwsCloudTrailStartLoggingInput!, config: AwsConfig): JSON
  stopLogging(input: AwsCloudTrailStopLoggingInput!, config: AwsConfig): JSON
  updateTrail(input: AwsCloudTrailUpdateTrailInput!, config: AwsConfig): AwsCloudTrailUpdateTrailOutput
}

input AwsCloudTrailAddTagsInput {
  ResourceId: String!
  TagsList: [AwsCloudTrailS3Input]
}

input AwsCloudTrailCreateTrailInput {
  Name: String!
  S3BucketName: String!
  S3KeyPrefix: String
  SnsTopicName: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  EnableLogFileValidation: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
}

type AwsCloudTrailCreateTrailOutput {
  Name: String
  S3BucketName: String
  S3KeyPrefix: String
  SnsTopicName: String
  SnsTopicARN: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  TrailARN: String
  LogFileValidationEnabled: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
}

input AwsCloudTrailDeleteTrailInput {
  Name: String!
}

input AwsCloudTrailDescribeTrailsInput {
  trailNameList: [String]
  includeShadowTrails: Boolean
}

type AwsCloudTrailDescribeTrailsOutput {
  trailList: [AwsCloudTrailDescribeTrailsOutputTrailList]
}

type AwsCloudTrailDescribeTrailsOutputTrailList {
  Name: String
  S3BucketName: String
  S3KeyPrefix: String
  SnsTopicName: String
  SnsTopicARN: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  HomeRegion: String
  TrailARN: String
  LogFileValidationEnabled: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
  HasCustomEventSelectors: Boolean
}

input AwsCloudTrailGetEventSelectorsInput {
  TrailName: String!
}

type AwsCloudTrailGetEventSelectorsOutput {
  TrailARN: String
  EventSelectors: [AwsCloudTrailSi]
}

input AwsCloudTrailGetTrailStatusInput {
  Name: String!
}

type AwsCloudTrailGetTrailStatusOutput {
  IsLogging: Boolean
  LatestDeliveryError: String
  LatestNotificationError: String
  LatestDeliveryTime: Date
  LatestNotificationTime: Date
  StartLoggingTime: Date
  StopLoggingTime: Date
  LatestCloudWatchLogsDeliveryError: String
  LatestCloudWatchLogsDeliveryTime: Date
  LatestDigestDeliveryTime: Date
  LatestDigestDeliveryError: String
  LatestDeliveryAttemptTime: String
  LatestNotificationAttemptTime: String
  LatestNotificationAttemptSucceeded: String
  LatestDeliveryAttemptSucceeded: String
  TimeLoggingStarted: String
  TimeLoggingStopped: String
}

input AwsCloudTrailListPublicKeysInput {
  StartTime: Date
  EndTime: Date
  NextToken: String
}

type AwsCloudTrailListPublicKeysOutput {
  PublicKeyList: [AwsCloudTrailListPublicKeysOutputPublicKeyList]
  NextToken: String
}

type AwsCloudTrailListPublicKeysOutputPublicKeyList {
  Value: JSON
  ValidityStartTime: Date
  ValidityEndTime: Date
  Fingerprint: String
}

input AwsCloudTrailListTagsInput {
  ResourceIdList: [String]!
  NextToken: String
}

type AwsCloudTrailListTagsOutput {
  ResourceTagList: [AwsCloudTrailListTagsOutputResourceTagList]
  NextToken: String
}

type AwsCloudTrailListTagsOutputResourceTagList {
  ResourceId: String
  TagsList: [AwsCloudTrailS3]
}

input AwsCloudTrailLookupEventsInput {
  LookupAttributes: [AwsCloudTrailLookupEventsLookupAttributesInput]
  StartTime: Date
  EndTime: Date
  MaxResults: Int
  NextToken: String
}

input AwsCloudTrailLookupEventsLookupAttributesInput {
  AttributeKey: String!
  AttributeValue: String!
}

type AwsCloudTrailLookupEventsOutput {
  Events: [AwsCloudTrailLookupEventsOutputEvents]
  NextToken: String
}

type AwsCloudTrailLookupEventsOutputEvents {
  EventId: String
  EventName: String
  EventTime: Date
  EventSource: String
  Username: String
  Resources: [AwsCloudTrailLookupEventsOutputEventsResources]
  CloudTrailEvent: String
}

type AwsCloudTrailLookupEventsOutputEventsResources {
  ResourceType: String
  ResourceName: String
}

input AwsCloudTrailPutEventSelectorsInput {
  TrailName: String!
  EventSelectors: [AwsCloudTrailSiInput]!
}

type AwsCloudTrailPutEventSelectorsOutput {
  TrailARN: String
  EventSelectors: [AwsCloudTrailSi]
}

input AwsCloudTrailRemoveTagsInput {
  ResourceId: String!
  TagsList: [AwsCloudTrailS3Input]
}

type AwsCloudTrailS3 {
  Key: String!
  Value: String
}

input AwsCloudTrailS3Input {
  Key: String!
  Value: String
}

type AwsCloudTrailSi {
  ReadWriteType: String
  IncludeManagementEvents: Boolean
  DataResources: [AwsCloudTrailSiDataResources]
}

type AwsCloudTrailSiDataResources {
  Type: String
  Values: [String]
}

input AwsCloudTrailSiDataResourcesInput {
  Type: String
  Values: [String]
}

input AwsCloudTrailSiInput {
  ReadWriteType: String
  IncludeManagementEvents: Boolean
  DataResources: [AwsCloudTrailSiDataResourcesInput]
}

input AwsCloudTrailStartLoggingInput {
  Name: String!
}

input AwsCloudTrailStopLoggingInput {
  Name: String!
}

input AwsCloudTrailUpdateTrailInput {
  Name: String!
  S3BucketName: String
  S3KeyPrefix: String
  SnsTopicName: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  EnableLogFileValidation: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
}

type AwsCloudTrailUpdateTrailOutput {
  Name: String
  S3BucketName: String
  S3KeyPrefix: String
  SnsTopicName: String
  SnsTopicARN: String
  IncludeGlobalServiceEvents: Boolean
  IsMultiRegionTrail: Boolean
  TrailARN: String
  LogFileValidationEnabled: Boolean
  CloudWatchLogsLogGroupArn: String
  CloudWatchLogsRoleArn: String
  KmsKeyId: String
}

# Amazon CloudWatch (2010-08-01)
type AwsCloudWatch {
  deleteAlarms(input: AwsCloudWatchDeleteAlarmsInput!, config: AwsConfig): JSON
  deleteDashboards(input: AwsCloudWatchDeleteDashboardsInput, config: AwsConfig): JSON
  describeAlarmHistory(input: AwsCloudWatchDescribeAlarmHistoryInput, config: AwsConfig): AwsCloudWatchDescribeAlarmHistoryOutput
  describeAlarms(input: AwsCloudWatchDescribeAlarmsInput, config: AwsConfig): AwsCloudWatchDescribeAlarmsOutput
  describeAlarmsForMetric(input: AwsCloudWatchDescribeAlarmsForMetricInput!, config: AwsConfig): AwsCloudWatchDescribeAlarmsForMetricOutput
  disableAlarmActions(input: AwsCloudWatchDisableAlarmActionsInput!, config: AwsConfig): JSON
  enableAlarmActions(input: AwsCloudWatchEnableAlarmActionsInput!, config: AwsConfig): JSON
  getDashboard(input: AwsCloudWatchGetDashboardInput, config: AwsConfig): AwsCloudWatchGetDashboardOutput
  getMetricStatistics(input: AwsCloudWatchGetMetricStatisticsInput!, config: AwsConfig): AwsCloudWatchGetMetricStatisticsOutput
  listDashboards(input: AwsCloudWatchListDashboardsInput, config: AwsConfig): AwsCloudWatchListDashboardsOutput
  listMetrics(input: AwsCloudWatchListMetricsInput, config: AwsConfig): AwsCloudWatchListMetricsOutput
  putDashboard(input: AwsCloudWatchPutDashboardInput, config: AwsConfig): AwsCloudWatchPutDashboardOutput
  putMetricAlarm(input: AwsCloudWatchPutMetricAlarmInput!, config: AwsConfig): JSON
  putMetricData(input: AwsCloudWatchPutMetricDataInput!, config: AwsConfig): JSON
  setAlarmState(input: AwsCloudWatchSetAlarmStateInput!, config: AwsConfig): JSON
}

input AwsCloudWatchDeleteAlarmsInput {
  AlarmNames: [String]!
}

input AwsCloudWatchDeleteDashboardsInput {
  DashboardNames: [String]
}

input AwsCloudWatchDescribeAlarmHistoryInput {
  AlarmName: String
  HistoryItemType: String
  StartDate: Date
  EndDate: Date
  MaxRecords: Int
  NextToken: String
}

type AwsCloudWatchDescribeAlarmHistoryOutput {
  AlarmHistoryItems: [AwsCloudWatchDescribeAlarmHistoryOutputAlarmHistoryItems]
  NextToken: String
}

type AwsCloudWatchDescribeAlarmHistoryOutputAlarmHistoryItems {
  AlarmName: String
  Timestamp: Date
  HistoryItemType: String
  HistorySummary: String
  HistoryData: String
}

input AwsCloudWatchDescribeAlarmsForMetricInput {
  MetricName: String!
  Namespace: String!
  Statistic: String
  ExtendedStatistic: String
  Dimensions: [AwsCloudWatchS10Input]
  Period: Int
  Unit: String
}

type AwsCloudWatchDescribeAlarmsForMetricOutput {
  MetricAlarms: [AwsCloudWatchSn]
}

input AwsCloudWatchDescribeAlarmsInput {
  AlarmNames: [String]
  AlarmNamePrefix: String
  StateValue: String
  ActionPrefix: String
  MaxRecords: Int
  NextToken: String
}

type AwsCloudWatchDescribeAlarmsOutput {
  MetricAlarms: [AwsCloudWatchSn]
  NextToken: String
}

input AwsCloudWatchDisableAlarmActionsInput {
  AlarmNames: [String]!
}

input AwsCloudWatchEnableAlarmActionsInput {
  AlarmNames: [String]!
}

# Amazon CloudWatch Events (2015-10-07)
type AwsCloudWatchEvents {
  deleteRule(input: AwsCloudWatchEventsDeleteRuleInput!, config: AwsConfig): JSON
  describeEventBus(input: JSON, config: AwsConfig): AwsCloudWatchEventsDescribeEventBusOutput
  describeRule(input: AwsCloudWatchEventsDescribeRuleInput!, config: AwsConfig): AwsCloudWatchEventsDescribeRuleOutput
  disableRule(input: AwsCloudWatchEventsDisableRuleInput!, config: AwsConfig): JSON
  enableRule(input: AwsCloudWatchEventsEnableRuleInput!, config: AwsConfig): JSON
  listRuleNamesByTarget(input: AwsCloudWatchEventsListRuleNamesByTargetInput!, config: AwsConfig): AwsCloudWatchEventsListRuleNamesByTargetOutput
  listRules(input: AwsCloudWatchEventsListRulesInput, config: AwsConfig): AwsCloudWatchEventsListRulesOutput
  listTargetsByRule(input: AwsCloudWatchEventsListTargetsByRuleInput!, config: AwsConfig): AwsCloudWatchEventsListTargetsByRuleOutput
  putEvents(input: AwsCloudWatchEventsPutEventsInput!, config: AwsConfig): AwsCloudWatchEventsPutEventsOutput
  putPermission(input: AwsCloudWatchEventsPutPermissionInput!, config: AwsConfig): JSON
  putRule(input: AwsCloudWatchEventsPutRuleInput!, config: AwsConfig): AwsCloudWatchEventsPutRuleOutput
  putTargets(input: AwsCloudWatchEventsPutTargetsInput!, config: AwsConfig): AwsCloudWatchEventsPutTargetsOutput
  removePermission(input: AwsCloudWatchEventsRemovePermissionInput!, config: AwsConfig): JSON
  removeTargets(input: AwsCloudWatchEventsRemoveTargetsInput!, config: AwsConfig): AwsCloudWatchEventsRemoveTargetsOutput
  testEventPattern(input: AwsCloudWatchEventsTestEventPatternInput!, config: AwsConfig): AwsCloudWatchEventsTestEventPatternOutput
}

input AwsCloudWatchEventsDeleteRuleInput {
  Name: String!
}

type AwsCloudWatchEventsDescribeEventBusOutput {
  Name: String
  Arn: String
  Policy: String
}

input AwsCloudWatchEventsDescribeRuleInput {
  Name: String!
}

type AwsCloudWatchEventsDescribeRuleOutput {
  Name: String
  Arn: String
  EventPattern: String
  ScheduleExpression: String
  State: String
  Description: String
  RoleArn: String
}

input AwsCloudWatchEventsDisableRuleInput {
  Name: String!
}

input AwsCloudWatchEventsEnableRuleInput {
  Name: String!
}

input AwsCloudWatchEventsListRuleNamesByTargetInput {
  TargetArn: String!
  NextToken: String
  Limit: Int
}

type AwsCloudWatchEventsListRuleNamesByTargetOutput {
  RuleNames: [String]
  NextToken: String
}

input AwsCloudWatchEventsListRulesInput {
  NamePrefix: String
  NextToken: String
  Limit: Int
}

type AwsCloudWatchEventsListRulesOutput {
  Rules: [AwsCloudWatchEventsListRulesOutputRules]
  NextToken: String
}

type AwsCloudWatchEventsListRulesOutputRules {
  Name: String
  Arn: String
  EventPattern: String
  State: String
  Description: String
  ScheduleExpression: String
  RoleArn: String
}

input AwsCloudWatchEventsListTargetsByRuleInput {
  Rule: String!
  NextToken: String
  Limit: Int
}

type AwsCloudWatchEventsListTargetsByRuleOutput {
  Targets: [AwsCloudWatchEventsSs]
  NextToken: String
}

input AwsCloudWatchEventsPutEventsEntriesInput {
  Time: Date
  Source: String
  Resources: [String]
  DetailType: String
  Detail: String
}

input AwsCloudWatchEventsPutEventsInput {
  Entries: [AwsCloudWatchEventsPutEventsEntriesInput]!
}

type AwsCloudWatchEventsPutEventsOutput {
  FailedEntryCount: Int
  Entries: [AwsCloudWatchEventsPutEventsOutputEntries]
}

type AwsCloudWatchEventsPutEventsOutputEntries {
  EventId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsCloudWatchEventsPutPermissionInput {
  Action: String!
  Principal: String!
  StatementId: String!
}

input AwsCloudWatchEventsPutRuleInput {
  Name: String!
  ScheduleExpression: String
  EventPattern: String
  State: String
  Description: String
  RoleArn: String
}

type AwsCloudWatchEventsPutRuleOutput {
  RuleArn: String
}

input AwsCloudWatchEventsPutTargetsInput {
  Rule: String!
  Targets: [AwsCloudWatchEventsSsInput]!
}

type AwsCloudWatchEventsPutTargetsOutput {
  FailedEntryCount: Int
  FailedEntries: [AwsCloudWatchEventsPutTargetsOutputFailedEntries]
}

type AwsCloudWatchEventsPutTargetsOutputFailedEntries {
  TargetId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsCloudWatchEventsRemovePermissionInput {
  StatementId: String!
}

input AwsCloudWatchEventsRemoveTargetsInput {
  Rule: String!
  Ids: [String]!
}

type AwsCloudWatchEventsRemoveTargetsOutput {
  FailedEntryCount: Int
  FailedEntries: [AwsCloudWatchEventsRemoveTargetsOutputFailedEntries]
}

type AwsCloudWatchEventsRemoveTargetsOutputFailedEntries {
  TargetId: String
  ErrorCode: String
  ErrorMessage: String
}

type AwsCloudWatchEventsSs {
  Id: String!
  Arn: String!
  RoleArn: String
  Input: String
  InputPath: String
  InputTransformer: AwsCloudWatchEventsSsInputTransformer
  KinesisParameters: AwsCloudWatchEventsSsKinesisParameters
  RunCommandParameters: AwsCloudWatchEventsSsRunCommandParameters
  EcsParameters: AwsCloudWatchEventsSsEcsParameters
}

type AwsCloudWatchEventsSsEcsParameters {
  TaskDefinitionArn: String!
  TaskCount: Int
}

input AwsCloudWatchEventsSsEcsParametersInput {
  TaskDefinitionArn: String!
  TaskCount: Int
}

input AwsCloudWatchEventsSsInput {
  Id: String!
  Arn: String!
  RoleArn: String
  Input: String
  InputPath: String
  InputTransformer: AwsCloudWatchEventsSsInputTransformerInput
  KinesisParameters: AwsCloudWatchEventsSsKinesisParametersInput
  RunCommandParameters: AwsCloudWatchEventsSsRunCommandParametersInput
  EcsParameters: AwsCloudWatchEventsSsEcsParametersInput
}

type AwsCloudWatchEventsSsInputTransformer {
  InputPathsMap: JSON
  InputTemplate: String!
}

input AwsCloudWatchEventsSsInputTransformerInput {
  InputPathsMap: JSON
  InputTemplate: String!
}

type AwsCloudWatchEventsSsKinesisParameters {
  PartitionKeyPath: String!
}

input AwsCloudWatchEventsSsKinesisParametersInput {
  PartitionKeyPath: String!
}

type AwsCloudWatchEventsSsRunCommandParameters {
  RunCommandTargets: [AwsCloudWatchEventsSsRunCommandParametersRunCommandTargets]!
}

input AwsCloudWatchEventsSsRunCommandParametersInput {
  RunCommandTargets: [AwsCloudWatchEventsSsRunCommandParametersRunCommandTargetsInput]!
}

type AwsCloudWatchEventsSsRunCommandParametersRunCommandTargets {
  Key: String!
  Values: [String]!
}

input AwsCloudWatchEventsSsRunCommandParametersRunCommandTargetsInput {
  Key: String!
  Values: [String]!
}

input AwsCloudWatchEventsTestEventPatternInput {
  EventPattern: String!
  Event: String!
}

type AwsCloudWatchEventsTestEventPatternOutput {
  Result: Boolean
}

input AwsCloudWatchGetDashboardInput {
  DashboardName: String
}

type AwsCloudWatchGetDashboardOutput {
  DashboardArn: String
  DashboardBody: String
  DashboardName: String
}

input AwsCloudWatchGetMetricStatisticsInput {
  Namespace: String!
  MetricName: String!
  Dimensions: [AwsCloudWatchS10Input]
  StartTime: Date!
  EndTime: Date!
  Period: Int!
  Statistics: [String]
  ExtendedStatistics: [String]
  Unit: String
}

type AwsCloudWatchGetMetricStatisticsOutput {
  Label: String
  Datapoints: [AwsCloudWatchGetMetricStatisticsOutputDatapoints]
}

type AwsCloudWatchGetMetricStatisticsOutputDatapoints {
  Timestamp: Date
  SampleCount: JSON
  Average: JSON
  Sum: JSON
  Minimum: JSON
  Maximum: JSON
  Unit: String
  ExtendedStatistics: JSON
}

input AwsCloudWatchListDashboardsInput {
  DashboardNamePrefix: String
  NextToken: String
}

type AwsCloudWatchListDashboardsOutput {
  DashboardEntries: [AwsCloudWatchListDashboardsOutputDashboardEntries]
  NextToken: String
}

type AwsCloudWatchListDashboardsOutputDashboardEntries {
  DashboardName: String
  DashboardArn: String
  LastModified: Date
  Size: JSON
}

input AwsCloudWatchListMetricsDimensionsInput {
  Name: String!
  Value: String
}

input AwsCloudWatchListMetricsInput {
  Namespace: String
  MetricName: String
  Dimensions: [AwsCloudWatchListMetricsDimensionsInput]
  NextToken: String
}

type AwsCloudWatchListMetricsOutput {
  Metrics: [AwsCloudWatchListMetricsOutputMetrics]
  NextToken: String
}

type AwsCloudWatchListMetricsOutputMetrics {
  Namespace: String
  MetricName: String
  Dimensions: [AwsCloudWatchS10]
}

# Amazon CloudWatch Logs (2014-03-28)
type AwsCloudWatchLogs {
  associateKmsKey(input: AwsCloudWatchLogsAssociateKmsKeyInput!, config: AwsConfig): JSON
  cancelExportTask(input: AwsCloudWatchLogsCancelExportTaskInput!, config: AwsConfig): JSON
  createExportTask(input: AwsCloudWatchLogsCreateExportTaskInput!, config: AwsConfig): AwsCloudWatchLogsCreateExportTaskOutput
  createLogGroup(input: AwsCloudWatchLogsCreateLogGroupInput!, config: AwsConfig): JSON
  createLogStream(input: AwsCloudWatchLogsCreateLogStreamInput!, config: AwsConfig): JSON
  deleteDestination(input: AwsCloudWatchLogsDeleteDestinationInput!, config: AwsConfig): JSON
  deleteLogGroup(input: AwsCloudWatchLogsDeleteLogGroupInput!, config: AwsConfig): JSON
  deleteLogStream(input: AwsCloudWatchLogsDeleteLogStreamInput!, config: AwsConfig): JSON
  deleteMetricFilter(input: AwsCloudWatchLogsDeleteMetricFilterInput!, config: AwsConfig): JSON
  deleteResourcePolicy(input: AwsCloudWatchLogsDeleteResourcePolicyInput, config: AwsConfig): JSON
  deleteRetentionPolicy(input: AwsCloudWatchLogsDeleteRetentionPolicyInput!, config: AwsConfig): JSON
  deleteSubscriptionFilter(input: AwsCloudWatchLogsDeleteSubscriptionFilterInput!, config: AwsConfig): JSON
  describeDestinations(input: AwsCloudWatchLogsDescribeDestinationsInput, config: AwsConfig): AwsCloudWatchLogsDescribeDestinationsOutput
  describeExportTasks(input: AwsCloudWatchLogsDescribeExportTasksInput, config: AwsConfig): AwsCloudWatchLogsDescribeExportTasksOutput
  describeLogGroups(input: AwsCloudWatchLogsDescribeLogGroupsInput, config: AwsConfig): AwsCloudWatchLogsDescribeLogGroupsOutput
  describeLogStreams(input: AwsCloudWatchLogsDescribeLogStreamsInput!, config: AwsConfig): AwsCloudWatchLogsDescribeLogStreamsOutput
  describeMetricFilters(input: AwsCloudWatchLogsDescribeMetricFiltersInput, config: AwsConfig): AwsCloudWatchLogsDescribeMetricFiltersOutput
  describeResourcePolicies(input: AwsCloudWatchLogsDescribeResourcePoliciesInput, config: AwsConfig): AwsCloudWatchLogsDescribeResourcePoliciesOutput
  describeSubscriptionFilters(input: AwsCloudWatchLogsDescribeSubscriptionFiltersInput!, config: AwsConfig): AwsCloudWatchLogsDescribeSubscriptionFiltersOutput
  disassociateKmsKey(input: AwsCloudWatchLogsDisassociateKmsKeyInput!, config: AwsConfig): JSON
  filterLogEvents(input: AwsCloudWatchLogsFilterLogEventsInput!, config: AwsConfig): AwsCloudWatchLogsFilterLogEventsOutput
  getLogEvents(input: AwsCloudWatchLogsGetLogEventsInput!, config: AwsConfig): AwsCloudWatchLogsGetLogEventsOutput
  listTagsLogGroup(input: AwsCloudWatchLogsListTagsLogGroupInput!, config: AwsConfig): AwsCloudWatchLogsListTagsLogGroupOutput
  putDestination(input: AwsCloudWatchLogsPutDestinationInput!, config: AwsConfig): AwsCloudWatchLogsPutDestinationOutput
  putDestinationPolicy(input: AwsCloudWatchLogsPutDestinationPolicyInput!, config: AwsConfig): JSON
  putLogEvents(input: AwsCloudWatchLogsPutLogEventsInput!, config: AwsConfig): AwsCloudWatchLogsPutLogEventsOutput
  putMetricFilter(input: AwsCloudWatchLogsPutMetricFilterInput!, config: AwsConfig): JSON
  putResourcePolicy(input: AwsCloudWatchLogsPutResourcePolicyInput, config: AwsConfig): AwsCloudWatchLogsPutResourcePolicyOutput
  putRetentionPolicy(input: AwsCloudWatchLogsPutRetentionPolicyInput!, config: AwsConfig): JSON
  putSubscriptionFilter(input: AwsCloudWatchLogsPutSubscriptionFilterInput!, config: AwsConfig): JSON
  tagLogGroup(input: AwsCloudWatchLogsTagLogGroupInput!, config: AwsConfig): JSON
  testMetricFilter(input: AwsCloudWatchLogsTestMetricFilterInput!, config: AwsConfig): AwsCloudWatchLogsTestMetricFilterOutput
  untagLogGroup(input: AwsCloudWatchLogsUntagLogGroupInput!, config: AwsConfig): JSON
}

input AwsCloudWatchLogsAssociateKmsKeyInput {
  logGroupName: String!
  kmsKeyId: String!
}

input AwsCloudWatchLogsCancelExportTaskInput {
  taskId: String!
}

input AwsCloudWatchLogsCreateExportTaskInput {
  taskName: String
  logGroupName: String!
  logStreamNamePrefix: String
  from: JSON!
  to: JSON!
  destination: String!
  destinationPrefix: String
}

type AwsCloudWatchLogsCreateExportTaskOutput {
  taskId: String
}

input AwsCloudWatchLogsCreateLogGroupInput {
  logGroupName: String!
  kmsKeyId: String
  tags: JSON
}

input AwsCloudWatchLogsCreateLogStreamInput {
  logGroupName: String!
  logStreamName: String!
}

input AwsCloudWatchLogsDeleteDestinationInput {
  destinationName: String!
}

input AwsCloudWatchLogsDeleteLogGroupInput {
  logGroupName: String!
}

input AwsCloudWatchLogsDeleteLogStreamInput {
  logGroupName: String!
  logStreamName: String!
}

input AwsCloudWatchLogsDeleteMetricFilterInput {
  logGroupName: String!
  filterName: String!
}

input AwsCloudWatchLogsDeleteResourcePolicyInput {
  policyName: String
}

input AwsCloudWatchLogsDeleteRetentionPolicyInput {
  logGroupName: String!
}

input AwsCloudWatchLogsDeleteSubscriptionFilterInput {
  logGroupName: String!
  filterName: String!
}

input AwsCloudWatchLogsDescribeDestinationsInput {
  DestinationNamePrefix: String
  nextToken: String
  limit: Int
}

type AwsCloudWatchLogsDescribeDestinationsOutput {
  destinations: [AwsCloudWatchLogsSx]
  nextToken: String
}

input AwsCloudWatchLogsDescribeExportTasksInput {
  taskId: String
  statusCode: String
  nextToken: String
  limit: Int
}

type AwsCloudWatchLogsDescribeExportTasksOutput {
  exportTasks: [AwsCloudWatchLogsDescribeExportTasksOutputExportTasks]
  nextToken: String
}

type AwsCloudWatchLogsDescribeExportTasksOutputExportTasks {
  taskId: String
  taskName: String
  logGroupName: String
  from: JSON
  to: JSON
  destination: String
  destinationPrefix: String
  status: AwsCloudWatchLogsDescribeExportTasksOutputExportTasksStatus
  executionInfo: AwsCloudWatchLogsDescribeExportTasksOutputExportTasksExecutionInfo
}

type AwsCloudWatchLogsDescribeExportTasksOutputExportTasksExecutionInfo {
  creationTime: JSON
  completionTime: JSON
}

type AwsCloudWatchLogsDescribeExportTasksOutputExportTasksStatus {
  code: String
  message: String
}

input AwsCloudWatchLogsDescribeLogGroupsInput {
  logGroupNamePrefix: String
  nextToken: String
  limit: Int
}

type AwsCloudWatchLogsDescribeLogGroupsOutput {
  logGroups: [AwsCloudWatchLogsDescribeLogGroupsOutputLogGroups]
  nextToken: String
}

type AwsCloudWatchLogsDescribeLogGroupsOutputLogGroups {
  logGroupName: String
  creationTime: JSON
  retentionInDays: Int
  metricFilterCount: Int
  arn: String
  storedBytes: JSON
  kmsKeyId: String
}

input AwsCloudWatchLogsDescribeLogStreamsInput {
  logGroupName: String!
  logStreamNamePrefix: String
  orderBy: String
  descending: Boolean
  nextToken: String
  limit: Int
}

type AwsCloudWatchLogsDescribeLogStreamsOutput {
  logStreams: [AwsCloudWatchLogsDescribeLogStreamsOutputLogStreams]
  nextToken: String
}

type AwsCloudWatchLogsDescribeLogStreamsOutputLogStreams {
  logStreamName: String
  creationTime: JSON
  firstEventTimestamp: JSON
  lastEventTimestamp: JSON
  lastIngestionTime: JSON
  uploadSequenceToken: String
  arn: String
  storedBytes: JSON
}

input AwsCloudWatchLogsDescribeMetricFiltersInput {
  logGroupName: String
  filterNamePrefix: String
  nextToken: String
  limit: Int
  metricName: String
  metricNamespace: String
}

type AwsCloudWatchLogsDescribeMetricFiltersOutput {
  metricFilters: [AwsCloudWatchLogsDescribeMetricFiltersOutputMetricFilters]
  nextToken: String
}

type AwsCloudWatchLogsDescribeMetricFiltersOutputMetricFilters {
  filterName: String
  filterPattern: String
  metricTransformations: [AwsCloudWatchLogsS1v]
  creationTime: JSON
  logGroupName: String
}

input AwsCloudWatchLogsDescribeResourcePoliciesInput {
  nextToken: String
  limit: Int
}

type AwsCloudWatchLogsDescribeResourcePoliciesOutput {
  resourcePolicies: [AwsCloudWatchLogsS22]
  nextToken: String
}

input AwsCloudWatchLogsDescribeSubscriptionFiltersInput {
  logGroupName: String!
  filterNamePrefix: String
  nextToken: String
  limit: Int
}

type AwsCloudWatchLogsDescribeSubscriptionFiltersOutput {
  subscriptionFilters: [AwsCloudWatchLogsDescribeSubscriptionFiltersOutputSubscriptionFilters]
  nextToken: String
}

type AwsCloudWatchLogsDescribeSubscriptionFiltersOutputSubscriptionFilters {
  filterName: String
  logGroupName: String
  filterPattern: String
  destinationArn: String
  roleArn: String
  distribution: String
  creationTime: JSON
}

input AwsCloudWatchLogsDisassociateKmsKeyInput {
  logGroupName: String!
}

input AwsCloudWatchLogsFilterLogEventsInput {
  logGroupName: String!
  logStreamNames: [String]
  startTime: JSON
  endTime: JSON
  filterPattern: String
  nextToken: String
  limit: Int
  interleaved: Boolean
}

type AwsCloudWatchLogsFilterLogEventsOutput {
  events: [AwsCloudWatchLogsFilterLogEventsOutputEvents]
  searchedLogStreams: [AwsCloudWatchLogsFilterLogEventsOutputSearchedLogStreams]
  nextToken: String
}

type AwsCloudWatchLogsFilterLogEventsOutputEvents {
  logStreamName: String
  timestamp: JSON
  message: String
  ingestionTime: JSON
  eventId: String
}

type AwsCloudWatchLogsFilterLogEventsOutputSearchedLogStreams {
  logStreamName: String
  searchedCompletely: Boolean
}

input AwsCloudWatchLogsGetLogEventsInput {
  logGroupName: String!
  logStreamName: String!
  startTime: JSON
  endTime: JSON
  nextToken: String
  limit: Int
  startFromHead: Boolean
}

type AwsCloudWatchLogsGetLogEventsOutput {
  events: [AwsCloudWatchLogsGetLogEventsOutputEvents]
  nextForwardToken: String
  nextBackwardToken: String
}

type AwsCloudWatchLogsGetLogEventsOutputEvents {
  timestamp: JSON
  message: String
  ingestionTime: JSON
}

input AwsCloudWatchLogsListTagsLogGroupInput {
  logGroupName: String!
}

type AwsCloudWatchLogsListTagsLogGroupOutput {
  tags: JSON
}

input AwsCloudWatchLogsPutDestinationInput {
  destinationName: String!
  targetArn: String!
  roleArn: String!
}

type AwsCloudWatchLogsPutDestinationOutput {
  destination: AwsCloudWatchLogsSx
}

input AwsCloudWatchLogsPutDestinationPolicyInput {
  destinationName: String!
  accessPolicy: String!
}

input AwsCloudWatchLogsPutLogEventsInput {
  logGroupName: String!
  logStreamName: String!
  logEvents: [AwsCloudWatchLogsPutLogEventsLogEventsInput]!
  sequenceToken: String
}

input AwsCloudWatchLogsPutLogEventsLogEventsInput {
  timestamp: JSON!
  message: String!
}

type AwsCloudWatchLogsPutLogEventsOutput {
  nextSequenceToken: String
  rejectedLogEventsInfo: AwsCloudWatchLogsPutLogEventsOutputRejectedLogEventsInfo
}

type AwsCloudWatchLogsPutLogEventsOutputRejectedLogEventsInfo {
  tooNewLogEventStartIndex: Int
  tooOldLogEventEndIndex: Int
  expiredLogEventEndIndex: Int
}

input AwsCloudWatchLogsPutMetricFilterInput {
  logGroupName: String!
  filterName: String!
  filterPattern: String!
  metricTransformations: [AwsCloudWatchLogsS1vInput]!
}

input AwsCloudWatchLogsPutResourcePolicyInput {
  policyName: String
  policyDocument: String
}

type AwsCloudWatchLogsPutResourcePolicyOutput {
  resourcePolicy: AwsCloudWatchLogsS22
}

input AwsCloudWatchLogsPutRetentionPolicyInput {
  logGroupName: String!
  retentionInDays: Int!
}

input AwsCloudWatchLogsPutSubscriptionFilterInput {
  logGroupName: String!
  filterName: String!
  filterPattern: String!
  destinationArn: String!
  roleArn: String
  distribution: String
}

type AwsCloudWatchLogsS1v {
  metricName: String!
  metricNamespace: String!
  metricValue: String!
  defaultValue: JSON
}

input AwsCloudWatchLogsS1vInput {
  metricName: String!
  metricNamespace: String!
  metricValue: String!
  defaultValue: JSON
}

type AwsCloudWatchLogsS22 {
  policyName: String
  policyDocument: String
  lastUpdatedTime: JSON
}

type AwsCloudWatchLogsSx {
  destinationName: String
  targetArn: String
  roleArn: String
  accessPolicy: String
  arn: String
  creationTime: JSON
}

input AwsCloudWatchLogsTagLogGroupInput {
  logGroupName: String!
  tags: JSON!
}

input AwsCloudWatchLogsTestMetricFilterInput {
  filterPattern: String!
  logEventMessages: [String]!
}

type AwsCloudWatchLogsTestMetricFilterOutput {
  matches: [AwsCloudWatchLogsTestMetricFilterOutputMatches]
}

type AwsCloudWatchLogsTestMetricFilterOutputMatches {
  eventNumber: JSON
  eventMessage: String
  extractedValues: JSON
}

input AwsCloudWatchLogsUntagLogGroupInput {
  logGroupName: String!
  tags: [String]!
}

input AwsCloudWatchPutDashboardInput {
  DashboardName: String
  DashboardBody: String
}

type AwsCloudWatchPutDashboardOutput {
  DashboardValidationMessages: [AwsCloudWatchPutDashboardOutputDashboardValidationMessages]
}

type AwsCloudWatchPutDashboardOutputDashboardValidationMessages {
  DataPath: String
  Message: String
}

input AwsCloudWatchPutMetricAlarmInput {
  AlarmName: String!
  AlarmDescription: String
  ActionsEnabled: Boolean
  OKActions: [String]
  AlarmActions: [String]
  InsufficientDataActions: [String]
  MetricName: String!
  Namespace: String!
  Statistic: String
  ExtendedStatistic: String
  Dimensions: [AwsCloudWatchS10Input]
  Period: Int!
  Unit: String
  EvaluationPeriods: Int!
  Threshold: JSON!
  ComparisonOperator: String!
  TreatMissingData: String
  EvaluateLowSampleCountPercentile: String
}

input AwsCloudWatchPutMetricDataInput {
  Namespace: String!
  MetricData: [AwsCloudWatchPutMetricDataMetricDataInput]!
}

input AwsCloudWatchPutMetricDataMetricDataInput {
  MetricName: String!
  Dimensions: [AwsCloudWatchS10Input]
  Timestamp: Date
  Value: JSON
  StatisticValues: AwsCloudWatchPutMetricDataMetricDataStatisticValuesInput
  Unit: String
  StorageResolution: Int
}

input AwsCloudWatchPutMetricDataMetricDataStatisticValuesInput {
  SampleCount: JSON!
  Sum: JSON!
  Minimum: JSON!
  Maximum: JSON!
}

type AwsCloudWatchS10 {
  Name: String!
  Value: String!
}

input AwsCloudWatchS10Input {
  Name: String!
  Value: String!
}

input AwsCloudWatchSetAlarmStateInput {
  AlarmName: String!
  StateValue: String!
  StateReason: String!
  StateReasonData: String
}

type AwsCloudWatchSn {
  AlarmName: String
  AlarmArn: String
  AlarmDescription: String
  AlarmConfigurationUpdatedTimestamp: Date
  ActionsEnabled: Boolean
  OKActions: [String]
  AlarmActions: [String]
  InsufficientDataActions: [String]
  StateValue: String
  StateReason: String
  StateReasonData: String
  StateUpdatedTimestamp: Date
  MetricName: String
  Namespace: String
  Statistic: String
  ExtendedStatistic: String
  Dimensions: [AwsCloudWatchS10]
  Period: Int
  Unit: String
  EvaluationPeriods: Int
  Threshold: JSON
  ComparisonOperator: String
  TreatMissingData: String
  EvaluateLowSampleCountPercentile: String
}

# AWS CodeBuild (2016-10-06)
type AwsCodeBuild {
  batchDeleteBuilds(input: AwsCodeBuildBatchDeleteBuildsInput!, config: AwsConfig): AwsCodeBuildBatchDeleteBuildsOutput
  batchGetBuilds(input: AwsCodeBuildBatchGetBuildsInput!, config: AwsConfig): AwsCodeBuildBatchGetBuildsOutput
  batchGetProjects(input: AwsCodeBuildBatchGetProjectsInput!, config: AwsConfig): AwsCodeBuildBatchGetProjectsOutput
  createProject(input: AwsCodeBuildCreateProjectInput!, config: AwsConfig): AwsCodeBuildCreateProjectOutput
  createWebhook(input: AwsCodeBuildCreateWebhookInput!, config: AwsConfig): AwsCodeBuildCreateWebhookOutput
  deleteProject(input: AwsCodeBuildDeleteProjectInput!, config: AwsConfig): JSON
  deleteWebhook(input: AwsCodeBuildDeleteWebhookInput!, config: AwsConfig): JSON
  invalidateProjectCache(input: AwsCodeBuildInvalidateProjectCacheInput!, config: AwsConfig): JSON
  listBuilds(input: AwsCodeBuildListBuildsInput, config: AwsConfig): AwsCodeBuildListBuildsOutput
  listBuildsForProject(input: AwsCodeBuildListBuildsForProjectInput!, config: AwsConfig): AwsCodeBuildListBuildsForProjectOutput
  listCuratedEnvironmentImages(input: JSON, config: AwsConfig): AwsCodeBuildListCuratedEnvironmentImagesOutput
  listProjects(input: AwsCodeBuildListProjectsInput, config: AwsConfig): AwsCodeBuildListProjectsOutput
  startBuild(input: AwsCodeBuildStartBuildInput!, config: AwsConfig): AwsCodeBuildStartBuildOutput
  stopBuild(input: AwsCodeBuildStopBuildInput!, config: AwsConfig): AwsCodeBuildStopBuildOutput
  updateProject(input: AwsCodeBuildUpdateProjectInput!, config: AwsConfig): AwsCodeBuildUpdateProjectOutput
}

input AwsCodeBuildBatchDeleteBuildsInput {
  ids: [String]!
}

type AwsCodeBuildBatchDeleteBuildsOutput {
  buildsDeleted: [String]
  buildsNotDeleted: [AwsCodeBuildBatchDeleteBuildsOutputBuildsNotDeleted]
}

type AwsCodeBuildBatchDeleteBuildsOutputBuildsNotDeleted {
  id: String
  statusCode: String
}

input AwsCodeBuildBatchGetBuildsInput {
  ids: [String]!
}

type AwsCodeBuildBatchGetBuildsOutput {
  builds: [AwsCodeBuildSb]
  buildsNotFound: [String]
}

input AwsCodeBuildBatchGetProjectsInput {
  names: [String]!
}

type AwsCodeBuildBatchGetProjectsOutput {
  projects: [AwsCodeBuildS19]
  projectsNotFound: [String]
}

input AwsCodeBuildCreateProjectInput {
  name: String!
  description: String
  source: AwsCodeBuildSkInput!
  artifacts: AwsCodeBuildS1cInput!
  cache: AwsCodeBuildSpInput
  environment: AwsCodeBuildSrInput!
  serviceRole: String
  timeoutInMinutes: Int
  encryptionKey: String
  tags: [AwsCodeBuildS1hInput]
  vpcConfig: AwsCodeBuildS11Input
  badgeEnabled: Boolean
}

type AwsCodeBuildCreateProjectOutput {
  project: AwsCodeBuildS19
}

input AwsCodeBuildCreateWebhookInput {
  projectName: String!
}

type AwsCodeBuildCreateWebhookOutput {
  webhook: AwsCodeBuildS1l
}

input AwsCodeBuildDeleteProjectInput {
  name: String!
}

input AwsCodeBuildDeleteWebhookInput {
  projectName: String!
}

input AwsCodeBuildInvalidateProjectCacheInput {
  projectName: String!
}

input AwsCodeBuildListBuildsForProjectInput {
  projectName: String!
  sortOrder: String
  nextToken: String
}

type AwsCodeBuildListBuildsForProjectOutput {
  ids: [String]
  nextToken: String
}

input AwsCodeBuildListBuildsInput {
  sortOrder: String
  nextToken: String
}

type AwsCodeBuildListBuildsOutput {
  ids: [String]
  nextToken: String
}

type AwsCodeBuildListCuratedEnvironmentImagesOutput {
  platforms: [AwsCodeBuildListCuratedEnvironmentImagesOutputPlatforms]
}

type AwsCodeBuildListCuratedEnvironmentImagesOutputPlatforms {
  platform: String
  languages: [AwsCodeBuildListCuratedEnvironmentImagesOutputPlatformsLanguages]
}

type AwsCodeBuildListCuratedEnvironmentImagesOutputPlatformsLanguages {
  language: String
  images: [AwsCodeBuildListCuratedEnvironmentImagesOutputPlatformsLanguagesImages]
}

type AwsCodeBuildListCuratedEnvironmentImagesOutputPlatformsLanguagesImages {
  name: String
  description: String
}

input AwsCodeBuildListProjectsInput {
  sortBy: String
  sortOrder: String
  nextToken: String
}

type AwsCodeBuildListProjectsOutput {
  nextToken: String
  projects: [String]
}

type AwsCodeBuildS11 {
  vpcId: String
  subnets: [String]
  securityGroupIds: [String]
}

input AwsCodeBuildS11Input {
  vpcId: String
  subnets: [String]
  securityGroupIds: [String]
}

type AwsCodeBuildS19 {
  name: String
  arn: String
  description: String
  source: AwsCodeBuildSk
  artifacts: AwsCodeBuildS1c
  cache: AwsCodeBuildSp
  environment: AwsCodeBuildSr
  serviceRole: String
  timeoutInMinutes: Int
  encryptionKey: String
  tags: [AwsCodeBuildS1h]
  created: Date
  lastModified: Date
  webhook: AwsCodeBuildS1l
  vpcConfig: AwsCodeBuildS11
  badge: AwsCodeBuildS19Badge
}

type AwsCodeBuildS19Badge {
  badgeEnabled: Boolean
  badgeRequestUrl: String
}

type AwsCodeBuildS1c {
  type: String!
  location: String
  path: String
  namespaceType: String
  name: String
  packaging: String
}

input AwsCodeBuildS1cInput {
  type: String!
  location: String
  path: String
  namespaceType: String
  name: String
  packaging: String
}

type AwsCodeBuildS1h {
  key: String
  value: String
}

input AwsCodeBuildS1hInput {
  key: String
  value: String
}

type AwsCodeBuildS1l {
  url: String
}

type AwsCodeBuildSb {
  id: String
  arn: String
  startTime: Date
  endTime: Date
  currentPhase: String
  buildStatus: String
  sourceVersion: String
  projectName: String
  phases: [AwsCodeBuildSbPhases]
  source: AwsCodeBuildSk
  artifacts: AwsCodeBuildSbArtifacts
  cache: AwsCodeBuildSp
  environment: AwsCodeBuildSr
  logs: AwsCodeBuildSbLogs
  timeoutInMinutes: Int
  buildComplete: Boolean
  initiator: String
  vpcConfig: AwsCodeBuildS11
  networkInterface: AwsCodeBuildSbNetworkInterface
}

type AwsCodeBuildSbArtifacts {
  location: String
  sha256sum: String
  md5sum: String
}

type AwsCodeBuildSbLogs {
  groupName: String
  streamName: String
  deepLink: String
}

type AwsCodeBuildSbNetworkInterface {
  subnetId: String
  networkInterfaceId: String
}

type AwsCodeBuildSbPhases {
  phaseType: String
  phaseStatus: String
  startTime: Date
  endTime: Date
  durationInSeconds: JSON
  contexts: [AwsCodeBuildSbPhasesContexts]
}

type AwsCodeBuildSbPhasesContexts {
  statusCode: String
  message: String
}

type AwsCodeBuildSk {
  type: String!
  location: String
  buildspec: String
  auth: AwsCodeBuildSkAuth
}

type AwsCodeBuildSkAuth {
  type: String!
  resource: String
}

input AwsCodeBuildSkAuthInput {
  type: String!
  resource: String
}

input AwsCodeBuildSkInput {
  type: String!
  location: String
  buildspec: String
  auth: AwsCodeBuildSkAuthInput
}

type AwsCodeBuildSp {
  type: String!
  location: String
}

input AwsCodeBuildSpInput {
  type: String!
  location: String
}

type AwsCodeBuildSr {
  type: String!
  image: String!
  computeType: String!
  environmentVariables: [AwsCodeBuildSu]
  privilegedMode: Boolean
}

input AwsCodeBuildSrInput {
  type: String!
  image: String!
  computeType: String!
  environmentVariables: [AwsCodeBuildSuInput]
  privilegedMode: Boolean
}

input AwsCodeBuildStartBuildInput {
  projectName: String!
  sourceVersion: String
  artifactsOverride: AwsCodeBuildS1cInput
  environmentVariablesOverride: [AwsCodeBuildSuInput]
  buildspecOverride: String
  timeoutInMinutesOverride: Int
}

type AwsCodeBuildStartBuildOutput {
  build: AwsCodeBuildSb
}

input AwsCodeBuildStopBuildInput {
  id: String!
}

type AwsCodeBuildStopBuildOutput {
  build: AwsCodeBuildSb
}

type AwsCodeBuildSu {
  name: String!
  value: String!
  type: String
}

input AwsCodeBuildSuInput {
  name: String!
  value: String!
  type: String
}

input AwsCodeBuildUpdateProjectInput {
  name: String!
  description: String
  source: AwsCodeBuildSkInput
  artifacts: AwsCodeBuildS1cInput
  cache: AwsCodeBuildSpInput
  environment: AwsCodeBuildSrInput
  serviceRole: String
  timeoutInMinutes: Int
  encryptionKey: String
  tags: [AwsCodeBuildS1hInput]
  vpcConfig: AwsCodeBuildS11Input
  badgeEnabled: Boolean
}

type AwsCodeBuildUpdateProjectOutput {
  project: AwsCodeBuildS19
}

# AWS CodeCommit (2015-04-13)
type AwsCodeCommit {
  batchGetRepositories(input: AwsCodeCommitBatchGetRepositoriesInput!, config: AwsConfig): AwsCodeCommitBatchGetRepositoriesOutput
  createBranch(input: AwsCodeCommitCreateBranchInput!, config: AwsConfig): JSON
  createPullRequest(input: AwsCodeCommitCreatePullRequestInput!, config: AwsConfig): AwsCodeCommitCreatePullRequestOutput
  createRepository(input: AwsCodeCommitCreateRepositoryInput!, config: AwsConfig): AwsCodeCommitCreateRepositoryOutput
  deleteBranch(input: AwsCodeCommitDeleteBranchInput!, config: AwsConfig): AwsCodeCommitDeleteBranchOutput
  deleteCommentContent(input: AwsCodeCommitDeleteCommentContentInput!, config: AwsConfig): AwsCodeCommitDeleteCommentContentOutput
  deleteRepository(input: AwsCodeCommitDeleteRepositoryInput!, config: AwsConfig): AwsCodeCommitDeleteRepositoryOutput
  describePullRequestEvents(input: AwsCodeCommitDescribePullRequestEventsInput!, config: AwsConfig): AwsCodeCommitDescribePullRequestEventsOutput
  getBlob(input: AwsCodeCommitGetBlobInput!, config: AwsConfig): AwsCodeCommitGetBlobOutput
  getBranch(input: AwsCodeCommitGetBranchInput, config: AwsConfig): AwsCodeCommitGetBranchOutput
  getComment(input: AwsCodeCommitGetCommentInput!, config: AwsConfig): AwsCodeCommitGetCommentOutput
  getCommentsForComparedCommit(input: AwsCodeCommitGetCommentsForComparedCommitInput!, config: AwsConfig): AwsCodeCommitGetCommentsForComparedCommitOutput
  getCommentsForPullRequest(input: AwsCodeCommitGetCommentsForPullRequestInput!, config: AwsConfig): AwsCodeCommitGetCommentsForPullRequestOutput
  getCommit(input: AwsCodeCommitGetCommitInput!, config: AwsConfig): AwsCodeCommitGetCommitOutput
  getDifferences(input: AwsCodeCommitGetDifferencesInput!, config: AwsConfig): AwsCodeCommitGetDifferencesOutput
  getMergeConflicts(input: AwsCodeCommitGetMergeConflictsInput!, config: AwsConfig): AwsCodeCommitGetMergeConflictsOutput
  getPullRequest(input: AwsCodeCommitGetPullRequestInput!, config: AwsConfig): AwsCodeCommitGetPullRequestOutput
  getRepository(input: AwsCodeCommitGetRepositoryInput!, config: AwsConfig): AwsCodeCommitGetRepositoryOutput
  getRepositoryTriggers(input: AwsCodeCommitGetRepositoryTriggersInput!, config: AwsConfig): AwsCodeCommitGetRepositoryTriggersOutput
  listBranches(input: AwsCodeCommitListBranchesInput!, config: AwsConfig): AwsCodeCommitListBranchesOutput
  listPullRequests(input: AwsCodeCommitListPullRequestsInput!, config: AwsConfig): AwsCodeCommitListPullRequestsOutput
  listRepositories(input: AwsCodeCommitListRepositoriesInput, config: AwsConfig): AwsCodeCommitListRepositoriesOutput
  mergePullRequestByFastForward(input: AwsCodeCommitMergePullRequestByFastForwardInput!, config: AwsConfig): AwsCodeCommitMergePullRequestByFastForwardOutput
  postCommentForComparedCommit(input: AwsCodeCommitPostCommentForComparedCommitInput!, config: AwsConfig): AwsCodeCommitPostCommentForComparedCommitOutput
  postCommentForPullRequest(input: AwsCodeCommitPostCommentForPullRequestInput!, config: AwsConfig): AwsCodeCommitPostCommentForPullRequestOutput
  postCommentReply(input: AwsCodeCommitPostCommentReplyInput!, config: AwsConfig): AwsCodeCommitPostCommentReplyOutput
  putRepositoryTriggers(input: AwsCodeCommitPutRepositoryTriggersInput!, config: AwsConfig): AwsCodeCommitPutRepositoryTriggersOutput
  testRepositoryTriggers(input: AwsCodeCommitTestRepositoryTriggersInput!, config: AwsConfig): AwsCodeCommitTestRepositoryTriggersOutput
  updateComment(input: AwsCodeCommitUpdateCommentInput!, config: AwsConfig): AwsCodeCommitUpdateCommentOutput
  updateDefaultBranch(input: AwsCodeCommitUpdateDefaultBranchInput!, config: AwsConfig): JSON
  updatePullRequestDescription(input: AwsCodeCommitUpdatePullRequestDescriptionInput!, config: AwsConfig): AwsCodeCommitUpdatePullRequestDescriptionOutput
  updatePullRequestStatus(input: AwsCodeCommitUpdatePullRequestStatusInput!, config: AwsConfig): AwsCodeCommitUpdatePullRequestStatusOutput
  updatePullRequestTitle(input: AwsCodeCommitUpdatePullRequestTitleInput!, config: AwsConfig): AwsCodeCommitUpdatePullRequestTitleOutput
  updateRepositoryDescription(input: AwsCodeCommitUpdateRepositoryDescriptionInput!, config: AwsConfig): JSON
  updateRepositoryName(input: AwsCodeCommitUpdateRepositoryNameInput!, config: AwsConfig): JSON
}

input AwsCodeCommitBatchGetRepositoriesInput {
  repositoryNames: [String]!
}

type AwsCodeCommitBatchGetRepositoriesOutput {
  repositories: [AwsCodeCommitS6]
  repositoriesNotFound: [String]
}

input AwsCodeCommitCreateBranchInput {
  repositoryName: String!
  branchName: String!
  commitId: String!
}

input AwsCodeCommitCreatePullRequestInput {
  title: String!
  description: String
  targets: [AwsCodeCommitCreatePullRequestTargetsInput]!
  clientRequestToken: String
}

type AwsCodeCommitCreatePullRequestOutput {
  pullRequest: AwsCodeCommitSr!
}

input AwsCodeCommitCreatePullRequestTargetsInput {
  repositoryName: String!
  sourceReference: String!
  destinationReference: String
}

input AwsCodeCommitCreateRepositoryInput {
  repositoryName: String!
  repositoryDescription: String
}

type AwsCodeCommitCreateRepositoryOutput {
  repositoryMetadata: AwsCodeCommitS6
}

input AwsCodeCommitDeleteBranchInput {
  repositoryName: String!
  branchName: String!
}

type AwsCodeCommitDeleteBranchOutput {
  deletedBranch: AwsCodeCommitS12
}

input AwsCodeCommitDeleteCommentContentInput {
  commentId: String!
}

type AwsCodeCommitDeleteCommentContentOutput {
  comment: AwsCodeCommitS16
}

input AwsCodeCommitDeleteRepositoryInput {
  repositoryName: String!
}

type AwsCodeCommitDeleteRepositoryOutput {
  repositoryId: String
}

input AwsCodeCommitDescribePullRequestEventsInput {
  pullRequestId: String!
  pullRequestEventType: String
  actorArn: String
  nextToken: String
  maxResults: Int
}

type AwsCodeCommitDescribePullRequestEventsOutput {
  pullRequestEvents: [AwsCodeCommitDescribePullRequestEventsOutputPullRequestEvents]!
  nextToken: String
}

type AwsCodeCommitDescribePullRequestEventsOutputPullRequestEvents {
  pullRequestId: String
  eventDate: Date
  pullRequestEventType: String
  actorArn: String
  pullRequestStatusChangedEventMetadata: AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestStatusChangedEventMetadata
  pullRequestSourceReferenceUpdatedEventMetadata: AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestSourceReferenceUpdatedEventMetadata
  pullRequestMergedStateChangedEventMetadata: AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestMergedStateChangedEventMetadata
}

type AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestMergedStateChangedEventMetadata {
  repositoryName: String
  destinationReference: String
  mergeMetadata: AwsCodeCommitSw
}

type AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestSourceReferenceUpdatedEventMetadata {
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
}

type AwsCodeCommitDescribePullRequestEventsOutputPullRequestEventsPullRequestStatusChangedEventMetadata {
  pullRequestStatus: String
}

input AwsCodeCommitGetBlobInput {
  repositoryName: String!
  blobId: String!
}

type AwsCodeCommitGetBlobOutput {
  content: JSON!
}

input AwsCodeCommitGetBranchInput {
  repositoryName: String
  branchName: String
}

type AwsCodeCommitGetBranchOutput {
  branch: AwsCodeCommitS12
}

input AwsCodeCommitGetCommentInput {
  commentId: String!
}

type AwsCodeCommitGetCommentOutput {
  comment: AwsCodeCommitS16
}

input AwsCodeCommitGetCommentsForComparedCommitInput {
  repositoryName: String!
  beforeCommitId: String
  afterCommitId: String!
  nextToken: String
  maxResults: Int
}

type AwsCodeCommitGetCommentsForComparedCommitOutput {
  commentsForComparedCommitData: [AwsCodeCommitGetCommentsForComparedCommitOutputCommentsForComparedCommitData]
  nextToken: String
}

type AwsCodeCommitGetCommentsForComparedCommitOutputCommentsForComparedCommitData {
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  beforeBlobId: String
  afterBlobId: String
  location: AwsCodeCommitS1y
  comments: [AwsCodeCommitS16]
}

input AwsCodeCommitGetCommentsForPullRequestInput {
  pullRequestId: String!
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  nextToken: String
  maxResults: Int
}

type AwsCodeCommitGetCommentsForPullRequestOutput {
  commentsForPullRequestData: [AwsCodeCommitGetCommentsForPullRequestOutputCommentsForPullRequestData]
  nextToken: String
}

type AwsCodeCommitGetCommentsForPullRequestOutputCommentsForPullRequestData {
  pullRequestId: String
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  beforeBlobId: String
  afterBlobId: String
  location: AwsCodeCommitS1y
  comments: [AwsCodeCommitS16]
}

input AwsCodeCommitGetCommitInput {
  repositoryName: String!
  commitId: String!
}

type AwsCodeCommitGetCommitOutput {
  commit: AwsCodeCommitGetCommitOutputCommit!
}

type AwsCodeCommitGetCommitOutputCommit {
  commitId: String
  treeId: String
  parents: [String]
  message: String
  author: AwsCodeCommitS2c
  committer: AwsCodeCommitS2c
  additionalData: String
}

input AwsCodeCommitGetDifferencesInput {
  repositoryName: String!
  beforeCommitSpecifier: String
  afterCommitSpecifier: String!
  beforePath: String
  afterPath: String
  MaxResults: Int
  NextToken: String
}

type AwsCodeCommitGetDifferencesOutput {
  differences: [AwsCodeCommitGetDifferencesOutputDifferences]
  NextToken: String
}

type AwsCodeCommitGetDifferencesOutputDifferences {
  beforeBlob: AwsCodeCommitS2n
  afterBlob: AwsCodeCommitS2n
  changeType: String
}

input AwsCodeCommitGetMergeConflictsInput {
  repositoryName: String!
  destinationCommitSpecifier: String!
  sourceCommitSpecifier: String!
  mergeOption: String!
}

type AwsCodeCommitGetMergeConflictsOutput {
  mergeable: Boolean!
  destinationCommitId: String!
  sourceCommitId: String!
}

input AwsCodeCommitGetPullRequestInput {
  pullRequestId: String!
}

type AwsCodeCommitGetPullRequestOutput {
  pullRequest: AwsCodeCommitSr!
}

input AwsCodeCommitGetRepositoryInput {
  repositoryName: String!
}

type AwsCodeCommitGetRepositoryOutput {
  repositoryMetadata: AwsCodeCommitS6
}

input AwsCodeCommitGetRepositoryTriggersInput {
  repositoryName: String!
}

type AwsCodeCommitGetRepositoryTriggersOutput {
  configurationId: String
  triggers: [AwsCodeCommitS31]
}

input AwsCodeCommitListBranchesInput {
  repositoryName: String!
  nextToken: String
}

type AwsCodeCommitListBranchesOutput {
  branches: [String]
  nextToken: String
}

input AwsCodeCommitListPullRequestsInput {
  repositoryName: String!
  authorArn: String
  pullRequestStatus: String
  nextToken: String
  maxResults: Int
}

type AwsCodeCommitListPullRequestsOutput {
  pullRequestIds: [String]!
  nextToken: String
}

input AwsCodeCommitListRepositoriesInput {
  nextToken: String
  sortBy: String
  order: String
}

type AwsCodeCommitListRepositoriesOutput {
  repositories: [AwsCodeCommitListRepositoriesOutputRepositories]
  nextToken: String
}

type AwsCodeCommitListRepositoriesOutputRepositories {
  repositoryName: String
  repositoryId: String
}

input AwsCodeCommitMergePullRequestByFastForwardInput {
  pullRequestId: String!
  repositoryName: String!
  sourceCommitId: String
}

type AwsCodeCommitMergePullRequestByFastForwardOutput {
  pullRequest: AwsCodeCommitSr
}

input AwsCodeCommitPostCommentForComparedCommitInput {
  repositoryName: String!
  beforeCommitId: String
  afterCommitId: String!
  location: AwsCodeCommitS1yInput
  content: String!
  clientRequestToken: String
}

type AwsCodeCommitPostCommentForComparedCommitOutput {
  repositoryName: String
  beforeCommitId: String
  afterCommitId: String
  beforeBlobId: String
  afterBlobId: String
  location: AwsCodeCommitS1y
  comment: AwsCodeCommitS16
}

input AwsCodeCommitPostCommentForPullRequestInput {
  pullRequestId: String!
  repositoryName: String!
  beforeCommitId: String!
  afterCommitId: String!
  location: AwsCodeCommitS1yInput
  content: String!
  clientRequestToken: String
}

type AwsCodeCommitPostCommentForPullRequestOutput {
  repositoryName: String
  pullRequestId: String
  beforeCommitId: String
  afterCommitId: String
  beforeBlobId: String
  afterBlobId: String
  location: AwsCodeCommitS1y
  comment: AwsCodeCommitS16
}

input AwsCodeCommitPostCommentReplyInput {
  inReplyTo: String!
  clientRequestToken: String
  content: String!
}

type AwsCodeCommitPostCommentReplyOutput {
  comment: AwsCodeCommitS16
}

input AwsCodeCommitPutRepositoryTriggersInput {
  repositoryName: String!
  triggers: [AwsCodeCommitS31Input]!
}

type AwsCodeCommitPutRepositoryTriggersOutput {
  configurationId: String
}

type AwsCodeCommitS12 {
  branchName: String
  commitId: String
}

type AwsCodeCommitS16 {
  commentId: String
  content: String
  inReplyTo: String
  creationDate: Date
  lastModifiedDate: Date
  authorArn: String
  deleted: Boolean
  clientRequestToken: String
}

type AwsCodeCommitS1y {
  filePath: String
  filePosition: JSON
  relativeFileVersion: String
}

input AwsCodeCommitS1yInput {
  filePath: String
  filePosition: JSON
  relativeFileVersion: String
}

type AwsCodeCommitS2c {
  name: String
  email: String
  date: String
}

type AwsCodeCommitS2n {
  blobId: String
  path: String
  mode: String
}

type AwsCodeCommitS31 {
  name: String!
  destinationArn: String!
  customData: String
  branches: [String]
  events: [String]!
}

input AwsCodeCommitS31Input {
  name: String!
  destinationArn: String!
  customData: String
  branches: [String]
  events: [String]!
}

type AwsCodeCommitS6 {
  accountId: String
  repositoryId: String
  repositoryName: String
  repositoryDescription: String
  defaultBranch: String
  lastModifiedDate: Date
  creationDate: Date
  cloneUrlHttp: String
  cloneUrlSsh: String
  Arn: String
}

type AwsCodeCommitSr {
  pullRequestId: String
  title: String
  description: String
  lastActivityDate: Date
  creationDate: Date
  pullRequestStatus: String
  authorArn: String
  pullRequestTargets: [AwsCodeCommitSrPullRequestTargets]
  clientRequestToken: String
}

type AwsCodeCommitSrPullRequestTargets {
  repositoryName: String
  sourceReference: String
  destinationReference: String
  destinationCommit: String
  sourceCommit: String
  mergeMetadata: AwsCodeCommitSw
}

type AwsCodeCommitSw {
  isMerged: Boolean
  mergedBy: String
}

input AwsCodeCommitTestRepositoryTriggersInput {
  repositoryName: String!
  triggers: [AwsCodeCommitS31Input]!
}

type AwsCodeCommitTestRepositoryTriggersOutput {
  successfulExecutions: [String]
  failedExecutions: [AwsCodeCommitTestRepositoryTriggersOutputFailedExecutions]
}

type AwsCodeCommitTestRepositoryTriggersOutputFailedExecutions {
  trigger: String
  failureMessage: String
}

input AwsCodeCommitUpdateCommentInput {
  commentId: String!
  content: String!
}

type AwsCodeCommitUpdateCommentOutput {
  comment: AwsCodeCommitS16
}

input AwsCodeCommitUpdateDefaultBranchInput {
  repositoryName: String!
  defaultBranchName: String!
}

input AwsCodeCommitUpdatePullRequestDescriptionInput {
  pullRequestId: String!
  description: String!
}

type AwsCodeCommitUpdatePullRequestDescriptionOutput {
  pullRequest: AwsCodeCommitSr!
}

input AwsCodeCommitUpdatePullRequestStatusInput {
  pullRequestId: String!
  pullRequestStatus: String!
}

type AwsCodeCommitUpdatePullRequestStatusOutput {
  pullRequest: AwsCodeCommitSr!
}

input AwsCodeCommitUpdatePullRequestTitleInput {
  pullRequestId: String!
  title: String!
}

type AwsCodeCommitUpdatePullRequestTitleOutput {
  pullRequest: AwsCodeCommitSr!
}

input AwsCodeCommitUpdateRepositoryDescriptionInput {
  repositoryName: String!
  repositoryDescription: String
}

input AwsCodeCommitUpdateRepositoryNameInput {
  oldName: String!
  newName: String!
}

# AWS CodeDeploy (2014-10-06)
type AwsCodeDeploy {
  addTagsToOnPremisesInstances(input: AwsCodeDeployAddTagsToOnPremisesInstancesInput!, config: AwsConfig): JSON
  batchGetApplicationRevisions(input: AwsCodeDeployBatchGetApplicationRevisionsInput!, config: AwsConfig): AwsCodeDeployBatchGetApplicationRevisionsOutput
  batchGetApplications(input: AwsCodeDeployBatchGetApplicationsInput!, config: AwsConfig): AwsCodeDeployBatchGetApplicationsOutput
  batchGetDeploymentGroups(input: AwsCodeDeployBatchGetDeploymentGroupsInput!, config: AwsConfig): AwsCodeDeployBatchGetDeploymentGroupsOutput
  batchGetDeploymentInstances(input: AwsCodeDeployBatchGetDeploymentInstancesInput!, config: AwsConfig): AwsCodeDeployBatchGetDeploymentInstancesOutput
  batchGetDeployments(input: AwsCodeDeployBatchGetDeploymentsInput!, config: AwsConfig): AwsCodeDeployBatchGetDeploymentsOutput
  batchGetOnPremisesInstances(input: AwsCodeDeployBatchGetOnPremisesInstancesInput!, config: AwsConfig): AwsCodeDeployBatchGetOnPremisesInstancesOutput
  continueDeployment(input: AwsCodeDeployContinueDeploymentInput, config: AwsConfig): JSON
  createApplication(input: AwsCodeDeployCreateApplicationInput!, config: AwsConfig): AwsCodeDeployCreateApplicationOutput
  createDeployment(input: AwsCodeDeployCreateDeploymentInput!, config: AwsConfig): AwsCodeDeployCreateDeploymentOutput
  createDeploymentConfig(input: AwsCodeDeployCreateDeploymentConfigInput!, config: AwsConfig): AwsCodeDeployCreateDeploymentConfigOutput
  createDeploymentGroup(input: AwsCodeDeployCreateDeploymentGroupInput!, config: AwsConfig): AwsCodeDeployCreateDeploymentGroupOutput
  deleteApplication(input: AwsCodeDeployDeleteApplicationInput!, config: AwsConfig): JSON
  deleteDeploymentConfig(input: AwsCodeDeployDeleteDeploymentConfigInput!, config: AwsConfig): JSON
  deleteDeploymentGroup(input: AwsCodeDeployDeleteDeploymentGroupInput!, config: AwsConfig): AwsCodeDeployDeleteDeploymentGroupOutput
  deregisterOnPremisesInstance(input: AwsCodeDeployDeregisterOnPremisesInstanceInput!, config: AwsConfig): JSON
  getApplication(input: AwsCodeDeployGetApplicationInput!, config: AwsConfig): AwsCodeDeployGetApplicationOutput
  getApplicationRevision(input: AwsCodeDeployGetApplicationRevisionInput!, config: AwsConfig): AwsCodeDeployGetApplicationRevisionOutput
  getDeployment(input: AwsCodeDeployGetDeploymentInput!, config: AwsConfig): AwsCodeDeployGetDeploymentOutput
  getDeploymentConfig(input: AwsCodeDeployGetDeploymentConfigInput!, config: AwsConfig): AwsCodeDeployGetDeploymentConfigOutput
  getDeploymentGroup(input: AwsCodeDeployGetDeploymentGroupInput!, config: AwsConfig): AwsCodeDeployGetDeploymentGroupOutput
  getDeploymentInstance(input: AwsCodeDeployGetDeploymentInstanceInput!, config: AwsConfig): AwsCodeDeployGetDeploymentInstanceOutput
  getOnPremisesInstance(input: AwsCodeDeployGetOnPremisesInstanceInput!, config: AwsConfig): AwsCodeDeployGetOnPremisesInstanceOutput
  listApplicationRevisions(input: AwsCodeDeployListApplicationRevisionsInput!, config: AwsConfig): AwsCodeDeployListApplicationRevisionsOutput
  listApplications(input: AwsCodeDeployListApplicationsInput, config: AwsConfig): AwsCodeDeployListApplicationsOutput
  listDeploymentConfigs(input: AwsCodeDeployListDeploymentConfigsInput, config: AwsConfig): AwsCodeDeployListDeploymentConfigsOutput
  listDeploymentGroups(input: AwsCodeDeployListDeploymentGroupsInput!, config: AwsConfig): AwsCodeDeployListDeploymentGroupsOutput
  listDeploymentInstances(input: AwsCodeDeployListDeploymentInstancesInput!, config: AwsConfig): AwsCodeDeployListDeploymentInstancesOutput
  listDeployments(input: AwsCodeDeployListDeploymentsInput, config: AwsConfig): AwsCodeDeployListDeploymentsOutput
  listGitHubAccountTokenNames(input: AwsCodeDeployListGitHubAccountTokenNamesInput, config: AwsConfig): AwsCodeDeployListGitHubAccountTokenNamesOutput
  listOnPremisesInstances(input: AwsCodeDeployListOnPremisesInstancesInput, config: AwsConfig): AwsCodeDeployListOnPremisesInstancesOutput
  putLifecycleEventHookExecutionStatus(input: AwsCodeDeployPutLifecycleEventHookExecutionStatusInput, config: AwsConfig): AwsCodeDeployPutLifecycleEventHookExecutionStatusOutput
  registerApplicationRevision(input: AwsCodeDeployRegisterApplicationRevisionInput!, config: AwsConfig): JSON
  registerOnPremisesInstance(input: AwsCodeDeployRegisterOnPremisesInstanceInput!, config: AwsConfig): JSON
  removeTagsFromOnPremisesInstances(input: AwsCodeDeployRemoveTagsFromOnPremisesInstancesInput!, config: AwsConfig): JSON
  skipWaitTimeForInstanceTermination(input: AwsCodeDeploySkipWaitTimeForInstanceTerminationInput, config: AwsConfig): JSON
  stopDeployment(input: AwsCodeDeployStopDeploymentInput!, config: AwsConfig): AwsCodeDeployStopDeploymentOutput
  updateApplication(input: AwsCodeDeployUpdateApplicationInput, config: AwsConfig): JSON
  updateDeploymentGroup(input: AwsCodeDeployUpdateDeploymentGroupInput!, config: AwsConfig): AwsCodeDeployUpdateDeploymentGroupOutput
}

input AwsCodeDeployAddTagsToOnPremisesInstancesInput {
  tags: [AwsCodeDeployS2Input]!
  instanceNames: [String]!
}

input AwsCodeDeployBatchGetApplicationRevisionsInput {
  applicationName: String!
  revisions: [AwsCodeDeploySbInput]!
}

type AwsCodeDeployBatchGetApplicationRevisionsOutput {
  applicationName: String
  errorMessage: String
  revisions: [AwsCodeDeployBatchGetApplicationRevisionsOutputRevisions]
}

type AwsCodeDeployBatchGetApplicationRevisionsOutputRevisions {
  revisionLocation: AwsCodeDeploySb
  genericRevisionInfo: AwsCodeDeploySt
}

input AwsCodeDeployBatchGetApplicationsInput {
  applicationNames: [String]!
}

type AwsCodeDeployBatchGetApplicationsOutput {
  applicationsInfo: [AwsCodeDeployS12]
}

input AwsCodeDeployBatchGetDeploymentGroupsInput {
  applicationName: String!
  deploymentGroupNames: [String]!
}

type AwsCodeDeployBatchGetDeploymentGroupsOutput {
  deploymentGroupsInfo: [AwsCodeDeployS1a]
  errorMessage: String
}

input AwsCodeDeployBatchGetDeploymentInstancesInput {
  deploymentId: String!
  instanceIds: [String]!
}

type AwsCodeDeployBatchGetDeploymentInstancesOutput {
  instancesSummary: [AwsCodeDeployS2v]
  errorMessage: String
}

input AwsCodeDeployBatchGetDeploymentsInput {
  deploymentIds: [String]!
}

type AwsCodeDeployBatchGetDeploymentsOutput {
  deploymentsInfo: [AwsCodeDeployS3b]
}

input AwsCodeDeployBatchGetOnPremisesInstancesInput {
  instanceNames: [String]!
}

type AwsCodeDeployBatchGetOnPremisesInstancesOutput {
  instanceInfos: [AwsCodeDeployS3q]
}

input AwsCodeDeployContinueDeploymentInput {
  deploymentId: String
}

input AwsCodeDeployCreateApplicationInput {
  applicationName: String!
  computePlatform: String
}

type AwsCodeDeployCreateApplicationOutput {
  applicationId: String
}

input AwsCodeDeployCreateDeploymentConfigInput {
  deploymentConfigName: String!
  minimumHealthyHosts: AwsCodeDeployS40Input!
  trafficRoutingConfig: AwsCodeDeployS43Input
  computePlatform: String
}

type AwsCodeDeployCreateDeploymentConfigOutput {
  deploymentConfigId: String
}

input AwsCodeDeployCreateDeploymentGroupInput {
  applicationName: String!
  deploymentGroupName: String!
  deploymentConfigName: String
  ec2TagFilters: [AwsCodeDeployS1dInput]
  onPremisesInstanceTagFilters: [AwsCodeDeployS1gInput]
  autoScalingGroups: [String]
  serviceRoleArn: String!
  triggerConfigurations: [AwsCodeDeployS1oInput]
  alarmConfiguration: AwsCodeDeployS1uInput
  autoRollbackConfiguration: AwsCodeDeployS1yInput
  deploymentStyle: AwsCodeDeployS21Input
  blueGreenDeploymentConfiguration: AwsCodeDeployS24Input
  loadBalancerInfo: AwsCodeDeployS2cInput
  ec2TagSet: AwsCodeDeployS2mInput
  onPremisesTagSet: AwsCodeDeployS2oInput
}

type AwsCodeDeployCreateDeploymentGroupOutput {
  deploymentGroupId: String
}

input AwsCodeDeployCreateDeploymentInput {
  applicationName: String!
  deploymentGroupName: String
  revision: AwsCodeDeploySbInput
  deploymentConfigName: String
  description: String
  ignoreApplicationStopFailures: Boolean
  targetInstances: AwsCodeDeployS3iInput
  autoRollbackConfiguration: AwsCodeDeployS1yInput
  updateOutdatedInstancesOnly: Boolean
  fileExistsBehavior: String
}

type AwsCodeDeployCreateDeploymentOutput {
  deploymentId: String
}

input AwsCodeDeployDeleteApplicationInput {
  applicationName: String!
}

input AwsCodeDeployDeleteDeploymentConfigInput {
  deploymentConfigName: String!
}

input AwsCodeDeployDeleteDeploymentGroupInput {
  applicationName: String!
  deploymentGroupName: String!
}

type AwsCodeDeployDeleteDeploymentGroupOutput {
  hooksNotCleanedUp: [AwsCodeDeployS1j]
}

input AwsCodeDeployDeregisterOnPremisesInstanceInput {
  instanceName: String!
}

input AwsCodeDeployGetApplicationInput {
  applicationName: String!
}

type AwsCodeDeployGetApplicationOutput {
  application: AwsCodeDeployS12
}

input AwsCodeDeployGetApplicationRevisionInput {
  applicationName: String!
  revision: AwsCodeDeploySbInput!
}

type AwsCodeDeployGetApplicationRevisionOutput {
  applicationName: String
  revision: AwsCodeDeploySb
  revisionInfo: AwsCodeDeploySt
}

input AwsCodeDeployGetDeploymentConfigInput {
  deploymentConfigName: String!
}

type AwsCodeDeployGetDeploymentConfigOutput {
  deploymentConfigInfo: AwsCodeDeployGetDeploymentConfigOutputDeploymentConfigInfo
}

type AwsCodeDeployGetDeploymentConfigOutputDeploymentConfigInfo {
  deploymentConfigId: String
  deploymentConfigName: String
  minimumHealthyHosts: AwsCodeDeployS40
  createTime: Date
  computePlatform: String
  trafficRoutingConfig: AwsCodeDeployS43
}

input AwsCodeDeployGetDeploymentGroupInput {
  applicationName: String!
  deploymentGroupName: String!
}

type AwsCodeDeployGetDeploymentGroupOutput {
  deploymentGroupInfo: AwsCodeDeployS1a
}

input AwsCodeDeployGetDeploymentInput {
  deploymentId: String!
}

input AwsCodeDeployGetDeploymentInstanceInput {
  deploymentId: String!
  instanceId: String!
}

type AwsCodeDeployGetDeploymentInstanceOutput {
  instanceSummary: AwsCodeDeployS2v
}

type AwsCodeDeployGetDeploymentOutput {
  deploymentInfo: AwsCodeDeployS3b
}

input AwsCodeDeployGetOnPremisesInstanceInput {
  instanceName: String!
}

type AwsCodeDeployGetOnPremisesInstanceOutput {
  instanceInfo: AwsCodeDeployS3q
}

input AwsCodeDeployListApplicationRevisionsInput {
  applicationName: String!
  sortBy: String
  sortOrder: String
  s3Bucket: String
  s3KeyPrefix: String
  deployed: String
  nextToken: String
}

type AwsCodeDeployListApplicationRevisionsOutput {
  revisions: [AwsCodeDeploySb]
  nextToken: String
}

input AwsCodeDeployListApplicationsInput {
  nextToken: String
}

type AwsCodeDeployListApplicationsOutput {
  applications: [String]
  nextToken: String
}

input AwsCodeDeployListDeploymentConfigsInput {
  nextToken: String
}

type AwsCodeDeployListDeploymentConfigsOutput {
  deploymentConfigsList: [String]
  nextToken: String
}

input AwsCodeDeployListDeploymentGroupsInput {
  applicationName: String!
  nextToken: String
}

type AwsCodeDeployListDeploymentGroupsOutput {
  applicationName: String
  deploymentGroups: [String]
  nextToken: String
}

input AwsCodeDeployListDeploymentInstancesInput {
  deploymentId: String!
  nextToken: String
  instanceStatusFilter: [String]
  instanceTypeFilter: [String]
}

type AwsCodeDeployListDeploymentInstancesOutput {
  instancesList: [String]
  nextToken: String
}

input AwsCodeDeployListDeploymentsCreateTimeRangeInput {
  start: Date
  end: Date
}

input AwsCodeDeployListDeploymentsInput {
  applicationName: String
  deploymentGroupName: String
  includeOnlyStatuses: [String]
  createTimeRange: AwsCodeDeployListDeploymentsCreateTimeRangeInput
  nextToken: String
}

type AwsCodeDeployListDeploymentsOutput {
  deployments: [String]
  nextToken: String
}

input AwsCodeDeployListGitHubAccountTokenNamesInput {
  nextToken: String
}

type AwsCodeDeployListGitHubAccountTokenNamesOutput {
  tokenNameList: [String]
  nextToken: String
}

input AwsCodeDeployListOnPremisesInstancesInput {
  registrationStatus: String
  tagFilters: [AwsCodeDeployS1gInput]
  nextToken: String
}

type AwsCodeDeployListOnPremisesInstancesOutput {
  instanceNames: [String]
  nextToken: String
}

input AwsCodeDeployPutLifecycleEventHookExecutionStatusInput {
  deploymentId: String
  lifecycleEventHookExecutionId: String
  status: String
}

type AwsCodeDeployPutLifecycleEventHookExecutionStatusOutput {
  lifecycleEventHookExecutionId: String
}

input AwsCodeDeployRegisterApplicationRevisionInput {
  applicationName: String!
  description: String
  revision: AwsCodeDeploySbInput!
}

input AwsCodeDeployRegisterOnPremisesInstanceInput {
  instanceName: String!
  iamSessionArn: String
  iamUserArn: String
}

input AwsCodeDeployRemoveTagsFromOnPremisesInstancesInput {
  tags: [AwsCodeDeployS2Input]!
  instanceNames: [String]!
}

type AwsCodeDeployS12 {
  applicationId: String
  applicationName: String
  createTime: Date
  linkedToGitHub: Boolean
  gitHubAccountName: String
  computePlatform: String
}

type AwsCodeDeployS1a {
  applicationName: String
  deploymentGroupId: String
  deploymentGroupName: String
  deploymentConfigName: String
  ec2TagFilters: [AwsCodeDeployS1d]
  onPremisesInstanceTagFilters: [AwsCodeDeployS1g]
  autoScalingGroups: [AwsCodeDeployS1j]
  serviceRoleArn: String
  targetRevision: AwsCodeDeploySb
  triggerConfigurations: [AwsCodeDeployS1o]
  alarmConfiguration: AwsCodeDeployS1u
  autoRollbackConfiguration: AwsCodeDeployS1y
  deploymentStyle: AwsCodeDeployS21
  blueGreenDeploymentConfiguration: AwsCodeDeployS24
  loadBalancerInfo: AwsCodeDeployS2c
  lastSuccessfulDeployment: AwsCodeDeployS2j
  lastAttemptedDeployment: AwsCodeDeployS2j
  ec2TagSet: AwsCodeDeployS2m
  onPremisesTagSet: AwsCodeDeployS2o
  computePlatform: String
}

type AwsCodeDeployS1d {
  Key: String
  Value: String
  Type: String
}

input AwsCodeDeployS1dInput {
  Key: String
  Value: String
  Type: String
}

type AwsCodeDeployS1g {
  Key: String
  Value: String
  Type: String
}

input AwsCodeDeployS1gInput {
  Key: String
  Value: String
  Type: String
}

type AwsCodeDeployS1j {
  name: String
  hook: String
}

type AwsCodeDeployS1o {
  triggerName: String
  triggerTargetArn: String
  triggerEvents: [String]
}

input AwsCodeDeployS1oInput {
  triggerName: String
  triggerTargetArn: String
  triggerEvents: [String]
}

type AwsCodeDeployS1u {
  enabled: Boolean
  ignorePollAlarmFailure: Boolean
  alarms: [AwsCodeDeployS1uAlarms]
}

type AwsCodeDeployS1uAlarms {
  name: String
}

input AwsCodeDeployS1uAlarmsInput {
  name: String
}

input AwsCodeDeployS1uInput {
  enabled: Boolean
  ignorePollAlarmFailure: Boolean
  alarms: [AwsCodeDeployS1uAlarmsInput]
}

type AwsCodeDeployS1y {
  enabled: Boolean
  events: [String]
}

input AwsCodeDeployS1yInput {
  enabled: Boolean
  events: [String]
}

type AwsCodeDeployS2 {
  Key: String
  Value: String
}

type AwsCodeDeployS21 {
  deploymentType: String
  deploymentOption: String
}

input AwsCodeDeployS21Input {
  deploymentType: String
  deploymentOption: String
}

type AwsCodeDeployS24 {
  terminateBlueInstancesOnDeploymentSuccess: AwsCodeDeployS24TerminateBlueInstancesOnDeploymentSuccess
  deploymentReadyOption: AwsCodeDeployS24DeploymentReadyOption
  greenFleetProvisioningOption: AwsCodeDeployS24GreenFleetProvisioningOption
}

type AwsCodeDeployS24DeploymentReadyOption {
  actionOnTimeout: String
  waitTimeInMinutes: Int
}

input AwsCodeDeployS24DeploymentReadyOptionInput {
  actionOnTimeout: String
  waitTimeInMinutes: Int
}

type AwsCodeDeployS24GreenFleetProvisioningOption {
  action: String
}

input AwsCodeDeployS24GreenFleetProvisioningOptionInput {
  action: String
}

input AwsCodeDeployS24Input {
  terminateBlueInstancesOnDeploymentSuccess: AwsCodeDeployS24TerminateBlueInstancesOnDeploymentSuccessInput
  deploymentReadyOption: AwsCodeDeployS24DeploymentReadyOptionInput
  greenFleetProvisioningOption: AwsCodeDeployS24GreenFleetProvisioningOptionInput
}

type AwsCodeDeployS24TerminateBlueInstancesOnDeploymentSuccess {
  action: String
  terminationWaitTimeInMinutes: Int
}

input AwsCodeDeployS24TerminateBlueInstancesOnDeploymentSuccessInput {
  action: String
  terminationWaitTimeInMinutes: Int
}

type AwsCodeDeployS2c {
  elbInfoList: [AwsCodeDeployS2cElbInfoList]
  targetGroupInfoList: [AwsCodeDeployS2cTargetGroupInfoList]
}

type AwsCodeDeployS2cElbInfoList {
  name: String
}

input AwsCodeDeployS2cElbInfoListInput {
  name: String
}

input AwsCodeDeployS2cInput {
  elbInfoList: [AwsCodeDeployS2cElbInfoListInput]
  targetGroupInfoList: [AwsCodeDeployS2cTargetGroupInfoListInput]
}

type AwsCodeDeployS2cTargetGroupInfoList {
  name: String
}

input AwsCodeDeployS2cTargetGroupInfoListInput {
  name: String
}

input AwsCodeDeployS2Input {
  Key: String
  Value: String
}

type AwsCodeDeployS2j {
  deploymentId: String
  status: String
  endTime: Date
  createTime: Date
}

type AwsCodeDeployS2m {
  ec2TagSetList: [[AwsCodeDeployS1d]]
}

input AwsCodeDeployS2mInput {
  ec2TagSetList: [[AwsCodeDeployS1dInput]]
}

type AwsCodeDeployS2o {
  onPremisesTagSetList: [[AwsCodeDeployS1g]]
}

input AwsCodeDeployS2oInput {
  onPremisesTagSetList: [[AwsCodeDeployS1gInput]]
}

type AwsCodeDeployS2v {
  deploymentId: String
  instanceId: String
  status: String
  lastUpdatedAt: Date
  lifecycleEvents: [AwsCodeDeployS2vLifecycleEvents]
  instanceType: String
}

type AwsCodeDeployS2vLifecycleEvents {
  lifecycleEventName: String
  diagnostics: AwsCodeDeployS2vLifecycleEventsDiagnostics
  startTime: Date
  endTime: Date
  status: String
}

type AwsCodeDeployS2vLifecycleEventsDiagnostics {
  errorCode: String
  scriptName: String
  message: String
  logTail: String
}

type AwsCodeDeployS3b {
  applicationName: String
  deploymentGroupName: String
  deploymentConfigName: String
  deploymentId: String
  previousRevision: AwsCodeDeploySb
  revision: AwsCodeDeploySb
  status: String
  errorInformation: AwsCodeDeployS3bErrorInformation
  createTime: Date
  startTime: Date
  completeTime: Date
  deploymentOverview: AwsCodeDeployS3bDeploymentOverview
  description: String
  creator: String
  ignoreApplicationStopFailures: Boolean
  autoRollbackConfiguration: AwsCodeDeployS1y
  updateOutdatedInstancesOnly: Boolean
  rollbackInfo: AwsCodeDeployS3bRollbackInfo
  deploymentStyle: AwsCodeDeployS21
  targetInstances: AwsCodeDeployS3i
  instanceTerminationWaitTimeStarted: Boolean
  blueGreenDeploymentConfiguration: AwsCodeDeployS24
  loadBalancerInfo: AwsCodeDeployS2c
  additionalDeploymentStatusInfo: String
  fileExistsBehavior: String
  deploymentStatusMessages: [String]
  computePlatform: String
}

type AwsCodeDeployS3bDeploymentOverview {
  Pending: JSON
  InProgress: JSON
  Succeeded: JSON
  Failed: JSON
  Skipped: JSON
  Ready: JSON
}

type AwsCodeDeployS3bErrorInformation {
  code: String
  message: String
}

type AwsCodeDeployS3bRollbackInfo {
  rollbackDeploymentId: String
  rollbackTriggeringDeploymentId: String
  rollbackMessage: String
}

type AwsCodeDeployS3i {
  tagFilters: [AwsCodeDeployS1d]
  autoScalingGroups: [String]
  ec2TagSet: AwsCodeDeployS2m
}

input AwsCodeDeployS3iInput {
  tagFilters: [AwsCodeDeployS1dInput]
  autoScalingGroups: [String]
  ec2TagSet: AwsCodeDeployS2mInput
}

type AwsCodeDeployS3q {
  instanceName: String
  iamSessionArn: String
  iamUserArn: String
  instanceArn: String
  registerTime: Date
  deregisterTime: Date
  tags: [AwsCodeDeployS2]
}

type AwsCodeDeployS40 {
  value: Int
  type: String
}

input AwsCodeDeployS40Input {
  value: Int
  type: String
}

type AwsCodeDeployS43 {
  type: String
  timeBasedCanary: AwsCodeDeployS43TimeBasedCanary
  timeBasedLinear: AwsCodeDeployS43TimeBasedLinear
}

input AwsCodeDeployS43Input {
  type: String
  timeBasedCanary: AwsCodeDeployS43TimeBasedCanaryInput
  timeBasedLinear: AwsCodeDeployS43TimeBasedLinearInput
}

type AwsCodeDeployS43TimeBasedCanary {
  canaryPercentage: Int
  canaryInterval: Int
}

input AwsCodeDeployS43TimeBasedCanaryInput {
  canaryPercentage: Int
  canaryInterval: Int
}

type AwsCodeDeployS43TimeBasedLinear {
  linearPercentage: Int
  linearInterval: Int
}

input AwsCodeDeployS43TimeBasedLinearInput {
  linearPercentage: Int
  linearInterval: Int
}

type AwsCodeDeploySb {
  revisionType: String
  s3Location: AwsCodeDeploySbS3Location
  gitHubLocation: AwsCodeDeploySbGitHubLocation
  string: AwsCodeDeploySbString
}

type AwsCodeDeploySbGitHubLocation {
  repository: String
  commitId: String
}

input AwsCodeDeploySbGitHubLocationInput {
  repository: String
  commitId: String
}

input AwsCodeDeploySbInput {
  revisionType: String
  s3Location: AwsCodeDeploySbS3LocationInput
  gitHubLocation: AwsCodeDeploySbGitHubLocationInput
  string: AwsCodeDeploySbStringInput
}

type AwsCodeDeploySbS3Location {
  bucket: String
  key: String
  bundleType: String
  version: String
  eTag: String
}

input AwsCodeDeploySbS3LocationInput {
  bucket: String
  key: String
  bundleType: String
  version: String
  eTag: String
}

type AwsCodeDeploySbString {
  content: String
  sha256: String
}

input AwsCodeDeploySbStringInput {
  content: String
  sha256: String
}

input AwsCodeDeploySkipWaitTimeForInstanceTerminationInput {
  deploymentId: String
}

type AwsCodeDeploySt {
  description: String
  deploymentGroups: [String]
  firstUsedTime: Date
  lastUsedTime: Date
  registerTime: Date
}

input AwsCodeDeployStopDeploymentInput {
  deploymentId: String!
  autoRollbackEnabled: Boolean
}

type AwsCodeDeployStopDeploymentOutput {
  status: String
  statusMessage: String
}

input AwsCodeDeployUpdateApplicationInput {
  applicationName: String
  newApplicationName: String
}

input AwsCodeDeployUpdateDeploymentGroupInput {
  applicationName: String!
  currentDeploymentGroupName: String!
  newDeploymentGroupName: String
  deploymentConfigName: String
  ec2TagFilters: [AwsCodeDeployS1dInput]
  onPremisesInstanceTagFilters: [AwsCodeDeployS1gInput]
  autoScalingGroups: [String]
  serviceRoleArn: String
  triggerConfigurations: [AwsCodeDeployS1oInput]
  alarmConfiguration: AwsCodeDeployS1uInput
  autoRollbackConfiguration: AwsCodeDeployS1yInput
  deploymentStyle: AwsCodeDeployS21Input
  blueGreenDeploymentConfiguration: AwsCodeDeployS24Input
  loadBalancerInfo: AwsCodeDeployS2cInput
  ec2TagSet: AwsCodeDeployS2mInput
  onPremisesTagSet: AwsCodeDeployS2oInput
}

type AwsCodeDeployUpdateDeploymentGroupOutput {
  hooksNotCleanedUp: [AwsCodeDeployS1j]
}

# AWS CodePipeline (2015-07-09)
type AwsCodePipeline {
  acknowledgeJob(input: AwsCodePipelineAcknowledgeJobInput!, config: AwsConfig): AwsCodePipelineAcknowledgeJobOutput
  acknowledgeThirdPartyJob(input: AwsCodePipelineAcknowledgeThirdPartyJobInput!, config: AwsConfig): AwsCodePipelineAcknowledgeThirdPartyJobOutput
  createCustomActionType(input: AwsCodePipelineCreateCustomActionTypeInput!, config: AwsConfig): AwsCodePipelineCreateCustomActionTypeOutput
  createPipeline(input: AwsCodePipelineCreatePipelineInput!, config: AwsConfig): AwsCodePipelineCreatePipelineOutput
  deleteCustomActionType(input: AwsCodePipelineDeleteCustomActionTypeInput!, config: AwsConfig): JSON
  deletePipeline(input: AwsCodePipelineDeletePipelineInput!, config: AwsConfig): JSON
  disableStageTransition(input: AwsCodePipelineDisableStageTransitionInput!, config: AwsConfig): JSON
  enableStageTransition(input: AwsCodePipelineEnableStageTransitionInput!, config: AwsConfig): JSON
  getJobDetails(input: AwsCodePipelineGetJobDetailsInput!, config: AwsConfig): AwsCodePipelineGetJobDetailsOutput
  getPipeline(input: AwsCodePipelineGetPipelineInput!, config: AwsConfig): AwsCodePipelineGetPipelineOutput
  getPipelineExecution(input: AwsCodePipelineGetPipelineExecutionInput!, config: AwsConfig): AwsCodePipelineGetPipelineExecutionOutput
  getPipelineState(input: AwsCodePipelineGetPipelineStateInput!, config: AwsConfig): AwsCodePipelineGetPipelineStateOutput
  getThirdPartyJobDetails(input: AwsCodePipelineGetThirdPartyJobDetailsInput!, config: AwsConfig): AwsCodePipelineGetThirdPartyJobDetailsOutput
  listActionTypes(input: AwsCodePipelineListActionTypesInput, config: AwsConfig): AwsCodePipelineListActionTypesOutput
  listPipelineExecutions(input: AwsCodePipelineListPipelineExecutionsInput!, config: AwsConfig): AwsCodePipelineListPipelineExecutionsOutput
  listPipelines(input: AwsCodePipelineListPipelinesInput, config: AwsConfig): AwsCodePipelineListPipelinesOutput
  pollForJobs(input: AwsCodePipelinePollForJobsInput!, config: AwsConfig): AwsCodePipelinePollForJobsOutput
  pollForThirdPartyJobs(input: AwsCodePipelinePollForThirdPartyJobsInput!, config: AwsConfig): AwsCodePipelinePollForThirdPartyJobsOutput
  putActionRevision(input: AwsCodePipelinePutActionRevisionInput!, config: AwsConfig): AwsCodePipelinePutActionRevisionOutput
  putApprovalResult(input: AwsCodePipelinePutApprovalResultInput!, config: AwsConfig): AwsCodePipelinePutApprovalResultOutput
  putJobFailureResult(input: AwsCodePipelinePutJobFailureResultInput!, config: AwsConfig): JSON
  putJobSuccessResult(input: AwsCodePipelinePutJobSuccessResultInput!, config: AwsConfig): JSON
  putThirdPartyJobFailureResult(input: AwsCodePipelinePutThirdPartyJobFailureResultInput!, config: AwsConfig): JSON
  putThirdPartyJobSuccessResult(input: AwsCodePipelinePutThirdPartyJobSuccessResultInput!, config: AwsConfig): JSON
  retryStageExecution(input: AwsCodePipelineRetryStageExecutionInput!, config: AwsConfig): AwsCodePipelineRetryStageExecutionOutput
  startPipelineExecution(input: AwsCodePipelineStartPipelineExecutionInput!, config: AwsConfig): AwsCodePipelineStartPipelineExecutionOutput
  updatePipeline(input: AwsCodePipelineUpdatePipelineInput!, config: AwsConfig): AwsCodePipelineUpdatePipelineOutput
}

input AwsCodePipelineAcknowledgeJobInput {
  jobId: String!
  nonce: String!
}

type AwsCodePipelineAcknowledgeJobOutput {
  status: String
}

input AwsCodePipelineAcknowledgeThirdPartyJobInput {
  jobId: String!
  nonce: String!
  clientToken: String!
}

type AwsCodePipelineAcknowledgeThirdPartyJobOutput {
  status: String
}

input AwsCodePipelineCreateCustomActionTypeInput {
  category: String!
  provider: String!
  version: String!
  settings: AwsCodePipelineSeInput
  configurationProperties: [AwsCodePipelineShInput]
  inputArtifactDetails: AwsCodePipelineSnInput!
  outputArtifactDetails: AwsCodePipelineSnInput!
}

type AwsCodePipelineCreateCustomActionTypeOutput {
  actionType: AwsCodePipelineSr!
}

input AwsCodePipelineCreatePipelineInput {
  pipeline: AwsCodePipelineSvInput!
}

type AwsCodePipelineCreatePipelineOutput {
  pipeline: AwsCodePipelineSv
}

input AwsCodePipelineDeleteCustomActionTypeInput {
  category: String!
  provider: String!
  version: String!
}

input AwsCodePipelineDeletePipelineInput {
  name: String!
}

input AwsCodePipelineDisableStageTransitionInput {
  pipelineName: String!
  stageName: String!
  transitionType: String!
  reason: String!
}

input AwsCodePipelineEnableStageTransitionInput {
  pipelineName: String!
  stageName: String!
  transitionType: String!
}

input AwsCodePipelineGetJobDetailsInput {
  jobId: String!
}

type AwsCodePipelineGetJobDetailsOutput {
  jobDetails: AwsCodePipelineGetJobDetailsOutputJobDetails
}

type AwsCodePipelineGetJobDetailsOutputJobDetails {
  id: String
  data: AwsCodePipelineS1x
  accountId: String
}

input AwsCodePipelineGetPipelineExecutionInput {
  pipelineName: String!
  pipelineExecutionId: String!
}

type AwsCodePipelineGetPipelineExecutionOutput {
  pipelineExecution: AwsCodePipelineGetPipelineExecutionOutputPipelineExecution
}

type AwsCodePipelineGetPipelineExecutionOutputPipelineExecution {
  pipelineName: String
  pipelineVersion: Int
  pipelineExecutionId: String
  status: String
  artifactRevisions: [AwsCodePipelineGetPipelineExecutionOutputPipelineExecutionArtifactRevisions]
}

type AwsCodePipelineGetPipelineExecutionOutputPipelineExecutionArtifactRevisions {
  name: String
  revisionId: String
  revisionChangeIdentifier: String
  revisionSummary: String
  created: Date
  revisionUrl: String
}

input AwsCodePipelineGetPipelineInput {
  name: String!
  version: Int
}

type AwsCodePipelineGetPipelineOutput {
  pipeline: AwsCodePipelineSv
  metadata: AwsCodePipelineGetPipelineOutputMetadata
}

type AwsCodePipelineGetPipelineOutputMetadata {
  pipelineArn: String
  created: Date
  updated: Date
}

input AwsCodePipelineGetPipelineStateInput {
  name: String!
}

type AwsCodePipelineGetPipelineStateOutput {
  pipelineName: String
  pipelineVersion: Int
  stageStates: [AwsCodePipelineGetPipelineStateOutputStageStates]
  created: Date
  updated: Date
}

type AwsCodePipelineGetPipelineStateOutputStageStates {
  stageName: String
  inboundTransitionState: AwsCodePipelineGetPipelineStateOutputStageStatesInboundTransitionState
  actionStates: [AwsCodePipelineGetPipelineStateOutputStageStatesActionStates]
  latestExecution: AwsCodePipelineGetPipelineStateOutputStageStatesLatestExecution
}

type AwsCodePipelineGetPipelineStateOutputStageStatesActionStates {
  actionName: String
  currentRevision: AwsCodePipelineS34
  latestExecution: AwsCodePipelineGetPipelineStateOutputStageStatesActionStatesLatestExecution
  entityUrl: String
  revisionUrl: String
}

type AwsCodePipelineGetPipelineStateOutputStageStatesActionStatesLatestExecution {
  status: String
  summary: String
  lastStatusChange: Date
  token: String
  lastUpdatedBy: String
  externalExecutionId: String
  externalExecutionUrl: String
  percentComplete: Int
  errorDetails: AwsCodePipelineGetPipelineStateOutputStageStatesActionStatesLatestExecutionErrorDetails
}

type AwsCodePipelineGetPipelineStateOutputStageStatesActionStatesLatestExecutionErrorDetails {
  code: String
  message: String
}

type AwsCodePipelineGetPipelineStateOutputStageStatesInboundTransitionState {
  enabled: Boolean
  lastChangedBy: String
  lastChangedAt: Date
  disabledReason: String
}

type AwsCodePipelineGetPipelineStateOutputStageStatesLatestExecution {
  pipelineExecutionId: String!
  status: String!
}

input AwsCodePipelineGetThirdPartyJobDetailsInput {
  jobId: String!
  clientToken: String!
}

type AwsCodePipelineGetThirdPartyJobDetailsOutput {
  jobDetails: AwsCodePipelineGetThirdPartyJobDetailsOutputJobDetails
}

type AwsCodePipelineGetThirdPartyJobDetailsOutputJobDetails {
  id: String
  data: AwsCodePipelineGetThirdPartyJobDetailsOutputJobDetailsData
  nonce: String
}

type AwsCodePipelineGetThirdPartyJobDetailsOutputJobDetailsData {
  actionTypeId: AwsCodePipelineSs
  actionConfiguration: AwsCodePipelineS1y
  pipelineContext: AwsCodePipelineS1z
  inputArtifacts: [AwsCodePipelineS22]
  outputArtifacts: [AwsCodePipelineS22]
  artifactCredentials: AwsCodePipelineS2a
  continuationToken: String
  encryptionKey: AwsCodePipelineS11
}

input AwsCodePipelineListActionTypesInput {
  actionOwnerFilter: String
  nextToken: String
}

type AwsCodePipelineListActionTypesOutput {
  actionTypes: [AwsCodePipelineSr]!
  nextToken: String
}

input AwsCodePipelineListPipelineExecutionsInput {
  pipelineName: String!
  maxResults: Int
  nextToken: String
}

type AwsCodePipelineListPipelineExecutionsOutput {
  pipelineExecutionSummaries: [AwsCodePipelineListPipelineExecutionsOutputPipelineExecutionSummaries]
  nextToken: String
}

type AwsCodePipelineListPipelineExecutionsOutputPipelineExecutionSummaries {
  pipelineExecutionId: String
  status: String
  startTime: Date
  lastUpdateTime: Date
}

input AwsCodePipelineListPipelinesInput {
  nextToken: String
}

type AwsCodePipelineListPipelinesOutput {
  pipelines: [AwsCodePipelineListPipelinesOutputPipelines]
  nextToken: String
}

type AwsCodePipelineListPipelinesOutputPipelines {
  name: String
  version: Int
  created: Date
  updated: Date
}

input AwsCodePipelinePollForJobsInput {
  actionTypeId: AwsCodePipelineSsInput!
  maxBatchSize: Int
  queryParam: JSON
}

type AwsCodePipelinePollForJobsOutput {
  jobs: [AwsCodePipelinePollForJobsOutputJobs]
}

type AwsCodePipelinePollForJobsOutputJobs {
  id: String
  data: AwsCodePipelineS1x
  nonce: String
  accountId: String
}

input AwsCodePipelinePollForThirdPartyJobsInput {
  actionTypeId: AwsCodePipelineSsInput!
  maxBatchSize: Int
}

type AwsCodePipelinePollForThirdPartyJobsOutput {
  jobs: [AwsCodePipelinePollForThirdPartyJobsOutputJobs]
}

type AwsCodePipelinePollForThirdPartyJobsOutputJobs {
  clientId: String
  jobId: String
}

input AwsCodePipelinePutActionRevisionInput {
  pipelineName: String!
  stageName: String!
  actionName: String!
  actionRevision: AwsCodePipelineS34Input!
}

type AwsCodePipelinePutActionRevisionOutput {
  newRevision: Boolean
  pipelineExecutionId: String
}

input AwsCodePipelinePutApprovalResultInput {
  pipelineName: String!
  stageName: String!
  actionName: String!
  result: AwsCodePipelinePutApprovalResultResultInput!
  token: String!
}

type AwsCodePipelinePutApprovalResultOutput {
  approvedAt: Date
}

input AwsCodePipelinePutApprovalResultResultInput {
  summary: String!
  status: String!
}

input AwsCodePipelinePutJobFailureResultInput {
  jobId: String!
  failureDetails: AwsCodePipelineS4jInput!
}

input AwsCodePipelinePutJobSuccessResultInput {
  jobId: String!
  currentRevision: AwsCodePipelineS4mInput
  continuationToken: String
  executionDetails: AwsCodePipelineS4oInput
}

input AwsCodePipelinePutThirdPartyJobFailureResultInput {
  jobId: String!
  clientToken: String!
  failureDetails: AwsCodePipelineS4jInput!
}

input AwsCodePipelinePutThirdPartyJobSuccessResultInput {
  jobId: String!
  clientToken: String!
  currentRevision: AwsCodePipelineS4mInput
  continuationToken: String
  executionDetails: AwsCodePipelineS4oInput
}

input AwsCodePipelineRetryStageExecutionInput {
  pipelineName: String!
  stageName: String!
  pipelineExecutionId: String!
  retryMode: String!
}

type AwsCodePipelineRetryStageExecutionOutput {
  pipelineExecutionId: String
}

type AwsCodePipelineS11 {
  id: String!
  type: String!
}

input AwsCodePipelineS11Input {
  id: String!
  type: String!
}

type AwsCodePipelineS1x {
  actionTypeId: AwsCodePipelineSs
  actionConfiguration: AwsCodePipelineS1y
  pipelineContext: AwsCodePipelineS1z
  inputArtifacts: [AwsCodePipelineS22]
  outputArtifacts: [AwsCodePipelineS22]
  artifactCredentials: AwsCodePipelineS2a
  continuationToken: String
  encryptionKey: AwsCodePipelineS11
}

type AwsCodePipelineS1y {
  configuration: JSON
}

type AwsCodePipelineS1z {
  pipelineName: String
  stage: AwsCodePipelineS1zStage
  action: AwsCodePipelineS1zAction
}

type AwsCodePipelineS1zAction {
  name: String
}

type AwsCodePipelineS1zStage {
  name: String
}

type AwsCodePipelineS22 {
  name: String
  revision: String
  location: AwsCodePipelineS22Location
}

type AwsCodePipelineS22Location {
  type: String
  s3Location: AwsCodePipelineS22LocationS3Location
}

type AwsCodePipelineS22LocationS3Location {
  bucketName: String!
  objectKey: String!
}

type AwsCodePipelineS2a {
  accessKeyId: String!
  secretAccessKey: String!
  sessionToken: String!
}

type AwsCodePipelineS34 {
  revisionId: String!
  revisionChangeId: String!
  created: Date!
}

input AwsCodePipelineS34Input {
  revisionId: String!
  revisionChangeId: String!
  created: Date!
}

input AwsCodePipelineS4jInput {
  type: String!
  message: String!
  externalExecutionId: String
}

input AwsCodePipelineS4mInput {
  revision: String!
  changeIdentifier: String!
  created: Date
  revisionSummary: String
}

input AwsCodePipelineS4oInput {
  summary: String
  externalExecutionId: String
  percentComplete: Int
}

type AwsCodePipelineSe {
  thirdPartyConfigurationUrl: String
  entityUrlTemplate: String
  executionUrlTemplate: String
  revisionUrlTemplate: String
}

input AwsCodePipelineSeInput {
  thirdPartyConfigurationUrl: String
  entityUrlTemplate: String
  executionUrlTemplate: String
  revisionUrlTemplate: String
}

type AwsCodePipelineSh {
  name: String!
  required: Boolean!
  key: Boolean!
  secret: Boolean!
  queryable: Boolean
  description: String
  type: String
}

input AwsCodePipelineShInput {
  name: String!
  required: Boolean!
  key: Boolean!
  secret: Boolean!
  queryable: Boolean
  description: String
  type: String
}

type AwsCodePipelineSn {
  minimumCount: Int!
  maximumCount: Int!
}

input AwsCodePipelineSnInput {
  minimumCount: Int!
  maximumCount: Int!
}

type AwsCodePipelineSr {
  id: AwsCodePipelineSs!
  settings: AwsCodePipelineSe
  actionConfigurationProperties: [AwsCodePipelineSh]
  inputArtifactDetails: AwsCodePipelineSn!
  outputArtifactDetails: AwsCodePipelineSn!
}

type AwsCodePipelineSs {
  category: String!
  owner: String!
  provider: String!
  version: String!
}

input AwsCodePipelineSsInput {
  category: String!
  owner: String!
  provider: String!
  version: String!
}

input AwsCodePipelineStartPipelineExecutionInput {
  name: String!
}

type AwsCodePipelineStartPipelineExecutionOutput {
  pipelineExecutionId: String
}

type AwsCodePipelineSv {
  name: String!
  roleArn: String!
  artifactStore: AwsCodePipelineSvArtifactStore!
  stages: [AwsCodePipelineSvStages]!
  version: Int
}

type AwsCodePipelineSvArtifactStore {
  type: String!
  location: String!
  encryptionKey: AwsCodePipelineS11
}

input AwsCodePipelineSvArtifactStoreInput {
  type: String!
  location: String!
  encryptionKey: AwsCodePipelineS11Input
}

input AwsCodePipelineSvInput {
  name: String!
  roleArn: String!
  artifactStore: AwsCodePipelineSvArtifactStoreInput!
  stages: [AwsCodePipelineSvStagesInput]!
  version: Int
}

type AwsCodePipelineSvStages {
  name: String!
  blockers: [AwsCodePipelineSvStagesBlockers]
  actions: [AwsCodePipelineSvStagesActions]!
}

type AwsCodePipelineSvStagesActions {
  name: String!
  actionTypeId: AwsCodePipelineSs!
  runOrder: Int
  configuration: JSON
  outputArtifacts: [AwsCodePipelineSvStagesActionsOutputArtifacts]
  inputArtifacts: [AwsCodePipelineSvStagesActionsInputArtifacts]
  roleArn: String
}

input AwsCodePipelineSvStagesActionsInput {
  name: String!
  actionTypeId: AwsCodePipelineSsInput!
  runOrder: Int
  configuration: JSON
  outputArtifacts: [AwsCodePipelineSvStagesActionsOutputArtifactsInput]
  inputArtifacts: [AwsCodePipelineSvStagesActionsInputArtifactsInput]
  roleArn: String
}

type AwsCodePipelineSvStagesActionsInputArtifacts {
  name: String!
}

input AwsCodePipelineSvStagesActionsInputArtifactsInput {
  name: String!
}

type AwsCodePipelineSvStagesActionsOutputArtifacts {
  name: String!
}

input AwsCodePipelineSvStagesActionsOutputArtifactsInput {
  name: String!
}

type AwsCodePipelineSvStagesBlockers {
  name: String!
  type: String!
}

input AwsCodePipelineSvStagesBlockersInput {
  name: String!
  type: String!
}

input AwsCodePipelineSvStagesInput {
  name: String!
  blockers: [AwsCodePipelineSvStagesBlockersInput]
  actions: [AwsCodePipelineSvStagesActionsInput]!
}

input AwsCodePipelineUpdatePipelineInput {
  pipeline: AwsCodePipelineSvInput!
}

type AwsCodePipelineUpdatePipelineOutput {
  pipeline: AwsCodePipelineSv
}

# AWS CodeStar (2017-04-19)
type AwsCodeStar {
  associateTeamMember(input: AwsCodeStarAssociateTeamMemberInput!, config: AwsConfig): AwsCodeStarAssociateTeamMemberOutput
  createProject(input: AwsCodeStarCreateProjectInput!, config: AwsConfig): AwsCodeStarCreateProjectOutput
  createUserProfile(input: AwsCodeStarCreateUserProfileInput!, config: AwsConfig): AwsCodeStarCreateUserProfileOutput
  deleteProject(input: AwsCodeStarDeleteProjectInput!, config: AwsConfig): AwsCodeStarDeleteProjectOutput
  deleteUserProfile(input: AwsCodeStarDeleteUserProfileInput!, config: AwsConfig): AwsCodeStarDeleteUserProfileOutput
  describeProject(input: AwsCodeStarDescribeProjectInput!, config: AwsConfig): AwsCodeStarDescribeProjectOutput
  describeUserProfile(input: AwsCodeStarDescribeUserProfileInput!, config: AwsConfig): AwsCodeStarDescribeUserProfileOutput
  disassociateTeamMember(input: AwsCodeStarDisassociateTeamMemberInput!, config: AwsConfig): JSON
  listProjects(input: AwsCodeStarListProjectsInput, config: AwsConfig): AwsCodeStarListProjectsOutput
  listResources(input: AwsCodeStarListResourcesInput!, config: AwsConfig): AwsCodeStarListResourcesOutput
  listTagsForProject(input: AwsCodeStarListTagsForProjectInput!, config: AwsConfig): AwsCodeStarListTagsForProjectOutput
  listTeamMembers(input: AwsCodeStarListTeamMembersInput!, config: AwsConfig): AwsCodeStarListTeamMembersOutput
  listUserProfiles(input: AwsCodeStarListUserProfilesInput, config: AwsConfig): AwsCodeStarListUserProfilesOutput
  tagProject(input: AwsCodeStarTagProjectInput!, config: AwsConfig): AwsCodeStarTagProjectOutput
  untagProject(input: AwsCodeStarUntagProjectInput!, config: AwsConfig): JSON
  updateProject(input: AwsCodeStarUpdateProjectInput!, config: AwsConfig): JSON
  updateTeamMember(input: AwsCodeStarUpdateTeamMemberInput!, config: AwsConfig): AwsCodeStarUpdateTeamMemberOutput
  updateUserProfile(input: AwsCodeStarUpdateUserProfileInput!, config: AwsConfig): AwsCodeStarUpdateUserProfileOutput
}

input AwsCodeStarAssociateTeamMemberInput {
  projectId: String!
  clientRequestToken: String
  userArn: String!
  projectRole: String!
  remoteAccessAllowed: Boolean
}

type AwsCodeStarAssociateTeamMemberOutput {
  clientRequestToken: String
}

input AwsCodeStarCreateProjectInput {
  name: String!
  id: String!
  description: String
  clientRequestToken: String
}

type AwsCodeStarCreateProjectOutput {
  id: String!
  arn: String!
  clientRequestToken: String
  projectTemplateId: String
}

input AwsCodeStarCreateUserProfileInput {
  userArn: String!
  displayName: String!
  emailAddress: String!
  sshPublicKey: String
}

type AwsCodeStarCreateUserProfileOutput {
  userArn: String!
  displayName: String
  emailAddress: String
  sshPublicKey: String
  createdTimestamp: Date
  lastModifiedTimestamp: Date
}

input AwsCodeStarDeleteProjectInput {
  id: String!
  clientRequestToken: String
  deleteStack: Boolean
}

type AwsCodeStarDeleteProjectOutput {
  stackId: String
  projectArn: String
}

input AwsCodeStarDeleteUserProfileInput {
  userArn: String!
}

type AwsCodeStarDeleteUserProfileOutput {
  userArn: String!
}

input AwsCodeStarDescribeProjectInput {
  id: String!
}

type AwsCodeStarDescribeProjectOutput {
  name: String
  id: String
  arn: String
  description: String
  clientRequestToken: String
  createdTimeStamp: Date
  stackId: String
  projectTemplateId: String
}

input AwsCodeStarDescribeUserProfileInput {
  userArn: String!
}

type AwsCodeStarDescribeUserProfileOutput {
  userArn: String!
  displayName: String
  emailAddress: String
  sshPublicKey: String
  createdTimestamp: Date!
  lastModifiedTimestamp: Date!
}

input AwsCodeStarDisassociateTeamMemberInput {
  projectId: String!
  userArn: String!
}

input AwsCodeStarListProjectsInput {
  nextToken: String
  maxResults: Int
}

type AwsCodeStarListProjectsOutput {
  projects: [AwsCodeStarListProjectsOutputProjects]!
  nextToken: String
}

type AwsCodeStarListProjectsOutputProjects {
  projectId: String
  projectArn: String
}

input AwsCodeStarListResourcesInput {
  projectId: String!
  nextToken: String
  maxResults: Int
}

type AwsCodeStarListResourcesOutput {
  resources: [AwsCodeStarListResourcesOutputResources]
  nextToken: String
}

type AwsCodeStarListResourcesOutputResources {
  id: String!
}

input AwsCodeStarListTagsForProjectInput {
  id: String!
  nextToken: String
  maxResults: Int
}

type AwsCodeStarListTagsForProjectOutput {
  tags: JSON
  nextToken: String
}

input AwsCodeStarListTeamMembersInput {
  projectId: String!
  nextToken: String
  maxResults: Int
}

type AwsCodeStarListTeamMembersOutput {
  teamMembers: [AwsCodeStarListTeamMembersOutputTeamMembers]!
  nextToken: String
}

type AwsCodeStarListTeamMembersOutputTeamMembers {
  userArn: String!
  projectRole: String!
  remoteAccessAllowed: Boolean
}

input AwsCodeStarListUserProfilesInput {
  nextToken: String
  maxResults: Int
}

type AwsCodeStarListUserProfilesOutput {
  userProfiles: [AwsCodeStarListUserProfilesOutputUserProfiles]!
  nextToken: String
}

type AwsCodeStarListUserProfilesOutputUserProfiles {
  userArn: String
  displayName: String
  emailAddress: String
  sshPublicKey: String
}

input AwsCodeStarTagProjectInput {
  id: String!
  tags: JSON!
}

type AwsCodeStarTagProjectOutput {
  tags: JSON
}

input AwsCodeStarUntagProjectInput {
  id: String!
  tags: [String]!
}

input AwsCodeStarUpdateProjectInput {
  id: String!
  name: String
  description: String
}

input AwsCodeStarUpdateTeamMemberInput {
  projectId: String!
  userArn: String!
  projectRole: String
  remoteAccessAllowed: Boolean
}

type AwsCodeStarUpdateTeamMemberOutput {
  userArn: String
  projectRole: String
  remoteAccessAllowed: Boolean
}

input AwsCodeStarUpdateUserProfileInput {
  userArn: String!
  displayName: String
  emailAddress: String
  sshPublicKey: String
}

type AwsCodeStarUpdateUserProfileOutput {
  userArn: String!
  displayName: String
  emailAddress: String
  sshPublicKey: String
  createdTimestamp: Date
  lastModifiedTimestamp: Date
}

# Amazon Cognito Identity (2014-06-30)
type AwsCognitoIdentity {
  createIdentityPool(input: AwsCognitoIdentityCreateIdentityPoolInput!, config: AwsConfig): JSON
  deleteIdentities(input: AwsCognitoIdentityDeleteIdentitiesInput!, config: AwsConfig): AwsCognitoIdentityDeleteIdentitiesOutput
  deleteIdentityPool(input: AwsCognitoIdentityDeleteIdentityPoolInput!, config: AwsConfig): JSON
  describeIdentity(input: AwsCognitoIdentityDescribeIdentityInput!, config: AwsConfig): JSON
  describeIdentityPool(input: AwsCognitoIdentityDescribeIdentityPoolInput!, config: AwsConfig): JSON
  getCredentialsForIdentity(input: AwsCognitoIdentityGetCredentialsForIdentityInput!, config: AwsConfig): AwsCognitoIdentityGetCredentialsForIdentityOutput
  getId(input: AwsCognitoIdentityGetIdInput!, config: AwsConfig): AwsCognitoIdentityGetIdOutput
  getIdentityPoolRoles(input: AwsCognitoIdentityGetIdentityPoolRolesInput!, config: AwsConfig): AwsCognitoIdentityGetIdentityPoolRolesOutput
  getOpenIdToken(input: AwsCognitoIdentityGetOpenIdTokenInput!, config: AwsConfig): AwsCognitoIdentityGetOpenIdTokenOutput
  getOpenIdTokenForDeveloperIdentity(input: AwsCognitoIdentityGetOpenIdTokenForDeveloperIdentityInput!, config: AwsConfig): AwsCognitoIdentityGetOpenIdTokenForDeveloperIdentityOutput
  listIdentities(input: AwsCognitoIdentityListIdentitiesInput!, config: AwsConfig): AwsCognitoIdentityListIdentitiesOutput
  listIdentityPools(input: AwsCognitoIdentityListIdentityPoolsInput!, config: AwsConfig): AwsCognitoIdentityListIdentityPoolsOutput
  lookupDeveloperIdentity(input: AwsCognitoIdentityLookupDeveloperIdentityInput!, config: AwsConfig): AwsCognitoIdentityLookupDeveloperIdentityOutput
  mergeDeveloperIdentities(input: AwsCognitoIdentityMergeDeveloperIdentitiesInput!, config: AwsConfig): AwsCognitoIdentityMergeDeveloperIdentitiesOutput
  setIdentityPoolRoles(input: AwsCognitoIdentitySetIdentityPoolRolesInput!, config: AwsConfig): JSON
  unlinkDeveloperIdentity(input: AwsCognitoIdentityUnlinkDeveloperIdentityInput!, config: AwsConfig): JSON
  unlinkIdentity(input: AwsCognitoIdentityUnlinkIdentityInput!, config: AwsConfig): JSON
  updateIdentityPool(input: JSON, config: AwsConfig): JSON
}

input AwsCognitoIdentityCreateIdentityPoolInput {
  IdentityPoolName: String!
  AllowUnauthenticatedIdentities: Boolean!
  SupportedLoginProviders: JSON
  DeveloperProviderName: String
  OpenIdConnectProviderARNs: [String]
  CognitoIdentityProviders: [AwsCognitoIdentitySaInput]
  SamlProviderARNs: [String]
}

input AwsCognitoIdentityDeleteIdentitiesInput {
  IdentityIdsToDelete: [String]!
}

type AwsCognitoIdentityDeleteIdentitiesOutput {
  UnprocessedIdentityIds: [AwsCognitoIdentityDeleteIdentitiesOutputUnprocessedIdentityIds]
}

type AwsCognitoIdentityDeleteIdentitiesOutputUnprocessedIdentityIds {
  IdentityId: String
  ErrorCode: String
}

input AwsCognitoIdentityDeleteIdentityPoolInput {
  IdentityPoolId: String!
}

input AwsCognitoIdentityDescribeIdentityInput {
  IdentityId: String!
}

input AwsCognitoIdentityDescribeIdentityPoolInput {
  IdentityPoolId: String!
}

input AwsCognitoIdentityGetCredentialsForIdentityInput {
  IdentityId: String!
  Logins: JSON
  CustomRoleArn: String
}

type AwsCognitoIdentityGetCredentialsForIdentityOutput {
  IdentityId: String
  Credentials: AwsCognitoIdentityGetCredentialsForIdentityOutputCredentials
}

type AwsCognitoIdentityGetCredentialsForIdentityOutputCredentials {
  AccessKeyId: String
  SecretKey: String
  SessionToken: String
  Expiration: Date
}

input AwsCognitoIdentityGetIdentityPoolRolesInput {
  IdentityPoolId: String!
}

type AwsCognitoIdentityGetIdentityPoolRolesOutput {
  IdentityPoolId: String
  Roles: JSON
  RoleMappings: JSON
}

input AwsCognitoIdentityGetIdInput {
  AccountId: String
  IdentityPoolId: String!
  Logins: JSON
}

type AwsCognitoIdentityGetIdOutput {
  IdentityId: String
}

input AwsCognitoIdentityGetOpenIdTokenForDeveloperIdentityInput {
  IdentityPoolId: String!
  IdentityId: String
  Logins: JSON!
  TokenDuration: JSON
}

type AwsCognitoIdentityGetOpenIdTokenForDeveloperIdentityOutput {
  IdentityId: String
  Token: String
}

input AwsCognitoIdentityGetOpenIdTokenInput {
  IdentityId: String!
  Logins: JSON
}

type AwsCognitoIdentityGetOpenIdTokenOutput {
  IdentityId: String
  Token: String
}

input AwsCognitoIdentityListIdentitiesInput {
  IdentityPoolId: String!
  MaxResults: Int!
  NextToken: String
  HideDisabled: Boolean
}

type AwsCognitoIdentityListIdentitiesOutput {
  IdentityPoolId: String
  Identities: [AwsCognitoIdentitySr]
  NextToken: String
}

input AwsCognitoIdentityListIdentityPoolsInput {
  MaxResults: Int!
  NextToken: String
}

type AwsCognitoIdentityListIdentityPoolsOutput {
  IdentityPools: [AwsCognitoIdentityListIdentityPoolsOutputIdentityPools]
  NextToken: String
}

type AwsCognitoIdentityListIdentityPoolsOutputIdentityPools {
  IdentityPoolId: String
  IdentityPoolName: String
}

input AwsCognitoIdentityLookupDeveloperIdentityInput {
  IdentityPoolId: String!
  IdentityId: String
  DeveloperUserIdentifier: String
  MaxResults: Int
  NextToken: String
}

type AwsCognitoIdentityLookupDeveloperIdentityOutput {
  IdentityId: String
  DeveloperUserIdentifierList: [String]
  NextToken: String
}

input AwsCognitoIdentityMergeDeveloperIdentitiesInput {
  SourceUserIdentifier: String!
  DestinationUserIdentifier: String!
  DeveloperProviderName: String!
  IdentityPoolId: String!
}

type AwsCognitoIdentityMergeDeveloperIdentitiesOutput {
  IdentityId: String
}

input AwsCognitoIdentitySaInput {
  ProviderName: String
  ClientId: String
  ServerSideTokenCheck: Boolean
}

# Amazon Cognito Identity Provider (2016-04-18)
type AwsCognitoIdentityServiceProvider {
  addCustomAttributes(input: AwsCognitoIdentityServiceProviderAddCustomAttributesInput!, config: AwsConfig): JSON
  adminAddUserToGroup(input: AwsCognitoIdentityServiceProviderAdminAddUserToGroupInput!, config: AwsConfig): JSON
  adminConfirmSignUp(input: AwsCognitoIdentityServiceProviderAdminConfirmSignUpInput!, config: AwsConfig): JSON
  adminCreateUser(input: AwsCognitoIdentityServiceProviderAdminCreateUserInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminCreateUserOutput
  adminDeleteUser(input: AwsCognitoIdentityServiceProviderAdminDeleteUserInput!, config: AwsConfig): JSON
  adminDeleteUserAttributes(input: AwsCognitoIdentityServiceProviderAdminDeleteUserAttributesInput!, config: AwsConfig): JSON
  adminDisableProviderForUser(input: AwsCognitoIdentityServiceProviderAdminDisableProviderForUserInput!, config: AwsConfig): JSON
  adminDisableUser(input: AwsCognitoIdentityServiceProviderAdminDisableUserInput!, config: AwsConfig): JSON
  adminEnableUser(input: AwsCognitoIdentityServiceProviderAdminEnableUserInput!, config: AwsConfig): JSON
  adminForgetDevice(input: AwsCognitoIdentityServiceProviderAdminForgetDeviceInput!, config: AwsConfig): JSON
  adminGetDevice(input: AwsCognitoIdentityServiceProviderAdminGetDeviceInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminGetDeviceOutput
  adminGetUser(input: AwsCognitoIdentityServiceProviderAdminGetUserInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminGetUserOutput
  adminInitiateAuth(input: AwsCognitoIdentityServiceProviderAdminInitiateAuthInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminInitiateAuthOutput
  adminLinkProviderForUser(input: AwsCognitoIdentityServiceProviderAdminLinkProviderForUserInput!, config: AwsConfig): JSON
  adminListDevices(input: AwsCognitoIdentityServiceProviderAdminListDevicesInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminListDevicesOutput
  adminListGroupsForUser(input: AwsCognitoIdentityServiceProviderAdminListGroupsForUserInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminListGroupsForUserOutput
  adminListUserAuthEvents(input: AwsCognitoIdentityServiceProviderAdminListUserAuthEventsInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutput
  adminRemoveUserFromGroup(input: AwsCognitoIdentityServiceProviderAdminRemoveUserFromGroupInput!, config: AwsConfig): JSON
  adminResetUserPassword(input: AwsCognitoIdentityServiceProviderAdminResetUserPasswordInput!, config: AwsConfig): JSON
  adminRespondToAuthChallenge(input: AwsCognitoIdentityServiceProviderAdminRespondToAuthChallengeInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderAdminRespondToAuthChallengeOutput
  adminSetUserMFAPreference(input: AwsCognitoIdentityServiceProviderAdminSetUserMFAPreferenceInput!, config: AwsConfig): JSON
  adminSetUserSettings(input: AwsCognitoIdentityServiceProviderAdminSetUserSettingsInput!, config: AwsConfig): JSON
  adminUpdateAuthEventFeedback(input: AwsCognitoIdentityServiceProviderAdminUpdateAuthEventFeedbackInput!, config: AwsConfig): JSON
  adminUpdateDeviceStatus(input: AwsCognitoIdentityServiceProviderAdminUpdateDeviceStatusInput!, config: AwsConfig): JSON
  adminUpdateUserAttributes(input: AwsCognitoIdentityServiceProviderAdminUpdateUserAttributesInput!, config: AwsConfig): JSON
  adminUserGlobalSignOut(input: AwsCognitoIdentityServiceProviderAdminUserGlobalSignOutInput!, config: AwsConfig): JSON
  associateSoftwareToken(input: AwsCognitoIdentityServiceProviderAssociateSoftwareTokenInput, config: AwsConfig): AwsCognitoIdentityServiceProviderAssociateSoftwareTokenOutput
  changePassword(input: AwsCognitoIdentityServiceProviderChangePasswordInput!, config: AwsConfig): JSON
  confirmDevice(input: AwsCognitoIdentityServiceProviderConfirmDeviceInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderConfirmDeviceOutput
  confirmForgotPassword(input: AwsCognitoIdentityServiceProviderConfirmForgotPasswordInput!, config: AwsConfig): JSON
  confirmSignUp(input: AwsCognitoIdentityServiceProviderConfirmSignUpInput!, config: AwsConfig): JSON
  createGroup(input: AwsCognitoIdentityServiceProviderCreateGroupInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateGroupOutput
  createIdentityProvider(input: AwsCognitoIdentityServiceProviderCreateIdentityProviderInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateIdentityProviderOutput
  createResourceServer(input: AwsCognitoIdentityServiceProviderCreateResourceServerInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateResourceServerOutput
  createUserImportJob(input: AwsCognitoIdentityServiceProviderCreateUserImportJobInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateUserImportJobOutput
  createUserPool(input: AwsCognitoIdentityServiceProviderCreateUserPoolInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateUserPoolOutput
  createUserPoolClient(input: AwsCognitoIdentityServiceProviderCreateUserPoolClientInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderCreateUserPoolClientOutput
  createUserPoolDomain(input: AwsCognitoIdentityServiceProviderCreateUserPoolDomainInput!, config: AwsConfig): JSON
  deleteGroup(input: AwsCognitoIdentityServiceProviderDeleteGroupInput!, config: AwsConfig): JSON
  deleteIdentityProvider(input: AwsCognitoIdentityServiceProviderDeleteIdentityProviderInput!, config: AwsConfig): JSON
  deleteResourceServer(input: AwsCognitoIdentityServiceProviderDeleteResourceServerInput!, config: AwsConfig): JSON
  deleteUser(input: AwsCognitoIdentityServiceProviderDeleteUserInput!, config: AwsConfig): JSON
  deleteUserAttributes(input: AwsCognitoIdentityServiceProviderDeleteUserAttributesInput!, config: AwsConfig): JSON
  deleteUserPool(input: AwsCognitoIdentityServiceProviderDeleteUserPoolInput!, config: AwsConfig): JSON
  deleteUserPoolClient(input: AwsCognitoIdentityServiceProviderDeleteUserPoolClientInput!, config: AwsConfig): JSON
  deleteUserPoolDomain(input: AwsCognitoIdentityServiceProviderDeleteUserPoolDomainInput!, config: AwsConfig): JSON
  describeIdentityProvider(input: AwsCognitoIdentityServiceProviderDescribeIdentityProviderInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeIdentityProviderOutput
  describeResourceServer(input: AwsCognitoIdentityServiceProviderDescribeResourceServerInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeResourceServerOutput
  describeRiskConfiguration(input: AwsCognitoIdentityServiceProviderDescribeRiskConfigurationInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeRiskConfigurationOutput
  describeUserImportJob(input: AwsCognitoIdentityServiceProviderDescribeUserImportJobInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeUserImportJobOutput
  describeUserPool(input: AwsCognitoIdentityServiceProviderDescribeUserPoolInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeUserPoolOutput
  describeUserPoolClient(input: AwsCognitoIdentityServiceProviderDescribeUserPoolClientInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeUserPoolClientOutput
  describeUserPoolDomain(input: AwsCognitoIdentityServiceProviderDescribeUserPoolDomainInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderDescribeUserPoolDomainOutput
  forgetDevice(input: AwsCognitoIdentityServiceProviderForgetDeviceInput!, config: AwsConfig): JSON
  forgotPassword(input: AwsCognitoIdentityServiceProviderForgotPasswordInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderForgotPasswordOutput
  getCSVHeader(input: AwsCognitoIdentityServiceProviderGetCSVHeaderInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetCSVHeaderOutput
  getDevice(input: AwsCognitoIdentityServiceProviderGetDeviceInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetDeviceOutput
  getGroup(input: AwsCognitoIdentityServiceProviderGetGroupInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetGroupOutput
  getIdentityProviderByIdentifier(input: AwsCognitoIdentityServiceProviderGetIdentityProviderByIdentifierInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetIdentityProviderByIdentifierOutput
  getUICustomization(input: AwsCognitoIdentityServiceProviderGetUICustomizationInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetUICustomizationOutput
  getUser(input: AwsCognitoIdentityServiceProviderGetUserInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetUserOutput
  getUserAttributeVerificationCode(input: AwsCognitoIdentityServiceProviderGetUserAttributeVerificationCodeInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetUserAttributeVerificationCodeOutput
  getUserPoolMfaConfig(input: AwsCognitoIdentityServiceProviderGetUserPoolMfaConfigInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderGetUserPoolMfaConfigOutput
  globalSignOut(input: AwsCognitoIdentityServiceProviderGlobalSignOutInput!, config: AwsConfig): JSON
  initiateAuth(input: AwsCognitoIdentityServiceProviderInitiateAuthInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderInitiateAuthOutput
  listDevices(input: AwsCognitoIdentityServiceProviderListDevicesInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListDevicesOutput
  listGroups(input: AwsCognitoIdentityServiceProviderListGroupsInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListGroupsOutput
  listIdentityProviders(input: AwsCognitoIdentityServiceProviderListIdentityProvidersInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListIdentityProvidersOutput
  listResourceServers(input: AwsCognitoIdentityServiceProviderListResourceServersInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListResourceServersOutput
  listUserImportJobs(input: AwsCognitoIdentityServiceProviderListUserImportJobsInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListUserImportJobsOutput
  listUserPoolClients(input: AwsCognitoIdentityServiceProviderListUserPoolClientsInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListUserPoolClientsOutput
  listUserPools(input: AwsCognitoIdentityServiceProviderListUserPoolsInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListUserPoolsOutput
  listUsers(input: AwsCognitoIdentityServiceProviderListUsersInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListUsersOutput
  listUsersInGroup(input: AwsCognitoIdentityServiceProviderListUsersInGroupInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderListUsersInGroupOutput
  resendConfirmationCode(input: AwsCognitoIdentityServiceProviderResendConfirmationCodeInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderResendConfirmationCodeOutput
  respondToAuthChallenge(input: AwsCognitoIdentityServiceProviderRespondToAuthChallengeInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderRespondToAuthChallengeOutput
  setRiskConfiguration(input: AwsCognitoIdentityServiceProviderSetRiskConfigurationInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderSetRiskConfigurationOutput
  setUICustomization(input: AwsCognitoIdentityServiceProviderSetUICustomizationInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderSetUICustomizationOutput
  setUserMFAPreference(input: AwsCognitoIdentityServiceProviderSetUserMFAPreferenceInput!, config: AwsConfig): JSON
  setUserPoolMfaConfig(input: AwsCognitoIdentityServiceProviderSetUserPoolMfaConfigInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderSetUserPoolMfaConfigOutput
  setUserSettings(input: AwsCognitoIdentityServiceProviderSetUserSettingsInput!, config: AwsConfig): JSON
  signUp(input: AwsCognitoIdentityServiceProviderSignUpInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderSignUpOutput
  startUserImportJob(input: AwsCognitoIdentityServiceProviderStartUserImportJobInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderStartUserImportJobOutput
  stopUserImportJob(input: AwsCognitoIdentityServiceProviderStopUserImportJobInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderStopUserImportJobOutput
  updateAuthEventFeedback(input: AwsCognitoIdentityServiceProviderUpdateAuthEventFeedbackInput!, config: AwsConfig): JSON
  updateDeviceStatus(input: AwsCognitoIdentityServiceProviderUpdateDeviceStatusInput!, config: AwsConfig): JSON
  updateGroup(input: AwsCognitoIdentityServiceProviderUpdateGroupInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderUpdateGroupOutput
  updateIdentityProvider(input: AwsCognitoIdentityServiceProviderUpdateIdentityProviderInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderUpdateIdentityProviderOutput
  updateResourceServer(input: AwsCognitoIdentityServiceProviderUpdateResourceServerInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderUpdateResourceServerOutput
  updateUserAttributes(input: AwsCognitoIdentityServiceProviderUpdateUserAttributesInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderUpdateUserAttributesOutput
  updateUserPool(input: AwsCognitoIdentityServiceProviderUpdateUserPoolInput!, config: AwsConfig): JSON
  updateUserPoolClient(input: AwsCognitoIdentityServiceProviderUpdateUserPoolClientInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderUpdateUserPoolClientOutput
  verifySoftwareToken(input: AwsCognitoIdentityServiceProviderVerifySoftwareTokenInput!, config: AwsConfig): AwsCognitoIdentityServiceProviderVerifySoftwareTokenOutput
  verifyUserAttribute(input: AwsCognitoIdentityServiceProviderVerifyUserAttributeInput!, config: AwsConfig): JSON
}

input AwsCognitoIdentityServiceProviderAddCustomAttributesInput {
  UserPoolId: String!
  CustomAttributes: [AwsCognitoIdentityServiceProviderS4Input]!
}

input AwsCognitoIdentityServiceProviderAdminAddUserToGroupInput {
  UserPoolId: String!
  Username: String!
  GroupName: String!
}

input AwsCognitoIdentityServiceProviderAdminConfirmSignUpInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoIdentityServiceProviderAdminCreateUserInput {
  UserPoolId: String!
  Username: String!
  UserAttributes: [AwsCognitoIdentityServiceProviderSiInput]
  ValidationData: [AwsCognitoIdentityServiceProviderSiInput]
  TemporaryPassword: String
  ForceAliasCreation: Boolean
  MessageAction: String
  DesiredDeliveryMediums: [String]
}

type AwsCognitoIdentityServiceProviderAdminCreateUserOutput {
  User: AwsCognitoIdentityServiceProviderSs
}

input AwsCognitoIdentityServiceProviderAdminDeleteUserAttributesInput {
  UserPoolId: String!
  Username: String!
  UserAttributeNames: [String]!
}

input AwsCognitoIdentityServiceProviderAdminDeleteUserInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoIdentityServiceProviderAdminDisableProviderForUserInput {
  UserPoolId: String!
  User: AwsCognitoIdentityServiceProviderS12Input!
}

input AwsCognitoIdentityServiceProviderAdminDisableUserInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoIdentityServiceProviderAdminEnableUserInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoIdentityServiceProviderAdminForgetDeviceInput {
  UserPoolId: String!
  Username: String!
  DeviceKey: String!
}

input AwsCognitoIdentityServiceProviderAdminGetDeviceInput {
  DeviceKey: String!
  UserPoolId: String!
  Username: String!
}

type AwsCognitoIdentityServiceProviderAdminGetDeviceOutput {
  Device: AwsCognitoIdentityServiceProviderS1d!
}

input AwsCognitoIdentityServiceProviderAdminGetUserInput {
  UserPoolId: String!
  Username: String!
}

type AwsCognitoIdentityServiceProviderAdminGetUserOutput {
  Username: String!
  UserAttributes: [AwsCognitoIdentityServiceProviderSi]
  UserCreateDate: Date
  UserLastModifiedDate: Date
  Enabled: Boolean
  UserStatus: String
  MFAOptions: [AwsCognitoIdentityServiceProviderSv]
  PreferredMfaSetting: String
  UserMFASettingList: [String]
}

input AwsCognitoIdentityServiceProviderAdminInitiateAuthInput {
  UserPoolId: String!
  ClientId: String!
  AuthFlow: String!
  AuthParameters: JSON
  ClientMetadata: JSON
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  ContextData: AwsCognitoIdentityServiceProviderS1nInput
}

type AwsCognitoIdentityServiceProviderAdminInitiateAuthOutput {
  ChallengeName: String
  Session: String
  ChallengeParameters: JSON
  AuthenticationResult: AwsCognitoIdentityServiceProviderS1u
}

input AwsCognitoIdentityServiceProviderAdminLinkProviderForUserInput {
  UserPoolId: String!
  DestinationUser: AwsCognitoIdentityServiceProviderS12Input!
  SourceUser: AwsCognitoIdentityServiceProviderS12Input!
}

input AwsCognitoIdentityServiceProviderAdminListDevicesInput {
  UserPoolId: String!
  Username: String!
  Limit: Int
  PaginationToken: String
}

type AwsCognitoIdentityServiceProviderAdminListDevicesOutput {
  Devices: [AwsCognitoIdentityServiceProviderS1d]
  PaginationToken: String
}

input AwsCognitoIdentityServiceProviderAdminListGroupsForUserInput {
  Username: String!
  UserPoolId: String!
  Limit: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderAdminListGroupsForUserOutput {
  Groups: [AwsCognitoIdentityServiceProviderS29]
  NextToken: String
}

input AwsCognitoIdentityServiceProviderAdminListUserAuthEventsInput {
  UserPoolId: String!
  Username: String!
  MaxResults: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutput {
  AuthEvents: [AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEvents]
  NextToken: String
}

type AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEvents {
  EventId: String
  EventType: String
  CreationDate: Date
  EventResponse: String
  EventRisk: AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsEventRisk
  ChallengeResponses: [AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsChallengeResponses]
  EventContextData: AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsEventContextData
  EventFeedback: AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsEventFeedback
}

type AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsChallengeResponses {
  ChallengeName: String
  ChallengeResponse: String
}

type AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsEventContextData {
  IpAddress: String
  DeviceName: String
  Timezone: String
  City: String
  Country: String
}

type AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsEventFeedback {
  FeedbackValue: String!
  Provider: String!
  FeedbackDate: Date
}

type AwsCognitoIdentityServiceProviderAdminListUserAuthEventsOutputAuthEventsEventRisk {
  RiskDecision: String
  RiskLevel: String
}

input AwsCognitoIdentityServiceProviderAdminRemoveUserFromGroupInput {
  UserPoolId: String!
  Username: String!
  GroupName: String!
}

input AwsCognitoIdentityServiceProviderAdminResetUserPasswordInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoIdentityServiceProviderAdminRespondToAuthChallengeInput {
  UserPoolId: String!
  ClientId: String!
  ChallengeName: String!
  ChallengeResponses: JSON
  Session: String
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  ContextData: AwsCognitoIdentityServiceProviderS1nInput
}

type AwsCognitoIdentityServiceProviderAdminRespondToAuthChallengeOutput {
  ChallengeName: String
  Session: String
  ChallengeParameters: JSON
  AuthenticationResult: AwsCognitoIdentityServiceProviderS1u
}

input AwsCognitoIdentityServiceProviderAdminSetUserMFAPreferenceInput {
  SMSMfaSettings: AwsCognitoIdentityServiceProviderS30Input
  SoftwareTokenMfaSettings: AwsCognitoIdentityServiceProviderS31Input
  Username: String!
  UserPoolId: String!
}

input AwsCognitoIdentityServiceProviderAdminSetUserSettingsInput {
  UserPoolId: String!
  Username: String!
  MFAOptions: [AwsCognitoIdentityServiceProviderSvInput]!
}

input AwsCognitoIdentityServiceProviderAdminUpdateAuthEventFeedbackInput {
  UserPoolId: String!
  Username: String!
  EventId: String!
  FeedbackValue: String!
}

input AwsCognitoIdentityServiceProviderAdminUpdateDeviceStatusInput {
  UserPoolId: String!
  Username: String!
  DeviceKey: String!
  DeviceRememberedStatus: String
}

input AwsCognitoIdentityServiceProviderAdminUpdateUserAttributesInput {
  UserPoolId: String!
  Username: String!
  UserAttributes: [AwsCognitoIdentityServiceProviderSiInput]!
}

input AwsCognitoIdentityServiceProviderAdminUserGlobalSignOutInput {
  UserPoolId: String!
  Username: String!
}

input AwsCognitoIdentityServiceProviderAssociateSoftwareTokenInput {
  AccessToken: String
  Session: String
}

type AwsCognitoIdentityServiceProviderAssociateSoftwareTokenOutput {
  SecretCode: String
  Session: String
}

input AwsCognitoIdentityServiceProviderChangePasswordInput {
  PreviousPassword: String!
  ProposedPassword: String!
  AccessToken: String!
}

input AwsCognitoIdentityServiceProviderConfirmDeviceDeviceSecretVerifierConfigInput {
  PasswordVerifier: String
  Salt: String
}

input AwsCognitoIdentityServiceProviderConfirmDeviceInput {
  AccessToken: String!
  DeviceKey: String!
  DeviceSecretVerifierConfig: AwsCognitoIdentityServiceProviderConfirmDeviceDeviceSecretVerifierConfigInput
  DeviceName: String
}

type AwsCognitoIdentityServiceProviderConfirmDeviceOutput {
  UserConfirmationNecessary: Boolean
}

input AwsCognitoIdentityServiceProviderConfirmForgotPasswordInput {
  ClientId: String!
  SecretHash: String
  Username: String!
  ConfirmationCode: String!
  Password: String!
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  UserContextData: AwsCognitoIdentityServiceProviderS3rInput
}

input AwsCognitoIdentityServiceProviderConfirmSignUpInput {
  ClientId: String!
  SecretHash: String
  Username: String!
  ConfirmationCode: String!
  ForceAliasCreation: Boolean
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  UserContextData: AwsCognitoIdentityServiceProviderS3rInput
}

input AwsCognitoIdentityServiceProviderCreateGroupInput {
  GroupName: String!
  UserPoolId: String!
  Description: String
  RoleArn: String
  Precedence: Int
}

type AwsCognitoIdentityServiceProviderCreateGroupOutput {
  Group: AwsCognitoIdentityServiceProviderS29
}

input AwsCognitoIdentityServiceProviderCreateIdentityProviderInput {
  UserPoolId: String!
  ProviderName: String!
  ProviderType: String!
  ProviderDetails: JSON!
  AttributeMapping: JSON
  IdpIdentifiers: [String]
}

type AwsCognitoIdentityServiceProviderCreateIdentityProviderOutput {
  IdentityProvider: AwsCognitoIdentityServiceProviderS46!
}

input AwsCognitoIdentityServiceProviderCreateResourceServerInput {
  UserPoolId: String!
  Identifier: String!
  Name: String!
  Scopes: [AwsCognitoIdentityServiceProviderS4aInput]
}

type AwsCognitoIdentityServiceProviderCreateResourceServerOutput {
  ResourceServer: AwsCognitoIdentityServiceProviderS4f!
}

input AwsCognitoIdentityServiceProviderCreateUserImportJobInput {
  JobName: String!
  UserPoolId: String!
  CloudWatchLogsRoleArn: String!
}

type AwsCognitoIdentityServiceProviderCreateUserImportJobOutput {
  UserImportJob: AwsCognitoIdentityServiceProviderS4j
}

input AwsCognitoIdentityServiceProviderCreateUserPoolClientInput {
  UserPoolId: String!
  ClientName: String!
  GenerateSecret: Boolean
  RefreshTokenValidity: Int
  ReadAttributes: [String]
  WriteAttributes: [String]
  ExplicitAuthFlows: [String]
  SupportedIdentityProviders: [String]
  CallbackURLs: [String]
  LogoutURLs: [String]
  DefaultRedirectURI: String
  AllowedOAuthFlows: [String]
  AllowedOAuthScopes: [String]
  AllowedOAuthFlowsUserPoolClient: Boolean
  AnalyticsConfiguration: AwsCognitoIdentityServiceProviderS63Input
}

type AwsCognitoIdentityServiceProviderCreateUserPoolClientOutput {
  UserPoolClient: AwsCognitoIdentityServiceProviderS66
}

input AwsCognitoIdentityServiceProviderCreateUserPoolDomainInput {
  Domain: String!
  UserPoolId: String!
}

input AwsCognitoIdentityServiceProviderCreateUserPoolInput {
  PoolName: String!
  Policies: AwsCognitoIdentityServiceProviderS4rInput
  LambdaConfig: AwsCognitoIdentityServiceProviderS4uInput
  AutoVerifiedAttributes: [String]
  AliasAttributes: [String]
  UsernameAttributes: [String]
  SmsVerificationMessage: String
  EmailVerificationMessage: String
  EmailVerificationSubject: String
  VerificationMessageTemplate: AwsCognitoIdentityServiceProviderS54Input
  SmsAuthenticationMessage: String
  MfaConfiguration: String
  DeviceConfiguration: AwsCognitoIdentityServiceProviderS59Input
  EmailConfiguration: AwsCognitoIdentityServiceProviderS5aInput
  SmsConfiguration: AwsCognitoIdentityServiceProviderS5cInput
  UserPoolTags: JSON
  AdminCreateUserConfig: AwsCognitoIdentityServiceProviderS5eInput
  Schema: [AwsCognitoIdentityServiceProviderS4Input]
  UserPoolAddOns: AwsCognitoIdentityServiceProviderS5iInput
}

type AwsCognitoIdentityServiceProviderCreateUserPoolOutput {
  UserPool: AwsCognitoIdentityServiceProviderS5l
}

input AwsCognitoIdentityServiceProviderDeleteGroupInput {
  GroupName: String!
  UserPoolId: String!
}

input AwsCognitoIdentityServiceProviderDeleteIdentityProviderInput {
  UserPoolId: String!
  ProviderName: String!
}

input AwsCognitoIdentityServiceProviderDeleteResourceServerInput {
  UserPoolId: String!
  Identifier: String!
}

input AwsCognitoIdentityServiceProviderDeleteUserAttributesInput {
  UserAttributeNames: [String]!
  AccessToken: String!
}

input AwsCognitoIdentityServiceProviderDeleteUserInput {
  AccessToken: String!
}

input AwsCognitoIdentityServiceProviderDeleteUserPoolClientInput {
  UserPoolId: String!
  ClientId: String!
}

input AwsCognitoIdentityServiceProviderDeleteUserPoolDomainInput {
  Domain: String!
  UserPoolId: String!
}

input AwsCognitoIdentityServiceProviderDeleteUserPoolInput {
  UserPoolId: String!
}

input AwsCognitoIdentityServiceProviderDescribeIdentityProviderInput {
  UserPoolId: String!
  ProviderName: String!
}

type AwsCognitoIdentityServiceProviderDescribeIdentityProviderOutput {
  IdentityProvider: AwsCognitoIdentityServiceProviderS46!
}

input AwsCognitoIdentityServiceProviderDescribeResourceServerInput {
  UserPoolId: String!
  Identifier: String!
}

type AwsCognitoIdentityServiceProviderDescribeResourceServerOutput {
  ResourceServer: AwsCognitoIdentityServiceProviderS4f!
}

input AwsCognitoIdentityServiceProviderDescribeRiskConfigurationInput {
  UserPoolId: String!
  ClientId: String
}

type AwsCognitoIdentityServiceProviderDescribeRiskConfigurationOutput {
  RiskConfiguration: AwsCognitoIdentityServiceProviderS6r!
}

input AwsCognitoIdentityServiceProviderDescribeUserImportJobInput {
  UserPoolId: String!
  JobId: String!
}

type AwsCognitoIdentityServiceProviderDescribeUserImportJobOutput {
  UserImportJob: AwsCognitoIdentityServiceProviderS4j
}

input AwsCognitoIdentityServiceProviderDescribeUserPoolClientInput {
  UserPoolId: String!
  ClientId: String!
}

type AwsCognitoIdentityServiceProviderDescribeUserPoolClientOutput {
  UserPoolClient: AwsCognitoIdentityServiceProviderS66
}

input AwsCognitoIdentityServiceProviderDescribeUserPoolDomainInput {
  Domain: String!
}

type AwsCognitoIdentityServiceProviderDescribeUserPoolDomainOutput {
  DomainDescription: AwsCognitoIdentityServiceProviderDescribeUserPoolDomainOutputDomainDescription
}

type AwsCognitoIdentityServiceProviderDescribeUserPoolDomainOutputDomainDescription {
  UserPoolId: String
  AWSAccountId: String
  Domain: String
  S3Bucket: String
  CloudFrontDistribution: String
  Version: String
  Status: String
}

input AwsCognitoIdentityServiceProviderDescribeUserPoolInput {
  UserPoolId: String!
}

type AwsCognitoIdentityServiceProviderDescribeUserPoolOutput {
  UserPool: AwsCognitoIdentityServiceProviderS5l
}

input AwsCognitoIdentityServiceProviderForgetDeviceInput {
  AccessToken: String
  DeviceKey: String!
}

input AwsCognitoIdentityServiceProviderForgotPasswordInput {
  ClientId: String!
  SecretHash: String
  UserContextData: AwsCognitoIdentityServiceProviderS3rInput
  Username: String!
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
}

type AwsCognitoIdentityServiceProviderForgotPasswordOutput {
  CodeDeliveryDetails: AwsCognitoIdentityServiceProviderS7p
}

input AwsCognitoIdentityServiceProviderGetCSVHeaderInput {
  UserPoolId: String!
}

type AwsCognitoIdentityServiceProviderGetCSVHeaderOutput {
  UserPoolId: String
  CSVHeader: [String]
}

input AwsCognitoIdentityServiceProviderGetDeviceInput {
  DeviceKey: String!
  AccessToken: String
}

type AwsCognitoIdentityServiceProviderGetDeviceOutput {
  Device: AwsCognitoIdentityServiceProviderS1d!
}

input AwsCognitoIdentityServiceProviderGetGroupInput {
  GroupName: String!
  UserPoolId: String!
}

type AwsCognitoIdentityServiceProviderGetGroupOutput {
  Group: AwsCognitoIdentityServiceProviderS29
}

input AwsCognitoIdentityServiceProviderGetIdentityProviderByIdentifierInput {
  UserPoolId: String!
  IdpIdentifier: String!
}

type AwsCognitoIdentityServiceProviderGetIdentityProviderByIdentifierOutput {
  IdentityProvider: AwsCognitoIdentityServiceProviderS46!
}

input AwsCognitoIdentityServiceProviderGetUICustomizationInput {
  UserPoolId: String!
  ClientId: String
}

type AwsCognitoIdentityServiceProviderGetUICustomizationOutput {
  UICustomization: AwsCognitoIdentityServiceProviderS81!
}

input AwsCognitoIdentityServiceProviderGetUserAttributeVerificationCodeInput {
  AccessToken: String!
  AttributeName: String!
}

type AwsCognitoIdentityServiceProviderGetUserAttributeVerificationCodeOutput {
  CodeDeliveryDetails: AwsCognitoIdentityServiceProviderS7p
}

input AwsCognitoIdentityServiceProviderGetUserInput {
  AccessToken: String!
}

type AwsCognitoIdentityServiceProviderGetUserOutput {
  Username: String!
  UserAttributes: [AwsCognitoIdentityServiceProviderSi]!
  MFAOptions: [AwsCognitoIdentityServiceProviderSv]
  PreferredMfaSetting: String
  UserMFASettingList: [String]
}

input AwsCognitoIdentityServiceProviderGetUserPoolMfaConfigInput {
  UserPoolId: String!
}

type AwsCognitoIdentityServiceProviderGetUserPoolMfaConfigOutput {
  SmsMfaConfiguration: AwsCognitoIdentityServiceProviderS8b
  SoftwareTokenMfaConfiguration: AwsCognitoIdentityServiceProviderS8c
  MfaConfiguration: String
}

input AwsCognitoIdentityServiceProviderGlobalSignOutInput {
  AccessToken: String!
}

input AwsCognitoIdentityServiceProviderInitiateAuthInput {
  AuthFlow: String!
  AuthParameters: JSON
  ClientMetadata: JSON
  ClientId: String!
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  UserContextData: AwsCognitoIdentityServiceProviderS3rInput
}

type AwsCognitoIdentityServiceProviderInitiateAuthOutput {
  ChallengeName: String
  Session: String
  ChallengeParameters: JSON
  AuthenticationResult: AwsCognitoIdentityServiceProviderS1u
}

input AwsCognitoIdentityServiceProviderListDevicesInput {
  AccessToken: String!
  Limit: Int
  PaginationToken: String
}

type AwsCognitoIdentityServiceProviderListDevicesOutput {
  Devices: [AwsCognitoIdentityServiceProviderS1d]
  PaginationToken: String
}

input AwsCognitoIdentityServiceProviderListGroupsInput {
  UserPoolId: String!
  Limit: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListGroupsOutput {
  Groups: [AwsCognitoIdentityServiceProviderS29]
  NextToken: String
}

input AwsCognitoIdentityServiceProviderListIdentityProvidersInput {
  UserPoolId: String!
  MaxResults: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListIdentityProvidersOutput {
  Providers: [AwsCognitoIdentityServiceProviderListIdentityProvidersOutputProviders]!
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListIdentityProvidersOutputProviders {
  ProviderName: String
  ProviderType: String
  LastModifiedDate: Date
  CreationDate: Date
}

input AwsCognitoIdentityServiceProviderListResourceServersInput {
  UserPoolId: String!
  MaxResults: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListResourceServersOutput {
  ResourceServers: [AwsCognitoIdentityServiceProviderS4f]!
  NextToken: String
}

input AwsCognitoIdentityServiceProviderListUserImportJobsInput {
  UserPoolId: String!
  MaxResults: Int!
  PaginationToken: String
}

type AwsCognitoIdentityServiceProviderListUserImportJobsOutput {
  UserImportJobs: [AwsCognitoIdentityServiceProviderS4j]
  PaginationToken: String
}

input AwsCognitoIdentityServiceProviderListUserPoolClientsInput {
  UserPoolId: String!
  MaxResults: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListUserPoolClientsOutput {
  UserPoolClients: [AwsCognitoIdentityServiceProviderListUserPoolClientsOutputUserPoolClients]
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListUserPoolClientsOutputUserPoolClients {
  ClientId: String
  UserPoolId: String
  ClientName: String
}

input AwsCognitoIdentityServiceProviderListUserPoolsInput {
  NextToken: String
  MaxResults: Int!
}

type AwsCognitoIdentityServiceProviderListUserPoolsOutput {
  UserPools: [AwsCognitoIdentityServiceProviderListUserPoolsOutputUserPools]
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListUserPoolsOutputUserPools {
  Id: String
  Name: String
  LambdaConfig: AwsCognitoIdentityServiceProviderS4u
  Status: String
  LastModifiedDate: Date
  CreationDate: Date
}

input AwsCognitoIdentityServiceProviderListUsersInGroupInput {
  UserPoolId: String!
  GroupName: String!
  Limit: Int
  NextToken: String
}

type AwsCognitoIdentityServiceProviderListUsersInGroupOutput {
  Users: [AwsCognitoIdentityServiceProviderSs]
  NextToken: String
}

input AwsCognitoIdentityServiceProviderListUsersInput {
  UserPoolId: String!
  AttributesToGet: [String]
  Limit: Int
  PaginationToken: String
  Filter: String
}

type AwsCognitoIdentityServiceProviderListUsersOutput {
  Users: [AwsCognitoIdentityServiceProviderSs]
  PaginationToken: String
}

input AwsCognitoIdentityServiceProviderResendConfirmationCodeInput {
  ClientId: String!
  SecretHash: String
  UserContextData: AwsCognitoIdentityServiceProviderS3rInput
  Username: String!
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
}

type AwsCognitoIdentityServiceProviderResendConfirmationCodeOutput {
  CodeDeliveryDetails: AwsCognitoIdentityServiceProviderS7p
}

input AwsCognitoIdentityServiceProviderRespondToAuthChallengeInput {
  ClientId: String!
  ChallengeName: String!
  Session: String
  ChallengeResponses: JSON
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  UserContextData: AwsCognitoIdentityServiceProviderS3rInput
}

type AwsCognitoIdentityServiceProviderRespondToAuthChallengeOutput {
  ChallengeName: String
  Session: String
  ChallengeParameters: JSON
  AuthenticationResult: AwsCognitoIdentityServiceProviderS1u
}

input AwsCognitoIdentityServiceProviderS12Input {
  ProviderName: String
  ProviderAttributeName: String
  ProviderAttributeValue: String
}

type AwsCognitoIdentityServiceProviderS1d {
  DeviceKey: String
  DeviceAttributes: [AwsCognitoIdentityServiceProviderSi]
  DeviceCreateDate: Date
  DeviceLastModifiedDate: Date
  DeviceLastAuthenticatedDate: Date
}

input AwsCognitoIdentityServiceProviderS1mInput {
  AnalyticsEndpointId: String
}

input AwsCognitoIdentityServiceProviderS1nHttpHeadersInput {
  headerName: String
  headerValue: String
}

input AwsCognitoIdentityServiceProviderS1nInput {
  IpAddress: String!
  ServerName: String!
  ServerPath: String!
  HttpHeaders: [AwsCognitoIdentityServiceProviderS1nHttpHeadersInput]!
  EncodedData: String
}

type AwsCognitoIdentityServiceProviderS1u {
  AccessToken: String
  ExpiresIn: Int
  TokenType: String
  RefreshToken: String
  IdToken: String
  NewDeviceMetadata: AwsCognitoIdentityServiceProviderS1uNewDeviceMetadata
}

type AwsCognitoIdentityServiceProviderS1uNewDeviceMetadata {
  DeviceKey: String
  DeviceGroupKey: String
}

type AwsCognitoIdentityServiceProviderS29 {
  GroupName: String
  UserPoolId: String
  Description: String
  RoleArn: String
  Precedence: Int
  LastModifiedDate: Date
  CreationDate: Date
}

input AwsCognitoIdentityServiceProviderS30Input {
  Enabled: Boolean
  PreferredMfa: Boolean
}

input AwsCognitoIdentityServiceProviderS31Input {
  Enabled: Boolean
  PreferredMfa: Boolean
}

input AwsCognitoIdentityServiceProviderS3rInput {
  EncodedData: String
}

type AwsCognitoIdentityServiceProviderS4 {
  Name: String
  AttributeDataType: String
  DeveloperOnlyAttribute: Boolean
  Mutable: Boolean
  Required: Boolean
  NumberAttributeConstraints: AwsCognitoIdentityServiceProviderS4NumberAttributeConstraints
  StringAttributeConstraints: AwsCognitoIdentityServiceProviderS4StringAttributeConstraints
}

type AwsCognitoIdentityServiceProviderS46 {
  UserPoolId: String
  ProviderName: String
  ProviderType: String
  ProviderDetails: JSON
  AttributeMapping: JSON
  IdpIdentifiers: [String]
  LastModifiedDate: Date
  CreationDate: Date
}

type AwsCognitoIdentityServiceProviderS4a {
  ScopeName: String!
  ScopeDescription: String!
}

input AwsCognitoIdentityServiceProviderS4aInput {
  ScopeName: String!
  ScopeDescription: String!
}

type AwsCognitoIdentityServiceProviderS4f {
  UserPoolId: String
  Identifier: String
  Name: String
  Scopes: [AwsCognitoIdentityServiceProviderS4a]
}

input AwsCognitoIdentityServiceProviderS4Input {
  Name: String
  AttributeDataType: String
  DeveloperOnlyAttribute: Boolean
  Mutable: Boolean
  Required: Boolean
  NumberAttributeConstraints: AwsCognitoIdentityServiceProviderS4NumberAttributeConstraintsInput
  StringAttributeConstraints: AwsCognitoIdentityServiceProviderS4StringAttributeConstraintsInput
}

type AwsCognitoIdentityServiceProviderS4j {
  JobName: String
  JobId: String
  UserPoolId: String
  PreSignedUrl: String
  CreationDate: Date
  StartDate: Date
  CompletionDate: Date
  Status: String
  CloudWatchLogsRoleArn: String
  ImportedUsers: JSON
  SkippedUsers: JSON
  FailedUsers: JSON
  CompletionMessage: String
}

type AwsCognitoIdentityServiceProviderS4NumberAttributeConstraints {
  MinValue: String
  MaxValue: String
}

input AwsCognitoIdentityServiceProviderS4NumberAttributeConstraintsInput {
  MinValue: String
  MaxValue: String
}

type AwsCognitoIdentityServiceProviderS4r {
  PasswordPolicy: AwsCognitoIdentityServiceProviderS4rPasswordPolicy
}

input AwsCognitoIdentityServiceProviderS4rInput {
  PasswordPolicy: AwsCognitoIdentityServiceProviderS4rPasswordPolicyInput
}

type AwsCognitoIdentityServiceProviderS4rPasswordPolicy {
  MinimumLength: Int
  RequireUppercase: Boolean
  RequireLowercase: Boolean
  RequireNumbers: Boolean
  RequireSymbols: Boolean
}

input AwsCognitoIdentityServiceProviderS4rPasswordPolicyInput {
  MinimumLength: Int
  RequireUppercase: Boolean
  RequireLowercase: Boolean
  RequireNumbers: Boolean
  RequireSymbols: Boolean
}

type AwsCognitoIdentityServiceProviderS4StringAttributeConstraints {
  MinLength: String
  MaxLength: String
}

input AwsCognitoIdentityServiceProviderS4StringAttributeConstraintsInput {
  MinLength: String
  MaxLength: String
}

type AwsCognitoIdentityServiceProviderS4u {
  PreSignUp: String
  CustomMessage: String
  PostConfirmation: String
  PreAuthentication: String
  PostAuthentication: String
  DefineAuthChallenge: String
  CreateAuthChallenge: String
  VerifyAuthChallengeResponse: String
  PreTokenGeneration: String
}

input AwsCognitoIdentityServiceProviderS4uInput {
  PreSignUp: String
  CustomMessage: String
  PostConfirmation: String
  PreAuthentication: String
  PostAuthentication: String
  DefineAuthChallenge: String
  CreateAuthChallenge: String
  VerifyAuthChallengeResponse: String
  PreTokenGeneration: String
}

type AwsCognitoIdentityServiceProviderS54 {
  SmsMessage: String
  EmailMessage: String
  EmailSubject: String
  EmailMessageByLink: String
  EmailSubjectByLink: String
  DefaultEmailOption: String
}

input AwsCognitoIdentityServiceProviderS54Input {
  SmsMessage: String
  EmailMessage: String
  EmailSubject: String
  EmailMessageByLink: String
  EmailSubjectByLink: String
  DefaultEmailOption: String
}

type AwsCognitoIdentityServiceProviderS59 {
  ChallengeRequiredOnNewDevice: Boolean
  DeviceOnlyRememberedOnUserPrompt: Boolean
}

input AwsCognitoIdentityServiceProviderS59Input {
  ChallengeRequiredOnNewDevice: Boolean
  DeviceOnlyRememberedOnUserPrompt: Boolean
}

type AwsCognitoIdentityServiceProviderS5a {
  SourceArn: String
  ReplyToEmailAddress: String
}

input AwsCognitoIdentityServiceProviderS5aInput {
  SourceArn: String
  ReplyToEmailAddress: String
}

type AwsCognitoIdentityServiceProviderS5c {
  SnsCallerArn: String!
  ExternalId: String
}

input AwsCognitoIdentityServiceProviderS5cInput {
  SnsCallerArn: String!
  ExternalId: String
}

type AwsCognitoIdentityServiceProviderS5e {
  AllowAdminCreateUserOnly: Boolean
  UnusedAccountValidityDays: Int
  InviteMessageTemplate: AwsCognitoIdentityServiceProviderS5eInviteMessageTemplate
}

input AwsCognitoIdentityServiceProviderS5eInput {
  AllowAdminCreateUserOnly: Boolean
  UnusedAccountValidityDays: Int
  InviteMessageTemplate: AwsCognitoIdentityServiceProviderS5eInviteMessageTemplateInput
}

type AwsCognitoIdentityServiceProviderS5eInviteMessageTemplate {
  SMSMessage: String
  EmailMessage: String
  EmailSubject: String
}

input AwsCognitoIdentityServiceProviderS5eInviteMessageTemplateInput {
  SMSMessage: String
  EmailMessage: String
  EmailSubject: String
}

type AwsCognitoIdentityServiceProviderS5i {
  AdvancedSecurityMode: String!
}

input AwsCognitoIdentityServiceProviderS5iInput {
  AdvancedSecurityMode: String!
}

type AwsCognitoIdentityServiceProviderS5l {
  Id: String
  Name: String
  Policies: AwsCognitoIdentityServiceProviderS4r
  LambdaConfig: AwsCognitoIdentityServiceProviderS4u
  Status: String
  LastModifiedDate: Date
  CreationDate: Date
  SchemaAttributes: [AwsCognitoIdentityServiceProviderS4]
  AutoVerifiedAttributes: [String]
  AliasAttributes: [String]
  UsernameAttributes: [String]
  SmsVerificationMessage: String
  EmailVerificationMessage: String
  EmailVerificationSubject: String
  VerificationMessageTemplate: AwsCognitoIdentityServiceProviderS54
  SmsAuthenticationMessage: String
  MfaConfiguration: String
  DeviceConfiguration: AwsCognitoIdentityServiceProviderS59
  EstimatedNumberOfUsers: Int
  EmailConfiguration: AwsCognitoIdentityServiceProviderS5a
  SmsConfiguration: AwsCognitoIdentityServiceProviderS5c
  UserPoolTags: JSON
  SmsConfigurationFailure: String
  EmailConfigurationFailure: String
  AdminCreateUserConfig: AwsCognitoIdentityServiceProviderS5e
  UserPoolAddOns: AwsCognitoIdentityServiceProviderS5i
}

type AwsCognitoIdentityServiceProviderS63 {
  ApplicationId: String!
  RoleArn: String!
  ExternalId: String!
  UserDataShared: Boolean
}

input AwsCognitoIdentityServiceProviderS63Input {
  ApplicationId: String!
  RoleArn: String!
  ExternalId: String!
  UserDataShared: Boolean
}

type AwsCognitoIdentityServiceProviderS66 {
  UserPoolId: String
  ClientName: String
  ClientId: String
  ClientSecret: String
  LastModifiedDate: Date
  CreationDate: Date
  RefreshTokenValidity: Int
  ReadAttributes: [String]
  WriteAttributes: [String]
  ExplicitAuthFlows: [String]
  SupportedIdentityProviders: [String]
  CallbackURLs: [String]
  LogoutURLs: [String]
  DefaultRedirectURI: String
  AllowedOAuthFlows: [String]
  AllowedOAuthScopes: [String]
  AllowedOAuthFlowsUserPoolClient: Boolean
  AnalyticsConfiguration: AwsCognitoIdentityServiceProviderS63
}

type AwsCognitoIdentityServiceProviderS6r {
  UserPoolId: String
  ClientId: String
  CompromisedCredentialsRiskConfiguration: AwsCognitoIdentityServiceProviderS6s
  AccountTakeoverRiskConfiguration: AwsCognitoIdentityServiceProviderS6x
  RiskExceptionConfiguration: AwsCognitoIdentityServiceProviderS76
  LastModifiedDate: Date
}

type AwsCognitoIdentityServiceProviderS6s {
  EventFilter: [String]
  Actions: AwsCognitoIdentityServiceProviderS6sActions!
}

type AwsCognitoIdentityServiceProviderS6sActions {
  EventAction: String!
}

input AwsCognitoIdentityServiceProviderS6sActionsInput {
  EventAction: String!
}

input AwsCognitoIdentityServiceProviderS6sInput {
  EventFilter: [String]
  Actions: AwsCognitoIdentityServiceProviderS6sActionsInput!
}

type AwsCognitoIdentityServiceProviderS6x {
  NotifyConfiguration: AwsCognitoIdentityServiceProviderS6xNotifyConfiguration
  Actions: AwsCognitoIdentityServiceProviderS6xActions!
}

type AwsCognitoIdentityServiceProviderS6xActions {
  LowAction: AwsCognitoIdentityServiceProviderS73
  MediumAction: AwsCognitoIdentityServiceProviderS73
  HighAction: AwsCognitoIdentityServiceProviderS73
}

input AwsCognitoIdentityServiceProviderS6xActionsInput {
  LowAction: AwsCognitoIdentityServiceProviderS73Input
  MediumAction: AwsCognitoIdentityServiceProviderS73Input
  HighAction: AwsCognitoIdentityServiceProviderS73Input
}

input AwsCognitoIdentityServiceProviderS6xInput {
  NotifyConfiguration: AwsCognitoIdentityServiceProviderS6xNotifyConfigurationInput
  Actions: AwsCognitoIdentityServiceProviderS6xActionsInput!
}

type AwsCognitoIdentityServiceProviderS6xNotifyConfiguration {
  From: String
  ReplyTo: String
  SourceArn: String!
  BlockEmail: AwsCognitoIdentityServiceProviderS6z
  NoActionEmail: AwsCognitoIdentityServiceProviderS6z
  MfaEmail: AwsCognitoIdentityServiceProviderS6z
}

input AwsCognitoIdentityServiceProviderS6xNotifyConfigurationInput {
  From: String
  ReplyTo: String
  SourceArn: String!
  BlockEmail: AwsCognitoIdentityServiceProviderS6zInput
  NoActionEmail: AwsCognitoIdentityServiceProviderS6zInput
  MfaEmail: AwsCognitoIdentityServiceProviderS6zInput
}

type AwsCognitoIdentityServiceProviderS6z {
  Subject: String!
  HtmlBody: String
  TextBody: String
}

input AwsCognitoIdentityServiceProviderS6zInput {
  Subject: String!
  HtmlBody: String
  TextBody: String
}

type AwsCognitoIdentityServiceProviderS73 {
  Notify: Boolean!
  EventAction: String!
}

input AwsCognitoIdentityServiceProviderS73Input {
  Notify: Boolean!
  EventAction: String!
}

type AwsCognitoIdentityServiceProviderS76 {
  BlockedIPRangeList: [String]
  SkippedIPRangeList: [String]
}

input AwsCognitoIdentityServiceProviderS76Input {
  BlockedIPRangeList: [String]
  SkippedIPRangeList: [String]
}

type AwsCognitoIdentityServiceProviderS7p {
  Destination: String
  DeliveryMedium: String
  AttributeName: String
}

type AwsCognitoIdentityServiceProviderS81 {
  UserPoolId: String
  ClientId: String
  ImageUrl: String
  CSS: String
  CSSVersion: String
  LastModifiedDate: Date
  CreationDate: Date
}

type AwsCognitoIdentityServiceProviderS8b {
  SmsAuthenticationMessage: String
  SmsConfiguration: AwsCognitoIdentityServiceProviderS5c
}

input AwsCognitoIdentityServiceProviderS8bInput {
  SmsAuthenticationMessage: String
  SmsConfiguration: AwsCognitoIdentityServiceProviderS5cInput
}

type AwsCognitoIdentityServiceProviderS8c {
  Enabled: Boolean
}

input AwsCognitoIdentityServiceProviderS8cInput {
  Enabled: Boolean
}

input AwsCognitoIdentityServiceProviderSetRiskConfigurationInput {
  UserPoolId: String!
  ClientId: String
  CompromisedCredentialsRiskConfiguration: AwsCognitoIdentityServiceProviderS6sInput
  AccountTakeoverRiskConfiguration: AwsCognitoIdentityServiceProviderS6xInput
  RiskExceptionConfiguration: AwsCognitoIdentityServiceProviderS76Input
}

type AwsCognitoIdentityServiceProviderSetRiskConfigurationOutput {
  RiskConfiguration: AwsCognitoIdentityServiceProviderS6r!
}

input AwsCognitoIdentityServiceProviderSetUICustomizationInput {
  UserPoolId: String!
  ClientId: String
  CSS: String
  ImageFile: JSON
}

type AwsCognitoIdentityServiceProviderSetUICustomizationOutput {
  UICustomization: AwsCognitoIdentityServiceProviderS81!
}

input AwsCognitoIdentityServiceProviderSetUserMFAPreferenceInput {
  SMSMfaSettings: AwsCognitoIdentityServiceProviderS30Input
  SoftwareTokenMfaSettings: AwsCognitoIdentityServiceProviderS31Input
  AccessToken: String!
}

input AwsCognitoIdentityServiceProviderSetUserPoolMfaConfigInput {
  UserPoolId: String!
  SmsMfaConfiguration: AwsCognitoIdentityServiceProviderS8bInput
  SoftwareTokenMfaConfiguration: AwsCognitoIdentityServiceProviderS8cInput
  MfaConfiguration: String
}

type AwsCognitoIdentityServiceProviderSetUserPoolMfaConfigOutput {
  SmsMfaConfiguration: AwsCognitoIdentityServiceProviderS8b
  SoftwareTokenMfaConfiguration: AwsCognitoIdentityServiceProviderS8c
  MfaConfiguration: String
}

input AwsCognitoIdentityServiceProviderSetUserSettingsInput {
  AccessToken: String!
  MFAOptions: [AwsCognitoIdentityServiceProviderSvInput]!
}

type AwsCognitoIdentityServiceProviderSi {
  Name: String!
  Value: String
}

input AwsCognitoIdentityServiceProviderSignUpInput {
  ClientId: String!
  SecretHash: String
  Username: String!
  Password: String!
  UserAttributes: [AwsCognitoIdentityServiceProviderSiInput]
  ValidationData: [AwsCognitoIdentityServiceProviderSiInput]
  AnalyticsMetadata: AwsCognitoIdentityServiceProviderS1mInput
  UserContextData: AwsCognitoIdentityServiceProviderS3rInput
}

type AwsCognitoIdentityServiceProviderSignUpOutput {
  UserConfirmed: Boolean!
  CodeDeliveryDetails: AwsCognitoIdentityServiceProviderS7p
  UserSub: String!
}

input AwsCognitoIdentityServiceProviderSiInput {
  Name: String!
  Value: String
}

type AwsCognitoIdentityServiceProviderSs {
  Username: String
  Attributes: [AwsCognitoIdentityServiceProviderSi]
  UserCreateDate: Date
  UserLastModifiedDate: Date
  Enabled: Boolean
  UserStatus: String
  MFAOptions: [AwsCognitoIdentityServiceProviderSv]
}

input AwsCognitoIdentityServiceProviderStartUserImportJobInput {
  UserPoolId: String!
  JobId: String!
}

type AwsCognitoIdentityServiceProviderStartUserImportJobOutput {
  UserImportJob: AwsCognitoIdentityServiceProviderS4j
}

input AwsCognitoIdentityServiceProviderStopUserImportJobInput {
  UserPoolId: String!
  JobId: String!
}

type AwsCognitoIdentityServiceProviderStopUserImportJobOutput {
  UserImportJob: AwsCognitoIdentityServiceProviderS4j
}

type AwsCognitoIdentityServiceProviderSv {
  DeliveryMedium: String
  AttributeName: String
}

input AwsCognitoIdentityServiceProviderSvInput {
  DeliveryMedium: String
  AttributeName: String
}

input AwsCognitoIdentityServiceProviderUpdateAuthEventFeedbackInput {
  UserPoolId: String!
  Username: String!
  EventId: String!
  FeedbackToken: String!
  FeedbackValue: String!
}

input AwsCognitoIdentityServiceProviderUpdateDeviceStatusInput {
  AccessToken: String!
  DeviceKey: String!
  DeviceRememberedStatus: String
}

input AwsCognitoIdentityServiceProviderUpdateGroupInput {
  GroupName: String!
  UserPoolId: String!
  Description: String
  RoleArn: String
  Precedence: Int
}

type AwsCognitoIdentityServiceProviderUpdateGroupOutput {
  Group: AwsCognitoIdentityServiceProviderS29
}

input AwsCognitoIdentityServiceProviderUpdateIdentityProviderInput {
  UserPoolId: String!
  ProviderName: String!
  ProviderDetails: JSON
  AttributeMapping: JSON
  IdpIdentifiers: [String]
}

type AwsCognitoIdentityServiceProviderUpdateIdentityProviderOutput {
  IdentityProvider: AwsCognitoIdentityServiceProviderS46!
}

input AwsCognitoIdentityServiceProviderUpdateResourceServerInput {
  UserPoolId: String!
  Identifier: String!
  Name: String!
  Scopes: [AwsCognitoIdentityServiceProviderS4aInput]
}

type AwsCognitoIdentityServiceProviderUpdateResourceServerOutput {
  ResourceServer: AwsCognitoIdentityServiceProviderS4f!
}

input AwsCognitoIdentityServiceProviderUpdateUserAttributesInput {
  UserAttributes: [AwsCognitoIdentityServiceProviderSiInput]!
  AccessToken: String!
}

type AwsCognitoIdentityServiceProviderUpdateUserAttributesOutput {
  CodeDeliveryDetailsList: [AwsCognitoIdentityServiceProviderS7p]
}

input AwsCognitoIdentityServiceProviderUpdateUserPoolClientInput {
  UserPoolId: String!
  ClientId: String!
  ClientName: String
  RefreshTokenValidity: Int
  ReadAttributes: [String]
  WriteAttributes: [String]
  ExplicitAuthFlows: [String]
  SupportedIdentityProviders: [String]
  CallbackURLs: [String]
  LogoutURLs: [String]
  DefaultRedirectURI: String
  AllowedOAuthFlows: [String]
  AllowedOAuthScopes: [String]
  AllowedOAuthFlowsUserPoolClient: Boolean
  AnalyticsConfiguration: AwsCognitoIdentityServiceProviderS63Input
}

type AwsCognitoIdentityServiceProviderUpdateUserPoolClientOutput {
  UserPoolClient: AwsCognitoIdentityServiceProviderS66
}

input AwsCognitoIdentityServiceProviderUpdateUserPoolInput {
  UserPoolId: String!
  Policies: AwsCognitoIdentityServiceProviderS4rInput
  LambdaConfig: AwsCognitoIdentityServiceProviderS4uInput
  AutoVerifiedAttributes: [String]
  SmsVerificationMessage: String
  EmailVerificationMessage: String
  EmailVerificationSubject: String
  VerificationMessageTemplate: AwsCognitoIdentityServiceProviderS54Input
  SmsAuthenticationMessage: String
  MfaConfiguration: String
  DeviceConfiguration: AwsCognitoIdentityServiceProviderS59Input
  EmailConfiguration: AwsCognitoIdentityServiceProviderS5aInput
  SmsConfiguration: AwsCognitoIdentityServiceProviderS5cInput
  UserPoolTags: JSON
  AdminCreateUserConfig: AwsCognitoIdentityServiceProviderS5eInput
  UserPoolAddOns: AwsCognitoIdentityServiceProviderS5iInput
}

input AwsCognitoIdentityServiceProviderVerifySoftwareTokenInput {
  AccessToken: String
  Session: String
  UserCode: String!
  FriendlyDeviceName: String
}

type AwsCognitoIdentityServiceProviderVerifySoftwareTokenOutput {
  Status: String
  Session: String
}

input AwsCognitoIdentityServiceProviderVerifyUserAttributeInput {
  AccessToken: String!
  AttributeName: String!
  Code: String!
}

input AwsCognitoIdentitySetIdentityPoolRolesInput {
  IdentityPoolId: String!
  Roles: JSON!
  RoleMappings: JSON
}

type AwsCognitoIdentitySr {
  IdentityId: String
  Logins: [String]
  CreationDate: Date
  LastModifiedDate: Date
}

input AwsCognitoIdentityUnlinkDeveloperIdentityInput {
  IdentityId: String!
  IdentityPoolId: String!
  DeveloperProviderName: String!
  DeveloperUserIdentifier: String!
}

input AwsCognitoIdentityUnlinkIdentityInput {
  IdentityId: String!
  Logins: JSON!
  LoginsToRemove: [String]!
}

# Amazon Cognito Sync (2014-06-30)
type AwsCognitoSync {
  bulkPublish(input: AwsCognitoSyncBulkPublishInput!, config: AwsConfig): AwsCognitoSyncBulkPublishOutput
  deleteDataset(input: AwsCognitoSyncDeleteDatasetInput!, config: AwsConfig): AwsCognitoSyncDeleteDatasetOutput
  describeDataset(input: AwsCognitoSyncDescribeDatasetInput!, config: AwsConfig): AwsCognitoSyncDescribeDatasetOutput
  describeIdentityPoolUsage(input: AwsCognitoSyncDescribeIdentityPoolUsageInput!, config: AwsConfig): AwsCognitoSyncDescribeIdentityPoolUsageOutput
  describeIdentityUsage(input: AwsCognitoSyncDescribeIdentityUsageInput!, config: AwsConfig): AwsCognitoSyncDescribeIdentityUsageOutput
  getBulkPublishDetails(input: AwsCognitoSyncGetBulkPublishDetailsInput!, config: AwsConfig): AwsCognitoSyncGetBulkPublishDetailsOutput
  getCognitoEvents(input: AwsCognitoSyncGetCognitoEventsInput!, config: AwsConfig): AwsCognitoSyncGetCognitoEventsOutput
  getIdentityPoolConfiguration(input: AwsCognitoSyncGetIdentityPoolConfigurationInput!, config: AwsConfig): AwsCognitoSyncGetIdentityPoolConfigurationOutput
  listDatasets(input: AwsCognitoSyncListDatasetsInput!, config: AwsConfig): AwsCognitoSyncListDatasetsOutput
  listIdentityPoolUsage(input: AwsCognitoSyncListIdentityPoolUsageInput, config: AwsConfig): AwsCognitoSyncListIdentityPoolUsageOutput
  listRecords(input: AwsCognitoSyncListRecordsInput!, config: AwsConfig): AwsCognitoSyncListRecordsOutput
  registerDevice(input: AwsCognitoSyncRegisterDeviceInput!, config: AwsConfig): AwsCognitoSyncRegisterDeviceOutput
  setCognitoEvents(input: AwsCognitoSyncSetCognitoEventsInput!, config: AwsConfig): JSON
  setIdentityPoolConfiguration(input: AwsCognitoSyncSetIdentityPoolConfigurationInput!, config: AwsConfig): AwsCognitoSyncSetIdentityPoolConfigurationOutput
  subscribeToDataset(input: AwsCognitoSyncSubscribeToDatasetInput!, config: AwsConfig): JSON
  unsubscribeFromDataset(input: AwsCognitoSyncUnsubscribeFromDatasetInput!, config: AwsConfig): JSON
  updateRecords(input: AwsCognitoSyncUpdateRecordsInput!, config: AwsConfig): AwsCognitoSyncUpdateRecordsOutput
}

input AwsCognitoSyncBulkPublishInput {
  IdentityPoolId: String!
}

type AwsCognitoSyncBulkPublishOutput {
  IdentityPoolId: String
}

input AwsCognitoSyncDeleteDatasetInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
}

type AwsCognitoSyncDeleteDatasetOutput {
  Dataset: AwsCognitoSyncS8
}

input AwsCognitoSyncDescribeDatasetInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
}

type AwsCognitoSyncDescribeDatasetOutput {
  Dataset: AwsCognitoSyncS8
}

input AwsCognitoSyncDescribeIdentityPoolUsageInput {
  IdentityPoolId: String!
}

type AwsCognitoSyncDescribeIdentityPoolUsageOutput {
  IdentityPoolUsage: AwsCognitoSyncSg
}

input AwsCognitoSyncDescribeIdentityUsageInput {
  IdentityPoolId: String!
  IdentityId: String!
}

type AwsCognitoSyncDescribeIdentityUsageOutput {
  IdentityUsage: AwsCognitoSyncDescribeIdentityUsageOutputIdentityUsage
}

type AwsCognitoSyncDescribeIdentityUsageOutputIdentityUsage {
  IdentityId: String
  IdentityPoolId: String
  LastModifiedDate: Date
  DatasetCount: Int
  DataStorage: JSON
}

input AwsCognitoSyncGetBulkPublishDetailsInput {
  IdentityPoolId: String!
}

type AwsCognitoSyncGetBulkPublishDetailsOutput {
  IdentityPoolId: String
  BulkPublishStartTime: Date
  BulkPublishCompleteTime: Date
  BulkPublishStatus: String
  FailureMessage: String
}

input AwsCognitoSyncGetCognitoEventsInput {
  IdentityPoolId: String!
}

type AwsCognitoSyncGetCognitoEventsOutput {
  Events: JSON
}

input AwsCognitoSyncGetIdentityPoolConfigurationInput {
  IdentityPoolId: String!
}

type AwsCognitoSyncGetIdentityPoolConfigurationOutput {
  IdentityPoolId: String
  PushSync: AwsCognitoSyncSv
  CognitoStreams: AwsCognitoSyncSz
}

input AwsCognitoSyncListDatasetsInput {
  IdentityPoolId: String!
  IdentityId: String!
  NextToken: String
  MaxResults: Int
}

type AwsCognitoSyncListDatasetsOutput {
  Datasets: [AwsCognitoSyncS8]
  Count: Int
  NextToken: String
}

input AwsCognitoSyncListIdentityPoolUsageInput {
  NextToken: String
  MaxResults: Int
}

type AwsCognitoSyncListIdentityPoolUsageOutput {
  IdentityPoolUsages: [AwsCognitoSyncSg]
  MaxResults: Int
  Count: Int
  NextToken: String
}

input AwsCognitoSyncListRecordsInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
  LastSyncCount: JSON
  NextToken: String
  MaxResults: Int
  SyncSessionToken: String
}

type AwsCognitoSyncListRecordsOutput {
  Records: [AwsCognitoSyncS1c]
  NextToken: String
  Count: Int
  DatasetSyncCount: JSON
  LastModifiedBy: String
  MergedDatasetNames: [String]
  DatasetExists: Boolean
  DatasetDeletedAfterRequestedSyncCount: Boolean
  SyncSessionToken: String
}

input AwsCognitoSyncRegisterDeviceInput {
  IdentityPoolId: String!
  IdentityId: String!
  Platform: String!
  Token: String!
}

type AwsCognitoSyncRegisterDeviceOutput {
  DeviceId: String
}

type AwsCognitoSyncS1c {
  Key: String
  Value: String
  SyncCount: JSON
  LastModifiedDate: Date
  LastModifiedBy: String
  DeviceLastModifiedDate: Date
}

type AwsCognitoSyncS8 {
  IdentityId: String
  DatasetName: String
  CreationDate: Date
  LastModifiedDate: Date
  LastModifiedBy: String
  DataStorage: JSON
  NumRecords: JSON
}

input AwsCognitoSyncSetCognitoEventsInput {
  IdentityPoolId: String!
  Events: JSON!
}

input AwsCognitoSyncSetIdentityPoolConfigurationInput {
  IdentityPoolId: String!
  PushSync: AwsCognitoSyncSvInput
  CognitoStreams: AwsCognitoSyncSzInput
}

type AwsCognitoSyncSetIdentityPoolConfigurationOutput {
  IdentityPoolId: String
  PushSync: AwsCognitoSyncSv
  CognitoStreams: AwsCognitoSyncSz
}

type AwsCognitoSyncSg {
  IdentityPoolId: String
  SyncSessionsCount: JSON
  DataStorage: JSON
  LastModifiedDate: Date
}

input AwsCognitoSyncSubscribeToDatasetInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
  DeviceId: String!
}

type AwsCognitoSyncSv {
  ApplicationArns: [String]
  RoleArn: String
}

input AwsCognitoSyncSvInput {
  ApplicationArns: [String]
  RoleArn: String
}

type AwsCognitoSyncSz {
  StreamName: String
  RoleArn: String
  StreamingStatus: String
}

input AwsCognitoSyncSzInput {
  StreamName: String
  RoleArn: String
  StreamingStatus: String
}

input AwsCognitoSyncUnsubscribeFromDatasetInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
  DeviceId: String!
}

input AwsCognitoSyncUpdateRecordsInput {
  IdentityPoolId: String!
  IdentityId: String!
  DatasetName: String!
  DeviceId: String
  RecordPatches: [AwsCognitoSyncUpdateRecordsRecordPatchesInput]
  SyncSessionToken: String!
  ClientContext: String
}

type AwsCognitoSyncUpdateRecordsOutput {
  Records: [AwsCognitoSyncS1c]
}

input AwsCognitoSyncUpdateRecordsRecordPatchesInput {
  Op: String!
  Key: String!
  Value: String
  SyncCount: JSON!
  DeviceLastModifiedDate: Date
}

# Amazon Comprehend (2017-11-27)
type AwsComprehend {
  batchDetectDominantLanguage(input: AwsComprehendBatchDetectDominantLanguageInput!, config: AwsConfig): AwsComprehendBatchDetectDominantLanguageOutput
  batchDetectEntities(input: AwsComprehendBatchDetectEntitiesInput!, config: AwsConfig): AwsComprehendBatchDetectEntitiesOutput
  batchDetectKeyPhrases(input: AwsComprehendBatchDetectKeyPhrasesInput!, config: AwsConfig): AwsComprehendBatchDetectKeyPhrasesOutput
  batchDetectSentiment(input: AwsComprehendBatchDetectSentimentInput!, config: AwsConfig): AwsComprehendBatchDetectSentimentOutput
  describeTopicsDetectionJob(input: AwsComprehendDescribeTopicsDetectionJobInput!, config: AwsConfig): AwsComprehendDescribeTopicsDetectionJobOutput
  detectDominantLanguage(input: AwsComprehendDetectDominantLanguageInput!, config: AwsConfig): AwsComprehendDetectDominantLanguageOutput
  detectEntities(input: AwsComprehendDetectEntitiesInput!, config: AwsConfig): AwsComprehendDetectEntitiesOutput
  detectKeyPhrases(input: AwsComprehendDetectKeyPhrasesInput!, config: AwsConfig): AwsComprehendDetectKeyPhrasesOutput
  detectSentiment(input: AwsComprehendDetectSentimentInput!, config: AwsConfig): AwsComprehendDetectSentimentOutput
  listTopicsDetectionJobs(input: AwsComprehendListTopicsDetectionJobsInput, config: AwsConfig): AwsComprehendListTopicsDetectionJobsOutput
  startTopicsDetectionJob(input: AwsComprehendStartTopicsDetectionJobInput!, config: AwsConfig): AwsComprehendStartTopicsDetectionJobOutput
}

input AwsComprehendBatchDetectDominantLanguageInput {
  TextList: [String]!
}

type AwsComprehendBatchDetectDominantLanguageOutput {
  ResultList: [AwsComprehendBatchDetectDominantLanguageOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectDominantLanguageOutputResultList {
  Index: Int
  Languages: [AwsComprehendS8]
}

input AwsComprehendBatchDetectEntitiesInput {
  TextList: [String]!
  LanguageCode: String!
}

type AwsComprehendBatchDetectEntitiesOutput {
  ResultList: [AwsComprehendBatchDetectEntitiesOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectEntitiesOutputResultList {
  Index: Int
  Entities: [AwsComprehendSh]
}

input AwsComprehendBatchDetectKeyPhrasesInput {
  TextList: [String]!
  LanguageCode: String!
}

type AwsComprehendBatchDetectKeyPhrasesOutput {
  ResultList: [AwsComprehendBatchDetectKeyPhrasesOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectKeyPhrasesOutputResultList {
  Index: Int
  KeyPhrases: [AwsComprehendSo]
}

input AwsComprehendBatchDetectSentimentInput {
  TextList: [String]!
  LanguageCode: String!
}

type AwsComprehendBatchDetectSentimentOutput {
  ResultList: [AwsComprehendBatchDetectSentimentOutputResultList]!
  ErrorList: [AwsComprehendSb]!
}

type AwsComprehendBatchDetectSentimentOutputResultList {
  Index: Int
  Sentiment: String
  SentimentScore: AwsComprehendSv
}

input AwsComprehendDescribeTopicsDetectionJobInput {
  JobId: String!
}

type AwsComprehendDescribeTopicsDetectionJobOutput {
  TopicsDetectionJobProperties: AwsComprehendSz
}

input AwsComprehendDetectDominantLanguageInput {
  Text: String!
}

type AwsComprehendDetectDominantLanguageOutput {
  Languages: [AwsComprehendS8]
}

input AwsComprehendDetectEntitiesInput {
  Text: String!
  LanguageCode: String!
}

type AwsComprehendDetectEntitiesOutput {
  Entities: [AwsComprehendSh]
}

input AwsComprehendDetectKeyPhrasesInput {
  Text: String!
  LanguageCode: String!
}

type AwsComprehendDetectKeyPhrasesOutput {
  KeyPhrases: [AwsComprehendSo]
}

input AwsComprehendDetectSentimentInput {
  Text: String!
  LanguageCode: String!
}

type AwsComprehendDetectSentimentOutput {
  Sentiment: String
  SentimentScore: AwsComprehendSv
}

input AwsComprehendListTopicsDetectionJobsFilterInput {
  JobName: String
  JobStatus: String
  SubmitTimeBefore: Date
  SubmitTimeAfter: Date
}

input AwsComprehendListTopicsDetectionJobsInput {
  Filter: AwsComprehendListTopicsDetectionJobsFilterInput
  NextToken: String
  MaxResults: Int
}

type AwsComprehendListTopicsDetectionJobsOutput {
  TopicsDetectionJobPropertiesList: [AwsComprehendSz]
  NextToken: String
}

type AwsComprehendS14 {
  S3Uri: String!
  InputFormat: String
}

input AwsComprehendS14Input {
  S3Uri: String!
  InputFormat: String
}

type AwsComprehendS17 {
  S3Uri: String!
}

input AwsComprehendS17Input {
  S3Uri: String!
}

type AwsComprehendS8 {
  LanguageCode: String
  Score: Float
}

type AwsComprehendSb {
  Index: Int
  ErrorCode: String
  ErrorMessage: String
}

type AwsComprehendSh {
  Score: Float
  Type: String
  Text: String
  BeginOffset: Int
  EndOffset: Int
}

type AwsComprehendSo {
  Score: Float
  Text: String
  BeginOffset: Int
  EndOffset: Int
}

input AwsComprehendStartTopicsDetectionJobInput {
  InputDataConfig: AwsComprehendS14Input!
  OutputDataConfig: AwsComprehendS17Input!
  DataAccessRoleArn: String!
  JobName: String
  NumberOfTopics: Int
  ClientRequestToken: String
}

type AwsComprehendStartTopicsDetectionJobOutput {
  JobId: String
  JobStatus: String
}

type AwsComprehendSv {
  Positive: Float
  Negative: Float
  Neutral: Float
  Mixed: Float
}

type AwsComprehendSz {
  JobId: String
  JobName: String
  JobStatus: String
  Message: String
  SubmitTime: Date
  EndTime: Date
  InputDataConfig: AwsComprehendS14
  OutputDataConfig: AwsComprehendS17
  NumberOfTopics: Int
}

input AwsConfig {
  accessKeyId: String
  secretAccessKey: String
  region: String
}

# AWS Config (2014-11-12)
type AwsConfigService {
  deleteConfigRule(input: AwsConfigServiceDeleteConfigRuleInput!, config: AwsConfig): JSON
  deleteConfigurationRecorder(input: AwsConfigServiceDeleteConfigurationRecorderInput!, config: AwsConfig): JSON
  deleteDeliveryChannel(input: AwsConfigServiceDeleteDeliveryChannelInput!, config: AwsConfig): JSON
  deleteEvaluationResults(input: AwsConfigServiceDeleteEvaluationResultsInput!, config: AwsConfig): JSON
  deliverConfigSnapshot(input: AwsConfigServiceDeliverConfigSnapshotInput!, config: AwsConfig): AwsConfigServiceDeliverConfigSnapshotOutput
  describeComplianceByConfigRule(input: AwsConfigServiceDescribeComplianceByConfigRuleInput, config: AwsConfig): AwsConfigServiceDescribeComplianceByConfigRuleOutput
  describeComplianceByResource(input: AwsConfigServiceDescribeComplianceByResourceInput, config: AwsConfig): AwsConfigServiceDescribeComplianceByResourceOutput
  describeConfigRuleEvaluationStatus(input: AwsConfigServiceDescribeConfigRuleEvaluationStatusInput, config: AwsConfig): AwsConfigServiceDescribeConfigRuleEvaluationStatusOutput
  describeConfigRules(input: AwsConfigServiceDescribeConfigRulesInput, config: AwsConfig): AwsConfigServiceDescribeConfigRulesOutput
  describeConfigurationRecorderStatus(input: AwsConfigServiceDescribeConfigurationRecorderStatusInput, config: AwsConfig): AwsConfigServiceDescribeConfigurationRecorderStatusOutput
  describeConfigurationRecorders(input: AwsConfigServiceDescribeConfigurationRecordersInput, config: AwsConfig): AwsConfigServiceDescribeConfigurationRecordersOutput
  describeDeliveryChannelStatus(input: AwsConfigServiceDescribeDeliveryChannelStatusInput, config: AwsConfig): AwsConfigServiceDescribeDeliveryChannelStatusOutput
  describeDeliveryChannels(input: AwsConfigServiceDescribeDeliveryChannelsInput, config: AwsConfig): AwsConfigServiceDescribeDeliveryChannelsOutput
  getComplianceDetailsByConfigRule(input: AwsConfigServiceGetComplianceDetailsByConfigRuleInput!, config: AwsConfig): AwsConfigServiceGetComplianceDetailsByConfigRuleOutput
  getComplianceDetailsByResource(input: AwsConfigServiceGetComplianceDetailsByResourceInput!, config: AwsConfig): AwsConfigServiceGetComplianceDetailsByResourceOutput
  getComplianceSummaryByConfigRule(config: AwsConfig): AwsConfigServiceGetComplianceSummaryByConfigRuleOutput
  getComplianceSummaryByResourceType(input: AwsConfigServiceGetComplianceSummaryByResourceTypeInput, config: AwsConfig): AwsConfigServiceGetComplianceSummaryByResourceTypeOutput
  getDiscoveredResourceCounts(input: AwsConfigServiceGetDiscoveredResourceCountsInput, config: AwsConfig): AwsConfigServiceGetDiscoveredResourceCountsOutput
  getResourceConfigHistory(input: AwsConfigServiceGetResourceConfigHistoryInput!, config: AwsConfig): AwsConfigServiceGetResourceConfigHistoryOutput
  listDiscoveredResources(input: AwsConfigServiceListDiscoveredResourcesInput!, config: AwsConfig): AwsConfigServiceListDiscoveredResourcesOutput
  putConfigRule(input: AwsConfigServicePutConfigRuleInput!, config: AwsConfig): JSON
  putConfigurationRecorder(input: AwsConfigServicePutConfigurationRecorderInput!, config: AwsConfig): JSON
  putDeliveryChannel(input: AwsConfigServicePutDeliveryChannelInput!, config: AwsConfig): JSON
  putEvaluations(input: AwsConfigServicePutEvaluationsInput!, config: AwsConfig): AwsConfigServicePutEvaluationsOutput
  startConfigRulesEvaluation(input: AwsConfigServiceStartConfigRulesEvaluationInput, config: AwsConfig): JSON
  startConfigurationRecorder(input: AwsConfigServiceStartConfigurationRecorderInput!, config: AwsConfig): JSON
  stopConfigurationRecorder(input: AwsConfigServiceStopConfigurationRecorderInput!, config: AwsConfig): JSON
}

input AwsConfigServiceDeleteConfigRuleInput {
  ConfigRuleName: String!
}

input AwsConfigServiceDeleteConfigurationRecorderInput {
  ConfigurationRecorderName: String!
}

input AwsConfigServiceDeleteDeliveryChannelInput {
  DeliveryChannelName: String!
}

input AwsConfigServiceDeleteEvaluationResultsInput {
  ConfigRuleName: String!
}

input AwsConfigServiceDeliverConfigSnapshotInput {
  deliveryChannelName: String!
}

type AwsConfigServiceDeliverConfigSnapshotOutput {
  configSnapshotId: String
}

input AwsConfigServiceDescribeComplianceByConfigRuleInput {
  ConfigRuleNames: [String]
  ComplianceTypes: [String]
  NextToken: String
}

type AwsConfigServiceDescribeComplianceByConfigRuleOutput {
  ComplianceByConfigRules: [AwsConfigServiceDescribeComplianceByConfigRuleOutputComplianceByConfigRules]
  NextToken: String
}

type AwsConfigServiceDescribeComplianceByConfigRuleOutputComplianceByConfigRules {
  ConfigRuleName: String
  Compliance: AwsConfigServiceSj
}

input AwsConfigServiceDescribeComplianceByResourceInput {
  ResourceType: String
  ResourceId: String
  ComplianceTypes: [String]
  Limit: Int
  NextToken: String
}

type AwsConfigServiceDescribeComplianceByResourceOutput {
  ComplianceByResources: [AwsConfigServiceDescribeComplianceByResourceOutputComplianceByResources]
  NextToken: String
}

type AwsConfigServiceDescribeComplianceByResourceOutputComplianceByResources {
  ResourceType: String
  ResourceId: String
  Compliance: AwsConfigServiceSj
}

input AwsConfigServiceDescribeConfigRuleEvaluationStatusInput {
  ConfigRuleNames: [String]
  NextToken: String
  Limit: Int
}

type AwsConfigServiceDescribeConfigRuleEvaluationStatusOutput {
  ConfigRulesEvaluationStatus: [AwsConfigServiceDescribeConfigRuleEvaluationStatusOutputConfigRulesEvaluationStatus]
  NextToken: String
}

type AwsConfigServiceDescribeConfigRuleEvaluationStatusOutputConfigRulesEvaluationStatus {
  ConfigRuleName: String
  ConfigRuleArn: String
  ConfigRuleId: String
  LastSuccessfulInvocationTime: Date
  LastFailedInvocationTime: Date
  LastSuccessfulEvaluationTime: Date
  LastFailedEvaluationTime: Date
  FirstActivatedTime: Date
  LastErrorCode: String
  LastErrorMessage: String
  FirstEvaluationStarted: Boolean
}

input AwsConfigServiceDescribeConfigRulesInput {
  ConfigRuleNames: [String]
  NextToken: String
}

type AwsConfigServiceDescribeConfigRulesOutput {
  ConfigRules: [AwsConfigServiceS14]
  NextToken: String
}

input AwsConfigServiceDescribeConfigurationRecordersInput {
  ConfigurationRecorderNames: [String]
}

type AwsConfigServiceDescribeConfigurationRecordersOutput {
  ConfigurationRecorders: [AwsConfigServiceS1r]
}

input AwsConfigServiceDescribeConfigurationRecorderStatusInput {
  ConfigurationRecorderNames: [String]
}

type AwsConfigServiceDescribeConfigurationRecorderStatusOutput {
  ConfigurationRecordersStatus: [AwsConfigServiceDescribeConfigurationRecorderStatusOutputConfigurationRecordersStatus]
}

type AwsConfigServiceDescribeConfigurationRecorderStatusOutputConfigurationRecordersStatus {
  name: String
  lastStartTime: Date
  lastStopTime: Date
  recording: Boolean
  lastStatus: String
  lastErrorCode: String
  lastErrorMessage: String
  lastStatusChangeTime: Date
}

input AwsConfigServiceDescribeDeliveryChannelsInput {
  DeliveryChannelNames: [String]
}

type AwsConfigServiceDescribeDeliveryChannelsOutput {
  DeliveryChannels: [AwsConfigServiceS28]
}

input AwsConfigServiceDescribeDeliveryChannelStatusInput {
  DeliveryChannelNames: [String]
}

type AwsConfigServiceDescribeDeliveryChannelStatusOutput {
  DeliveryChannelsStatus: [AwsConfigServiceDescribeDeliveryChannelStatusOutputDeliveryChannelsStatus]
}

type AwsConfigServiceDescribeDeliveryChannelStatusOutputDeliveryChannelsStatus {
  name: String
  configSnapshotDeliveryInfo: AwsConfigServiceS22
  configHistoryDeliveryInfo: AwsConfigServiceS22
  configStreamDeliveryInfo: AwsConfigServiceDescribeDeliveryChannelStatusOutputDeliveryChannelsStatusConfigStreamDeliveryInfo
}

type AwsConfigServiceDescribeDeliveryChannelStatusOutputDeliveryChannelsStatusConfigStreamDeliveryInfo {
  lastStatus: String
  lastErrorCode: String
  lastErrorMessage: String
  lastStatusChangeTime: Date
}

input AwsConfigServiceGetComplianceDetailsByConfigRuleInput {
  ConfigRuleName: String!
  ComplianceTypes: [String]
  Limit: Int
  NextToken: String
}

type AwsConfigServiceGetComplianceDetailsByConfigRuleOutput {
  EvaluationResults: [AwsConfigServiceS2c]
  NextToken: String
}

input AwsConfigServiceGetComplianceDetailsByResourceInput {
  ResourceType: String!
  ResourceId: String!
  ComplianceTypes: [String]
  NextToken: String
}

type AwsConfigServiceGetComplianceDetailsByResourceOutput {
  EvaluationResults: [AwsConfigServiceS2c]
  NextToken: String
}

type AwsConfigServiceGetComplianceSummaryByConfigRuleOutput {
  ComplianceSummary: AwsConfigServiceS2j
}

input AwsConfigServiceGetComplianceSummaryByResourceTypeInput {
  ResourceTypes: [String]
}

type AwsConfigServiceGetComplianceSummaryByResourceTypeOutput {
  ComplianceSummariesByResourceType: [AwsConfigServiceGetComplianceSummaryByResourceTypeOutputComplianceSummariesByResourceType]
}

type AwsConfigServiceGetComplianceSummaryByResourceTypeOutputComplianceSummariesByResourceType {
  ResourceType: String
  ComplianceSummary: AwsConfigServiceS2j
}

input AwsConfigServiceGetDiscoveredResourceCountsInput {
  resourceTypes: [String]
  limit: Int
  nextToken: String
}

type AwsConfigServiceGetDiscoveredResourceCountsOutput {
  totalDiscoveredResources: JSON
  resourceCounts: [AwsConfigServiceGetDiscoveredResourceCountsOutputResourceCounts]
  nextToken: String
}

type AwsConfigServiceGetDiscoveredResourceCountsOutputResourceCounts {
  resourceType: String
  count: JSON
}

input AwsConfigServiceGetResourceConfigHistoryInput {
  resourceType: String!
  resourceId: String!
  laterTime: Date
  earlierTime: Date
  chronologicalOrder: String
  limit: Int
  nextToken: String
}

type AwsConfigServiceGetResourceConfigHistoryOutput {
  configurationItems: [AwsConfigServiceGetResourceConfigHistoryOutputConfigurationItems]
  nextToken: String
}

type AwsConfigServiceGetResourceConfigHistoryOutputConfigurationItems {
  version: String
  accountId: String
  configurationItemCaptureTime: Date
  configurationItemStatus: String
  configurationStateId: String
  configurationItemMD5Hash: String
  arn: String
  resourceType: String
  resourceId: String
  resourceName: String
  awsRegion: String
  availabilityZone: String
  resourceCreationTime: Date
  tags: JSON
  relatedEvents: [String]
  relationships: [AwsConfigServiceGetResourceConfigHistoryOutputConfigurationItemsRelationships]
  configuration: String
  supplementaryConfiguration: JSON
}

type AwsConfigServiceGetResourceConfigHistoryOutputConfigurationItemsRelationships {
  resourceType: String
  resourceId: String
  resourceName: String
  relationshipName: String
}

input AwsConfigServiceListDiscoveredResourcesInput {
  resourceType: String!
  resourceIds: [String]
  resourceName: String
  limit: Int
  includeDeletedResources: Boolean
  nextToken: String
}

type AwsConfigServiceListDiscoveredResourcesOutput {
  resourceIdentifiers: [AwsConfigServiceListDiscoveredResourcesOutputResourceIdentifiers]
  nextToken: String
}

type AwsConfigServiceListDiscoveredResourcesOutputResourceIdentifiers {
  resourceType: String
  resourceId: String
  resourceName: String
  resourceDeletionTime: Date
}

input AwsConfigServicePutConfigRuleInput {
  ConfigRule: AwsConfigServiceS14Input!
}

input AwsConfigServicePutConfigurationRecorderInput {
  ConfigurationRecorder: AwsConfigServiceS1rInput!
}

input AwsConfigServicePutDeliveryChannelInput {
  DeliveryChannel: AwsConfigServiceS28Input!
}

input AwsConfigServicePutEvaluationsInput {
  Evaluations: [AwsConfigServiceS3zInput]
  ResultToken: String!
  TestMode: Boolean
}

type AwsConfigServicePutEvaluationsOutput {
  FailedEvaluations: [AwsConfigServiceS3z]
}

type AwsConfigServiceS14 {
  ConfigRuleName: String
  ConfigRuleArn: String
  ConfigRuleId: String
  Description: String
  Scope: AwsConfigServiceS14Scope
  Source: AwsConfigServiceS14Source!
  InputParameters: String
  MaximumExecutionFrequency: String
  ConfigRuleState: String
}

input AwsConfigServiceS14Input {
  ConfigRuleName: String
  ConfigRuleArn: String
  ConfigRuleId: String
  Description: String
  Scope: AwsConfigServiceS14ScopeInput
  Source: AwsConfigServiceS14SourceInput!
  InputParameters: String
  MaximumExecutionFrequency: String
  ConfigRuleState: String
}

type AwsConfigServiceS14Scope {
  ComplianceResourceTypes: [String]
  TagKey: String
  TagValue: String
  ComplianceResourceId: String
}

input AwsConfigServiceS14ScopeInput {
  ComplianceResourceTypes: [String]
  TagKey: String
  TagValue: String
  ComplianceResourceId: String
}

type AwsConfigServiceS14Source {
  Owner: String!
  SourceIdentifier: String!
  SourceDetails: [AwsConfigServiceS14SourceSourceDetails]
}

input AwsConfigServiceS14SourceInput {
  Owner: String!
  SourceIdentifier: String!
  SourceDetails: [AwsConfigServiceS14SourceSourceDetailsInput]
}

type AwsConfigServiceS14SourceSourceDetails {
  EventSource: String
  MessageType: String
  MaximumExecutionFrequency: String
}

input AwsConfigServiceS14SourceSourceDetailsInput {
  EventSource: String
  MessageType: String
  MaximumExecutionFrequency: String
}

type AwsConfigServiceS1r {
  name: String
  roleARN: String
  recordingGroup: AwsConfigServiceS1rRecordingGroup
}

input AwsConfigServiceS1rInput {
  name: String
  roleARN: String
  recordingGroup: AwsConfigServiceS1rRecordingGroupInput
}

type AwsConfigServiceS1rRecordingGroup {
  allSupported: Boolean
  includeGlobalResourceTypes: Boolean
  resourceTypes: [String]
}

input AwsConfigServiceS1rRecordingGroupInput {
  allSupported: Boolean
  includeGlobalResourceTypes: Boolean
  resourceTypes: [String]
}

type AwsConfigServiceS22 {
  lastStatus: String
  lastErrorCode: String
  lastErrorMessage: String
  lastAttemptTime: Date
  lastSuccessfulTime: Date
  nextDeliveryTime: Date
}

type AwsConfigServiceS28 {
  name: String
  s3BucketName: String
  s3KeyPrefix: String
  snsTopicARN: String
  configSnapshotDeliveryProperties: AwsConfigServiceS28ConfigSnapshotDeliveryProperties
}

type AwsConfigServiceS28ConfigSnapshotDeliveryProperties {
  deliveryFrequency: String
}

input AwsConfigServiceS28ConfigSnapshotDeliveryPropertiesInput {
  deliveryFrequency: String
}

input AwsConfigServiceS28Input {
  name: String
  s3BucketName: String
  s3KeyPrefix: String
  snsTopicARN: String
  configSnapshotDeliveryProperties: AwsConfigServiceS28ConfigSnapshotDeliveryPropertiesInput
}

type AwsConfigServiceS2c {
  EvaluationResultIdentifier: AwsConfigServiceS2cEvaluationResultIdentifier
  ComplianceType: String
  ResultRecordedTime: Date
  ConfigRuleInvokedTime: Date
  Annotation: String
  ResultToken: String
}

type AwsConfigServiceS2cEvaluationResultIdentifier {
  EvaluationResultQualifier: AwsConfigServiceS2cEvaluationResultIdentifierEvaluationResultQualifier
  OrderingTimestamp: Date
}

type AwsConfigServiceS2cEvaluationResultIdentifierEvaluationResultQualifier {
  ConfigRuleName: String
  ResourceType: String
  ResourceId: String
}

type AwsConfigServiceS2j {
  CompliantResourceCount: AwsConfigServiceSk
  NonCompliantResourceCount: AwsConfigServiceSk
  ComplianceSummaryTimestamp: Date
}

type AwsConfigServiceS3z {
  ComplianceResourceType: String!
  ComplianceResourceId: String!
  ComplianceType: String!
  Annotation: String
  OrderingTimestamp: Date!
}

input AwsConfigServiceS3zInput {
  ComplianceResourceType: String!
  ComplianceResourceId: String!
  ComplianceType: String!
  Annotation: String
  OrderingTimestamp: Date!
}

type AwsConfigServiceSj {
  ComplianceType: String
  ComplianceContributorCount: AwsConfigServiceSk
}

type AwsConfigServiceSk {
  CappedCount: Int
  CapExceeded: Boolean
}

input AwsConfigServiceStartConfigRulesEvaluationInput {
  ConfigRuleNames: [String]
}

input AwsConfigServiceStartConfigurationRecorderInput {
  ConfigurationRecorderName: String!
}

input AwsConfigServiceStopConfigurationRecorderInput {
  ConfigurationRecorderName: String!
}

# AWS Cost Explorer Service (2017-10-25)
type AwsCostExplorer {
  getCostAndUsage(input: AwsCostExplorerGetCostAndUsageInput, config: AwsConfig): AwsCostExplorerGetCostAndUsageOutput
  getDimensionValues(input: AwsCostExplorerGetDimensionValuesInput!, config: AwsConfig): AwsCostExplorerGetDimensionValuesOutput
  getReservationUtilization(input: AwsCostExplorerGetReservationUtilizationInput!, config: AwsConfig): AwsCostExplorerGetReservationUtilizationOutput
  getTags(input: AwsCostExplorerGetTagsInput!, config: AwsConfig): AwsCostExplorerGetTagsOutput
}

input AwsCostExplorerGetCostAndUsageInput {
  TimePeriod: AwsCostExplorerS2Input
  Granularity: String
  Filter: AwsCostExplorerS5Input
  Metrics: [String]
  GroupBy: [AwsCostExplorerSfInput]
  NextPageToken: String
}

type AwsCostExplorerGetCostAndUsageOutput {
  NextPageToken: String
  GroupDefinitions: [AwsCostExplorerSf]
  ResultsByTime: [AwsCostExplorerGetCostAndUsageOutputResultsByTime]
}

type AwsCostExplorerGetCostAndUsageOutputResultsByTime {
  TimePeriod: AwsCostExplorerS2
  Total: JSON
  Groups: [AwsCostExplorerGetCostAndUsageOutputResultsByTimeGroups]
  Estimated: Boolean
}

type AwsCostExplorerGetCostAndUsageOutputResultsByTimeGroups {
  Keys: [String]
  Metrics: JSON
}

input AwsCostExplorerGetDimensionValuesInput {
  SearchString: String
  TimePeriod: AwsCostExplorerS2Input!
  Dimension: String!
  Context: String
  NextPageToken: String
}

type AwsCostExplorerGetDimensionValuesOutput {
  DimensionValues: [AwsCostExplorerGetDimensionValuesOutputDimensionValues]!
  ReturnSize: Int!
  TotalSize: Int!
  NextPageToken: String
}

type AwsCostExplorerGetDimensionValuesOutputDimensionValues {
  Value: String
  Attributes: JSON
}

input AwsCostExplorerGetReservationUtilizationInput {
  TimePeriod: AwsCostExplorerS2Input!
  GroupBy: [AwsCostExplorerSfInput]
  Granularity: String
  Filter: AwsCostExplorerS5Input
  NextPageToken: String
}

type AwsCostExplorerGetReservationUtilizationOutput {
  UtilizationsByTime: [AwsCostExplorerGetReservationUtilizationOutputUtilizationsByTime]!
  Total: AwsCostExplorerS1e
  NextPageToken: String
}

type AwsCostExplorerGetReservationUtilizationOutputUtilizationsByTime {
  TimePeriod: AwsCostExplorerS2
  Groups: [AwsCostExplorerGetReservationUtilizationOutputUtilizationsByTimeGroups]
  Total: AwsCostExplorerS1e
}

type AwsCostExplorerGetReservationUtilizationOutputUtilizationsByTimeGroups {
  Key: String
  Value: String
  Attributes: JSON
  Utilization: AwsCostExplorerS1e
}

input AwsCostExplorerGetTagsInput {
  SearchString: String
  TimePeriod: AwsCostExplorerS2Input!
  TagKey: String
  NextPageToken: String
}

type AwsCostExplorerGetTagsOutput {
  NextPageToken: String
  Tags: [String]!
  ReturnSize: Int!
  TotalSize: Int!
}

type AwsCostExplorerS1e {
  UtilizationPercentage: String
  PurchasedHours: String
  TotalActualHours: String
  UnusedHours: String
}

type AwsCostExplorerS2 {
  Start: String!
  End: String!
}

input AwsCostExplorerS2Input {
  Start: String!
  End: String!
}

input AwsCostExplorerS5DimensionsInput {
  Key: String
  Values: [String]
}

input AwsCostExplorerS5Input {
  Or: [JSON]
  And: [JSON]
  Not: JSON
  Dimensions: AwsCostExplorerS5DimensionsInput
  Tags: AwsCostExplorerS5TagsInput
}

input AwsCostExplorerS5TagsInput {
  Key: String
  Values: [String]
}

type AwsCostExplorerSf {
  Type: String
  Key: String
}

input AwsCostExplorerSfInput {
  Type: String
  Key: String
}

# AWS Cost and Usage Report Service (2017-01-06)
type AwsCUR {
  deleteReportDefinition(input: AwsCURDeleteReportDefinitionInput, config: AwsConfig): AwsCURDeleteReportDefinitionOutput
  describeReportDefinitions(input: AwsCURDescribeReportDefinitionsInput, config: AwsConfig): AwsCURDescribeReportDefinitionsOutput
  putReportDefinition(input: AwsCURPutReportDefinitionInput!, config: AwsConfig): JSON
}

input AwsCURDeleteReportDefinitionInput {
  ReportName: String
}

type AwsCURDeleteReportDefinitionOutput {
  ResponseMessage: String
}

input AwsCURDescribeReportDefinitionsInput {
  MaxResults: Int
  NextToken: String
}

type AwsCURDescribeReportDefinitionsOutput {
  ReportDefinitions: [AwsCURSa]
  NextToken: String
}

input AwsCURPutReportDefinitionInput {
  ReportDefinition: AwsCURSaInput!
}

type AwsCURSa {
  ReportName: String!
  TimeUnit: String!
  Format: String!
  Compression: String!
  AdditionalSchemaElements: [String]!
  S3Bucket: String!
  S3Prefix: String!
  S3Region: String!
  AdditionalArtifacts: [String]
}

input AwsCURSaInput {
  ReportName: String!
  TimeUnit: String!
  Format: String!
  Compression: String!
  AdditionalSchemaElements: [String]!
  S3Bucket: String!
  S3Prefix: String!
  S3Region: String!
  AdditionalArtifacts: [String]
}

# AWS Data Pipeline (2012-10-29)
type AwsDataPipeline {
  activatePipeline(input: AwsDataPipelineActivatePipelineInput!, config: AwsConfig): JSON
  addTags(input: AwsDataPipelineAddTagsInput!, config: AwsConfig): JSON
  createPipeline(input: AwsDataPipelineCreatePipelineInput!, config: AwsConfig): AwsDataPipelineCreatePipelineOutput
  deactivatePipeline(input: AwsDataPipelineDeactivatePipelineInput!, config: AwsConfig): JSON
  deletePipeline(input: AwsDataPipelineDeletePipelineInput!, config: AwsConfig): JSON
  describeObjects(input: AwsDataPipelineDescribeObjectsInput!, config: AwsConfig): AwsDataPipelineDescribeObjectsOutput
  describePipelines(input: AwsDataPipelineDescribePipelinesInput!, config: AwsConfig): AwsDataPipelineDescribePipelinesOutput
  evaluateExpression(input: AwsDataPipelineEvaluateExpressionInput!, config: AwsConfig): AwsDataPipelineEvaluateExpressionOutput
  getPipelineDefinition(input: AwsDataPipelineGetPipelineDefinitionInput!, config: AwsConfig): AwsDataPipelineGetPipelineDefinitionOutput
  listPipelines(input: AwsDataPipelineListPipelinesInput, config: AwsConfig): AwsDataPipelineListPipelinesOutput
  pollForTask(input: AwsDataPipelinePollForTaskInput!, config: AwsConfig): AwsDataPipelinePollForTaskOutput
  putPipelineDefinition(input: AwsDataPipelinePutPipelineDefinitionInput!, config: AwsConfig): AwsDataPipelinePutPipelineDefinitionOutput
  queryObjects(input: AwsDataPipelineQueryObjectsInput!, config: AwsConfig): AwsDataPipelineQueryObjectsOutput
  removeTags(input: AwsDataPipelineRemoveTagsInput!, config: AwsConfig): JSON
  reportTaskProgress(input: AwsDataPipelineReportTaskProgressInput!, config: AwsConfig): AwsDataPipelineReportTaskProgressOutput
  reportTaskRunnerHeartbeat(input: AwsDataPipelineReportTaskRunnerHeartbeatInput!, config: AwsConfig): AwsDataPipelineReportTaskRunnerHeartbeatOutput
  setStatus(input: AwsDataPipelineSetStatusInput!, config: AwsConfig): JSON
  setTaskStatus(input: AwsDataPipelineSetTaskStatusInput!, config: AwsConfig): JSON
  validatePipelineDefinition(input: AwsDataPipelineValidatePipelineDefinitionInput!, config: AwsConfig): AwsDataPipelineValidatePipelineDefinitionOutput
}

input AwsDataPipelineActivatePipelineInput {
  pipelineId: String!
  parameterValues: [AwsDataPipelineS3Input]
  startTimestamp: Date
}

input AwsDataPipelineAddTagsInput {
  pipelineId: String!
  tags: [AwsDataPipelineSaInput]!
}

input AwsDataPipelineCreatePipelineInput {
  name: String!
  uniqueId: String!
  description: String
  tags: [AwsDataPipelineSaInput]
}

type AwsDataPipelineCreatePipelineOutput {
  pipelineId: String!
}

input AwsDataPipelineDeactivatePipelineInput {
  pipelineId: String!
  cancelActive: Boolean
}

input AwsDataPipelineDeletePipelineInput {
  pipelineId: String!
}

input AwsDataPipelineDescribeObjectsInput {
  pipelineId: String!
  objectIds: [String]!
  evaluateExpressions: Boolean
  marker: String
}

type AwsDataPipelineDescribeObjectsOutput {
  pipelineObjects: [AwsDataPipelineSr]!
  marker: String
  hasMoreResults: Boolean
}

input AwsDataPipelineDescribePipelinesInput {
  pipelineIds: [String]!
}

type AwsDataPipelineDescribePipelinesOutput {
  pipelineDescriptionList: [AwsDataPipelineDescribePipelinesOutputPipelineDescriptionList]!
}

type AwsDataPipelineDescribePipelinesOutputPipelineDescriptionList {
  pipelineId: String!
  name: String!
  fields: [AwsDataPipelineSs]!
  description: String
  tags: [AwsDataPipelineSa]
}

input AwsDataPipelineEvaluateExpressionInput {
  pipelineId: String!
  objectId: String!
  expression: String!
}

type AwsDataPipelineEvaluateExpressionOutput {
  evaluatedExpression: String!
}

input AwsDataPipelineGetPipelineDefinitionInput {
  pipelineId: String!
  version: String
}

type AwsDataPipelineGetPipelineDefinitionOutput {
  pipelineObjects: [AwsDataPipelineSr]
  parameterObjects: [AwsDataPipelineS13]
  parameterValues: [AwsDataPipelineS3]
}

input AwsDataPipelineListPipelinesInput {
  marker: String
}

type AwsDataPipelineListPipelinesOutput {
  pipelineIdList: [AwsDataPipelineListPipelinesOutputPipelineIdList]!
  marker: String
  hasMoreResults: Boolean
}

type AwsDataPipelineListPipelinesOutputPipelineIdList {
  id: String
  name: String
}

input AwsDataPipelinePollForTaskInput {
  workerGroup: String!
  hostname: String
  instanceIdentity: AwsDataPipelinePollForTaskInstanceIdentityInput
}

input AwsDataPipelinePollForTaskInstanceIdentityInput {
  document: String
  signature: String
}

type AwsDataPipelinePollForTaskOutput {
  taskObject: AwsDataPipelinePollForTaskOutputTaskObject
}

type AwsDataPipelinePollForTaskOutputTaskObject {
  taskId: String
  pipelineId: String
  attemptId: String
  objects: JSON
}

input AwsDataPipelinePutPipelineDefinitionInput {
  pipelineId: String!
  pipelineObjects: [AwsDataPipelineSrInput]!
  parameterObjects: [AwsDataPipelineS13Input]
  parameterValues: [AwsDataPipelineS3Input]
}

type AwsDataPipelinePutPipelineDefinitionOutput {
  validationErrors: [AwsDataPipelineS1l]
  validationWarnings: [AwsDataPipelineS1p]
  errored: Boolean!
}

input AwsDataPipelineQueryObjectsInput {
  pipelineId: String!
  query: AwsDataPipelineQueryObjectsQueryInput
  sphere: String!
  marker: String
  limit: Int
}

type AwsDataPipelineQueryObjectsOutput {
  ids: [String]
  marker: String
  hasMoreResults: Boolean
}

input AwsDataPipelineQueryObjectsQueryInput {
  selectors: [AwsDataPipelineQueryObjectsQuerySelectorsInput]
}

input AwsDataPipelineQueryObjectsQuerySelectorsInput {
  fieldName: String
  operator: AwsDataPipelineQueryObjectsQuerySelectorsOperatorInput
}

input AwsDataPipelineQueryObjectsQuerySelectorsOperatorInput {
  type: String
  values: [String]
}

input AwsDataPipelineRemoveTagsInput {
  pipelineId: String!
  tagKeys: [String]!
}

input AwsDataPipelineReportTaskProgressInput {
  taskId: String!
  fields: [AwsDataPipelineSsInput]
}

type AwsDataPipelineReportTaskProgressOutput {
  canceled: Boolean!
}

input AwsDataPipelineReportTaskRunnerHeartbeatInput {
  taskrunnerId: String!
  workerGroup: String
  hostname: String
}

type AwsDataPipelineReportTaskRunnerHeartbeatOutput {
  terminate: Boolean!
}

type AwsDataPipelineS13 {
  id: String!
  attributes: [AwsDataPipelineS13Attributes]!
}

type AwsDataPipelineS13Attributes {
  key: String!
  stringValue: String!
}

input AwsDataPipelineS13AttributesInput {
  key: String!
  stringValue: String!
}

input AwsDataPipelineS13Input {
  id: String!
  attributes: [AwsDataPipelineS13AttributesInput]!
}

type AwsDataPipelineS1l {
  id: String
  errors: [String]
}

type AwsDataPipelineS1p {
  id: String
  warnings: [String]
}

type AwsDataPipelineS3 {
  id: String!
  stringValue: String!
}

input AwsDataPipelineS3Input {
  id: String!
  stringValue: String!
}

type AwsDataPipelineSa {
  key: String!
  value: String!
}

input AwsDataPipelineSaInput {
  key: String!
  value: String!
}

input AwsDataPipelineSetStatusInput {
  pipelineId: String!
  objectIds: [String]!
  status: String!
}

input AwsDataPipelineSetTaskStatusInput {
  taskId: String!
  taskStatus: String!
  errorId: String
  errorMessage: String
  errorStackTrace: String
}

type AwsDataPipelineSr {
  id: String!
  name: String!
  fields: [AwsDataPipelineSs]!
}

input AwsDataPipelineSrInput {
  id: String!
  name: String!
  fields: [AwsDataPipelineSsInput]!
}

type AwsDataPipelineSs {
  key: String!
  stringValue: String
  refValue: String
}

input AwsDataPipelineSsInput {
  key: String!
  stringValue: String
  refValue: String
}

input AwsDataPipelineValidatePipelineDefinitionInput {
  pipelineId: String!
  pipelineObjects: [AwsDataPipelineSrInput]!
  parameterObjects: [AwsDataPipelineS13Input]
  parameterValues: [AwsDataPipelineS3Input]
}

type AwsDataPipelineValidatePipelineDefinitionOutput {
  validationErrors: [AwsDataPipelineS1l]
  validationWarnings: [AwsDataPipelineS1p]
  errored: Boolean!
}

# Amazon DynamoDB Accelerator (DAX) (2017-04-19)
type AwsDAX {
  createCluster(input: AwsDAXCreateClusterInput!, config: AwsConfig): AwsDAXCreateClusterOutput
  createParameterGroup(input: AwsDAXCreateParameterGroupInput!, config: AwsConfig): AwsDAXCreateParameterGroupOutput
  createSubnetGroup(input: AwsDAXCreateSubnetGroupInput!, config: AwsConfig): AwsDAXCreateSubnetGroupOutput
  decreaseReplicationFactor(input: AwsDAXDecreaseReplicationFactorInput!, config: AwsConfig): AwsDAXDecreaseReplicationFactorOutput
  deleteCluster(input: AwsDAXDeleteClusterInput!, config: AwsConfig): AwsDAXDeleteClusterOutput
  deleteParameterGroup(input: AwsDAXDeleteParameterGroupInput!, config: AwsConfig): AwsDAXDeleteParameterGroupOutput
  deleteSubnetGroup(input: AwsDAXDeleteSubnetGroupInput!, config: AwsConfig): AwsDAXDeleteSubnetGroupOutput
  describeClusters(input: AwsDAXDescribeClustersInput, config: AwsConfig): AwsDAXDescribeClustersOutput
  describeDefaultParameters(input: AwsDAXDescribeDefaultParametersInput, config: AwsConfig): AwsDAXDescribeDefaultParametersOutput
  describeEvents(input: AwsDAXDescribeEventsInput, config: AwsConfig): AwsDAXDescribeEventsOutput
  describeParameterGroups(input: AwsDAXDescribeParameterGroupsInput, config: AwsConfig): AwsDAXDescribeParameterGroupsOutput
  describeParameters(input: AwsDAXDescribeParametersInput!, config: AwsConfig): AwsDAXDescribeParametersOutput
  describeSubnetGroups(input: AwsDAXDescribeSubnetGroupsInput, config: AwsConfig): AwsDAXDescribeSubnetGroupsOutput
  increaseReplicationFactor(input: AwsDAXIncreaseReplicationFactorInput!, config: AwsConfig): AwsDAXIncreaseReplicationFactorOutput
  listTags(input: AwsDAXListTagsInput!, config: AwsConfig): AwsDAXListTagsOutput
  rebootNode(input: AwsDAXRebootNodeInput!, config: AwsConfig): AwsDAXRebootNodeOutput
  tagResource(input: AwsDAXTagResourceInput!, config: AwsConfig): AwsDAXTagResourceOutput
  untagResource(input: AwsDAXUntagResourceInput!, config: AwsConfig): AwsDAXUntagResourceOutput
  updateCluster(input: AwsDAXUpdateClusterInput!, config: AwsConfig): AwsDAXUpdateClusterOutput
  updateParameterGroup(input: AwsDAXUpdateParameterGroupInput!, config: AwsConfig): AwsDAXUpdateParameterGroupOutput
  updateSubnetGroup(input: AwsDAXUpdateSubnetGroupInput!, config: AwsConfig): AwsDAXUpdateSubnetGroupOutput
}

input AwsDAXCreateClusterInput {
  ClusterName: String!
  NodeType: String!
  Description: String
  ReplicationFactor: Int!
  AvailabilityZones: [String]
  SubnetGroupName: String
  SecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  NotificationTopicArn: String
  IamRoleArn: String!
  ParameterGroupName: String
  Tags: [AwsDAXS6Input]
}

type AwsDAXCreateClusterOutput {
  Cluster: AwsDAXS9
}

input AwsDAXCreateParameterGroupInput {
  ParameterGroupName: String!
  Description: String
}

type AwsDAXCreateParameterGroupOutput {
  ParameterGroup: AwsDAXSm
}

input AwsDAXCreateSubnetGroupInput {
  SubnetGroupName: String!
  Description: String
  SubnetIds: [String]!
}

type AwsDAXCreateSubnetGroupOutput {
  SubnetGroup: AwsDAXSq
}

input AwsDAXDecreaseReplicationFactorInput {
  ClusterName: String!
  NewReplicationFactor: Int!
  AvailabilityZones: [String]
  NodeIdsToRemove: [String]
}

type AwsDAXDecreaseReplicationFactorOutput {
  Cluster: AwsDAXS9
}

input AwsDAXDeleteClusterInput {
  ClusterName: String!
}

type AwsDAXDeleteClusterOutput {
  Cluster: AwsDAXS9
}

input AwsDAXDeleteParameterGroupInput {
  ParameterGroupName: String!
}

type AwsDAXDeleteParameterGroupOutput {
  DeletionMessage: String
}

input AwsDAXDeleteSubnetGroupInput {
  SubnetGroupName: String!
}

type AwsDAXDeleteSubnetGroupOutput {
  DeletionMessage: String
}

input AwsDAXDescribeClustersInput {
  ClusterNames: [String]
  MaxResults: Int
  NextToken: String
}

type AwsDAXDescribeClustersOutput {
  NextToken: String
  Clusters: [AwsDAXS9]
}

input AwsDAXDescribeDefaultParametersInput {
  MaxResults: Int
  NextToken: String
}

type AwsDAXDescribeDefaultParametersOutput {
  NextToken: String
  Parameters: [AwsDAXS17]
}

input AwsDAXDescribeEventsInput {
  SourceName: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  MaxResults: Int
  NextToken: String
}

type AwsDAXDescribeEventsOutput {
  NextToken: String
  Events: [AwsDAXDescribeEventsOutputEvents]
}

type AwsDAXDescribeEventsOutputEvents {
  SourceName: String
  SourceType: String
  Message: String
  Date: Date
}

input AwsDAXDescribeParameterGroupsInput {
  ParameterGroupNames: [String]
  MaxResults: Int
  NextToken: String
}

type AwsDAXDescribeParameterGroupsOutput {
  NextToken: String
  ParameterGroups: [AwsDAXSm]
}

input AwsDAXDescribeParametersInput {
  ParameterGroupName: String!
  Source: String
  MaxResults: Int
  NextToken: String
}

type AwsDAXDescribeParametersOutput {
  NextToken: String
  Parameters: [AwsDAXS17]
}

input AwsDAXDescribeSubnetGroupsInput {
  SubnetGroupNames: [String]
  MaxResults: Int
  NextToken: String
}

type AwsDAXDescribeSubnetGroupsOutput {
  NextToken: String
  SubnetGroups: [AwsDAXSq]
}

input AwsDAXIncreaseReplicationFactorInput {
  ClusterName: String!
  NewReplicationFactor: Int!
  AvailabilityZones: [String]
}

type AwsDAXIncreaseReplicationFactorOutput {
  Cluster: AwsDAXS9
}

input AwsDAXListTagsInput {
  ResourceName: String!
  NextToken: String
}

type AwsDAXListTagsOutput {
  Tags: [AwsDAXS6]
  NextToken: String
}

input AwsDAXRebootNodeInput {
  ClusterName: String!
  NodeId: String!
}

type AwsDAXRebootNodeOutput {
  Cluster: AwsDAXS9
}

type AwsDAXS17 {
  ParameterName: String
  ParameterType: String
  ParameterValue: String
  NodeTypeSpecificValues: [AwsDAXS17NodeTypeSpecificValues]
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  IsModifiable: String
  ChangeType: String
}

type AwsDAXS17NodeTypeSpecificValues {
  NodeType: String
  Value: String
}

type AwsDAXS6 {
  Key: String
  Value: String
}

input AwsDAXS6Input {
  Key: String
  Value: String
}

type AwsDAXS9 {
  ClusterName: String
  Description: String
  ClusterArn: String
  TotalNodes: Int
  ActiveNodes: Int
  NodeType: String
  Status: String
  ClusterDiscoveryEndpoint: AwsDAXSb
  NodeIdsToRemove: [String]
  Nodes: [AwsDAXS9Nodes]
  PreferredMaintenanceWindow: String
  NotificationConfiguration: AwsDAXS9NotificationConfiguration
  SubnetGroup: String
  SecurityGroups: [AwsDAXS9SecurityGroups]
  IamRoleArn: String
  ParameterGroup: AwsDAXS9ParameterGroup
}

type AwsDAXS9Nodes {
  NodeId: String
  Endpoint: AwsDAXSb
  NodeCreateTime: Date
  AvailabilityZone: String
  NodeStatus: String
  ParameterGroupStatus: String
}

type AwsDAXS9NotificationConfiguration {
  TopicArn: String
  TopicStatus: String
}

type AwsDAXS9ParameterGroup {
  ParameterGroupName: String
  ParameterApplyStatus: String
  NodeIdsToReboot: [String]
}

type AwsDAXS9SecurityGroups {
  SecurityGroupIdentifier: String
  Status: String
}

type AwsDAXSb {
  Address: String
  Port: Int
}

type AwsDAXSm {
  ParameterGroupName: String
  Description: String
}

type AwsDAXSq {
  SubnetGroupName: String
  Description: String
  VpcId: String
  Subnets: [AwsDAXSqSubnets]
}

type AwsDAXSqSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: String
}

input AwsDAXTagResourceInput {
  ResourceName: String!
  Tags: [AwsDAXS6Input]!
}

type AwsDAXTagResourceOutput {
  Tags: [AwsDAXS6]
}

input AwsDAXUntagResourceInput {
  ResourceName: String!
  TagKeys: [String]!
}

type AwsDAXUntagResourceOutput {
  Tags: [AwsDAXS6]
}

input AwsDAXUpdateClusterInput {
  ClusterName: String!
  Description: String
  PreferredMaintenanceWindow: String
  NotificationTopicArn: String
  NotificationTopicStatus: String
  ParameterGroupName: String
  SecurityGroupIds: [String]
}

type AwsDAXUpdateClusterOutput {
  Cluster: AwsDAXS9
}

input AwsDAXUpdateParameterGroupInput {
  ParameterGroupName: String!
  ParameterNameValues: [AwsDAXUpdateParameterGroupParameterNameValuesInput]!
}

type AwsDAXUpdateParameterGroupOutput {
  ParameterGroup: AwsDAXSm
}

input AwsDAXUpdateParameterGroupParameterNameValuesInput {
  ParameterName: String
  ParameterValue: String
}

input AwsDAXUpdateSubnetGroupInput {
  SubnetGroupName: String!
  Description: String
  SubnetIds: [String]
}

type AwsDAXUpdateSubnetGroupOutput {
  SubnetGroup: AwsDAXSq
}

# AWS Device Farm (2015-06-23)
type AwsDeviceFarm {
  createDevicePool(input: AwsDeviceFarmCreateDevicePoolInput!, config: AwsConfig): AwsDeviceFarmCreateDevicePoolOutput
  createNetworkProfile(input: AwsDeviceFarmCreateNetworkProfileInput!, config: AwsConfig): AwsDeviceFarmCreateNetworkProfileOutput
  createProject(input: AwsDeviceFarmCreateProjectInput!, config: AwsConfig): AwsDeviceFarmCreateProjectOutput
  createRemoteAccessSession(input: AwsDeviceFarmCreateRemoteAccessSessionInput!, config: AwsConfig): AwsDeviceFarmCreateRemoteAccessSessionOutput
  createUpload(input: AwsDeviceFarmCreateUploadInput!, config: AwsConfig): AwsDeviceFarmCreateUploadOutput
  deleteDevicePool(input: AwsDeviceFarmDeleteDevicePoolInput!, config: AwsConfig): JSON
  deleteNetworkProfile(input: AwsDeviceFarmDeleteNetworkProfileInput!, config: AwsConfig): JSON
  deleteProject(input: AwsDeviceFarmDeleteProjectInput!, config: AwsConfig): JSON
  deleteRemoteAccessSession(input: AwsDeviceFarmDeleteRemoteAccessSessionInput!, config: AwsConfig): JSON
  deleteRun(input: AwsDeviceFarmDeleteRunInput!, config: AwsConfig): JSON
  deleteUpload(input: AwsDeviceFarmDeleteUploadInput!, config: AwsConfig): JSON
  getAccountSettings(input: JSON, config: AwsConfig): AwsDeviceFarmGetAccountSettingsOutput
  getDevice(input: AwsDeviceFarmGetDeviceInput!, config: AwsConfig): AwsDeviceFarmGetDeviceOutput
  getDevicePool(input: AwsDeviceFarmGetDevicePoolInput!, config: AwsConfig): AwsDeviceFarmGetDevicePoolOutput
  getDevicePoolCompatibility(input: AwsDeviceFarmGetDevicePoolCompatibilityInput!, config: AwsConfig): AwsDeviceFarmGetDevicePoolCompatibilityOutput
  getJob(input: AwsDeviceFarmGetJobInput!, config: AwsConfig): AwsDeviceFarmGetJobOutput
  getNetworkProfile(input: AwsDeviceFarmGetNetworkProfileInput!, config: AwsConfig): AwsDeviceFarmGetNetworkProfileOutput
  getOfferingStatus(input: AwsDeviceFarmGetOfferingStatusInput, config: AwsConfig): AwsDeviceFarmGetOfferingStatusOutput
  getProject(input: AwsDeviceFarmGetProjectInput!, config: AwsConfig): AwsDeviceFarmGetProjectOutput
  getRemoteAccessSession(input: AwsDeviceFarmGetRemoteAccessSessionInput!, config: AwsConfig): AwsDeviceFarmGetRemoteAccessSessionOutput
  getRun(input: AwsDeviceFarmGetRunInput!, config: AwsConfig): AwsDeviceFarmGetRunOutput
  getSuite(input: AwsDeviceFarmGetSuiteInput!, config: AwsConfig): AwsDeviceFarmGetSuiteOutput
  getTest(input: AwsDeviceFarmGetTestInput!, config: AwsConfig): AwsDeviceFarmGetTestOutput
  getUpload(input: AwsDeviceFarmGetUploadInput!, config: AwsConfig): AwsDeviceFarmGetUploadOutput
  installToRemoteAccessSession(input: AwsDeviceFarmInstallToRemoteAccessSessionInput!, config: AwsConfig): AwsDeviceFarmInstallToRemoteAccessSessionOutput
  listArtifacts(input: AwsDeviceFarmListArtifactsInput!, config: AwsConfig): AwsDeviceFarmListArtifactsOutput
  listDevicePools(input: AwsDeviceFarmListDevicePoolsInput!, config: AwsConfig): AwsDeviceFarmListDevicePoolsOutput
  listDevices(input: AwsDeviceFarmListDevicesInput, config: AwsConfig): AwsDeviceFarmListDevicesOutput
  listJobs(input: AwsDeviceFarmListJobsInput!, config: AwsConfig): AwsDeviceFarmListJobsOutput
  listNetworkProfiles(input: AwsDeviceFarmListNetworkProfilesInput!, config: AwsConfig): AwsDeviceFarmListNetworkProfilesOutput
  listOfferingPromotions(input: AwsDeviceFarmListOfferingPromotionsInput, config: AwsConfig): AwsDeviceFarmListOfferingPromotionsOutput
  listOfferingTransactions(input: AwsDeviceFarmListOfferingTransactionsInput, config: AwsConfig): AwsDeviceFarmListOfferingTransactionsOutput
  listOfferings(input: AwsDeviceFarmListOfferingsInput, config: AwsConfig): AwsDeviceFarmListOfferingsOutput
  listProjects(input: AwsDeviceFarmListProjectsInput, config: AwsConfig): AwsDeviceFarmListProjectsOutput
  listRemoteAccessSessions(input: AwsDeviceFarmListRemoteAccessSessionsInput!, config: AwsConfig): AwsDeviceFarmListRemoteAccessSessionsOutput
  listRuns(input: AwsDeviceFarmListRunsInput!, config: AwsConfig): AwsDeviceFarmListRunsOutput
  listSamples(input: AwsDeviceFarmListSamplesInput!, config: AwsConfig): AwsDeviceFarmListSamplesOutput
  listSuites(input: AwsDeviceFarmListSuitesInput!, config: AwsConfig): AwsDeviceFarmListSuitesOutput
  listTests(input: AwsDeviceFarmListTestsInput!, config: AwsConfig): AwsDeviceFarmListTestsOutput
  listUniqueProblems(input: AwsDeviceFarmListUniqueProblemsInput!, config: AwsConfig): AwsDeviceFarmListUniqueProblemsOutput
  listUploads(input: AwsDeviceFarmListUploadsInput!, config: AwsConfig): AwsDeviceFarmListUploadsOutput
  purchaseOffering(input: AwsDeviceFarmPurchaseOfferingInput, config: AwsConfig): AwsDeviceFarmPurchaseOfferingOutput
  renewOffering(input: AwsDeviceFarmRenewOfferingInput, config: AwsConfig): AwsDeviceFarmRenewOfferingOutput
  scheduleRun(input: AwsDeviceFarmScheduleRunInput!, config: AwsConfig): AwsDeviceFarmScheduleRunOutput
  stopRemoteAccessSession(input: AwsDeviceFarmStopRemoteAccessSessionInput!, config: AwsConfig): AwsDeviceFarmStopRemoteAccessSessionOutput
  stopRun(input: AwsDeviceFarmStopRunInput!, config: AwsConfig): AwsDeviceFarmStopRunOutput
  updateDevicePool(input: AwsDeviceFarmUpdateDevicePoolInput!, config: AwsConfig): AwsDeviceFarmUpdateDevicePoolOutput
  updateNetworkProfile(input: AwsDeviceFarmUpdateNetworkProfileInput!, config: AwsConfig): AwsDeviceFarmUpdateNetworkProfileOutput
  updateProject(input: AwsDeviceFarmUpdateProjectInput!, config: AwsConfig): AwsDeviceFarmUpdateProjectOutput
}

input AwsDeviceFarmCreateDevicePoolInput {
  projectArn: String!
  name: String!
  description: String
  rules: [AwsDeviceFarmS5Input]!
}

type AwsDeviceFarmCreateDevicePoolOutput {
  devicePool: AwsDeviceFarmSb
}

input AwsDeviceFarmCreateNetworkProfileInput {
  projectArn: String!
  name: String!
  description: String
  type: String
  uplinkBandwidthBits: JSON
  downlinkBandwidthBits: JSON
  uplinkDelayMs: JSON
  downlinkDelayMs: JSON
  uplinkJitterMs: JSON
  downlinkJitterMs: JSON
  uplinkLossPercent: Int
  downlinkLossPercent: Int
}

type AwsDeviceFarmCreateNetworkProfileOutput {
  networkProfile: AwsDeviceFarmSi
}

input AwsDeviceFarmCreateProjectInput {
  name: String!
  defaultJobTimeoutMinutes: Int
}

type AwsDeviceFarmCreateProjectOutput {
  project: AwsDeviceFarmSm
}

input AwsDeviceFarmCreateRemoteAccessSessionConfigurationInput {
  billingMethod: String
}

input AwsDeviceFarmCreateRemoteAccessSessionInput {
  projectArn: String!
  deviceArn: String!
  sshPublicKey: String
  remoteDebugEnabled: Boolean
  name: String
  clientId: String
  configuration: AwsDeviceFarmCreateRemoteAccessSessionConfigurationInput
}

type AwsDeviceFarmCreateRemoteAccessSessionOutput {
  remoteAccessSession: AwsDeviceFarmSv
}

input AwsDeviceFarmCreateUploadInput {
  projectArn: String!
  name: String!
  type: String!
  contentType: String
}

type AwsDeviceFarmCreateUploadOutput {
  upload: AwsDeviceFarmS1b
}

input AwsDeviceFarmDeleteDevicePoolInput {
  arn: String!
}

input AwsDeviceFarmDeleteNetworkProfileInput {
  arn: String!
}

input AwsDeviceFarmDeleteProjectInput {
  arn: String!
}

input AwsDeviceFarmDeleteRemoteAccessSessionInput {
  arn: String!
}

input AwsDeviceFarmDeleteRunInput {
  arn: String!
}

input AwsDeviceFarmDeleteUploadInput {
  arn: String!
}

type AwsDeviceFarmGetAccountSettingsOutput {
  accountSettings: AwsDeviceFarmGetAccountSettingsOutputAccountSettings
}

type AwsDeviceFarmGetAccountSettingsOutputAccountSettings {
  awsAccountNumber: String
  unmeteredDevices: JSON
  unmeteredRemoteAccessDevices: JSON
  maxJobTimeoutMinutes: Int
  trialMinutes: AwsDeviceFarmGetAccountSettingsOutputAccountSettingsTrialMinutes
  maxSlots: JSON
  defaultJobTimeoutMinutes: Int
}

type AwsDeviceFarmGetAccountSettingsOutputAccountSettingsTrialMinutes {
  total: JSON
  remaining: JSON
}

input AwsDeviceFarmGetDeviceInput {
  arn: String!
}

type AwsDeviceFarmGetDeviceOutput {
  device: AwsDeviceFarmSy
}

input AwsDeviceFarmGetDevicePoolCompatibilityInput {
  devicePoolArn: String!
  appArn: String
  testType: String
  test: AwsDeviceFarmS24Input
}

type AwsDeviceFarmGetDevicePoolCompatibilityOutput {
  compatibleDevices: [AwsDeviceFarmS28]
  incompatibleDevices: [AwsDeviceFarmS28]
}

input AwsDeviceFarmGetDevicePoolInput {
  arn: String!
}

type AwsDeviceFarmGetDevicePoolOutput {
  devicePool: AwsDeviceFarmSb
}

input AwsDeviceFarmGetJobInput {
  arn: String!
}

type AwsDeviceFarmGetJobOutput {
  job: AwsDeviceFarmS2e
}

input AwsDeviceFarmGetNetworkProfileInput {
  arn: String!
}

type AwsDeviceFarmGetNetworkProfileOutput {
  networkProfile: AwsDeviceFarmSi
}

input AwsDeviceFarmGetOfferingStatusInput {
  nextToken: String
}

type AwsDeviceFarmGetOfferingStatusOutput {
  current: JSON
  nextPeriod: JSON
  nextToken: String
}

input AwsDeviceFarmGetProjectInput {
  arn: String!
}

type AwsDeviceFarmGetProjectOutput {
  project: AwsDeviceFarmSm
}

input AwsDeviceFarmGetRemoteAccessSessionInput {
  arn: String!
}

type AwsDeviceFarmGetRemoteAccessSessionOutput {
  remoteAccessSession: AwsDeviceFarmSv
}

input AwsDeviceFarmGetRunInput {
  arn: String!
}

type AwsDeviceFarmGetRunOutput {
  run: AwsDeviceFarmS32
}

input AwsDeviceFarmGetSuiteInput {
  arn: String!
}

type AwsDeviceFarmGetSuiteOutput {
  suite: AwsDeviceFarmS3a
}

input AwsDeviceFarmGetTestInput {
  arn: String!
}

type AwsDeviceFarmGetTestOutput {
  test: AwsDeviceFarmS3d
}

input AwsDeviceFarmGetUploadInput {
  arn: String!
}

type AwsDeviceFarmGetUploadOutput {
  upload: AwsDeviceFarmS1b
}

input AwsDeviceFarmInstallToRemoteAccessSessionInput {
  remoteAccessSessionArn: String!
  appArn: String!
}

type AwsDeviceFarmInstallToRemoteAccessSessionOutput {
  appUpload: AwsDeviceFarmS1b
}

input AwsDeviceFarmListArtifactsInput {
  arn: String!
  type: String!
  nextToken: String
}

type AwsDeviceFarmListArtifactsOutput {
  artifacts: [AwsDeviceFarmListArtifactsOutputArtifacts]
  nextToken: String
}

type AwsDeviceFarmListArtifactsOutputArtifacts {
  arn: String
  name: String
  type: String
  extension: String
  url: String
}

input AwsDeviceFarmListDevicePoolsInput {
  arn: String!
  type: String
  nextToken: String
}

type AwsDeviceFarmListDevicePoolsOutput {
  devicePools: [AwsDeviceFarmSb]
  nextToken: String
}

input AwsDeviceFarmListDevicesInput {
  arn: String
  nextToken: String
}

type AwsDeviceFarmListDevicesOutput {
  devices: [AwsDeviceFarmSy]
  nextToken: String
}

input AwsDeviceFarmListJobsInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListJobsOutput {
  jobs: [AwsDeviceFarmS2e]
  nextToken: String
}

input AwsDeviceFarmListNetworkProfilesInput {
  arn: String!
  type: String
  nextToken: String
}

type AwsDeviceFarmListNetworkProfilesOutput {
  networkProfiles: [AwsDeviceFarmSi]
  nextToken: String
}

input AwsDeviceFarmListOfferingPromotionsInput {
  nextToken: String
}

type AwsDeviceFarmListOfferingPromotionsOutput {
  offeringPromotions: [AwsDeviceFarmListOfferingPromotionsOutputOfferingPromotions]
  nextToken: String
}

type AwsDeviceFarmListOfferingPromotionsOutputOfferingPromotions {
  id: String
  description: String
}

input AwsDeviceFarmListOfferingsInput {
  nextToken: String
}

type AwsDeviceFarmListOfferingsOutput {
  offerings: [AwsDeviceFarmS2p]
  nextToken: String
}

input AwsDeviceFarmListOfferingTransactionsInput {
  nextToken: String
}

type AwsDeviceFarmListOfferingTransactionsOutput {
  offeringTransactions: [AwsDeviceFarmS48]
  nextToken: String
}

input AwsDeviceFarmListProjectsInput {
  arn: String
  nextToken: String
}

type AwsDeviceFarmListProjectsOutput {
  projects: [AwsDeviceFarmSm]
  nextToken: String
}

input AwsDeviceFarmListRemoteAccessSessionsInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListRemoteAccessSessionsOutput {
  remoteAccessSessions: [AwsDeviceFarmSv]
  nextToken: String
}

input AwsDeviceFarmListRunsInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListRunsOutput {
  runs: [AwsDeviceFarmS32]
  nextToken: String
}

input AwsDeviceFarmListSamplesInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListSamplesOutput {
  samples: [AwsDeviceFarmListSamplesOutputSamples]
  nextToken: String
}

type AwsDeviceFarmListSamplesOutputSamples {
  arn: String
  type: String
  url: String
}

input AwsDeviceFarmListSuitesInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListSuitesOutput {
  suites: [AwsDeviceFarmS3a]
  nextToken: String
}

input AwsDeviceFarmListTestsInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListTestsOutput {
  tests: [AwsDeviceFarmS3d]
  nextToken: String
}

input AwsDeviceFarmListUniqueProblemsInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListUniqueProblemsOutput {
  uniqueProblems: JSON
  nextToken: String
}

input AwsDeviceFarmListUploadsInput {
  arn: String!
  nextToken: String
}

type AwsDeviceFarmListUploadsOutput {
  uploads: [AwsDeviceFarmS1b]
  nextToken: String
}

input AwsDeviceFarmPurchaseOfferingInput {
  offeringId: String
  quantity: Int
  offeringPromotionId: String
}

type AwsDeviceFarmPurchaseOfferingOutput {
  offeringTransaction: AwsDeviceFarmS48
}

input AwsDeviceFarmRenewOfferingInput {
  offeringId: String
  quantity: Int
}

type AwsDeviceFarmRenewOfferingOutput {
  offeringTransaction: AwsDeviceFarmS48
}

type AwsDeviceFarmS16 {
  total: JSON
  metered: JSON
  unmetered: JSON
}

type AwsDeviceFarmS1b {
  arn: String
  name: String
  created: Date
  type: String
  status: String
  url: String
  metadata: String
  contentType: String
  message: String
}

input AwsDeviceFarmS24Input {
  type: String!
  testPackageArn: String
  filter: String
  parameters: JSON
}

type AwsDeviceFarmS28 {
  device: AwsDeviceFarmSy
  compatible: Boolean
  incompatibilityMessages: [AwsDeviceFarmS28IncompatibilityMessages]
}

type AwsDeviceFarmS28IncompatibilityMessages {
  message: String
  type: String
}

type AwsDeviceFarmS2e {
  arn: String
  name: String
  type: String
  created: Date
  status: String
  result: String
  started: Date
  stopped: Date
  counters: AwsDeviceFarmS2f
  message: String
  device: AwsDeviceFarmSy
  deviceMinutes: AwsDeviceFarmS16
}

type AwsDeviceFarmS2f {
  total: Int
  passed: Int
  failed: Int
  warned: Int
  errored: Int
  stopped: Int
  skipped: Int
}

type AwsDeviceFarmS2n {
  type: String
  offering: AwsDeviceFarmS2p
  quantity: Int
  effectiveOn: Date
}

type AwsDeviceFarmS2p {
  id: String
  description: String
  type: String
  platform: String
  recurringCharges: [AwsDeviceFarmS2pRecurringCharges]
}

type AwsDeviceFarmS2pRecurringCharges {
  cost: AwsDeviceFarmS2t
  frequency: String
}

type AwsDeviceFarmS2t {
  amount: JSON
  currencyCode: String
}

type AwsDeviceFarmS32 {
  arn: String
  name: String
  type: String
  platform: String
  created: Date
  status: String
  result: String
  started: Date
  stopped: Date
  counters: AwsDeviceFarmS2f
  message: String
  totalJobs: Int
  completedJobs: Int
  billingMethod: String
  deviceMinutes: AwsDeviceFarmS16
  networkProfile: AwsDeviceFarmSi
  parsingResultUrl: String
  resultCode: String
  customerArtifactPaths: AwsDeviceFarmS34
}

type AwsDeviceFarmS34 {
  iosPaths: [String]
  androidPaths: [String]
  deviceHostPaths: [String]
}

input AwsDeviceFarmS34Input {
  iosPaths: [String]
  androidPaths: [String]
  deviceHostPaths: [String]
}

type AwsDeviceFarmS3a {
  arn: String
  name: String
  type: String
  created: Date
  status: String
  result: String
  started: Date
  stopped: Date
  counters: AwsDeviceFarmS2f
  message: String
  deviceMinutes: AwsDeviceFarmS16
}

type AwsDeviceFarmS3d {
  arn: String
  name: String
  type: String
  created: Date
  status: String
  result: String
  started: Date
  stopped: Date
  counters: AwsDeviceFarmS2f
  message: String
  deviceMinutes: AwsDeviceFarmS16
}

type AwsDeviceFarmS48 {
  offeringStatus: AwsDeviceFarmS2n
  transactionId: String
  offeringPromotionId: String
  createdOn: Date
  cost: AwsDeviceFarmS2t
}

type AwsDeviceFarmS5 {
  attribute: String
  operator: String
  value: String
}

input AwsDeviceFarmS5Input {
  attribute: String
  operator: String
  value: String
}

type AwsDeviceFarmSb {
  arn: String
  name: String
  description: String
  type: String
  rules: [AwsDeviceFarmS5]
}

input AwsDeviceFarmScheduleRunConfigurationInput {
  extraDataPackageArn: String
  networkProfileArn: String
  locale: String
  location: AwsDeviceFarmScheduleRunConfigurationLocationInput
  customerArtifactPaths: AwsDeviceFarmS34Input
  radios: AwsDeviceFarmScheduleRunConfigurationRadiosInput
  auxiliaryApps: [String]
  billingMethod: String
}

input AwsDeviceFarmScheduleRunConfigurationLocationInput {
  latitude: JSON!
  longitude: JSON!
}

input AwsDeviceFarmScheduleRunConfigurationRadiosInput {
  wifi: Boolean
  bluetooth: Boolean
  nfc: Boolean
  gps: Boolean
}

input AwsDeviceFarmScheduleRunExecutionConfigurationInput {
  jobTimeoutMinutes: Int
  accountsCleanup: Boolean
  appPackagesCleanup: Boolean
}

input AwsDeviceFarmScheduleRunInput {
  projectArn: String!
  appArn: String
  devicePoolArn: String!
  name: String
  test: AwsDeviceFarmS24Input!
  configuration: AwsDeviceFarmScheduleRunConfigurationInput
  executionConfiguration: AwsDeviceFarmScheduleRunExecutionConfigurationInput
}

type AwsDeviceFarmScheduleRunOutput {
  run: AwsDeviceFarmS32
}

type AwsDeviceFarmSi {
  arn: String
  name: String
  description: String
  type: String
  uplinkBandwidthBits: JSON
  downlinkBandwidthBits: JSON
  uplinkDelayMs: JSON
  downlinkDelayMs: JSON
  uplinkJitterMs: JSON
  downlinkJitterMs: JSON
  uplinkLossPercent: Int
  downlinkLossPercent: Int
}

type AwsDeviceFarmSm {
  arn: String
  name: String
  defaultJobTimeoutMinutes: Int
  created: Date
}

input AwsDeviceFarmStopRemoteAccessSessionInput {
  arn: String!
}

type AwsDeviceFarmStopRemoteAccessSessionOutput {
  remoteAccessSession: AwsDeviceFarmSv
}

input AwsDeviceFarmStopRunInput {
  arn: String!
}

type AwsDeviceFarmStopRunOutput {
  run: AwsDeviceFarmS32
}

type AwsDeviceFarmSv {
  arn: String
  name: String
  created: Date
  status: String
  result: String
  message: String
  started: Date
  stopped: Date
  device: AwsDeviceFarmSy
  remoteDebugEnabled: Boolean
  hostAddress: String
  clientId: String
  billingMethod: String
  deviceMinutes: AwsDeviceFarmS16
  endpoint: String
  deviceUdid: String
}

type AwsDeviceFarmSy {
  arn: String
  name: String
  manufacturer: String
  model: String
  formFactor: String
  platform: String
  os: String
  cpu: AwsDeviceFarmSyCpu
  resolution: AwsDeviceFarmSyResolution
  heapSize: JSON
  memory: JSON
  image: String
  carrier: String
  radio: String
  remoteAccessEnabled: Boolean
  remoteDebugEnabled: Boolean
  fleetType: String
  fleetName: String
}

type AwsDeviceFarmSyCpu {
  frequency: String
  architecture: String
  clock: JSON
}

type AwsDeviceFarmSyResolution {
  width: Int
  height: Int
}

input AwsDeviceFarmUpdateDevicePoolInput {
  arn: String!
  name: String
  description: String
  rules: [AwsDeviceFarmS5Input]
}

type AwsDeviceFarmUpdateDevicePoolOutput {
  devicePool: AwsDeviceFarmSb
}

input AwsDeviceFarmUpdateNetworkProfileInput {
  arn: String!
  name: String
  description: String
  type: String
  uplinkBandwidthBits: JSON
  downlinkBandwidthBits: JSON
  uplinkDelayMs: JSON
  downlinkDelayMs: JSON
  uplinkJitterMs: JSON
  downlinkJitterMs: JSON
  uplinkLossPercent: Int
  downlinkLossPercent: Int
}

type AwsDeviceFarmUpdateNetworkProfileOutput {
  networkProfile: AwsDeviceFarmSi
}

input AwsDeviceFarmUpdateProjectInput {
  arn: String!
  name: String
  defaultJobTimeoutMinutes: Int
}

type AwsDeviceFarmUpdateProjectOutput {
  project: AwsDeviceFarmSm
}

# AWS Direct Connect (2012-10-25)
type AwsDirectConnect {
  allocateConnectionOnInterconnect(input: AwsDirectConnectAllocateConnectionOnInterconnectInput!, config: AwsConfig): JSON
  allocateHostedConnection(input: AwsDirectConnectAllocateHostedConnectionInput!, config: AwsConfig): JSON
  allocatePrivateVirtualInterface(input: AwsDirectConnectAllocatePrivateVirtualInterfaceInput!, config: AwsConfig): JSON
  allocatePublicVirtualInterface(input: AwsDirectConnectAllocatePublicVirtualInterfaceInput!, config: AwsConfig): JSON
  associateConnectionWithLag(input: AwsDirectConnectAssociateConnectionWithLagInput!, config: AwsConfig): JSON
  associateHostedConnection(input: AwsDirectConnectAssociateHostedConnectionInput!, config: AwsConfig): JSON
  associateVirtualInterface(input: AwsDirectConnectAssociateVirtualInterfaceInput!, config: AwsConfig): JSON
  confirmConnection(input: AwsDirectConnectConfirmConnectionInput!, config: AwsConfig): AwsDirectConnectConfirmConnectionOutput
  confirmPrivateVirtualInterface(input: AwsDirectConnectConfirmPrivateVirtualInterfaceInput!, config: AwsConfig): AwsDirectConnectConfirmPrivateVirtualInterfaceOutput
  confirmPublicVirtualInterface(input: AwsDirectConnectConfirmPublicVirtualInterfaceInput!, config: AwsConfig): AwsDirectConnectConfirmPublicVirtualInterfaceOutput
  createBGPPeer(input: AwsDirectConnectCreateBGPPeerInput, config: AwsConfig): AwsDirectConnectCreateBGPPeerOutput
  createConnection(input: AwsDirectConnectCreateConnectionInput!, config: AwsConfig): JSON
  createDirectConnectGateway(input: AwsDirectConnectCreateDirectConnectGatewayInput!, config: AwsConfig): AwsDirectConnectCreateDirectConnectGatewayOutput
  createDirectConnectGatewayAssociation(input: AwsDirectConnectCreateDirectConnectGatewayAssociationInput!, config: AwsConfig): AwsDirectConnectCreateDirectConnectGatewayAssociationOutput
  createInterconnect(input: AwsDirectConnectCreateInterconnectInput!, config: AwsConfig): JSON
  createLag(input: AwsDirectConnectCreateLagInput!, config: AwsConfig): JSON
  createPrivateVirtualInterface(input: AwsDirectConnectCreatePrivateVirtualInterfaceInput!, config: AwsConfig): JSON
  createPublicVirtualInterface(input: AwsDirectConnectCreatePublicVirtualInterfaceInput!, config: AwsConfig): JSON
  deleteBGPPeer(input: AwsDirectConnectDeleteBGPPeerInput, config: AwsConfig): AwsDirectConnectDeleteBGPPeerOutput
  deleteConnection(input: AwsDirectConnectDeleteConnectionInput!, config: AwsConfig): JSON
  deleteDirectConnectGateway(input: AwsDirectConnectDeleteDirectConnectGatewayInput!, config: AwsConfig): AwsDirectConnectDeleteDirectConnectGatewayOutput
  deleteDirectConnectGatewayAssociation(input: AwsDirectConnectDeleteDirectConnectGatewayAssociationInput!, config: AwsConfig): AwsDirectConnectDeleteDirectConnectGatewayAssociationOutput
  deleteInterconnect(input: AwsDirectConnectDeleteInterconnectInput!, config: AwsConfig): AwsDirectConnectDeleteInterconnectOutput
  deleteLag(input: AwsDirectConnectDeleteLagInput!, config: AwsConfig): JSON
  deleteVirtualInterface(input: AwsDirectConnectDeleteVirtualInterfaceInput!, config: AwsConfig): AwsDirectConnectDeleteVirtualInterfaceOutput
  describeConnectionLoa(input: AwsDirectConnectDescribeConnectionLoaInput!, config: AwsConfig): AwsDirectConnectDescribeConnectionLoaOutput
  describeConnections(input: AwsDirectConnectDescribeConnectionsInput, config: AwsConfig): JSON
  describeConnectionsOnInterconnect(input: AwsDirectConnectDescribeConnectionsOnInterconnectInput!, config: AwsConfig): JSON
  describeDirectConnectGatewayAssociations(input: AwsDirectConnectDescribeDirectConnectGatewayAssociationsInput, config: AwsConfig): AwsDirectConnectDescribeDirectConnectGatewayAssociationsOutput
  describeDirectConnectGatewayAttachments(input: AwsDirectConnectDescribeDirectConnectGatewayAttachmentsInput, config: AwsConfig): AwsDirectConnectDescribeDirectConnectGatewayAttachmentsOutput
  describeDirectConnectGateways(input: AwsDirectConnectDescribeDirectConnectGatewaysInput, config: AwsConfig): AwsDirectConnectDescribeDirectConnectGatewaysOutput
  describeHostedConnections(input: AwsDirectConnectDescribeHostedConnectionsInput!, config: AwsConfig): JSON
  describeInterconnectLoa(input: AwsDirectConnectDescribeInterconnectLoaInput!, config: AwsConfig): AwsDirectConnectDescribeInterconnectLoaOutput
  describeInterconnects(input: AwsDirectConnectDescribeInterconnectsInput, config: AwsConfig): AwsDirectConnectDescribeInterconnectsOutput
  describeLags(input: AwsDirectConnectDescribeLagsInput, config: AwsConfig): AwsDirectConnectDescribeLagsOutput
  describeLoa(input: AwsDirectConnectDescribeLoaInput!, config: AwsConfig): JSON
  describeLocations(config: AwsConfig): AwsDirectConnectDescribeLocationsOutput
  describeTags(input: AwsDirectConnectDescribeTagsInput!, config: AwsConfig): AwsDirectConnectDescribeTagsOutput
  describeVirtualGateways(config: AwsConfig): AwsDirectConnectDescribeVirtualGatewaysOutput
  describeVirtualInterfaces(input: AwsDirectConnectDescribeVirtualInterfacesInput, config: AwsConfig): AwsDirectConnectDescribeVirtualInterfacesOutput
  disassociateConnectionFromLag(input: AwsDirectConnectDisassociateConnectionFromLagInput!, config: AwsConfig): JSON
  tagResource(input: AwsDirectConnectTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsDirectConnectUntagResourceInput!, config: AwsConfig): JSON
  updateLag(input: AwsDirectConnectUpdateLagInput!, config: AwsConfig): JSON
}

input AwsDirectConnectAllocateConnectionOnInterconnectInput {
  bandwidth: String!
  connectionName: String!
  ownerAccount: String!
  interconnectId: String!
  vlan: Int!
}

input AwsDirectConnectAllocateHostedConnectionInput {
  connectionId: String!
  ownerAccount: String!
  bandwidth: String!
  connectionName: String!
  vlan: Int!
}

input AwsDirectConnectAllocatePrivateVirtualInterfaceInput {
  connectionId: String!
  ownerAccount: String!
  newPrivateVirtualInterfaceAllocation: AwsDirectConnectAllocatePrivateVirtualInterfaceNewPrivateVirtualInterfaceAllocationInput!
}

input AwsDirectConnectAllocatePrivateVirtualInterfaceNewPrivateVirtualInterfaceAllocationInput {
  virtualInterfaceName: String!
  vlan: Int!
  asn: Int!
  authKey: String
  amazonAddress: String
  addressFamily: String
  customerAddress: String
}

input AwsDirectConnectAllocatePublicVirtualInterfaceInput {
  connectionId: String!
  ownerAccount: String!
  newPublicVirtualInterfaceAllocation: AwsDirectConnectAllocatePublicVirtualInterfaceNewPublicVirtualInterfaceAllocationInput!
}

input AwsDirectConnectAllocatePublicVirtualInterfaceNewPublicVirtualInterfaceAllocationInput {
  virtualInterfaceName: String!
  vlan: Int!
  asn: Int!
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  routeFilterPrefixes: [AwsDirectConnectSxInput]
}

input AwsDirectConnectAssociateConnectionWithLagInput {
  connectionId: String!
  lagId: String!
}

input AwsDirectConnectAssociateHostedConnectionInput {
  connectionId: String!
  parentConnectionId: String!
}

input AwsDirectConnectAssociateVirtualInterfaceInput {
  virtualInterfaceId: String!
  connectionId: String!
}

input AwsDirectConnectConfirmConnectionInput {
  connectionId: String!
}

type AwsDirectConnectConfirmConnectionOutput {
  connectionState: String
}

input AwsDirectConnectConfirmPrivateVirtualInterfaceInput {
  virtualInterfaceId: String!
  virtualGatewayId: String
  directConnectGatewayId: String
}

type AwsDirectConnectConfirmPrivateVirtualInterfaceOutput {
  virtualInterfaceState: String
}

input AwsDirectConnectConfirmPublicVirtualInterfaceInput {
  virtualInterfaceId: String!
}

type AwsDirectConnectConfirmPublicVirtualInterfaceOutput {
  virtualInterfaceState: String
}

input AwsDirectConnectCreateBGPPeerInput {
  virtualInterfaceId: String
  newBGPPeer: AwsDirectConnectCreateBGPPeerNewBGPPeerInput
}

input AwsDirectConnectCreateBGPPeerNewBGPPeerInput {
  asn: Int
  authKey: String
  addressFamily: String
  amazonAddress: String
  customerAddress: String
}

type AwsDirectConnectCreateBGPPeerOutput {
  virtualInterface: AwsDirectConnectSp
}

input AwsDirectConnectCreateConnectionInput {
  location: String!
  bandwidth: String!
  connectionName: String!
  lagId: String
}

input AwsDirectConnectCreateDirectConnectGatewayAssociationInput {
  directConnectGatewayId: String!
  virtualGatewayId: String!
}

type AwsDirectConnectCreateDirectConnectGatewayAssociationOutput {
  directConnectGatewayAssociation: AwsDirectConnectS1r
}

input AwsDirectConnectCreateDirectConnectGatewayInput {
  directConnectGatewayName: String!
  amazonSideAsn: JSON
}

type AwsDirectConnectCreateDirectConnectGatewayOutput {
  directConnectGateway: AwsDirectConnectS1m
}

input AwsDirectConnectCreateInterconnectInput {
  interconnectName: String!
  bandwidth: String!
  location: String!
  lagId: String
}

input AwsDirectConnectCreateLagInput {
  numberOfConnections: Int!
  location: String!
  connectionsBandwidth: String!
  lagName: String!
  connectionId: String
}

input AwsDirectConnectCreatePrivateVirtualInterfaceInput {
  connectionId: String!
  newPrivateVirtualInterface: AwsDirectConnectCreatePrivateVirtualInterfaceNewPrivateVirtualInterfaceInput!
}

input AwsDirectConnectCreatePrivateVirtualInterfaceNewPrivateVirtualInterfaceInput {
  virtualInterfaceName: String!
  vlan: Int!
  asn: Int!
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  virtualGatewayId: String
  directConnectGatewayId: String
}

input AwsDirectConnectCreatePublicVirtualInterfaceInput {
  connectionId: String!
  newPublicVirtualInterface: AwsDirectConnectCreatePublicVirtualInterfaceNewPublicVirtualInterfaceInput!
}

input AwsDirectConnectCreatePublicVirtualInterfaceNewPublicVirtualInterfaceInput {
  virtualInterfaceName: String!
  vlan: Int!
  asn: Int!
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  routeFilterPrefixes: [AwsDirectConnectSxInput]
}

input AwsDirectConnectDeleteBGPPeerInput {
  virtualInterfaceId: String
  asn: Int
  customerAddress: String
}

type AwsDirectConnectDeleteBGPPeerOutput {
  virtualInterface: AwsDirectConnectSp
}

input AwsDirectConnectDeleteConnectionInput {
  connectionId: String!
}

input AwsDirectConnectDeleteDirectConnectGatewayAssociationInput {
  directConnectGatewayId: String!
  virtualGatewayId: String!
}

type AwsDirectConnectDeleteDirectConnectGatewayAssociationOutput {
  directConnectGatewayAssociation: AwsDirectConnectS1r
}

input AwsDirectConnectDeleteDirectConnectGatewayInput {
  directConnectGatewayId: String!
}

type AwsDirectConnectDeleteDirectConnectGatewayOutput {
  directConnectGateway: AwsDirectConnectS1m
}

input AwsDirectConnectDeleteInterconnectInput {
  interconnectId: String!
}

type AwsDirectConnectDeleteInterconnectOutput {
  interconnectState: String
}

input AwsDirectConnectDeleteLagInput {
  lagId: String!
}

input AwsDirectConnectDeleteVirtualInterfaceInput {
  virtualInterfaceId: String!
}

type AwsDirectConnectDeleteVirtualInterfaceOutput {
  virtualInterfaceState: String
}

input AwsDirectConnectDescribeConnectionLoaInput {
  connectionId: String!
  providerName: String
  loaContentType: String
}

type AwsDirectConnectDescribeConnectionLoaOutput {
  loa: AwsDirectConnectS2p
}

input AwsDirectConnectDescribeConnectionsInput {
  connectionId: String
}

input AwsDirectConnectDescribeConnectionsOnInterconnectInput {
  interconnectId: String!
}

input AwsDirectConnectDescribeDirectConnectGatewayAssociationsInput {
  directConnectGatewayId: String
  virtualGatewayId: String
  maxResults: Int
  nextToken: String
}

type AwsDirectConnectDescribeDirectConnectGatewayAssociationsOutput {
  directConnectGatewayAssociations: [AwsDirectConnectS1r]
  nextToken: String
}

input AwsDirectConnectDescribeDirectConnectGatewayAttachmentsInput {
  directConnectGatewayId: String
  virtualInterfaceId: String
  maxResults: Int
  nextToken: String
}

type AwsDirectConnectDescribeDirectConnectGatewayAttachmentsOutput {
  directConnectGatewayAttachments: [AwsDirectConnectDescribeDirectConnectGatewayAttachmentsOutputDirectConnectGatewayAttachments]
  nextToken: String
}

type AwsDirectConnectDescribeDirectConnectGatewayAttachmentsOutputDirectConnectGatewayAttachments {
  directConnectGatewayId: String
  virtualInterfaceId: String
  virtualInterfaceRegion: String
  virtualInterfaceOwnerAccount: String
  attachmentState: String
  stateChangeError: String
}

input AwsDirectConnectDescribeDirectConnectGatewaysInput {
  directConnectGatewayId: String
  maxResults: Int
  nextToken: String
}

type AwsDirectConnectDescribeDirectConnectGatewaysOutput {
  directConnectGateways: [AwsDirectConnectS1m]
  nextToken: String
}

input AwsDirectConnectDescribeHostedConnectionsInput {
  connectionId: String!
}

input AwsDirectConnectDescribeInterconnectLoaInput {
  interconnectId: String!
  providerName: String
  loaContentType: String
}

type AwsDirectConnectDescribeInterconnectLoaOutput {
  loa: AwsDirectConnectS2p
}

input AwsDirectConnectDescribeInterconnectsInput {
  interconnectId: String
}

type AwsDirectConnectDescribeInterconnectsOutput {
  interconnects: [AwsDirectConnectS1w]
}

input AwsDirectConnectDescribeLagsInput {
  lagId: String
}

type AwsDirectConnectDescribeLagsOutput {
  lags: [AwsDirectConnectS21]
}

input AwsDirectConnectDescribeLoaInput {
  connectionId: String!
  providerName: String
  loaContentType: String
}

type AwsDirectConnectDescribeLocationsOutput {
  locations: [AwsDirectConnectDescribeLocationsOutputLocations]
}

type AwsDirectConnectDescribeLocationsOutputLocations {
  locationCode: String
  locationName: String
}

input AwsDirectConnectDescribeTagsInput {
  resourceArns: [String]!
}

type AwsDirectConnectDescribeTagsOutput {
  resourceTags: [AwsDirectConnectDescribeTagsOutputResourceTags]
}

type AwsDirectConnectDescribeTagsOutputResourceTags {
  resourceArn: String
  tags: [AwsDirectConnectS3s]
}

type AwsDirectConnectDescribeVirtualGatewaysOutput {
  virtualGateways: [AwsDirectConnectDescribeVirtualGatewaysOutputVirtualGateways]
}

type AwsDirectConnectDescribeVirtualGatewaysOutputVirtualGateways {
  virtualGatewayId: String
  virtualGatewayState: String
}

input AwsDirectConnectDescribeVirtualInterfacesInput {
  connectionId: String
  virtualInterfaceId: String
}

type AwsDirectConnectDescribeVirtualInterfacesOutput {
  virtualInterfaces: [AwsDirectConnectSp]
}

input AwsDirectConnectDisassociateConnectionFromLagInput {
  connectionId: String!
  lagId: String!
}

type AwsDirectConnectS1m {
  directConnectGatewayId: String
  directConnectGatewayName: String
  amazonSideAsn: JSON
  ownerAccount: String
  directConnectGatewayState: String
  stateChangeError: String
}

type AwsDirectConnectS1r {
  directConnectGatewayId: String
  virtualGatewayId: String
  virtualGatewayRegion: String
  virtualGatewayOwnerAccount: String
  associationState: String
  stateChangeError: String
}

type AwsDirectConnectS1w {
  interconnectId: String
  interconnectName: String
  interconnectState: String
  region: String
  location: String
  bandwidth: String
  loaIssueTime: Date
  lagId: String
  awsDevice: String
}

type AwsDirectConnectS21 {
  connectionsBandwidth: String
  numberOfConnections: Int
  lagId: String
  ownerAccount: String
  lagName: String
  lagState: String
  location: String
  region: String
  minimumLinks: Int
  awsDevice: String
  connections: [AwsDirectConnectS7]
  allowsHostedConnections: Boolean
}

type AwsDirectConnectS2p {
  loaContent: JSON
  loaContentType: String
}

type AwsDirectConnectS3s {
  key: String!
  value: String
}

input AwsDirectConnectS3sInput {
  key: String!
  value: String
}

type AwsDirectConnectS7 {
  ownerAccount: String
  connectionId: String
  connectionName: String
  connectionState: String
  region: String
  location: String
  bandwidth: String
  vlan: Int
  partnerName: String
  loaIssueTime: Date
  lagId: String
  awsDevice: String
}

type AwsDirectConnectSp {
  ownerAccount: String
  virtualInterfaceId: String
  location: String
  connectionId: String
  virtualInterfaceType: String
  virtualInterfaceName: String
  vlan: Int
  asn: Int
  amazonSideAsn: JSON
  authKey: String
  amazonAddress: String
  customerAddress: String
  addressFamily: String
  virtualInterfaceState: String
  customerRouterConfig: String
  virtualGatewayId: String
  directConnectGatewayId: String
  routeFilterPrefixes: [AwsDirectConnectSx]
  bgpPeers: [AwsDirectConnectSpBgpPeers]
}

type AwsDirectConnectSpBgpPeers {
  asn: Int
  authKey: String
  addressFamily: String
  amazonAddress: String
  customerAddress: String
  bgpPeerState: String
  bgpStatus: String
}

type AwsDirectConnectSx {
  cidr: String
}

input AwsDirectConnectSxInput {
  cidr: String
}

input AwsDirectConnectTagResourceInput {
  resourceArn: String!
  tags: [AwsDirectConnectS3sInput]!
}

input AwsDirectConnectUntagResourceInput {
  resourceArn: String!
  tagKeys: [String]!
}

input AwsDirectConnectUpdateLagInput {
  lagId: String!
  lagName: String
  minimumLinks: Int
}

# AWS Directory Service (2015-04-16)
type AwsDirectoryService {
  addIpRoutes(input: AwsDirectoryServiceAddIpRoutesInput!, config: AwsConfig): JSON
  addTagsToResource(input: AwsDirectoryServiceAddTagsToResourceInput!, config: AwsConfig): JSON
  cancelSchemaExtension(input: AwsDirectoryServiceCancelSchemaExtensionInput!, config: AwsConfig): JSON
  connectDirectory(input: AwsDirectoryServiceConnectDirectoryInput!, config: AwsConfig): AwsDirectoryServiceConnectDirectoryOutput
  createAlias(input: AwsDirectoryServiceCreateAliasInput!, config: AwsConfig): AwsDirectoryServiceCreateAliasOutput
  createComputer(input: AwsDirectoryServiceCreateComputerInput!, config: AwsConfig): AwsDirectoryServiceCreateComputerOutput
  createConditionalForwarder(input: AwsDirectoryServiceCreateConditionalForwarderInput!, config: AwsConfig): JSON
  createDirectory(input: AwsDirectoryServiceCreateDirectoryInput!, config: AwsConfig): AwsDirectoryServiceCreateDirectoryOutput
  createMicrosoftAD(input: AwsDirectoryServiceCreateMicrosoftADInput!, config: AwsConfig): AwsDirectoryServiceCreateMicrosoftADOutput
  createSnapshot(input: AwsDirectoryServiceCreateSnapshotInput!, config: AwsConfig): AwsDirectoryServiceCreateSnapshotOutput
  createTrust(input: AwsDirectoryServiceCreateTrustInput!, config: AwsConfig): AwsDirectoryServiceCreateTrustOutput
  deleteConditionalForwarder(input: AwsDirectoryServiceDeleteConditionalForwarderInput!, config: AwsConfig): JSON
  deleteDirectory(input: AwsDirectoryServiceDeleteDirectoryInput!, config: AwsConfig): AwsDirectoryServiceDeleteDirectoryOutput
  deleteSnapshot(input: AwsDirectoryServiceDeleteSnapshotInput!, config: AwsConfig): AwsDirectoryServiceDeleteSnapshotOutput
  deleteTrust(input: AwsDirectoryServiceDeleteTrustInput!, config: AwsConfig): AwsDirectoryServiceDeleteTrustOutput
  deregisterEventTopic(input: AwsDirectoryServiceDeregisterEventTopicInput!, config: AwsConfig): JSON
  describeConditionalForwarders(input: AwsDirectoryServiceDescribeConditionalForwardersInput!, config: AwsConfig): AwsDirectoryServiceDescribeConditionalForwardersOutput
  describeDirectories(input: AwsDirectoryServiceDescribeDirectoriesInput, config: AwsConfig): AwsDirectoryServiceDescribeDirectoriesOutput
  describeDomainControllers(input: AwsDirectoryServiceDescribeDomainControllersInput!, config: AwsConfig): AwsDirectoryServiceDescribeDomainControllersOutput
  describeEventTopics(input: AwsDirectoryServiceDescribeEventTopicsInput, config: AwsConfig): AwsDirectoryServiceDescribeEventTopicsOutput
  describeSnapshots(input: AwsDirectoryServiceDescribeSnapshotsInput, config: AwsConfig): AwsDirectoryServiceDescribeSnapshotsOutput
  describeTrusts(input: AwsDirectoryServiceDescribeTrustsInput, config: AwsConfig): AwsDirectoryServiceDescribeTrustsOutput
  disableRadius(input: AwsDirectoryServiceDisableRadiusInput!, config: AwsConfig): JSON
  disableSso(input: AwsDirectoryServiceDisableSsoInput!, config: AwsConfig): JSON
  enableRadius(input: AwsDirectoryServiceEnableRadiusInput!, config: AwsConfig): JSON
  enableSso(input: AwsDirectoryServiceEnableSsoInput!, config: AwsConfig): JSON
  getDirectoryLimits(input: JSON, config: AwsConfig): AwsDirectoryServiceGetDirectoryLimitsOutput
  getSnapshotLimits(input: AwsDirectoryServiceGetSnapshotLimitsInput!, config: AwsConfig): AwsDirectoryServiceGetSnapshotLimitsOutput
  listIpRoutes(input: AwsDirectoryServiceListIpRoutesInput!, config: AwsConfig): AwsDirectoryServiceListIpRoutesOutput
  listSchemaExtensions(input: AwsDirectoryServiceListSchemaExtensionsInput!, config: AwsConfig): AwsDirectoryServiceListSchemaExtensionsOutput
  listTagsForResource(input: AwsDirectoryServiceListTagsForResourceInput!, config: AwsConfig): AwsDirectoryServiceListTagsForResourceOutput
  registerEventTopic(input: AwsDirectoryServiceRegisterEventTopicInput!, config: AwsConfig): JSON
  removeIpRoutes(input: AwsDirectoryServiceRemoveIpRoutesInput!, config: AwsConfig): JSON
  removeTagsFromResource(input: AwsDirectoryServiceRemoveTagsFromResourceInput!, config: AwsConfig): JSON
  restoreFromSnapshot(input: AwsDirectoryServiceRestoreFromSnapshotInput!, config: AwsConfig): JSON
  startSchemaExtension(input: AwsDirectoryServiceStartSchemaExtensionInput!, config: AwsConfig): AwsDirectoryServiceStartSchemaExtensionOutput
  updateConditionalForwarder(input: AwsDirectoryServiceUpdateConditionalForwarderInput!, config: AwsConfig): JSON
  updateNumberOfDomainControllers(input: AwsDirectoryServiceUpdateNumberOfDomainControllersInput!, config: AwsConfig): JSON
  updateRadius(input: AwsDirectoryServiceUpdateRadiusInput!, config: AwsConfig): JSON
  verifyTrust(input: AwsDirectoryServiceVerifyTrustInput!, config: AwsConfig): AwsDirectoryServiceVerifyTrustOutput
}

input AwsDirectoryServiceAddIpRoutesInput {
  DirectoryId: String!
  IpRoutes: [AwsDirectoryServiceAddIpRoutesIpRoutesInput]!
  UpdateSecurityGroupForDirectoryControllers: Boolean
}

input AwsDirectoryServiceAddIpRoutesIpRoutesInput {
  CidrIp: String
  Description: String
}

input AwsDirectoryServiceAddTagsToResourceInput {
  ResourceId: String!
  Tags: [AwsDirectoryServiceSbInput]!
}

input AwsDirectoryServiceCancelSchemaExtensionInput {
  DirectoryId: String!
  SchemaExtensionId: String!
}

input AwsDirectoryServiceConnectDirectoryConnectSettingsInput {
  VpcId: String!
  SubnetIds: [String]!
  CustomerDnsIps: [String]!
  CustomerUserName: String!
}

input AwsDirectoryServiceConnectDirectoryInput {
  Name: String!
  ShortName: String
  Password: String!
  Description: String
  Size: String!
  ConnectSettings: AwsDirectoryServiceConnectDirectoryConnectSettingsInput!
}

type AwsDirectoryServiceConnectDirectoryOutput {
  DirectoryId: String
}

input AwsDirectoryServiceCreateAliasInput {
  DirectoryId: String!
  Alias: String!
}

type AwsDirectoryServiceCreateAliasOutput {
  DirectoryId: String
  Alias: String
}

input AwsDirectoryServiceCreateComputerInput {
  DirectoryId: String!
  ComputerName: String!
  Password: String!
  OrganizationalUnitDistinguishedName: String
  ComputerAttributes: [AwsDirectoryServiceS13Input]
}

type AwsDirectoryServiceCreateComputerOutput {
  Computer: AwsDirectoryServiceCreateComputerOutputComputer
}

type AwsDirectoryServiceCreateComputerOutputComputer {
  ComputerId: String
  ComputerName: String
  ComputerAttributes: [AwsDirectoryServiceS13]
}

input AwsDirectoryServiceCreateConditionalForwarderInput {
  DirectoryId: String!
  RemoteDomainName: String!
  DnsIpAddrs: [String]!
}

input AwsDirectoryServiceCreateDirectoryInput {
  Name: String!
  ShortName: String
  Password: String!
  Description: String
  Size: String!
  VpcSettings: AwsDirectoryServiceS1fInput
}

type AwsDirectoryServiceCreateDirectoryOutput {
  DirectoryId: String
}

input AwsDirectoryServiceCreateMicrosoftADInput {
  Name: String!
  ShortName: String
  Password: String!
  Description: String
  VpcSettings: AwsDirectoryServiceS1fInput!
}

type AwsDirectoryServiceCreateMicrosoftADOutput {
  DirectoryId: String
}

input AwsDirectoryServiceCreateSnapshotInput {
  DirectoryId: String!
  Name: String
}

type AwsDirectoryServiceCreateSnapshotOutput {
  SnapshotId: String
}

input AwsDirectoryServiceCreateTrustInput {
  DirectoryId: String!
  RemoteDomainName: String!
  TrustPassword: String!
  TrustDirection: String!
  TrustType: String
  ConditionalForwarderIpAddrs: [String]
}

type AwsDirectoryServiceCreateTrustOutput {
  TrustId: String
}

input AwsDirectoryServiceDeleteConditionalForwarderInput {
  DirectoryId: String!
  RemoteDomainName: String!
}

input AwsDirectoryServiceDeleteDirectoryInput {
  DirectoryId: String!
}

type AwsDirectoryServiceDeleteDirectoryOutput {
  DirectoryId: String
}

input AwsDirectoryServiceDeleteSnapshotInput {
  SnapshotId: String!
}

type AwsDirectoryServiceDeleteSnapshotOutput {
  SnapshotId: String
}

input AwsDirectoryServiceDeleteTrustInput {
  TrustId: String!
  DeleteAssociatedConditionalForwarder: Boolean
}

type AwsDirectoryServiceDeleteTrustOutput {
  TrustId: String
}

input AwsDirectoryServiceDeregisterEventTopicInput {
  DirectoryId: String!
  TopicName: String!
}

input AwsDirectoryServiceDescribeConditionalForwardersInput {
  DirectoryId: String!
  RemoteDomainNames: [String]
}

type AwsDirectoryServiceDescribeConditionalForwardersOutput {
  ConditionalForwarders: [AwsDirectoryServiceDescribeConditionalForwardersOutputConditionalForwarders]
}

type AwsDirectoryServiceDescribeConditionalForwardersOutputConditionalForwarders {
  RemoteDomainName: String
  DnsIpAddrs: [String]
  ReplicationScope: String
}

input AwsDirectoryServiceDescribeDirectoriesInput {
  DirectoryIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceDescribeDirectoriesOutput {
  DirectoryDescriptions: [AwsDirectoryServiceDescribeDirectoriesOutputDirectoryDescriptions]
  NextToken: String
}

type AwsDirectoryServiceDescribeDirectoriesOutputDirectoryDescriptions {
  DirectoryId: String
  Name: String
  ShortName: String
  Size: String
  Alias: String
  AccessUrl: String
  Description: String
  DnsIpAddrs: [String]
  Stage: String
  LaunchTime: Date
  StageLastUpdatedDateTime: Date
  Type: String
  VpcSettings: AwsDirectoryServiceDescribeDirectoriesOutputDirectoryDescriptionsVpcSettings
  ConnectSettings: AwsDirectoryServiceDescribeDirectoriesOutputDirectoryDescriptionsConnectSettings
  RadiusSettings: AwsDirectoryServiceS2t
  RadiusStatus: String
  StageReason: String
  SsoEnabled: Boolean
  DesiredNumberOfDomainControllers: Int
}

type AwsDirectoryServiceDescribeDirectoriesOutputDirectoryDescriptionsConnectSettings {
  VpcId: String
  SubnetIds: [String]
  CustomerUserName: String
  SecurityGroupId: String
  AvailabilityZones: [String]
  ConnectIps: [String]
}

type AwsDirectoryServiceDescribeDirectoriesOutputDirectoryDescriptionsVpcSettings {
  VpcId: String
  SubnetIds: [String]
  SecurityGroupId: String
  AvailabilityZones: [String]
}

input AwsDirectoryServiceDescribeDomainControllersInput {
  DirectoryId: String!
  DomainControllerIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceDescribeDomainControllersOutput {
  DomainControllers: [AwsDirectoryServiceDescribeDomainControllersOutputDomainControllers]
  NextToken: String
}

type AwsDirectoryServiceDescribeDomainControllersOutputDomainControllers {
  DirectoryId: String
  DomainControllerId: String
  DnsIpAddr: String
  VpcId: String
  SubnetId: String
  AvailabilityZone: String
  Status: String
  StatusReason: String
  LaunchTime: Date
  StatusLastUpdatedDateTime: Date
}

input AwsDirectoryServiceDescribeEventTopicsInput {
  DirectoryId: String
  TopicNames: [String]
}

type AwsDirectoryServiceDescribeEventTopicsOutput {
  EventTopics: [AwsDirectoryServiceDescribeEventTopicsOutputEventTopics]
}

type AwsDirectoryServiceDescribeEventTopicsOutputEventTopics {
  DirectoryId: String
  TopicName: String
  TopicArn: String
  CreatedDateTime: Date
  Status: String
}

input AwsDirectoryServiceDescribeSnapshotsInput {
  DirectoryId: String
  SnapshotIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceDescribeSnapshotsOutput {
  Snapshots: [AwsDirectoryServiceDescribeSnapshotsOutputSnapshots]
  NextToken: String
}

type AwsDirectoryServiceDescribeSnapshotsOutputSnapshots {
  DirectoryId: String
  SnapshotId: String
  Type: String
  Name: String
  Status: String
  StartTime: Date
}

input AwsDirectoryServiceDescribeTrustsInput {
  DirectoryId: String
  TrustIds: [String]
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceDescribeTrustsOutput {
  Trusts: [AwsDirectoryServiceDescribeTrustsOutputTrusts]
  NextToken: String
}

type AwsDirectoryServiceDescribeTrustsOutputTrusts {
  DirectoryId: String
  TrustId: String
  RemoteDomainName: String
  TrustType: String
  TrustDirection: String
  TrustState: String
  CreatedDateTime: Date
  LastUpdatedDateTime: Date
  StateLastUpdatedDateTime: Date
  TrustStateReason: String
}

input AwsDirectoryServiceDisableRadiusInput {
  DirectoryId: String!
}

input AwsDirectoryServiceDisableSsoInput {
  DirectoryId: String!
  UserName: String
  Password: String
}

input AwsDirectoryServiceEnableRadiusInput {
  DirectoryId: String!
  RadiusSettings: AwsDirectoryServiceS2tInput!
}

input AwsDirectoryServiceEnableSsoInput {
  DirectoryId: String!
  UserName: String
  Password: String
}

type AwsDirectoryServiceGetDirectoryLimitsOutput {
  DirectoryLimits: AwsDirectoryServiceGetDirectoryLimitsOutputDirectoryLimits
}

type AwsDirectoryServiceGetDirectoryLimitsOutputDirectoryLimits {
  CloudOnlyDirectoriesLimit: Int
  CloudOnlyDirectoriesCurrentCount: Int
  CloudOnlyDirectoriesLimitReached: Boolean
  CloudOnlyMicrosoftADLimit: Int
  CloudOnlyMicrosoftADCurrentCount: Int
  CloudOnlyMicrosoftADLimitReached: Boolean
  ConnectedDirectoriesLimit: Int
  ConnectedDirectoriesCurrentCount: Int
  ConnectedDirectoriesLimitReached: Boolean
}

input AwsDirectoryServiceGetSnapshotLimitsInput {
  DirectoryId: String!
}

type AwsDirectoryServiceGetSnapshotLimitsOutput {
  SnapshotLimits: AwsDirectoryServiceGetSnapshotLimitsOutputSnapshotLimits
}

type AwsDirectoryServiceGetSnapshotLimitsOutputSnapshotLimits {
  ManualSnapshotsLimit: Int
  ManualSnapshotsCurrentCount: Int
  ManualSnapshotsLimitReached: Boolean
}

input AwsDirectoryServiceListIpRoutesInput {
  DirectoryId: String!
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceListIpRoutesOutput {
  IpRoutesInfo: [AwsDirectoryServiceListIpRoutesOutputIpRoutesInfo]
  NextToken: String
}

type AwsDirectoryServiceListIpRoutesOutputIpRoutesInfo {
  DirectoryId: String
  CidrIp: String
  IpRouteStatusMsg: String
  AddedDateTime: Date
  IpRouteStatusReason: String
  Description: String
}

input AwsDirectoryServiceListSchemaExtensionsInput {
  DirectoryId: String!
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceListSchemaExtensionsOutput {
  SchemaExtensionsInfo: [AwsDirectoryServiceListSchemaExtensionsOutputSchemaExtensionsInfo]
  NextToken: String
}

type AwsDirectoryServiceListSchemaExtensionsOutputSchemaExtensionsInfo {
  DirectoryId: String
  SchemaExtensionId: String
  Description: String
  SchemaExtensionStatus: String
  SchemaExtensionStatusReason: String
  StartDateTime: Date
  EndDateTime: Date
}

input AwsDirectoryServiceListTagsForResourceInput {
  ResourceId: String!
  NextToken: String
  Limit: Int
}

type AwsDirectoryServiceListTagsForResourceOutput {
  Tags: [AwsDirectoryServiceSb]
  NextToken: String
}

input AwsDirectoryServiceRegisterEventTopicInput {
  DirectoryId: String!
  TopicName: String!
}

input AwsDirectoryServiceRemoveIpRoutesInput {
  DirectoryId: String!
  CidrIps: [String]!
}

input AwsDirectoryServiceRemoveTagsFromResourceInput {
  ResourceId: String!
  TagKeys: [String]!
}

input AwsDirectoryServiceRestoreFromSnapshotInput {
  SnapshotId: String!
}

type AwsDirectoryServiceS13 {
  Name: String
  Value: String
}

input AwsDirectoryServiceS13Input {
  Name: String
  Value: String
}

input AwsDirectoryServiceS1fInput {
  VpcId: String!
  SubnetIds: [String]!
}

type AwsDirectoryServiceS2t {
  RadiusServers: [String]
  RadiusPort: Int
  RadiusTimeout: Int
  RadiusRetries: Int
  SharedSecret: String
  AuthenticationProtocol: String
  DisplayLabel: String
  UseSameUsername: Boolean
}

input AwsDirectoryServiceS2tInput {
  RadiusServers: [String]
  RadiusPort: Int
  RadiusTimeout: Int
  RadiusRetries: Int
  SharedSecret: String
  AuthenticationProtocol: String
  DisplayLabel: String
  UseSameUsername: Boolean
}

type AwsDirectoryServiceSb {
  Key: String!
  Value: String!
}

input AwsDirectoryServiceSbInput {
  Key: String!
  Value: String!
}

input AwsDirectoryServiceStartSchemaExtensionInput {
  DirectoryId: String!
  CreateSnapshotBeforeSchemaExtension: Boolean!
  LdifContent: String!
  Description: String!
}

type AwsDirectoryServiceStartSchemaExtensionOutput {
  SchemaExtensionId: String
}

input AwsDirectoryServiceUpdateConditionalForwarderInput {
  DirectoryId: String!
  RemoteDomainName: String!
  DnsIpAddrs: [String]!
}

input AwsDirectoryServiceUpdateNumberOfDomainControllersInput {
  DirectoryId: String!
  DesiredNumber: Int!
}

input AwsDirectoryServiceUpdateRadiusInput {
  DirectoryId: String!
  RadiusSettings: AwsDirectoryServiceS2tInput!
}

input AwsDirectoryServiceVerifyTrustInput {
  TrustId: String!
}

type AwsDirectoryServiceVerifyTrustOutput {
  TrustId: String
}

# AWS Application Discovery Service (2015-11-01)
type AwsDiscovery {
  associateConfigurationItemsToApplication(input: AwsDiscoveryAssociateConfigurationItemsToApplicationInput!, config: AwsConfig): JSON
  createApplication(input: AwsDiscoveryCreateApplicationInput!, config: AwsConfig): AwsDiscoveryCreateApplicationOutput
  createTags(input: AwsDiscoveryCreateTagsInput!, config: AwsConfig): JSON
  deleteApplications(input: AwsDiscoveryDeleteApplicationsInput!, config: AwsConfig): JSON
  deleteTags(input: AwsDiscoveryDeleteTagsInput!, config: AwsConfig): JSON
  describeAgents(input: AwsDiscoveryDescribeAgentsInput, config: AwsConfig): AwsDiscoveryDescribeAgentsOutput
  describeConfigurations(input: AwsDiscoveryDescribeConfigurationsInput!, config: AwsConfig): AwsDiscoveryDescribeConfigurationsOutput
  describeExportConfigurations(input: AwsDiscoveryDescribeExportConfigurationsInput, config: AwsConfig): AwsDiscoveryDescribeExportConfigurationsOutput
  describeExportTasks(input: AwsDiscoveryDescribeExportTasksInput, config: AwsConfig): AwsDiscoveryDescribeExportTasksOutput
  describeTags(input: AwsDiscoveryDescribeTagsInput, config: AwsConfig): AwsDiscoveryDescribeTagsOutput
  disassociateConfigurationItemsFromApplication(input: AwsDiscoveryDisassociateConfigurationItemsFromApplicationInput!, config: AwsConfig): JSON
  exportConfigurations(config: AwsConfig): AwsDiscoveryExportConfigurationsOutput
  getDiscoverySummary(input: JSON, config: AwsConfig): AwsDiscoveryGetDiscoverySummaryOutput
  listConfigurations(input: AwsDiscoveryListConfigurationsInput!, config: AwsConfig): AwsDiscoveryListConfigurationsOutput
  listServerNeighbors(input: AwsDiscoveryListServerNeighborsInput!, config: AwsConfig): AwsDiscoveryListServerNeighborsOutput
  startDataCollectionByAgentIds(input: AwsDiscoveryStartDataCollectionByAgentIdsInput!, config: AwsConfig): AwsDiscoveryStartDataCollectionByAgentIdsOutput
  startExportTask(input: AwsDiscoveryStartExportTaskInput, config: AwsConfig): AwsDiscoveryStartExportTaskOutput
  stopDataCollectionByAgentIds(input: AwsDiscoveryStopDataCollectionByAgentIdsInput!, config: AwsConfig): AwsDiscoveryStopDataCollectionByAgentIdsOutput
  updateApplication(input: AwsDiscoveryUpdateApplicationInput!, config: AwsConfig): JSON
}

input AwsDiscoveryAssociateConfigurationItemsToApplicationInput {
  applicationConfigurationId: String!
  configurationIds: [String]!
}

input AwsDiscoveryCreateApplicationInput {
  name: String!
  description: String
}

type AwsDiscoveryCreateApplicationOutput {
  configurationId: String
}

input AwsDiscoveryCreateTagsInput {
  configurationIds: [String]!
  tags: [AwsDiscoverySaInput]!
}

input AwsDiscoveryDeleteApplicationsInput {
  configurationIds: [String]!
}

input AwsDiscoveryDeleteTagsInput {
  configurationIds: [String]!
  tags: [AwsDiscoverySaInput]
}

input AwsDiscoveryDescribeAgentsInput {
  agentIds: [String]
  filters: [AwsDiscoverySnInput]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeAgentsOutput {
  agentsInfo: [AwsDiscoveryDescribeAgentsOutputAgentsInfo]
  nextToken: String
}

type AwsDiscoveryDescribeAgentsOutputAgentsInfo {
  agentId: String
  hostName: String
  agentNetworkInfoList: [AwsDiscoveryDescribeAgentsOutputAgentsInfoAgentNetworkInfoList]
  connectorId: String
  version: String
  health: String
  lastHealthPingTime: String
  collectionStatus: String
  agentType: String
  registeredTime: String
}

type AwsDiscoveryDescribeAgentsOutputAgentsInfoAgentNetworkInfoList {
  ipAddress: String
  macAddress: String
}

input AwsDiscoveryDescribeConfigurationsInput {
  configurationIds: [String]!
}

type AwsDiscoveryDescribeConfigurationsOutput {
  configurations: [JSON]
}

input AwsDiscoveryDescribeExportConfigurationsInput {
  exportIds: [String]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeExportConfigurationsOutput {
  exportsInfo: [AwsDiscoveryS18]
  nextToken: String
}

input AwsDiscoveryDescribeExportTasksInput {
  exportIds: [String]
  filters: [AwsDiscoveryS1hInput]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeExportTasksOutput {
  exportsInfo: [AwsDiscoveryS18]
  nextToken: String
}

input AwsDiscoveryDescribeTagsFiltersInput {
  name: String!
  values: [String]!
}

input AwsDiscoveryDescribeTagsInput {
  filters: [AwsDiscoveryDescribeTagsFiltersInput]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryDescribeTagsOutput {
  tags: [AwsDiscoveryDescribeTagsOutputTags]
  nextToken: String
}

type AwsDiscoveryDescribeTagsOutputTags {
  configurationType: String
  configurationId: String
  key: String
  value: String
  timeOfCreation: Date
}

input AwsDiscoveryDisassociateConfigurationItemsFromApplicationInput {
  applicationConfigurationId: String!
  configurationIds: [String]!
}

type AwsDiscoveryExportConfigurationsOutput {
  exportId: String
}

type AwsDiscoveryGetDiscoverySummaryOutput {
  servers: JSON
  applications: JSON
  serversMappedToApplications: JSON
  serversMappedtoTags: JSON
  agentSummary: AwsDiscoveryGetDiscoverySummaryOutputAgentSummary
  connectorSummary: AwsDiscoveryGetDiscoverySummaryOutputConnectorSummary
}

type AwsDiscoveryGetDiscoverySummaryOutputAgentSummary {
  activeAgents: Int!
  healthyAgents: Int!
  blackListedAgents: Int!
  shutdownAgents: Int!
  unhealthyAgents: Int!
  totalAgents: Int!
  unknownAgents: Int!
}

type AwsDiscoveryGetDiscoverySummaryOutputConnectorSummary {
  activeConnectors: Int!
  healthyConnectors: Int!
  blackListedConnectors: Int!
  shutdownConnectors: Int!
  unhealthyConnectors: Int!
  totalConnectors: Int!
  unknownConnectors: Int!
}

input AwsDiscoveryListConfigurationsInput {
  configurationType: String!
  filters: [AwsDiscoverySnInput]
  maxResults: Int
  nextToken: String
  orderBy: [AwsDiscoveryListConfigurationsOrderByInput]
}

input AwsDiscoveryListConfigurationsOrderByInput {
  fieldName: String!
  sortOrder: String
}

type AwsDiscoveryListConfigurationsOutput {
  configurations: [JSON]
  nextToken: String
}

input AwsDiscoveryListServerNeighborsInput {
  configurationId: String!
  portInformationNeeded: Boolean
  neighborConfigurationIds: [String]
  maxResults: Int
  nextToken: String
}

type AwsDiscoveryListServerNeighborsOutput {
  neighbors: [AwsDiscoveryListServerNeighborsOutputNeighbors]!
  nextToken: String
  knownDependencyCount: JSON
}

type AwsDiscoveryListServerNeighborsOutputNeighbors {
  sourceServerId: String!
  destinationServerId: String!
  destinationPort: Int
  transportProtocol: String
  connectionsCount: JSON!
}

type AwsDiscoveryS18 {
  exportId: String!
  exportStatus: String!
  statusMessage: String!
  configurationsDownloadUrl: String
  exportRequestTime: Date!
  isTruncated: Boolean
  requestedStartTime: Date
  requestedEndTime: Date
}

input AwsDiscoveryS1hInput {
  name: String!
  values: [String]!
  condition: String!
}

type AwsDiscoveryS2e {
  agentId: String
  operationSucceeded: Boolean
  description: String
}

input AwsDiscoverySaInput {
  key: String!
  value: String!
}

input AwsDiscoverySnInput {
  name: String!
  values: [String]!
  condition: String!
}

input AwsDiscoveryStartDataCollectionByAgentIdsInput {
  agentIds: [String]!
}

type AwsDiscoveryStartDataCollectionByAgentIdsOutput {
  agentsConfigurationStatus: [AwsDiscoveryS2e]
}

input AwsDiscoveryStartExportTaskInput {
  exportDataFormat: [String]
  filters: [AwsDiscoveryS1hInput]
  startTime: Date
  endTime: Date
}

type AwsDiscoveryStartExportTaskOutput {
  exportId: String
}

input AwsDiscoveryStopDataCollectionByAgentIdsInput {
  agentIds: [String]!
}

type AwsDiscoveryStopDataCollectionByAgentIdsOutput {
  agentsConfigurationStatus: [AwsDiscoveryS2e]
}

input AwsDiscoveryUpdateApplicationInput {
  configurationId: String!
  name: String
  description: String
}

# AWS Database Migration Service (2016-01-01)
type AwsDMS {
  addTagsToResource(input: AwsDMSAddTagsToResourceInput!, config: AwsConfig): JSON
  createEndpoint(input: AwsDMSCreateEndpointInput!, config: AwsConfig): AwsDMSCreateEndpointOutput
  createEventSubscription(input: AwsDMSCreateEventSubscriptionInput!, config: AwsConfig): AwsDMSCreateEventSubscriptionOutput
  createReplicationInstance(input: AwsDMSCreateReplicationInstanceInput!, config: AwsConfig): AwsDMSCreateReplicationInstanceOutput
  createReplicationSubnetGroup(input: AwsDMSCreateReplicationSubnetGroupInput!, config: AwsConfig): AwsDMSCreateReplicationSubnetGroupOutput
  createReplicationTask(input: AwsDMSCreateReplicationTaskInput!, config: AwsConfig): AwsDMSCreateReplicationTaskOutput
  deleteCertificate(input: AwsDMSDeleteCertificateInput!, config: AwsConfig): AwsDMSDeleteCertificateOutput
  deleteEndpoint(input: AwsDMSDeleteEndpointInput!, config: AwsConfig): AwsDMSDeleteEndpointOutput
  deleteEventSubscription(input: AwsDMSDeleteEventSubscriptionInput!, config: AwsConfig): AwsDMSDeleteEventSubscriptionOutput
  deleteReplicationInstance(input: AwsDMSDeleteReplicationInstanceInput!, config: AwsConfig): AwsDMSDeleteReplicationInstanceOutput
  deleteReplicationSubnetGroup(input: AwsDMSDeleteReplicationSubnetGroupInput!, config: AwsConfig): JSON
  deleteReplicationTask(input: AwsDMSDeleteReplicationTaskInput!, config: AwsConfig): AwsDMSDeleteReplicationTaskOutput
  describeAccountAttributes(input: JSON, config: AwsConfig): AwsDMSDescribeAccountAttributesOutput
  describeCertificates(input: AwsDMSDescribeCertificatesInput, config: AwsConfig): AwsDMSDescribeCertificatesOutput
  describeConnections(input: AwsDMSDescribeConnectionsInput, config: AwsConfig): AwsDMSDescribeConnectionsOutput
  describeEndpointTypes(input: AwsDMSDescribeEndpointTypesInput, config: AwsConfig): AwsDMSDescribeEndpointTypesOutput
  describeEndpoints(input: AwsDMSDescribeEndpointsInput, config: AwsConfig): AwsDMSDescribeEndpointsOutput
  describeEventCategories(input: AwsDMSDescribeEventCategoriesInput, config: AwsConfig): AwsDMSDescribeEventCategoriesOutput
  describeEventSubscriptions(input: AwsDMSDescribeEventSubscriptionsInput, config: AwsConfig): AwsDMSDescribeEventSubscriptionsOutput
  describeEvents(input: AwsDMSDescribeEventsInput, config: AwsConfig): AwsDMSDescribeEventsOutput
  describeOrderableReplicationInstances(input: AwsDMSDescribeOrderableReplicationInstancesInput, config: AwsConfig): AwsDMSDescribeOrderableReplicationInstancesOutput
  describeRefreshSchemasStatus(input: AwsDMSDescribeRefreshSchemasStatusInput!, config: AwsConfig): AwsDMSDescribeRefreshSchemasStatusOutput
  describeReplicationInstances(input: AwsDMSDescribeReplicationInstancesInput, config: AwsConfig): AwsDMSDescribeReplicationInstancesOutput
  describeReplicationSubnetGroups(input: AwsDMSDescribeReplicationSubnetGroupsInput, config: AwsConfig): AwsDMSDescribeReplicationSubnetGroupsOutput
  describeReplicationTaskAssessmentResults(input: AwsDMSDescribeReplicationTaskAssessmentResultsInput, config: AwsConfig): AwsDMSDescribeReplicationTaskAssessmentResultsOutput
  describeReplicationTasks(input: AwsDMSDescribeReplicationTasksInput, config: AwsConfig): AwsDMSDescribeReplicationTasksOutput
  describeSchemas(input: AwsDMSDescribeSchemasInput!, config: AwsConfig): AwsDMSDescribeSchemasOutput
  describeTableStatistics(input: AwsDMSDescribeTableStatisticsInput!, config: AwsConfig): AwsDMSDescribeTableStatisticsOutput
  importCertificate(input: AwsDMSImportCertificateInput!, config: AwsConfig): AwsDMSImportCertificateOutput
  listTagsForResource(input: AwsDMSListTagsForResourceInput!, config: AwsConfig): AwsDMSListTagsForResourceOutput
  modifyEndpoint(input: AwsDMSModifyEndpointInput!, config: AwsConfig): AwsDMSModifyEndpointOutput
  modifyEventSubscription(input: AwsDMSModifyEventSubscriptionInput!, config: AwsConfig): AwsDMSModifyEventSubscriptionOutput
  modifyReplicationInstance(input: AwsDMSModifyReplicationInstanceInput!, config: AwsConfig): AwsDMSModifyReplicationInstanceOutput
  modifyReplicationSubnetGroup(input: AwsDMSModifyReplicationSubnetGroupInput!, config: AwsConfig): AwsDMSModifyReplicationSubnetGroupOutput
  modifyReplicationTask(input: AwsDMSModifyReplicationTaskInput!, config: AwsConfig): AwsDMSModifyReplicationTaskOutput
  refreshSchemas(input: AwsDMSRefreshSchemasInput!, config: AwsConfig): AwsDMSRefreshSchemasOutput
  reloadTables(input: AwsDMSReloadTablesInput!, config: AwsConfig): AwsDMSReloadTablesOutput
  removeTagsFromResource(input: AwsDMSRemoveTagsFromResourceInput!, config: AwsConfig): JSON
  startReplicationTask(input: AwsDMSStartReplicationTaskInput!, config: AwsConfig): AwsDMSStartReplicationTaskOutput
  startReplicationTaskAssessment(input: AwsDMSStartReplicationTaskAssessmentInput!, config: AwsConfig): AwsDMSStartReplicationTaskAssessmentOutput
  stopReplicationTask(input: AwsDMSStopReplicationTaskInput!, config: AwsConfig): AwsDMSStopReplicationTaskOutput
  testConnection(input: AwsDMSTestConnectionInput!, config: AwsConfig): AwsDMSTestConnectionOutput
}

input AwsDMSAddTagsToResourceInput {
  ResourceArn: String!
  Tags: [AwsDMSS3Input]!
}

input AwsDMSCreateEndpointInput {
  EndpointIdentifier: String!
  EndpointType: String!
  EngineName: String!
  Username: String
  Password: String
  ServerName: String
  Port: Int
  DatabaseName: String
  ExtraConnectionAttributes: String
  KmsKeyId: String
  Tags: [AwsDMSS3Input]
  CertificateArn: String
  SslMode: String
  DynamoDbSettings: AwsDMSSbInput
  S3Settings: AwsDMSScInput
  MongoDbSettings: AwsDMSSeInput
}

type AwsDMSCreateEndpointOutput {
  Endpoint: AwsDMSSj
}

input AwsDMSCreateEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String!
  SourceType: String
  EventCategories: [String]
  SourceIds: [String]
  Enabled: Boolean
  Tags: [AwsDMSS3Input]
}

type AwsDMSCreateEventSubscriptionOutput {
  EventSubscription: AwsDMSSp
}

input AwsDMSCreateReplicationInstanceInput {
  ReplicationInstanceIdentifier: String!
  AllocatedStorage: Int
  ReplicationInstanceClass: String!
  VpcSecurityGroupIds: [String]
  AvailabilityZone: String
  ReplicationSubnetGroupIdentifier: String
  PreferredMaintenanceWindow: String
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  Tags: [AwsDMSS3Input]
  KmsKeyId: String
  PubliclyAccessible: Boolean
}

type AwsDMSCreateReplicationInstanceOutput {
  ReplicationInstance: AwsDMSSu
}

input AwsDMSCreateReplicationSubnetGroupInput {
  ReplicationSubnetGroupIdentifier: String!
  ReplicationSubnetGroupDescription: String!
  SubnetIds: [String]!
  Tags: [AwsDMSS3Input]
}

type AwsDMSCreateReplicationSubnetGroupOutput {
  ReplicationSubnetGroup: AwsDMSSz
}

input AwsDMSCreateReplicationTaskInput {
  ReplicationTaskIdentifier: String!
  SourceEndpointArn: String!
  TargetEndpointArn: String!
  ReplicationInstanceArn: String!
  MigrationType: String!
  TableMappings: String!
  ReplicationTaskSettings: String
  CdcStartTime: Date
  Tags: [AwsDMSS3Input]
}

type AwsDMSCreateReplicationTaskOutput {
  ReplicationTask: AwsDMSS1c
}

input AwsDMSDeleteCertificateInput {
  CertificateArn: String!
}

type AwsDMSDeleteCertificateOutput {
  Certificate: AwsDMSS1h
}

input AwsDMSDeleteEndpointInput {
  EndpointArn: String!
}

type AwsDMSDeleteEndpointOutput {
  Endpoint: AwsDMSSj
}

input AwsDMSDeleteEventSubscriptionInput {
  SubscriptionName: String!
}

type AwsDMSDeleteEventSubscriptionOutput {
  EventSubscription: AwsDMSSp
}

input AwsDMSDeleteReplicationInstanceInput {
  ReplicationInstanceArn: String!
}

type AwsDMSDeleteReplicationInstanceOutput {
  ReplicationInstance: AwsDMSSu
}

input AwsDMSDeleteReplicationSubnetGroupInput {
  ReplicationSubnetGroupIdentifier: String!
}

input AwsDMSDeleteReplicationTaskInput {
  ReplicationTaskArn: String!
}

type AwsDMSDeleteReplicationTaskOutput {
  ReplicationTask: AwsDMSS1c
}

type AwsDMSDescribeAccountAttributesOutput {
  AccountQuotas: [AwsDMSDescribeAccountAttributesOutputAccountQuotas]
}

type AwsDMSDescribeAccountAttributesOutputAccountQuotas {
  AccountQuotaName: String
  Used: JSON
  Max: JSON
}

input AwsDMSDescribeCertificatesInput {
  Filters: [AwsDMSS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeCertificatesOutput {
  Marker: String
  Certificates: [AwsDMSS1h]
}

input AwsDMSDescribeConnectionsInput {
  Filters: [AwsDMSS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeConnectionsOutput {
  Marker: String
  Connections: [AwsDMSS26]
}

input AwsDMSDescribeEndpointsInput {
  Filters: [AwsDMSS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeEndpointsOutput {
  Marker: String
  Endpoints: [AwsDMSSj]
}

input AwsDMSDescribeEndpointTypesInput {
  Filters: [AwsDMSS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeEndpointTypesOutput {
  Marker: String
  SupportedEndpointTypes: [AwsDMSDescribeEndpointTypesOutputSupportedEndpointTypes]
}

type AwsDMSDescribeEndpointTypesOutputSupportedEndpointTypes {
  EngineName: String
  SupportsCDC: Boolean
  EndpointType: String
}

input AwsDMSDescribeEventCategoriesInput {
  SourceType: String
  Filters: [AwsDMSS1yInput]
}

type AwsDMSDescribeEventCategoriesOutput {
  EventCategoryGroupList: [AwsDMSDescribeEventCategoriesOutputEventCategoryGroupList]
}

type AwsDMSDescribeEventCategoriesOutputEventCategoryGroupList {
  SourceType: String
  EventCategories: [String]
}

input AwsDMSDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  EventCategories: [String]
  Filters: [AwsDMSS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeEventsOutput {
  Marker: String
  Events: [AwsDMSDescribeEventsOutputEvents]
}

type AwsDMSDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  EventCategories: [String]
  Date: Date
}

input AwsDMSDescribeEventSubscriptionsInput {
  SubscriptionName: String
  Filters: [AwsDMSS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeEventSubscriptionsOutput {
  Marker: String
  EventSubscriptionsList: [AwsDMSSp]
}

input AwsDMSDescribeOrderableReplicationInstancesInput {
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeOrderableReplicationInstancesOutput {
  OrderableReplicationInstances: [AwsDMSDescribeOrderableReplicationInstancesOutputOrderableReplicationInstances]
  Marker: String
}

type AwsDMSDescribeOrderableReplicationInstancesOutputOrderableReplicationInstances {
  EngineVersion: String
  ReplicationInstanceClass: String
  StorageType: String
  MinAllocatedStorage: Int
  MaxAllocatedStorage: Int
  DefaultAllocatedStorage: Int
  IncludedAllocatedStorage: Int
}

input AwsDMSDescribeRefreshSchemasStatusInput {
  EndpointArn: String!
}

type AwsDMSDescribeRefreshSchemasStatusOutput {
  RefreshSchemasStatus: AwsDMSS2w
}

input AwsDMSDescribeReplicationInstancesInput {
  Filters: [AwsDMSS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeReplicationInstancesOutput {
  Marker: String
  ReplicationInstances: [AwsDMSSu]
}

input AwsDMSDescribeReplicationSubnetGroupsInput {
  Filters: [AwsDMSS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeReplicationSubnetGroupsOutput {
  Marker: String
  ReplicationSubnetGroups: [AwsDMSSz]
}

input AwsDMSDescribeReplicationTaskAssessmentResultsInput {
  ReplicationTaskArn: String
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeReplicationTaskAssessmentResultsOutput {
  Marker: String
  BucketName: String
  ReplicationTaskAssessmentResults: [AwsDMSDescribeReplicationTaskAssessmentResultsOutputReplicationTaskAssessmentResults]
}

type AwsDMSDescribeReplicationTaskAssessmentResultsOutputReplicationTaskAssessmentResults {
  ReplicationTaskIdentifier: String
  ReplicationTaskArn: String
  ReplicationTaskLastAssessmentDate: Date
  AssessmentStatus: String
  AssessmentResultsFile: String
  AssessmentResults: String
  S3ObjectUrl: String
}

input AwsDMSDescribeReplicationTasksInput {
  Filters: [AwsDMSS1yInput]
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeReplicationTasksOutput {
  Marker: String
  ReplicationTasks: [AwsDMSS1c]
}

input AwsDMSDescribeSchemasInput {
  EndpointArn: String!
  MaxRecords: Int
  Marker: String
}

type AwsDMSDescribeSchemasOutput {
  Marker: String
  Schemas: [String]
}

input AwsDMSDescribeTableStatisticsInput {
  ReplicationTaskArn: String!
  MaxRecords: Int
  Marker: String
  Filters: [AwsDMSS1yInput]
}

type AwsDMSDescribeTableStatisticsOutput {
  ReplicationTaskArn: String
  TableStatistics: [AwsDMSDescribeTableStatisticsOutputTableStatistics]
  Marker: String
}

type AwsDMSDescribeTableStatisticsOutputTableStatistics {
  SchemaName: String
  TableName: String
  Inserts: JSON
  Deletes: JSON
  Updates: JSON
  Ddls: JSON
  FullLoadRows: JSON
  FullLoadCondtnlChkFailedRows: JSON
  FullLoadErrorRows: JSON
  LastUpdateTime: Date
  TableState: String
  ValidationPendingRecords: JSON
  ValidationFailedRecords: JSON
  ValidationSuspendedRecords: JSON
  ValidationState: String
}

input AwsDMSImportCertificateInput {
  CertificateIdentifier: String!
  CertificatePem: String
  CertificateWallet: JSON
  Tags: [AwsDMSS3Input]
}

type AwsDMSImportCertificateOutput {
  Certificate: AwsDMSS1h
}

input AwsDMSListTagsForResourceInput {
  ResourceArn: String!
}

type AwsDMSListTagsForResourceOutput {
  TagList: [AwsDMSS3]
}

input AwsDMSModifyEndpointInput {
  EndpointArn: String!
  EndpointIdentifier: String
  EndpointType: String
  EngineName: String
  Username: String
  Password: String
  ServerName: String
  Port: Int
  DatabaseName: String
  ExtraConnectionAttributes: String
  CertificateArn: String
  SslMode: String
  DynamoDbSettings: AwsDMSSbInput
  S3Settings: AwsDMSScInput
  MongoDbSettings: AwsDMSSeInput
}

type AwsDMSModifyEndpointOutput {
  Endpoint: AwsDMSSj
}

input AwsDMSModifyEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String
  SourceType: String
  EventCategories: [String]
  Enabled: Boolean
}

type AwsDMSModifyEventSubscriptionOutput {
  EventSubscription: AwsDMSSp
}

input AwsDMSModifyReplicationInstanceInput {
  ReplicationInstanceArn: String!
  AllocatedStorage: Int
  ApplyImmediately: Boolean
  ReplicationInstanceClass: String
  VpcSecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  MultiAZ: Boolean
  EngineVersion: String
  AllowMajorVersionUpgrade: Boolean
  AutoMinorVersionUpgrade: Boolean
  ReplicationInstanceIdentifier: String
}

type AwsDMSModifyReplicationInstanceOutput {
  ReplicationInstance: AwsDMSSu
}

input AwsDMSModifyReplicationSubnetGroupInput {
  ReplicationSubnetGroupIdentifier: String!
  ReplicationSubnetGroupDescription: String
  SubnetIds: [String]!
}

type AwsDMSModifyReplicationSubnetGroupOutput {
  ReplicationSubnetGroup: AwsDMSSz
}

input AwsDMSModifyReplicationTaskInput {
  ReplicationTaskArn: String!
  ReplicationTaskIdentifier: String
  MigrationType: String
  TableMappings: String
  ReplicationTaskSettings: String
  CdcStartTime: Date
}

type AwsDMSModifyReplicationTaskOutput {
  ReplicationTask: AwsDMSS1c
}

input AwsDMSRefreshSchemasInput {
  EndpointArn: String!
  ReplicationInstanceArn: String!
}

type AwsDMSRefreshSchemasOutput {
  RefreshSchemasStatus: AwsDMSS2w
}

input AwsDMSReloadTablesInput {
  ReplicationTaskArn: String!
  TablesToReload: [AwsDMSReloadTablesTablesToReloadInput]!
}

type AwsDMSReloadTablesOutput {
  ReplicationTaskArn: String
}

input AwsDMSReloadTablesTablesToReloadInput {
  SchemaName: String
  TableName: String
}

input AwsDMSRemoveTagsFromResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

type AwsDMSS1c {
  ReplicationTaskIdentifier: String
  SourceEndpointArn: String
  TargetEndpointArn: String
  ReplicationInstanceArn: String
  MigrationType: String
  TableMappings: String
  ReplicationTaskSettings: String
  Status: String
  LastFailureMessage: String
  StopReason: String
  ReplicationTaskCreationDate: Date
  ReplicationTaskStartDate: Date
  ReplicationTaskArn: String
  ReplicationTaskStats: AwsDMSS1cReplicationTaskStats
}

type AwsDMSS1cReplicationTaskStats {
  FullLoadProgressPercent: Int
  ElapsedTimeMillis: JSON
  TablesLoaded: Int
  TablesLoading: Int
  TablesQueued: Int
  TablesErrored: Int
}

type AwsDMSS1h {
  CertificateIdentifier: String
  CertificateCreationDate: Date
  CertificatePem: String
  CertificateWallet: JSON
  CertificateArn: String
  CertificateOwner: String
  ValidFromDate: Date
  ValidToDate: Date
  SigningAlgorithm: String
  KeyLength: Int
}

input AwsDMSS1yInput {
  Name: String!
  Values: [String]!
}

type AwsDMSS26 {
  ReplicationInstanceArn: String
  EndpointArn: String
  Status: String
  LastFailureMessage: String
  EndpointIdentifier: String
  ReplicationInstanceIdentifier: String
}

type AwsDMSS2w {
  EndpointArn: String
  ReplicationInstanceArn: String
  Status: String
  LastRefreshDate: Date
  LastFailureMessage: String
}

type AwsDMSS3 {
  Key: String
  Value: String
}

input AwsDMSS3Input {
  Key: String
  Value: String
}

type AwsDMSSb {
  ServiceAccessRoleArn: String!
}

input AwsDMSSbInput {
  ServiceAccessRoleArn: String!
}

type AwsDMSSc {
  ServiceAccessRoleArn: String
  ExternalTableDefinition: String
  CsvRowDelimiter: String
  CsvDelimiter: String
  BucketFolder: String
  BucketName: String
  CompressionType: String
}

input AwsDMSScInput {
  ServiceAccessRoleArn: String
  ExternalTableDefinition: String
  CsvRowDelimiter: String
  CsvDelimiter: String
  BucketFolder: String
  BucketName: String
  CompressionType: String
}

type AwsDMSSe {
  Username: String
  Password: String
  ServerName: String
  Port: Int
  DatabaseName: String
  AuthType: String
  AuthMechanism: String
  NestingLevel: String
  ExtractDocId: String
  DocsToInvestigate: String
  AuthSource: String
}

input AwsDMSSeInput {
  Username: String
  Password: String
  ServerName: String
  Port: Int
  DatabaseName: String
  AuthType: String
  AuthMechanism: String
  NestingLevel: String
  ExtractDocId: String
  DocsToInvestigate: String
  AuthSource: String
}

type AwsDMSSj {
  EndpointIdentifier: String
  EndpointType: String
  EngineName: String
  Username: String
  ServerName: String
  Port: Int
  DatabaseName: String
  ExtraConnectionAttributes: String
  Status: String
  KmsKeyId: String
  EndpointArn: String
  CertificateArn: String
  SslMode: String
  ExternalId: String
  DynamoDbSettings: AwsDMSSb
  S3Settings: AwsDMSSc
  MongoDbSettings: AwsDMSSe
}

type AwsDMSSp {
  CustomerAwsId: String
  CustSubscriptionId: String
  SnsTopicArn: String
  Status: String
  SubscriptionCreationTime: String
  SourceType: String
  SourceIdsList: [String]
  EventCategoriesList: [String]
  Enabled: Boolean
}

input AwsDMSStartReplicationTaskAssessmentInput {
  ReplicationTaskArn: String!
}

type AwsDMSStartReplicationTaskAssessmentOutput {
  ReplicationTask: AwsDMSS1c
}

input AwsDMSStartReplicationTaskInput {
  ReplicationTaskArn: String!
  StartReplicationTaskType: String!
  CdcStartTime: Date
}

type AwsDMSStartReplicationTaskOutput {
  ReplicationTask: AwsDMSS1c
}

input AwsDMSStopReplicationTaskInput {
  ReplicationTaskArn: String!
}

type AwsDMSStopReplicationTaskOutput {
  ReplicationTask: AwsDMSS1c
}

type AwsDMSSu {
  ReplicationInstanceIdentifier: String
  ReplicationInstanceClass: String
  ReplicationInstanceStatus: String
  AllocatedStorage: Int
  InstanceCreateTime: Date
  VpcSecurityGroups: [AwsDMSSuVpcSecurityGroups]
  AvailabilityZone: String
  ReplicationSubnetGroup: AwsDMSSz
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsDMSSuPendingModifiedValues
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  KmsKeyId: String
  ReplicationInstanceArn: String
  ReplicationInstancePublicIpAddress: String
  ReplicationInstancePrivateIpAddress: String
  ReplicationInstancePublicIpAddresses: [String]
  ReplicationInstancePrivateIpAddresses: [String]
  PubliclyAccessible: Boolean
  SecondaryAvailabilityZone: String
}

type AwsDMSSuPendingModifiedValues {
  ReplicationInstanceClass: String
  AllocatedStorage: Int
  MultiAZ: Boolean
  EngineVersion: String
}

type AwsDMSSuVpcSecurityGroups {
  VpcSecurityGroupId: String
  Status: String
}

type AwsDMSSz {
  ReplicationSubnetGroupIdentifier: String
  ReplicationSubnetGroupDescription: String
  VpcId: String
  SubnetGroupStatus: String
  Subnets: [AwsDMSSzSubnets]
}

type AwsDMSSzSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsDMSSzSubnetsSubnetAvailabilityZone
  SubnetStatus: String
}

type AwsDMSSzSubnetsSubnetAvailabilityZone {
  Name: String
}

input AwsDMSTestConnectionInput {
  ReplicationInstanceArn: String!
  EndpointArn: String!
}

type AwsDMSTestConnectionOutput {
  Connection: AwsDMSS26
}

# Amazon DynamoDB (2012-08-10)
type AwsDynamoDB {
  batchGetItem(input: AwsDynamoDBBatchGetItemInput!, config: AwsConfig): AwsDynamoDBBatchGetItemOutput
  batchWriteItem(input: AwsDynamoDBBatchWriteItemInput!, config: AwsConfig): AwsDynamoDBBatchWriteItemOutput
  createBackup(input: AwsDynamoDBCreateBackupInput!, config: AwsConfig): AwsDynamoDBCreateBackupOutput
  createGlobalTable(input: AwsDynamoDBCreateGlobalTableInput!, config: AwsConfig): AwsDynamoDBCreateGlobalTableOutput
  createTable(input: AwsDynamoDBCreateTableInput!, config: AwsConfig): AwsDynamoDBCreateTableOutput
  deleteBackup(input: AwsDynamoDBDeleteBackupInput!, config: AwsConfig): AwsDynamoDBDeleteBackupOutput
  deleteItem(input: AwsDynamoDBDeleteItemInput!, config: AwsConfig): AwsDynamoDBDeleteItemOutput
  deleteTable(input: AwsDynamoDBDeleteTableInput!, config: AwsConfig): AwsDynamoDBDeleteTableOutput
  describeBackup(input: AwsDynamoDBDescribeBackupInput!, config: AwsConfig): AwsDynamoDBDescribeBackupOutput
  describeContinuousBackups(input: AwsDynamoDBDescribeContinuousBackupsInput!, config: AwsConfig): AwsDynamoDBDescribeContinuousBackupsOutput
  describeGlobalTable(input: AwsDynamoDBDescribeGlobalTableInput!, config: AwsConfig): AwsDynamoDBDescribeGlobalTableOutput
  describeLimits(input: JSON, config: AwsConfig): AwsDynamoDBDescribeLimitsOutput
  describeTable(input: AwsDynamoDBDescribeTableInput!, config: AwsConfig): AwsDynamoDBDescribeTableOutput
  describeTimeToLive(input: AwsDynamoDBDescribeTimeToLiveInput!, config: AwsConfig): AwsDynamoDBDescribeTimeToLiveOutput
  getItem(input: AwsDynamoDBGetItemInput!, config: AwsConfig): AwsDynamoDBGetItemOutput
  listBackups(input: AwsDynamoDBListBackupsInput, config: AwsConfig): AwsDynamoDBListBackupsOutput
  listGlobalTables(input: AwsDynamoDBListGlobalTablesInput, config: AwsConfig): AwsDynamoDBListGlobalTablesOutput
  listTables(input: AwsDynamoDBListTablesInput, config: AwsConfig): AwsDynamoDBListTablesOutput
  listTagsOfResource(input: AwsDynamoDBListTagsOfResourceInput!, config: AwsConfig): AwsDynamoDBListTagsOfResourceOutput
  putItem(input: AwsDynamoDBPutItemInput!, config: AwsConfig): AwsDynamoDBPutItemOutput
  query(input: AwsDynamoDBQueryInput!, config: AwsConfig): AwsDynamoDBQueryOutput
  restoreTableFromBackup(input: AwsDynamoDBRestoreTableFromBackupInput!, config: AwsConfig): AwsDynamoDBRestoreTableFromBackupOutput
  scan(input: AwsDynamoDBScanInput!, config: AwsConfig): AwsDynamoDBScanOutput
  tagResource(input: AwsDynamoDBTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsDynamoDBUntagResourceInput!, config: AwsConfig): JSON
  updateGlobalTable(input: AwsDynamoDBUpdateGlobalTableInput!, config: AwsConfig): AwsDynamoDBUpdateGlobalTableOutput
  updateItem(input: AwsDynamoDBUpdateItemInput!, config: AwsConfig): AwsDynamoDBUpdateItemOutput
  updateTable(input: AwsDynamoDBUpdateTableInput!, config: AwsConfig): AwsDynamoDBUpdateTableOutput
  updateTimeToLive(input: AwsDynamoDBUpdateTimeToLiveInput!, config: AwsConfig): AwsDynamoDBUpdateTimeToLiveOutput
}

input AwsDynamoDBBatchGetItemInput {
  RequestItems: JSON!
  ReturnConsumedCapacity: String
}

type AwsDynamoDBBatchGetItemOutput {
  Responses: JSON
  UnprocessedKeys: JSON
  ConsumedCapacity: [AwsDynamoDBSu]
}

input AwsDynamoDBBatchWriteItemInput {
  RequestItems: JSON!
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
}

type AwsDynamoDBBatchWriteItemOutput {
  UnprocessedItems: JSON
  ItemCollectionMetrics: JSON
  ConsumedCapacity: [AwsDynamoDBSu]
}

input AwsDynamoDBCreateBackupInput {
  TableName: String!
  BackupName: String!
}

type AwsDynamoDBCreateBackupOutput {
  BackupDetails: AwsDynamoDBS1h
}

input AwsDynamoDBCreateGlobalTableInput {
  GlobalTableName: String!
  ReplicationGroup: [AwsDynamoDBS1nInput]!
}

type AwsDynamoDBCreateGlobalTableOutput {
  GlobalTableDescription: AwsDynamoDBS1r
}

input AwsDynamoDBCreateTableGlobalSecondaryIndexesInput {
  IndexName: String!
  KeySchema: [AwsDynamoDBS22Input]!
  Projection: AwsDynamoDBS27Input!
  ProvisionedThroughput: AwsDynamoDBS2dInput!
}

input AwsDynamoDBCreateTableInput {
  AttributeDefinitions: [AwsDynamoDBS1yInput]!
  TableName: String!
  KeySchema: [AwsDynamoDBS22Input]!
  LocalSecondaryIndexes: [AwsDynamoDBCreateTableLocalSecondaryIndexesInput]
  GlobalSecondaryIndexes: [AwsDynamoDBCreateTableGlobalSecondaryIndexesInput]
  ProvisionedThroughput: AwsDynamoDBS2dInput!
  StreamSpecification: AwsDynamoDBS2fInput
}

input AwsDynamoDBCreateTableLocalSecondaryIndexesInput {
  IndexName: String!
  KeySchema: [AwsDynamoDBS22Input]!
  Projection: AwsDynamoDBS27Input!
}

type AwsDynamoDBCreateTableOutput {
  TableDescription: AwsDynamoDBS2j
}

input AwsDynamoDBDeleteBackupInput {
  BackupArn: String!
}

type AwsDynamoDBDeleteBackupOutput {
  BackupDescription: AwsDynamoDBS32
}

input AwsDynamoDBDeleteItemInput {
  TableName: String!
  Key: JSON!
  Expected: JSON
  ConditionalOperator: String
  ReturnValues: String
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
  ConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
}

type AwsDynamoDBDeleteItemOutput {
  Attributes: JSON
  ConsumedCapacity: AwsDynamoDBSu
  ItemCollectionMetrics: AwsDynamoDBS1a
}

input AwsDynamoDBDeleteTableInput {
  TableName: String!
}

type AwsDynamoDBDeleteTableOutput {
  TableDescription: AwsDynamoDBS2j
}

input AwsDynamoDBDescribeBackupInput {
  BackupArn: String!
}

type AwsDynamoDBDescribeBackupOutput {
  BackupDescription: AwsDynamoDBS32
}

input AwsDynamoDBDescribeContinuousBackupsInput {
  TableName: String!
}

type AwsDynamoDBDescribeContinuousBackupsOutput {
  ContinuousBackupsDescription: AwsDynamoDBDescribeContinuousBackupsOutputContinuousBackupsDescription
}

type AwsDynamoDBDescribeContinuousBackupsOutputContinuousBackupsDescription {
  ContinuousBackupsStatus: String!
}

input AwsDynamoDBDescribeGlobalTableInput {
  GlobalTableName: String!
}

type AwsDynamoDBDescribeGlobalTableOutput {
  GlobalTableDescription: AwsDynamoDBS1r
}

type AwsDynamoDBDescribeLimitsOutput {
  AccountMaxReadCapacityUnits: JSON
  AccountMaxWriteCapacityUnits: JSON
  TableMaxReadCapacityUnits: JSON
  TableMaxWriteCapacityUnits: JSON
}

input AwsDynamoDBDescribeTableInput {
  TableName: String!
}

type AwsDynamoDBDescribeTableOutput {
  Table: AwsDynamoDBS2j
}

input AwsDynamoDBDescribeTimeToLiveInput {
  TableName: String!
}

type AwsDynamoDBDescribeTimeToLiveOutput {
  TimeToLiveDescription: AwsDynamoDBS3b
}

input AwsDynamoDBGetItemInput {
  TableName: String!
  Key: JSON!
  AttributesToGet: [String]
  ConsistentRead: Boolean
  ReturnConsumedCapacity: String
  ProjectionExpression: String
  ExpressionAttributeNames: JSON
}

type AwsDynamoDBGetItemOutput {
  Item: JSON
  ConsumedCapacity: AwsDynamoDBSu
}

input AwsDynamoDBListBackupsInput {
  TableName: String
  Limit: Int
  TimeRangeLowerBound: Date
  TimeRangeUpperBound: Date
  ExclusiveStartBackupArn: String
}

type AwsDynamoDBListBackupsOutput {
  BackupSummaries: [AwsDynamoDBListBackupsOutputBackupSummaries]
  LastEvaluatedBackupArn: String
}

type AwsDynamoDBListBackupsOutputBackupSummaries {
  TableName: String
  TableId: String
  TableArn: String
  BackupArn: String
  BackupName: String
  BackupCreationDateTime: Date
  BackupStatus: String
  BackupSizeBytes: JSON
}

input AwsDynamoDBListGlobalTablesInput {
  ExclusiveStartGlobalTableName: String
  Limit: Int
  RegionName: String
}

type AwsDynamoDBListGlobalTablesOutput {
  GlobalTables: [AwsDynamoDBListGlobalTablesOutputGlobalTables]
  LastEvaluatedGlobalTableName: String
}

type AwsDynamoDBListGlobalTablesOutputGlobalTables {
  GlobalTableName: String
  ReplicationGroup: [AwsDynamoDBS1n]
}

input AwsDynamoDBListTablesInput {
  ExclusiveStartTableName: String
  Limit: Int
}

type AwsDynamoDBListTablesOutput {
  TableNames: [String]
  LastEvaluatedTableName: String
}

input AwsDynamoDBListTagsOfResourceInput {
  ResourceArn: String!
  NextToken: String
}

type AwsDynamoDBListTagsOfResourceOutput {
  Tags: [AwsDynamoDBS4s]
  NextToken: String
}

input AwsDynamoDBPutItemInput {
  TableName: String!
  Item: JSON!
  Expected: JSON
  ReturnValues: String
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
  ConditionalOperator: String
  ConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
}

type AwsDynamoDBPutItemOutput {
  Attributes: JSON
  ConsumedCapacity: AwsDynamoDBSu
  ItemCollectionMetrics: AwsDynamoDBS1a
}

input AwsDynamoDBQueryInput {
  TableName: String!
  IndexName: String
  Select: String
  AttributesToGet: [String]
  Limit: Int
  ConsistentRead: Boolean
  KeyConditions: JSON
  QueryFilter: JSON
  ConditionalOperator: String
  ScanIndexForward: Boolean
  ExclusiveStartKey: JSON
  ReturnConsumedCapacity: String
  ProjectionExpression: String
  FilterExpression: String
  KeyConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
}

type AwsDynamoDBQueryOutput {
  Items: [JSON]
  Count: Int
  ScannedCount: Int
  LastEvaluatedKey: JSON
  ConsumedCapacity: AwsDynamoDBSu
}

input AwsDynamoDBRestoreTableFromBackupInput {
  TargetTableName: String!
  BackupArn: String!
}

type AwsDynamoDBRestoreTableFromBackupOutput {
  TableDescription: AwsDynamoDBS2j
}

type AwsDynamoDBS1a {
  ItemCollectionKey: JSON
  SizeEstimateRangeGB: [JSON]
}

type AwsDynamoDBS1h {
  BackupArn: String!
  BackupName: String!
  BackupSizeBytes: JSON
  BackupStatus: String!
  BackupCreationDateTime: Date!
}

type AwsDynamoDBS1n {
  RegionName: String
}

input AwsDynamoDBS1nInput {
  RegionName: String
}

type AwsDynamoDBS1r {
  ReplicationGroup: [AwsDynamoDBS1rReplicationGroup]
  GlobalTableArn: String
  CreationDateTime: Date
  GlobalTableStatus: String
  GlobalTableName: String
}

type AwsDynamoDBS1rReplicationGroup {
  RegionName: String
}

type AwsDynamoDBS1y {
  AttributeName: String!
  AttributeType: String!
}

input AwsDynamoDBS1yInput {
  AttributeName: String!
  AttributeType: String!
}

type AwsDynamoDBS22 {
  AttributeName: String!
  KeyType: String!
}

input AwsDynamoDBS22Input {
  AttributeName: String!
  KeyType: String!
}

type AwsDynamoDBS27 {
  ProjectionType: String
  NonKeyAttributes: [String]
}

input AwsDynamoDBS27Input {
  ProjectionType: String
  NonKeyAttributes: [String]
}

type AwsDynamoDBS2d {
  ReadCapacityUnits: JSON!
  WriteCapacityUnits: JSON!
}

input AwsDynamoDBS2dInput {
  ReadCapacityUnits: JSON!
  WriteCapacityUnits: JSON!
}

type AwsDynamoDBS2f {
  StreamEnabled: Boolean
  StreamViewType: String
}

input AwsDynamoDBS2fInput {
  StreamEnabled: Boolean
  StreamViewType: String
}

type AwsDynamoDBS2j {
  AttributeDefinitions: [AwsDynamoDBS1y]
  TableName: String
  KeySchema: [AwsDynamoDBS22]
  TableStatus: String
  CreationDateTime: Date
  ProvisionedThroughput: AwsDynamoDBS2l
  TableSizeBytes: JSON
  ItemCount: JSON
  TableArn: String
  TableId: String
  LocalSecondaryIndexes: [AwsDynamoDBS2jLocalSecondaryIndexes]
  GlobalSecondaryIndexes: [AwsDynamoDBS2jGlobalSecondaryIndexes]
  StreamSpecification: AwsDynamoDBS2f
  LatestStreamLabel: String
  LatestStreamArn: String
  RestoreSummary: AwsDynamoDBS2jRestoreSummary
}

type AwsDynamoDBS2jGlobalSecondaryIndexes {
  IndexName: String
  KeySchema: [AwsDynamoDBS22]
  Projection: AwsDynamoDBS27
  IndexStatus: String
  Backfilling: Boolean
  ProvisionedThroughput: AwsDynamoDBS2l
  IndexSizeBytes: JSON
  ItemCount: JSON
  IndexArn: String
}

type AwsDynamoDBS2jLocalSecondaryIndexes {
  IndexName: String
  KeySchema: [AwsDynamoDBS22]
  Projection: AwsDynamoDBS27
  IndexSizeBytes: JSON
  ItemCount: JSON
  IndexArn: String
}

type AwsDynamoDBS2jRestoreSummary {
  SourceBackupArn: String
  SourceTableArn: String
  RestoreDateTime: Date!
  RestoreInProgress: Boolean!
}

type AwsDynamoDBS2l {
  LastIncreaseDateTime: Date
  LastDecreaseDateTime: Date
  NumberOfDecreasesToday: JSON
  ReadCapacityUnits: JSON
  WriteCapacityUnits: JSON
}

type AwsDynamoDBS32 {
  BackupDetails: AwsDynamoDBS1h
  SourceTableDetails: AwsDynamoDBS32SourceTableDetails
  SourceTableFeatureDetails: AwsDynamoDBS32SourceTableFeatureDetails
}

type AwsDynamoDBS32SourceTableDetails {
  TableName: String!
  TableId: String!
  TableArn: String
  TableSizeBytes: JSON
  KeySchema: [AwsDynamoDBS22]!
  TableCreationDateTime: Date!
  ProvisionedThroughput: AwsDynamoDBS2d!
  ItemCount: JSON
}

type AwsDynamoDBS32SourceTableFeatureDetails {
  LocalSecondaryIndexes: [AwsDynamoDBS32SourceTableFeatureDetailsLocalSecondaryIndexes]
  GlobalSecondaryIndexes: [AwsDynamoDBS32SourceTableFeatureDetailsGlobalSecondaryIndexes]
  StreamDescription: AwsDynamoDBS2f
  TimeToLiveDescription: AwsDynamoDBS3b
}

type AwsDynamoDBS32SourceTableFeatureDetailsGlobalSecondaryIndexes {
  IndexName: String
  KeySchema: [AwsDynamoDBS22]
  Projection: AwsDynamoDBS27
  ProvisionedThroughput: AwsDynamoDBS2d
}

type AwsDynamoDBS32SourceTableFeatureDetailsLocalSecondaryIndexes {
  IndexName: String
  KeySchema: [AwsDynamoDBS22]
  Projection: AwsDynamoDBS27
}

type AwsDynamoDBS3b {
  TimeToLiveStatus: String
  AttributeName: String
}

type AwsDynamoDBS4s {
  Key: String!
  Value: String!
}

input AwsDynamoDBS4sInput {
  Key: String!
  Value: String!
}

type AwsDynamoDBS5z {
  Enabled: Boolean!
  AttributeName: String!
}

input AwsDynamoDBS5zInput {
  Enabled: Boolean!
  AttributeName: String!
}

input AwsDynamoDBScanInput {
  TableName: String!
  IndexName: String
  AttributesToGet: [String]
  Limit: Int
  Select: String
  ScanFilter: JSON
  ConditionalOperator: String
  ExclusiveStartKey: JSON
  ReturnConsumedCapacity: String
  TotalSegments: Int
  Segment: Int
  ProjectionExpression: String
  FilterExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
  ConsistentRead: Boolean
}

type AwsDynamoDBScanOutput {
  Items: [JSON]
  Count: Int
  ScannedCount: Int
  LastEvaluatedKey: JSON
  ConsumedCapacity: AwsDynamoDBSu
}

# Amazon DynamoDB Streams (2012-08-10)
type AwsDynamoDBStreams {
  describeStream(input: AwsDynamoDBStreamsDescribeStreamInput!, config: AwsConfig): AwsDynamoDBStreamsDescribeStreamOutput
  getRecords(input: AwsDynamoDBStreamsGetRecordsInput!, config: AwsConfig): AwsDynamoDBStreamsGetRecordsOutput
  getShardIterator(input: AwsDynamoDBStreamsGetShardIteratorInput!, config: AwsConfig): AwsDynamoDBStreamsGetShardIteratorOutput
  listStreams(input: AwsDynamoDBStreamsListStreamsInput, config: AwsConfig): AwsDynamoDBStreamsListStreamsOutput
}

input AwsDynamoDBStreamsDescribeStreamInput {
  StreamArn: String!
  Limit: Int
  ExclusiveStartShardId: String
}

type AwsDynamoDBStreamsDescribeStreamOutput {
  StreamDescription: AwsDynamoDBStreamsDescribeStreamOutputStreamDescription
}

type AwsDynamoDBStreamsDescribeStreamOutputStreamDescription {
  StreamArn: String
  StreamLabel: String
  StreamStatus: String
  StreamViewType: String
  CreationRequestDateTime: Date
  TableName: String
  KeySchema: [AwsDynamoDBStreamsDescribeStreamOutputStreamDescriptionKeySchema]
  Shards: [AwsDynamoDBStreamsDescribeStreamOutputStreamDescriptionShards]
  LastEvaluatedShardId: String
}

type AwsDynamoDBStreamsDescribeStreamOutputStreamDescriptionKeySchema {
  AttributeName: String!
  KeyType: String!
}

type AwsDynamoDBStreamsDescribeStreamOutputStreamDescriptionShards {
  ShardId: String
  SequenceNumberRange: AwsDynamoDBStreamsDescribeStreamOutputStreamDescriptionShardsSequenceNumberRange
  ParentShardId: String
}

type AwsDynamoDBStreamsDescribeStreamOutputStreamDescriptionShardsSequenceNumberRange {
  StartingSequenceNumber: String
  EndingSequenceNumber: String
}

input AwsDynamoDBStreamsGetRecordsInput {
  ShardIterator: String!
  Limit: Int
}

type AwsDynamoDBStreamsGetRecordsOutput {
  Records: [AwsDynamoDBStreamsGetRecordsOutputRecords]
  NextShardIterator: String
}

type AwsDynamoDBStreamsGetRecordsOutputRecords {
  eventID: String
  eventName: String
  eventVersion: String
  eventSource: String
  awsRegion: String
  dynamodb: AwsDynamoDBStreamsGetRecordsOutputRecordsDynamodb
  userIdentity: AwsDynamoDBStreamsGetRecordsOutputRecordsUserIdentity
}

type AwsDynamoDBStreamsGetRecordsOutputRecordsDynamodb {
  ApproximateCreationDateTime: Date
  Keys: JSON
  NewImage: JSON
  OldImage: JSON
  SequenceNumber: String
  SizeBytes: JSON
  StreamViewType: String
}

type AwsDynamoDBStreamsGetRecordsOutputRecordsUserIdentity {
  PrincipalId: String
  Type: String
}

input AwsDynamoDBStreamsGetShardIteratorInput {
  StreamArn: String!
  ShardId: String!
  ShardIteratorType: String!
  SequenceNumber: String
}

type AwsDynamoDBStreamsGetShardIteratorOutput {
  ShardIterator: String
}

input AwsDynamoDBStreamsListStreamsInput {
  TableName: String
  Limit: Int
  ExclusiveStartStreamArn: String
}

type AwsDynamoDBStreamsListStreamsOutput {
  Streams: [AwsDynamoDBStreamsListStreamsOutputStreams]
  LastEvaluatedStreamArn: String
}

type AwsDynamoDBStreamsListStreamsOutputStreams {
  StreamArn: String
  TableName: String
  StreamLabel: String
}

type AwsDynamoDBSu {
  TableName: String
  CapacityUnits: JSON
  Table: AwsDynamoDBSw
  LocalSecondaryIndexes: JSON
  GlobalSecondaryIndexes: JSON
}

type AwsDynamoDBSw {
  CapacityUnits: JSON
}

input AwsDynamoDBTagResourceInput {
  ResourceArn: String!
  Tags: [AwsDynamoDBS4sInput]!
}

input AwsDynamoDBUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsDynamoDBUpdateGlobalTableInput {
  GlobalTableName: String!
  ReplicaUpdates: [AwsDynamoDBUpdateGlobalTableReplicaUpdatesInput]!
}

type AwsDynamoDBUpdateGlobalTableOutput {
  GlobalTableDescription: AwsDynamoDBS1r
}

input AwsDynamoDBUpdateGlobalTableReplicaUpdatesCreateInput {
  RegionName: String!
}

input AwsDynamoDBUpdateGlobalTableReplicaUpdatesDeleteInput {
  RegionName: String!
}

input AwsDynamoDBUpdateGlobalTableReplicaUpdatesInput {
  Create: AwsDynamoDBUpdateGlobalTableReplicaUpdatesCreateInput
  Delete: AwsDynamoDBUpdateGlobalTableReplicaUpdatesDeleteInput
}

input AwsDynamoDBUpdateItemInput {
  TableName: String!
  Key: JSON!
  AttributeUpdates: JSON
  Expected: JSON
  ConditionalOperator: String
  ReturnValues: String
  ReturnConsumedCapacity: String
  ReturnItemCollectionMetrics: String
  UpdateExpression: String
  ConditionExpression: String
  ExpressionAttributeNames: JSON
  ExpressionAttributeValues: JSON
}

type AwsDynamoDBUpdateItemOutput {
  Attributes: JSON
  ConsumedCapacity: AwsDynamoDBSu
  ItemCollectionMetrics: AwsDynamoDBS1a
}

input AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesCreateInput {
  IndexName: String!
  KeySchema: [AwsDynamoDBS22Input]!
  Projection: AwsDynamoDBS27Input!
  ProvisionedThroughput: AwsDynamoDBS2dInput!
}

input AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesDeleteInput {
  IndexName: String!
}

input AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesInput {
  Update: AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesUpdateInput
  Create: AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesCreateInput
  Delete: AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesDeleteInput
}

input AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesUpdateInput {
  IndexName: String!
  ProvisionedThroughput: AwsDynamoDBS2dInput!
}

input AwsDynamoDBUpdateTableInput {
  AttributeDefinitions: [AwsDynamoDBS1yInput]
  TableName: String!
  ProvisionedThroughput: AwsDynamoDBS2dInput
  GlobalSecondaryIndexUpdates: [AwsDynamoDBUpdateTableGlobalSecondaryIndexUpdatesInput]
  StreamSpecification: AwsDynamoDBS2fInput
}

type AwsDynamoDBUpdateTableOutput {
  TableDescription: AwsDynamoDBS2j
}

input AwsDynamoDBUpdateTimeToLiveInput {
  TableName: String!
  TimeToLiveSpecification: AwsDynamoDBS5zInput!
}

type AwsDynamoDBUpdateTimeToLiveOutput {
  TimeToLiveSpecification: AwsDynamoDBS5z
}

# Amazon Elastic Compute Cloud (2016-11-15)
type AwsEC2 {
  acceptReservedInstancesExchangeQuote(input: AwsEC2AcceptReservedInstancesExchangeQuoteInput!, config: AwsConfig): AwsEC2AcceptReservedInstancesExchangeQuoteOutput
  acceptVpcEndpointConnections(input: AwsEC2AcceptVpcEndpointConnectionsInput!, config: AwsConfig): AwsEC2AcceptVpcEndpointConnectionsOutput
  acceptVpcPeeringConnection(input: AwsEC2AcceptVpcPeeringConnectionInput, config: AwsConfig): AwsEC2AcceptVpcPeeringConnectionOutput
  allocateAddress(input: AwsEC2AllocateAddressInput, config: AwsConfig): AwsEC2AllocateAddressOutput
  allocateHosts(input: AwsEC2AllocateHostsInput!, config: AwsConfig): AwsEC2AllocateHostsOutput
  assignIpv6Addresses(input: AwsEC2AssignIpv6AddressesInput!, config: AwsConfig): AwsEC2AssignIpv6AddressesOutput
  assignPrivateIpAddresses(input: AwsEC2AssignPrivateIpAddressesInput!, config: AwsConfig): JSON
  associateAddress(input: AwsEC2AssociateAddressInput, config: AwsConfig): AwsEC2AssociateAddressOutput
  associateDhcpOptions(input: AwsEC2AssociateDhcpOptionsInput!, config: AwsConfig): JSON
  associateIamInstanceProfile(input: AwsEC2AssociateIamInstanceProfileInput!, config: AwsConfig): AwsEC2AssociateIamInstanceProfileOutput
  associateRouteTable(input: AwsEC2AssociateRouteTableInput!, config: AwsConfig): AwsEC2AssociateRouteTableOutput
  associateSubnetCidrBlock(input: AwsEC2AssociateSubnetCidrBlockInput!, config: AwsConfig): AwsEC2AssociateSubnetCidrBlockOutput
  associateVpcCidrBlock(input: AwsEC2AssociateVpcCidrBlockInput!, config: AwsConfig): AwsEC2AssociateVpcCidrBlockOutput
  attachClassicLinkVpc(input: AwsEC2AttachClassicLinkVpcInput!, config: AwsConfig): AwsEC2AttachClassicLinkVpcOutput
  attachInternetGateway(input: AwsEC2AttachInternetGatewayInput!, config: AwsConfig): JSON
  attachNetworkInterface(input: AwsEC2AttachNetworkInterfaceInput!, config: AwsConfig): AwsEC2AttachNetworkInterfaceOutput
  attachVolume(input: AwsEC2AttachVolumeInput!, config: AwsConfig): JSON
  attachVpnGateway(input: AwsEC2AttachVpnGatewayInput!, config: AwsConfig): AwsEC2AttachVpnGatewayOutput
  authorizeSecurityGroupEgress(input: AwsEC2AuthorizeSecurityGroupEgressInput!, config: AwsConfig): JSON
  authorizeSecurityGroupIngress(input: AwsEC2AuthorizeSecurityGroupIngressInput, config: AwsConfig): JSON
  bundleInstance(input: AwsEC2BundleInstanceInput!, config: AwsConfig): AwsEC2BundleInstanceOutput
  cancelBundleTask(input: AwsEC2CancelBundleTaskInput!, config: AwsConfig): AwsEC2CancelBundleTaskOutput
  cancelConversionTask(input: AwsEC2CancelConversionTaskInput!, config: AwsConfig): JSON
  cancelExportTask(input: AwsEC2CancelExportTaskInput!, config: AwsConfig): JSON
  cancelImportTask(input: AwsEC2CancelImportTaskInput, config: AwsConfig): AwsEC2CancelImportTaskOutput
  cancelReservedInstancesListing(input: AwsEC2CancelReservedInstancesListingInput!, config: AwsConfig): AwsEC2CancelReservedInstancesListingOutput
  cancelSpotFleetRequests(input: AwsEC2CancelSpotFleetRequestsInput!, config: AwsConfig): AwsEC2CancelSpotFleetRequestsOutput
  cancelSpotInstanceRequests(input: AwsEC2CancelSpotInstanceRequestsInput!, config: AwsConfig): AwsEC2CancelSpotInstanceRequestsOutput
  confirmProductInstance(input: AwsEC2ConfirmProductInstanceInput!, config: AwsConfig): AwsEC2ConfirmProductInstanceOutput
  copyFpgaImage(input: AwsEC2CopyFpgaImageInput!, config: AwsConfig): AwsEC2CopyFpgaImageOutput
  copyImage(input: AwsEC2CopyImageInput!, config: AwsConfig): AwsEC2CopyImageOutput
  copySnapshot(input: AwsEC2CopySnapshotInput!, config: AwsConfig): AwsEC2CopySnapshotOutput
  createCustomerGateway(input: AwsEC2CreateCustomerGatewayInput!, config: AwsConfig): AwsEC2CreateCustomerGatewayOutput
  createDefaultSubnet(input: AwsEC2CreateDefaultSubnetInput!, config: AwsConfig): AwsEC2CreateDefaultSubnetOutput
  createDefaultVpc(input: AwsEC2CreateDefaultVpcInput, config: AwsConfig): AwsEC2CreateDefaultVpcOutput
  createDhcpOptions(input: AwsEC2CreateDhcpOptionsInput!, config: AwsConfig): AwsEC2CreateDhcpOptionsOutput
  createEgressOnlyInternetGateway(input: AwsEC2CreateEgressOnlyInternetGatewayInput!, config: AwsConfig): AwsEC2CreateEgressOnlyInternetGatewayOutput
  createFlowLogs(input: AwsEC2CreateFlowLogsInput!, config: AwsConfig): AwsEC2CreateFlowLogsOutput
  createFpgaImage(input: AwsEC2CreateFpgaImageInput!, config: AwsConfig): AwsEC2CreateFpgaImageOutput
  createImage(input: AwsEC2CreateImageInput!, config: AwsConfig): AwsEC2CreateImageOutput
  createInstanceExportTask(input: AwsEC2CreateInstanceExportTaskInput!, config: AwsConfig): AwsEC2CreateInstanceExportTaskOutput
  createInternetGateway(input: AwsEC2CreateInternetGatewayInput, config: AwsConfig): AwsEC2CreateInternetGatewayOutput
  createKeyPair(input: AwsEC2CreateKeyPairInput!, config: AwsConfig): AwsEC2CreateKeyPairOutput
  createLaunchTemplate(input: AwsEC2CreateLaunchTemplateInput!, config: AwsConfig): AwsEC2CreateLaunchTemplateOutput
  createLaunchTemplateVersion(input: AwsEC2CreateLaunchTemplateVersionInput!, config: AwsConfig): AwsEC2CreateLaunchTemplateVersionOutput
  createNatGateway(input: AwsEC2CreateNatGatewayInput!, config: AwsConfig): AwsEC2CreateNatGatewayOutput
  createNetworkAcl(input: AwsEC2CreateNetworkAclInput!, config: AwsConfig): AwsEC2CreateNetworkAclOutput
  createNetworkAclEntry(input: AwsEC2CreateNetworkAclEntryInput!, config: AwsConfig): JSON
  createNetworkInterface(input: AwsEC2CreateNetworkInterfaceInput!, config: AwsConfig): AwsEC2CreateNetworkInterfaceOutput
  createNetworkInterfacePermission(input: AwsEC2CreateNetworkInterfacePermissionInput!, config: AwsConfig): AwsEC2CreateNetworkInterfacePermissionOutput
  createPlacementGroup(input: AwsEC2CreatePlacementGroupInput!, config: AwsConfig): JSON
  createReservedInstancesListing(input: AwsEC2CreateReservedInstancesListingInput!, config: AwsConfig): AwsEC2CreateReservedInstancesListingOutput
  createRoute(input: AwsEC2CreateRouteInput!, config: AwsConfig): AwsEC2CreateRouteOutput
  createRouteTable(input: AwsEC2CreateRouteTableInput!, config: AwsConfig): AwsEC2CreateRouteTableOutput
  createSecurityGroup(input: AwsEC2CreateSecurityGroupInput!, config: AwsConfig): AwsEC2CreateSecurityGroupOutput
  createSnapshot(input: AwsEC2CreateSnapshotInput!, config: AwsConfig): JSON
  createSpotDatafeedSubscription(input: AwsEC2CreateSpotDatafeedSubscriptionInput!, config: AwsConfig): AwsEC2CreateSpotDatafeedSubscriptionOutput
  createSubnet(input: AwsEC2CreateSubnetInput!, config: AwsConfig): AwsEC2CreateSubnetOutput
  createTags(input: AwsEC2CreateTagsInput!, config: AwsConfig): JSON
  createVolume(input: AwsEC2CreateVolumeInput!, config: AwsConfig): JSON
  createVpc(input: AwsEC2CreateVpcInput!, config: AwsConfig): AwsEC2CreateVpcOutput
  createVpcEndpoint(input: AwsEC2CreateVpcEndpointInput!, config: AwsConfig): AwsEC2CreateVpcEndpointOutput
  createVpcEndpointConnectionNotification(input: AwsEC2CreateVpcEndpointConnectionNotificationInput!, config: AwsConfig): AwsEC2CreateVpcEndpointConnectionNotificationOutput
  createVpcEndpointServiceConfiguration(input: AwsEC2CreateVpcEndpointServiceConfigurationInput!, config: AwsConfig): AwsEC2CreateVpcEndpointServiceConfigurationOutput
  createVpcPeeringConnection(input: AwsEC2CreateVpcPeeringConnectionInput, config: AwsConfig): AwsEC2CreateVpcPeeringConnectionOutput
  createVpnConnection(input: AwsEC2CreateVpnConnectionInput!, config: AwsConfig): AwsEC2CreateVpnConnectionOutput
  createVpnConnectionRoute(input: AwsEC2CreateVpnConnectionRouteInput!, config: AwsConfig): JSON
  createVpnGateway(input: AwsEC2CreateVpnGatewayInput!, config: AwsConfig): AwsEC2CreateVpnGatewayOutput
  deleteCustomerGateway(input: AwsEC2DeleteCustomerGatewayInput!, config: AwsConfig): JSON
  deleteDhcpOptions(input: AwsEC2DeleteDhcpOptionsInput!, config: AwsConfig): JSON
  deleteEgressOnlyInternetGateway(input: AwsEC2DeleteEgressOnlyInternetGatewayInput!, config: AwsConfig): AwsEC2DeleteEgressOnlyInternetGatewayOutput
  deleteFlowLogs(input: AwsEC2DeleteFlowLogsInput!, config: AwsConfig): AwsEC2DeleteFlowLogsOutput
  deleteFpgaImage(input: AwsEC2DeleteFpgaImageInput!, config: AwsConfig): AwsEC2DeleteFpgaImageOutput
  deleteInternetGateway(input: AwsEC2DeleteInternetGatewayInput!, config: AwsConfig): JSON
  deleteKeyPair(input: AwsEC2DeleteKeyPairInput!, config: AwsConfig): JSON
  deleteLaunchTemplate(input: AwsEC2DeleteLaunchTemplateInput, config: AwsConfig): AwsEC2DeleteLaunchTemplateOutput
  deleteLaunchTemplateVersions(input: AwsEC2DeleteLaunchTemplateVersionsInput!, config: AwsConfig): AwsEC2DeleteLaunchTemplateVersionsOutput
  deleteNatGateway(input: AwsEC2DeleteNatGatewayInput!, config: AwsConfig): AwsEC2DeleteNatGatewayOutput
  deleteNetworkAcl(input: AwsEC2DeleteNetworkAclInput!, config: AwsConfig): JSON
  deleteNetworkAclEntry(input: AwsEC2DeleteNetworkAclEntryInput!, config: AwsConfig): JSON
  deleteNetworkInterface(input: AwsEC2DeleteNetworkInterfaceInput!, config: AwsConfig): JSON
  deleteNetworkInterfacePermission(input: AwsEC2DeleteNetworkInterfacePermissionInput!, config: AwsConfig): AwsEC2DeleteNetworkInterfacePermissionOutput
  deletePlacementGroup(input: AwsEC2DeletePlacementGroupInput!, config: AwsConfig): JSON
  deleteRoute(input: AwsEC2DeleteRouteInput!, config: AwsConfig): JSON
  deleteRouteTable(input: AwsEC2DeleteRouteTableInput!, config: AwsConfig): JSON
  deleteSecurityGroup(input: AwsEC2DeleteSecurityGroupInput, config: AwsConfig): JSON
  deleteSnapshot(input: AwsEC2DeleteSnapshotInput!, config: AwsConfig): JSON
  deleteSpotDatafeedSubscription(input: AwsEC2DeleteSpotDatafeedSubscriptionInput, config: AwsConfig): JSON
  deleteSubnet(input: AwsEC2DeleteSubnetInput!, config: AwsConfig): JSON
  deleteTags(input: AwsEC2DeleteTagsInput!, config: AwsConfig): JSON
  deleteVolume(input: AwsEC2DeleteVolumeInput!, config: AwsConfig): JSON
  deleteVpc(input: AwsEC2DeleteVpcInput!, config: AwsConfig): JSON
  deleteVpcEndpointConnectionNotifications(input: AwsEC2DeleteVpcEndpointConnectionNotificationsInput!, config: AwsConfig): AwsEC2DeleteVpcEndpointConnectionNotificationsOutput
  deleteVpcEndpointServiceConfigurations(input: AwsEC2DeleteVpcEndpointServiceConfigurationsInput!, config: AwsConfig): AwsEC2DeleteVpcEndpointServiceConfigurationsOutput
  deleteVpcEndpoints(input: AwsEC2DeleteVpcEndpointsInput!, config: AwsConfig): AwsEC2DeleteVpcEndpointsOutput
  deleteVpcPeeringConnection(input: AwsEC2DeleteVpcPeeringConnectionInput!, config: AwsConfig): AwsEC2DeleteVpcPeeringConnectionOutput
  deleteVpnConnection(input: AwsEC2DeleteVpnConnectionInput!, config: AwsConfig): JSON
  deleteVpnConnectionRoute(input: AwsEC2DeleteVpnConnectionRouteInput!, config: AwsConfig): JSON
  deleteVpnGateway(input: AwsEC2DeleteVpnGatewayInput!, config: AwsConfig): JSON
  deregisterImage(input: AwsEC2DeregisterImageInput!, config: AwsConfig): JSON
  describeAccountAttributes(input: AwsEC2DescribeAccountAttributesInput, config: AwsConfig): AwsEC2DescribeAccountAttributesOutput
  describeAddresses(input: AwsEC2DescribeAddressesInput, config: AwsConfig): AwsEC2DescribeAddressesOutput
  describeAvailabilityZones(input: AwsEC2DescribeAvailabilityZonesInput, config: AwsConfig): AwsEC2DescribeAvailabilityZonesOutput
  describeBundleTasks(input: AwsEC2DescribeBundleTasksInput, config: AwsConfig): AwsEC2DescribeBundleTasksOutput
  describeClassicLinkInstances(input: AwsEC2DescribeClassicLinkInstancesInput, config: AwsConfig): AwsEC2DescribeClassicLinkInstancesOutput
  describeConversionTasks(input: AwsEC2DescribeConversionTasksInput, config: AwsConfig): AwsEC2DescribeConversionTasksOutput
  describeCustomerGateways(input: AwsEC2DescribeCustomerGatewaysInput, config: AwsConfig): AwsEC2DescribeCustomerGatewaysOutput
  describeDhcpOptions(input: AwsEC2DescribeDhcpOptionsInput, config: AwsConfig): AwsEC2DescribeDhcpOptionsOutput
  describeEgressOnlyInternetGateways(input: AwsEC2DescribeEgressOnlyInternetGatewaysInput, config: AwsConfig): AwsEC2DescribeEgressOnlyInternetGatewaysOutput
  describeElasticGpus(input: AwsEC2DescribeElasticGpusInput, config: AwsConfig): AwsEC2DescribeElasticGpusOutput
  describeExportTasks(input: AwsEC2DescribeExportTasksInput, config: AwsConfig): AwsEC2DescribeExportTasksOutput
  describeFlowLogs(input: AwsEC2DescribeFlowLogsInput, config: AwsConfig): AwsEC2DescribeFlowLogsOutput
  describeFpgaImageAttribute(input: AwsEC2DescribeFpgaImageAttributeInput!, config: AwsConfig): AwsEC2DescribeFpgaImageAttributeOutput
  describeFpgaImages(input: AwsEC2DescribeFpgaImagesInput, config: AwsConfig): AwsEC2DescribeFpgaImagesOutput
  describeHostReservationOfferings(input: AwsEC2DescribeHostReservationOfferingsInput, config: AwsConfig): AwsEC2DescribeHostReservationOfferingsOutput
  describeHostReservations(input: AwsEC2DescribeHostReservationsInput, config: AwsConfig): AwsEC2DescribeHostReservationsOutput
  describeHosts(input: AwsEC2DescribeHostsInput, config: AwsConfig): AwsEC2DescribeHostsOutput
  describeIamInstanceProfileAssociations(input: AwsEC2DescribeIamInstanceProfileAssociationsInput, config: AwsConfig): AwsEC2DescribeIamInstanceProfileAssociationsOutput
  describeIdFormat(input: AwsEC2DescribeIdFormatInput, config: AwsConfig): AwsEC2DescribeIdFormatOutput
  describeIdentityIdFormat(input: AwsEC2DescribeIdentityIdFormatInput!, config: AwsConfig): AwsEC2DescribeIdentityIdFormatOutput
  describeImageAttribute(input: AwsEC2DescribeImageAttributeInput!, config: AwsConfig): AwsEC2DescribeImageAttributeOutput
  describeImages(input: AwsEC2DescribeImagesInput, config: AwsConfig): AwsEC2DescribeImagesOutput
  describeImportImageTasks(input: AwsEC2DescribeImportImageTasksInput, config: AwsConfig): AwsEC2DescribeImportImageTasksOutput
  describeImportSnapshotTasks(input: AwsEC2DescribeImportSnapshotTasksInput, config: AwsConfig): AwsEC2DescribeImportSnapshotTasksOutput
  describeInstanceAttribute(input: AwsEC2DescribeInstanceAttributeInput!, config: AwsConfig): AwsEC2DescribeInstanceAttributeOutput
  describeInstanceCreditSpecifications(input: AwsEC2DescribeInstanceCreditSpecificationsInput, config: AwsConfig): AwsEC2DescribeInstanceCreditSpecificationsOutput
  describeInstanceStatus(input: AwsEC2DescribeInstanceStatusInput, config: AwsConfig): AwsEC2DescribeInstanceStatusOutput
  describeInstances(input: AwsEC2DescribeInstancesInput, config: AwsConfig): AwsEC2DescribeInstancesOutput
  describeInternetGateways(input: AwsEC2DescribeInternetGatewaysInput, config: AwsConfig): AwsEC2DescribeInternetGatewaysOutput
  describeKeyPairs(input: AwsEC2DescribeKeyPairsInput, config: AwsConfig): AwsEC2DescribeKeyPairsOutput
  describeLaunchTemplateVersions(input: AwsEC2DescribeLaunchTemplateVersionsInput, config: AwsConfig): AwsEC2DescribeLaunchTemplateVersionsOutput
  describeLaunchTemplates(input: AwsEC2DescribeLaunchTemplatesInput, config: AwsConfig): AwsEC2DescribeLaunchTemplatesOutput
  describeMovingAddresses(input: AwsEC2DescribeMovingAddressesInput, config: AwsConfig): AwsEC2DescribeMovingAddressesOutput
  describeNatGateways(input: AwsEC2DescribeNatGatewaysInput, config: AwsConfig): AwsEC2DescribeNatGatewaysOutput
  describeNetworkAcls(input: AwsEC2DescribeNetworkAclsInput, config: AwsConfig): AwsEC2DescribeNetworkAclsOutput
  describeNetworkInterfaceAttribute(input: AwsEC2DescribeNetworkInterfaceAttributeInput!, config: AwsConfig): AwsEC2DescribeNetworkInterfaceAttributeOutput
  describeNetworkInterfacePermissions(input: AwsEC2DescribeNetworkInterfacePermissionsInput, config: AwsConfig): AwsEC2DescribeNetworkInterfacePermissionsOutput
  describeNetworkInterfaces(input: AwsEC2DescribeNetworkInterfacesInput, config: AwsConfig): AwsEC2DescribeNetworkInterfacesOutput
  describePlacementGroups(input: AwsEC2DescribePlacementGroupsInput, config: AwsConfig): AwsEC2DescribePlacementGroupsOutput
  describePrefixLists(input: AwsEC2DescribePrefixListsInput, config: AwsConfig): AwsEC2DescribePrefixListsOutput
  describeRegions(input: AwsEC2DescribeRegionsInput, config: AwsConfig): AwsEC2DescribeRegionsOutput
  describeReservedInstances(input: AwsEC2DescribeReservedInstancesInput, config: AwsConfig): AwsEC2DescribeReservedInstancesOutput
  describeReservedInstancesListings(input: AwsEC2DescribeReservedInstancesListingsInput, config: AwsConfig): AwsEC2DescribeReservedInstancesListingsOutput
  describeReservedInstancesModifications(input: AwsEC2DescribeReservedInstancesModificationsInput, config: AwsConfig): AwsEC2DescribeReservedInstancesModificationsOutput
  describeReservedInstancesOfferings(input: AwsEC2DescribeReservedInstancesOfferingsInput, config: AwsConfig): AwsEC2DescribeReservedInstancesOfferingsOutput
  describeRouteTables(input: AwsEC2DescribeRouteTablesInput, config: AwsConfig): AwsEC2DescribeRouteTablesOutput
  describeScheduledInstanceAvailability(input: AwsEC2DescribeScheduledInstanceAvailabilityInput!, config: AwsConfig): AwsEC2DescribeScheduledInstanceAvailabilityOutput
  describeScheduledInstances(input: AwsEC2DescribeScheduledInstancesInput, config: AwsConfig): AwsEC2DescribeScheduledInstancesOutput
  describeSecurityGroupReferences(input: AwsEC2DescribeSecurityGroupReferencesInput!, config: AwsConfig): AwsEC2DescribeSecurityGroupReferencesOutput
  describeSecurityGroups(input: AwsEC2DescribeSecurityGroupsInput, config: AwsConfig): AwsEC2DescribeSecurityGroupsOutput
  describeSnapshotAttribute(input: AwsEC2DescribeSnapshotAttributeInput!, config: AwsConfig): AwsEC2DescribeSnapshotAttributeOutput
  describeSnapshots(input: AwsEC2DescribeSnapshotsInput, config: AwsConfig): AwsEC2DescribeSnapshotsOutput
  describeSpotDatafeedSubscription(input: AwsEC2DescribeSpotDatafeedSubscriptionInput, config: AwsConfig): AwsEC2DescribeSpotDatafeedSubscriptionOutput
  describeSpotFleetInstances(input: AwsEC2DescribeSpotFleetInstancesInput!, config: AwsConfig): AwsEC2DescribeSpotFleetInstancesOutput
  describeSpotFleetRequestHistory(input: AwsEC2DescribeSpotFleetRequestHistoryInput!, config: AwsConfig): AwsEC2DescribeSpotFleetRequestHistoryOutput
  describeSpotFleetRequests(input: AwsEC2DescribeSpotFleetRequestsInput, config: AwsConfig): AwsEC2DescribeSpotFleetRequestsOutput
  describeSpotInstanceRequests(input: AwsEC2DescribeSpotInstanceRequestsInput, config: AwsConfig): AwsEC2DescribeSpotInstanceRequestsOutput
  describeSpotPriceHistory(input: AwsEC2DescribeSpotPriceHistoryInput, config: AwsConfig): AwsEC2DescribeSpotPriceHistoryOutput
  describeStaleSecurityGroups(input: AwsEC2DescribeStaleSecurityGroupsInput!, config: AwsConfig): AwsEC2DescribeStaleSecurityGroupsOutput
  describeSubnets(input: AwsEC2DescribeSubnetsInput, config: AwsConfig): AwsEC2DescribeSubnetsOutput
  describeTags(input: AwsEC2DescribeTagsInput, config: AwsConfig): AwsEC2DescribeTagsOutput
  describeVolumeAttribute(input: AwsEC2DescribeVolumeAttributeInput!, config: AwsConfig): AwsEC2DescribeVolumeAttributeOutput
  describeVolumeStatus(input: AwsEC2DescribeVolumeStatusInput, config: AwsConfig): AwsEC2DescribeVolumeStatusOutput
  describeVolumes(input: AwsEC2DescribeVolumesInput, config: AwsConfig): AwsEC2DescribeVolumesOutput
  describeVolumesModifications(input: AwsEC2DescribeVolumesModificationsInput, config: AwsConfig): AwsEC2DescribeVolumesModificationsOutput
  describeVpcAttribute(input: AwsEC2DescribeVpcAttributeInput!, config: AwsConfig): AwsEC2DescribeVpcAttributeOutput
  describeVpcClassicLink(input: AwsEC2DescribeVpcClassicLinkInput, config: AwsConfig): AwsEC2DescribeVpcClassicLinkOutput
  describeVpcClassicLinkDnsSupport(input: AwsEC2DescribeVpcClassicLinkDnsSupportInput, config: AwsConfig): AwsEC2DescribeVpcClassicLinkDnsSupportOutput
  describeVpcEndpointConnectionNotifications(input: AwsEC2DescribeVpcEndpointConnectionNotificationsInput, config: AwsConfig): AwsEC2DescribeVpcEndpointConnectionNotificationsOutput
  describeVpcEndpointConnections(input: AwsEC2DescribeVpcEndpointConnectionsInput, config: AwsConfig): AwsEC2DescribeVpcEndpointConnectionsOutput
  describeVpcEndpointServiceConfigurations(input: AwsEC2DescribeVpcEndpointServiceConfigurationsInput, config: AwsConfig): AwsEC2DescribeVpcEndpointServiceConfigurationsOutput
  describeVpcEndpointServicePermissions(input: AwsEC2DescribeVpcEndpointServicePermissionsInput!, config: AwsConfig): AwsEC2DescribeVpcEndpointServicePermissionsOutput
  describeVpcEndpointServices(input: AwsEC2DescribeVpcEndpointServicesInput, config: AwsConfig): AwsEC2DescribeVpcEndpointServicesOutput
  describeVpcEndpoints(input: AwsEC2DescribeVpcEndpointsInput, config: AwsConfig): AwsEC2DescribeVpcEndpointsOutput
  describeVpcPeeringConnections(input: AwsEC2DescribeVpcPeeringConnectionsInput, config: AwsConfig): AwsEC2DescribeVpcPeeringConnectionsOutput
  describeVpcs(input: AwsEC2DescribeVpcsInput, config: AwsConfig): AwsEC2DescribeVpcsOutput
  describeVpnConnections(input: AwsEC2DescribeVpnConnectionsInput, config: AwsConfig): AwsEC2DescribeVpnConnectionsOutput
  describeVpnGateways(input: AwsEC2DescribeVpnGatewaysInput, config: AwsConfig): AwsEC2DescribeVpnGatewaysOutput
  detachClassicLinkVpc(input: AwsEC2DetachClassicLinkVpcInput!, config: AwsConfig): AwsEC2DetachClassicLinkVpcOutput
  detachInternetGateway(input: AwsEC2DetachInternetGatewayInput!, config: AwsConfig): JSON
  detachNetworkInterface(input: AwsEC2DetachNetworkInterfaceInput!, config: AwsConfig): JSON
  detachVolume(input: AwsEC2DetachVolumeInput!, config: AwsConfig): JSON
  detachVpnGateway(input: AwsEC2DetachVpnGatewayInput!, config: AwsConfig): JSON
  disableVgwRoutePropagation(input: AwsEC2DisableVgwRoutePropagationInput!, config: AwsConfig): JSON
  disableVpcClassicLink(input: AwsEC2DisableVpcClassicLinkInput!, config: AwsConfig): AwsEC2DisableVpcClassicLinkOutput
  disableVpcClassicLinkDnsSupport(input: AwsEC2DisableVpcClassicLinkDnsSupportInput, config: AwsConfig): AwsEC2DisableVpcClassicLinkDnsSupportOutput
  disassociateAddress(input: AwsEC2DisassociateAddressInput, config: AwsConfig): JSON
  disassociateIamInstanceProfile(input: AwsEC2DisassociateIamInstanceProfileInput!, config: AwsConfig): AwsEC2DisassociateIamInstanceProfileOutput
  disassociateRouteTable(input: AwsEC2DisassociateRouteTableInput!, config: AwsConfig): JSON
  disassociateSubnetCidrBlock(input: AwsEC2DisassociateSubnetCidrBlockInput!, config: AwsConfig): AwsEC2DisassociateSubnetCidrBlockOutput
  disassociateVpcCidrBlock(input: AwsEC2DisassociateVpcCidrBlockInput!, config: AwsConfig): AwsEC2DisassociateVpcCidrBlockOutput
  enableVgwRoutePropagation(input: AwsEC2EnableVgwRoutePropagationInput!, config: AwsConfig): JSON
  enableVolumeIO(input: AwsEC2EnableVolumeIOInput!, config: AwsConfig): JSON
  enableVpcClassicLink(input: AwsEC2EnableVpcClassicLinkInput!, config: AwsConfig): AwsEC2EnableVpcClassicLinkOutput
  enableVpcClassicLinkDnsSupport(input: AwsEC2EnableVpcClassicLinkDnsSupportInput, config: AwsConfig): AwsEC2EnableVpcClassicLinkDnsSupportOutput
  getConsoleOutput(input: AwsEC2GetConsoleOutputInput!, config: AwsConfig): AwsEC2GetConsoleOutputOutput
  getConsoleScreenshot(input: AwsEC2GetConsoleScreenshotInput!, config: AwsConfig): AwsEC2GetConsoleScreenshotOutput
  getHostReservationPurchasePreview(input: AwsEC2GetHostReservationPurchasePreviewInput!, config: AwsConfig): AwsEC2GetHostReservationPurchasePreviewOutput
  getLaunchTemplateData(input: AwsEC2GetLaunchTemplateDataInput!, config: AwsConfig): AwsEC2GetLaunchTemplateDataOutput
  getPasswordData(input: AwsEC2GetPasswordDataInput!, config: AwsConfig): AwsEC2GetPasswordDataOutput
  getReservedInstancesExchangeQuote(input: AwsEC2GetReservedInstancesExchangeQuoteInput!, config: AwsConfig): AwsEC2GetReservedInstancesExchangeQuoteOutput
  importImage(input: AwsEC2ImportImageInput, config: AwsConfig): AwsEC2ImportImageOutput
  importInstance(input: AwsEC2ImportInstanceInput!, config: AwsConfig): AwsEC2ImportInstanceOutput
  importKeyPair(input: AwsEC2ImportKeyPairInput!, config: AwsConfig): AwsEC2ImportKeyPairOutput
  importSnapshot(input: AwsEC2ImportSnapshotInput, config: AwsConfig): AwsEC2ImportSnapshotOutput
  importVolume(input: AwsEC2ImportVolumeInput!, config: AwsConfig): AwsEC2ImportVolumeOutput
  modifyFpgaImageAttribute(input: AwsEC2ModifyFpgaImageAttributeInput!, config: AwsConfig): AwsEC2ModifyFpgaImageAttributeOutput
  modifyHosts(input: AwsEC2ModifyHostsInput!, config: AwsConfig): AwsEC2ModifyHostsOutput
  modifyIdFormat(input: AwsEC2ModifyIdFormatInput!, config: AwsConfig): JSON
  modifyIdentityIdFormat(input: AwsEC2ModifyIdentityIdFormatInput!, config: AwsConfig): JSON
  modifyImageAttribute(input: AwsEC2ModifyImageAttributeInput!, config: AwsConfig): JSON
  modifyInstanceAttribute(input: AwsEC2ModifyInstanceAttributeInput!, config: AwsConfig): JSON
  modifyInstanceCreditSpecification(input: AwsEC2ModifyInstanceCreditSpecificationInput!, config: AwsConfig): AwsEC2ModifyInstanceCreditSpecificationOutput
  modifyInstancePlacement(input: AwsEC2ModifyInstancePlacementInput!, config: AwsConfig): AwsEC2ModifyInstancePlacementOutput
  modifyLaunchTemplate(input: AwsEC2ModifyLaunchTemplateInput, config: AwsConfig): AwsEC2ModifyLaunchTemplateOutput
  modifyNetworkInterfaceAttribute(input: AwsEC2ModifyNetworkInterfaceAttributeInput!, config: AwsConfig): JSON
  modifyReservedInstances(input: AwsEC2ModifyReservedInstancesInput!, config: AwsConfig): AwsEC2ModifyReservedInstancesOutput
  modifySnapshotAttribute(input: AwsEC2ModifySnapshotAttributeInput!, config: AwsConfig): JSON
  modifySpotFleetRequest(input: AwsEC2ModifySpotFleetRequestInput!, config: AwsConfig): AwsEC2ModifySpotFleetRequestOutput
  modifySubnetAttribute(input: AwsEC2ModifySubnetAttributeInput!, config: AwsConfig): JSON
  modifyVolume(input: AwsEC2ModifyVolumeInput!, config: AwsConfig): AwsEC2ModifyVolumeOutput
  modifyVolumeAttribute(input: AwsEC2ModifyVolumeAttributeInput!, config: AwsConfig): JSON
  modifyVpcAttribute(input: AwsEC2ModifyVpcAttributeInput!, config: AwsConfig): JSON
  modifyVpcEndpoint(input: AwsEC2ModifyVpcEndpointInput!, config: AwsConfig): AwsEC2ModifyVpcEndpointOutput
  modifyVpcEndpointConnectionNotification(input: AwsEC2ModifyVpcEndpointConnectionNotificationInput!, config: AwsConfig): AwsEC2ModifyVpcEndpointConnectionNotificationOutput
  modifyVpcEndpointServiceConfiguration(input: AwsEC2ModifyVpcEndpointServiceConfigurationInput!, config: AwsConfig): AwsEC2ModifyVpcEndpointServiceConfigurationOutput
  modifyVpcEndpointServicePermissions(input: AwsEC2ModifyVpcEndpointServicePermissionsInput!, config: AwsConfig): AwsEC2ModifyVpcEndpointServicePermissionsOutput
  modifyVpcPeeringConnectionOptions(input: AwsEC2ModifyVpcPeeringConnectionOptionsInput!, config: AwsConfig): AwsEC2ModifyVpcPeeringConnectionOptionsOutput
  modifyVpcTenancy(input: AwsEC2ModifyVpcTenancyInput!, config: AwsConfig): AwsEC2ModifyVpcTenancyOutput
  monitorInstances(input: AwsEC2MonitorInstancesInput!, config: AwsConfig): AwsEC2MonitorInstancesOutput
  moveAddressToVpc(input: AwsEC2MoveAddressToVpcInput!, config: AwsConfig): AwsEC2MoveAddressToVpcOutput
  purchaseHostReservation(input: AwsEC2PurchaseHostReservationInput!, config: AwsConfig): AwsEC2PurchaseHostReservationOutput
  purchaseReservedInstancesOffering(input: AwsEC2PurchaseReservedInstancesOfferingInput!, config: AwsConfig): AwsEC2PurchaseReservedInstancesOfferingOutput
  purchaseScheduledInstances(input: AwsEC2PurchaseScheduledInstancesInput!, config: AwsConfig): AwsEC2PurchaseScheduledInstancesOutput
  rebootInstances(input: AwsEC2RebootInstancesInput!, config: AwsConfig): JSON
  registerImage(input: AwsEC2RegisterImageInput!, config: AwsConfig): AwsEC2RegisterImageOutput
  rejectVpcEndpointConnections(input: AwsEC2RejectVpcEndpointConnectionsInput!, config: AwsConfig): AwsEC2RejectVpcEndpointConnectionsOutput
  rejectVpcPeeringConnection(input: AwsEC2RejectVpcPeeringConnectionInput!, config: AwsConfig): AwsEC2RejectVpcPeeringConnectionOutput
  releaseAddress(input: AwsEC2ReleaseAddressInput, config: AwsConfig): JSON
  releaseHosts(input: AwsEC2ReleaseHostsInput!, config: AwsConfig): AwsEC2ReleaseHostsOutput
  replaceIamInstanceProfileAssociation(input: AwsEC2ReplaceIamInstanceProfileAssociationInput!, config: AwsConfig): AwsEC2ReplaceIamInstanceProfileAssociationOutput
  replaceNetworkAclAssociation(input: AwsEC2ReplaceNetworkAclAssociationInput!, config: AwsConfig): AwsEC2ReplaceNetworkAclAssociationOutput
  replaceNetworkAclEntry(input: AwsEC2ReplaceNetworkAclEntryInput!, config: AwsConfig): JSON
  replaceRoute(input: AwsEC2ReplaceRouteInput!, config: AwsConfig): JSON
  replaceRouteTableAssociation(input: AwsEC2ReplaceRouteTableAssociationInput!, config: AwsConfig): AwsEC2ReplaceRouteTableAssociationOutput
  reportInstanceStatus(input: AwsEC2ReportInstanceStatusInput!, config: AwsConfig): JSON
  requestSpotFleet(input: AwsEC2RequestSpotFleetInput!, config: AwsConfig): AwsEC2RequestSpotFleetOutput
  requestSpotInstances(input: AwsEC2RequestSpotInstancesInput, config: AwsConfig): AwsEC2RequestSpotInstancesOutput
  resetFpgaImageAttribute(input: AwsEC2ResetFpgaImageAttributeInput!, config: AwsConfig): AwsEC2ResetFpgaImageAttributeOutput
  resetImageAttribute(input: AwsEC2ResetImageAttributeInput!, config: AwsConfig): JSON
  resetInstanceAttribute(input: AwsEC2ResetInstanceAttributeInput!, config: AwsConfig): JSON
  resetNetworkInterfaceAttribute(input: AwsEC2ResetNetworkInterfaceAttributeInput!, config: AwsConfig): JSON
  resetSnapshotAttribute(input: AwsEC2ResetSnapshotAttributeInput!, config: AwsConfig): JSON
  restoreAddressToClassic(input: AwsEC2RestoreAddressToClassicInput!, config: AwsConfig): AwsEC2RestoreAddressToClassicOutput
  revokeSecurityGroupEgress(input: AwsEC2RevokeSecurityGroupEgressInput!, config: AwsConfig): JSON
  revokeSecurityGroupIngress(input: AwsEC2RevokeSecurityGroupIngressInput, config: AwsConfig): JSON
  runInstances(input: AwsEC2RunInstancesInput!, config: AwsConfig): JSON
  runScheduledInstances(input: AwsEC2RunScheduledInstancesInput!, config: AwsConfig): AwsEC2RunScheduledInstancesOutput
  startInstances(input: AwsEC2StartInstancesInput!, config: AwsConfig): AwsEC2StartInstancesOutput
  stopInstances(input: AwsEC2StopInstancesInput!, config: AwsConfig): AwsEC2StopInstancesOutput
  terminateInstances(input: AwsEC2TerminateInstancesInput!, config: AwsConfig): AwsEC2TerminateInstancesOutput
  unassignIpv6Addresses(input: AwsEC2UnassignIpv6AddressesInput!, config: AwsConfig): AwsEC2UnassignIpv6AddressesOutput
  unassignPrivateIpAddresses(input: AwsEC2UnassignPrivateIpAddressesInput!, config: AwsConfig): JSON
  unmonitorInstances(input: AwsEC2UnmonitorInstancesInput!, config: AwsConfig): AwsEC2UnmonitorInstancesOutput
  updateSecurityGroupRuleDescriptionsEgress(input: AwsEC2UpdateSecurityGroupRuleDescriptionsEgressInput!, config: AwsConfig): AwsEC2UpdateSecurityGroupRuleDescriptionsEgressOutput
  updateSecurityGroupRuleDescriptionsIngress(input: AwsEC2UpdateSecurityGroupRuleDescriptionsIngressInput!, config: AwsConfig): AwsEC2UpdateSecurityGroupRuleDescriptionsIngressOutput
}

input AwsEC2AcceptReservedInstancesExchangeQuoteInput {
  DryRun: Boolean
  ReservedInstanceIds: [String]!
  TargetConfigurations: [AwsEC2S5Input]
}

type AwsEC2AcceptReservedInstancesExchangeQuoteOutput {
  ExchangeId: String
}

input AwsEC2AcceptVpcEndpointConnectionsInput {
  DryRun: Boolean
  ServiceId: String!
  VpcEndpointIds: [String]!
}

type AwsEC2AcceptVpcEndpointConnectionsOutput {
  Unsuccessful: [AwsEC2Sd]
}

input AwsEC2AcceptVpcPeeringConnectionInput {
  DryRun: Boolean
  VpcPeeringConnectionId: String
}

type AwsEC2AcceptVpcPeeringConnectionOutput {
  VpcPeeringConnection: AwsEC2Sh
}

input AwsEC2AllocateAddressInput {
  Domain: String
  Address: String
  DryRun: Boolean
}

type AwsEC2AllocateAddressOutput {
  PublicIp: String
  AllocationId: String
  Domain: String
}

input AwsEC2AllocateHostsInput {
  AutoPlacement: String
  AvailabilityZone: String!
  ClientToken: String
  InstanceType: String!
  Quantity: Int!
}

type AwsEC2AllocateHostsOutput {
  HostIds: [String]
}

input AwsEC2AssignIpv6AddressesInput {
  Ipv6AddressCount: Int
  Ipv6Addresses: [String]
  NetworkInterfaceId: String!
}

type AwsEC2AssignIpv6AddressesOutput {
  AssignedIpv6Addresses: [String]
  NetworkInterfaceId: String
}

input AwsEC2AssignPrivateIpAddressesInput {
  AllowReassignment: Boolean
  NetworkInterfaceId: String!
  PrivateIpAddresses: [String]
  SecondaryPrivateIpAddressCount: Int
}

input AwsEC2AssociateAddressInput {
  AllocationId: String
  InstanceId: String
  PublicIp: String
  AllowReassociation: Boolean
  DryRun: Boolean
  NetworkInterfaceId: String
  PrivateIpAddress: String
}

type AwsEC2AssociateAddressOutput {
  AssociationId: String
}

input AwsEC2AssociateDhcpOptionsInput {
  DhcpOptionsId: String!
  VpcId: String!
  DryRun: Boolean
}

input AwsEC2AssociateIamInstanceProfileInput {
  IamInstanceProfile: AwsEC2S19Input!
  InstanceId: String!
}

type AwsEC2AssociateIamInstanceProfileOutput {
  IamInstanceProfileAssociation: AwsEC2S1b
}

input AwsEC2AssociateRouteTableInput {
  DryRun: Boolean
  RouteTableId: String!
  SubnetId: String!
}

type AwsEC2AssociateRouteTableOutput {
  AssociationId: String
}

input AwsEC2AssociateSubnetCidrBlockInput {
  Ipv6CidrBlock: String!
  SubnetId: String!
}

type AwsEC2AssociateSubnetCidrBlockOutput {
  Ipv6CidrBlockAssociation: AwsEC2S1i
  SubnetId: String
}

input AwsEC2AssociateVpcCidrBlockInput {
  AmazonProvidedIpv6CidrBlock: Boolean
  CidrBlock: String
  VpcId: String!
}

type AwsEC2AssociateVpcCidrBlockOutput {
  Ipv6CidrBlockAssociation: AwsEC2S1n
  CidrBlockAssociation: AwsEC2S1q
  VpcId: String
}

input AwsEC2AttachClassicLinkVpcInput {
  DryRun: Boolean
  Groups: [String]!
  InstanceId: String!
  VpcId: String!
}

type AwsEC2AttachClassicLinkVpcOutput {
  Return: Boolean
}

input AwsEC2AttachInternetGatewayInput {
  DryRun: Boolean
  InternetGatewayId: String!
  VpcId: String!
}

input AwsEC2AttachNetworkInterfaceInput {
  DeviceIndex: Int!
  DryRun: Boolean
  InstanceId: String!
  NetworkInterfaceId: String!
}

type AwsEC2AttachNetworkInterfaceOutput {
  AttachmentId: String
}

input AwsEC2AttachVolumeInput {
  Device: String!
  InstanceId: String!
  VolumeId: String!
  DryRun: Boolean
}

input AwsEC2AttachVpnGatewayInput {
  VpcId: String!
  VpnGatewayId: String!
  DryRun: Boolean
}

type AwsEC2AttachVpnGatewayOutput {
  VpcAttachment: AwsEC2S22
}

input AwsEC2AuthorizeSecurityGroupEgressInput {
  DryRun: Boolean
  GroupId: String!
  IpPermissions: [AwsEC2S25Input]
  CidrIp: String
  FromPort: Int
  IpProtocol: String
  ToPort: Int
  SourceSecurityGroupName: String
  SourceSecurityGroupOwnerId: String
}

input AwsEC2AuthorizeSecurityGroupIngressInput {
  CidrIp: String
  FromPort: Int
  GroupId: String
  GroupName: String
  IpPermissions: [AwsEC2S25Input]
  IpProtocol: String
  SourceSecurityGroupName: String
  SourceSecurityGroupOwnerId: String
  ToPort: Int
  DryRun: Boolean
}

input AwsEC2BundleInstanceInput {
  InstanceId: String!
  Storage: AwsEC2S2hInput!
  DryRun: Boolean
}

type AwsEC2BundleInstanceOutput {
  BundleTask: AwsEC2S2l
}

input AwsEC2CancelBundleTaskInput {
  BundleId: String!
  DryRun: Boolean
}

type AwsEC2CancelBundleTaskOutput {
  BundleTask: AwsEC2S2l
}

input AwsEC2CancelConversionTaskInput {
  ConversionTaskId: String!
  DryRun: Boolean
  ReasonMessage: String
}

input AwsEC2CancelExportTaskInput {
  ExportTaskId: String!
}

input AwsEC2CancelImportTaskInput {
  CancelReason: String
  DryRun: Boolean
  ImportTaskId: String
}

type AwsEC2CancelImportTaskOutput {
  ImportTaskId: String
  PreviousState: String
  State: String
}

input AwsEC2CancelReservedInstancesListingInput {
  ReservedInstancesListingId: String!
}

type AwsEC2CancelReservedInstancesListingOutput {
  ReservedInstancesListings: [AwsEC2S2w]
}

input AwsEC2CancelSpotFleetRequestsInput {
  DryRun: Boolean
  SpotFleetRequestIds: [String]!
  TerminateInstances: Boolean!
}

type AwsEC2CancelSpotFleetRequestsOutput {
  SuccessfulFleetRequests: [AwsEC2CancelSpotFleetRequestsOutputSuccessfulFleetRequests]
  UnsuccessfulFleetRequests: [AwsEC2CancelSpotFleetRequestsOutputUnsuccessfulFleetRequests]
}

type AwsEC2CancelSpotFleetRequestsOutputSuccessfulFleetRequests {
  CurrentSpotFleetRequestState: String!
  PreviousSpotFleetRequestState: String!
  SpotFleetRequestId: String!
}

type AwsEC2CancelSpotFleetRequestsOutputUnsuccessfulFleetRequests {
  Error: AwsEC2CancelSpotFleetRequestsOutputUnsuccessfulFleetRequestsError!
  SpotFleetRequestId: String!
}

type AwsEC2CancelSpotFleetRequestsOutputUnsuccessfulFleetRequestsError {
  Code: String!
  Message: String!
}

input AwsEC2CancelSpotInstanceRequestsInput {
  DryRun: Boolean
  SpotInstanceRequestIds: [String]!
}

type AwsEC2CancelSpotInstanceRequestsOutput {
  CancelledSpotInstanceRequests: [AwsEC2CancelSpotInstanceRequestsOutputCancelledSpotInstanceRequests]
}

type AwsEC2CancelSpotInstanceRequestsOutputCancelledSpotInstanceRequests {
  SpotInstanceRequestId: String
  State: String
}

input AwsEC2ConfirmProductInstanceInput {
  InstanceId: String!
  ProductCode: String!
  DryRun: Boolean
}

type AwsEC2ConfirmProductInstanceOutput {
  OwnerId: String
  Return: Boolean
}

input AwsEC2CopyFpgaImageInput {
  DryRun: Boolean
  SourceFpgaImageId: String!
  Description: String
  Name: String
  SourceRegion: String!
  ClientToken: String
}

type AwsEC2CopyFpgaImageOutput {
  FpgaImageId: String
}

input AwsEC2CopyImageInput {
  ClientToken: String
  Description: String
  Encrypted: Boolean
  KmsKeyId: String
  Name: String!
  SourceImageId: String!
  SourceRegion: String!
  DryRun: Boolean
}

type AwsEC2CopyImageOutput {
  ImageId: String
}

input AwsEC2CopySnapshotInput {
  Description: String
  DestinationRegion: String
  Encrypted: Boolean
  KmsKeyId: String
  PresignedUrl: String
  SourceRegion: String!
  SourceSnapshotId: String!
  DryRun: Boolean
}

type AwsEC2CopySnapshotOutput {
  SnapshotId: String
}

input AwsEC2CreateCustomerGatewayInput {
  BgpAsn: Int!
  PublicIp: String!
  Type: String!
  DryRun: Boolean
}

type AwsEC2CreateCustomerGatewayOutput {
  CustomerGateway: AwsEC2S3x
}

input AwsEC2CreateDefaultSubnetInput {
  AvailabilityZone: String!
  DryRun: Boolean
}

type AwsEC2CreateDefaultSubnetOutput {
  Subnet: AwsEC2S40
}

input AwsEC2CreateDefaultVpcInput {
  DryRun: Boolean
}

type AwsEC2CreateDefaultVpcOutput {
  Vpc: AwsEC2S45
}

input AwsEC2CreateDhcpOptionsDhcpConfigurationsInput {
  Key: String
  Values: [String]
}

input AwsEC2CreateDhcpOptionsInput {
  DhcpConfigurations: [AwsEC2CreateDhcpOptionsDhcpConfigurationsInput]!
  DryRun: Boolean
}

type AwsEC2CreateDhcpOptionsOutput {
  DhcpOptions: AwsEC2S4e
}

input AwsEC2CreateEgressOnlyInternetGatewayInput {
  ClientToken: String
  DryRun: Boolean
  VpcId: String!
}

type AwsEC2CreateEgressOnlyInternetGatewayOutput {
  ClientToken: String
  EgressOnlyInternetGateway: AwsEC2S4l
}

input AwsEC2CreateFlowLogsInput {
  ClientToken: String
  DeliverLogsPermissionArn: String!
  LogGroupName: String!
  ResourceIds: [String]!
  ResourceType: String!
  TrafficType: String!
}

type AwsEC2CreateFlowLogsOutput {
  ClientToken: String
  FlowLogIds: [String]
  Unsuccessful: [AwsEC2Sd]
}

input AwsEC2CreateFpgaImageInput {
  DryRun: Boolean
  InputStorageLocation: AwsEC2S4uInput!
  LogsStorageLocation: AwsEC2S4uInput
  Description: String
  Name: String
  ClientToken: String
}

type AwsEC2CreateFpgaImageOutput {
  FpgaImageId: String
  FpgaImageGlobalId: String
}

input AwsEC2CreateImageInput {
  BlockDeviceMappings: [AwsEC2S4yInput]
  Description: String
  DryRun: Boolean
  InstanceId: String!
  Name: String!
  NoReboot: Boolean
}

type AwsEC2CreateImageOutput {
  ImageId: String
}

input AwsEC2CreateInstanceExportTaskExportToS3TaskInput {
  ContainerFormat: String
  DiskImageFormat: String
  S3Bucket: String
  S3Prefix: String
}

input AwsEC2CreateInstanceExportTaskInput {
  Description: String
  ExportToS3Task: AwsEC2CreateInstanceExportTaskExportToS3TaskInput
  InstanceId: String!
  TargetEnvironment: String
}

type AwsEC2CreateInstanceExportTaskOutput {
  ExportTask: AwsEC2S58
}

input AwsEC2CreateInternetGatewayInput {
  DryRun: Boolean
}

type AwsEC2CreateInternetGatewayOutput {
  InternetGateway: AwsEC2S5e
}

input AwsEC2CreateKeyPairInput {
  KeyName: String!
  DryRun: Boolean
}

type AwsEC2CreateKeyPairOutput {
  KeyFingerprint: String
  KeyMaterial: String
  KeyName: String
}

input AwsEC2CreateLaunchTemplateInput {
  DryRun: Boolean
  ClientToken: String
  LaunchTemplateName: String!
  VersionDescription: String
  LaunchTemplateData: AwsEC2S5kInput!
}

type AwsEC2CreateLaunchTemplateOutput {
  LaunchTemplate: AwsEC2S6d
}

input AwsEC2CreateLaunchTemplateVersionInput {
  DryRun: Boolean
  ClientToken: String
  LaunchTemplateId: String
  LaunchTemplateName: String
  SourceVersion: String
  VersionDescription: String
  LaunchTemplateData: AwsEC2S5kInput!
}

type AwsEC2CreateLaunchTemplateVersionOutput {
  LaunchTemplateVersion: AwsEC2S6g
}

input AwsEC2CreateNatGatewayInput {
  AllocationId: String!
  ClientToken: String
  SubnetId: String!
}

type AwsEC2CreateNatGatewayOutput {
  ClientToken: String
  NatGateway: AwsEC2S71
}

input AwsEC2CreateNetworkAclEntryInput {
  CidrBlock: String
  DryRun: Boolean
  Egress: Boolean!
  IcmpTypeCode: AwsEC2S7dInput
  Ipv6CidrBlock: String
  NetworkAclId: String!
  PortRange: AwsEC2S7eInput
  Protocol: String!
  RuleAction: String!
  RuleNumber: Int!
}

input AwsEC2CreateNetworkAclInput {
  DryRun: Boolean
  VpcId: String!
}

type AwsEC2CreateNetworkAclOutput {
  NetworkAcl: AwsEC2S78
}

input AwsEC2CreateNetworkInterfaceInput {
  Description: String
  DryRun: Boolean
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2S6oInput]
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2S5uInput]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String!
}

type AwsEC2CreateNetworkInterfaceOutput {
  NetworkInterface: AwsEC2S7j
}

input AwsEC2CreateNetworkInterfacePermissionInput {
  NetworkInterfaceId: String!
  AwsAccountId: String
  AwsService: String
  Permission: String!
  DryRun: Boolean
}

type AwsEC2CreateNetworkInterfacePermissionOutput {
  InterfacePermission: AwsEC2S7x
}

input AwsEC2CreatePlacementGroupInput {
  DryRun: Boolean
  GroupName: String!
  Strategy: String!
}

input AwsEC2CreateReservedInstancesListingInput {
  ClientToken: String!
  InstanceCount: Int!
  PriceSchedules: [AwsEC2CreateReservedInstancesListingPriceSchedulesInput]!
  ReservedInstancesId: String!
}

type AwsEC2CreateReservedInstancesListingOutput {
  ReservedInstancesListings: [AwsEC2S2w]
}

input AwsEC2CreateReservedInstancesListingPriceSchedulesInput {
  CurrencyCode: String
  Price: JSON
  Term: JSON
}

input AwsEC2CreateRouteInput {
  DestinationCidrBlock: String
  DestinationIpv6CidrBlock: String
  DryRun: Boolean
  EgressOnlyInternetGatewayId: String
  GatewayId: String
  InstanceId: String
  NatGatewayId: String
  NetworkInterfaceId: String
  RouteTableId: String!
  VpcPeeringConnectionId: String
}

type AwsEC2CreateRouteOutput {
  Return: Boolean
}

input AwsEC2CreateRouteTableInput {
  DryRun: Boolean
  VpcId: String!
}

type AwsEC2CreateRouteTableOutput {
  RouteTable: AwsEC2S8a
}

input AwsEC2CreateSecurityGroupInput {
  Description: String!
  GroupName: String!
  VpcId: String
  DryRun: Boolean
}

type AwsEC2CreateSecurityGroupOutput {
  GroupId: String
}

input AwsEC2CreateSnapshotInput {
  Description: String
  VolumeId: String!
  DryRun: Boolean
}

input AwsEC2CreateSpotDatafeedSubscriptionInput {
  Bucket: String!
  DryRun: Boolean
  Prefix: String
}

type AwsEC2CreateSpotDatafeedSubscriptionOutput {
  SpotDatafeedSubscription: AwsEC2S8q
}

input AwsEC2CreateSubnetInput {
  AvailabilityZone: String
  CidrBlock: String!
  Ipv6CidrBlock: String
  VpcId: String!
  DryRun: Boolean
}

type AwsEC2CreateSubnetOutput {
  Subnet: AwsEC2S40
}

input AwsEC2CreateTagsInput {
  DryRun: Boolean
  Resources: [String]!
  Tags: [AwsEC2SrInput]!
}

input AwsEC2CreateVolumeInput {
  AvailabilityZone: String!
  Encrypted: Boolean
  Iops: Int
  KmsKeyId: String
  Size: Int
  SnapshotId: String
  VolumeType: String
  DryRun: Boolean
  TagSpecifications: [AwsEC2S8yInput]
}

input AwsEC2CreateVpcEndpointConnectionNotificationInput {
  DryRun: Boolean
  ServiceId: String
  VpcEndpointId: String
  ConnectionNotificationArn: String!
  ConnectionEvents: [String]!
  ClientToken: String
}

type AwsEC2CreateVpcEndpointConnectionNotificationOutput {
  ConnectionNotification: AwsEC2S9g
  ClientToken: String
}

input AwsEC2CreateVpcEndpointInput {
  DryRun: Boolean
  VpcEndpointType: String
  VpcId: String!
  ServiceName: String!
  PolicyDocument: String
  RouteTableIds: [String]
  SubnetIds: [String]
  SecurityGroupIds: [String]
  ClientToken: String
  PrivateDnsEnabled: Boolean
}

type AwsEC2CreateVpcEndpointOutput {
  VpcEndpoint: AwsEC2S98
  ClientToken: String
}

input AwsEC2CreateVpcEndpointServiceConfigurationInput {
  DryRun: Boolean
  AcceptanceRequired: Boolean
  NetworkLoadBalancerArns: [String]!
  ClientToken: String
}

type AwsEC2CreateVpcEndpointServiceConfigurationOutput {
  ServiceConfiguration: AwsEC2S9l
  ClientToken: String
}

input AwsEC2CreateVpcInput {
  CidrBlock: String!
  AmazonProvidedIpv6CidrBlock: Boolean
  DryRun: Boolean
  InstanceTenancy: String
}

type AwsEC2CreateVpcOutput {
  Vpc: AwsEC2S45
}

input AwsEC2CreateVpcPeeringConnectionInput {
  DryRun: Boolean
  PeerOwnerId: String
  PeerVpcId: String
  VpcId: String
}

type AwsEC2CreateVpcPeeringConnectionOutput {
  VpcPeeringConnection: AwsEC2Sh
}

input AwsEC2CreateVpnConnectionInput {
  CustomerGatewayId: String!
  Type: String!
  VpnGatewayId: String!
  DryRun: Boolean
  Options: AwsEC2CreateVpnConnectionOptionsInput
}

input AwsEC2CreateVpnConnectionOptionsInput {
  StaticRoutesOnly: Boolean
  TunnelOptions: [AwsEC2CreateVpnConnectionOptionsTunnelOptionsInput]
}

input AwsEC2CreateVpnConnectionOptionsTunnelOptionsInput {
  TunnelInsideCidr: String
  PreSharedKey: String
}

type AwsEC2CreateVpnConnectionOutput {
  VpnConnection: AwsEC2S9x
}

input AwsEC2CreateVpnConnectionRouteInput {
  DestinationCidrBlock: String!
  VpnConnectionId: String!
}

input AwsEC2CreateVpnGatewayInput {
  AvailabilityZone: String
  Type: String!
  AmazonSideAsn: JSON
  DryRun: Boolean
}

type AwsEC2CreateVpnGatewayOutput {
  VpnGateway: AwsEC2Sa9
}

input AwsEC2DeleteCustomerGatewayInput {
  CustomerGatewayId: String!
  DryRun: Boolean
}

input AwsEC2DeleteDhcpOptionsInput {
  DhcpOptionsId: String!
  DryRun: Boolean
}

input AwsEC2DeleteEgressOnlyInternetGatewayInput {
  DryRun: Boolean
  EgressOnlyInternetGatewayId: String!
}

type AwsEC2DeleteEgressOnlyInternetGatewayOutput {
  ReturnCode: Boolean
}

input AwsEC2DeleteFlowLogsInput {
  FlowLogIds: [String]!
}

type AwsEC2DeleteFlowLogsOutput {
  Unsuccessful: [AwsEC2Sd]
}

input AwsEC2DeleteFpgaImageInput {
  DryRun: Boolean
  FpgaImageId: String!
}

type AwsEC2DeleteFpgaImageOutput {
  Return: Boolean
}

input AwsEC2DeleteInternetGatewayInput {
  DryRun: Boolean
  InternetGatewayId: String!
}

input AwsEC2DeleteKeyPairInput {
  KeyName: String!
  DryRun: Boolean
}

input AwsEC2DeleteLaunchTemplateInput {
  DryRun: Boolean
  LaunchTemplateId: String
  LaunchTemplateName: String
}

type AwsEC2DeleteLaunchTemplateOutput {
  LaunchTemplate: AwsEC2S6d
}

input AwsEC2DeleteLaunchTemplateVersionsInput {
  DryRun: Boolean
  LaunchTemplateId: String
  LaunchTemplateName: String
  Versions: [String]!
}

type AwsEC2DeleteLaunchTemplateVersionsOutput {
  SuccessfullyDeletedLaunchTemplateVersions: [AwsEC2DeleteLaunchTemplateVersionsOutputSuccessfullyDeletedLaunchTemplateVersions]
  UnsuccessfullyDeletedLaunchTemplateVersions: [AwsEC2DeleteLaunchTemplateVersionsOutputUnsuccessfullyDeletedLaunchTemplateVersions]
}

type AwsEC2DeleteLaunchTemplateVersionsOutputSuccessfullyDeletedLaunchTemplateVersions {
  LaunchTemplateId: String
  LaunchTemplateName: String
  VersionNumber: JSON
}

type AwsEC2DeleteLaunchTemplateVersionsOutputUnsuccessfullyDeletedLaunchTemplateVersions {
  LaunchTemplateId: String
  LaunchTemplateName: String
  VersionNumber: JSON
  ResponseError: AwsEC2DeleteLaunchTemplateVersionsOutputUnsuccessfullyDeletedLaunchTemplateVersionsResponseError
}

type AwsEC2DeleteLaunchTemplateVersionsOutputUnsuccessfullyDeletedLaunchTemplateVersionsResponseError {
  Code: String
  Message: String
}

input AwsEC2DeleteNatGatewayInput {
  NatGatewayId: String!
}

type AwsEC2DeleteNatGatewayOutput {
  NatGatewayId: String
}

input AwsEC2DeleteNetworkAclEntryInput {
  DryRun: Boolean
  Egress: Boolean!
  NetworkAclId: String!
  RuleNumber: Int!
}

input AwsEC2DeleteNetworkAclInput {
  DryRun: Boolean
  NetworkAclId: String!
}

input AwsEC2DeleteNetworkInterfaceInput {
  DryRun: Boolean
  NetworkInterfaceId: String!
}

input AwsEC2DeleteNetworkInterfacePermissionInput {
  NetworkInterfacePermissionId: String!
  Force: Boolean
  DryRun: Boolean
}

type AwsEC2DeleteNetworkInterfacePermissionOutput {
  Return: Boolean
}

input AwsEC2DeletePlacementGroupInput {
  DryRun: Boolean
  GroupName: String!
}

input AwsEC2DeleteRouteInput {
  DestinationCidrBlock: String
  DestinationIpv6CidrBlock: String
  DryRun: Boolean
  RouteTableId: String!
}

input AwsEC2DeleteRouteTableInput {
  DryRun: Boolean
  RouteTableId: String!
}

input AwsEC2DeleteSecurityGroupInput {
  GroupId: String
  GroupName: String
  DryRun: Boolean
}

input AwsEC2DeleteSnapshotInput {
  SnapshotId: String!
  DryRun: Boolean
}

input AwsEC2DeleteSpotDatafeedSubscriptionInput {
  DryRun: Boolean
}

input AwsEC2DeleteSubnetInput {
  SubnetId: String!
  DryRun: Boolean
}

input AwsEC2DeleteTagsInput {
  DryRun: Boolean
  Resources: [String]!
  Tags: [AwsEC2SrInput]
}

input AwsEC2DeleteVolumeInput {
  VolumeId: String!
  DryRun: Boolean
}

input AwsEC2DeleteVpcEndpointConnectionNotificationsInput {
  DryRun: Boolean
  ConnectionNotificationIds: [String]!
}

type AwsEC2DeleteVpcEndpointConnectionNotificationsOutput {
  Unsuccessful: [AwsEC2Sd]
}

input AwsEC2DeleteVpcEndpointServiceConfigurationsInput {
  DryRun: Boolean
  ServiceIds: [String]!
}

type AwsEC2DeleteVpcEndpointServiceConfigurationsOutput {
  Unsuccessful: [AwsEC2Sd]
}

input AwsEC2DeleteVpcEndpointsInput {
  DryRun: Boolean
  VpcEndpointIds: [String]!
}

type AwsEC2DeleteVpcEndpointsOutput {
  Unsuccessful: [AwsEC2Sd]
}

input AwsEC2DeleteVpcInput {
  VpcId: String!
  DryRun: Boolean
}

input AwsEC2DeleteVpcPeeringConnectionInput {
  DryRun: Boolean
  VpcPeeringConnectionId: String!
}

type AwsEC2DeleteVpcPeeringConnectionOutput {
  Return: Boolean
}

input AwsEC2DeleteVpnConnectionInput {
  VpnConnectionId: String!
  DryRun: Boolean
}

input AwsEC2DeleteVpnConnectionRouteInput {
  DestinationCidrBlock: String!
  VpnConnectionId: String!
}

input AwsEC2DeleteVpnGatewayInput {
  VpnGatewayId: String!
  DryRun: Boolean
}

input AwsEC2DeregisterImageInput {
  ImageId: String!
  DryRun: Boolean
}

input AwsEC2DescribeAccountAttributesInput {
  AttributeNames: [String]
  DryRun: Boolean
}

type AwsEC2DescribeAccountAttributesOutput {
  AccountAttributes: [AwsEC2DescribeAccountAttributesOutputAccountAttributes]
}

type AwsEC2DescribeAccountAttributesOutputAccountAttributes {
  AttributeName: String
  AttributeValues: [AwsEC2DescribeAccountAttributesOutputAccountAttributesAttributeValues]
}

type AwsEC2DescribeAccountAttributesOutputAccountAttributesAttributeValues {
  AttributeValue: String
}

input AwsEC2DescribeAddressesInput {
  Filters: [AwsEC2SbyInput]
  PublicIps: [String]
  AllocationIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeAddressesOutput {
  Addresses: [AwsEC2DescribeAddressesOutputAddresses]
}

type AwsEC2DescribeAddressesOutputAddresses {
  InstanceId: String
  PublicIp: String
  AllocationId: String
  AssociationId: String
  Domain: String
  NetworkInterfaceId: String
  NetworkInterfaceOwnerId: String
  PrivateIpAddress: String
}

input AwsEC2DescribeAvailabilityZonesInput {
  Filters: [AwsEC2SbyInput]
  ZoneNames: [String]
  DryRun: Boolean
}

type AwsEC2DescribeAvailabilityZonesOutput {
  AvailabilityZones: [AwsEC2DescribeAvailabilityZonesOutputAvailabilityZones]
}

type AwsEC2DescribeAvailabilityZonesOutputAvailabilityZones {
  State: String
  Messages: [AwsEC2DescribeAvailabilityZonesOutputAvailabilityZonesMessages]
  RegionName: String
  ZoneName: String
}

type AwsEC2DescribeAvailabilityZonesOutputAvailabilityZonesMessages {
  Message: String
}

input AwsEC2DescribeBundleTasksInput {
  BundleIds: [String]
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
}

type AwsEC2DescribeBundleTasksOutput {
  BundleTasks: [AwsEC2S2l]
}

input AwsEC2DescribeClassicLinkInstancesInput {
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
  InstanceIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeClassicLinkInstancesOutput {
  Instances: [AwsEC2DescribeClassicLinkInstancesOutputInstances]
  NextToken: String
}

type AwsEC2DescribeClassicLinkInstancesOutputInstances {
  Groups: [AwsEC2S7m]
  InstanceId: String
  Tags: [AwsEC2Sr]
  VpcId: String
}

input AwsEC2DescribeConversionTasksInput {
  ConversionTaskIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeConversionTasksOutput {
  ConversionTasks: [AwsEC2Scq]
}

input AwsEC2DescribeCustomerGatewaysInput {
  CustomerGatewayIds: [String]
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
}

type AwsEC2DescribeCustomerGatewaysOutput {
  CustomerGateways: [AwsEC2S3x]
}

input AwsEC2DescribeDhcpOptionsInput {
  DhcpOptionsIds: [String]
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
}

type AwsEC2DescribeDhcpOptionsOutput {
  DhcpOptions: [AwsEC2S4e]
}

input AwsEC2DescribeEgressOnlyInternetGatewaysInput {
  DryRun: Boolean
  EgressOnlyInternetGatewayIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeEgressOnlyInternetGatewaysOutput {
  EgressOnlyInternetGateways: [AwsEC2S4l]
  NextToken: String
}

input AwsEC2DescribeElasticGpusInput {
  ElasticGpuIds: [String]
  DryRun: Boolean
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeElasticGpusOutput {
  ElasticGpuSet: [AwsEC2DescribeElasticGpusOutputElasticGpuSet]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeElasticGpusOutputElasticGpuSet {
  ElasticGpuId: String
  AvailabilityZone: String
  ElasticGpuType: String
  ElasticGpuHealth: AwsEC2DescribeElasticGpusOutputElasticGpuSetElasticGpuHealth
  ElasticGpuState: String
  InstanceId: String
}

type AwsEC2DescribeElasticGpusOutputElasticGpuSetElasticGpuHealth {
  Status: String
}

input AwsEC2DescribeExportTasksInput {
  ExportTaskIds: [String]
}

type AwsEC2DescribeExportTasksOutput {
  ExportTasks: [AwsEC2S58]
}

input AwsEC2DescribeFlowLogsInput {
  Filter: [AwsEC2SbyInput]
  FlowLogIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeFlowLogsOutput {
  FlowLogs: [AwsEC2DescribeFlowLogsOutputFlowLogs]
  NextToken: String
}

type AwsEC2DescribeFlowLogsOutputFlowLogs {
  CreationTime: Date
  DeliverLogsErrorMessage: String
  DeliverLogsPermissionArn: String
  DeliverLogsStatus: String
  FlowLogId: String
  FlowLogStatus: String
  LogGroupName: String
  ResourceId: String
  TrafficType: String
}

input AwsEC2DescribeFpgaImageAttributeInput {
  DryRun: Boolean
  FpgaImageId: String!
  Attribute: String!
}

type AwsEC2DescribeFpgaImageAttributeOutput {
  FpgaImageAttribute: AwsEC2Sdu
}

input AwsEC2DescribeFpgaImagesInput {
  DryRun: Boolean
  FpgaImageIds: [String]
  Owners: [String]
  Filters: [AwsEC2SbyInput]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeFpgaImagesOutput {
  FpgaImages: [AwsEC2DescribeFpgaImagesOutputFpgaImages]
  NextToken: String
}

type AwsEC2DescribeFpgaImagesOutputFpgaImages {
  FpgaImageId: String
  FpgaImageGlobalId: String
  Name: String
  Description: String
  ShellVersion: String
  PciId: AwsEC2DescribeFpgaImagesOutputFpgaImagesPciId
  State: AwsEC2DescribeFpgaImagesOutputFpgaImagesState
  CreateTime: Date
  UpdateTime: Date
  OwnerId: String
  OwnerAlias: String
  ProductCodes: [AwsEC2Sdy]
  Tags: [AwsEC2Sr]
  Public: Boolean
}

type AwsEC2DescribeFpgaImagesOutputFpgaImagesPciId {
  DeviceId: String
  VendorId: String
  SubsystemId: String
  SubsystemVendorId: String
}

type AwsEC2DescribeFpgaImagesOutputFpgaImagesState {
  Code: String
  Message: String
}

input AwsEC2DescribeHostReservationOfferingsInput {
  Filter: [AwsEC2SbyInput]
  MaxDuration: Int
  MaxResults: Int
  MinDuration: Int
  NextToken: String
  OfferingId: String
}

type AwsEC2DescribeHostReservationOfferingsOutput {
  NextToken: String
  OfferingSet: [AwsEC2DescribeHostReservationOfferingsOutputOfferingSet]
}

type AwsEC2DescribeHostReservationOfferingsOutputOfferingSet {
  CurrencyCode: String
  Duration: Int
  HourlyPrice: String
  InstanceFamily: String
  OfferingId: String
  PaymentOption: String
  UpfrontPrice: String
}

input AwsEC2DescribeHostReservationsInput {
  Filter: [AwsEC2SbyInput]
  HostReservationIdSet: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeHostReservationsOutput {
  HostReservationSet: [AwsEC2DescribeHostReservationsOutputHostReservationSet]
  NextToken: String
}

type AwsEC2DescribeHostReservationsOutputHostReservationSet {
  Count: Int
  CurrencyCode: String
  Duration: Int
  End: Date
  HostIdSet: [String]
  HostReservationId: String
  HourlyPrice: String
  InstanceFamily: String
  OfferingId: String
  PaymentOption: String
  Start: Date
  State: String
  UpfrontPrice: String
}

input AwsEC2DescribeHostsInput {
  Filter: [AwsEC2SbyInput]
  HostIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeHostsOutput {
  Hosts: [AwsEC2DescribeHostsOutputHosts]
  NextToken: String
}

type AwsEC2DescribeHostsOutputHosts {
  AutoPlacement: String
  AvailabilityZone: String
  AvailableCapacity: AwsEC2DescribeHostsOutputHostsAvailableCapacity
  ClientToken: String
  HostId: String
  HostProperties: AwsEC2DescribeHostsOutputHostsHostProperties
  HostReservationId: String
  Instances: [AwsEC2DescribeHostsOutputHostsInstances]
  State: String
}

type AwsEC2DescribeHostsOutputHostsAvailableCapacity {
  AvailableInstanceCapacity: [AwsEC2DescribeHostsOutputHostsAvailableCapacityAvailableInstanceCapacity]
  AvailableVCpus: Int
}

type AwsEC2DescribeHostsOutputHostsAvailableCapacityAvailableInstanceCapacity {
  AvailableCapacity: Int
  InstanceType: String
  TotalCapacity: Int
}

type AwsEC2DescribeHostsOutputHostsHostProperties {
  Cores: Int
  InstanceType: String
  Sockets: Int
  TotalVCpus: Int
}

type AwsEC2DescribeHostsOutputHostsInstances {
  InstanceId: String
  InstanceType: String
}

input AwsEC2DescribeIamInstanceProfileAssociationsInput {
  AssociationIds: [String]
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeIamInstanceProfileAssociationsOutput {
  IamInstanceProfileAssociations: [AwsEC2S1b]
  NextToken: String
}

input AwsEC2DescribeIdentityIdFormatInput {
  PrincipalArn: String!
  Resource: String
}

type AwsEC2DescribeIdentityIdFormatOutput {
  Statuses: [AwsEC2Sf6]
}

input AwsEC2DescribeIdFormatInput {
  Resource: String
}

type AwsEC2DescribeIdFormatOutput {
  Statuses: [AwsEC2Sf6]
}

input AwsEC2DescribeImageAttributeInput {
  Attribute: String!
  ImageId: String!
  DryRun: Boolean
}

type AwsEC2DescribeImageAttributeOutput {
  BlockDeviceMappings: [AwsEC2S4y]
  ImageId: String
  LaunchPermissions: [AwsEC2Sfe]
  ProductCodes: [AwsEC2Sdy]
  Description: AwsEC2S4i
  KernelId: AwsEC2S4i
  RamdiskId: AwsEC2S4i
  SriovNetSupport: AwsEC2S4i
}

input AwsEC2DescribeImagesInput {
  ExecutableUsers: [String]
  Filters: [AwsEC2SbyInput]
  ImageIds: [String]
  Owners: [String]
  DryRun: Boolean
}

type AwsEC2DescribeImagesOutput {
  Images: [AwsEC2DescribeImagesOutputImages]
}

type AwsEC2DescribeImagesOutputImages {
  Architecture: String
  CreationDate: String
  ImageId: String
  ImageLocation: String
  ImageType: String
  Public: Boolean
  KernelId: String
  OwnerId: String
  Platform: String
  ProductCodes: [AwsEC2Sdy]
  RamdiskId: String
  State: String
  BlockDeviceMappings: [AwsEC2S4y]
  Description: String
  EnaSupport: Boolean
  Hypervisor: String
  ImageOwnerAlias: String
  Name: String
  RootDeviceName: String
  RootDeviceType: String
  SriovNetSupport: String
  StateReason: AwsEC2Sfr
  Tags: [AwsEC2Sr]
  VirtualizationType: String
}

input AwsEC2DescribeImportImageTasksInput {
  DryRun: Boolean
  Filters: [AwsEC2SbyInput]
  ImportTaskIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeImportImageTasksOutput {
  ImportImageTasks: [AwsEC2DescribeImportImageTasksOutputImportImageTasks]
  NextToken: String
}

type AwsEC2DescribeImportImageTasksOutputImportImageTasks {
  Architecture: String
  Description: String
  Hypervisor: String
  ImageId: String
  ImportTaskId: String
  LicenseType: String
  Platform: String
  Progress: String
  SnapshotDetails: [AwsEC2Sfy]
  Status: String
  StatusMessage: String
}

input AwsEC2DescribeImportSnapshotTasksInput {
  DryRun: Boolean
  Filters: [AwsEC2SbyInput]
  ImportTaskIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeImportSnapshotTasksOutput {
  ImportSnapshotTasks: [AwsEC2DescribeImportSnapshotTasksOutputImportSnapshotTasks]
  NextToken: String
}

type AwsEC2DescribeImportSnapshotTasksOutputImportSnapshotTasks {
  Description: String
  ImportTaskId: String
  SnapshotTaskDetail: AwsEC2Sg5
}

input AwsEC2DescribeInstanceAttributeInput {
  Attribute: String!
  DryRun: Boolean
  InstanceId: String!
}

type AwsEC2DescribeInstanceAttributeOutput {
  Groups: [AwsEC2S7m]
  BlockDeviceMappings: [AwsEC2Sg9]
  DisableApiTermination: AwsEC2Sgc
  EnaSupport: AwsEC2Sgc
  EbsOptimized: AwsEC2Sgc
  InstanceId: String
  InstanceInitiatedShutdownBehavior: AwsEC2S4i
  InstanceType: AwsEC2S4i
  KernelId: AwsEC2S4i
  ProductCodes: [AwsEC2Sdy]
  RamdiskId: AwsEC2S4i
  RootDeviceName: AwsEC2S4i
  SourceDestCheck: AwsEC2Sgc
  SriovNetSupport: AwsEC2S4i
  UserData: AwsEC2S4i
}

input AwsEC2DescribeInstanceCreditSpecificationsInput {
  DryRun: Boolean
  Filters: [AwsEC2SbyInput]
  InstanceIds: [String]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeInstanceCreditSpecificationsOutput {
  InstanceCreditSpecifications: [AwsEC2DescribeInstanceCreditSpecificationsOutputInstanceCreditSpecifications]
  NextToken: String
}

type AwsEC2DescribeInstanceCreditSpecificationsOutputInstanceCreditSpecifications {
  InstanceId: String
  CpuCredits: String
}

input AwsEC2DescribeInstancesInput {
  Filters: [AwsEC2SbyInput]
  InstanceIds: [String]
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeInstancesOutput {
  Reservations: [AwsEC2Sgz]
  NextToken: String
}

input AwsEC2DescribeInstanceStatusInput {
  Filters: [AwsEC2SbyInput]
  InstanceIds: [String]
  MaxResults: Int
  NextToken: String
  DryRun: Boolean
  IncludeAllInstances: Boolean
}

type AwsEC2DescribeInstanceStatusOutput {
  InstanceStatuses: [AwsEC2DescribeInstanceStatusOutputInstanceStatuses]
  NextToken: String
}

type AwsEC2DescribeInstanceStatusOutputInstanceStatuses {
  AvailabilityZone: String
  Events: [AwsEC2DescribeInstanceStatusOutputInstanceStatusesEvents]
  InstanceId: String
  InstanceState: AwsEC2Sgo
  InstanceStatus: AwsEC2Sgq
  SystemStatus: AwsEC2Sgq
}

type AwsEC2DescribeInstanceStatusOutputInstanceStatusesEvents {
  Code: String
  Description: String
  NotAfter: Date
  NotBefore: Date
}

input AwsEC2DescribeInternetGatewaysInput {
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
  InternetGatewayIds: [String]
}

type AwsEC2DescribeInternetGatewaysOutput {
  InternetGateways: [AwsEC2S5e]
}

input AwsEC2DescribeKeyPairsInput {
  Filters: [AwsEC2SbyInput]
  KeyNames: [String]
  DryRun: Boolean
}

type AwsEC2DescribeKeyPairsOutput {
  KeyPairs: [AwsEC2DescribeKeyPairsOutputKeyPairs]
}

type AwsEC2DescribeKeyPairsOutputKeyPairs {
  KeyFingerprint: String
  KeyName: String
}

input AwsEC2DescribeLaunchTemplatesInput {
  DryRun: Boolean
  LaunchTemplateIds: [String]
  LaunchTemplateNames: [String]
  Filters: [AwsEC2SbyInput]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeLaunchTemplatesOutput {
  LaunchTemplates: [AwsEC2S6d]
  NextToken: String
}

input AwsEC2DescribeLaunchTemplateVersionsInput {
  DryRun: Boolean
  LaunchTemplateId: String
  LaunchTemplateName: String
  Versions: [String]
  MinVersion: String
  MaxVersion: String
  NextToken: String
  MaxResults: Int
  Filters: [AwsEC2SbyInput]
}

type AwsEC2DescribeLaunchTemplateVersionsOutput {
  LaunchTemplateVersions: [AwsEC2S6g]
  NextToken: String
}

input AwsEC2DescribeMovingAddressesInput {
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  PublicIps: [String]
}

type AwsEC2DescribeMovingAddressesOutput {
  MovingAddressStatuses: [AwsEC2DescribeMovingAddressesOutputMovingAddressStatuses]
  NextToken: String
}

type AwsEC2DescribeMovingAddressesOutputMovingAddressStatuses {
  MoveStatus: String
  PublicIp: String
}

input AwsEC2DescribeNatGatewaysInput {
  Filter: [AwsEC2SbyInput]
  MaxResults: Int
  NatGatewayIds: [String]
  NextToken: String
}

type AwsEC2DescribeNatGatewaysOutput {
  NatGateways: [AwsEC2S71]
  NextToken: String
}

input AwsEC2DescribeNetworkAclsInput {
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
  NetworkAclIds: [String]
}

type AwsEC2DescribeNetworkAclsOutput {
  NetworkAcls: [AwsEC2S78]
}

input AwsEC2DescribeNetworkInterfaceAttributeInput {
  Attribute: String
  DryRun: Boolean
  NetworkInterfaceId: String!
}

type AwsEC2DescribeNetworkInterfaceAttributeOutput {
  Attachment: AwsEC2S7l
  Description: AwsEC2S4i
  Groups: [AwsEC2S7m]
  NetworkInterfaceId: String
  SourceDestCheck: AwsEC2Sgc
}

input AwsEC2DescribeNetworkInterfacePermissionsInput {
  NetworkInterfacePermissionIds: [String]
  Filters: [AwsEC2SbyInput]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeNetworkInterfacePermissionsOutput {
  NetworkInterfacePermissions: [AwsEC2S7x]
  NextToken: String
}

input AwsEC2DescribeNetworkInterfacesInput {
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
  NetworkInterfaceIds: [String]
}

type AwsEC2DescribeNetworkInterfacesOutput {
  NetworkInterfaces: [AwsEC2S7j]
}

input AwsEC2DescribePlacementGroupsInput {
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
  GroupNames: [String]
}

type AwsEC2DescribePlacementGroupsOutput {
  PlacementGroups: [AwsEC2DescribePlacementGroupsOutputPlacementGroups]
}

type AwsEC2DescribePlacementGroupsOutputPlacementGroups {
  GroupName: String
  State: String
  Strategy: String
}

input AwsEC2DescribePrefixListsInput {
  DryRun: Boolean
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
  PrefixListIds: [String]
}

type AwsEC2DescribePrefixListsOutput {
  NextToken: String
  PrefixLists: [AwsEC2DescribePrefixListsOutputPrefixLists]
}

type AwsEC2DescribePrefixListsOutputPrefixLists {
  Cidrs: [String]
  PrefixListId: String
  PrefixListName: String
}

input AwsEC2DescribeRegionsInput {
  Filters: [AwsEC2SbyInput]
  RegionNames: [String]
  DryRun: Boolean
}

type AwsEC2DescribeRegionsOutput {
  Regions: [AwsEC2DescribeRegionsOutputRegions]
}

type AwsEC2DescribeRegionsOutputRegions {
  Endpoint: String
  RegionName: String
}

input AwsEC2DescribeReservedInstancesInput {
  Filters: [AwsEC2SbyInput]
  OfferingClass: String
  ReservedInstancesIds: [String]
  DryRun: Boolean
  OfferingType: String
}

input AwsEC2DescribeReservedInstancesListingsInput {
  Filters: [AwsEC2SbyInput]
  ReservedInstancesId: String
  ReservedInstancesListingId: String
}

type AwsEC2DescribeReservedInstancesListingsOutput {
  ReservedInstancesListings: [AwsEC2S2w]
}

input AwsEC2DescribeReservedInstancesModificationsInput {
  Filters: [AwsEC2SbyInput]
  ReservedInstancesModificationIds: [String]
  NextToken: String
}

type AwsEC2DescribeReservedInstancesModificationsOutput {
  NextToken: String
  ReservedInstancesModifications: [AwsEC2DescribeReservedInstancesModificationsOutputReservedInstancesModifications]
}

type AwsEC2DescribeReservedInstancesModificationsOutputReservedInstancesModifications {
  ClientToken: String
  CreateDate: Date
  EffectiveDate: Date
  ModificationResults: [AwsEC2DescribeReservedInstancesModificationsOutputReservedInstancesModificationsModificationResults]
  ReservedInstancesIds: [AwsEC2DescribeReservedInstancesModificationsOutputReservedInstancesModificationsReservedInstancesIds]
  ReservedInstancesModificationId: String
  Status: String
  StatusMessage: String
  UpdateDate: Date
}

type AwsEC2DescribeReservedInstancesModificationsOutputReservedInstancesModificationsModificationResults {
  ReservedInstancesId: String
  TargetConfiguration: AwsEC2Sjh
}

type AwsEC2DescribeReservedInstancesModificationsOutputReservedInstancesModificationsReservedInstancesIds {
  ReservedInstancesId: String
}

input AwsEC2DescribeReservedInstancesOfferingsInput {
  AvailabilityZone: String
  Filters: [AwsEC2SbyInput]
  IncludeMarketplace: Boolean
  InstanceType: String
  MaxDuration: JSON
  MaxInstanceCount: Int
  MinDuration: JSON
  OfferingClass: String
  ProductDescription: String
  ReservedInstancesOfferingIds: [String]
  DryRun: Boolean
  InstanceTenancy: String
  MaxResults: Int
  NextToken: String
  OfferingType: String
}

type AwsEC2DescribeReservedInstancesOfferingsOutput {
  ReservedInstancesOfferings: [AwsEC2DescribeReservedInstancesOfferingsOutputReservedInstancesOfferings]
  NextToken: String
}

type AwsEC2DescribeReservedInstancesOfferingsOutputReservedInstancesOfferings {
  AvailabilityZone: String
  Duration: JSON
  FixedPrice: Float
  InstanceType: String
  ProductDescription: String
  ReservedInstancesOfferingId: String
  UsagePrice: Float
  CurrencyCode: String
  InstanceTenancy: String
  Marketplace: Boolean
  OfferingClass: String
  OfferingType: String
  PricingDetails: [AwsEC2DescribeReservedInstancesOfferingsOutputReservedInstancesOfferingsPricingDetails]
  RecurringCharges: [AwsEC2Sj4]
  Scope: String
}

type AwsEC2DescribeReservedInstancesOfferingsOutputReservedInstancesOfferingsPricingDetails {
  Count: Int
  Price: JSON
}

type AwsEC2DescribeReservedInstancesOutput {
  ReservedInstances: [AwsEC2DescribeReservedInstancesOutputReservedInstances]
}

type AwsEC2DescribeReservedInstancesOutputReservedInstances {
  AvailabilityZone: String
  Duration: JSON
  End: Date
  FixedPrice: Float
  InstanceCount: Int
  InstanceType: String
  ProductDescription: String
  ReservedInstancesId: String
  Start: Date
  State: String
  UsagePrice: Float
  CurrencyCode: String
  InstanceTenancy: String
  OfferingClass: String
  OfferingType: String
  RecurringCharges: [AwsEC2Sj4]
  Scope: String
  Tags: [AwsEC2Sr]
}

input AwsEC2DescribeRouteTablesInput {
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
  RouteTableIds: [String]
}

type AwsEC2DescribeRouteTablesOutput {
  RouteTables: [AwsEC2S8a]
}

input AwsEC2DescribeScheduledInstanceAvailabilityFirstSlotStartTimeRangeInput {
  EarliestTime: Date!
  LatestTime: Date!
}

input AwsEC2DescribeScheduledInstanceAvailabilityInput {
  DryRun: Boolean
  Filters: [AwsEC2SbyInput]
  FirstSlotStartTimeRange: AwsEC2DescribeScheduledInstanceAvailabilityFirstSlotStartTimeRangeInput!
  MaxResults: Int
  MaxSlotDurationInHours: Int
  MinSlotDurationInHours: Int
  NextToken: String
  Recurrence: AwsEC2DescribeScheduledInstanceAvailabilityRecurrenceInput!
}

type AwsEC2DescribeScheduledInstanceAvailabilityOutput {
  NextToken: String
  ScheduledInstanceAvailabilitySet: [AwsEC2DescribeScheduledInstanceAvailabilityOutputScheduledInstanceAvailabilitySet]
}

type AwsEC2DescribeScheduledInstanceAvailabilityOutputScheduledInstanceAvailabilitySet {
  AvailabilityZone: String
  AvailableInstanceCount: Int
  FirstSlotStartTime: Date
  HourlyPrice: String
  InstanceType: String
  MaxTermDurationInDays: Int
  MinTermDurationInDays: Int
  NetworkPlatform: String
  Platform: String
  PurchaseToken: String
  Recurrence: AwsEC2Sk1
  SlotDurationInHours: Int
  TotalScheduledInstanceHours: Int
}

input AwsEC2DescribeScheduledInstanceAvailabilityRecurrenceInput {
  Frequency: String
  Interval: Int
  OccurrenceDays: [Int]
  OccurrenceRelativeToEnd: Boolean
  OccurrenceUnit: String
}

input AwsEC2DescribeScheduledInstancesInput {
  DryRun: Boolean
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
  ScheduledInstanceIds: [String]
  SlotStartTimeRange: AwsEC2DescribeScheduledInstancesSlotStartTimeRangeInput
}

type AwsEC2DescribeScheduledInstancesOutput {
  NextToken: String
  ScheduledInstanceSet: [AwsEC2Sk8]
}

input AwsEC2DescribeScheduledInstancesSlotStartTimeRangeInput {
  EarliestTime: Date
  LatestTime: Date
}

input AwsEC2DescribeSecurityGroupReferencesInput {
  DryRun: Boolean
  GroupId: [String]!
}

type AwsEC2DescribeSecurityGroupReferencesOutput {
  SecurityGroupReferenceSet: [AwsEC2DescribeSecurityGroupReferencesOutputSecurityGroupReferenceSet]
}

type AwsEC2DescribeSecurityGroupReferencesOutputSecurityGroupReferenceSet {
  GroupId: String!
  ReferencingVpcId: String!
  VpcPeeringConnectionId: String
}

input AwsEC2DescribeSecurityGroupsInput {
  Filters: [AwsEC2SbyInput]
  GroupIds: [String]
  GroupNames: [String]
  DryRun: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeSecurityGroupsOutput {
  SecurityGroups: [AwsEC2DescribeSecurityGroupsOutputSecurityGroups]
  NextToken: String
}

type AwsEC2DescribeSecurityGroupsOutputSecurityGroups {
  Description: String
  GroupName: String
  IpPermissions: [AwsEC2S25]
  OwnerId: String
  GroupId: String
  IpPermissionsEgress: [AwsEC2S25]
  Tags: [AwsEC2Sr]
  VpcId: String
}

input AwsEC2DescribeSnapshotAttributeInput {
  Attribute: String!
  SnapshotId: String!
  DryRun: Boolean
}

type AwsEC2DescribeSnapshotAttributeOutput {
  CreateVolumePermissions: [AwsEC2Skm]
  ProductCodes: [AwsEC2Sdy]
  SnapshotId: String
}

input AwsEC2DescribeSnapshotsInput {
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
  OwnerIds: [String]
  RestorableByUserIds: [String]
  SnapshotIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeSnapshotsOutput {
  Snapshots: [AwsEC2S8m]
  NextToken: String
}

input AwsEC2DescribeSpotDatafeedSubscriptionInput {
  DryRun: Boolean
}

type AwsEC2DescribeSpotDatafeedSubscriptionOutput {
  SpotDatafeedSubscription: AwsEC2S8q
}

input AwsEC2DescribeSpotFleetInstancesInput {
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  SpotFleetRequestId: String!
}

type AwsEC2DescribeSpotFleetInstancesOutput {
  ActiveInstances: [AwsEC2DescribeSpotFleetInstancesOutputActiveInstances]!
  NextToken: String
  SpotFleetRequestId: String!
}

type AwsEC2DescribeSpotFleetInstancesOutputActiveInstances {
  InstanceId: String
  InstanceType: String
  SpotInstanceRequestId: String
  InstanceHealth: String
}

input AwsEC2DescribeSpotFleetRequestHistoryInput {
  DryRun: Boolean
  EventType: String
  MaxResults: Int
  NextToken: String
  SpotFleetRequestId: String!
  StartTime: Date!
}

type AwsEC2DescribeSpotFleetRequestHistoryOutput {
  HistoryRecords: [AwsEC2DescribeSpotFleetRequestHistoryOutputHistoryRecords]!
  LastEvaluatedTime: Date!
  NextToken: String
  SpotFleetRequestId: String!
  StartTime: Date!
}

type AwsEC2DescribeSpotFleetRequestHistoryOutputHistoryRecords {
  EventInformation: AwsEC2DescribeSpotFleetRequestHistoryOutputHistoryRecordsEventInformation!
  EventType: String!
  Timestamp: Date!
}

type AwsEC2DescribeSpotFleetRequestHistoryOutputHistoryRecordsEventInformation {
  EventDescription: String
  EventSubType: String
  InstanceId: String
}

input AwsEC2DescribeSpotFleetRequestsInput {
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  SpotFleetRequestIds: [String]
}

type AwsEC2DescribeSpotFleetRequestsOutput {
  NextToken: String
  SpotFleetRequestConfigs: [AwsEC2DescribeSpotFleetRequestsOutputSpotFleetRequestConfigs]!
}

type AwsEC2DescribeSpotFleetRequestsOutputSpotFleetRequestConfigs {
  ActivityStatus: String
  CreateTime: Date!
  SpotFleetRequestConfig: AwsEC2Slb!
  SpotFleetRequestId: String!
  SpotFleetRequestState: String!
}

input AwsEC2DescribeSpotInstanceRequestsInput {
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
  SpotInstanceRequestIds: [String]
}

type AwsEC2DescribeSpotInstanceRequestsOutput {
  SpotInstanceRequests: [AwsEC2Sm1]
}

input AwsEC2DescribeSpotPriceHistoryInput {
  Filters: [AwsEC2SbyInput]
  AvailabilityZone: String
  DryRun: Boolean
  EndTime: Date
  InstanceTypes: [String]
  MaxResults: Int
  NextToken: String
  ProductDescriptions: [String]
  StartTime: Date
}

type AwsEC2DescribeSpotPriceHistoryOutput {
  NextToken: String
  SpotPriceHistory: [AwsEC2DescribeSpotPriceHistoryOutputSpotPriceHistory]
}

type AwsEC2DescribeSpotPriceHistoryOutputSpotPriceHistory {
  AvailabilityZone: String
  InstanceType: String
  ProductDescription: String
  SpotPrice: String
  Timestamp: Date
}

input AwsEC2DescribeStaleSecurityGroupsInput {
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
  VpcId: String!
}

type AwsEC2DescribeStaleSecurityGroupsOutput {
  NextToken: String
  StaleSecurityGroupSet: [AwsEC2DescribeStaleSecurityGroupsOutputStaleSecurityGroupSet]
}

type AwsEC2DescribeStaleSecurityGroupsOutputStaleSecurityGroupSet {
  Description: String
  GroupId: String!
  GroupName: String
  StaleIpPermissions: [AwsEC2Smh]
  StaleIpPermissionsEgress: [AwsEC2Smh]
  VpcId: String
}

input AwsEC2DescribeSubnetsInput {
  Filters: [AwsEC2SbyInput]
  SubnetIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeSubnetsOutput {
  Subnets: [AwsEC2S40]
}

input AwsEC2DescribeTagsInput {
  DryRun: Boolean
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeTagsOutput {
  NextToken: String
  Tags: [AwsEC2DescribeTagsOutputTags]
}

type AwsEC2DescribeTagsOutputTags {
  Key: String
  ResourceId: String
  ResourceType: String
  Value: String
}

input AwsEC2DescribeVolumeAttributeInput {
  Attribute: String
  VolumeId: String!
  DryRun: Boolean
}

type AwsEC2DescribeVolumeAttributeOutput {
  AutoEnableIO: AwsEC2Sgc
  ProductCodes: [AwsEC2Sdy]
  VolumeId: String
}

input AwsEC2DescribeVolumesInput {
  Filters: [AwsEC2SbyInput]
  VolumeIds: [String]
  DryRun: Boolean
  MaxResults: Int
  NextToken: String
}

input AwsEC2DescribeVolumesModificationsInput {
  DryRun: Boolean
  VolumeIds: [String]
  Filters: [AwsEC2SbyInput]
  NextToken: String
  MaxResults: Int
}

type AwsEC2DescribeVolumesModificationsOutput {
  VolumesModifications: [AwsEC2Snh]
  NextToken: String
}

type AwsEC2DescribeVolumesOutput {
  Volumes: [AwsEC2S90]
  NextToken: String
}

input AwsEC2DescribeVolumeStatusInput {
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
  VolumeIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeVolumeStatusOutput {
  NextToken: String
  VolumeStatuses: [AwsEC2DescribeVolumeStatusOutputVolumeStatuses]
}

type AwsEC2DescribeVolumeStatusOutputVolumeStatuses {
  Actions: [AwsEC2DescribeVolumeStatusOutputVolumeStatusesActions]
  AvailabilityZone: String
  Events: [AwsEC2DescribeVolumeStatusOutputVolumeStatusesEvents]
  VolumeId: String
  VolumeStatus: AwsEC2DescribeVolumeStatusOutputVolumeStatusesVolumeStatus
}

type AwsEC2DescribeVolumeStatusOutputVolumeStatusesActions {
  Code: String
  Description: String
  EventId: String
  EventType: String
}

type AwsEC2DescribeVolumeStatusOutputVolumeStatusesEvents {
  Description: String
  EventId: String
  EventType: String
  NotAfter: Date
  NotBefore: Date
}

type AwsEC2DescribeVolumeStatusOutputVolumeStatusesVolumeStatus {
  Details: [AwsEC2DescribeVolumeStatusOutputVolumeStatusesVolumeStatusDetails]
  Status: String
}

type AwsEC2DescribeVolumeStatusOutputVolumeStatusesVolumeStatusDetails {
  Name: String
  Status: String
}

input AwsEC2DescribeVpcAttributeInput {
  Attribute: String!
  VpcId: String!
  DryRun: Boolean
}

type AwsEC2DescribeVpcAttributeOutput {
  VpcId: String
  EnableDnsHostnames: AwsEC2Sgc
  EnableDnsSupport: AwsEC2Sgc
}

input AwsEC2DescribeVpcClassicLinkDnsSupportInput {
  MaxResults: Int
  NextToken: String
  VpcIds: [String]
}

type AwsEC2DescribeVpcClassicLinkDnsSupportOutput {
  NextToken: String
  Vpcs: [AwsEC2DescribeVpcClassicLinkDnsSupportOutputVpcs]
}

type AwsEC2DescribeVpcClassicLinkDnsSupportOutputVpcs {
  ClassicLinkDnsSupported: Boolean
  VpcId: String
}

input AwsEC2DescribeVpcClassicLinkInput {
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
  VpcIds: [String]
}

type AwsEC2DescribeVpcClassicLinkOutput {
  Vpcs: [AwsEC2DescribeVpcClassicLinkOutputVpcs]
}

type AwsEC2DescribeVpcClassicLinkOutputVpcs {
  ClassicLinkEnabled: Boolean
  Tags: [AwsEC2Sr]
  VpcId: String
}

input AwsEC2DescribeVpcEndpointConnectionNotificationsInput {
  DryRun: Boolean
  ConnectionNotificationId: String
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeVpcEndpointConnectionNotificationsOutput {
  ConnectionNotificationSet: [AwsEC2S9g]
  NextToken: String
}

input AwsEC2DescribeVpcEndpointConnectionsInput {
  DryRun: Boolean
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeVpcEndpointConnectionsOutput {
  VpcEndpointConnections: [AwsEC2DescribeVpcEndpointConnectionsOutputVpcEndpointConnections]
  NextToken: String
}

type AwsEC2DescribeVpcEndpointConnectionsOutputVpcEndpointConnections {
  ServiceId: String
  VpcEndpointId: String
  VpcEndpointOwner: String
  VpcEndpointState: String
  CreationTimestamp: Date
}

input AwsEC2DescribeVpcEndpointServiceConfigurationsInput {
  DryRun: Boolean
  ServiceIds: [String]
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeVpcEndpointServiceConfigurationsOutput {
  ServiceConfigurations: [AwsEC2S9l]
  NextToken: String
}

input AwsEC2DescribeVpcEndpointServicePermissionsInput {
  DryRun: Boolean
  ServiceId: String!
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeVpcEndpointServicePermissionsOutput {
  AllowedPrincipals: [AwsEC2DescribeVpcEndpointServicePermissionsOutputAllowedPrincipals]
  NextToken: String
}

type AwsEC2DescribeVpcEndpointServicePermissionsOutputAllowedPrincipals {
  PrincipalType: String
  Principal: String
}

input AwsEC2DescribeVpcEndpointServicesInput {
  DryRun: Boolean
  ServiceNames: [String]
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeVpcEndpointServicesOutput {
  ServiceNames: [String]
  ServiceDetails: [AwsEC2DescribeVpcEndpointServicesOutputServiceDetails]
  NextToken: String
}

type AwsEC2DescribeVpcEndpointServicesOutputServiceDetails {
  ServiceName: String
  ServiceType: [AwsEC2S9m]
  AvailabilityZones: [String]
  Owner: String
  BaseEndpointDnsNames: [String]
  PrivateDnsName: String
  VpcEndpointPolicySupported: Boolean
  AcceptanceRequired: Boolean
}

input AwsEC2DescribeVpcEndpointsInput {
  DryRun: Boolean
  VpcEndpointIds: [String]
  Filters: [AwsEC2SbyInput]
  MaxResults: Int
  NextToken: String
}

type AwsEC2DescribeVpcEndpointsOutput {
  VpcEndpoints: [AwsEC2S98]
  NextToken: String
}

input AwsEC2DescribeVpcPeeringConnectionsInput {
  Filters: [AwsEC2SbyInput]
  DryRun: Boolean
  VpcPeeringConnectionIds: [String]
}

type AwsEC2DescribeVpcPeeringConnectionsOutput {
  VpcPeeringConnections: [AwsEC2Sh]
}

input AwsEC2DescribeVpcsInput {
  Filters: [AwsEC2SbyInput]
  VpcIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeVpcsOutput {
  Vpcs: [AwsEC2S45]
}

input AwsEC2DescribeVpnConnectionsInput {
  Filters: [AwsEC2SbyInput]
  VpnConnectionIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeVpnConnectionsOutput {
  VpnConnections: [AwsEC2S9x]
}

input AwsEC2DescribeVpnGatewaysInput {
  Filters: [AwsEC2SbyInput]
  VpnGatewayIds: [String]
  DryRun: Boolean
}

type AwsEC2DescribeVpnGatewaysOutput {
  VpnGateways: [AwsEC2Sa9]
}

input AwsEC2DetachClassicLinkVpcInput {
  DryRun: Boolean
  InstanceId: String!
  VpcId: String!
}

type AwsEC2DetachClassicLinkVpcOutput {
  Return: Boolean
}

input AwsEC2DetachInternetGatewayInput {
  DryRun: Boolean
  InternetGatewayId: String!
  VpcId: String!
}

input AwsEC2DetachNetworkInterfaceInput {
  AttachmentId: String!
  DryRun: Boolean
  Force: Boolean
}

input AwsEC2DetachVolumeInput {
  Device: String
  Force: Boolean
  InstanceId: String
  VolumeId: String!
  DryRun: Boolean
}

input AwsEC2DetachVpnGatewayInput {
  VpcId: String!
  VpnGatewayId: String!
  DryRun: Boolean
}

input AwsEC2DisableVgwRoutePropagationInput {
  GatewayId: String!
  RouteTableId: String!
}

input AwsEC2DisableVpcClassicLinkDnsSupportInput {
  VpcId: String
}

type AwsEC2DisableVpcClassicLinkDnsSupportOutput {
  Return: Boolean
}

input AwsEC2DisableVpcClassicLinkInput {
  DryRun: Boolean
  VpcId: String!
}

type AwsEC2DisableVpcClassicLinkOutput {
  Return: Boolean
}

input AwsEC2DisassociateAddressInput {
  AssociationId: String
  PublicIp: String
  DryRun: Boolean
}

input AwsEC2DisassociateIamInstanceProfileInput {
  AssociationId: String!
}

type AwsEC2DisassociateIamInstanceProfileOutput {
  IamInstanceProfileAssociation: AwsEC2S1b
}

input AwsEC2DisassociateRouteTableInput {
  AssociationId: String!
  DryRun: Boolean
}

input AwsEC2DisassociateSubnetCidrBlockInput {
  AssociationId: String!
}

type AwsEC2DisassociateSubnetCidrBlockOutput {
  Ipv6CidrBlockAssociation: AwsEC2S1i
  SubnetId: String
}

input AwsEC2DisassociateVpcCidrBlockInput {
  AssociationId: String!
}

type AwsEC2DisassociateVpcCidrBlockOutput {
  Ipv6CidrBlockAssociation: AwsEC2S1n
  CidrBlockAssociation: AwsEC2S1q
  VpcId: String
}

input AwsEC2EnableVgwRoutePropagationInput {
  GatewayId: String!
  RouteTableId: String!
}

input AwsEC2EnableVolumeIOInput {
  DryRun: Boolean
  VolumeId: String!
}

input AwsEC2EnableVpcClassicLinkDnsSupportInput {
  VpcId: String
}

type AwsEC2EnableVpcClassicLinkDnsSupportOutput {
  Return: Boolean
}

input AwsEC2EnableVpcClassicLinkInput {
  DryRun: Boolean
  VpcId: String!
}

type AwsEC2EnableVpcClassicLinkOutput {
  Return: Boolean
}

input AwsEC2GetConsoleOutputInput {
  InstanceId: String!
  DryRun: Boolean
}

type AwsEC2GetConsoleOutputOutput {
  InstanceId: String
  Output: String
  Timestamp: Date
}

input AwsEC2GetConsoleScreenshotInput {
  DryRun: Boolean
  InstanceId: String!
  WakeUp: Boolean
}

type AwsEC2GetConsoleScreenshotOutput {
  ImageData: String
  InstanceId: String
}

input AwsEC2GetHostReservationPurchasePreviewInput {
  HostIdSet: [String]!
  OfferingId: String!
}

type AwsEC2GetHostReservationPurchasePreviewOutput {
  CurrencyCode: String
  Purchase: [AwsEC2Sps]
  TotalHourlyPrice: String
  TotalUpfrontPrice: String
}

input AwsEC2GetLaunchTemplateDataInput {
  DryRun: Boolean
  InstanceId: String!
}

type AwsEC2GetLaunchTemplateDataOutput {
  LaunchTemplateData: AwsEC2S6h
}

input AwsEC2GetPasswordDataInput {
  InstanceId: String!
  DryRun: Boolean
}

type AwsEC2GetPasswordDataOutput {
  InstanceId: String
  PasswordData: String
  Timestamp: Date
}

input AwsEC2GetReservedInstancesExchangeQuoteInput {
  DryRun: Boolean
  ReservedInstanceIds: [String]!
  TargetConfigurations: [AwsEC2S5Input]
}

type AwsEC2GetReservedInstancesExchangeQuoteOutput {
  CurrencyCode: String
  IsValidExchange: Boolean
  OutputReservedInstancesWillExpireAt: Date
  PaymentDue: String
  ReservedInstanceValueRollup: AwsEC2Sq0
  ReservedInstanceValueSet: [AwsEC2GetReservedInstancesExchangeQuoteOutputReservedInstanceValueSet]
  TargetConfigurationValueRollup: AwsEC2Sq0
  TargetConfigurationValueSet: [AwsEC2GetReservedInstancesExchangeQuoteOutputTargetConfigurationValueSet]
  ValidationFailureReason: String
}

type AwsEC2GetReservedInstancesExchangeQuoteOutputReservedInstanceValueSet {
  ReservationValue: AwsEC2Sq0
  ReservedInstanceId: String
}

type AwsEC2GetReservedInstancesExchangeQuoteOutputTargetConfigurationValueSet {
  ReservationValue: AwsEC2Sq0
  TargetConfiguration: AwsEC2GetReservedInstancesExchangeQuoteOutputTargetConfigurationValueSetTargetConfiguration
}

type AwsEC2GetReservedInstancesExchangeQuoteOutputTargetConfigurationValueSetTargetConfiguration {
  InstanceCount: Int
  OfferingId: String
}

input AwsEC2ImportImageDiskContainersInput {
  Description: String
  DeviceName: String
  Format: String
  SnapshotId: String
  Url: String
  UserBucket: AwsEC2SqaInput
}

input AwsEC2ImportImageInput {
  Architecture: String
  ClientData: AwsEC2Sq7Input
  ClientToken: String
  Description: String
  DiskContainers: [AwsEC2ImportImageDiskContainersInput]
  DryRun: Boolean
  Hypervisor: String
  LicenseType: String
  Platform: String
  RoleName: String
}

type AwsEC2ImportImageOutput {
  Architecture: String
  Description: String
  Hypervisor: String
  ImageId: String
  ImportTaskId: String
  LicenseType: String
  Platform: String
  Progress: String
  SnapshotDetails: [AwsEC2Sfy]
  Status: String
  StatusMessage: String
}

input AwsEC2ImportInstanceDiskImagesInput {
  Description: String
  Image: AwsEC2SqfInput
  Volume: AwsEC2SqgInput
}

input AwsEC2ImportInstanceInput {
  Description: String
  DiskImages: [AwsEC2ImportInstanceDiskImagesInput]
  DryRun: Boolean
  LaunchSpecification: AwsEC2ImportInstanceLaunchSpecificationInput
  Platform: String!
}

input AwsEC2ImportInstanceLaunchSpecificationInput {
  AdditionalInfo: String
  Architecture: String
  GroupIds: [String]
  GroupNames: [String]
  InstanceInitiatedShutdownBehavior: String
  InstanceType: String
  Monitoring: Boolean
  Placement: AwsEC2Sh4Input
  PrivateIpAddress: String
  SubnetId: String
  UserData: AwsEC2ImportInstanceLaunchSpecificationUserDataInput
}

input AwsEC2ImportInstanceLaunchSpecificationUserDataInput {
  Data: String
}

type AwsEC2ImportInstanceOutput {
  ConversionTask: AwsEC2Scq
}

input AwsEC2ImportKeyPairInput {
  DryRun: Boolean
  KeyName: String!
  PublicKeyMaterial: JSON!
}

type AwsEC2ImportKeyPairOutput {
  KeyFingerprint: String
  KeyName: String
}

input AwsEC2ImportSnapshotDiskContainerInput {
  Description: String
  Format: String
  Url: String
  UserBucket: AwsEC2SqaInput
}

input AwsEC2ImportSnapshotInput {
  ClientData: AwsEC2Sq7Input
  ClientToken: String
  Description: String
  DiskContainer: AwsEC2ImportSnapshotDiskContainerInput
  DryRun: Boolean
  RoleName: String
}

type AwsEC2ImportSnapshotOutput {
  Description: String
  ImportTaskId: String
  SnapshotTaskDetail: AwsEC2Sg5
}

input AwsEC2ImportVolumeInput {
  AvailabilityZone: String!
  Description: String
  DryRun: Boolean
  Image: AwsEC2SqfInput!
  Volume: AwsEC2SqgInput!
}

type AwsEC2ImportVolumeOutput {
  ConversionTask: AwsEC2Scq
}

input AwsEC2ModifyFpgaImageAttributeInput {
  DryRun: Boolean
  FpgaImageId: String!
  Attribute: String
  OperationType: String
  UserIds: [String]
  UserGroups: [String]
  ProductCodes: [String]
  LoadPermission: AwsEC2ModifyFpgaImageAttributeLoadPermissionInput
  Description: String
  Name: String
}

input AwsEC2ModifyFpgaImageAttributeLoadPermissionInput {
  Add: [AwsEC2SqxInput]
  Remove: [AwsEC2SqxInput]
}

type AwsEC2ModifyFpgaImageAttributeOutput {
  FpgaImageAttribute: AwsEC2Sdu
}

input AwsEC2ModifyHostsInput {
  AutoPlacement: String!
  HostIds: [String]!
}

type AwsEC2ModifyHostsOutput {
  Successful: [String]
  Unsuccessful: [AwsEC2Sd]
}

input AwsEC2ModifyIdentityIdFormatInput {
  PrincipalArn: String!
  Resource: String!
  UseLongIds: Boolean!
}

input AwsEC2ModifyIdFormatInput {
  Resource: String!
  UseLongIds: Boolean!
}

input AwsEC2ModifyImageAttributeInput {
  Attribute: String
  Description: AwsEC2S4iInput
  ImageId: String!
  LaunchPermission: AwsEC2ModifyImageAttributeLaunchPermissionInput
  OperationType: String
  ProductCodes: [String]
  UserGroups: [String]
  UserIds: [String]
  Value: String
  DryRun: Boolean
}

input AwsEC2ModifyImageAttributeLaunchPermissionInput {
  Add: [AwsEC2SfeInput]
  Remove: [AwsEC2SfeInput]
}

input AwsEC2ModifyInstanceAttributeBlockDeviceMappingsEbsInput {
  DeleteOnTermination: Boolean
  VolumeId: String
}

input AwsEC2ModifyInstanceAttributeBlockDeviceMappingsInput {
  DeviceName: String
  Ebs: AwsEC2ModifyInstanceAttributeBlockDeviceMappingsEbsInput
  NoDevice: String
  VirtualName: String
}

input AwsEC2ModifyInstanceAttributeInput {
  SourceDestCheck: AwsEC2SgcInput
  Attribute: String
  BlockDeviceMappings: [AwsEC2ModifyInstanceAttributeBlockDeviceMappingsInput]
  DisableApiTermination: AwsEC2SgcInput
  DryRun: Boolean
  EbsOptimized: AwsEC2SgcInput
  EnaSupport: AwsEC2SgcInput
  Groups: [String]
  InstanceId: String!
  InstanceInitiatedShutdownBehavior: AwsEC2S4iInput
  InstanceType: AwsEC2S4iInput
  Kernel: AwsEC2S4iInput
  Ramdisk: AwsEC2S4iInput
  SriovNetSupport: AwsEC2S4iInput
  UserData: AwsEC2ModifyInstanceAttributeUserDataInput
  Value: String
}

input AwsEC2ModifyInstanceAttributeUserDataInput {
  Value: JSON
}

input AwsEC2ModifyInstanceCreditSpecificationInput {
  DryRun: Boolean
  ClientToken: String
  InstanceCreditSpecifications: [AwsEC2ModifyInstanceCreditSpecificationInstanceCreditSpecificationsInput]!
}

input AwsEC2ModifyInstanceCreditSpecificationInstanceCreditSpecificationsInput {
  InstanceId: String
  CpuCredits: String
}

type AwsEC2ModifyInstanceCreditSpecificationOutput {
  SuccessfulInstanceCreditSpecifications: [AwsEC2ModifyInstanceCreditSpecificationOutputSuccessfulInstanceCreditSpecifications]
  UnsuccessfulInstanceCreditSpecifications: [AwsEC2ModifyInstanceCreditSpecificationOutputUnsuccessfulInstanceCreditSpecifications]
}

type AwsEC2ModifyInstanceCreditSpecificationOutputSuccessfulInstanceCreditSpecifications {
  InstanceId: String
}

type AwsEC2ModifyInstanceCreditSpecificationOutputUnsuccessfulInstanceCreditSpecifications {
  InstanceId: String
  Error: AwsEC2ModifyInstanceCreditSpecificationOutputUnsuccessfulInstanceCreditSpecificationsError
}

type AwsEC2ModifyInstanceCreditSpecificationOutputUnsuccessfulInstanceCreditSpecificationsError {
  Code: String
  Message: String
}

input AwsEC2ModifyInstancePlacementInput {
  Affinity: String
  HostId: String
  InstanceId: String!
  Tenancy: String
}

type AwsEC2ModifyInstancePlacementOutput {
  Return: Boolean
}

input AwsEC2ModifyLaunchTemplateInput {
  DryRun: Boolean
  ClientToken: String
  LaunchTemplateId: String
  LaunchTemplateName: String
  DefaultVersion: String
}

type AwsEC2ModifyLaunchTemplateOutput {
  LaunchTemplate: AwsEC2S6d
}

input AwsEC2ModifyNetworkInterfaceAttributeAttachmentInput {
  AttachmentId: String
  DeleteOnTermination: Boolean
}

input AwsEC2ModifyNetworkInterfaceAttributeInput {
  Attachment: AwsEC2ModifyNetworkInterfaceAttributeAttachmentInput
  Description: AwsEC2S4iInput
  DryRun: Boolean
  Groups: [String]
  NetworkInterfaceId: String!
  SourceDestCheck: AwsEC2SgcInput
}

input AwsEC2ModifyReservedInstancesInput {
  ReservedInstancesIds: [String]!
  ClientToken: String
  TargetConfigurations: [AwsEC2SjhInput]!
}

type AwsEC2ModifyReservedInstancesOutput {
  ReservedInstancesModificationId: String
}

input AwsEC2ModifySnapshotAttributeCreateVolumePermissionInput {
  Add: [AwsEC2SkmInput]
  Remove: [AwsEC2SkmInput]
}

input AwsEC2ModifySnapshotAttributeInput {
  Attribute: String
  CreateVolumePermission: AwsEC2ModifySnapshotAttributeCreateVolumePermissionInput
  GroupNames: [String]
  OperationType: String
  SnapshotId: String!
  UserIds: [String]
  DryRun: Boolean
}

input AwsEC2ModifySpotFleetRequestInput {
  ExcessCapacityTerminationPolicy: String
  SpotFleetRequestId: String!
  TargetCapacity: Int
}

type AwsEC2ModifySpotFleetRequestOutput {
  Return: Boolean
}

input AwsEC2ModifySubnetAttributeInput {
  AssignIpv6AddressOnCreation: AwsEC2SgcInput
  MapPublicIpOnLaunch: AwsEC2SgcInput
  SubnetId: String!
}

input AwsEC2ModifyVolumeAttributeInput {
  AutoEnableIO: AwsEC2SgcInput
  VolumeId: String!
  DryRun: Boolean
}

input AwsEC2ModifyVolumeInput {
  DryRun: Boolean
  VolumeId: String!
  Size: Int
  VolumeType: String
  Iops: Int
}

type AwsEC2ModifyVolumeOutput {
  VolumeModification: AwsEC2Snh
}

input AwsEC2ModifyVpcAttributeInput {
  EnableDnsHostnames: AwsEC2SgcInput
  EnableDnsSupport: AwsEC2SgcInput
  VpcId: String!
}

input AwsEC2ModifyVpcEndpointConnectionNotificationInput {
  DryRun: Boolean
  ConnectionNotificationId: String!
  ConnectionNotificationArn: String
  ConnectionEvents: [String]
}

type AwsEC2ModifyVpcEndpointConnectionNotificationOutput {
  ReturnValue: Boolean
}

input AwsEC2ModifyVpcEndpointInput {
  DryRun: Boolean
  VpcEndpointId: String!
  ResetPolicy: Boolean
  PolicyDocument: String
  AddRouteTableIds: [String]
  RemoveRouteTableIds: [String]
  AddSubnetIds: [String]
  RemoveSubnetIds: [String]
  AddSecurityGroupIds: [String]
  RemoveSecurityGroupIds: [String]
  PrivateDnsEnabled: Boolean
}

type AwsEC2ModifyVpcEndpointOutput {
  Return: Boolean
}

input AwsEC2ModifyVpcEndpointServiceConfigurationInput {
  DryRun: Boolean
  ServiceId: String!
  AcceptanceRequired: Boolean
  AddNetworkLoadBalancerArns: [String]
  RemoveNetworkLoadBalancerArns: [String]
}

type AwsEC2ModifyVpcEndpointServiceConfigurationOutput {
  Return: Boolean
}

input AwsEC2ModifyVpcEndpointServicePermissionsInput {
  DryRun: Boolean
  ServiceId: String!
  AddAllowedPrincipals: [String]
  RemoveAllowedPrincipals: [String]
}

type AwsEC2ModifyVpcEndpointServicePermissionsOutput {
  ReturnValue: Boolean
}

input AwsEC2ModifyVpcPeeringConnectionOptionsInput {
  AccepterPeeringConnectionOptions: AwsEC2SsfInput
  DryRun: Boolean
  RequesterPeeringConnectionOptions: AwsEC2SsfInput
  VpcPeeringConnectionId: String!
}

type AwsEC2ModifyVpcPeeringConnectionOptionsOutput {
  AccepterPeeringConnectionOptions: AwsEC2Ssh
  RequesterPeeringConnectionOptions: AwsEC2Ssh
}

input AwsEC2ModifyVpcTenancyInput {
  VpcId: String!
  InstanceTenancy: String!
  DryRun: Boolean
}

type AwsEC2ModifyVpcTenancyOutput {
  ReturnValue: Boolean
}

input AwsEC2MonitorInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
}

type AwsEC2MonitorInstancesOutput {
  InstanceMonitorings: [AwsEC2Ssn]
}

input AwsEC2MoveAddressToVpcInput {
  DryRun: Boolean
  PublicIp: String!
}

type AwsEC2MoveAddressToVpcOutput {
  AllocationId: String
  Status: String
}

input AwsEC2PurchaseHostReservationInput {
  ClientToken: String
  CurrencyCode: String
  HostIdSet: [String]!
  LimitPrice: String
  OfferingId: String!
}

type AwsEC2PurchaseHostReservationOutput {
  ClientToken: String
  CurrencyCode: String
  Purchase: [AwsEC2Sps]
  TotalHourlyPrice: String
  TotalUpfrontPrice: String
}

input AwsEC2PurchaseReservedInstancesOfferingInput {
  InstanceCount: Int!
  ReservedInstancesOfferingId: String!
  DryRun: Boolean
  LimitPrice: AwsEC2PurchaseReservedInstancesOfferingLimitPriceInput
}

input AwsEC2PurchaseReservedInstancesOfferingLimitPriceInput {
  Amount: JSON
  CurrencyCode: String
}

type AwsEC2PurchaseReservedInstancesOfferingOutput {
  ReservedInstancesId: String
}

input AwsEC2PurchaseScheduledInstancesInput {
  ClientToken: String
  DryRun: Boolean
  PurchaseRequests: [AwsEC2PurchaseScheduledInstancesPurchaseRequestsInput]!
}

type AwsEC2PurchaseScheduledInstancesOutput {
  ScheduledInstanceSet: [AwsEC2Sk8]
}

input AwsEC2PurchaseScheduledInstancesPurchaseRequestsInput {
  InstanceCount: Int!
  PurchaseToken: String!
}

input AwsEC2RebootInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
}

input AwsEC2RegisterImageInput {
  ImageLocation: String
  Architecture: String
  BlockDeviceMappings: [AwsEC2S4yInput]
  Description: String
  DryRun: Boolean
  EnaSupport: Boolean
  KernelId: String
  Name: String!
  BillingProducts: [String]
  RamdiskId: String
  RootDeviceName: String
  SriovNetSupport: String
  VirtualizationType: String
}

type AwsEC2RegisterImageOutput {
  ImageId: String
}

input AwsEC2RejectVpcEndpointConnectionsInput {
  DryRun: Boolean
  ServiceId: String!
  VpcEndpointIds: [String]!
}

type AwsEC2RejectVpcEndpointConnectionsOutput {
  Unsuccessful: [AwsEC2Sd]
}

input AwsEC2RejectVpcPeeringConnectionInput {
  DryRun: Boolean
  VpcPeeringConnectionId: String!
}

type AwsEC2RejectVpcPeeringConnectionOutput {
  Return: Boolean
}

input AwsEC2ReleaseAddressInput {
  AllocationId: String
  PublicIp: String
  DryRun: Boolean
}

input AwsEC2ReleaseHostsInput {
  HostIds: [String]!
}

type AwsEC2ReleaseHostsOutput {
  Successful: [String]
  Unsuccessful: [AwsEC2Sd]
}

input AwsEC2ReplaceIamInstanceProfileAssociationInput {
  IamInstanceProfile: AwsEC2S19Input!
  AssociationId: String!
}

type AwsEC2ReplaceIamInstanceProfileAssociationOutput {
  IamInstanceProfileAssociation: AwsEC2S1b
}

input AwsEC2ReplaceNetworkAclAssociationInput {
  AssociationId: String!
  DryRun: Boolean
  NetworkAclId: String!
}

type AwsEC2ReplaceNetworkAclAssociationOutput {
  NewAssociationId: String
}

input AwsEC2ReplaceNetworkAclEntryInput {
  CidrBlock: String
  DryRun: Boolean
  Egress: Boolean!
  IcmpTypeCode: AwsEC2S7dInput
  Ipv6CidrBlock: String
  NetworkAclId: String!
  PortRange: AwsEC2S7eInput
  Protocol: String!
  RuleAction: String!
  RuleNumber: Int!
}

input AwsEC2ReplaceRouteInput {
  DestinationCidrBlock: String
  DestinationIpv6CidrBlock: String
  DryRun: Boolean
  EgressOnlyInternetGatewayId: String
  GatewayId: String
  InstanceId: String
  NatGatewayId: String
  NetworkInterfaceId: String
  RouteTableId: String!
  VpcPeeringConnectionId: String
}

input AwsEC2ReplaceRouteTableAssociationInput {
  AssociationId: String!
  DryRun: Boolean
  RouteTableId: String!
}

type AwsEC2ReplaceRouteTableAssociationOutput {
  NewAssociationId: String
}

input AwsEC2ReportInstanceStatusInput {
  Description: String
  DryRun: Boolean
  EndTime: Date
  Instances: [String]!
  ReasonCodes: [String]!
  StartTime: Date
  Status: String!
}

input AwsEC2RequestSpotFleetInput {
  DryRun: Boolean
  SpotFleetRequestConfig: AwsEC2SlbInput!
}

type AwsEC2RequestSpotFleetOutput {
  SpotFleetRequestId: String!
}

input AwsEC2RequestSpotInstancesInput {
  AvailabilityZoneGroup: String
  BlockDurationMinutes: Int
  ClientToken: String
  DryRun: Boolean
  InstanceCount: Int
  LaunchGroup: String
  LaunchSpecification: AwsEC2RequestSpotInstancesLaunchSpecificationInput
  SpotPrice: String
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

input AwsEC2RequestSpotInstancesLaunchSpecificationInput {
  SecurityGroupIds: [String]
  SecurityGroups: [String]
  AddressingType: String
  BlockDeviceMappings: [AwsEC2S4yInput]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S19Input
  ImageId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  Monitoring: AwsEC2Sm4Input
  NetworkInterfaces: [AwsEC2SlhInput]
  Placement: AwsEC2SljInput
  RamdiskId: String
  SubnetId: String
  UserData: String
}

type AwsEC2RequestSpotInstancesOutput {
  SpotInstanceRequests: [AwsEC2Sm1]
}

input AwsEC2ResetFpgaImageAttributeInput {
  DryRun: Boolean
  FpgaImageId: String!
  Attribute: String
}

type AwsEC2ResetFpgaImageAttributeOutput {
  Return: Boolean
}

input AwsEC2ResetImageAttributeInput {
  Attribute: String!
  ImageId: String!
  DryRun: Boolean
}

input AwsEC2ResetInstanceAttributeInput {
  Attribute: String!
  DryRun: Boolean
  InstanceId: String!
}

input AwsEC2ResetNetworkInterfaceAttributeInput {
  DryRun: Boolean
  NetworkInterfaceId: String!
  SourceDestCheck: String
}

input AwsEC2ResetSnapshotAttributeInput {
  Attribute: String!
  SnapshotId: String!
  DryRun: Boolean
}

input AwsEC2RestoreAddressToClassicInput {
  DryRun: Boolean
  PublicIp: String!
}

type AwsEC2RestoreAddressToClassicOutput {
  PublicIp: String
  Status: String
}

input AwsEC2RevokeSecurityGroupEgressInput {
  DryRun: Boolean
  GroupId: String!
  IpPermissions: [AwsEC2S25Input]
  CidrIp: String
  FromPort: Int
  IpProtocol: String
  ToPort: Int
  SourceSecurityGroupName: String
  SourceSecurityGroupOwnerId: String
}

input AwsEC2RevokeSecurityGroupIngressInput {
  CidrIp: String
  FromPort: Int
  GroupId: String
  GroupName: String
  IpPermissions: [AwsEC2S25Input]
  IpProtocol: String
  SourceSecurityGroupName: String
  SourceSecurityGroupOwnerId: String
  ToPort: Int
  DryRun: Boolean
}

input AwsEC2RunInstancesInput {
  BlockDeviceMappings: [AwsEC2S4yInput]
  ImageId: String
  InstanceType: String
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2S6oInput]
  KernelId: String
  KeyName: String
  MaxCount: Int!
  MinCount: Int!
  Monitoring: AwsEC2Sm4Input
  Placement: AwsEC2Sh4Input
  RamdiskId: String
  SecurityGroupIds: [String]
  SecurityGroups: [String]
  SubnetId: String
  UserData: String
  AdditionalInfo: String
  ClientToken: String
  DisableApiTermination: Boolean
  DryRun: Boolean
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S19Input
  InstanceInitiatedShutdownBehavior: String
  NetworkInterfaces: [AwsEC2SlhInput]
  PrivateIpAddress: String
  ElasticGpuSpecification: [AwsEC2S64Input]
  TagSpecifications: [AwsEC2S8yInput]
  LaunchTemplate: AwsEC2RunInstancesLaunchTemplateInput
  InstanceMarketOptions: AwsEC2RunInstancesInstanceMarketOptionsInput
  CreditSpecification: AwsEC2S6bInput
}

input AwsEC2RunInstancesInstanceMarketOptionsInput {
  MarketType: String
  SpotOptions: AwsEC2RunInstancesInstanceMarketOptionsSpotOptionsInput
}

input AwsEC2RunInstancesInstanceMarketOptionsSpotOptionsInput {
  MaxPrice: String
  SpotInstanceType: String
  BlockDurationMinutes: Int
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

input AwsEC2RunInstancesLaunchTemplateInput {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsEC2RunScheduledInstancesInput {
  ClientToken: String
  DryRun: Boolean
  InstanceCount: Int
  LaunchSpecification: AwsEC2RunScheduledInstancesLaunchSpecificationInput!
  ScheduledInstanceId: String!
}

input AwsEC2RunScheduledInstancesLaunchSpecificationBlockDeviceMappingsEbsInput {
  DeleteOnTermination: Boolean
  Encrypted: Boolean
  Iops: Int
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationBlockDeviceMappingsInput {
  DeviceName: String
  Ebs: AwsEC2RunScheduledInstancesLaunchSpecificationBlockDeviceMappingsEbsInput
  NoDevice: String
  VirtualName: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationIamInstanceProfileInput {
  Arn: String
  Name: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationInput {
  BlockDeviceMappings: [AwsEC2RunScheduledInstancesLaunchSpecificationBlockDeviceMappingsInput]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2RunScheduledInstancesLaunchSpecificationIamInstanceProfileInput
  ImageId: String!
  InstanceType: String
  KernelId: String
  KeyName: String
  Monitoring: AwsEC2RunScheduledInstancesLaunchSpecificationMonitoringInput
  NetworkInterfaces: [AwsEC2RunScheduledInstancesLaunchSpecificationNetworkInterfacesInput]
  Placement: AwsEC2RunScheduledInstancesLaunchSpecificationPlacementInput
  RamdiskId: String
  SecurityGroupIds: [String]
  SubnetId: String
  UserData: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationMonitoringInput {
  Enabled: Boolean
}

input AwsEC2RunScheduledInstancesLaunchSpecificationNetworkInterfacesInput {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2RunScheduledInstancesLaunchSpecificationNetworkInterfacesIpv6AddressesInput]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddressConfigs: [AwsEC2RunScheduledInstancesLaunchSpecificationNetworkInterfacesPrivateIpAddressConfigsInput]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationNetworkInterfacesIpv6AddressesInput {
  Ipv6Address: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationNetworkInterfacesPrivateIpAddressConfigsInput {
  Primary: Boolean
  PrivateIpAddress: String
}

input AwsEC2RunScheduledInstancesLaunchSpecificationPlacementInput {
  AvailabilityZone: String
  GroupName: String
}

type AwsEC2RunScheduledInstancesOutput {
  InstanceIdSet: [String]
}

type AwsEC2S19 {
  Arn: String
  Name: String
}

input AwsEC2S19Input {
  Arn: String
  Name: String
}

type AwsEC2S1b {
  AssociationId: String
  InstanceId: String
  IamInstanceProfile: AwsEC2S1c
  State: String
  Timestamp: Date
}

type AwsEC2S1c {
  Arn: String
  Id: String
}

type AwsEC2S1i {
  AssociationId: String
  Ipv6CidrBlock: String
  Ipv6CidrBlockState: AwsEC2S1iIpv6CidrBlockState
}

type AwsEC2S1iIpv6CidrBlockState {
  State: String
  StatusMessage: String
}

type AwsEC2S1n {
  AssociationId: String
  Ipv6CidrBlock: String
  Ipv6CidrBlockState: AwsEC2S1o
}

type AwsEC2S1o {
  State: String
  StatusMessage: String
}

type AwsEC2S1q {
  AssociationId: String
  CidrBlock: String
  CidrBlockState: AwsEC2S1o
}

type AwsEC2S1y {
  AttachTime: Date
  Device: String
  InstanceId: String
  State: String
  VolumeId: String
  DeleteOnTermination: Boolean
}

type AwsEC2S22 {
  State: String
  VpcId: String
}

type AwsEC2S25 {
  FromPort: Int
  IpProtocol: String
  IpRanges: [AwsEC2S25IpRanges]
  Ipv6Ranges: [AwsEC2S25Ipv6Ranges]
  PrefixListIds: [AwsEC2S25PrefixListIds]
  ToPort: Int
  UserIdGroupPairs: [AwsEC2S2e]
}

input AwsEC2S25Input {
  FromPort: Int
  IpProtocol: String
  IpRanges: [AwsEC2S25IpRangesInput]
  Ipv6Ranges: [AwsEC2S25Ipv6RangesInput]
  PrefixListIds: [AwsEC2S25PrefixListIdsInput]
  ToPort: Int
  UserIdGroupPairs: [AwsEC2S2eInput]
}

type AwsEC2S25IpRanges {
  CidrIp: String
  Description: String
}

input AwsEC2S25IpRangesInput {
  CidrIp: String
  Description: String
}

type AwsEC2S25Ipv6Ranges {
  CidrIpv6: String
  Description: String
}

input AwsEC2S25Ipv6RangesInput {
  CidrIpv6: String
  Description: String
}

type AwsEC2S25PrefixListIds {
  Description: String
  PrefixListId: String
}

input AwsEC2S25PrefixListIdsInput {
  Description: String
  PrefixListId: String
}

type AwsEC2S2e {
  Description: String
  GroupId: String
  GroupName: String
  PeeringStatus: String
  UserId: String
  VpcId: String
  VpcPeeringConnectionId: String
}

input AwsEC2S2eInput {
  Description: String
  GroupId: String
  GroupName: String
  PeeringStatus: String
  UserId: String
  VpcId: String
  VpcPeeringConnectionId: String
}

type AwsEC2S2h {
  S3: AwsEC2S2hS3
}

input AwsEC2S2hInput {
  S3: AwsEC2S2hS3Input
}

type AwsEC2S2hS3 {
  AWSAccessKeyId: String
  Bucket: String
  Prefix: String
  UploadPolicy: JSON
  UploadPolicySignature: String
}

input AwsEC2S2hS3Input {
  AWSAccessKeyId: String
  Bucket: String
  Prefix: String
  UploadPolicy: JSON
  UploadPolicySignature: String
}

type AwsEC2S2l {
  BundleId: String
  BundleTaskError: AwsEC2S2lBundleTaskError
  InstanceId: String
  Progress: String
  StartTime: Date
  State: String
  Storage: AwsEC2S2h
  UpdateTime: Date
}

type AwsEC2S2lBundleTaskError {
  Code: String
  Message: String
}

type AwsEC2S2w {
  ClientToken: String
  CreateDate: Date
  InstanceCounts: [AwsEC2S2wInstanceCounts]
  PriceSchedules: [AwsEC2S2wPriceSchedules]
  ReservedInstancesId: String
  ReservedInstancesListingId: String
  Status: String
  StatusMessage: String
  Tags: [AwsEC2Sr]
  UpdateDate: Date
}

type AwsEC2S2wInstanceCounts {
  InstanceCount: Int
  State: String
}

type AwsEC2S2wPriceSchedules {
  Active: Boolean
  CurrencyCode: String
  Price: JSON
  Term: JSON
}

type AwsEC2S3x {
  BgpAsn: String
  CustomerGatewayId: String
  IpAddress: String
  State: String
  Type: String
  Tags: [AwsEC2Sr]
}

type AwsEC2S40 {
  AvailabilityZone: String
  AvailableIpAddressCount: Int
  CidrBlock: String
  DefaultForAz: Boolean
  MapPublicIpOnLaunch: Boolean
  State: String
  SubnetId: String
  VpcId: String
  AssignIpv6AddressOnCreation: Boolean
  Ipv6CidrBlockAssociationSet: [AwsEC2S1i]
  Tags: [AwsEC2Sr]
}

type AwsEC2S45 {
  CidrBlock: String
  DhcpOptionsId: String
  State: String
  VpcId: String
  InstanceTenancy: String
  Ipv6CidrBlockAssociationSet: [AwsEC2S1n]
  CidrBlockAssociationSet: [AwsEC2S1q]
  IsDefault: Boolean
  Tags: [AwsEC2Sr]
}

type AwsEC2S4e {
  DhcpConfigurations: [AwsEC2S4eDhcpConfigurations]
  DhcpOptionsId: String
  Tags: [AwsEC2Sr]
}

type AwsEC2S4eDhcpConfigurations {
  Key: String
  Values: [AwsEC2S4i]
}

type AwsEC2S4i {
  Value: String
}

input AwsEC2S4iInput {
  Value: String
}

type AwsEC2S4l {
  Attachments: [AwsEC2S4m]
  EgressOnlyInternetGatewayId: String
}

type AwsEC2S4m {
  State: String
  VpcId: String
}

input AwsEC2S4uInput {
  Bucket: String
  Key: String
}

type AwsEC2S4y {
  DeviceName: String
  VirtualName: String
  Ebs: AwsEC2S4yEbs
  NoDevice: String
}

type AwsEC2S4yEbs {
  Encrypted: Boolean
  DeleteOnTermination: Boolean
  Iops: Int
  KmsKeyId: String
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

input AwsEC2S4yEbsInput {
  Encrypted: Boolean
  DeleteOnTermination: Boolean
  Iops: Int
  KmsKeyId: String
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

input AwsEC2S4yInput {
  DeviceName: String
  VirtualName: String
  Ebs: AwsEC2S4yEbsInput
  NoDevice: String
}

type AwsEC2S58 {
  Description: String
  ExportTaskId: String
  ExportToS3Task: AwsEC2S58ExportToS3Task
  InstanceExportDetails: AwsEC2S58InstanceExportDetails
  State: String
  StatusMessage: String
}

type AwsEC2S58ExportToS3Task {
  ContainerFormat: String
  DiskImageFormat: String
  S3Bucket: String
  S3Key: String
}

type AwsEC2S58InstanceExportDetails {
  InstanceId: String
  TargetEnvironment: String
}

type AwsEC2S5e {
  Attachments: [AwsEC2S4m]
  InternetGatewayId: String
  Tags: [AwsEC2Sr]
}

input AwsEC2S5Input {
  InstanceCount: Int
  OfferingId: String!
}

input AwsEC2S5kBlockDeviceMappingsEbsInput {
  Encrypted: Boolean
  DeleteOnTermination: Boolean
  Iops: Int
  KmsKeyId: String
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

input AwsEC2S5kBlockDeviceMappingsInput {
  DeviceName: String
  VirtualName: String
  Ebs: AwsEC2S5kBlockDeviceMappingsEbsInput
  NoDevice: String
}

input AwsEC2S5kIamInstanceProfileInput {
  Arn: String
  Name: String
}

input AwsEC2S5kInput {
  KernelId: String
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S5kIamInstanceProfileInput
  BlockDeviceMappings: [AwsEC2S5kBlockDeviceMappingsInput]
  NetworkInterfaces: [AwsEC2S5kNetworkInterfacesInput]
  ImageId: String
  InstanceType: String
  KeyName: String
  Monitoring: AwsEC2S5kMonitoringInput
  Placement: AwsEC2S5kPlacementInput
  RamDiskId: String
  DisableApiTermination: Boolean
  InstanceInitiatedShutdownBehavior: String
  UserData: String
  TagSpecifications: [AwsEC2S5kTagSpecificationsInput]
  ElasticGpuSpecifications: [AwsEC2S64Input]
  SecurityGroupIds: [String]
  SecurityGroups: [String]
  InstanceMarketOptions: AwsEC2S5kInstanceMarketOptionsInput
  CreditSpecification: AwsEC2S6bInput
}

input AwsEC2S5kInstanceMarketOptionsInput {
  MarketType: String
  SpotOptions: AwsEC2S5kInstanceMarketOptionsSpotOptionsInput
}

input AwsEC2S5kInstanceMarketOptionsSpotOptionsInput {
  MaxPrice: String
  SpotInstanceType: String
  BlockDurationMinutes: Int
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

input AwsEC2S5kMonitoringInput {
  Enabled: Boolean
}

input AwsEC2S5kNetworkInterfacesInput {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2S5kNetworkInterfacesIpv6AddressesInput]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2S5uInput]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

input AwsEC2S5kNetworkInterfacesIpv6AddressesInput {
  Ipv6Address: String
}

input AwsEC2S5kPlacementInput {
  AvailabilityZone: String
  Affinity: String
  GroupName: String
  HostId: String
  Tenancy: String
  SpreadDomain: String
}

input AwsEC2S5kTagSpecificationsInput {
  ResourceType: String
  Tags: [AwsEC2SrInput]
}

type AwsEC2S5u {
  Primary: Boolean
  PrivateIpAddress: String!
}

input AwsEC2S5uInput {
  Primary: Boolean
  PrivateIpAddress: String!
}

input AwsEC2S64Input {
  Type: String!
}

input AwsEC2S6bInput {
  CpuCredits: String!
}

type AwsEC2S6d {
  LaunchTemplateId: String
  LaunchTemplateName: String
  CreateTime: Date
  CreatedBy: String
  DefaultVersionNumber: JSON
  LatestVersionNumber: JSON
  Tags: [AwsEC2Sr]
}

type AwsEC2S6g {
  LaunchTemplateId: String
  LaunchTemplateName: String
  VersionNumber: JSON
  VersionDescription: String
  CreateTime: Date
  CreatedBy: String
  DefaultVersion: Boolean
  LaunchTemplateData: AwsEC2S6h
}

type AwsEC2S6h {
  KernelId: String
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S6hIamInstanceProfile
  BlockDeviceMappings: [AwsEC2S6hBlockDeviceMappings]
  NetworkInterfaces: [AwsEC2S6hNetworkInterfaces]
  ImageId: String
  InstanceType: String
  KeyName: String
  Monitoring: AwsEC2S6hMonitoring
  Placement: AwsEC2S6hPlacement
  RamDiskId: String
  DisableApiTermination: Boolean
  InstanceInitiatedShutdownBehavior: String
  UserData: String
  TagSpecifications: [AwsEC2S6hTagSpecifications]
  ElasticGpuSpecifications: [AwsEC2S6hElasticGpuSpecifications]
  SecurityGroupIds: [String]
  SecurityGroups: [String]
  InstanceMarketOptions: AwsEC2S6hInstanceMarketOptions
  CreditSpecification: AwsEC2S6hCreditSpecification
}

type AwsEC2S6hBlockDeviceMappings {
  DeviceName: String
  VirtualName: String
  Ebs: AwsEC2S6hBlockDeviceMappingsEbs
  NoDevice: String
}

type AwsEC2S6hBlockDeviceMappingsEbs {
  Encrypted: Boolean
  DeleteOnTermination: Boolean
  Iops: Int
  KmsKeyId: String
  SnapshotId: String
  VolumeSize: Int
  VolumeType: String
}

type AwsEC2S6hCreditSpecification {
  CpuCredits: String
}

type AwsEC2S6hElasticGpuSpecifications {
  Type: String
}

type AwsEC2S6hIamInstanceProfile {
  Arn: String
  Name: String
}

type AwsEC2S6hInstanceMarketOptions {
  MarketType: String
  SpotOptions: AwsEC2S6hInstanceMarketOptionsSpotOptions
}

type AwsEC2S6hInstanceMarketOptionsSpotOptions {
  MaxPrice: String
  SpotInstanceType: String
  BlockDurationMinutes: Int
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

type AwsEC2S6hMonitoring {
  Enabled: Boolean
}

type AwsEC2S6hNetworkInterfaces {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2S6o]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2S5u]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

type AwsEC2S6hPlacement {
  AvailabilityZone: String
  Affinity: String
  GroupName: String
  HostId: String
  Tenancy: String
  SpreadDomain: String
}

type AwsEC2S6hTagSpecifications {
  ResourceType: String
  Tags: [AwsEC2Sr]
}

type AwsEC2S6o {
  Ipv6Address: String
}

input AwsEC2S6oInput {
  Ipv6Address: String
}

type AwsEC2S71 {
  CreateTime: Date
  DeleteTime: Date
  FailureCode: String
  FailureMessage: String
  NatGatewayAddresses: [AwsEC2S71NatGatewayAddresses]
  NatGatewayId: String
  ProvisionedBandwidth: AwsEC2S71ProvisionedBandwidth
  State: String
  SubnetId: String
  VpcId: String
  Tags: [AwsEC2Sr]
}

type AwsEC2S71NatGatewayAddresses {
  AllocationId: String
  NetworkInterfaceId: String
  PrivateIp: String
  PublicIp: String
}

type AwsEC2S71ProvisionedBandwidth {
  ProvisionTime: Date
  Provisioned: String
  RequestTime: Date
  Requested: String
  Status: String
}

type AwsEC2S78 {
  Associations: [AwsEC2S78Associations]
  Entries: [AwsEC2S78Entries]
  IsDefault: Boolean
  NetworkAclId: String
  Tags: [AwsEC2Sr]
  VpcId: String
}

type AwsEC2S78Associations {
  NetworkAclAssociationId: String
  NetworkAclId: String
  SubnetId: String
}

type AwsEC2S78Entries {
  CidrBlock: String
  Egress: Boolean
  IcmpTypeCode: AwsEC2S7d
  Ipv6CidrBlock: String
  PortRange: AwsEC2S7e
  Protocol: String
  RuleAction: String
  RuleNumber: Int
}

type AwsEC2S7d {
  Code: Int
  Type: Int
}

input AwsEC2S7dInput {
  Code: Int
  Type: Int
}

type AwsEC2S7e {
  From: Int
  To: Int
}

input AwsEC2S7eInput {
  From: Int
  To: Int
}

type AwsEC2S7j {
  Association: AwsEC2S7k
  Attachment: AwsEC2S7l
  AvailabilityZone: String
  Description: String
  Groups: [AwsEC2S7m]
  InterfaceType: String
  Ipv6Addresses: [AwsEC2S7jIpv6Addresses]
  MacAddress: String
  NetworkInterfaceId: String
  OwnerId: String
  PrivateDnsName: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2S7jPrivateIpAddresses]
  RequesterId: String
  RequesterManaged: Boolean
  SourceDestCheck: Boolean
  Status: String
  SubnetId: String
  TagSet: [AwsEC2Sr]
  VpcId: String
}

type AwsEC2S7jIpv6Addresses {
  Ipv6Address: String
}

type AwsEC2S7jPrivateIpAddresses {
  Association: AwsEC2S7k
  Primary: Boolean
  PrivateDnsName: String
  PrivateIpAddress: String
}

type AwsEC2S7k {
  AllocationId: String
  AssociationId: String
  IpOwnerId: String
  PublicDnsName: String
  PublicIp: String
}

type AwsEC2S7l {
  AttachTime: Date
  AttachmentId: String
  DeleteOnTermination: Boolean
  DeviceIndex: Int
  InstanceId: String
  InstanceOwnerId: String
  Status: String
}

type AwsEC2S7m {
  GroupName: String
  GroupId: String
}

input AwsEC2S7mInput {
  GroupName: String
  GroupId: String
}

type AwsEC2S7x {
  NetworkInterfacePermissionId: String
  NetworkInterfaceId: String
  AwsAccountId: String
  AwsService: String
  Permission: String
  PermissionState: AwsEC2S7xPermissionState
}

type AwsEC2S7xPermissionState {
  State: String
  StatusMessage: String
}

type AwsEC2S8a {
  Associations: [AwsEC2S8aAssociations]
  PropagatingVgws: [AwsEC2S8aPropagatingVgws]
  RouteTableId: String
  Routes: [AwsEC2S8aRoutes]
  Tags: [AwsEC2Sr]
  VpcId: String
}

type AwsEC2S8aAssociations {
  Main: Boolean
  RouteTableAssociationId: String
  RouteTableId: String
  SubnetId: String
}

type AwsEC2S8aPropagatingVgws {
  GatewayId: String
}

type AwsEC2S8aRoutes {
  DestinationCidrBlock: String
  DestinationIpv6CidrBlock: String
  DestinationPrefixListId: String
  EgressOnlyInternetGatewayId: String
  GatewayId: String
  InstanceId: String
  InstanceOwnerId: String
  NatGatewayId: String
  NetworkInterfaceId: String
  Origin: String
  State: String
  VpcPeeringConnectionId: String
}

type AwsEC2S8m {
  DataEncryptionKeyId: String
  Description: String
  Encrypted: Boolean
  KmsKeyId: String
  OwnerId: String
  Progress: String
  SnapshotId: String
  StartTime: Date
  State: String
  StateMessage: String
  VolumeId: String
  VolumeSize: Int
  OwnerAlias: String
  Tags: [AwsEC2Sr]
}

type AwsEC2S8q {
  Bucket: String
  Fault: AwsEC2S8r
  OwnerId: String
  Prefix: String
  State: String
}

type AwsEC2S8r {
  Code: String
  Message: String
}

input AwsEC2S8yInput {
  ResourceType: String
  Tags: [AwsEC2SrInput]
}

type AwsEC2S90 {
  Attachments: [AwsEC2S1y]
  AvailabilityZone: String
  CreateTime: Date
  Encrypted: Boolean
  KmsKeyId: String
  Size: Int
  SnapshotId: String
  State: String
  VolumeId: String
  Iops: Int
  Tags: [AwsEC2Sr]
  VolumeType: String
}

type AwsEC2S98 {
  VpcEndpointId: String
  VpcEndpointType: String
  VpcId: String
  ServiceName: String
  State: String
  PolicyDocument: String
  RouteTableIds: [String]
  SubnetIds: [String]
  Groups: [AwsEC2S98Groups]
  PrivateDnsEnabled: Boolean
  NetworkInterfaceIds: [String]
  DnsEntries: [AwsEC2S98DnsEntries]
  CreationTimestamp: Date
}

type AwsEC2S98DnsEntries {
  DnsName: String
  HostedZoneId: String
}

type AwsEC2S98Groups {
  GroupId: String
  GroupName: String
}

type AwsEC2S9g {
  ConnectionNotificationId: String
  ServiceId: String
  VpcEndpointId: String
  ConnectionNotificationType: String
  ConnectionNotificationArn: String
  ConnectionEvents: [String]
  ConnectionNotificationState: String
}

type AwsEC2S9l {
  ServiceType: [AwsEC2S9m]
  ServiceId: String
  ServiceName: String
  ServiceState: String
  AvailabilityZones: [String]
  AcceptanceRequired: Boolean
  NetworkLoadBalancerArns: [String]
  BaseEndpointDnsNames: [String]
  PrivateDnsName: String
}

type AwsEC2S9m {
  ServiceType: String
}

type AwsEC2S9x {
  CustomerGatewayConfiguration: String
  CustomerGatewayId: String
  Category: String
  State: String
  Type: String
  VpnConnectionId: String
  VpnGatewayId: String
  Options: AwsEC2S9xOptions
  Routes: [AwsEC2S9xRoutes]
  Tags: [AwsEC2Sr]
  VgwTelemetry: [AwsEC2S9xVgwTelemetry]
}

type AwsEC2S9xOptions {
  StaticRoutesOnly: Boolean
}

type AwsEC2S9xRoutes {
  DestinationCidrBlock: String
  Source: String
  State: String
}

type AwsEC2S9xVgwTelemetry {
  AcceptedRouteCount: Int
  LastStatusChange: Date
  OutsideIpAddress: String
  Status: String
  StatusMessage: String
}

type AwsEC2Sa9 {
  AvailabilityZone: String
  State: String
  Type: String
  VpcAttachments: [AwsEC2S22]
  VpnGatewayId: String
  AmazonSideAsn: JSON
  Tags: [AwsEC2Sr]
}

input AwsEC2SbyInput {
  Name: String
  Values: [String]
}

type AwsEC2Scq {
  ConversionTaskId: String!
  ExpirationTime: String
  ImportInstance: AwsEC2ScqImportInstance
  ImportVolume: AwsEC2ScqImportVolume
  State: String!
  StatusMessage: String
  Tags: [AwsEC2Sr]
}

type AwsEC2ScqImportInstance {
  Description: String
  InstanceId: String
  Platform: String
  Volumes: [AwsEC2ScqImportInstanceVolumes]!
}

type AwsEC2ScqImportInstanceVolumes {
  AvailabilityZone: String!
  BytesConverted: JSON!
  Description: String
  Image: AwsEC2Scv!
  Status: String!
  StatusMessage: String
  Volume: AwsEC2Scw!
}

type AwsEC2ScqImportVolume {
  AvailabilityZone: String!
  BytesConverted: JSON!
  Description: String
  Image: AwsEC2Scv!
  Volume: AwsEC2Scw!
}

type AwsEC2Scv {
  Checksum: String
  Format: String!
  ImportManifestUrl: String!
  Size: JSON!
}

type AwsEC2Scw {
  Id: String!
  Size: JSON
}

type AwsEC2Sd {
  Error: AwsEC2SdError!
  ResourceId: String
}

type AwsEC2SdError {
  Code: String!
  Message: String!
}

type AwsEC2Sdu {
  FpgaImageId: String
  Name: String
  Description: String
  LoadPermissions: [AwsEC2SduLoadPermissions]
  ProductCodes: [AwsEC2Sdy]
}

type AwsEC2SduLoadPermissions {
  UserId: String
  Group: String
}

type AwsEC2Sdy {
  ProductCodeId: String
  ProductCodeType: String
}

type AwsEC2Sf6 {
  Deadline: Date
  Resource: String
  UseLongIds: Boolean
}

type AwsEC2Sfe {
  Group: String
  UserId: String
}

input AwsEC2SfeInput {
  Group: String
  UserId: String
}

type AwsEC2Sfr {
  Code: String
  Message: String
}

type AwsEC2Sfy {
  Description: String
  DeviceName: String
  DiskImageSize: JSON
  Format: String
  Progress: String
  SnapshotId: String
  Status: String
  StatusMessage: String
  Url: String
  UserBucket: AwsEC2Sg0
}

type AwsEC2Sg0 {
  S3Bucket: String
  S3Key: String
}

type AwsEC2Sg5 {
  Description: String
  DiskImageSize: JSON
  Format: String
  Progress: String
  SnapshotId: String
  Status: String
  StatusMessage: String
  Url: String
  UserBucket: AwsEC2Sg0
}

type AwsEC2Sg9 {
  DeviceName: String
  Ebs: AwsEC2Sg9Ebs
}

type AwsEC2Sg9Ebs {
  AttachTime: Date
  DeleteOnTermination: Boolean
  Status: String
  VolumeId: String
}

type AwsEC2Sgc {
  Value: Boolean
}

input AwsEC2SgcInput {
  Value: Boolean
}

type AwsEC2Sgo {
  Code: Int
  Name: String
}

type AwsEC2Sgq {
  Details: [AwsEC2SgqDetails]
  Status: String
}

type AwsEC2SgqDetails {
  ImpairedSince: Date
  Name: String
  Status: String
}

type AwsEC2Sgz {
  Groups: [AwsEC2S7m]
  Instances: [AwsEC2SgzInstances]
  OwnerId: String
  RequesterId: String
  ReservationId: String
}

type AwsEC2SgzInstances {
  AmiLaunchIndex: Int
  ImageId: String
  InstanceId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  LaunchTime: Date
  Monitoring: AwsEC2Sh2
  Placement: AwsEC2Sh4
  Platform: String
  PrivateDnsName: String
  PrivateIpAddress: String
  ProductCodes: [AwsEC2Sdy]
  PublicDnsName: String
  PublicIpAddress: String
  RamdiskId: String
  State: AwsEC2Sgo
  StateTransitionReason: String
  SubnetId: String
  VpcId: String
  Architecture: String
  BlockDeviceMappings: [AwsEC2Sg9]
  ClientToken: String
  EbsOptimized: Boolean
  EnaSupport: Boolean
  Hypervisor: String
  IamInstanceProfile: AwsEC2S1c
  InstanceLifecycle: String
  ElasticGpuAssociations: [AwsEC2SgzInstancesElasticGpuAssociations]
  NetworkInterfaces: [AwsEC2SgzInstancesNetworkInterfaces]
  RootDeviceName: String
  RootDeviceType: String
  SecurityGroups: [AwsEC2S7m]
  SourceDestCheck: Boolean
  SpotInstanceRequestId: String
  SriovNetSupport: String
  StateReason: AwsEC2Sfr
  Tags: [AwsEC2Sr]
  VirtualizationType: String
}

type AwsEC2SgzInstancesElasticGpuAssociations {
  ElasticGpuId: String
  ElasticGpuAssociationId: String
  ElasticGpuAssociationState: String
  ElasticGpuAssociationTime: String
}

type AwsEC2SgzInstancesNetworkInterfaces {
  Association: AwsEC2Sha
  Attachment: AwsEC2SgzInstancesNetworkInterfacesAttachment
  Description: String
  Groups: [AwsEC2S7m]
  Ipv6Addresses: [AwsEC2S6o]
  MacAddress: String
  NetworkInterfaceId: String
  OwnerId: String
  PrivateDnsName: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2SgzInstancesNetworkInterfacesPrivateIpAddresses]
  SourceDestCheck: Boolean
  Status: String
  SubnetId: String
  VpcId: String
}

type AwsEC2SgzInstancesNetworkInterfacesAttachment {
  AttachTime: Date
  AttachmentId: String
  DeleteOnTermination: Boolean
  DeviceIndex: Int
  Status: String
}

type AwsEC2SgzInstancesNetworkInterfacesPrivateIpAddresses {
  Association: AwsEC2Sha
  Primary: Boolean
  PrivateDnsName: String
  PrivateIpAddress: String
}

type AwsEC2Sh {
  AccepterVpcInfo: AwsEC2Si
  ExpirationTime: Date
  RequesterVpcInfo: AwsEC2Si
  Status: AwsEC2ShStatus
  Tags: [AwsEC2Sr]
  VpcPeeringConnectionId: String
}

type AwsEC2Sh2 {
  State: String
}

type AwsEC2Sh4 {
  AvailabilityZone: String
  Affinity: String
  GroupName: String
  HostId: String
  Tenancy: String
  SpreadDomain: String
}

input AwsEC2Sh4Input {
  AvailabilityZone: String
  Affinity: String
  GroupName: String
  HostId: String
  Tenancy: String
  SpreadDomain: String
}

type AwsEC2Sha {
  IpOwnerId: String
  PublicDnsName: String
  PublicIp: String
}

type AwsEC2ShStatus {
  Code: String
  Message: String
}

type AwsEC2Si {
  CidrBlock: String
  Ipv6CidrBlockSet: [AwsEC2SiIpv6CidrBlockSet]
  CidrBlockSet: [AwsEC2SiCidrBlockSet]
  OwnerId: String
  PeeringOptions: AwsEC2SiPeeringOptions
  VpcId: String
}

type AwsEC2SiCidrBlockSet {
  CidrBlock: String
}

type AwsEC2SiIpv6CidrBlockSet {
  Ipv6CidrBlock: String
}

type AwsEC2SiPeeringOptions {
  AllowDnsResolutionFromRemoteVpc: Boolean
  AllowEgressFromLocalClassicLinkToRemoteVpc: Boolean
  AllowEgressFromLocalVpcToRemoteClassicLink: Boolean
}

type AwsEC2Sj4 {
  Amount: JSON
  Frequency: String
}

type AwsEC2Sjh {
  AvailabilityZone: String
  InstanceCount: Int
  InstanceType: String
  Platform: String
  Scope: String
}

input AwsEC2SjhInput {
  AvailabilityZone: String
  InstanceCount: Int
  InstanceType: String
  Platform: String
  Scope: String
}

type AwsEC2Sk1 {
  Frequency: String
  Interval: Int
  OccurrenceDaySet: [Int]
  OccurrenceRelativeToEnd: Boolean
  OccurrenceUnit: String
}

type AwsEC2Sk8 {
  AvailabilityZone: String
  CreateDate: Date
  HourlyPrice: String
  InstanceCount: Int
  InstanceType: String
  NetworkPlatform: String
  NextSlotStartTime: Date
  Platform: String
  PreviousSlotEndTime: Date
  Recurrence: AwsEC2Sk1
  ScheduledInstanceId: String
  SlotDurationInHours: Int
  TermEndDate: Date
  TermStartDate: Date
  TotalScheduledInstanceHours: Int
}

type AwsEC2Skm {
  Group: String
  UserId: String
}

input AwsEC2SkmInput {
  Group: String
  UserId: String
}

type AwsEC2Slb {
  AllocationStrategy: String
  ClientToken: String
  ExcessCapacityTerminationPolicy: String
  FulfilledCapacity: JSON
  IamFleetRole: String!
  LaunchSpecifications: [AwsEC2SlbLaunchSpecifications]
  LaunchTemplateConfigs: [AwsEC2SlbLaunchTemplateConfigs]
  SpotPrice: String
  TargetCapacity: Int!
  TerminateInstancesWithExpiration: Boolean
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  ReplaceUnhealthyInstances: Boolean
  InstanceInterruptionBehavior: String
  LoadBalancersConfig: AwsEC2SlbLoadBalancersConfig
}

input AwsEC2SlbInput {
  AllocationStrategy: String
  ClientToken: String
  ExcessCapacityTerminationPolicy: String
  FulfilledCapacity: JSON
  IamFleetRole: String!
  LaunchSpecifications: [AwsEC2SlbLaunchSpecificationsInput]
  LaunchTemplateConfigs: [AwsEC2SlbLaunchTemplateConfigsInput]
  SpotPrice: String
  TargetCapacity: Int!
  TerminateInstancesWithExpiration: Boolean
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  ReplaceUnhealthyInstances: Boolean
  InstanceInterruptionBehavior: String
  LoadBalancersConfig: AwsEC2SlbLoadBalancersConfigInput
}

type AwsEC2SlbLaunchSpecifications {
  SecurityGroups: [AwsEC2S7m]
  AddressingType: String
  BlockDeviceMappings: [AwsEC2S4y]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S19
  ImageId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  Monitoring: AwsEC2SlbLaunchSpecificationsMonitoring
  NetworkInterfaces: [AwsEC2Slh]
  Placement: AwsEC2Slj
  RamdiskId: String
  SpotPrice: String
  SubnetId: String
  UserData: String
  WeightedCapacity: JSON
  TagSpecifications: [AwsEC2SlbLaunchSpecificationsTagSpecifications]
}

input AwsEC2SlbLaunchSpecificationsInput {
  SecurityGroups: [AwsEC2S7mInput]
  AddressingType: String
  BlockDeviceMappings: [AwsEC2S4yInput]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S19Input
  ImageId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  Monitoring: AwsEC2SlbLaunchSpecificationsMonitoringInput
  NetworkInterfaces: [AwsEC2SlhInput]
  Placement: AwsEC2SljInput
  RamdiskId: String
  SpotPrice: String
  SubnetId: String
  UserData: String
  WeightedCapacity: JSON
  TagSpecifications: [AwsEC2SlbLaunchSpecificationsTagSpecificationsInput]
}

type AwsEC2SlbLaunchSpecificationsMonitoring {
  Enabled: Boolean
}

input AwsEC2SlbLaunchSpecificationsMonitoringInput {
  Enabled: Boolean
}

type AwsEC2SlbLaunchSpecificationsTagSpecifications {
  ResourceType: String
  Tags: [AwsEC2Sr]
}

input AwsEC2SlbLaunchSpecificationsTagSpecificationsInput {
  ResourceType: String
  Tags: [AwsEC2SrInput]
}

type AwsEC2SlbLaunchTemplateConfigs {
  LaunchTemplateSpecification: AwsEC2SlbLaunchTemplateConfigsLaunchTemplateSpecification
  Overrides: [AwsEC2SlbLaunchTemplateConfigsOverrides]
}

input AwsEC2SlbLaunchTemplateConfigsInput {
  LaunchTemplateSpecification: AwsEC2SlbLaunchTemplateConfigsLaunchTemplateSpecificationInput
  Overrides: [AwsEC2SlbLaunchTemplateConfigsOverridesInput]
}

type AwsEC2SlbLaunchTemplateConfigsLaunchTemplateSpecification {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

input AwsEC2SlbLaunchTemplateConfigsLaunchTemplateSpecificationInput {
  LaunchTemplateId: String
  LaunchTemplateName: String
  Version: String
}

type AwsEC2SlbLaunchTemplateConfigsOverrides {
  InstanceType: String
  SpotPrice: String
  SubnetId: String
  AvailabilityZone: String
  WeightedCapacity: JSON
}

input AwsEC2SlbLaunchTemplateConfigsOverridesInput {
  InstanceType: String
  SpotPrice: String
  SubnetId: String
  AvailabilityZone: String
  WeightedCapacity: JSON
}

type AwsEC2SlbLoadBalancersConfig {
  ClassicLoadBalancersConfig: AwsEC2SlbLoadBalancersConfigClassicLoadBalancersConfig
  TargetGroupsConfig: AwsEC2SlbLoadBalancersConfigTargetGroupsConfig
}

type AwsEC2SlbLoadBalancersConfigClassicLoadBalancersConfig {
  ClassicLoadBalancers: [AwsEC2SlbLoadBalancersConfigClassicLoadBalancersConfigClassicLoadBalancers]!
}

type AwsEC2SlbLoadBalancersConfigClassicLoadBalancersConfigClassicLoadBalancers {
  Name: String!
}

input AwsEC2SlbLoadBalancersConfigClassicLoadBalancersConfigClassicLoadBalancersInput {
  Name: String!
}

input AwsEC2SlbLoadBalancersConfigClassicLoadBalancersConfigInput {
  ClassicLoadBalancers: [AwsEC2SlbLoadBalancersConfigClassicLoadBalancersConfigClassicLoadBalancersInput]!
}

input AwsEC2SlbLoadBalancersConfigInput {
  ClassicLoadBalancersConfig: AwsEC2SlbLoadBalancersConfigClassicLoadBalancersConfigInput
  TargetGroupsConfig: AwsEC2SlbLoadBalancersConfigTargetGroupsConfigInput
}

type AwsEC2SlbLoadBalancersConfigTargetGroupsConfig {
  TargetGroups: [AwsEC2SlbLoadBalancersConfigTargetGroupsConfigTargetGroups]!
}

input AwsEC2SlbLoadBalancersConfigTargetGroupsConfigInput {
  TargetGroups: [AwsEC2SlbLoadBalancersConfigTargetGroupsConfigTargetGroupsInput]!
}

type AwsEC2SlbLoadBalancersConfigTargetGroupsConfigTargetGroups {
  Arn: String!
}

input AwsEC2SlbLoadBalancersConfigTargetGroupsConfigTargetGroupsInput {
  Arn: String!
}

type AwsEC2Slh {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2S6o]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2S5u]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

input AwsEC2SlhInput {
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: Int
  Groups: [String]
  Ipv6AddressCount: Int
  Ipv6Addresses: [AwsEC2S6oInput]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsEC2S5uInput]
  SecondaryPrivateIpAddressCount: Int
  SubnetId: String
}

type AwsEC2Slj {
  AvailabilityZone: String
  GroupName: String
  Tenancy: String
}

input AwsEC2SljInput {
  AvailabilityZone: String
  GroupName: String
  Tenancy: String
}

type AwsEC2Sm1 {
  ActualBlockHourlyPrice: String
  AvailabilityZoneGroup: String
  BlockDurationMinutes: Int
  CreateTime: Date
  Fault: AwsEC2S8r
  InstanceId: String
  LaunchGroup: String
  LaunchSpecification: AwsEC2Sm1LaunchSpecification
  LaunchedAvailabilityZone: String
  ProductDescription: String
  SpotInstanceRequestId: String
  SpotPrice: String
  State: String
  Status: AwsEC2Sm1Status
  Tags: [AwsEC2Sr]
  Type: String
  ValidFrom: Date
  ValidUntil: Date
  InstanceInterruptionBehavior: String
}

type AwsEC2Sm1LaunchSpecification {
  UserData: String
  SecurityGroups: [AwsEC2S7m]
  AddressingType: String
  BlockDeviceMappings: [AwsEC2S4y]
  EbsOptimized: Boolean
  IamInstanceProfile: AwsEC2S19
  ImageId: String
  InstanceType: String
  KernelId: String
  KeyName: String
  NetworkInterfaces: [AwsEC2Slh]
  Placement: AwsEC2Slj
  RamdiskId: String
  SubnetId: String
  Monitoring: AwsEC2Sm4
}

type AwsEC2Sm1Status {
  Code: String
  Message: String
  UpdateTime: Date
}

type AwsEC2Sm4 {
  Enabled: Boolean!
}

input AwsEC2Sm4Input {
  Enabled: Boolean!
}

type AwsEC2Smh {
  FromPort: Int
  IpProtocol: String
  IpRanges: [String]
  PrefixListIds: [String]
  ToPort: Int
  UserIdGroupPairs: [AwsEC2S2e]
}

type AwsEC2Snh {
  VolumeId: String
  ModificationState: String
  StatusMessage: String
  TargetSize: Int
  TargetIops: Int
  TargetVolumeType: String
  OriginalSize: Int
  OriginalIops: Int
  OriginalVolumeType: String
  Progress: JSON
  StartTime: Date
  EndTime: Date
}

type AwsEC2Sps {
  CurrencyCode: String
  Duration: Int
  HostIdSet: [String]
  HostReservationId: String
  HourlyPrice: String
  InstanceFamily: String
  PaymentOption: String
  UpfrontPrice: String
}

type AwsEC2Sq0 {
  HourlyPrice: String
  RemainingTotalValue: String
  RemainingUpfrontValue: String
}

input AwsEC2Sq7Input {
  Comment: String
  UploadEnd: Date
  UploadSize: JSON
  UploadStart: Date
}

input AwsEC2SqaInput {
  S3Bucket: String
  S3Key: String
}

input AwsEC2SqfInput {
  Bytes: JSON!
  Format: String!
  ImportManifestUrl: String!
}

input AwsEC2SqgInput {
  Size: JSON!
}

input AwsEC2SqxInput {
  Group: String
  UserId: String
}

type AwsEC2Sr {
  Key: String
  Value: String
}

input AwsEC2SrInput {
  Key: String
  Value: String
}

input AwsEC2SsfInput {
  AllowDnsResolutionFromRemoteVpc: Boolean
  AllowEgressFromLocalClassicLinkToRemoteVpc: Boolean
  AllowEgressFromLocalVpcToRemoteClassicLink: Boolean
}

type AwsEC2Ssh {
  AllowDnsResolutionFromRemoteVpc: Boolean
  AllowEgressFromLocalClassicLinkToRemoteVpc: Boolean
  AllowEgressFromLocalVpcToRemoteClassicLink: Boolean
}

type AwsEC2Ssn {
  InstanceId: String
  Monitoring: AwsEC2Sh2
}

input AwsEC2StartInstancesInput {
  InstanceIds: [String]!
  AdditionalInfo: String
  DryRun: Boolean
}

type AwsEC2StartInstancesOutput {
  StartingInstances: [AwsEC2Suv]
}

input AwsEC2StopInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
  Force: Boolean
}

type AwsEC2StopInstancesOutput {
  StoppingInstances: [AwsEC2Suv]
}

type AwsEC2Suv {
  CurrentState: AwsEC2Sgo
  InstanceId: String
  PreviousState: AwsEC2Sgo
}

input AwsEC2TerminateInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
}

type AwsEC2TerminateInstancesOutput {
  TerminatingInstances: [AwsEC2Suv]
}

input AwsEC2UnassignIpv6AddressesInput {
  Ipv6Addresses: [String]!
  NetworkInterfaceId: String!
}

type AwsEC2UnassignIpv6AddressesOutput {
  NetworkInterfaceId: String
  UnassignedIpv6Addresses: [String]
}

input AwsEC2UnassignPrivateIpAddressesInput {
  NetworkInterfaceId: String!
  PrivateIpAddresses: [String]!
}

input AwsEC2UnmonitorInstancesInput {
  InstanceIds: [String]!
  DryRun: Boolean
}

type AwsEC2UnmonitorInstancesOutput {
  InstanceMonitorings: [AwsEC2Ssn]
}

input AwsEC2UpdateSecurityGroupRuleDescriptionsEgressInput {
  DryRun: Boolean
  GroupId: String
  GroupName: String
  IpPermissions: [AwsEC2S25Input]!
}

type AwsEC2UpdateSecurityGroupRuleDescriptionsEgressOutput {
  Return: Boolean
}

input AwsEC2UpdateSecurityGroupRuleDescriptionsIngressInput {
  DryRun: Boolean
  GroupId: String
  GroupName: String
  IpPermissions: [AwsEC2S25Input]!
}

type AwsEC2UpdateSecurityGroupRuleDescriptionsIngressOutput {
  Return: Boolean
}

# Amazon EC2 Container Registry (2015-09-21)
type AwsECR {
  batchCheckLayerAvailability(input: AwsECRBatchCheckLayerAvailabilityInput!, config: AwsConfig): AwsECRBatchCheckLayerAvailabilityOutput
  batchDeleteImage(input: AwsECRBatchDeleteImageInput!, config: AwsConfig): AwsECRBatchDeleteImageOutput
  batchGetImage(input: AwsECRBatchGetImageInput!, config: AwsConfig): AwsECRBatchGetImageOutput
  completeLayerUpload(input: AwsECRCompleteLayerUploadInput!, config: AwsConfig): AwsECRCompleteLayerUploadOutput
  createRepository(input: AwsECRCreateRepositoryInput!, config: AwsConfig): AwsECRCreateRepositoryOutput
  deleteLifecyclePolicy(input: AwsECRDeleteLifecyclePolicyInput!, config: AwsConfig): AwsECRDeleteLifecyclePolicyOutput
  deleteRepository(input: AwsECRDeleteRepositoryInput!, config: AwsConfig): AwsECRDeleteRepositoryOutput
  deleteRepositoryPolicy(input: AwsECRDeleteRepositoryPolicyInput!, config: AwsConfig): AwsECRDeleteRepositoryPolicyOutput
  describeImages(input: AwsECRDescribeImagesInput!, config: AwsConfig): AwsECRDescribeImagesOutput
  describeRepositories(input: AwsECRDescribeRepositoriesInput, config: AwsConfig): AwsECRDescribeRepositoriesOutput
  getAuthorizationToken(input: AwsECRGetAuthorizationTokenInput, config: AwsConfig): AwsECRGetAuthorizationTokenOutput
  getDownloadUrlForLayer(input: AwsECRGetDownloadUrlForLayerInput!, config: AwsConfig): AwsECRGetDownloadUrlForLayerOutput
  getLifecyclePolicy(input: AwsECRGetLifecyclePolicyInput!, config: AwsConfig): AwsECRGetLifecyclePolicyOutput
  getLifecyclePolicyPreview(input: AwsECRGetLifecyclePolicyPreviewInput!, config: AwsConfig): AwsECRGetLifecyclePolicyPreviewOutput
  getRepositoryPolicy(input: AwsECRGetRepositoryPolicyInput!, config: AwsConfig): AwsECRGetRepositoryPolicyOutput
  initiateLayerUpload(input: AwsECRInitiateLayerUploadInput!, config: AwsConfig): AwsECRInitiateLayerUploadOutput
  listImages(input: AwsECRListImagesInput!, config: AwsConfig): AwsECRListImagesOutput
  putImage(input: AwsECRPutImageInput!, config: AwsConfig): AwsECRPutImageOutput
  putLifecyclePolicy(input: AwsECRPutLifecyclePolicyInput!, config: AwsConfig): AwsECRPutLifecyclePolicyOutput
  setRepositoryPolicy(input: AwsECRSetRepositoryPolicyInput!, config: AwsConfig): AwsECRSetRepositoryPolicyOutput
  startLifecyclePolicyPreview(input: AwsECRStartLifecyclePolicyPreviewInput!, config: AwsConfig): AwsECRStartLifecyclePolicyPreviewOutput
  uploadLayerPart(input: AwsECRUploadLayerPartInput!, config: AwsConfig): AwsECRUploadLayerPartOutput
}

input AwsECRBatchCheckLayerAvailabilityInput {
  registryId: String
  repositoryName: String!
  layerDigests: [String]!
}

type AwsECRBatchCheckLayerAvailabilityOutput {
  layers: [AwsECRBatchCheckLayerAvailabilityOutputLayers]
  failures: [AwsECRBatchCheckLayerAvailabilityOutputFailures]
}

type AwsECRBatchCheckLayerAvailabilityOutputFailures {
  layerDigest: String
  failureCode: String
  failureReason: String
}

type AwsECRBatchCheckLayerAvailabilityOutputLayers {
  layerDigest: String
  layerAvailability: String
  layerSize: JSON
  mediaType: String
}

input AwsECRBatchDeleteImageInput {
  registryId: String
  repositoryName: String!
  imageIds: [AwsECRSjInput]!
}

type AwsECRBatchDeleteImageOutput {
  imageIds: [AwsECRSj]
  failures: [AwsECRSn]
}

input AwsECRBatchGetImageInput {
  registryId: String
  repositoryName: String!
  imageIds: [AwsECRSjInput]!
  acceptedMediaTypes: [String]
}

type AwsECRBatchGetImageOutput {
  images: [AwsECRSv]
  failures: [AwsECRSn]
}

input AwsECRCompleteLayerUploadInput {
  registryId: String
  repositoryName: String!
  uploadId: String!
  layerDigests: [String]!
}

type AwsECRCompleteLayerUploadOutput {
  registryId: String
  repositoryName: String
  uploadId: String
  layerDigest: String
}

input AwsECRCreateRepositoryInput {
  repositoryName: String!
}

type AwsECRCreateRepositoryOutput {
  repository: AwsECRS13
}

input AwsECRDeleteLifecyclePolicyInput {
  registryId: String
  repositoryName: String!
}

type AwsECRDeleteLifecyclePolicyOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
  lastEvaluatedAt: Date
}

input AwsECRDeleteRepositoryInput {
  registryId: String
  repositoryName: String!
  force: Boolean
}

type AwsECRDeleteRepositoryOutput {
  repository: AwsECRS13
}

input AwsECRDeleteRepositoryPolicyInput {
  registryId: String
  repositoryName: String!
}

type AwsECRDeleteRepositoryPolicyOutput {
  registryId: String
  repositoryName: String
  policyText: String
}

input AwsECRDescribeImagesFilterInput {
  tagStatus: String
}

input AwsECRDescribeImagesInput {
  registryId: String
  repositoryName: String!
  imageIds: [AwsECRSjInput]
  nextToken: String
  maxResults: Int
  filter: AwsECRDescribeImagesFilterInput
}

type AwsECRDescribeImagesOutput {
  imageDetails: [AwsECRDescribeImagesOutputImageDetails]
  nextToken: String
}

type AwsECRDescribeImagesOutputImageDetails {
  registryId: String
  repositoryName: String
  imageDigest: String
  imageTags: [String]
  imageSizeInBytes: JSON
  imagePushedAt: Date
}

input AwsECRDescribeRepositoriesInput {
  registryId: String
  repositoryNames: [String]
  nextToken: String
  maxResults: Int
}

type AwsECRDescribeRepositoriesOutput {
  repositories: [AwsECRS13]
  nextToken: String
}

input AwsECRGetAuthorizationTokenInput {
  registryIds: [String]
}

type AwsECRGetAuthorizationTokenOutput {
  authorizationData: [AwsECRGetAuthorizationTokenOutputAuthorizationData]
}

type AwsECRGetAuthorizationTokenOutputAuthorizationData {
  authorizationToken: String
  expiresAt: Date
  proxyEndpoint: String
}

input AwsECRGetDownloadUrlForLayerInput {
  registryId: String
  repositoryName: String!
  layerDigest: String!
}

type AwsECRGetDownloadUrlForLayerOutput {
  downloadUrl: String
  layerDigest: String
}

input AwsECRGetLifecyclePolicyInput {
  registryId: String
  repositoryName: String!
}

type AwsECRGetLifecyclePolicyOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
  lastEvaluatedAt: Date
}

input AwsECRGetLifecyclePolicyPreviewFilterInput {
  tagStatus: String
}

input AwsECRGetLifecyclePolicyPreviewInput {
  registryId: String
  repositoryName: String!
  imageIds: [AwsECRSjInput]
  nextToken: String
  maxResults: Int
  filter: AwsECRGetLifecyclePolicyPreviewFilterInput
}

type AwsECRGetLifecyclePolicyPreviewOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
  status: String
  nextToken: String
  previewResults: [AwsECRGetLifecyclePolicyPreviewOutputPreviewResults]
  summary: AwsECRGetLifecyclePolicyPreviewOutputSummary
}

type AwsECRGetLifecyclePolicyPreviewOutputPreviewResults {
  imageTags: [String]
  imageDigest: String
  imagePushedAt: Date
  action: AwsECRGetLifecyclePolicyPreviewOutputPreviewResultsAction
  appliedRulePriority: Int
}

type AwsECRGetLifecyclePolicyPreviewOutputPreviewResultsAction {
  type: String
}

type AwsECRGetLifecyclePolicyPreviewOutputSummary {
  expiringImageTotalCount: Int
}

input AwsECRGetRepositoryPolicyInput {
  registryId: String
  repositoryName: String!
}

type AwsECRGetRepositoryPolicyOutput {
  registryId: String
  repositoryName: String
  policyText: String
}

input AwsECRInitiateLayerUploadInput {
  registryId: String
  repositoryName: String!
}

type AwsECRInitiateLayerUploadOutput {
  uploadId: String
  partSize: JSON
}

input AwsECRListImagesFilterInput {
  tagStatus: String
}

input AwsECRListImagesInput {
  registryId: String
  repositoryName: String!
  nextToken: String
  maxResults: Int
  filter: AwsECRListImagesFilterInput
}

type AwsECRListImagesOutput {
  imageIds: [AwsECRSj]
  nextToken: String
}

input AwsECRPutImageInput {
  registryId: String
  repositoryName: String!
  imageManifest: String!
  imageTag: String
}

type AwsECRPutImageOutput {
  image: AwsECRSv
}

input AwsECRPutLifecyclePolicyInput {
  registryId: String
  repositoryName: String!
  lifecyclePolicyText: String!
}

type AwsECRPutLifecyclePolicyOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
}

type AwsECRS13 {
  repositoryArn: String
  registryId: String
  repositoryName: String
  repositoryUri: String
  createdAt: Date
}

input AwsECRSetRepositoryPolicyInput {
  registryId: String
  repositoryName: String!
  policyText: String!
  force: Boolean
}

type AwsECRSetRepositoryPolicyOutput {
  registryId: String
  repositoryName: String
  policyText: String
}

type AwsECRSj {
  imageDigest: String
  imageTag: String
}

input AwsECRSjInput {
  imageDigest: String
  imageTag: String
}

type AwsECRSn {
  imageId: AwsECRSj
  failureCode: String
  failureReason: String
}

input AwsECRStartLifecyclePolicyPreviewInput {
  registryId: String
  repositoryName: String!
  lifecyclePolicyText: String
}

type AwsECRStartLifecyclePolicyPreviewOutput {
  registryId: String
  repositoryName: String
  lifecyclePolicyText: String
  status: String
}

type AwsECRSv {
  registryId: String
  repositoryName: String
  imageId: AwsECRSj
  imageManifest: String
}

input AwsECRUploadLayerPartInput {
  registryId: String
  repositoryName: String!
  uploadId: String!
  partFirstByte: JSON!
  partLastByte: JSON!
  layerPartBlob: JSON!
}

type AwsECRUploadLayerPartOutput {
  registryId: String
  repositoryName: String
  uploadId: String
  lastByteReceived: JSON
}

# Amazon EC2 Container Service (2014-11-13)
type AwsECS {
  createCluster(input: AwsECSCreateClusterInput, config: AwsConfig): AwsECSCreateClusterOutput
  createService(input: AwsECSCreateServiceInput!, config: AwsConfig): AwsECSCreateServiceOutput
  deleteAttributes(input: AwsECSDeleteAttributesInput!, config: AwsConfig): AwsECSDeleteAttributesOutput
  deleteCluster(input: AwsECSDeleteClusterInput!, config: AwsConfig): AwsECSDeleteClusterOutput
  deleteService(input: AwsECSDeleteServiceInput!, config: AwsConfig): AwsECSDeleteServiceOutput
  deregisterContainerInstance(input: AwsECSDeregisterContainerInstanceInput!, config: AwsConfig): AwsECSDeregisterContainerInstanceOutput
  deregisterTaskDefinition(input: AwsECSDeregisterTaskDefinitionInput!, config: AwsConfig): AwsECSDeregisterTaskDefinitionOutput
  describeClusters(input: AwsECSDescribeClustersInput, config: AwsConfig): AwsECSDescribeClustersOutput
  describeContainerInstances(input: AwsECSDescribeContainerInstancesInput!, config: AwsConfig): AwsECSDescribeContainerInstancesOutput
  describeServices(input: AwsECSDescribeServicesInput!, config: AwsConfig): AwsECSDescribeServicesOutput
  describeTaskDefinition(input: AwsECSDescribeTaskDefinitionInput!, config: AwsConfig): AwsECSDescribeTaskDefinitionOutput
  describeTasks(input: AwsECSDescribeTasksInput!, config: AwsConfig): AwsECSDescribeTasksOutput
  discoverPollEndpoint(input: AwsECSDiscoverPollEndpointInput, config: AwsConfig): AwsECSDiscoverPollEndpointOutput
  listAttributes(input: AwsECSListAttributesInput!, config: AwsConfig): AwsECSListAttributesOutput
  listClusters(input: AwsECSListClustersInput, config: AwsConfig): AwsECSListClustersOutput
  listContainerInstances(input: AwsECSListContainerInstancesInput, config: AwsConfig): AwsECSListContainerInstancesOutput
  listServices(input: AwsECSListServicesInput, config: AwsConfig): AwsECSListServicesOutput
  listTaskDefinitionFamilies(input: AwsECSListTaskDefinitionFamiliesInput, config: AwsConfig): AwsECSListTaskDefinitionFamiliesOutput
  listTaskDefinitions(input: AwsECSListTaskDefinitionsInput, config: AwsConfig): AwsECSListTaskDefinitionsOutput
  listTasks(input: AwsECSListTasksInput, config: AwsConfig): AwsECSListTasksOutput
  putAttributes(input: AwsECSPutAttributesInput!, config: AwsConfig): AwsECSPutAttributesOutput
  registerContainerInstance(input: AwsECSRegisterContainerInstanceInput, config: AwsConfig): AwsECSRegisterContainerInstanceOutput
  registerTaskDefinition(input: AwsECSRegisterTaskDefinitionInput!, config: AwsConfig): AwsECSRegisterTaskDefinitionOutput
  runTask(input: AwsECSRunTaskInput!, config: AwsConfig): AwsECSRunTaskOutput
  startTask(input: AwsECSStartTaskInput!, config: AwsConfig): AwsECSStartTaskOutput
  stopTask(input: AwsECSStopTaskInput!, config: AwsConfig): AwsECSStopTaskOutput
  submitContainerStateChange(input: AwsECSSubmitContainerStateChangeInput, config: AwsConfig): AwsECSSubmitContainerStateChangeOutput
  submitTaskStateChange(input: AwsECSSubmitTaskStateChangeInput, config: AwsConfig): AwsECSSubmitTaskStateChangeOutput
  updateContainerAgent(input: AwsECSUpdateContainerAgentInput!, config: AwsConfig): AwsECSUpdateContainerAgentOutput
  updateContainerInstancesState(input: AwsECSUpdateContainerInstancesStateInput!, config: AwsConfig): AwsECSUpdateContainerInstancesStateOutput
  updateService(input: AwsECSUpdateServiceInput!, config: AwsConfig): AwsECSUpdateServiceOutput
}

input AwsECSCreateClusterInput {
  clusterName: String
}

type AwsECSCreateClusterOutput {
  cluster: AwsECSS4
}

input AwsECSCreateServiceInput {
  cluster: String
  serviceName: String!
  taskDefinition: String!
  loadBalancers: [AwsECSS9Input]
  desiredCount: Int!
  clientToken: String
  launchType: String
  platformVersion: String
  role: String
  deploymentConfiguration: AwsECSSdInput
  placementConstraints: [AwsECSSeInput]
  placementStrategy: [AwsECSShInput]
  networkConfiguration: AwsECSSkInput
}

type AwsECSCreateServiceOutput {
  service: AwsECSSp
}

input AwsECSDeleteAttributesInput {
  cluster: String
  attributes: [AwsECSSxInput]!
}

type AwsECSDeleteAttributesOutput {
  attributes: [AwsECSSx]
}

input AwsECSDeleteClusterInput {
  cluster: String!
}

type AwsECSDeleteClusterOutput {
  cluster: AwsECSS4
}

input AwsECSDeleteServiceInput {
  cluster: String
  service: String!
}

type AwsECSDeleteServiceOutput {
  service: AwsECSSp
}

input AwsECSDeregisterContainerInstanceInput {
  cluster: String
  containerInstance: String!
  force: Boolean
}

type AwsECSDeregisterContainerInstanceOutput {
  containerInstance: AwsECSS17
}

input AwsECSDeregisterTaskDefinitionInput {
  taskDefinition: String!
}

type AwsECSDeregisterTaskDefinitionOutput {
  taskDefinition: AwsECSS1k
}

input AwsECSDescribeClustersInput {
  clusters: [String]
  include: [String]
}

type AwsECSDescribeClustersOutput {
  clusters: [AwsECSS4]
  failures: [AwsECSS2q]
}

input AwsECSDescribeContainerInstancesInput {
  cluster: String
  containerInstances: [String]!
}

type AwsECSDescribeContainerInstancesOutput {
  containerInstances: [AwsECSS17]
  failures: [AwsECSS2q]
}

input AwsECSDescribeServicesInput {
  cluster: String
  services: [String]!
}

type AwsECSDescribeServicesOutput {
  services: [AwsECSSp]
  failures: [AwsECSS2q]
}

input AwsECSDescribeTaskDefinitionInput {
  taskDefinition: String!
}

type AwsECSDescribeTaskDefinitionOutput {
  taskDefinition: AwsECSS1k
}

input AwsECSDescribeTasksInput {
  cluster: String
  tasks: [String]!
}

type AwsECSDescribeTasksOutput {
  tasks: [AwsECSS33]
  failures: [AwsECSS2q]
}

input AwsECSDiscoverPollEndpointInput {
  containerInstance: String
  cluster: String
}

type AwsECSDiscoverPollEndpointOutput {
  endpoint: String
  telemetryEndpoint: String
}

input AwsECSListAttributesInput {
  cluster: String
  targetType: String!
  attributeName: String
  attributeValue: String
  nextToken: String
  maxResults: Int
}

type AwsECSListAttributesOutput {
  attributes: [AwsECSSx]
  nextToken: String
}

input AwsECSListClustersInput {
  nextToken: String
  maxResults: Int
}

type AwsECSListClustersOutput {
  clusterArns: [String]
  nextToken: String
}

input AwsECSListContainerInstancesInput {
  cluster: String
  filter: String
  nextToken: String
  maxResults: Int
  status: String
}

type AwsECSListContainerInstancesOutput {
  containerInstanceArns: [String]
  nextToken: String
}

input AwsECSListServicesInput {
  cluster: String
  nextToken: String
  maxResults: Int
  launchType: String
}

type AwsECSListServicesOutput {
  serviceArns: [String]
  nextToken: String
}

input AwsECSListTaskDefinitionFamiliesInput {
  familyPrefix: String
  status: String
  nextToken: String
  maxResults: Int
}

type AwsECSListTaskDefinitionFamiliesOutput {
  families: [String]
  nextToken: String
}

input AwsECSListTaskDefinitionsInput {
  familyPrefix: String
  status: String
  sort: String
  nextToken: String
  maxResults: Int
}

type AwsECSListTaskDefinitionsOutput {
  taskDefinitionArns: [String]
  nextToken: String
}

input AwsECSListTasksInput {
  cluster: String
  containerInstance: String
  family: String
  nextToken: String
  maxResults: Int
  startedBy: String
  serviceName: String
  desiredStatus: String
  launchType: String
}

type AwsECSListTasksOutput {
  taskArns: [String]
  nextToken: String
}

input AwsECSPutAttributesInput {
  cluster: String
  attributes: [AwsECSSxInput]!
}

type AwsECSPutAttributesOutput {
  attributes: [AwsECSSx]
}

input AwsECSRegisterContainerInstanceInput {
  cluster: String
  instanceIdentityDocument: String
  instanceIdentityDocumentSignature: String
  totalResources: [AwsECSS1aInput]
  versionInfo: AwsECSS19Input
  containerInstanceArn: String
  attributes: [AwsECSSxInput]
}

type AwsECSRegisterContainerInstanceOutput {
  containerInstance: AwsECSS17
}

input AwsECSRegisterTaskDefinitionInput {
  family: String!
  taskRoleArn: String
  executionRoleArn: String
  networkMode: String
  containerDefinitions: [AwsECSS1lInput]!
  volumes: [AwsECSS2bInput]
  placementConstraints: [AwsECSS2gInput]
  requiresCompatibilities: [String]
  cpu: String
  memory: String
}

type AwsECSRegisterTaskDefinitionOutput {
  taskDefinition: AwsECSS1k
}

input AwsECSRunTaskInput {
  cluster: String
  taskDefinition: String!
  overrides: AwsECSS34Input
  count: Int
  startedBy: String
  group: String
  placementConstraints: [AwsECSSeInput]
  placementStrategy: [AwsECSShInput]
  launchType: String
  platformVersion: String
  networkConfiguration: AwsECSSkInput
}

type AwsECSRunTaskOutput {
  tasks: [AwsECSS33]
  failures: [AwsECSS2q]
}

type AwsECSS17 {
  containerInstanceArn: String
  ec2InstanceId: String
  version: JSON
  versionInfo: AwsECSS19
  remainingResources: [AwsECSS1a]
  registeredResources: [AwsECSS1a]
  status: String
  agentConnected: Boolean
  runningTasksCount: Int
  pendingTasksCount: Int
  agentUpdateStatus: String
  attributes: [AwsECSSx]
  registeredAt: Date
  attachments: [AwsECSS1f]
}

type AwsECSS19 {
  agentVersion: String
  agentHash: String
  dockerVersion: String
}

input AwsECSS19Input {
  agentVersion: String
  agentHash: String
  dockerVersion: String
}

type AwsECSS1a {
  name: String
  type: String
  doubleValue: JSON
  longValue: JSON
  integerValue: Int
  stringSetValue: [String]
}

input AwsECSS1aInput {
  name: String
  type: String
  doubleValue: JSON
  longValue: JSON
  integerValue: Int
  stringSetValue: [String]
}

type AwsECSS1f {
  id: String
  type: String
  status: String
  details: [AwsECSS7]
}

type AwsECSS1k {
  taskDefinitionArn: String
  containerDefinitions: [AwsECSS1l]
  family: String
  taskRoleArn: String
  executionRoleArn: String
  networkMode: String
  revision: Int
  volumes: [AwsECSS2b]
  status: String
  requiresAttributes: [AwsECSSx]
  placementConstraints: [AwsECSS2g]
  compatibilities: [String]
  requiresCompatibilities: [String]
  cpu: String
  memory: String
}

type AwsECSS1l {
  name: String
  image: String
  cpu: Int
  memory: Int
  memoryReservation: Int
  links: [String]
  portMappings: [AwsECSS1lPortMappings]
  essential: Boolean
  entryPoint: [String]
  command: [String]
  environment: [AwsECSS7]
  mountPoints: [AwsECSS1lMountPoints]
  volumesFrom: [AwsECSS1lVolumesFrom]
  linuxParameters: AwsECSS1lLinuxParameters
  hostname: String
  user: String
  workingDirectory: String
  disableNetworking: Boolean
  privileged: Boolean
  readonlyRootFilesystem: Boolean
  dnsServers: [String]
  dnsSearchDomains: [String]
  extraHosts: [AwsECSS1lExtraHosts]
  dockerSecurityOptions: [String]
  dockerLabels: JSON
  ulimits: [AwsECSS1lUlimits]
  logConfiguration: AwsECSS1lLogConfiguration
}

type AwsECSS1lExtraHosts {
  hostname: String!
  ipAddress: String!
}

input AwsECSS1lExtraHostsInput {
  hostname: String!
  ipAddress: String!
}

input AwsECSS1lInput {
  name: String
  image: String
  cpu: Int
  memory: Int
  memoryReservation: Int
  links: [String]
  portMappings: [AwsECSS1lPortMappingsInput]
  essential: Boolean
  entryPoint: [String]
  command: [String]
  environment: [AwsECSS7Input]
  mountPoints: [AwsECSS1lMountPointsInput]
  volumesFrom: [AwsECSS1lVolumesFromInput]
  linuxParameters: AwsECSS1lLinuxParametersInput
  hostname: String
  user: String
  workingDirectory: String
  disableNetworking: Boolean
  privileged: Boolean
  readonlyRootFilesystem: Boolean
  dnsServers: [String]
  dnsSearchDomains: [String]
  extraHosts: [AwsECSS1lExtraHostsInput]
  dockerSecurityOptions: [String]
  dockerLabels: JSON
  ulimits: [AwsECSS1lUlimitsInput]
  logConfiguration: AwsECSS1lLogConfigurationInput
}

type AwsECSS1lLinuxParameters {
  capabilities: AwsECSS1lLinuxParametersCapabilities
  devices: [AwsECSS1lLinuxParametersDevices]
  initProcessEnabled: Boolean
}

type AwsECSS1lLinuxParametersCapabilities {
  add: [String]
  drop: [String]
}

input AwsECSS1lLinuxParametersCapabilitiesInput {
  add: [String]
  drop: [String]
}

type AwsECSS1lLinuxParametersDevices {
  hostPath: String!
  containerPath: String
  permissions: [String]
}

input AwsECSS1lLinuxParametersDevicesInput {
  hostPath: String!
  containerPath: String
  permissions: [String]
}

input AwsECSS1lLinuxParametersInput {
  capabilities: AwsECSS1lLinuxParametersCapabilitiesInput
  devices: [AwsECSS1lLinuxParametersDevicesInput]
  initProcessEnabled: Boolean
}

type AwsECSS1lLogConfiguration {
  logDriver: String!
  options: JSON
}

input AwsECSS1lLogConfigurationInput {
  logDriver: String!
  options: JSON
}

type AwsECSS1lMountPoints {
  sourceVolume: String
  containerPath: String
  readOnly: Boolean
}

input AwsECSS1lMountPointsInput {
  sourceVolume: String
  containerPath: String
  readOnly: Boolean
}

type AwsECSS1lPortMappings {
  containerPort: Int
  hostPort: Int
  protocol: String
}

input AwsECSS1lPortMappingsInput {
  containerPort: Int
  hostPort: Int
  protocol: String
}

type AwsECSS1lUlimits {
  name: String!
  softLimit: Int!
  hardLimit: Int!
}

input AwsECSS1lUlimitsInput {
  name: String!
  softLimit: Int!
  hardLimit: Int!
}

type AwsECSS1lVolumesFrom {
  sourceContainer: String
  readOnly: Boolean
}

input AwsECSS1lVolumesFromInput {
  sourceContainer: String
  readOnly: Boolean
}

type AwsECSS2b {
  name: String
  host: AwsECSS2bHost
}

type AwsECSS2bHost {
  sourcePath: String
}

input AwsECSS2bHostInput {
  sourcePath: String
}

input AwsECSS2bInput {
  name: String
  host: AwsECSS2bHostInput
}

type AwsECSS2g {
  type: String
  expression: String
}

input AwsECSS2gInput {
  type: String
  expression: String
}

type AwsECSS2q {
  arn: String
  reason: String
}

type AwsECSS33 {
  taskArn: String
  clusterArn: String
  taskDefinitionArn: String
  containerInstanceArn: String
  overrides: AwsECSS34
  lastStatus: String
  desiredStatus: String
  cpu: String
  memory: String
  containers: [AwsECSS33Containers]
  startedBy: String
  version: JSON
  stoppedReason: String
  connectivity: String
  connectivityAt: Date
  pullStartedAt: Date
  pullStoppedAt: Date
  executionStoppedAt: Date
  createdAt: Date
  startedAt: Date
  stoppingAt: Date
  stoppedAt: Date
  group: String
  launchType: String
  platformVersion: String
  attachments: [AwsECSS1f]
}

type AwsECSS33Containers {
  containerArn: String
  taskArn: String
  name: String
  lastStatus: String
  exitCode: Int
  reason: String
  networkBindings: [AwsECSS39]
  networkInterfaces: [AwsECSS33ContainersNetworkInterfaces]
}

type AwsECSS33ContainersNetworkInterfaces {
  attachmentId: String
  privateIpv4Address: String
  ipv6Address: String
}

type AwsECSS34 {
  containerOverrides: [AwsECSS34ContainerOverrides]
  taskRoleArn: String
  executionRoleArn: String
}

type AwsECSS34ContainerOverrides {
  name: String
  command: [String]
  environment: [AwsECSS7]
  cpu: Int
  memory: Int
  memoryReservation: Int
}

input AwsECSS34ContainerOverridesInput {
  name: String
  command: [String]
  environment: [AwsECSS7Input]
  cpu: Int
  memory: Int
  memoryReservation: Int
}

input AwsECSS34Input {
  containerOverrides: [AwsECSS34ContainerOverridesInput]
  taskRoleArn: String
  executionRoleArn: String
}

type AwsECSS39 {
  bindIP: String
  containerPort: Int
  hostPort: Int
  protocol: String
}

input AwsECSS39Input {
  bindIP: String
  containerPort: Int
  hostPort: Int
  protocol: String
}

type AwsECSS4 {
  clusterArn: String
  clusterName: String
  status: String
  registeredContainerInstancesCount: Int
  runningTasksCount: Int
  pendingTasksCount: Int
  activeServicesCount: Int
  statistics: [AwsECSS7]
}

type AwsECSS7 {
  name: String
  value: String
}

input AwsECSS7Input {
  name: String
  value: String
}

type AwsECSS9 {
  targetGroupArn: String
  loadBalancerName: String
  containerName: String
  containerPort: Int
}

input AwsECSS9Input {
  targetGroupArn: String
  loadBalancerName: String
  containerName: String
  containerPort: Int
}

type AwsECSSd {
  maximumPercent: Int
  minimumHealthyPercent: Int
}

input AwsECSSdInput {
  maximumPercent: Int
  minimumHealthyPercent: Int
}

type AwsECSSe {
  type: String
  expression: String
}

input AwsECSSeInput {
  type: String
  expression: String
}

type AwsECSSh {
  type: String
  field: String
}

input AwsECSShInput {
  type: String
  field: String
}

type AwsECSSk {
  awsvpcConfiguration: AwsECSSkAwsvpcConfiguration
}

type AwsECSSkAwsvpcConfiguration {
  subnets: [String]!
  securityGroups: [String]
  assignPublicIp: String
}

input AwsECSSkAwsvpcConfigurationInput {
  subnets: [String]!
  securityGroups: [String]
  assignPublicIp: String
}

input AwsECSSkInput {
  awsvpcConfiguration: AwsECSSkAwsvpcConfigurationInput
}

type AwsECSSp {
  serviceArn: String
  serviceName: String
  clusterArn: String
  loadBalancers: [AwsECSS9]
  status: String
  desiredCount: Int
  runningCount: Int
  pendingCount: Int
  launchType: String
  platformVersion: String
  taskDefinition: String
  deploymentConfiguration: AwsECSSd
  deployments: [AwsECSSpDeployments]
  roleArn: String
  events: [AwsECSSpEvents]
  createdAt: Date
  placementConstraints: [AwsECSSe]
  placementStrategy: [AwsECSSh]
  networkConfiguration: AwsECSSk
}

type AwsECSSpDeployments {
  id: String
  status: String
  taskDefinition: String
  desiredCount: Int
  pendingCount: Int
  runningCount: Int
  createdAt: Date
  updatedAt: Date
  launchType: String
  platformVersion: String
  networkConfiguration: AwsECSSk
}

type AwsECSSpEvents {
  id: String
  createdAt: Date
  message: String
}

input AwsECSStartTaskInput {
  cluster: String
  taskDefinition: String!
  overrides: AwsECSS34Input
  containerInstances: [String]!
  startedBy: String
  group: String
  networkConfiguration: AwsECSSkInput
}

type AwsECSStartTaskOutput {
  tasks: [AwsECSS33]
  failures: [AwsECSS2q]
}

input AwsECSStopTaskInput {
  cluster: String
  task: String!
  reason: String
}

type AwsECSStopTaskOutput {
  task: AwsECSS33
}

input AwsECSSubmitContainerStateChangeInput {
  cluster: String
  task: String
  containerName: String
  status: String
  exitCode: Int
  reason: String
  networkBindings: [AwsECSS39Input]
}

type AwsECSSubmitContainerStateChangeOutput {
  acknowledgment: String
}

input AwsECSSubmitTaskStateChangeAttachmentsInput {
  attachmentArn: String!
  status: String!
}

input AwsECSSubmitTaskStateChangeContainersInput {
  containerName: String
  exitCode: Int
  networkBindings: [AwsECSS39Input]
  reason: String
  status: String
}

input AwsECSSubmitTaskStateChangeInput {
  cluster: String
  task: String
  status: String
  reason: String
  containers: [AwsECSSubmitTaskStateChangeContainersInput]
  attachments: [AwsECSSubmitTaskStateChangeAttachmentsInput]
  pullStartedAt: Date
  pullStoppedAt: Date
  executionStoppedAt: Date
}

type AwsECSSubmitTaskStateChangeOutput {
  acknowledgment: String
}

type AwsECSSx {
  name: String!
  value: String
  targetType: String
  targetId: String
}

input AwsECSSxInput {
  name: String!
  value: String
  targetType: String
  targetId: String
}

input AwsECSUpdateContainerAgentInput {
  cluster: String
  containerInstance: String!
}

type AwsECSUpdateContainerAgentOutput {
  containerInstance: AwsECSS17
}

input AwsECSUpdateContainerInstancesStateInput {
  cluster: String
  containerInstances: [String]!
  status: String!
}

type AwsECSUpdateContainerInstancesStateOutput {
  containerInstances: [AwsECSS17]
  failures: [AwsECSS2q]
}

input AwsECSUpdateServiceInput {
  cluster: String
  service: String!
  desiredCount: Int
  taskDefinition: String
  deploymentConfiguration: AwsECSSdInput
  networkConfiguration: AwsECSSkInput
  platformVersion: String
  forceNewDeployment: Boolean
}

type AwsECSUpdateServiceOutput {
  service: AwsECSSp
}

# Amazon Elastic File System (2015-02-01)
type AwsEFS {
  createFileSystem(input: AwsEFSCreateFileSystemInput!, config: AwsConfig): JSON
  createMountTarget(input: AwsEFSCreateMountTargetInput!, config: AwsConfig): JSON
  createTags(input: AwsEFSCreateTagsInput!, config: AwsConfig): JSON
  deleteFileSystem(input: AwsEFSDeleteFileSystemInput!, config: AwsConfig): JSON
  deleteMountTarget(input: AwsEFSDeleteMountTargetInput!, config: AwsConfig): JSON
  deleteTags(input: AwsEFSDeleteTagsInput!, config: AwsConfig): JSON
  describeFileSystems(input: AwsEFSDescribeFileSystemsInput, config: AwsConfig): AwsEFSDescribeFileSystemsOutput
  describeMountTargetSecurityGroups(input: AwsEFSDescribeMountTargetSecurityGroupsInput!, config: AwsConfig): AwsEFSDescribeMountTargetSecurityGroupsOutput
  describeMountTargets(input: AwsEFSDescribeMountTargetsInput, config: AwsConfig): AwsEFSDescribeMountTargetsOutput
  describeTags(input: AwsEFSDescribeTagsInput!, config: AwsConfig): AwsEFSDescribeTagsOutput
  modifyMountTargetSecurityGroups(input: AwsEFSModifyMountTargetSecurityGroupsInput!, config: AwsConfig): JSON
}

input AwsEFSCreateFileSystemInput {
  CreationToken: String!
  PerformanceMode: String
  Encrypted: Boolean
  KmsKeyId: String
}

input AwsEFSCreateMountTargetInput {
  FileSystemId: String!
  SubnetId: String!
  IpAddress: String
  SecurityGroups: [String]
}

input AwsEFSCreateTagsInput {
  FileSystemId: String!
  Tags: [AwsEFSSoInput]!
}

input AwsEFSDeleteFileSystemInput {
  FileSystemId: String!
}

input AwsEFSDeleteMountTargetInput {
  MountTargetId: String!
}

input AwsEFSDeleteTagsInput {
  FileSystemId: String!
  TagKeys: [String]!
}

input AwsEFSDescribeFileSystemsInput {
  MaxItems: Int
  Marker: String
  CreationToken: String
  FileSystemId: String
}

type AwsEFSDescribeFileSystemsOutput {
  Marker: String
  FileSystems: [AwsEFSS6]
  NextMarker: String
}

input AwsEFSDescribeMountTargetSecurityGroupsInput {
  MountTargetId: String!
}

type AwsEFSDescribeMountTargetSecurityGroupsOutput {
  SecurityGroups: [String]!
}

input AwsEFSDescribeMountTargetsInput {
  MaxItems: Int
  Marker: String
  FileSystemId: String
  MountTargetId: String
}

type AwsEFSDescribeMountTargetsOutput {
  Marker: String
  MountTargets: [AwsEFSSk]
  NextMarker: String
}

input AwsEFSDescribeTagsInput {
  MaxItems: Int
  Marker: String
  FileSystemId: String!
}

type AwsEFSDescribeTagsOutput {
  Marker: String
  Tags: [AwsEFSSo]!
  NextMarker: String
}

input AwsEFSModifyMountTargetSecurityGroupsInput {
  MountTargetId: String!
  SecurityGroups: [String]
}

type AwsEFSS6 {
  OwnerId: String!
  CreationToken: String!
  FileSystemId: String!
  CreationTime: Date!
  LifeCycleState: String!
  Name: String
  NumberOfMountTargets: Int!
  SizeInBytes: AwsEFSS6SizeInBytes!
  PerformanceMode: String!
  Encrypted: Boolean
  KmsKeyId: String
}

type AwsEFSS6SizeInBytes {
  Value: JSON!
  Timestamp: Date
}

type AwsEFSSk {
  OwnerId: String
  MountTargetId: String!
  FileSystemId: String!
  SubnetId: String!
  LifeCycleState: String!
  IpAddress: String
  NetworkInterfaceId: String
}

type AwsEFSSo {
  Key: String!
  Value: String!
}

input AwsEFSSoInput {
  Key: String!
  Value: String!
}

# Amazon ElastiCache (2015-02-02)
type AwsElastiCache {
  addTagsToResource(input: AwsElastiCacheAddTagsToResourceInput!, config: AwsConfig): JSON
  authorizeCacheSecurityGroupIngress(input: AwsElastiCacheAuthorizeCacheSecurityGroupIngressInput!, config: AwsConfig): AwsElastiCacheAuthorizeCacheSecurityGroupIngressOutput
  copySnapshot(input: AwsElastiCacheCopySnapshotInput!, config: AwsConfig): AwsElastiCacheCopySnapshotOutput
  createCacheCluster(input: AwsElastiCacheCreateCacheClusterInput!, config: AwsConfig): AwsElastiCacheCreateCacheClusterOutput
  createCacheParameterGroup(input: AwsElastiCacheCreateCacheParameterGroupInput!, config: AwsConfig): AwsElastiCacheCreateCacheParameterGroupOutput
  createCacheSecurityGroup(input: AwsElastiCacheCreateCacheSecurityGroupInput!, config: AwsConfig): AwsElastiCacheCreateCacheSecurityGroupOutput
  createCacheSubnetGroup(input: AwsElastiCacheCreateCacheSubnetGroupInput!, config: AwsConfig): AwsElastiCacheCreateCacheSubnetGroupOutput
  createReplicationGroup(input: AwsElastiCacheCreateReplicationGroupInput!, config: AwsConfig): AwsElastiCacheCreateReplicationGroupOutput
  createSnapshot(input: AwsElastiCacheCreateSnapshotInput!, config: AwsConfig): AwsElastiCacheCreateSnapshotOutput
  deleteCacheCluster(input: AwsElastiCacheDeleteCacheClusterInput!, config: AwsConfig): AwsElastiCacheDeleteCacheClusterOutput
  deleteCacheParameterGroup(input: AwsElastiCacheDeleteCacheParameterGroupInput!, config: AwsConfig): JSON
  deleteCacheSecurityGroup(input: AwsElastiCacheDeleteCacheSecurityGroupInput!, config: AwsConfig): JSON
  deleteCacheSubnetGroup(input: AwsElastiCacheDeleteCacheSubnetGroupInput!, config: AwsConfig): JSON
  deleteReplicationGroup(input: AwsElastiCacheDeleteReplicationGroupInput!, config: AwsConfig): AwsElastiCacheDeleteReplicationGroupOutput
  deleteSnapshot(input: AwsElastiCacheDeleteSnapshotInput!, config: AwsConfig): AwsElastiCacheDeleteSnapshotOutput
  describeCacheClusters(input: AwsElastiCacheDescribeCacheClustersInput, config: AwsConfig): AwsElastiCacheDescribeCacheClustersOutput
  describeCacheEngineVersions(input: AwsElastiCacheDescribeCacheEngineVersionsInput, config: AwsConfig): AwsElastiCacheDescribeCacheEngineVersionsOutput
  describeCacheParameterGroups(input: AwsElastiCacheDescribeCacheParameterGroupsInput, config: AwsConfig): AwsElastiCacheDescribeCacheParameterGroupsOutput
  describeCacheParameters(input: AwsElastiCacheDescribeCacheParametersInput!, config: AwsConfig): AwsElastiCacheDescribeCacheParametersOutput
  describeCacheSecurityGroups(input: AwsElastiCacheDescribeCacheSecurityGroupsInput, config: AwsConfig): AwsElastiCacheDescribeCacheSecurityGroupsOutput
  describeCacheSubnetGroups(input: AwsElastiCacheDescribeCacheSubnetGroupsInput, config: AwsConfig): AwsElastiCacheDescribeCacheSubnetGroupsOutput
  describeEngineDefaultParameters(input: AwsElastiCacheDescribeEngineDefaultParametersInput!, config: AwsConfig): AwsElastiCacheDescribeEngineDefaultParametersOutput
  describeEvents(input: AwsElastiCacheDescribeEventsInput, config: AwsConfig): AwsElastiCacheDescribeEventsOutput
  describeReplicationGroups(input: AwsElastiCacheDescribeReplicationGroupsInput, config: AwsConfig): AwsElastiCacheDescribeReplicationGroupsOutput
  describeReservedCacheNodes(input: AwsElastiCacheDescribeReservedCacheNodesInput, config: AwsConfig): AwsElastiCacheDescribeReservedCacheNodesOutput
  describeReservedCacheNodesOfferings(input: AwsElastiCacheDescribeReservedCacheNodesOfferingsInput, config: AwsConfig): AwsElastiCacheDescribeReservedCacheNodesOfferingsOutput
  describeSnapshots(input: AwsElastiCacheDescribeSnapshotsInput, config: AwsConfig): AwsElastiCacheDescribeSnapshotsOutput
  listAllowedNodeTypeModifications(input: AwsElastiCacheListAllowedNodeTypeModificationsInput, config: AwsConfig): AwsElastiCacheListAllowedNodeTypeModificationsOutput
  listTagsForResource(input: AwsElastiCacheListTagsForResourceInput!, config: AwsConfig): JSON
  modifyCacheCluster(input: AwsElastiCacheModifyCacheClusterInput!, config: AwsConfig): AwsElastiCacheModifyCacheClusterOutput
  modifyCacheParameterGroup(input: AwsElastiCacheModifyCacheParameterGroupInput!, config: AwsConfig): JSON
  modifyCacheSubnetGroup(input: AwsElastiCacheModifyCacheSubnetGroupInput!, config: AwsConfig): AwsElastiCacheModifyCacheSubnetGroupOutput
  modifyReplicationGroup(input: AwsElastiCacheModifyReplicationGroupInput!, config: AwsConfig): AwsElastiCacheModifyReplicationGroupOutput
  modifyReplicationGroupShardConfiguration(input: AwsElastiCacheModifyReplicationGroupShardConfigurationInput!, config: AwsConfig): AwsElastiCacheModifyReplicationGroupShardConfigurationOutput
  purchaseReservedCacheNodesOffering(input: AwsElastiCachePurchaseReservedCacheNodesOfferingInput!, config: AwsConfig): AwsElastiCachePurchaseReservedCacheNodesOfferingOutput
  rebootCacheCluster(input: AwsElastiCacheRebootCacheClusterInput!, config: AwsConfig): AwsElastiCacheRebootCacheClusterOutput
  removeTagsFromResource(input: AwsElastiCacheRemoveTagsFromResourceInput!, config: AwsConfig): JSON
  resetCacheParameterGroup(input: AwsElastiCacheResetCacheParameterGroupInput!, config: AwsConfig): JSON
  revokeCacheSecurityGroupIngress(input: AwsElastiCacheRevokeCacheSecurityGroupIngressInput!, config: AwsConfig): AwsElastiCacheRevokeCacheSecurityGroupIngressOutput
  testFailover(input: AwsElastiCacheTestFailoverInput!, config: AwsConfig): AwsElastiCacheTestFailoverOutput
}

input AwsElastiCacheAddTagsToResourceInput {
  ResourceName: String!
  Tags: [AwsElastiCacheS3Input]!
}

input AwsElastiCacheAuthorizeCacheSecurityGroupIngressInput {
  CacheSecurityGroupName: String!
  EC2SecurityGroupName: String!
  EC2SecurityGroupOwnerId: String!
}

type AwsElastiCacheAuthorizeCacheSecurityGroupIngressOutput {
  CacheSecurityGroup: AwsElastiCacheS8
}

input AwsElastiCacheCopySnapshotInput {
  SourceSnapshotName: String!
  TargetSnapshotName: String!
  TargetBucket: String
}

type AwsElastiCacheCopySnapshotOutput {
  Snapshot: AwsElastiCacheSd
}

input AwsElastiCacheCreateCacheClusterInput {
  CacheClusterId: String!
  ReplicationGroupId: String
  AZMode: String
  PreferredAvailabilityZone: String
  PreferredAvailabilityZones: [String]
  NumCacheNodes: Int
  CacheNodeType: String
  Engine: String
  EngineVersion: String
  CacheParameterGroupName: String
  CacheSubnetGroupName: String
  CacheSecurityGroupNames: [String]
  SecurityGroupIds: [String]
  Tags: [AwsElastiCacheS3Input]
  SnapshotArns: [String]
  SnapshotName: String
  PreferredMaintenanceWindow: String
  Port: Int
  NotificationTopicArn: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  AuthToken: String
}

type AwsElastiCacheCreateCacheClusterOutput {
  CacheCluster: AwsElastiCacheSu
}

input AwsElastiCacheCreateCacheParameterGroupInput {
  CacheParameterGroupName: String!
  CacheParameterGroupFamily: String!
  Description: String!
}

type AwsElastiCacheCreateCacheParameterGroupOutput {
  CacheParameterGroup: AwsElastiCacheS19
}

input AwsElastiCacheCreateCacheSecurityGroupInput {
  CacheSecurityGroupName: String!
  Description: String!
}

type AwsElastiCacheCreateCacheSecurityGroupOutput {
  CacheSecurityGroup: AwsElastiCacheS8
}

input AwsElastiCacheCreateCacheSubnetGroupInput {
  CacheSubnetGroupName: String!
  CacheSubnetGroupDescription: String!
  SubnetIds: [String]!
}

type AwsElastiCacheCreateCacheSubnetGroupOutput {
  CacheSubnetGroup: AwsElastiCacheS1f
}

input AwsElastiCacheCreateReplicationGroupInput {
  ReplicationGroupId: String!
  ReplicationGroupDescription: String!
  PrimaryClusterId: String
  AutomaticFailoverEnabled: Boolean
  NumCacheClusters: Int
  PreferredCacheClusterAZs: [String]
  NumNodeGroups: Int
  ReplicasPerNodeGroup: Int
  NodeGroupConfiguration: [AwsElastiCacheSkInput]
  CacheNodeType: String
  Engine: String
  EngineVersion: String
  CacheParameterGroupName: String
  CacheSubnetGroupName: String
  CacheSecurityGroupNames: [String]
  SecurityGroupIds: [String]
  Tags: [AwsElastiCacheS3Input]
  SnapshotArns: [String]
  SnapshotName: String
  PreferredMaintenanceWindow: String
  Port: Int
  NotificationTopicArn: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  AuthToken: String
  TransitEncryptionEnabled: Boolean
  AtRestEncryptionEnabled: Boolean
}

type AwsElastiCacheCreateReplicationGroupOutput {
  ReplicationGroup: AwsElastiCacheS1m
}

input AwsElastiCacheCreateSnapshotInput {
  ReplicationGroupId: String
  CacheClusterId: String
  SnapshotName: String!
}

type AwsElastiCacheCreateSnapshotOutput {
  Snapshot: AwsElastiCacheSd
}

input AwsElastiCacheDeleteCacheClusterInput {
  CacheClusterId: String!
  FinalSnapshotIdentifier: String
}

type AwsElastiCacheDeleteCacheClusterOutput {
  CacheCluster: AwsElastiCacheSu
}

input AwsElastiCacheDeleteCacheParameterGroupInput {
  CacheParameterGroupName: String!
}

input AwsElastiCacheDeleteCacheSecurityGroupInput {
  CacheSecurityGroupName: String!
}

input AwsElastiCacheDeleteCacheSubnetGroupInput {
  CacheSubnetGroupName: String!
}

input AwsElastiCacheDeleteReplicationGroupInput {
  ReplicationGroupId: String!
  RetainPrimaryCluster: Boolean
  FinalSnapshotIdentifier: String
}

type AwsElastiCacheDeleteReplicationGroupOutput {
  ReplicationGroup: AwsElastiCacheS1m
}

input AwsElastiCacheDeleteSnapshotInput {
  SnapshotName: String!
}

type AwsElastiCacheDeleteSnapshotOutput {
  Snapshot: AwsElastiCacheSd
}

input AwsElastiCacheDescribeCacheClustersInput {
  CacheClusterId: String
  MaxRecords: Int
  Marker: String
  ShowCacheNodeInfo: Boolean
  ShowCacheClustersNotInReplicationGroups: Boolean
}

type AwsElastiCacheDescribeCacheClustersOutput {
  Marker: String
  CacheClusters: [AwsElastiCacheSu]
}

input AwsElastiCacheDescribeCacheEngineVersionsInput {
  Engine: String
  EngineVersion: String
  CacheParameterGroupFamily: String
  MaxRecords: Int
  Marker: String
  DefaultOnly: Boolean
}

type AwsElastiCacheDescribeCacheEngineVersionsOutput {
  Marker: String
  CacheEngineVersions: [AwsElastiCacheDescribeCacheEngineVersionsOutputCacheEngineVersions]
}

type AwsElastiCacheDescribeCacheEngineVersionsOutputCacheEngineVersions {
  Engine: String
  EngineVersion: String
  CacheParameterGroupFamily: String
  CacheEngineDescription: String
  CacheEngineVersionDescription: String
}

input AwsElastiCacheDescribeCacheParameterGroupsInput {
  CacheParameterGroupName: String
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeCacheParameterGroupsOutput {
  Marker: String
  CacheParameterGroups: [AwsElastiCacheS19]
}

input AwsElastiCacheDescribeCacheParametersInput {
  CacheParameterGroupName: String!
  Source: String
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeCacheParametersOutput {
  Marker: String
  Parameters: [AwsElastiCacheS2k]
  CacheNodeTypeSpecificParameters: [AwsElastiCacheS2n]
}

input AwsElastiCacheDescribeCacheSecurityGroupsInput {
  CacheSecurityGroupName: String
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeCacheSecurityGroupsOutput {
  Marker: String
  CacheSecurityGroups: [AwsElastiCacheS8]
}

input AwsElastiCacheDescribeCacheSubnetGroupsInput {
  CacheSubnetGroupName: String
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeCacheSubnetGroupsOutput {
  Marker: String
  CacheSubnetGroups: [AwsElastiCacheS1f]
}

input AwsElastiCacheDescribeEngineDefaultParametersInput {
  CacheParameterGroupFamily: String!
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeEngineDefaultParametersOutput {
  EngineDefaults: AwsElastiCacheDescribeEngineDefaultParametersOutputEngineDefaults
}

type AwsElastiCacheDescribeEngineDefaultParametersOutputEngineDefaults {
  CacheParameterGroupFamily: String
  Marker: String
  Parameters: [AwsElastiCacheS2k]
  CacheNodeTypeSpecificParameters: [AwsElastiCacheS2n]
}

input AwsElastiCacheDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeEventsOutput {
  Marker: String
  Events: [AwsElastiCacheDescribeEventsOutputEvents]
}

type AwsElastiCacheDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  Date: Date
}

input AwsElastiCacheDescribeReplicationGroupsInput {
  ReplicationGroupId: String
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeReplicationGroupsOutput {
  Marker: String
  ReplicationGroups: [AwsElastiCacheS1m]
}

input AwsElastiCacheDescribeReservedCacheNodesInput {
  ReservedCacheNodeId: String
  ReservedCacheNodesOfferingId: String
  CacheNodeType: String
  Duration: String
  ProductDescription: String
  OfferingType: String
  MaxRecords: Int
  Marker: String
}

input AwsElastiCacheDescribeReservedCacheNodesOfferingsInput {
  ReservedCacheNodesOfferingId: String
  CacheNodeType: String
  Duration: String
  ProductDescription: String
  OfferingType: String
  MaxRecords: Int
  Marker: String
}

type AwsElastiCacheDescribeReservedCacheNodesOfferingsOutput {
  Marker: String
  ReservedCacheNodesOfferings: [AwsElastiCacheDescribeReservedCacheNodesOfferingsOutputReservedCacheNodesOfferings]
}

type AwsElastiCacheDescribeReservedCacheNodesOfferingsOutputReservedCacheNodesOfferings {
  ReservedCacheNodesOfferingId: String
  CacheNodeType: String
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  ProductDescription: String
  OfferingType: String
  RecurringCharges: [AwsElastiCacheS3c]
}

type AwsElastiCacheDescribeReservedCacheNodesOutput {
  Marker: String
  ReservedCacheNodes: [AwsElastiCacheS3b]
}

input AwsElastiCacheDescribeSnapshotsInput {
  ReplicationGroupId: String
  CacheClusterId: String
  SnapshotName: String
  SnapshotSource: String
  Marker: String
  MaxRecords: Int
  ShowNodeGroupConfig: Boolean
}

type AwsElastiCacheDescribeSnapshotsOutput {
  Marker: String
  Snapshots: [AwsElastiCacheSd]
}

input AwsElastiCacheListAllowedNodeTypeModificationsInput {
  CacheClusterId: String
  ReplicationGroupId: String
}

type AwsElastiCacheListAllowedNodeTypeModificationsOutput {
  ScaleUpModifications: [String]
}

input AwsElastiCacheListTagsForResourceInput {
  ResourceName: String!
}

input AwsElastiCacheModifyCacheClusterInput {
  CacheClusterId: String!
  NumCacheNodes: Int
  CacheNodeIdsToRemove: [String]
  AZMode: String
  NewAvailabilityZones: [String]
  CacheSecurityGroupNames: [String]
  SecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  NotificationTopicArn: String
  CacheParameterGroupName: String
  NotificationTopicStatus: String
  ApplyImmediately: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  CacheNodeType: String
}

type AwsElastiCacheModifyCacheClusterOutput {
  CacheCluster: AwsElastiCacheSu
}

input AwsElastiCacheModifyCacheParameterGroupInput {
  CacheParameterGroupName: String!
  ParameterNameValues: [AwsElastiCacheS3sInput]!
}

input AwsElastiCacheModifyCacheSubnetGroupInput {
  CacheSubnetGroupName: String!
  CacheSubnetGroupDescription: String
  SubnetIds: [String]
}

type AwsElastiCacheModifyCacheSubnetGroupOutput {
  CacheSubnetGroup: AwsElastiCacheS1f
}

input AwsElastiCacheModifyReplicationGroupInput {
  ReplicationGroupId: String!
  ReplicationGroupDescription: String
  PrimaryClusterId: String
  SnapshottingClusterId: String
  AutomaticFailoverEnabled: Boolean
  CacheSecurityGroupNames: [String]
  SecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  NotificationTopicArn: String
  CacheParameterGroupName: String
  NotificationTopicStatus: String
  ApplyImmediately: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  CacheNodeType: String
  NodeGroupId: String
}

type AwsElastiCacheModifyReplicationGroupOutput {
  ReplicationGroup: AwsElastiCacheS1m
}

input AwsElastiCacheModifyReplicationGroupShardConfigurationInput {
  ReplicationGroupId: String!
  NodeGroupCount: Int!
  ApplyImmediately: Boolean!
  ReshardingConfiguration: [AwsElastiCacheModifyReplicationGroupShardConfigurationReshardingConfigurationInput]
  NodeGroupsToRemove: [String]
}

type AwsElastiCacheModifyReplicationGroupShardConfigurationOutput {
  ReplicationGroup: AwsElastiCacheS1m
}

input AwsElastiCacheModifyReplicationGroupShardConfigurationReshardingConfigurationInput {
  PreferredAvailabilityZones: [String]
}

input AwsElastiCachePurchaseReservedCacheNodesOfferingInput {
  ReservedCacheNodesOfferingId: String!
  ReservedCacheNodeId: String
  CacheNodeCount: Int
}

type AwsElastiCachePurchaseReservedCacheNodesOfferingOutput {
  ReservedCacheNode: AwsElastiCacheS3b
}

input AwsElastiCacheRebootCacheClusterInput {
  CacheClusterId: String!
  CacheNodeIdsToReboot: [String]!
}

type AwsElastiCacheRebootCacheClusterOutput {
  CacheCluster: AwsElastiCacheSu
}

input AwsElastiCacheRemoveTagsFromResourceInput {
  ResourceName: String!
  TagKeys: [String]!
}

input AwsElastiCacheResetCacheParameterGroupInput {
  CacheParameterGroupName: String!
  ResetAllParameters: Boolean
  ParameterNameValues: [AwsElastiCacheS3sInput]
}

input AwsElastiCacheRevokeCacheSecurityGroupIngressInput {
  CacheSecurityGroupName: String!
  EC2SecurityGroupName: String!
  EC2SecurityGroupOwnerId: String!
}

type AwsElastiCacheRevokeCacheSecurityGroupIngressOutput {
  CacheSecurityGroup: AwsElastiCacheS8
}

type AwsElastiCacheS19 {
  CacheParameterGroupName: String
  CacheParameterGroupFamily: String
  Description: String
}

type AwsElastiCacheS1f {
  CacheSubnetGroupName: String
  CacheSubnetGroupDescription: String
  VpcId: String
  Subnets: [AwsElastiCacheS1fSubnets]
}

type AwsElastiCacheS1fSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsElastiCacheS1fSubnetsSubnetAvailabilityZone
}

type AwsElastiCacheS1fSubnetsSubnetAvailabilityZone {
  Name: String
}

type AwsElastiCacheS1m {
  ReplicationGroupId: String
  Description: String
  Status: String
  PendingModifiedValues: AwsElastiCacheS1mPendingModifiedValues
  MemberClusters: [String]
  NodeGroups: [AwsElastiCacheS1mNodeGroups]
  SnapshottingClusterId: String
  AutomaticFailover: String
  ConfigurationEndpoint: AwsElastiCacheSv
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  ClusterEnabled: Boolean
  CacheNodeType: String
  AuthTokenEnabled: Boolean
  TransitEncryptionEnabled: Boolean
  AtRestEncryptionEnabled: Boolean
}

type AwsElastiCacheS1mNodeGroups {
  NodeGroupId: String
  Status: String
  PrimaryEndpoint: AwsElastiCacheSv
  Slots: String
  NodeGroupMembers: [AwsElastiCacheS1mNodeGroupsNodeGroupMembers]
}

type AwsElastiCacheS1mNodeGroupsNodeGroupMembers {
  CacheClusterId: String
  CacheNodeId: String
  ReadEndpoint: AwsElastiCacheSv
  PreferredAvailabilityZone: String
  CurrentRole: String
}

type AwsElastiCacheS1mPendingModifiedValues {
  PrimaryClusterId: String
  AutomaticFailoverStatus: String
  Resharding: AwsElastiCacheS1mPendingModifiedValuesResharding
}

type AwsElastiCacheS1mPendingModifiedValuesResharding {
  SlotMigration: AwsElastiCacheS1mPendingModifiedValuesReshardingSlotMigration
}

type AwsElastiCacheS1mPendingModifiedValuesReshardingSlotMigration {
  ProgressPercentage: JSON
}

type AwsElastiCacheS2k {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ChangeType: String
}

type AwsElastiCacheS2n {
  ParameterName: String
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  CacheNodeTypeSpecificValues: [AwsElastiCacheS2nCacheNodeTypeSpecificValues]
  ChangeType: String
}

type AwsElastiCacheS2nCacheNodeTypeSpecificValues {
  CacheNodeType: String
  Value: String
}

type AwsElastiCacheS3b {
  ReservedCacheNodeId: String
  ReservedCacheNodesOfferingId: String
  CacheNodeType: String
  StartTime: Date
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CacheNodeCount: Int
  ProductDescription: String
  OfferingType: String
  State: String
  RecurringCharges: [AwsElastiCacheS3c]
}

type AwsElastiCacheS3c {
  RecurringChargeAmount: JSON
  RecurringChargeFrequency: String
}

input AwsElastiCacheS3Input {
  Key: String
  Value: String
}

input AwsElastiCacheS3sInput {
  ParameterName: String
  ParameterValue: String
}

type AwsElastiCacheS8 {
  OwnerId: String
  CacheSecurityGroupName: String
  Description: String
  EC2SecurityGroups: [AwsElastiCacheS8EC2SecurityGroups]
}

type AwsElastiCacheS8EC2SecurityGroups {
  Status: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
}

type AwsElastiCacheSd {
  SnapshotName: String
  ReplicationGroupId: String
  ReplicationGroupDescription: String
  CacheClusterId: String
  SnapshotStatus: String
  SnapshotSource: String
  CacheNodeType: String
  Engine: String
  EngineVersion: String
  NumCacheNodes: Int
  PreferredAvailabilityZone: String
  CacheClusterCreateTime: Date
  PreferredMaintenanceWindow: String
  TopicArn: String
  Port: Int
  CacheParameterGroupName: String
  CacheSubnetGroupName: String
  VpcId: String
  AutoMinorVersionUpgrade: Boolean
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  NumNodeGroups: Int
  AutomaticFailover: String
  NodeSnapshots: [AwsElastiCacheSdNodeSnapshots]
}

type AwsElastiCacheSdNodeSnapshots {
  CacheClusterId: String
  NodeGroupId: String
  CacheNodeId: String
  NodeGroupConfiguration: AwsElastiCacheSk
  CacheSize: String
  CacheNodeCreateTime: Date
  SnapshotCreateTime: Date
}

type AwsElastiCacheSk {
  Slots: String
  ReplicaCount: Int
  PrimaryAvailabilityZone: String
  ReplicaAvailabilityZones: [String]
}

input AwsElastiCacheSkInput {
  Slots: String
  ReplicaCount: Int
  PrimaryAvailabilityZone: String
  ReplicaAvailabilityZones: [String]
}

type AwsElastiCacheSu {
  CacheClusterId: String
  ConfigurationEndpoint: AwsElastiCacheSv
  ClientDownloadLandingPage: String
  CacheNodeType: String
  Engine: String
  EngineVersion: String
  CacheClusterStatus: String
  NumCacheNodes: Int
  PreferredAvailabilityZone: String
  CacheClusterCreateTime: Date
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsElastiCacheSuPendingModifiedValues
  NotificationConfiguration: AwsElastiCacheSuNotificationConfiguration
  CacheSecurityGroups: [AwsElastiCacheSuCacheSecurityGroups]
  CacheParameterGroup: AwsElastiCacheSuCacheParameterGroup
  CacheSubnetGroupName: String
  CacheNodes: [AwsElastiCacheSuCacheNodes]
  AutoMinorVersionUpgrade: Boolean
  SecurityGroups: [AwsElastiCacheSuSecurityGroups]
  ReplicationGroupId: String
  SnapshotRetentionLimit: Int
  SnapshotWindow: String
  AuthTokenEnabled: Boolean
  TransitEncryptionEnabled: Boolean
  AtRestEncryptionEnabled: Boolean
}

type AwsElastiCacheSuCacheNodes {
  CacheNodeId: String
  CacheNodeStatus: String
  CacheNodeCreateTime: Date
  Endpoint: AwsElastiCacheSv
  ParameterGroupStatus: String
  SourceCacheNodeId: String
  CustomerAvailabilityZone: String
}

type AwsElastiCacheSuCacheParameterGroup {
  CacheParameterGroupName: String
  ParameterApplyStatus: String
  CacheNodeIdsToReboot: [String]
}

type AwsElastiCacheSuCacheSecurityGroups {
  CacheSecurityGroupName: String
  Status: String
}

type AwsElastiCacheSuNotificationConfiguration {
  TopicArn: String
  TopicStatus: String
}

type AwsElastiCacheSuPendingModifiedValues {
  NumCacheNodes: Int
  CacheNodeIdsToRemove: [String]
  EngineVersion: String
  CacheNodeType: String
}

type AwsElastiCacheSuSecurityGroups {
  SecurityGroupId: String
  Status: String
}

type AwsElastiCacheSv {
  Address: String
  Port: Int
}

input AwsElastiCacheTestFailoverInput {
  ReplicationGroupId: String!
  NodeGroupId: String!
}

type AwsElastiCacheTestFailoverOutput {
  ReplicationGroup: AwsElastiCacheS1m
}

# AWS Elastic Beanstalk (2010-12-01)
type AwsElasticBeanstalk {
  abortEnvironmentUpdate(input: AwsElasticBeanstalkAbortEnvironmentUpdateInput, config: AwsConfig): JSON
  applyEnvironmentManagedAction(input: AwsElasticBeanstalkApplyEnvironmentManagedActionInput!, config: AwsConfig): AwsElasticBeanstalkApplyEnvironmentManagedActionOutput
  checkDNSAvailability(input: AwsElasticBeanstalkCheckDNSAvailabilityInput!, config: AwsConfig): AwsElasticBeanstalkCheckDNSAvailabilityOutput
  composeEnvironments(input: AwsElasticBeanstalkComposeEnvironmentsInput, config: AwsConfig): JSON
  createApplication(input: AwsElasticBeanstalkCreateApplicationInput!, config: AwsConfig): JSON
  createApplicationVersion(input: AwsElasticBeanstalkCreateApplicationVersionInput!, config: AwsConfig): JSON
  createConfigurationTemplate(input: AwsElasticBeanstalkCreateConfigurationTemplateInput!, config: AwsConfig): JSON
  createEnvironment(input: AwsElasticBeanstalkCreateEnvironmentInput!, config: AwsConfig): JSON
  createPlatformVersion(input: AwsElasticBeanstalkCreatePlatformVersionInput!, config: AwsConfig): AwsElasticBeanstalkCreatePlatformVersionOutput
  createStorageLocation(config: AwsConfig): AwsElasticBeanstalkCreateStorageLocationOutput
  deleteApplication(input: AwsElasticBeanstalkDeleteApplicationInput!, config: AwsConfig): JSON
  deleteApplicationVersion(input: AwsElasticBeanstalkDeleteApplicationVersionInput!, config: AwsConfig): JSON
  deleteConfigurationTemplate(input: AwsElasticBeanstalkDeleteConfigurationTemplateInput!, config: AwsConfig): JSON
  deleteEnvironmentConfiguration(input: AwsElasticBeanstalkDeleteEnvironmentConfigurationInput!, config: AwsConfig): JSON
  deletePlatformVersion(input: AwsElasticBeanstalkDeletePlatformVersionInput, config: AwsConfig): AwsElasticBeanstalkDeletePlatformVersionOutput
  describeApplicationVersions(input: AwsElasticBeanstalkDescribeApplicationVersionsInput, config: AwsConfig): AwsElasticBeanstalkDescribeApplicationVersionsOutput
  describeApplications(input: AwsElasticBeanstalkDescribeApplicationsInput, config: AwsConfig): AwsElasticBeanstalkDescribeApplicationsOutput
  describeConfigurationOptions(input: AwsElasticBeanstalkDescribeConfigurationOptionsInput, config: AwsConfig): AwsElasticBeanstalkDescribeConfigurationOptionsOutput
  describeConfigurationSettings(input: AwsElasticBeanstalkDescribeConfigurationSettingsInput!, config: AwsConfig): AwsElasticBeanstalkDescribeConfigurationSettingsOutput
  describeEnvironmentHealth(input: AwsElasticBeanstalkDescribeEnvironmentHealthInput, config: AwsConfig): AwsElasticBeanstalkDescribeEnvironmentHealthOutput
  describeEnvironmentManagedActionHistory(input: AwsElasticBeanstalkDescribeEnvironmentManagedActionHistoryInput, config: AwsConfig): AwsElasticBeanstalkDescribeEnvironmentManagedActionHistoryOutput
  describeEnvironmentManagedActions(input: AwsElasticBeanstalkDescribeEnvironmentManagedActionsInput, config: AwsConfig): AwsElasticBeanstalkDescribeEnvironmentManagedActionsOutput
  describeEnvironmentResources(input: AwsElasticBeanstalkDescribeEnvironmentResourcesInput, config: AwsConfig): AwsElasticBeanstalkDescribeEnvironmentResourcesOutput
  describeEnvironments(input: AwsElasticBeanstalkDescribeEnvironmentsInput, config: AwsConfig): JSON
  describeEvents(input: AwsElasticBeanstalkDescribeEventsInput, config: AwsConfig): AwsElasticBeanstalkDescribeEventsOutput
  describeInstancesHealth(input: AwsElasticBeanstalkDescribeInstancesHealthInput, config: AwsConfig): AwsElasticBeanstalkDescribeInstancesHealthOutput
  describePlatformVersion(input: AwsElasticBeanstalkDescribePlatformVersionInput, config: AwsConfig): AwsElasticBeanstalkDescribePlatformVersionOutput
  listAvailableSolutionStacks(config: AwsConfig): AwsElasticBeanstalkListAvailableSolutionStacksOutput
  listPlatformVersions(input: AwsElasticBeanstalkListPlatformVersionsInput, config: AwsConfig): AwsElasticBeanstalkListPlatformVersionsOutput
  listTagsForResource(input: AwsElasticBeanstalkListTagsForResourceInput!, config: AwsConfig): AwsElasticBeanstalkListTagsForResourceOutput
  rebuildEnvironment(input: AwsElasticBeanstalkRebuildEnvironmentInput, config: AwsConfig): JSON
  requestEnvironmentInfo(input: AwsElasticBeanstalkRequestEnvironmentInfoInput!, config: AwsConfig): JSON
  restartAppServer(input: AwsElasticBeanstalkRestartAppServerInput, config: AwsConfig): JSON
  retrieveEnvironmentInfo(input: AwsElasticBeanstalkRetrieveEnvironmentInfoInput!, config: AwsConfig): AwsElasticBeanstalkRetrieveEnvironmentInfoOutput
  swapEnvironmentCNAMEs(input: AwsElasticBeanstalkSwapEnvironmentCNAMEsInput, config: AwsConfig): JSON
  terminateEnvironment(input: AwsElasticBeanstalkTerminateEnvironmentInput, config: AwsConfig): JSON
  updateApplication(input: AwsElasticBeanstalkUpdateApplicationInput!, config: AwsConfig): JSON
  updateApplicationResourceLifecycle(input: AwsElasticBeanstalkUpdateApplicationResourceLifecycleInput!, config: AwsConfig): AwsElasticBeanstalkUpdateApplicationResourceLifecycleOutput
  updateApplicationVersion(input: AwsElasticBeanstalkUpdateApplicationVersionInput!, config: AwsConfig): JSON
  updateConfigurationTemplate(input: AwsElasticBeanstalkUpdateConfigurationTemplateInput!, config: AwsConfig): JSON
  updateEnvironment(input: AwsElasticBeanstalkUpdateEnvironmentInput, config: AwsConfig): JSON
  updateTagsForResource(input: AwsElasticBeanstalkUpdateTagsForResourceInput!, config: AwsConfig): JSON
  validateConfigurationSettings(input: AwsElasticBeanstalkValidateConfigurationSettingsInput!, config: AwsConfig): AwsElasticBeanstalkValidateConfigurationSettingsOutput
}

input AwsElasticBeanstalkAbortEnvironmentUpdateInput {
  EnvironmentId: String
  EnvironmentName: String
}

input AwsElasticBeanstalkApplyEnvironmentManagedActionInput {
  EnvironmentName: String
  EnvironmentId: String
  ActionId: String!
}

type AwsElasticBeanstalkApplyEnvironmentManagedActionOutput {
  ActionId: String
  ActionDescription: String
  ActionType: String
  Status: String
}

input AwsElasticBeanstalkCheckDNSAvailabilityInput {
  CNAMEPrefix: String!
}

type AwsElasticBeanstalkCheckDNSAvailabilityOutput {
  Available: Boolean
  FullyQualifiedCNAME: String
}

input AwsElasticBeanstalkComposeEnvironmentsInput {
  ApplicationName: String
  GroupName: String
  VersionLabels: [String]
}

input AwsElasticBeanstalkCreateApplicationInput {
  ApplicationName: String!
  Description: String
  ResourceLifecycleConfig: AwsElasticBeanstalkS17Input
}

input AwsElasticBeanstalkCreateApplicationVersionBuildConfigurationInput {
  ArtifactName: String
  CodeBuildServiceRole: String!
  ComputeType: String
  Image: String!
  TimeoutInMinutes: Int
}

input AwsElasticBeanstalkCreateApplicationVersionInput {
  ApplicationName: String!
  VersionLabel: String!
  Description: String
  SourceBuildInformation: AwsElasticBeanstalkS1iInput
  SourceBundle: AwsElasticBeanstalkS1mInput
  BuildConfiguration: AwsElasticBeanstalkCreateApplicationVersionBuildConfigurationInput
  AutoCreateApplication: Boolean
  Process: Boolean
}

input AwsElasticBeanstalkCreateConfigurationTemplateInput {
  ApplicationName: String!
  TemplateName: String!
  SolutionStackName: String
  PlatformArn: String
  SourceConfiguration: AwsElasticBeanstalkCreateConfigurationTemplateSourceConfigurationInput
  EnvironmentId: String
  Description: String
  OptionSettings: [AwsElasticBeanstalkS1zInput]
}

input AwsElasticBeanstalkCreateConfigurationTemplateSourceConfigurationInput {
  ApplicationName: String
  TemplateName: String
}

input AwsElasticBeanstalkCreateEnvironmentInput {
  ApplicationName: String!
  EnvironmentName: String
  GroupName: String
  Description: String
  CNAMEPrefix: String
  Tier: AwsElasticBeanstalkS11Input
  Tags: [AwsElasticBeanstalkS29Input]
  VersionLabel: String
  TemplateName: String
  SolutionStackName: String
  PlatformArn: String
  OptionSettings: [AwsElasticBeanstalkS1zInput]
  OptionsToRemove: [AwsElasticBeanstalkS2cInput]
}

input AwsElasticBeanstalkCreatePlatformVersionInput {
  PlatformName: String!
  PlatformVersion: String!
  PlatformDefinitionBundle: AwsElasticBeanstalkS1mInput!
  EnvironmentName: String
  OptionSettings: [AwsElasticBeanstalkS1zInput]
}

type AwsElasticBeanstalkCreatePlatformVersionOutput {
  PlatformSummary: AwsElasticBeanstalkS2i
  Builder: AwsElasticBeanstalkCreatePlatformVersionOutputBuilder
}

type AwsElasticBeanstalkCreatePlatformVersionOutputBuilder {
  ARN: String
}

type AwsElasticBeanstalkCreateStorageLocationOutput {
  S3Bucket: String
}

input AwsElasticBeanstalkDeleteApplicationInput {
  ApplicationName: String!
  TerminateEnvByForce: Boolean
}

input AwsElasticBeanstalkDeleteApplicationVersionInput {
  ApplicationName: String!
  VersionLabel: String!
  DeleteSourceBundle: Boolean
}

input AwsElasticBeanstalkDeleteConfigurationTemplateInput {
  ApplicationName: String!
  TemplateName: String!
}

input AwsElasticBeanstalkDeleteEnvironmentConfigurationInput {
  ApplicationName: String!
  EnvironmentName: String!
}

input AwsElasticBeanstalkDeletePlatformVersionInput {
  PlatformArn: String
}

type AwsElasticBeanstalkDeletePlatformVersionOutput {
  PlatformSummary: AwsElasticBeanstalkS2i
}

input AwsElasticBeanstalkDescribeApplicationsInput {
  ApplicationNames: [String]
}

type AwsElasticBeanstalkDescribeApplicationsOutput {
  Applications: [AwsElasticBeanstalkS1e]
}

input AwsElasticBeanstalkDescribeApplicationVersionsInput {
  ApplicationName: String
  VersionLabels: [String]
  MaxRecords: Int
  NextToken: String
}

type AwsElasticBeanstalkDescribeApplicationVersionsOutput {
  ApplicationVersions: [AwsElasticBeanstalkS1v]
  NextToken: String
}

input AwsElasticBeanstalkDescribeConfigurationOptionsInput {
  ApplicationName: String
  TemplateName: String
  EnvironmentName: String
  SolutionStackName: String
  PlatformArn: String
  Options: [AwsElasticBeanstalkS2cInput]
}

type AwsElasticBeanstalkDescribeConfigurationOptionsOutput {
  SolutionStackName: String
  PlatformArn: String
  Options: [AwsElasticBeanstalkDescribeConfigurationOptionsOutputOptions]
}

type AwsElasticBeanstalkDescribeConfigurationOptionsOutputOptions {
  Namespace: String
  Name: String
  DefaultValue: String
  ChangeSeverity: String
  UserDefined: Boolean
  ValueType: String
  ValueOptions: [String]
  MinValue: Int
  MaxValue: Int
  MaxLength: Int
  Regex: AwsElasticBeanstalkDescribeConfigurationOptionsOutputOptionsRegex
}

type AwsElasticBeanstalkDescribeConfigurationOptionsOutputOptionsRegex {
  Pattern: String
  Label: String
}

input AwsElasticBeanstalkDescribeConfigurationSettingsInput {
  ApplicationName: String!
  TemplateName: String
  EnvironmentName: String
}

type AwsElasticBeanstalkDescribeConfigurationSettingsOutput {
  ConfigurationSettings: [AwsElasticBeanstalkS25]
}

input AwsElasticBeanstalkDescribeEnvironmentHealthInput {
  EnvironmentName: String
  EnvironmentId: String
  AttributeNames: [String]
}

type AwsElasticBeanstalkDescribeEnvironmentHealthOutput {
  EnvironmentName: String
  HealthStatus: String
  Status: String
  Color: String
  Causes: [String]
  ApplicationMetrics: AwsElasticBeanstalkS40
  InstancesHealth: AwsElasticBeanstalkDescribeEnvironmentHealthOutputInstancesHealth
  RefreshedAt: Date
}

type AwsElasticBeanstalkDescribeEnvironmentHealthOutputInstancesHealth {
  NoData: Int
  Unknown: Int
  Pending: Int
  Ok: Int
  Info: Int
  Warning: Int
  Degraded: Int
  Severe: Int
}

input AwsElasticBeanstalkDescribeEnvironmentManagedActionHistoryInput {
  EnvironmentId: String
  EnvironmentName: String
  NextToken: String
  MaxItems: Int
}

type AwsElasticBeanstalkDescribeEnvironmentManagedActionHistoryOutput {
  ManagedActionHistoryItems: [AwsElasticBeanstalkDescribeEnvironmentManagedActionHistoryOutputManagedActionHistoryItems]
  NextToken: String
}

type AwsElasticBeanstalkDescribeEnvironmentManagedActionHistoryOutputManagedActionHistoryItems {
  ActionId: String
  ActionType: String
  ActionDescription: String
  FailureType: String
  Status: String
  FailureDescription: String
  ExecutedTime: Date
  FinishedTime: Date
}

input AwsElasticBeanstalkDescribeEnvironmentManagedActionsInput {
  EnvironmentName: String
  EnvironmentId: String
  Status: String
}

type AwsElasticBeanstalkDescribeEnvironmentManagedActionsOutput {
  ManagedActions: [AwsElasticBeanstalkDescribeEnvironmentManagedActionsOutputManagedActions]
}

type AwsElasticBeanstalkDescribeEnvironmentManagedActionsOutputManagedActions {
  ActionId: String
  ActionDescription: String
  ActionType: String
  Status: String
  WindowStartTime: Date
}

input AwsElasticBeanstalkDescribeEnvironmentResourcesInput {
  EnvironmentId: String
  EnvironmentName: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutput {
  EnvironmentResources: AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResources
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResources {
  EnvironmentName: String
  AutoScalingGroups: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesAutoScalingGroups]
  Instances: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesInstances]
  LaunchConfigurations: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLaunchConfigurations]
  LoadBalancers: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLoadBalancers]
  Triggers: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesTriggers]
  Queues: [AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesQueues]
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesAutoScalingGroups {
  Name: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesInstances {
  Id: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLaunchConfigurations {
  Name: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesLoadBalancers {
  Name: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesQueues {
  Name: String
  URL: String
}

type AwsElasticBeanstalkDescribeEnvironmentResourcesOutputEnvironmentResourcesTriggers {
  Name: String
}

input AwsElasticBeanstalkDescribeEnvironmentsInput {
  ApplicationName: String
  VersionLabel: String
  EnvironmentIds: [String]
  EnvironmentNames: [String]
  IncludeDeleted: Boolean
  IncludedDeletedBackTo: Date
  MaxRecords: Int
  NextToken: String
}

input AwsElasticBeanstalkDescribeEventsInput {
  ApplicationName: String
  VersionLabel: String
  TemplateName: String
  EnvironmentId: String
  EnvironmentName: String
  PlatformArn: String
  RequestId: String
  Severity: String
  StartTime: Date
  EndTime: Date
  MaxRecords: Int
  NextToken: String
}

type AwsElasticBeanstalkDescribeEventsOutput {
  Events: [AwsElasticBeanstalkDescribeEventsOutputEvents]
  NextToken: String
}

type AwsElasticBeanstalkDescribeEventsOutputEvents {
  EventDate: Date
  Message: String
  ApplicationName: String
  VersionLabel: String
  TemplateName: String
  EnvironmentName: String
  PlatformArn: String
  RequestId: String
  Severity: String
}

input AwsElasticBeanstalkDescribeInstancesHealthInput {
  EnvironmentName: String
  EnvironmentId: String
  AttributeNames: [String]
  NextToken: String
}

type AwsElasticBeanstalkDescribeInstancesHealthOutput {
  InstanceHealthList: [AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthList]
  RefreshedAt: Date
  NextToken: String
}

type AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthList {
  InstanceId: String
  HealthStatus: String
  Color: String
  Causes: [String]
  LaunchedAt: Date
  ApplicationMetrics: AwsElasticBeanstalkS40
  System: AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthListSystem
  Deployment: AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthListDeployment
  AvailabilityZone: String
  InstanceType: String
}

type AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthListDeployment {
  VersionLabel: String
  DeploymentId: JSON
  Status: String
  DeploymentTime: Date
}

type AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthListSystem {
  CPUUtilization: AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthListSystemCPUUtilization
  LoadAverage: [JSON]
}

type AwsElasticBeanstalkDescribeInstancesHealthOutputInstanceHealthListSystemCPUUtilization {
  User: JSON
  Nice: JSON
  System: JSON
  Idle: JSON
  IOWait: JSON
  IRQ: JSON
  SoftIRQ: JSON
}

input AwsElasticBeanstalkDescribePlatformVersionInput {
  PlatformArn: String
}

type AwsElasticBeanstalkDescribePlatformVersionOutput {
  PlatformDescription: AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescription
}

type AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescription {
  PlatformArn: String
  PlatformOwner: String
  PlatformName: String
  PlatformVersion: String
  SolutionStackName: String
  PlatformStatus: String
  DateCreated: Date
  DateUpdated: Date
  PlatformCategory: String
  Description: String
  Maintainer: String
  OperatingSystemName: String
  OperatingSystemVersion: String
  ProgrammingLanguages: [AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescriptionProgrammingLanguages]
  Frameworks: [AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescriptionFrameworks]
  CustomAmiList: [AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescriptionCustomAmiList]
  SupportedTierList: [String]
  SupportedAddonList: [String]
}

type AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescriptionCustomAmiList {
  VirtualizationType: String
  ImageId: String
}

type AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescriptionFrameworks {
  Name: String
  Version: String
}

type AwsElasticBeanstalkDescribePlatformVersionOutputPlatformDescriptionProgrammingLanguages {
  Name: String
  Version: String
}

type AwsElasticBeanstalkListAvailableSolutionStacksOutput {
  SolutionStacks: [String]
  SolutionStackDetails: [AwsElasticBeanstalkListAvailableSolutionStacksOutputSolutionStackDetails]
}

type AwsElasticBeanstalkListAvailableSolutionStacksOutputSolutionStackDetails {
  SolutionStackName: String
  PermittedFileTypes: [String]
}

input AwsElasticBeanstalkListPlatformVersionsFiltersInput {
  Type: String
  Operator: String
  Values: [String]
}

input AwsElasticBeanstalkListPlatformVersionsInput {
  Filters: [AwsElasticBeanstalkListPlatformVersionsFiltersInput]
  MaxRecords: Int
  NextToken: String
}

type AwsElasticBeanstalkListPlatformVersionsOutput {
  PlatformSummaryList: [AwsElasticBeanstalkS2i]
  NextToken: String
}

input AwsElasticBeanstalkListTagsForResourceInput {
  ResourceArn: String!
}

type AwsElasticBeanstalkListTagsForResourceOutput {
  ResourceArn: String
  ResourceTags: [AwsElasticBeanstalkS29]
}

input AwsElasticBeanstalkRebuildEnvironmentInput {
  EnvironmentId: String
  EnvironmentName: String
}

input AwsElasticBeanstalkRequestEnvironmentInfoInput {
  EnvironmentId: String
  EnvironmentName: String
  InfoType: String!
}

input AwsElasticBeanstalkRestartAppServerInput {
  EnvironmentId: String
  EnvironmentName: String
}

input AwsElasticBeanstalkRetrieveEnvironmentInfoInput {
  EnvironmentId: String
  EnvironmentName: String
  InfoType: String!
}

type AwsElasticBeanstalkRetrieveEnvironmentInfoOutput {
  EnvironmentInfo: [AwsElasticBeanstalkRetrieveEnvironmentInfoOutputEnvironmentInfo]
}

type AwsElasticBeanstalkRetrieveEnvironmentInfoOutputEnvironmentInfo {
  InfoType: String
  Ec2InstanceId: String
  SampleTimestamp: Date
  Message: String
}

input AwsElasticBeanstalkS11Input {
  Name: String
  Type: String
  Version: String
}

type AwsElasticBeanstalkS17 {
  ServiceRole: String
  VersionLifecycleConfig: AwsElasticBeanstalkS17VersionLifecycleConfig
}

input AwsElasticBeanstalkS17Input {
  ServiceRole: String
  VersionLifecycleConfig: AwsElasticBeanstalkS17VersionLifecycleConfigInput
}

type AwsElasticBeanstalkS17VersionLifecycleConfig {
  MaxCountRule: AwsElasticBeanstalkS17VersionLifecycleConfigMaxCountRule
  MaxAgeRule: AwsElasticBeanstalkS17VersionLifecycleConfigMaxAgeRule
}

input AwsElasticBeanstalkS17VersionLifecycleConfigInput {
  MaxCountRule: AwsElasticBeanstalkS17VersionLifecycleConfigMaxCountRuleInput
  MaxAgeRule: AwsElasticBeanstalkS17VersionLifecycleConfigMaxAgeRuleInput
}

type AwsElasticBeanstalkS17VersionLifecycleConfigMaxAgeRule {
  Enabled: Boolean!
  MaxAgeInDays: Int
  DeleteSourceFromS3: Boolean
}

input AwsElasticBeanstalkS17VersionLifecycleConfigMaxAgeRuleInput {
  Enabled: Boolean!
  MaxAgeInDays: Int
  DeleteSourceFromS3: Boolean
}

type AwsElasticBeanstalkS17VersionLifecycleConfigMaxCountRule {
  Enabled: Boolean!
  MaxCount: Int
  DeleteSourceFromS3: Boolean
}

input AwsElasticBeanstalkS17VersionLifecycleConfigMaxCountRuleInput {
  Enabled: Boolean!
  MaxCount: Int
  DeleteSourceFromS3: Boolean
}

type AwsElasticBeanstalkS1e {
  ApplicationName: String
  Description: String
  DateCreated: Date
  DateUpdated: Date
  Versions: [String]
  ConfigurationTemplates: [String]
  ResourceLifecycleConfig: AwsElasticBeanstalkS17
}

type AwsElasticBeanstalkS1i {
  SourceType: String!
  SourceRepository: String!
  SourceLocation: String!
}

input AwsElasticBeanstalkS1iInput {
  SourceType: String!
  SourceRepository: String!
  SourceLocation: String!
}

type AwsElasticBeanstalkS1m {
  S3Bucket: String
  S3Key: String
}

input AwsElasticBeanstalkS1mInput {
  S3Bucket: String
  S3Key: String
}

type AwsElasticBeanstalkS1v {
  ApplicationName: String
  Description: String
  VersionLabel: String
  SourceBuildInformation: AwsElasticBeanstalkS1i
  BuildArn: String
  SourceBundle: AwsElasticBeanstalkS1m
  DateCreated: Date
  DateUpdated: Date
  Status: String
}

type AwsElasticBeanstalkS1z {
  ResourceName: String
  Namespace: String
  OptionName: String
  Value: String
}

input AwsElasticBeanstalkS1zInput {
  ResourceName: String
  Namespace: String
  OptionName: String
  Value: String
}

type AwsElasticBeanstalkS25 {
  SolutionStackName: String
  PlatformArn: String
  ApplicationName: String
  TemplateName: String
  Description: String
  EnvironmentName: String
  DeploymentStatus: String
  DateCreated: Date
  DateUpdated: Date
  OptionSettings: [AwsElasticBeanstalkS1z]
}

type AwsElasticBeanstalkS29 {
  Key: String
  Value: String
}

input AwsElasticBeanstalkS29Input {
  Key: String
  Value: String
}

input AwsElasticBeanstalkS2cInput {
  ResourceName: String
  Namespace: String
  OptionName: String
}

type AwsElasticBeanstalkS2i {
  PlatformArn: String
  PlatformOwner: String
  PlatformStatus: String
  PlatformCategory: String
  OperatingSystemName: String
  OperatingSystemVersion: String
  SupportedTierList: [String]
  SupportedAddonList: [String]
}

type AwsElasticBeanstalkS40 {
  Duration: Int
  RequestCount: Int
  StatusCodes: AwsElasticBeanstalkS40StatusCodes
  Latency: AwsElasticBeanstalkS40Latency
}

type AwsElasticBeanstalkS40Latency {
  P999: JSON
  P99: JSON
  P95: JSON
  P90: JSON
  P85: JSON
  P75: JSON
  P50: JSON
  P10: JSON
}

type AwsElasticBeanstalkS40StatusCodes {
  Status2xx: Int
  Status3xx: Int
  Status4xx: Int
  Status5xx: Int
}

input AwsElasticBeanstalkSwapEnvironmentCNAMEsInput {
  SourceEnvironmentId: String
  SourceEnvironmentName: String
  DestinationEnvironmentId: String
  DestinationEnvironmentName: String
}

input AwsElasticBeanstalkTerminateEnvironmentInput {
  EnvironmentId: String
  EnvironmentName: String
  TerminateResources: Boolean
  ForceTerminate: Boolean
}

input AwsElasticBeanstalkUpdateApplicationInput {
  ApplicationName: String!
  Description: String
}

input AwsElasticBeanstalkUpdateApplicationResourceLifecycleInput {
  ApplicationName: String!
  ResourceLifecycleConfig: AwsElasticBeanstalkS17Input!
}

type AwsElasticBeanstalkUpdateApplicationResourceLifecycleOutput {
  ApplicationName: String
  ResourceLifecycleConfig: AwsElasticBeanstalkS17
}

input AwsElasticBeanstalkUpdateApplicationVersionInput {
  ApplicationName: String!
  VersionLabel: String!
  Description: String
}

input AwsElasticBeanstalkUpdateConfigurationTemplateInput {
  ApplicationName: String!
  TemplateName: String!
  Description: String
  OptionSettings: [AwsElasticBeanstalkS1zInput]
  OptionsToRemove: [AwsElasticBeanstalkS2cInput]
}

input AwsElasticBeanstalkUpdateEnvironmentInput {
  ApplicationName: String
  EnvironmentId: String
  EnvironmentName: String
  GroupName: String
  Description: String
  Tier: AwsElasticBeanstalkS11Input
  VersionLabel: String
  TemplateName: String
  SolutionStackName: String
  PlatformArn: String
  OptionSettings: [AwsElasticBeanstalkS1zInput]
  OptionsToRemove: [AwsElasticBeanstalkS2cInput]
}

input AwsElasticBeanstalkUpdateTagsForResourceInput {
  ResourceArn: String!
  TagsToAdd: [AwsElasticBeanstalkS29Input]
  TagsToRemove: [String]
}

input AwsElasticBeanstalkValidateConfigurationSettingsInput {
  ApplicationName: String!
  TemplateName: String
  EnvironmentName: String
  OptionSettings: [AwsElasticBeanstalkS1zInput]!
}

type AwsElasticBeanstalkValidateConfigurationSettingsOutput {
  Messages: [AwsElasticBeanstalkValidateConfigurationSettingsOutputMessages]
}

type AwsElasticBeanstalkValidateConfigurationSettingsOutputMessages {
  Message: String
  Severity: String
  Namespace: String
  OptionName: String
}

# Amazon Elastic Transcoder (2012-09-25)
type AwsElasticTranscoder {
  cancelJob(input: AwsElasticTranscoderCancelJobInput!, config: AwsConfig): JSON
  createJob(input: AwsElasticTranscoderCreateJobInput!, config: AwsConfig): AwsElasticTranscoderCreateJobOutput
  createPipeline(input: AwsElasticTranscoderCreatePipelineInput!, config: AwsConfig): AwsElasticTranscoderCreatePipelineOutput
  createPreset(input: AwsElasticTranscoderCreatePresetInput!, config: AwsConfig): AwsElasticTranscoderCreatePresetOutput
  deletePipeline(input: AwsElasticTranscoderDeletePipelineInput!, config: AwsConfig): JSON
  deletePreset(input: AwsElasticTranscoderDeletePresetInput!, config: AwsConfig): JSON
  listJobsByPipeline(input: AwsElasticTranscoderListJobsByPipelineInput!, config: AwsConfig): AwsElasticTranscoderListJobsByPipelineOutput
  listJobsByStatus(input: AwsElasticTranscoderListJobsByStatusInput!, config: AwsConfig): AwsElasticTranscoderListJobsByStatusOutput
  listPipelines(input: AwsElasticTranscoderListPipelinesInput, config: AwsConfig): AwsElasticTranscoderListPipelinesOutput
  listPresets(input: AwsElasticTranscoderListPresetsInput, config: AwsConfig): AwsElasticTranscoderListPresetsOutput
  readJob(input: AwsElasticTranscoderReadJobInput!, config: AwsConfig): AwsElasticTranscoderReadJobOutput
  readPipeline(input: AwsElasticTranscoderReadPipelineInput!, config: AwsConfig): AwsElasticTranscoderReadPipelineOutput
  readPreset(input: AwsElasticTranscoderReadPresetInput!, config: AwsConfig): AwsElasticTranscoderReadPresetOutput
  testRole(input: AwsElasticTranscoderTestRoleInput!, config: AwsConfig): AwsElasticTranscoderTestRoleOutput
  updatePipeline(input: AwsElasticTranscoderUpdatePipelineInput!, config: AwsConfig): AwsElasticTranscoderUpdatePipelineOutput
  updatePipelineNotifications(input: AwsElasticTranscoderUpdatePipelineNotificationsInput!, config: AwsConfig): AwsElasticTranscoderUpdatePipelineNotificationsOutput
  updatePipelineStatus(input: AwsElasticTranscoderUpdatePipelineStatusInput!, config: AwsConfig): AwsElasticTranscoderUpdatePipelineStatusOutput
}

input AwsElasticTranscoderCancelJobInput {
  Id: String!
}

input AwsElasticTranscoderCreateJobInput {
  PipelineId: String!
  Input: AwsElasticTranscoderS5Input
  Inputs: [AwsElasticTranscoderS5Input]
  Output: AwsElasticTranscoderSuInput
  Outputs: [AwsElasticTranscoderSuInput]
  OutputKeyPrefix: String
  Playlists: [AwsElasticTranscoderCreateJobPlaylistsInput]
  UserMetadata: JSON
}

type AwsElasticTranscoderCreateJobOutput {
  Job: AwsElasticTranscoderS1y
}

input AwsElasticTranscoderCreateJobPlaylistsInput {
  Name: String
  Format: String
  OutputKeys: [String]
  HlsContentProtection: AwsElasticTranscoderS1mInput
  PlayReadyDrm: AwsElasticTranscoderS1qInput
}

input AwsElasticTranscoderCreatePipelineInput {
  Name: String!
  InputBucket: String!
  OutputBucket: String
  Role: String!
  AwsKmsKeyArn: String
  Notifications: AwsElasticTranscoderS2aInput
  ContentConfig: AwsElasticTranscoderS2cInput
  ThumbnailConfig: AwsElasticTranscoderS2cInput
}

type AwsElasticTranscoderCreatePipelineOutput {
  Pipeline: AwsElasticTranscoderS2l
  Warnings: [AwsElasticTranscoderS2n]
}

input AwsElasticTranscoderCreatePresetInput {
  Name: String!
  Description: String
  Container: String!
  Video: AwsElasticTranscoderS2rInput
  Audio: AwsElasticTranscoderS37Input
  Thumbnails: AwsElasticTranscoderS3iInput
}

type AwsElasticTranscoderCreatePresetOutput {
  Preset: AwsElasticTranscoderS3m
  Warning: String
}

input AwsElasticTranscoderDeletePipelineInput {
  Id: String!
}

input AwsElasticTranscoderDeletePresetInput {
  Id: String!
}

input AwsElasticTranscoderListJobsByPipelineInput {
  PipelineId: String!
  Ascending: String
  PageToken: String
}

type AwsElasticTranscoderListJobsByPipelineOutput {
  Jobs: [AwsElasticTranscoderS1y]
  NextPageToken: String
}

input AwsElasticTranscoderListJobsByStatusInput {
  Status: String!
  Ascending: String
  PageToken: String
}

type AwsElasticTranscoderListJobsByStatusOutput {
  Jobs: [AwsElasticTranscoderS1y]
  NextPageToken: String
}

input AwsElasticTranscoderListPipelinesInput {
  Ascending: String
  PageToken: String
}

type AwsElasticTranscoderListPipelinesOutput {
  Pipelines: [AwsElasticTranscoderS2l]
  NextPageToken: String
}

input AwsElasticTranscoderListPresetsInput {
  Ascending: String
  PageToken: String
}

type AwsElasticTranscoderListPresetsOutput {
  Presets: [AwsElasticTranscoderS3m]
  NextPageToken: String
}

input AwsElasticTranscoderReadJobInput {
  Id: String!
}

type AwsElasticTranscoderReadJobOutput {
  Job: AwsElasticTranscoderS1y
}

input AwsElasticTranscoderReadPipelineInput {
  Id: String!
}

type AwsElasticTranscoderReadPipelineOutput {
  Pipeline: AwsElasticTranscoderS2l
  Warnings: [AwsElasticTranscoderS2n]
}

input AwsElasticTranscoderReadPresetInput {
  Id: String!
}

type AwsElasticTranscoderReadPresetOutput {
  Preset: AwsElasticTranscoderS3m
}

type AwsElasticTranscoderS11 {
  MergePolicy: String
  Artwork: [AwsElasticTranscoderS11Artwork]
}

type AwsElasticTranscoderS11Artwork {
  InputKey: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  PaddingPolicy: String
  AlbumArtFormat: String
  Encryption: AwsElasticTranscoderSc
}

input AwsElasticTranscoderS11ArtworkInput {
  InputKey: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  PaddingPolicy: String
  AlbumArtFormat: String
  Encryption: AwsElasticTranscoderScInput
}

input AwsElasticTranscoderS11Input {
  MergePolicy: String
  Artwork: [AwsElasticTranscoderS11ArtworkInput]
}

type AwsElasticTranscoderS19 {
  TimeSpan: AwsElasticTranscoderSg
}

input AwsElasticTranscoderS19Input {
  TimeSpan: AwsElasticTranscoderSgInput
}

type AwsElasticTranscoderS1b {
  MergePolicy: String
  CaptionSources: [AwsElasticTranscoderSk]
  CaptionFormats: [AwsElasticTranscoderS1bCaptionFormats]
}

type AwsElasticTranscoderS1bCaptionFormats {
  Format: String
  Pattern: String
  Encryption: AwsElasticTranscoderSc
}

input AwsElasticTranscoderS1bCaptionFormatsInput {
  Format: String
  Pattern: String
  Encryption: AwsElasticTranscoderScInput
}

input AwsElasticTranscoderS1bInput {
  MergePolicy: String
  CaptionSources: [AwsElasticTranscoderSkInput]
  CaptionFormats: [AwsElasticTranscoderS1bCaptionFormatsInput]
}

type AwsElasticTranscoderS1m {
  Method: String
  Key: String
  KeyMd5: String
  InitializationVector: String
  LicenseAcquisitionUrl: String
  KeyStoragePolicy: String
}

input AwsElasticTranscoderS1mInput {
  Method: String
  Key: String
  KeyMd5: String
  InitializationVector: String
  LicenseAcquisitionUrl: String
  KeyStoragePolicy: String
}

type AwsElasticTranscoderS1q {
  Format: String
  Key: String
  KeyMd5: String
  KeyId: String
  InitializationVector: String
  LicenseAcquisitionUrl: String
}

input AwsElasticTranscoderS1qInput {
  Format: String
  Key: String
  KeyMd5: String
  KeyId: String
  InitializationVector: String
  LicenseAcquisitionUrl: String
}

type AwsElasticTranscoderS1y {
  Id: String
  Arn: String
  PipelineId: String
  Input: AwsElasticTranscoderS5
  Inputs: [AwsElasticTranscoderS5]
  Output: AwsElasticTranscoderS1z
  Outputs: [AwsElasticTranscoderS1z]
  OutputKeyPrefix: String
  Playlists: [AwsElasticTranscoderS1yPlaylists]
  Status: String
  UserMetadata: JSON
  Timing: AwsElasticTranscoderS1yTiming
}

type AwsElasticTranscoderS1yPlaylists {
  Name: String
  Format: String
  OutputKeys: [String]
  HlsContentProtection: AwsElasticTranscoderS1m
  PlayReadyDrm: AwsElasticTranscoderS1q
  Status: String
  StatusDetail: String
}

type AwsElasticTranscoderS1yTiming {
  SubmitTimeMillis: JSON
  StartTimeMillis: JSON
  FinishTimeMillis: JSON
}

type AwsElasticTranscoderS1z {
  Id: String
  Key: String
  ThumbnailPattern: String
  ThumbnailEncryption: AwsElasticTranscoderSc
  Rotate: String
  PresetId: String
  SegmentDuration: String
  Status: String
  StatusDetail: String
  Duration: JSON
  Width: Int
  Height: Int
  FrameRate: String
  FileSize: JSON
  DurationMillis: JSON
  Watermarks: [AwsElasticTranscoderSx]
  AlbumArt: AwsElasticTranscoderS11
  Composition: [AwsElasticTranscoderS19]
  Captions: AwsElasticTranscoderS1b
  Encryption: AwsElasticTranscoderSc
  AppliedColorSpaceConversion: String
}

type AwsElasticTranscoderS2a {
  Progressing: String
  Completed: String
  Warning: String
  Error: String
}

input AwsElasticTranscoderS2aInput {
  Progressing: String
  Completed: String
  Warning: String
  Error: String
}

type AwsElasticTranscoderS2c {
  Bucket: String
  StorageClass: String
  Permissions: [AwsElasticTranscoderS2cPermissions]
}

input AwsElasticTranscoderS2cInput {
  Bucket: String
  StorageClass: String
  Permissions: [AwsElasticTranscoderS2cPermissionsInput]
}

type AwsElasticTranscoderS2cPermissions {
  GranteeType: String
  Grantee: String
  Access: [String]
}

input AwsElasticTranscoderS2cPermissionsInput {
  GranteeType: String
  Grantee: String
  Access: [String]
}

type AwsElasticTranscoderS2l {
  Id: String
  Arn: String
  Name: String
  Status: String
  InputBucket: String
  OutputBucket: String
  Role: String
  AwsKmsKeyArn: String
  Notifications: AwsElasticTranscoderS2a
  ContentConfig: AwsElasticTranscoderS2c
  ThumbnailConfig: AwsElasticTranscoderS2c
}

type AwsElasticTranscoderS2n {
  Code: String
  Message: String
}

type AwsElasticTranscoderS2r {
  Codec: String
  CodecOptions: JSON
  KeyframesMaxDist: String
  FixedGOP: String
  BitRate: String
  FrameRate: String
  MaxFrameRate: String
  Resolution: String
  AspectRatio: String
  MaxWidth: String
  MaxHeight: String
  DisplayAspectRatio: String
  SizingPolicy: String
  PaddingPolicy: String
  Watermarks: [AwsElasticTranscoderS2rWatermarks]
}

input AwsElasticTranscoderS2rInput {
  Codec: String
  CodecOptions: JSON
  KeyframesMaxDist: String
  FixedGOP: String
  BitRate: String
  FrameRate: String
  MaxFrameRate: String
  Resolution: String
  AspectRatio: String
  MaxWidth: String
  MaxHeight: String
  DisplayAspectRatio: String
  SizingPolicy: String
  PaddingPolicy: String
  Watermarks: [AwsElasticTranscoderS2rWatermarksInput]
}

type AwsElasticTranscoderS2rWatermarks {
  Id: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  HorizontalAlign: String
  HorizontalOffset: String
  VerticalAlign: String
  VerticalOffset: String
  Opacity: String
  Target: String
}

input AwsElasticTranscoderS2rWatermarksInput {
  Id: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  HorizontalAlign: String
  HorizontalOffset: String
  VerticalAlign: String
  VerticalOffset: String
  Opacity: String
  Target: String
}

type AwsElasticTranscoderS37 {
  Codec: String
  SampleRate: String
  BitRate: String
  Channels: String
  AudioPackingMode: String
  CodecOptions: AwsElasticTranscoderS37CodecOptions
}

type AwsElasticTranscoderS37CodecOptions {
  Profile: String
  BitDepth: String
  BitOrder: String
  Signed: String
}

input AwsElasticTranscoderS37CodecOptionsInput {
  Profile: String
  BitDepth: String
  BitOrder: String
  Signed: String
}

input AwsElasticTranscoderS37Input {
  Codec: String
  SampleRate: String
  BitRate: String
  Channels: String
  AudioPackingMode: String
  CodecOptions: AwsElasticTranscoderS37CodecOptionsInput
}

type AwsElasticTranscoderS3i {
  Format: String
  Interval: String
  Resolution: String
  AspectRatio: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  PaddingPolicy: String
}

input AwsElasticTranscoderS3iInput {
  Format: String
  Interval: String
  Resolution: String
  AspectRatio: String
  MaxWidth: String
  MaxHeight: String
  SizingPolicy: String
  PaddingPolicy: String
}

type AwsElasticTranscoderS3m {
  Id: String
  Arn: String
  Name: String
  Description: String
  Container: String
  Audio: AwsElasticTranscoderS37
  Video: AwsElasticTranscoderS2r
  Thumbnails: AwsElasticTranscoderS3i
  Type: String
}

type AwsElasticTranscoderS5 {
  Key: String
  FrameRate: String
  Resolution: String
  AspectRatio: String
  Interlaced: String
  Container: String
  Encryption: AwsElasticTranscoderSc
  TimeSpan: AwsElasticTranscoderSg
  InputCaptions: AwsElasticTranscoderS5InputCaptions
  DetectedProperties: AwsElasticTranscoderS5DetectedProperties
}

type AwsElasticTranscoderS5DetectedProperties {
  Width: Int
  Height: Int
  FrameRate: String
  FileSize: JSON
  DurationMillis: JSON
}

input AwsElasticTranscoderS5DetectedPropertiesInput {
  Width: Int
  Height: Int
  FrameRate: String
  FileSize: JSON
  DurationMillis: JSON
}

input AwsElasticTranscoderS5Input {
  Key: String
  FrameRate: String
  Resolution: String
  AspectRatio: String
  Interlaced: String
  Container: String
  Encryption: AwsElasticTranscoderScInput
  TimeSpan: AwsElasticTranscoderSgInput
  InputCaptions: AwsElasticTranscoderS5InputCaptionsInput
  DetectedProperties: AwsElasticTranscoderS5DetectedPropertiesInput
}

type AwsElasticTranscoderS5InputCaptions {
  MergePolicy: String
  CaptionSources: [AwsElasticTranscoderSk]
}

input AwsElasticTranscoderS5InputCaptionsInput {
  MergePolicy: String
  CaptionSources: [AwsElasticTranscoderSkInput]
}

type AwsElasticTranscoderSc {
  Mode: String
  Key: String
  KeyMd5: String
  InitializationVector: String
}

input AwsElasticTranscoderScInput {
  Mode: String
  Key: String
  KeyMd5: String
  InitializationVector: String
}

type AwsElasticTranscoderSg {
  StartTime: String
  Duration: String
}

input AwsElasticTranscoderSgInput {
  StartTime: String
  Duration: String
}

type AwsElasticTranscoderSk {
  Key: String
  Language: String
  TimeOffset: String
  Label: String
  Encryption: AwsElasticTranscoderSc
}

input AwsElasticTranscoderSkInput {
  Key: String
  Language: String
  TimeOffset: String
  Label: String
  Encryption: AwsElasticTranscoderScInput
}

input AwsElasticTranscoderSuInput {
  Key: String
  ThumbnailPattern: String
  ThumbnailEncryption: AwsElasticTranscoderScInput
  Rotate: String
  PresetId: String
  SegmentDuration: String
  Watermarks: [AwsElasticTranscoderSxInput]
  AlbumArt: AwsElasticTranscoderS11Input
  Composition: [AwsElasticTranscoderS19Input]
  Captions: AwsElasticTranscoderS1bInput
  Encryption: AwsElasticTranscoderScInput
}

type AwsElasticTranscoderSx {
  PresetWatermarkId: String
  InputKey: String
  Encryption: AwsElasticTranscoderSc
}

input AwsElasticTranscoderSxInput {
  PresetWatermarkId: String
  InputKey: String
  Encryption: AwsElasticTranscoderScInput
}

input AwsElasticTranscoderTestRoleInput {
  Role: String!
  InputBucket: String!
  OutputBucket: String!
  Topics: [String]!
}

type AwsElasticTranscoderTestRoleOutput {
  Success: String
  Messages: [String]
}

input AwsElasticTranscoderUpdatePipelineInput {
  Id: String!
  Name: String
  InputBucket: String
  Role: String
  AwsKmsKeyArn: String
  Notifications: AwsElasticTranscoderS2aInput
  ContentConfig: AwsElasticTranscoderS2cInput
  ThumbnailConfig: AwsElasticTranscoderS2cInput
}

input AwsElasticTranscoderUpdatePipelineNotificationsInput {
  Id: String!
  Notifications: AwsElasticTranscoderS2aInput!
}

type AwsElasticTranscoderUpdatePipelineNotificationsOutput {
  Pipeline: AwsElasticTranscoderS2l
}

type AwsElasticTranscoderUpdatePipelineOutput {
  Pipeline: AwsElasticTranscoderS2l
  Warnings: [AwsElasticTranscoderS2n]
}

input AwsElasticTranscoderUpdatePipelineStatusInput {
  Id: String!
  Status: String!
}

type AwsElasticTranscoderUpdatePipelineStatusOutput {
  Pipeline: AwsElasticTranscoderS2l
}

# Elastic Load Balancing (2012-06-01)
type AwsELB {
  addTags(input: AwsELBAddTagsInput!, config: AwsConfig): JSON
  applySecurityGroupsToLoadBalancer(input: AwsELBApplySecurityGroupsToLoadBalancerInput!, config: AwsConfig): AwsELBApplySecurityGroupsToLoadBalancerOutput
  attachLoadBalancerToSubnets(input: AwsELBAttachLoadBalancerToSubnetsInput!, config: AwsConfig): AwsELBAttachLoadBalancerToSubnetsOutput
  configureHealthCheck(input: AwsELBConfigureHealthCheckInput!, config: AwsConfig): AwsELBConfigureHealthCheckOutput
  createAppCookieStickinessPolicy(input: AwsELBCreateAppCookieStickinessPolicyInput!, config: AwsConfig): JSON
  createLBCookieStickinessPolicy(input: AwsELBCreateLBCookieStickinessPolicyInput!, config: AwsConfig): JSON
  createLoadBalancer(input: AwsELBCreateLoadBalancerInput!, config: AwsConfig): AwsELBCreateLoadBalancerOutput
  createLoadBalancerListeners(input: AwsELBCreateLoadBalancerListenersInput!, config: AwsConfig): JSON
  createLoadBalancerPolicy(input: AwsELBCreateLoadBalancerPolicyInput!, config: AwsConfig): JSON
  deleteLoadBalancer(input: AwsELBDeleteLoadBalancerInput!, config: AwsConfig): JSON
  deleteLoadBalancerListeners(input: AwsELBDeleteLoadBalancerListenersInput!, config: AwsConfig): JSON
  deleteLoadBalancerPolicy(input: AwsELBDeleteLoadBalancerPolicyInput!, config: AwsConfig): JSON
  deregisterInstancesFromLoadBalancer(input: AwsELBDeregisterInstancesFromLoadBalancerInput!, config: AwsConfig): AwsELBDeregisterInstancesFromLoadBalancerOutput
  describeAccountLimits(input: AwsELBDescribeAccountLimitsInput, config: AwsConfig): AwsELBDescribeAccountLimitsOutput
  describeInstanceHealth(input: AwsELBDescribeInstanceHealthInput!, config: AwsConfig): AwsELBDescribeInstanceHealthOutput
  describeLoadBalancerAttributes(input: AwsELBDescribeLoadBalancerAttributesInput!, config: AwsConfig): AwsELBDescribeLoadBalancerAttributesOutput
  describeLoadBalancerPolicies(input: AwsELBDescribeLoadBalancerPoliciesInput, config: AwsConfig): AwsELBDescribeLoadBalancerPoliciesOutput
  describeLoadBalancerPolicyTypes(input: AwsELBDescribeLoadBalancerPolicyTypesInput, config: AwsConfig): AwsELBDescribeLoadBalancerPolicyTypesOutput
  describeLoadBalancers(input: AwsELBDescribeLoadBalancersInput, config: AwsConfig): AwsELBDescribeLoadBalancersOutput
  describeTags(input: AwsELBDescribeTagsInput!, config: AwsConfig): AwsELBDescribeTagsOutput
  detachLoadBalancerFromSubnets(input: AwsELBDetachLoadBalancerFromSubnetsInput!, config: AwsConfig): AwsELBDetachLoadBalancerFromSubnetsOutput
  disableAvailabilityZonesForLoadBalancer(input: AwsELBDisableAvailabilityZonesForLoadBalancerInput!, config: AwsConfig): AwsELBDisableAvailabilityZonesForLoadBalancerOutput
  enableAvailabilityZonesForLoadBalancer(input: AwsELBEnableAvailabilityZonesForLoadBalancerInput!, config: AwsConfig): AwsELBEnableAvailabilityZonesForLoadBalancerOutput
  modifyLoadBalancerAttributes(input: AwsELBModifyLoadBalancerAttributesInput!, config: AwsConfig): AwsELBModifyLoadBalancerAttributesOutput
  registerInstancesWithLoadBalancer(input: AwsELBRegisterInstancesWithLoadBalancerInput!, config: AwsConfig): AwsELBRegisterInstancesWithLoadBalancerOutput
  removeTags(input: AwsELBRemoveTagsInput!, config: AwsConfig): JSON
  setLoadBalancerListenerSSLCertificate(input: AwsELBSetLoadBalancerListenerSSLCertificateInput!, config: AwsConfig): JSON
  setLoadBalancerPoliciesForBackendServer(input: AwsELBSetLoadBalancerPoliciesForBackendServerInput!, config: AwsConfig): JSON
  setLoadBalancerPoliciesOfListener(input: AwsELBSetLoadBalancerPoliciesOfListenerInput!, config: AwsConfig): JSON
}

input AwsELBAddTagsInput {
  LoadBalancerNames: [String]!
  Tags: [AwsELBS4Input]!
}

input AwsELBApplySecurityGroupsToLoadBalancerInput {
  LoadBalancerName: String!
  SecurityGroups: [String]!
}

type AwsELBApplySecurityGroupsToLoadBalancerOutput {
  SecurityGroups: [String]
}

input AwsELBAttachLoadBalancerToSubnetsInput {
  LoadBalancerName: String!
  Subnets: [String]!
}

type AwsELBAttachLoadBalancerToSubnetsOutput {
  Subnets: [String]
}

input AwsELBConfigureHealthCheckInput {
  LoadBalancerName: String!
  HealthCheck: AwsELBSiInput!
}

type AwsELBConfigureHealthCheckOutput {
  HealthCheck: AwsELBSi
}

input AwsELBCreateAppCookieStickinessPolicyInput {
  LoadBalancerName: String!
  PolicyName: String!
  CookieName: String!
}

input AwsELBCreateLBCookieStickinessPolicyInput {
  LoadBalancerName: String!
  PolicyName: String!
  CookieExpirationPeriod: JSON
}

input AwsELBCreateLoadBalancerInput {
  LoadBalancerName: String!
  Listeners: [AwsELBSyInput]!
  AvailabilityZones: [String]
  Subnets: [String]
  SecurityGroups: [String]
  Scheme: String
  Tags: [AwsELBS4Input]
}

input AwsELBCreateLoadBalancerListenersInput {
  LoadBalancerName: String!
  Listeners: [AwsELBSyInput]!
}

type AwsELBCreateLoadBalancerOutput {
  DNSName: String
}

input AwsELBCreateLoadBalancerPolicyInput {
  LoadBalancerName: String!
  PolicyName: String!
  PolicyTypeName: String!
  PolicyAttributes: [AwsELBCreateLoadBalancerPolicyPolicyAttributesInput]
}

input AwsELBCreateLoadBalancerPolicyPolicyAttributesInput {
  AttributeName: String
  AttributeValue: String
}

input AwsELBDeleteLoadBalancerInput {
  LoadBalancerName: String!
}

input AwsELBDeleteLoadBalancerListenersInput {
  LoadBalancerName: String!
  LoadBalancerPorts: [Int]!
}

input AwsELBDeleteLoadBalancerPolicyInput {
  LoadBalancerName: String!
  PolicyName: String!
}

input AwsELBDeregisterInstancesFromLoadBalancerInput {
  LoadBalancerName: String!
  Instances: [AwsELBS1pInput]!
}

type AwsELBDeregisterInstancesFromLoadBalancerOutput {
  Instances: [AwsELBS1p]
}

input AwsELBDescribeAccountLimitsInput {
  Marker: String
  PageSize: Int
}

type AwsELBDescribeAccountLimitsOutput {
  Limits: [AwsELBDescribeAccountLimitsOutputLimits]
  NextMarker: String
}

type AwsELBDescribeAccountLimitsOutputLimits {
  Name: String
  Max: String
}

input AwsELBDescribeInstanceHealthInput {
  LoadBalancerName: String!
  Instances: [AwsELBS1pInput]
}

type AwsELBDescribeInstanceHealthOutput {
  InstanceStates: [AwsELBDescribeInstanceHealthOutputInstanceStates]
}

type AwsELBDescribeInstanceHealthOutputInstanceStates {
  InstanceId: String
  State: String
  ReasonCode: String
  Description: String
}

input AwsELBDescribeLoadBalancerAttributesInput {
  LoadBalancerName: String!
}

type AwsELBDescribeLoadBalancerAttributesOutput {
  LoadBalancerAttributes: AwsELBS2a
}

input AwsELBDescribeLoadBalancerPoliciesInput {
  LoadBalancerName: String
  PolicyNames: [String]
}

type AwsELBDescribeLoadBalancerPoliciesOutput {
  PolicyDescriptions: [AwsELBDescribeLoadBalancerPoliciesOutputPolicyDescriptions]
}

type AwsELBDescribeLoadBalancerPoliciesOutputPolicyDescriptions {
  PolicyName: String
  PolicyTypeName: String
  PolicyAttributeDescriptions: [AwsELBDescribeLoadBalancerPoliciesOutputPolicyDescriptionsPolicyAttributeDescriptions]
}

type AwsELBDescribeLoadBalancerPoliciesOutputPolicyDescriptionsPolicyAttributeDescriptions {
  AttributeName: String
  AttributeValue: String
}

input AwsELBDescribeLoadBalancerPolicyTypesInput {
  PolicyTypeNames: [String]
}

type AwsELBDescribeLoadBalancerPolicyTypesOutput {
  PolicyTypeDescriptions: [AwsELBDescribeLoadBalancerPolicyTypesOutputPolicyTypeDescriptions]
}

type AwsELBDescribeLoadBalancerPolicyTypesOutputPolicyTypeDescriptions {
  PolicyTypeName: String
  Description: String
  PolicyAttributeTypeDescriptions: [AwsELBDescribeLoadBalancerPolicyTypesOutputPolicyTypeDescriptionsPolicyAttributeTypeDescriptions]
}

type AwsELBDescribeLoadBalancerPolicyTypesOutputPolicyTypeDescriptionsPolicyAttributeTypeDescriptions {
  AttributeName: String
  AttributeType: String
  Description: String
  DefaultValue: String
  Cardinality: String
}

input AwsELBDescribeLoadBalancersInput {
  LoadBalancerNames: [String]
  Marker: String
  PageSize: Int
}

type AwsELBDescribeLoadBalancersOutput {
  LoadBalancerDescriptions: [AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptions]
  NextMarker: String
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptions {
  LoadBalancerName: String
  DNSName: String
  CanonicalHostedZoneName: String
  CanonicalHostedZoneNameID: String
  ListenerDescriptions: [AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsListenerDescriptions]
  Policies: AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsPolicies
  BackendServerDescriptions: [AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsBackendServerDescriptions]
  AvailabilityZones: [String]
  Subnets: [String]
  VPCId: String
  Instances: [AwsELBS1p]
  HealthCheck: AwsELBSi
  SourceSecurityGroup: AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsSourceSecurityGroup
  SecurityGroups: [String]
  CreatedTime: Date
  Scheme: String
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsBackendServerDescriptions {
  InstancePort: Int
  PolicyNames: [String]
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsListenerDescriptions {
  Listener: AwsELBSy
  PolicyNames: [String]
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsPolicies {
  AppCookieStickinessPolicies: [AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsPoliciesAppCookieStickinessPolicies]
  LBCookieStickinessPolicies: [AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsPoliciesLBCookieStickinessPolicies]
  OtherPolicies: [String]
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsPoliciesAppCookieStickinessPolicies {
  PolicyName: String
  CookieName: String
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsPoliciesLBCookieStickinessPolicies {
  PolicyName: String
  CookieExpirationPeriod: JSON
}

type AwsELBDescribeLoadBalancersOutputLoadBalancerDescriptionsSourceSecurityGroup {
  OwnerAlias: String
  GroupName: String
}

input AwsELBDescribeTagsInput {
  LoadBalancerNames: [String]!
}

type AwsELBDescribeTagsOutput {
  TagDescriptions: [AwsELBDescribeTagsOutputTagDescriptions]
}

type AwsELBDescribeTagsOutputTagDescriptions {
  LoadBalancerName: String
  Tags: [AwsELBS4]
}

input AwsELBDetachLoadBalancerFromSubnetsInput {
  LoadBalancerName: String!
  Subnets: [String]!
}

type AwsELBDetachLoadBalancerFromSubnetsOutput {
  Subnets: [String]
}

input AwsELBDisableAvailabilityZonesForLoadBalancerInput {
  LoadBalancerName: String!
  AvailabilityZones: [String]!
}

type AwsELBDisableAvailabilityZonesForLoadBalancerOutput {
  AvailabilityZones: [String]
}

input AwsELBEnableAvailabilityZonesForLoadBalancerInput {
  LoadBalancerName: String!
  AvailabilityZones: [String]!
}

type AwsELBEnableAvailabilityZonesForLoadBalancerOutput {
  AvailabilityZones: [String]
}

input AwsELBModifyLoadBalancerAttributesInput {
  LoadBalancerName: String!
  LoadBalancerAttributes: AwsELBS2aInput!
}

type AwsELBModifyLoadBalancerAttributesOutput {
  LoadBalancerName: String
  LoadBalancerAttributes: AwsELBS2a
}

input AwsELBRegisterInstancesWithLoadBalancerInput {
  LoadBalancerName: String!
  Instances: [AwsELBS1pInput]!
}

type AwsELBRegisterInstancesWithLoadBalancerOutput {
  Instances: [AwsELBS1p]
}

input AwsELBRemoveTagsInput {
  LoadBalancerNames: [String]!
  Tags: [AwsELBRemoveTagsTagsInput]!
}

input AwsELBRemoveTagsTagsInput {
  Key: String
}

type AwsELBS1p {
  InstanceId: String
}

input AwsELBS1pInput {
  InstanceId: String
}

type AwsELBS2a {
  CrossZoneLoadBalancing: AwsELBS2aCrossZoneLoadBalancing
  AccessLog: AwsELBS2aAccessLog
  ConnectionDraining: AwsELBS2aConnectionDraining
  ConnectionSettings: AwsELBS2aConnectionSettings
  AdditionalAttributes: [AwsELBS2aAdditionalAttributes]
}

type AwsELBS2aAccessLog {
  Enabled: Boolean!
  S3BucketName: String
  EmitInterval: Int
  S3BucketPrefix: String
}

input AwsELBS2aAccessLogInput {
  Enabled: Boolean!
  S3BucketName: String
  EmitInterval: Int
  S3BucketPrefix: String
}

type AwsELBS2aAdditionalAttributes {
  Key: String
  Value: String
}

input AwsELBS2aAdditionalAttributesInput {
  Key: String
  Value: String
}

type AwsELBS2aConnectionDraining {
  Enabled: Boolean!
  Timeout: Int
}

input AwsELBS2aConnectionDrainingInput {
  Enabled: Boolean!
  Timeout: Int
}

type AwsELBS2aConnectionSettings {
  IdleTimeout: Int!
}

input AwsELBS2aConnectionSettingsInput {
  IdleTimeout: Int!
}

type AwsELBS2aCrossZoneLoadBalancing {
  Enabled: Boolean!
}

input AwsELBS2aCrossZoneLoadBalancingInput {
  Enabled: Boolean!
}

input AwsELBS2aInput {
  CrossZoneLoadBalancing: AwsELBS2aCrossZoneLoadBalancingInput
  AccessLog: AwsELBS2aAccessLogInput
  ConnectionDraining: AwsELBS2aConnectionDrainingInput
  ConnectionSettings: AwsELBS2aConnectionSettingsInput
  AdditionalAttributes: [AwsELBS2aAdditionalAttributesInput]
}

type AwsELBS4 {
  Key: String!
  Value: String
}

input AwsELBS4Input {
  Key: String!
  Value: String
}

input AwsELBSetLoadBalancerListenerSSLCertificateInput {
  LoadBalancerName: String!
  LoadBalancerPort: Int!
  SSLCertificateId: String!
}

input AwsELBSetLoadBalancerPoliciesForBackendServerInput {
  LoadBalancerName: String!
  InstancePort: Int!
  PolicyNames: [String]!
}

input AwsELBSetLoadBalancerPoliciesOfListenerInput {
  LoadBalancerName: String!
  LoadBalancerPort: Int!
  PolicyNames: [String]!
}

type AwsELBSi {
  Target: String!
  Interval: Int!
  Timeout: Int!
  UnhealthyThreshold: Int!
  HealthyThreshold: Int!
}

input AwsELBSiInput {
  Target: String!
  Interval: Int!
  Timeout: Int!
  UnhealthyThreshold: Int!
  HealthyThreshold: Int!
}

type AwsELBSy {
  Protocol: String!
  LoadBalancerPort: Int!
  InstanceProtocol: String
  InstancePort: Int!
  SSLCertificateId: String
}

input AwsELBSyInput {
  Protocol: String!
  LoadBalancerPort: Int!
  InstanceProtocol: String
  InstancePort: Int!
  SSLCertificateId: String
}

# Elastic Load Balancing (2015-12-01)
type AwsELBv2 {
  addListenerCertificates(input: AwsELBv2AddListenerCertificatesInput!, config: AwsConfig): AwsELBv2AddListenerCertificatesOutput
  addTags(input: AwsELBv2AddTagsInput!, config: AwsConfig): JSON
  createListener(input: AwsELBv2CreateListenerInput!, config: AwsConfig): AwsELBv2CreateListenerOutput
  createLoadBalancer(input: AwsELBv2CreateLoadBalancerInput!, config: AwsConfig): AwsELBv2CreateLoadBalancerOutput
  createRule(input: AwsELBv2CreateRuleInput!, config: AwsConfig): AwsELBv2CreateRuleOutput
  createTargetGroup(input: AwsELBv2CreateTargetGroupInput!, config: AwsConfig): AwsELBv2CreateTargetGroupOutput
  deleteListener(input: AwsELBv2DeleteListenerInput!, config: AwsConfig): JSON
  deleteLoadBalancer(input: AwsELBv2DeleteLoadBalancerInput!, config: AwsConfig): JSON
  deleteRule(input: AwsELBv2DeleteRuleInput!, config: AwsConfig): JSON
  deleteTargetGroup(input: AwsELBv2DeleteTargetGroupInput!, config: AwsConfig): JSON
  deregisterTargets(input: AwsELBv2DeregisterTargetsInput!, config: AwsConfig): JSON
  describeAccountLimits(input: AwsELBv2DescribeAccountLimitsInput, config: AwsConfig): AwsELBv2DescribeAccountLimitsOutput
  describeListenerCertificates(input: AwsELBv2DescribeListenerCertificatesInput!, config: AwsConfig): AwsELBv2DescribeListenerCertificatesOutput
  describeListeners(input: AwsELBv2DescribeListenersInput, config: AwsConfig): AwsELBv2DescribeListenersOutput
  describeLoadBalancerAttributes(input: AwsELBv2DescribeLoadBalancerAttributesInput!, config: AwsConfig): AwsELBv2DescribeLoadBalancerAttributesOutput
  describeLoadBalancers(input: AwsELBv2DescribeLoadBalancersInput, config: AwsConfig): AwsELBv2DescribeLoadBalancersOutput
  describeRules(input: AwsELBv2DescribeRulesInput, config: AwsConfig): AwsELBv2DescribeRulesOutput
  describeSSLPolicies(input: AwsELBv2DescribeSSLPoliciesInput, config: AwsConfig): AwsELBv2DescribeSSLPoliciesOutput
  describeTags(input: AwsELBv2DescribeTagsInput!, config: AwsConfig): AwsELBv2DescribeTagsOutput
  describeTargetGroupAttributes(input: AwsELBv2DescribeTargetGroupAttributesInput!, config: AwsConfig): AwsELBv2DescribeTargetGroupAttributesOutput
  describeTargetGroups(input: AwsELBv2DescribeTargetGroupsInput, config: AwsConfig): AwsELBv2DescribeTargetGroupsOutput
  describeTargetHealth(input: AwsELBv2DescribeTargetHealthInput!, config: AwsConfig): AwsELBv2DescribeTargetHealthOutput
  modifyListener(input: AwsELBv2ModifyListenerInput!, config: AwsConfig): AwsELBv2ModifyListenerOutput
  modifyLoadBalancerAttributes(input: AwsELBv2ModifyLoadBalancerAttributesInput!, config: AwsConfig): AwsELBv2ModifyLoadBalancerAttributesOutput
  modifyRule(input: AwsELBv2ModifyRuleInput!, config: AwsConfig): AwsELBv2ModifyRuleOutput
  modifyTargetGroup(input: AwsELBv2ModifyTargetGroupInput!, config: AwsConfig): AwsELBv2ModifyTargetGroupOutput
  modifyTargetGroupAttributes(input: AwsELBv2ModifyTargetGroupAttributesInput!, config: AwsConfig): AwsELBv2ModifyTargetGroupAttributesOutput
  registerTargets(input: AwsELBv2RegisterTargetsInput!, config: AwsConfig): JSON
  removeListenerCertificates(input: AwsELBv2RemoveListenerCertificatesInput!, config: AwsConfig): JSON
  removeTags(input: AwsELBv2RemoveTagsInput!, config: AwsConfig): JSON
  setIpAddressType(input: AwsELBv2SetIpAddressTypeInput!, config: AwsConfig): AwsELBv2SetIpAddressTypeOutput
  setRulePriorities(input: AwsELBv2SetRulePrioritiesInput!, config: AwsConfig): AwsELBv2SetRulePrioritiesOutput
  setSecurityGroups(input: AwsELBv2SetSecurityGroupsInput!, config: AwsConfig): AwsELBv2SetSecurityGroupsOutput
  setSubnets(input: AwsELBv2SetSubnetsInput!, config: AwsConfig): AwsELBv2SetSubnetsOutput
}

input AwsELBv2AddListenerCertificatesInput {
  ListenerArn: String!
  Certificates: [AwsELBv2S3Input]!
}

type AwsELBv2AddListenerCertificatesOutput {
  Certificates: [AwsELBv2S3]
}

input AwsELBv2AddTagsInput {
  ResourceArns: [String]!
  Tags: [AwsELBv2SbInput]!
}

input AwsELBv2CreateListenerInput {
  LoadBalancerArn: String!
  Protocol: String!
  Port: Int!
  SslPolicy: String
  Certificates: [AwsELBv2S3Input]
  DefaultActions: [AwsELBv2SlInput]!
}

type AwsELBv2CreateListenerOutput {
  Listeners: [AwsELBv2Sq]
}

input AwsELBv2CreateLoadBalancerInput {
  Name: String!
  Subnets: [String]
  SubnetMappings: [AwsELBv2SwInput]
  SecurityGroups: [String]
  Scheme: String
  Tags: [AwsELBv2SbInput]
  Type: String
  IpAddressType: String
}

type AwsELBv2CreateLoadBalancerOutput {
  LoadBalancers: [AwsELBv2S15]
}

input AwsELBv2CreateRuleInput {
  ListenerArn: String!
  Conditions: [AwsELBv2S1lInput]!
  Priority: Int!
  Actions: [AwsELBv2SlInput]!
}

type AwsELBv2CreateRuleOutput {
  Rules: [AwsELBv2S1s]
}

input AwsELBv2CreateTargetGroupInput {
  Name: String!
  Protocol: String!
  Port: Int!
  VpcId: String!
  HealthCheckProtocol: String
  HealthCheckPort: String
  HealthCheckPath: String
  HealthCheckIntervalSeconds: Int
  HealthCheckTimeoutSeconds: Int
  HealthyThresholdCount: Int
  UnhealthyThresholdCount: Int
  Matcher: AwsELBv2S24Input
  TargetType: String
}

type AwsELBv2CreateTargetGroupOutput {
  TargetGroups: [AwsELBv2S28]
}

input AwsELBv2DeleteListenerInput {
  ListenerArn: String!
}

input AwsELBv2DeleteLoadBalancerInput {
  LoadBalancerArn: String!
}

input AwsELBv2DeleteRuleInput {
  RuleArn: String!
}

input AwsELBv2DeleteTargetGroupInput {
  TargetGroupArn: String!
}

input AwsELBv2DeregisterTargetsInput {
  TargetGroupArn: String!
  Targets: [AwsELBv2S2lInput]!
}

input AwsELBv2DescribeAccountLimitsInput {
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeAccountLimitsOutput {
  Limits: [AwsELBv2DescribeAccountLimitsOutputLimits]
  NextMarker: String
}

type AwsELBv2DescribeAccountLimitsOutputLimits {
  Name: String
  Max: String
}

input AwsELBv2DescribeListenerCertificatesInput {
  ListenerArn: String!
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeListenerCertificatesOutput {
  Certificates: [AwsELBv2S3]
  NextMarker: String
}

input AwsELBv2DescribeListenersInput {
  LoadBalancerArn: String
  ListenerArns: [String]
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeListenersOutput {
  Listeners: [AwsELBv2Sq]
  NextMarker: String
}

input AwsELBv2DescribeLoadBalancerAttributesInput {
  LoadBalancerArn: String!
}

type AwsELBv2DescribeLoadBalancerAttributesOutput {
  Attributes: [AwsELBv2S33]
}

input AwsELBv2DescribeLoadBalancersInput {
  LoadBalancerArns: [String]
  Names: [String]
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeLoadBalancersOutput {
  LoadBalancers: [AwsELBv2S15]
  NextMarker: String
}

input AwsELBv2DescribeRulesInput {
  ListenerArn: String
  RuleArns: [String]
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeRulesOutput {
  Rules: [AwsELBv2S1s]
  NextMarker: String
}

input AwsELBv2DescribeSSLPoliciesInput {
  Names: [String]
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeSSLPoliciesOutput {
  SslPolicies: [AwsELBv2DescribeSSLPoliciesOutputSslPolicies]
  NextMarker: String
}

type AwsELBv2DescribeSSLPoliciesOutputSslPolicies {
  SslProtocols: [String]
  Ciphers: [AwsELBv2DescribeSSLPoliciesOutputSslPoliciesCiphers]
  Name: String
}

type AwsELBv2DescribeSSLPoliciesOutputSslPoliciesCiphers {
  Name: String
  Priority: Int
}

input AwsELBv2DescribeTagsInput {
  ResourceArns: [String]!
}

type AwsELBv2DescribeTagsOutput {
  TagDescriptions: [AwsELBv2DescribeTagsOutputTagDescriptions]
}

type AwsELBv2DescribeTagsOutputTagDescriptions {
  ResourceArn: String
  Tags: [AwsELBv2Sb]
}

input AwsELBv2DescribeTargetGroupAttributesInput {
  TargetGroupArn: String!
}

type AwsELBv2DescribeTargetGroupAttributesOutput {
  Attributes: [AwsELBv2S3u]
}

input AwsELBv2DescribeTargetGroupsInput {
  LoadBalancerArn: String
  TargetGroupArns: [String]
  Names: [String]
  Marker: String
  PageSize: Int
}

type AwsELBv2DescribeTargetGroupsOutput {
  TargetGroups: [AwsELBv2S28]
  NextMarker: String
}

input AwsELBv2DescribeTargetHealthInput {
  TargetGroupArn: String!
  Targets: [AwsELBv2S2lInput]
}

type AwsELBv2DescribeTargetHealthOutput {
  TargetHealthDescriptions: [AwsELBv2DescribeTargetHealthOutputTargetHealthDescriptions]
}

type AwsELBv2DescribeTargetHealthOutputTargetHealthDescriptions {
  Target: AwsELBv2S2l
  HealthCheckPort: String
  TargetHealth: AwsELBv2DescribeTargetHealthOutputTargetHealthDescriptionsTargetHealth
}

type AwsELBv2DescribeTargetHealthOutputTargetHealthDescriptionsTargetHealth {
  State: String
  Reason: String
  Description: String
}

input AwsELBv2ModifyListenerInput {
  ListenerArn: String!
  Port: Int
  Protocol: String
  SslPolicy: String
  Certificates: [AwsELBv2S3Input]
  DefaultActions: [AwsELBv2SlInput]
}

type AwsELBv2ModifyListenerOutput {
  Listeners: [AwsELBv2Sq]
}

input AwsELBv2ModifyLoadBalancerAttributesInput {
  LoadBalancerArn: String!
  Attributes: [AwsELBv2S33Input]!
}

type AwsELBv2ModifyLoadBalancerAttributesOutput {
  Attributes: [AwsELBv2S33]
}

input AwsELBv2ModifyRuleInput {
  RuleArn: String!
  Conditions: [AwsELBv2S1lInput]
  Actions: [AwsELBv2SlInput]
}

type AwsELBv2ModifyRuleOutput {
  Rules: [AwsELBv2S1s]
}

input AwsELBv2ModifyTargetGroupAttributesInput {
  TargetGroupArn: String!
  Attributes: [AwsELBv2S3uInput]!
}

type AwsELBv2ModifyTargetGroupAttributesOutput {
  Attributes: [AwsELBv2S3u]
}

input AwsELBv2ModifyTargetGroupInput {
  TargetGroupArn: String!
  HealthCheckProtocol: String
  HealthCheckPort: String
  HealthCheckPath: String
  HealthCheckIntervalSeconds: Int
  HealthCheckTimeoutSeconds: Int
  HealthyThresholdCount: Int
  UnhealthyThresholdCount: Int
  Matcher: AwsELBv2S24Input
}

type AwsELBv2ModifyTargetGroupOutput {
  TargetGroups: [AwsELBv2S28]
}

input AwsELBv2RegisterTargetsInput {
  TargetGroupArn: String!
  Targets: [AwsELBv2S2lInput]!
}

input AwsELBv2RemoveListenerCertificatesInput {
  ListenerArn: String!
  Certificates: [AwsELBv2S3Input]!
}

input AwsELBv2RemoveTagsInput {
  ResourceArns: [String]!
  TagKeys: [String]!
}

type AwsELBv2S15 {
  LoadBalancerArn: String
  DNSName: String
  CanonicalHostedZoneId: String
  CreatedTime: Date
  LoadBalancerName: String
  Scheme: String
  VpcId: String
  State: AwsELBv2S15State
  Type: String
  AvailabilityZones: [AwsELBv2S1e]
  SecurityGroups: [String]
  IpAddressType: String
}

type AwsELBv2S15State {
  Code: String
  Reason: String
}

type AwsELBv2S1e {
  ZoneName: String
  SubnetId: String
  LoadBalancerAddresses: [AwsELBv2S1eLoadBalancerAddresses]
}

type AwsELBv2S1eLoadBalancerAddresses {
  IpAddress: String
  AllocationId: String
}

type AwsELBv2S1l {
  Field: String
  Values: [String]
}

input AwsELBv2S1lInput {
  Field: String
  Values: [String]
}

type AwsELBv2S1s {
  RuleArn: String
  Priority: String
  Conditions: [AwsELBv2S1l]
  Actions: [AwsELBv2Sl]
  IsDefault: Boolean
}

type AwsELBv2S24 {
  HttpCode: String!
}

input AwsELBv2S24Input {
  HttpCode: String!
}

type AwsELBv2S28 {
  TargetGroupArn: String
  TargetGroupName: String
  Protocol: String
  Port: Int
  VpcId: String
  HealthCheckProtocol: String
  HealthCheckPort: String
  HealthCheckIntervalSeconds: Int
  HealthCheckTimeoutSeconds: Int
  HealthyThresholdCount: Int
  UnhealthyThresholdCount: Int
  HealthCheckPath: String
  Matcher: AwsELBv2S24
  LoadBalancerArns: [String]
  TargetType: String
}

type AwsELBv2S2l {
  Id: String!
  Port: Int
  AvailabilityZone: String
}

input AwsELBv2S2lInput {
  Id: String!
  Port: Int
  AvailabilityZone: String
}

type AwsELBv2S3 {
  CertificateArn: String
  IsDefault: Boolean
}

type AwsELBv2S33 {
  Key: String
  Value: String
}

input AwsELBv2S33Input {
  Key: String
  Value: String
}

input AwsELBv2S3Input {
  CertificateArn: String
  IsDefault: Boolean
}

type AwsELBv2S3u {
  Key: String
  Value: String
}

input AwsELBv2S3uInput {
  Key: String
  Value: String
}

type AwsELBv2Sb {
  Key: String!
  Value: String
}

input AwsELBv2SbInput {
  Key: String!
  Value: String
}

input AwsELBv2SetIpAddressTypeInput {
  LoadBalancerArn: String!
  IpAddressType: String!
}

type AwsELBv2SetIpAddressTypeOutput {
  IpAddressType: String
}

input AwsELBv2SetRulePrioritiesInput {
  RulePriorities: [AwsELBv2SetRulePrioritiesRulePrioritiesInput]!
}

type AwsELBv2SetRulePrioritiesOutput {
  Rules: [AwsELBv2S1s]
}

input AwsELBv2SetRulePrioritiesRulePrioritiesInput {
  RuleArn: String
  Priority: Int
}

input AwsELBv2SetSecurityGroupsInput {
  LoadBalancerArn: String!
  SecurityGroups: [String]!
}

type AwsELBv2SetSecurityGroupsOutput {
  SecurityGroupIds: [String]
}

input AwsELBv2SetSubnetsInput {
  LoadBalancerArn: String!
  Subnets: [String]!
  SubnetMappings: [AwsELBv2SwInput]
}

type AwsELBv2SetSubnetsOutput {
  AvailabilityZones: [AwsELBv2S1e]
}

type AwsELBv2Sl {
  Type: String!
  TargetGroupArn: String!
}

input AwsELBv2SlInput {
  Type: String!
  TargetGroupArn: String!
}

type AwsELBv2Sq {
  ListenerArn: String
  LoadBalancerArn: String
  Port: Int
  Protocol: String
  Certificates: [AwsELBv2S3]
  SslPolicy: String
  DefaultActions: [AwsELBv2Sl]
}

input AwsELBv2SwInput {
  SubnetId: String
  AllocationId: String
}

# Amazon Elastic MapReduce (2009-03-31)
type AwsEMR {
  addInstanceFleet(input: AwsEMRAddInstanceFleetInput!, config: AwsConfig): AwsEMRAddInstanceFleetOutput
  addInstanceGroups(input: AwsEMRAddInstanceGroupsInput!, config: AwsConfig): AwsEMRAddInstanceGroupsOutput
  addJobFlowSteps(input: AwsEMRAddJobFlowStepsInput!, config: AwsConfig): AwsEMRAddJobFlowStepsOutput
  addTags(input: AwsEMRAddTagsInput!, config: AwsConfig): JSON
  cancelSteps(input: AwsEMRCancelStepsInput, config: AwsConfig): AwsEMRCancelStepsOutput
  createSecurityConfiguration(input: AwsEMRCreateSecurityConfigurationInput!, config: AwsConfig): AwsEMRCreateSecurityConfigurationOutput
  deleteSecurityConfiguration(input: AwsEMRDeleteSecurityConfigurationInput!, config: AwsConfig): JSON
  describeCluster(input: AwsEMRDescribeClusterInput!, config: AwsConfig): AwsEMRDescribeClusterOutput
  describeJobFlows(input: AwsEMRDescribeJobFlowsInput, config: AwsConfig): AwsEMRDescribeJobFlowsOutput
  describeSecurityConfiguration(input: AwsEMRDescribeSecurityConfigurationInput!, config: AwsConfig): AwsEMRDescribeSecurityConfigurationOutput
  describeStep(input: AwsEMRDescribeStepInput!, config: AwsConfig): AwsEMRDescribeStepOutput
  listBootstrapActions(input: AwsEMRListBootstrapActionsInput!, config: AwsConfig): AwsEMRListBootstrapActionsOutput
  listClusters(input: AwsEMRListClustersInput, config: AwsConfig): AwsEMRListClustersOutput
  listInstanceFleets(input: AwsEMRListInstanceFleetsInput!, config: AwsConfig): AwsEMRListInstanceFleetsOutput
  listInstanceGroups(input: AwsEMRListInstanceGroupsInput!, config: AwsConfig): AwsEMRListInstanceGroupsOutput
  listInstances(input: AwsEMRListInstancesInput!, config: AwsConfig): AwsEMRListInstancesOutput
  listSecurityConfigurations(input: AwsEMRListSecurityConfigurationsInput, config: AwsConfig): AwsEMRListSecurityConfigurationsOutput
  listSteps(input: AwsEMRListStepsInput!, config: AwsConfig): AwsEMRListStepsOutput
  modifyInstanceFleet(input: AwsEMRModifyInstanceFleetInput!, config: AwsConfig): JSON
  modifyInstanceGroups(input: AwsEMRModifyInstanceGroupsInput, config: AwsConfig): JSON
  putAutoScalingPolicy(input: AwsEMRPutAutoScalingPolicyInput!, config: AwsConfig): AwsEMRPutAutoScalingPolicyOutput
  removeAutoScalingPolicy(input: AwsEMRRemoveAutoScalingPolicyInput!, config: AwsConfig): JSON
  removeTags(input: AwsEMRRemoveTagsInput!, config: AwsConfig): JSON
  runJobFlow(input: AwsEMRRunJobFlowInput!, config: AwsConfig): AwsEMRRunJobFlowOutput
  setTerminationProtection(input: AwsEMRSetTerminationProtectionInput!, config: AwsConfig): JSON
  setVisibleToAllUsers(input: AwsEMRSetVisibleToAllUsersInput!, config: AwsConfig): JSON
  terminateJobFlows(input: AwsEMRTerminateJobFlowsInput!, config: AwsConfig): JSON
}

input AwsEMRAddInstanceFleetInput {
  ClusterId: String!
  InstanceFleet: AwsEMRS3Input!
}

type AwsEMRAddInstanceFleetOutput {
  ClusterId: String
  InstanceFleetId: String
}

input AwsEMRAddInstanceGroupsInput {
  InstanceGroups: [AwsEMRSqInput]!
  JobFlowId: String!
}

type AwsEMRAddInstanceGroupsOutput {
  JobFlowId: String
  InstanceGroupIds: [String]
}

input AwsEMRAddJobFlowStepsInput {
  JobFlowId: String!
  Steps: [AwsEMRS1cInput]!
}

type AwsEMRAddJobFlowStepsOutput {
  StepIds: [String]
}

input AwsEMRAddTagsInput {
  ResourceId: String!
  Tags: [AwsEMRS1nInput]!
}

input AwsEMRCancelStepsInput {
  ClusterId: String
  StepIds: [String]
}

type AwsEMRCancelStepsOutput {
  CancelStepsInfoList: [AwsEMRCancelStepsOutputCancelStepsInfoList]
}

type AwsEMRCancelStepsOutputCancelStepsInfoList {
  StepId: String
  Status: String
  Reason: String
}

input AwsEMRCreateSecurityConfigurationInput {
  Name: String!
  SecurityConfiguration: String!
}

type AwsEMRCreateSecurityConfigurationOutput {
  Name: String!
  CreationDateTime: Date!
}

input AwsEMRDeleteSecurityConfigurationInput {
  Name: String!
}

input AwsEMRDescribeClusterInput {
  ClusterId: String!
}

type AwsEMRDescribeClusterOutput {
  Cluster: AwsEMRDescribeClusterOutputCluster
}

type AwsEMRDescribeClusterOutputCluster {
  Id: String
  Name: String
  Status: AwsEMRS25
  Ec2InstanceAttributes: AwsEMRDescribeClusterOutputClusterEc2InstanceAttributes
  InstanceCollectionType: String
  LogUri: String
  RequestedAmiVersion: String
  RunningAmiVersion: String
  ReleaseLabel: String
  AutoTerminate: Boolean
  TerminationProtected: Boolean
  VisibleToAllUsers: Boolean
  Applications: [AwsEMRS2f]
  Tags: [AwsEMRS1n]
  ServiceRole: String
  NormalizedInstanceHours: Int
  MasterPublicDnsName: String
  Configurations: [AwsEMRSh]
  SecurityConfiguration: String
  AutoScalingRole: String
  ScaleDownBehavior: String
  CustomAmiId: String
  EbsRootVolumeSize: Int
  RepoUpgradeOnBoot: String
  KerberosAttributes: AwsEMRS2j
}

type AwsEMRDescribeClusterOutputClusterEc2InstanceAttributes {
  Ec2KeyName: String
  Ec2SubnetId: String
  RequestedEc2SubnetIds: [String]
  Ec2AvailabilityZone: String
  RequestedEc2AvailabilityZones: [String]
  IamInstanceProfile: String
  EmrManagedMasterSecurityGroup: String
  EmrManagedSlaveSecurityGroup: String
  ServiceAccessSecurityGroup: String
  AdditionalMasterSecurityGroups: [String]
  AdditionalSlaveSecurityGroups: [String]
}

input AwsEMRDescribeJobFlowsInput {
  CreatedAfter: Date
  CreatedBefore: Date
  JobFlowIds: [String]
  JobFlowStates: [String]
}

type AwsEMRDescribeJobFlowsOutput {
  JobFlows: [AwsEMRDescribeJobFlowsOutputJobFlows]
}

type AwsEMRDescribeJobFlowsOutputJobFlows {
  JobFlowId: String!
  Name: String!
  LogUri: String
  AmiVersion: String
  ExecutionStatusDetail: AwsEMRDescribeJobFlowsOutputJobFlowsExecutionStatusDetail!
  Instances: AwsEMRDescribeJobFlowsOutputJobFlowsInstances!
  Steps: [AwsEMRDescribeJobFlowsOutputJobFlowsSteps]
  BootstrapActions: [AwsEMRDescribeJobFlowsOutputJobFlowsBootstrapActions]
  SupportedProducts: [String]
  VisibleToAllUsers: Boolean
  JobFlowRole: String
  ServiceRole: String
  AutoScalingRole: String
  ScaleDownBehavior: String
}

type AwsEMRDescribeJobFlowsOutputJobFlowsBootstrapActions {
  BootstrapActionConfig: AwsEMRS32
}

type AwsEMRDescribeJobFlowsOutputJobFlowsExecutionStatusDetail {
  State: String!
  CreationDateTime: Date!
  StartDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
  LastStateChangeReason: String
}

type AwsEMRDescribeJobFlowsOutputJobFlowsInstances {
  MasterInstanceType: String!
  MasterPublicDnsName: String
  MasterInstanceId: String
  SlaveInstanceType: String!
  InstanceCount: Int!
  InstanceGroups: [AwsEMRDescribeJobFlowsOutputJobFlowsInstancesInstanceGroups]
  NormalizedInstanceHours: Int
  Ec2KeyName: String
  Ec2SubnetId: String
  Placement: AwsEMRS2v
  KeepJobFlowAliveWhenNoSteps: Boolean
  TerminationProtected: Boolean
  HadoopVersion: String
}

type AwsEMRDescribeJobFlowsOutputJobFlowsInstancesInstanceGroups {
  InstanceGroupId: String
  Name: String
  Market: String!
  InstanceRole: String!
  BidPrice: String
  InstanceType: String!
  InstanceRequestCount: Int!
  InstanceRunningCount: Int!
  State: String!
  LastStateChangeReason: String
  CreationDateTime: Date!
  StartDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

type AwsEMRDescribeJobFlowsOutputJobFlowsSteps {
  StepConfig: AwsEMRS1c!
  ExecutionStatusDetail: AwsEMRDescribeJobFlowsOutputJobFlowsStepsExecutionStatusDetail!
}

type AwsEMRDescribeJobFlowsOutputJobFlowsStepsExecutionStatusDetail {
  State: String!
  CreationDateTime: Date!
  StartDateTime: Date
  EndDateTime: Date
  LastStateChangeReason: String
}

input AwsEMRDescribeSecurityConfigurationInput {
  Name: String!
}

type AwsEMRDescribeSecurityConfigurationOutput {
  Name: String
  SecurityConfiguration: String
  CreationDateTime: Date
}

input AwsEMRDescribeStepInput {
  ClusterId: String!
  StepId: String!
}

type AwsEMRDescribeStepOutput {
  Step: AwsEMRDescribeStepOutputStep
}

type AwsEMRDescribeStepOutputStep {
  Id: String
  Name: String
  Config: AwsEMRS3a
  ActionOnFailure: String
  Status: AwsEMRS3b
}

input AwsEMRListBootstrapActionsInput {
  ClusterId: String!
  Marker: String
}

type AwsEMRListBootstrapActionsOutput {
  BootstrapActions: [AwsEMRListBootstrapActionsOutputBootstrapActions]
  Marker: String
}

type AwsEMRListBootstrapActionsOutputBootstrapActions {
  Name: String
  ScriptPath: String
  Args: [String]
}

input AwsEMRListClustersInput {
  CreatedAfter: Date
  CreatedBefore: Date
  ClusterStates: [String]
  Marker: String
}

type AwsEMRListClustersOutput {
  Clusters: [AwsEMRListClustersOutputClusters]
  Marker: String
}

type AwsEMRListClustersOutputClusters {
  Id: String
  Name: String
  Status: AwsEMRS25
  NormalizedInstanceHours: Int
}

input AwsEMRListInstanceFleetsInput {
  ClusterId: String!
  Marker: String
}

type AwsEMRListInstanceFleetsOutput {
  InstanceFleets: [AwsEMRListInstanceFleetsOutputInstanceFleets]
  Marker: String
}

type AwsEMRListInstanceFleetsOutputInstanceFleets {
  Id: String
  Name: String
  Status: AwsEMRListInstanceFleetsOutputInstanceFleetsStatus
  InstanceFleetType: String
  TargetOnDemandCapacity: Int
  TargetSpotCapacity: Int
  ProvisionedOnDemandCapacity: Int
  ProvisionedSpotCapacity: Int
  InstanceTypeSpecifications: [AwsEMRListInstanceFleetsOutputInstanceFleetsInstanceTypeSpecifications]
  LaunchSpecifications: AwsEMRSk
}

type AwsEMRListInstanceFleetsOutputInstanceFleetsInstanceTypeSpecifications {
  InstanceType: String
  WeightedCapacity: Int
  BidPrice: String
  BidPriceAsPercentageOfOnDemandPrice: JSON
  Configurations: [AwsEMRSh]
  EbsBlockDevices: [AwsEMRS42]
  EbsOptimized: Boolean
}

type AwsEMRListInstanceFleetsOutputInstanceFleetsStatus {
  State: String
  StateChangeReason: AwsEMRListInstanceFleetsOutputInstanceFleetsStatusStateChangeReason
  Timeline: AwsEMRListInstanceFleetsOutputInstanceFleetsStatusTimeline
}

type AwsEMRListInstanceFleetsOutputInstanceFleetsStatusStateChangeReason {
  Code: String
  Message: String
}

type AwsEMRListInstanceFleetsOutputInstanceFleetsStatusTimeline {
  CreationDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

input AwsEMRListInstanceGroupsInput {
  ClusterId: String!
  Marker: String
}

type AwsEMRListInstanceGroupsOutput {
  InstanceGroups: [AwsEMRListInstanceGroupsOutputInstanceGroups]
  Marker: String
}

type AwsEMRListInstanceGroupsOutputInstanceGroups {
  Id: String
  Name: String
  Market: String
  InstanceGroupType: String
  BidPrice: String
  InstanceType: String
  RequestedInstanceCount: Int
  RunningInstanceCount: Int
  Status: AwsEMRListInstanceGroupsOutputInstanceGroupsStatus
  Configurations: [AwsEMRSh]
  EbsBlockDevices: [AwsEMRS42]
  EbsOptimized: Boolean
  ShrinkPolicy: AwsEMRS4e
  AutoScalingPolicy: AwsEMRS4i
}

type AwsEMRListInstanceGroupsOutputInstanceGroupsStatus {
  State: String
  StateChangeReason: AwsEMRListInstanceGroupsOutputInstanceGroupsStatusStateChangeReason
  Timeline: AwsEMRListInstanceGroupsOutputInstanceGroupsStatusTimeline
}

type AwsEMRListInstanceGroupsOutputInstanceGroupsStatusStateChangeReason {
  Code: String
  Message: String
}

type AwsEMRListInstanceGroupsOutputInstanceGroupsStatusTimeline {
  CreationDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

input AwsEMRListInstancesInput {
  ClusterId: String!
  InstanceGroupId: String
  InstanceGroupTypes: [String]
  InstanceFleetId: String
  InstanceFleetType: String
  InstanceStates: [String]
  Marker: String
}

type AwsEMRListInstancesOutput {
  Instances: [AwsEMRListInstancesOutputInstances]
  Marker: String
}

type AwsEMRListInstancesOutputInstances {
  Id: String
  Ec2InstanceId: String
  PublicDnsName: String
  PublicIpAddress: String
  PrivateDnsName: String
  PrivateIpAddress: String
  Status: AwsEMRListInstancesOutputInstancesStatus
  InstanceGroupId: String
  InstanceFleetId: String
  Market: String
  InstanceType: String
  EbsVolumes: [AwsEMRListInstancesOutputInstancesEbsVolumes]
}

type AwsEMRListInstancesOutputInstancesEbsVolumes {
  Device: String
  VolumeId: String
}

type AwsEMRListInstancesOutputInstancesStatus {
  State: String
  StateChangeReason: AwsEMRListInstancesOutputInstancesStatusStateChangeReason
  Timeline: AwsEMRListInstancesOutputInstancesStatusTimeline
}

type AwsEMRListInstancesOutputInstancesStatusStateChangeReason {
  Code: String
  Message: String
}

type AwsEMRListInstancesOutputInstancesStatusTimeline {
  CreationDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

input AwsEMRListSecurityConfigurationsInput {
  Marker: String
}

type AwsEMRListSecurityConfigurationsOutput {
  SecurityConfigurations: [AwsEMRListSecurityConfigurationsOutputSecurityConfigurations]
  Marker: String
}

type AwsEMRListSecurityConfigurationsOutputSecurityConfigurations {
  Name: String
  CreationDateTime: Date
}

input AwsEMRListStepsInput {
  ClusterId: String!
  StepStates: [String]
  StepIds: [String]
  Marker: String
}

type AwsEMRListStepsOutput {
  Steps: [AwsEMRListStepsOutputSteps]
  Marker: String
}

type AwsEMRListStepsOutputSteps {
  Id: String
  Name: String
  Config: AwsEMRS3a
  ActionOnFailure: String
  Status: AwsEMRS3b
}

input AwsEMRModifyInstanceFleetInput {
  ClusterId: String!
  InstanceFleet: AwsEMRModifyInstanceFleetInstanceFleetInput!
}

input AwsEMRModifyInstanceFleetInstanceFleetInput {
  InstanceFleetId: String!
  TargetOnDemandCapacity: Int
  TargetSpotCapacity: Int
}

input AwsEMRModifyInstanceGroupsInput {
  ClusterId: String
  InstanceGroups: [AwsEMRModifyInstanceGroupsInstanceGroupsInput]
}

input AwsEMRModifyInstanceGroupsInstanceGroupsInput {
  InstanceGroupId: String!
  InstanceCount: Int
  EC2InstanceIdsToTerminate: [String]
  ShrinkPolicy: AwsEMRS4eInput
}

input AwsEMRPutAutoScalingPolicyInput {
  ClusterId: String!
  InstanceGroupId: String!
  AutoScalingPolicy: AwsEMRSuInput!
}

type AwsEMRPutAutoScalingPolicyOutput {
  ClusterId: String
  InstanceGroupId: String
  AutoScalingPolicy: AwsEMRS4i
}

input AwsEMRRemoveAutoScalingPolicyInput {
  ClusterId: String!
  InstanceGroupId: String!
}

input AwsEMRRemoveTagsInput {
  ResourceId: String!
  TagKeys: [String]!
}

input AwsEMRRunJobFlowInput {
  Name: String!
  LogUri: String
  AdditionalInfo: String
  AmiVersion: String
  ReleaseLabel: String
  Instances: AwsEMRRunJobFlowInstancesInput!
  Steps: [AwsEMRS1cInput]
  BootstrapActions: [AwsEMRS32Input]
  SupportedProducts: [String]
  NewSupportedProducts: [AwsEMRRunJobFlowNewSupportedProductsInput]
  Applications: [AwsEMRS2fInput]
  Configurations: [AwsEMRShInput]
  VisibleToAllUsers: Boolean
  JobFlowRole: String
  ServiceRole: String
  Tags: [AwsEMRS1nInput]
  SecurityConfiguration: String
  AutoScalingRole: String
  ScaleDownBehavior: String
  CustomAmiId: String
  EbsRootVolumeSize: Int
  RepoUpgradeOnBoot: String
  KerberosAttributes: AwsEMRS2jInput
}

input AwsEMRRunJobFlowInstancesInput {
  MasterInstanceType: String
  SlaveInstanceType: String
  InstanceCount: Int
  InstanceGroups: [AwsEMRSqInput]
  InstanceFleets: [AwsEMRS3Input]
  Ec2KeyName: String
  Placement: AwsEMRS2vInput
  KeepJobFlowAliveWhenNoSteps: Boolean
  TerminationProtected: Boolean
  HadoopVersion: String
  Ec2SubnetId: String
  Ec2SubnetIds: [String]
  EmrManagedMasterSecurityGroup: String
  EmrManagedSlaveSecurityGroup: String
  ServiceAccessSecurityGroup: String
  AdditionalMasterSecurityGroups: [String]
  AdditionalSlaveSecurityGroups: [String]
}

input AwsEMRRunJobFlowNewSupportedProductsInput {
  Name: String
  Args: [String]
}

type AwsEMRRunJobFlowOutput {
  JobFlowId: String
}

type AwsEMRS1c {
  Name: String!
  ActionOnFailure: String
  HadoopJarStep: AwsEMRS1cHadoopJarStep!
}

type AwsEMRS1cHadoopJarStep {
  Properties: [AwsEMRS1cHadoopJarStepProperties]
  Jar: String!
  MainClass: String
  Args: [String]
}

input AwsEMRS1cHadoopJarStepInput {
  Properties: [AwsEMRS1cHadoopJarStepPropertiesInput]
  Jar: String!
  MainClass: String
  Args: [String]
}

type AwsEMRS1cHadoopJarStepProperties {
  Key: String
  Value: String
}

input AwsEMRS1cHadoopJarStepPropertiesInput {
  Key: String
  Value: String
}

input AwsEMRS1cInput {
  Name: String!
  ActionOnFailure: String
  HadoopJarStep: AwsEMRS1cHadoopJarStepInput!
}

type AwsEMRS1n {
  Key: String
  Value: String
}

input AwsEMRS1nInput {
  Key: String
  Value: String
}

type AwsEMRS25 {
  State: String
  StateChangeReason: AwsEMRS25StateChangeReason
  Timeline: AwsEMRS25Timeline
}

type AwsEMRS25StateChangeReason {
  Code: String
  Message: String
}

type AwsEMRS25Timeline {
  CreationDateTime: Date
  ReadyDateTime: Date
  EndDateTime: Date
}

type AwsEMRS2f {
  Name: String
  Version: String
  Args: [String]
  AdditionalInfo: JSON
}

input AwsEMRS2fInput {
  Name: String
  Version: String
  Args: [String]
  AdditionalInfo: JSON
}

type AwsEMRS2j {
  Realm: String!
  KdcAdminPassword: String!
  CrossRealmTrustPrincipalPassword: String
  ADDomainJoinUser: String
  ADDomainJoinPassword: String
}

input AwsEMRS2jInput {
  Realm: String!
  KdcAdminPassword: String!
  CrossRealmTrustPrincipalPassword: String
  ADDomainJoinUser: String
  ADDomainJoinPassword: String
}

type AwsEMRS2v {
  AvailabilityZone: String
  AvailabilityZones: [String]
}

input AwsEMRS2vInput {
  AvailabilityZone: String
  AvailabilityZones: [String]
}

type AwsEMRS32 {
  Name: String!
  ScriptBootstrapAction: AwsEMRS32ScriptBootstrapAction!
}

input AwsEMRS32Input {
  Name: String!
  ScriptBootstrapAction: AwsEMRS32ScriptBootstrapActionInput!
}

type AwsEMRS32ScriptBootstrapAction {
  Path: String!
  Args: [String]
}

input AwsEMRS32ScriptBootstrapActionInput {
  Path: String!
  Args: [String]
}

type AwsEMRS3a {
  Jar: String
  Properties: JSON
  MainClass: String
  Args: [String]
}

type AwsEMRS3b {
  State: String
  StateChangeReason: AwsEMRS3bStateChangeReason
  FailureDetails: AwsEMRS3bFailureDetails
  Timeline: AwsEMRS3bTimeline
}

type AwsEMRS3bFailureDetails {
  Reason: String
  Message: String
  LogFile: String
}

type AwsEMRS3bStateChangeReason {
  Code: String
  Message: String
}

type AwsEMRS3bTimeline {
  CreationDateTime: Date
  StartDateTime: Date
  EndDateTime: Date
}

input AwsEMRS3Input {
  Name: String
  InstanceFleetType: String!
  TargetOnDemandCapacity: Int
  TargetSpotCapacity: Int
  InstanceTypeConfigs: [AwsEMRS3InstanceTypeConfigsInput]
  LaunchSpecifications: AwsEMRSkInput
}

input AwsEMRS3InstanceTypeConfigsInput {
  InstanceType: String!
  WeightedCapacity: Int
  BidPrice: String
  BidPriceAsPercentageOfOnDemandPrice: JSON
  EbsConfiguration: AwsEMRSaInput
  Configurations: [AwsEMRShInput]
}

type AwsEMRS42 {
  VolumeSpecification: AwsEMRSd
  Device: String
}

type AwsEMRS4e {
  DecommissionTimeout: Int
  InstanceResizePolicy: AwsEMRS4eInstanceResizePolicy
}

input AwsEMRS4eInput {
  DecommissionTimeout: Int
  InstanceResizePolicy: AwsEMRS4eInstanceResizePolicyInput
}

type AwsEMRS4eInstanceResizePolicy {
  InstancesToTerminate: [String]
  InstancesToProtect: [String]
  InstanceTerminationTimeout: Int
}

input AwsEMRS4eInstanceResizePolicyInput {
  InstancesToTerminate: [String]
  InstancesToProtect: [String]
  InstanceTerminationTimeout: Int
}

type AwsEMRS4i {
  Status: AwsEMRS4iStatus
  Constraints: AwsEMRSv
  Rules: [AwsEMRSw]
}

type AwsEMRS4iStatus {
  State: String
  StateChangeReason: AwsEMRS4iStatusStateChangeReason
}

type AwsEMRS4iStatusStateChangeReason {
  Code: String
  Message: String
}

input AwsEMRSaEbsBlockDeviceConfigsInput {
  VolumeSpecification: AwsEMRSdInput!
  VolumesPerInstance: Int
}

input AwsEMRSaInput {
  EbsBlockDeviceConfigs: [AwsEMRSaEbsBlockDeviceConfigsInput]
  EbsOptimized: Boolean
}

type AwsEMRSd {
  VolumeType: String!
  Iops: Int
  SizeInGB: Int!
}

input AwsEMRSdInput {
  VolumeType: String!
  Iops: Int
  SizeInGB: Int!
}

input AwsEMRSetTerminationProtectionInput {
  JobFlowIds: [String]!
  TerminationProtected: Boolean!
}

input AwsEMRSetVisibleToAllUsersInput {
  JobFlowIds: [String]!
  VisibleToAllUsers: Boolean!
}

type AwsEMRSh {
  Classification: String
  Configurations: JSON
  Properties: JSON
}

input AwsEMRShInput {
  Classification: String
  Configurations: JSON
  Properties: JSON
}

type AwsEMRSk {
  SpotSpecification: AwsEMRSkSpotSpecification!
}

input AwsEMRSkInput {
  SpotSpecification: AwsEMRSkSpotSpecificationInput!
}

type AwsEMRSkSpotSpecification {
  TimeoutDurationMinutes: Int!
  TimeoutAction: String!
  BlockDurationMinutes: Int
}

input AwsEMRSkSpotSpecificationInput {
  TimeoutDurationMinutes: Int!
  TimeoutAction: String!
  BlockDurationMinutes: Int
}

input AwsEMRSqInput {
  Name: String
  Market: String
  InstanceRole: String!
  BidPrice: String
  InstanceType: String!
  InstanceCount: Int!
  Configurations: [AwsEMRShInput]
  EbsConfiguration: AwsEMRSaInput
  AutoScalingPolicy: AwsEMRSuInput
}

input AwsEMRSuInput {
  Constraints: AwsEMRSvInput!
  Rules: [AwsEMRSwInput]!
}

type AwsEMRSv {
  MinCapacity: Int!
  MaxCapacity: Int!
}

input AwsEMRSvInput {
  MinCapacity: Int!
  MaxCapacity: Int!
}

type AwsEMRSw {
  Name: String!
  Description: String
  Action: AwsEMRSwAction!
  Trigger: AwsEMRSwTrigger!
}

type AwsEMRSwAction {
  Market: String
  SimpleScalingPolicyConfiguration: AwsEMRSwActionSimpleScalingPolicyConfiguration!
}

input AwsEMRSwActionInput {
  Market: String
  SimpleScalingPolicyConfiguration: AwsEMRSwActionSimpleScalingPolicyConfigurationInput!
}

type AwsEMRSwActionSimpleScalingPolicyConfiguration {
  AdjustmentType: String
  ScalingAdjustment: Int!
  CoolDown: Int
}

input AwsEMRSwActionSimpleScalingPolicyConfigurationInput {
  AdjustmentType: String
  ScalingAdjustment: Int!
  CoolDown: Int
}

input AwsEMRSwInput {
  Name: String!
  Description: String
  Action: AwsEMRSwActionInput!
  Trigger: AwsEMRSwTriggerInput!
}

type AwsEMRSwTrigger {
  CloudWatchAlarmDefinition: AwsEMRSwTriggerCloudWatchAlarmDefinition!
}

type AwsEMRSwTriggerCloudWatchAlarmDefinition {
  ComparisonOperator: String!
  EvaluationPeriods: Int
  MetricName: String!
  Namespace: String
  Period: Int!
  Statistic: String
  Threshold: JSON!
  Unit: String
  Dimensions: [AwsEMRSwTriggerCloudWatchAlarmDefinitionDimensions]
}

type AwsEMRSwTriggerCloudWatchAlarmDefinitionDimensions {
  Key: String
  Value: String
}

input AwsEMRSwTriggerCloudWatchAlarmDefinitionDimensionsInput {
  Key: String
  Value: String
}

input AwsEMRSwTriggerCloudWatchAlarmDefinitionInput {
  ComparisonOperator: String!
  EvaluationPeriods: Int
  MetricName: String!
  Namespace: String
  Period: Int!
  Statistic: String
  Threshold: JSON!
  Unit: String
  Dimensions: [AwsEMRSwTriggerCloudWatchAlarmDefinitionDimensionsInput]
}

input AwsEMRSwTriggerInput {
  CloudWatchAlarmDefinition: AwsEMRSwTriggerCloudWatchAlarmDefinitionInput!
}

input AwsEMRTerminateJobFlowsInput {
  JobFlowIds: [String]!
}

# Amazon Elasticsearch Service (2015-01-01)
type AwsES {
  addTags(input: AwsESAddTagsInput!, config: AwsConfig): JSON
  createElasticsearchDomain(input: AwsESCreateElasticsearchDomainInput!, config: AwsConfig): AwsESCreateElasticsearchDomainOutput
  deleteElasticsearchDomain(input: AwsESDeleteElasticsearchDomainInput!, config: AwsConfig): AwsESDeleteElasticsearchDomainOutput
  deleteElasticsearchServiceRole(config: AwsConfig): JSON
  describeElasticsearchDomain(input: AwsESDescribeElasticsearchDomainInput!, config: AwsConfig): AwsESDescribeElasticsearchDomainOutput
  describeElasticsearchDomainConfig(input: AwsESDescribeElasticsearchDomainConfigInput!, config: AwsConfig): AwsESDescribeElasticsearchDomainConfigOutput
  describeElasticsearchDomains(input: AwsESDescribeElasticsearchDomainsInput!, config: AwsConfig): AwsESDescribeElasticsearchDomainsOutput
  describeElasticsearchInstanceTypeLimits(input: AwsESDescribeElasticsearchInstanceTypeLimitsInput!, config: AwsConfig): AwsESDescribeElasticsearchInstanceTypeLimitsOutput
  listDomainNames(config: AwsConfig): AwsESListDomainNamesOutput
  listElasticsearchInstanceTypes(input: AwsESListElasticsearchInstanceTypesInput!, config: AwsConfig): AwsESListElasticsearchInstanceTypesOutput
  listElasticsearchVersions(input: AwsESListElasticsearchVersionsInput, config: AwsConfig): AwsESListElasticsearchVersionsOutput
  listTags(input: AwsESListTagsInput!, config: AwsConfig): AwsESListTagsOutput
  removeTags(input: AwsESRemoveTagsInput!, config: AwsConfig): JSON
  updateElasticsearchDomainConfig(input: AwsESUpdateElasticsearchDomainConfigInput!, config: AwsConfig): AwsESUpdateElasticsearchDomainConfigOutput
}

input AwsESAddTagsInput {
  ARN: String!
  TagList: [AwsESS3Input]!
}

input AwsESCreateElasticsearchDomainInput {
  DomainName: String!
  ElasticsearchVersion: String
  ElasticsearchClusterConfig: AwsESSaInput
  EBSOptions: AwsESSeInput
  AccessPolicies: String
  SnapshotOptions: AwsESShInput
  VPCOptions: AwsESSiInput
  AdvancedOptions: JSON
  LogPublishingOptions: JSON
}

type AwsESCreateElasticsearchDomainOutput {
  DomainStatus: AwsESSr
}

input AwsESDeleteElasticsearchDomainInput {
  DomainName: String!
}

type AwsESDeleteElasticsearchDomainOutput {
  DomainStatus: AwsESSr
}

input AwsESDescribeElasticsearchDomainConfigInput {
  DomainName: String!
}

type AwsESDescribeElasticsearchDomainConfigOutput {
  DomainConfig: AwsESS12!
}

input AwsESDescribeElasticsearchDomainInput {
  DomainName: String!
}

type AwsESDescribeElasticsearchDomainOutput {
  DomainStatus: AwsESSr!
}

input AwsESDescribeElasticsearchDomainsInput {
  DomainNames: [String]!
}

type AwsESDescribeElasticsearchDomainsOutput {
  DomainStatusList: [AwsESSr]!
}

input AwsESDescribeElasticsearchInstanceTypeLimitsInput {
  DomainName: String
  InstanceType: String!
  ElasticsearchVersion: String!
}

type AwsESDescribeElasticsearchInstanceTypeLimitsOutput {
  LimitsByRole: JSON
}

type AwsESListDomainNamesOutput {
  DomainNames: [AwsESListDomainNamesOutputDomainNames]
}

type AwsESListDomainNamesOutputDomainNames {
  DomainName: String
}

input AwsESListElasticsearchInstanceTypesInput {
  ElasticsearchVersion: String!
  DomainName: String
  MaxResults: Int
  NextToken: String
}

type AwsESListElasticsearchInstanceTypesOutput {
  ElasticsearchInstanceTypes: [String]
  NextToken: String
}

input AwsESListElasticsearchVersionsInput {
  MaxResults: Int
  NextToken: String
}

type AwsESListElasticsearchVersionsOutput {
  ElasticsearchVersions: [String]
  NextToken: String
}

input AwsESListTagsInput {
  ARN: String!
}

type AwsESListTagsOutput {
  TagList: [AwsESS3]
}

input AwsESRemoveTagsInput {
  ARN: String!
  TagKeys: [String]!
}

type AwsESS12 {
  ElasticsearchVersion: AwsESS12ElasticsearchVersion
  ElasticsearchClusterConfig: AwsESS12ElasticsearchClusterConfig
  EBSOptions: AwsESS12EBSOptions
  AccessPolicies: AwsESS12AccessPolicies
  SnapshotOptions: AwsESS12SnapshotOptions
  VPCOptions: AwsESS12VPCOptions
  AdvancedOptions: AwsESS12AdvancedOptions
  LogPublishingOptions: AwsESS12LogPublishingOptions
}

type AwsESS12AccessPolicies {
  Options: String!
  Status: AwsESS14!
}

type AwsESS12AdvancedOptions {
  Options: JSON!
  Status: AwsESS14!
}

type AwsESS12EBSOptions {
  Options: AwsESSe!
  Status: AwsESS14!
}

type AwsESS12ElasticsearchClusterConfig {
  Options: AwsESSa!
  Status: AwsESS14!
}

type AwsESS12ElasticsearchVersion {
  Options: String!
  Status: AwsESS14!
}

type AwsESS12LogPublishingOptions {
  Options: JSON
  Status: AwsESS14
}

type AwsESS12SnapshotOptions {
  Options: AwsESSh!
  Status: AwsESS14!
}

type AwsESS12VPCOptions {
  Options: AwsESSv!
  Status: AwsESS14!
}

type AwsESS14 {
  CreationDate: Date!
  UpdateDate: Date!
  UpdateVersion: Int
  State: String!
  PendingDeletion: Boolean
}

type AwsESS3 {
  Key: String!
  Value: String!
}

input AwsESS3Input {
  Key: String!
  Value: String!
}

type AwsESSa {
  InstanceType: String
  InstanceCount: Int
  DedicatedMasterEnabled: Boolean
  ZoneAwarenessEnabled: Boolean
  DedicatedMasterType: String
  DedicatedMasterCount: Int
}

input AwsESSaInput {
  InstanceType: String
  InstanceCount: Int
  DedicatedMasterEnabled: Boolean
  ZoneAwarenessEnabled: Boolean
  DedicatedMasterType: String
  DedicatedMasterCount: Int
}

type AwsESSe {
  EBSEnabled: Boolean
  VolumeType: String
  VolumeSize: Int
  Iops: Int
}

input AwsESSeInput {
  EBSEnabled: Boolean
  VolumeType: String
  VolumeSize: Int
  Iops: Int
}

type AwsESSh {
  AutomatedSnapshotStartHour: Int
}

input AwsESShInput {
  AutomatedSnapshotStartHour: Int
}

input AwsESSiInput {
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

type AwsESSr {
  DomainId: String!
  DomainName: String!
  ARN: String!
  Created: Boolean
  Deleted: Boolean
  Endpoint: String
  Endpoints: JSON
  Processing: Boolean
  ElasticsearchVersion: String
  ElasticsearchClusterConfig: AwsESSa!
  EBSOptions: AwsESSe
  AccessPolicies: String
  SnapshotOptions: AwsESSh
  VPCOptions: AwsESSv
  AdvancedOptions: JSON
  LogPublishingOptions: JSON
}

type AwsESSv {
  VPCId: String
  SubnetIds: [String]
  AvailabilityZones: [String]
  SecurityGroupIds: [String]
}

input AwsESUpdateElasticsearchDomainConfigInput {
  DomainName: String!
  ElasticsearchClusterConfig: AwsESSaInput
  EBSOptions: AwsESSeInput
  SnapshotOptions: AwsESShInput
  VPCOptions: AwsESSiInput
  AdvancedOptions: JSON
  AccessPolicies: String
  LogPublishingOptions: JSON
}

type AwsESUpdateElasticsearchDomainConfigOutput {
  DomainConfig: AwsESS12!
}

# Amazon Kinesis Firehose (2015-08-04)
type AwsFirehose {
  createDeliveryStream(input: AwsFirehoseCreateDeliveryStreamInput!, config: AwsConfig): AwsFirehoseCreateDeliveryStreamOutput
  deleteDeliveryStream(input: AwsFirehoseDeleteDeliveryStreamInput!, config: AwsConfig): JSON
  describeDeliveryStream(input: AwsFirehoseDescribeDeliveryStreamInput!, config: AwsConfig): AwsFirehoseDescribeDeliveryStreamOutput
  listDeliveryStreams(input: AwsFirehoseListDeliveryStreamsInput, config: AwsConfig): AwsFirehoseListDeliveryStreamsOutput
  putRecord(input: AwsFirehosePutRecordInput!, config: AwsConfig): AwsFirehosePutRecordOutput
  putRecordBatch(input: AwsFirehosePutRecordBatchInput!, config: AwsConfig): AwsFirehosePutRecordBatchOutput
  updateDestination(input: AwsFirehoseUpdateDestinationInput!, config: AwsConfig): JSON
}

input AwsFirehoseCreateDeliveryStreamElasticsearchDestinationConfigurationInput {
  RoleARN: String!
  DomainARN: String!
  IndexName: String!
  TypeName: String!
  IndexRotationPeriod: String
  BufferingHints: AwsFirehoseS1cInput
  RetryOptions: AwsFirehoseS1fInput
  S3BackupMode: String
  S3Configuration: AwsFirehoseS7Input!
  ProcessingConfiguration: AwsFirehoseSnInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

input AwsFirehoseCreateDeliveryStreamExtendedS3DestinationConfigurationInput {
  RoleARN: String!
  BucketARN: String!
  Prefix: String
  BufferingHints: AwsFirehoseSaInput
  CompressionFormat: String
  EncryptionConfiguration: AwsFirehoseSeInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
  ProcessingConfiguration: AwsFirehoseSnInput
  S3BackupMode: String
  S3BackupConfiguration: AwsFirehoseS7Input
}

input AwsFirehoseCreateDeliveryStreamInput {
  DeliveryStreamName: String!
  DeliveryStreamType: String
  KinesisStreamSourceConfiguration: AwsFirehoseCreateDeliveryStreamKinesisStreamSourceConfigurationInput
  S3DestinationConfiguration: AwsFirehoseS7Input
  ExtendedS3DestinationConfiguration: AwsFirehoseCreateDeliveryStreamExtendedS3DestinationConfigurationInput
  RedshiftDestinationConfiguration: AwsFirehoseCreateDeliveryStreamRedshiftDestinationConfigurationInput
  ElasticsearchDestinationConfiguration: AwsFirehoseCreateDeliveryStreamElasticsearchDestinationConfigurationInput
  SplunkDestinationConfiguration: AwsFirehoseCreateDeliveryStreamSplunkDestinationConfigurationInput
}

input AwsFirehoseCreateDeliveryStreamKinesisStreamSourceConfigurationInput {
  KinesisStreamARN: String!
  RoleARN: String!
}

type AwsFirehoseCreateDeliveryStreamOutput {
  DeliveryStreamARN: String
}

input AwsFirehoseCreateDeliveryStreamRedshiftDestinationConfigurationInput {
  RoleARN: String!
  ClusterJDBCURL: String!
  CopyCommand: AwsFirehoseSyInput!
  Username: String!
  Password: String!
  RetryOptions: AwsFirehoseS14Input
  S3Configuration: AwsFirehoseS7Input!
  ProcessingConfiguration: AwsFirehoseSnInput
  S3BackupMode: String
  S3BackupConfiguration: AwsFirehoseS7Input
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

input AwsFirehoseCreateDeliveryStreamSplunkDestinationConfigurationInput {
  HECEndpoint: String!
  HECEndpointType: String!
  HECToken: String!
  HECAcknowledgmentTimeoutInSeconds: Int
  RetryOptions: AwsFirehoseS1nInput
  S3BackupMode: String
  S3Configuration: AwsFirehoseS7Input!
  ProcessingConfiguration: AwsFirehoseSnInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

input AwsFirehoseDeleteDeliveryStreamInput {
  DeliveryStreamName: String!
}

input AwsFirehoseDescribeDeliveryStreamInput {
  DeliveryStreamName: String!
  Limit: Int
  ExclusiveStartDestinationId: String
}

type AwsFirehoseDescribeDeliveryStreamOutput {
  DeliveryStreamDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescription!
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescription {
  DeliveryStreamName: String!
  DeliveryStreamARN: String!
  DeliveryStreamStatus: String!
  DeliveryStreamType: String!
  VersionId: String!
  CreateTimestamp: Date
  LastUpdateTimestamp: Date
  Source: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionSource
  Destinations: [AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinations]!
  HasMoreDestinations: Boolean!
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinations {
  DestinationId: String!
  S3DestinationDescription: AwsFirehoseS27
  ExtendedS3DestinationDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsExtendedS3DestinationDescription
  RedshiftDestinationDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsRedshiftDestinationDescription
  ElasticsearchDestinationDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsElasticsearchDestinationDescription
  SplunkDestinationDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsSplunkDestinationDescription
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsElasticsearchDestinationDescription {
  RoleARN: String
  DomainARN: String
  IndexName: String
  TypeName: String
  IndexRotationPeriod: String
  BufferingHints: AwsFirehoseS1c
  RetryOptions: AwsFirehoseS1f
  S3BackupMode: String
  S3DestinationDescription: AwsFirehoseS27
  ProcessingConfiguration: AwsFirehoseSn
  CloudWatchLoggingOptions: AwsFirehoseSi
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsExtendedS3DestinationDescription {
  RoleARN: String!
  BucketARN: String!
  Prefix: String
  BufferingHints: AwsFirehoseSa!
  CompressionFormat: String!
  EncryptionConfiguration: AwsFirehoseSe!
  CloudWatchLoggingOptions: AwsFirehoseSi
  ProcessingConfiguration: AwsFirehoseSn
  S3BackupMode: String
  S3BackupDescription: AwsFirehoseS27
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsRedshiftDestinationDescription {
  RoleARN: String!
  ClusterJDBCURL: String!
  CopyCommand: AwsFirehoseSy!
  Username: String!
  RetryOptions: AwsFirehoseS14
  S3DestinationDescription: AwsFirehoseS27!
  ProcessingConfiguration: AwsFirehoseSn
  S3BackupMode: String
  S3BackupDescription: AwsFirehoseS27
  CloudWatchLoggingOptions: AwsFirehoseSi
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionDestinationsSplunkDestinationDescription {
  HECEndpoint: String
  HECEndpointType: String
  HECToken: String
  HECAcknowledgmentTimeoutInSeconds: Int
  RetryOptions: AwsFirehoseS1n
  S3BackupMode: String
  S3DestinationDescription: AwsFirehoseS27
  ProcessingConfiguration: AwsFirehoseSn
  CloudWatchLoggingOptions: AwsFirehoseSi
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionSource {
  KinesisStreamSourceDescription: AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionSourceKinesisStreamSourceDescription
}

type AwsFirehoseDescribeDeliveryStreamOutputDeliveryStreamDescriptionSourceKinesisStreamSourceDescription {
  KinesisStreamARN: String
  RoleARN: String
  DeliveryStartTimestamp: Date
}

input AwsFirehoseListDeliveryStreamsInput {
  Limit: Int
  DeliveryStreamType: String
  ExclusiveStartDeliveryStreamName: String
}

type AwsFirehoseListDeliveryStreamsOutput {
  DeliveryStreamNames: [String]!
  HasMoreDeliveryStreams: Boolean!
}

input AwsFirehosePutRecordBatchInput {
  DeliveryStreamName: String!
  Records: [AwsFirehoseS2hInput]!
}

type AwsFirehosePutRecordBatchOutput {
  FailedPutCount: Int!
  RequestResponses: [AwsFirehosePutRecordBatchOutputRequestResponses]!
}

type AwsFirehosePutRecordBatchOutputRequestResponses {
  RecordId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsFirehosePutRecordInput {
  DeliveryStreamName: String!
  Record: AwsFirehoseS2hInput!
}

type AwsFirehosePutRecordOutput {
  RecordId: String!
}

type AwsFirehoseS14 {
  DurationInSeconds: Int
}

input AwsFirehoseS14Input {
  DurationInSeconds: Int
}

type AwsFirehoseS1c {
  IntervalInSeconds: Int
  SizeInMBs: Int
}

input AwsFirehoseS1cInput {
  IntervalInSeconds: Int
  SizeInMBs: Int
}

type AwsFirehoseS1f {
  DurationInSeconds: Int
}

input AwsFirehoseS1fInput {
  DurationInSeconds: Int
}

type AwsFirehoseS1n {
  DurationInSeconds: Int
}

input AwsFirehoseS1nInput {
  DurationInSeconds: Int
}

type AwsFirehoseS27 {
  RoleARN: String!
  BucketARN: String!
  Prefix: String
  BufferingHints: AwsFirehoseSa!
  CompressionFormat: String!
  EncryptionConfiguration: AwsFirehoseSe!
  CloudWatchLoggingOptions: AwsFirehoseSi
}

input AwsFirehoseS2hInput {
  Data: JSON!
}

input AwsFirehoseS2uInput {
  RoleARN: String
  BucketARN: String
  Prefix: String
  BufferingHints: AwsFirehoseSaInput
  CompressionFormat: String
  EncryptionConfiguration: AwsFirehoseSeInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

input AwsFirehoseS7Input {
  RoleARN: String!
  BucketARN: String!
  Prefix: String
  BufferingHints: AwsFirehoseSaInput
  CompressionFormat: String
  EncryptionConfiguration: AwsFirehoseSeInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

type AwsFirehoseSa {
  SizeInMBs: Int
  IntervalInSeconds: Int
}

input AwsFirehoseSaInput {
  SizeInMBs: Int
  IntervalInSeconds: Int
}

type AwsFirehoseSe {
  NoEncryptionConfig: String
  KMSEncryptionConfig: AwsFirehoseSeKMSEncryptionConfig
}

input AwsFirehoseSeInput {
  NoEncryptionConfig: String
  KMSEncryptionConfig: AwsFirehoseSeKMSEncryptionConfigInput
}

type AwsFirehoseSeKMSEncryptionConfig {
  AWSKMSKeyARN: String!
}

input AwsFirehoseSeKMSEncryptionConfigInput {
  AWSKMSKeyARN: String!
}

type AwsFirehoseSi {
  Enabled: Boolean
  LogGroupName: String
  LogStreamName: String
}

input AwsFirehoseSiInput {
  Enabled: Boolean
  LogGroupName: String
  LogStreamName: String
}

type AwsFirehoseSn {
  Enabled: Boolean
  Processors: [AwsFirehoseSnProcessors]
}

input AwsFirehoseSnInput {
  Enabled: Boolean
  Processors: [AwsFirehoseSnProcessorsInput]
}

type AwsFirehoseSnProcessors {
  Type: String!
  Parameters: [AwsFirehoseSnProcessorsParameters]
}

input AwsFirehoseSnProcessorsInput {
  Type: String!
  Parameters: [AwsFirehoseSnProcessorsParametersInput]
}

type AwsFirehoseSnProcessorsParameters {
  ParameterName: String!
  ParameterValue: String!
}

input AwsFirehoseSnProcessorsParametersInput {
  ParameterName: String!
  ParameterValue: String!
}

type AwsFirehoseSy {
  DataTableName: String!
  DataTableColumns: String
  CopyOptions: String
}

input AwsFirehoseSyInput {
  DataTableName: String!
  DataTableColumns: String
  CopyOptions: String
}

input AwsFirehoseUpdateDestinationElasticsearchDestinationUpdateInput {
  RoleARN: String
  DomainARN: String
  IndexName: String
  TypeName: String
  IndexRotationPeriod: String
  BufferingHints: AwsFirehoseS1cInput
  RetryOptions: AwsFirehoseS1fInput
  S3Update: AwsFirehoseS2uInput
  ProcessingConfiguration: AwsFirehoseSnInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

input AwsFirehoseUpdateDestinationExtendedS3DestinationUpdateInput {
  RoleARN: String
  BucketARN: String
  Prefix: String
  BufferingHints: AwsFirehoseSaInput
  CompressionFormat: String
  EncryptionConfiguration: AwsFirehoseSeInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
  ProcessingConfiguration: AwsFirehoseSnInput
  S3BackupMode: String
  S3BackupUpdate: AwsFirehoseS2uInput
}

input AwsFirehoseUpdateDestinationInput {
  DeliveryStreamName: String!
  CurrentDeliveryStreamVersionId: String!
  DestinationId: String!
  S3DestinationUpdate: AwsFirehoseS2uInput
  ExtendedS3DestinationUpdate: AwsFirehoseUpdateDestinationExtendedS3DestinationUpdateInput
  RedshiftDestinationUpdate: AwsFirehoseUpdateDestinationRedshiftDestinationUpdateInput
  ElasticsearchDestinationUpdate: AwsFirehoseUpdateDestinationElasticsearchDestinationUpdateInput
  SplunkDestinationUpdate: AwsFirehoseUpdateDestinationSplunkDestinationUpdateInput
}

input AwsFirehoseUpdateDestinationRedshiftDestinationUpdateInput {
  RoleARN: String
  ClusterJDBCURL: String
  CopyCommand: AwsFirehoseSyInput
  Username: String
  Password: String
  RetryOptions: AwsFirehoseS14Input
  S3Update: AwsFirehoseS2uInput
  ProcessingConfiguration: AwsFirehoseSnInput
  S3BackupMode: String
  S3BackupUpdate: AwsFirehoseS2uInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

input AwsFirehoseUpdateDestinationSplunkDestinationUpdateInput {
  HECEndpoint: String
  HECEndpointType: String
  HECToken: String
  HECAcknowledgmentTimeoutInSeconds: Int
  RetryOptions: AwsFirehoseS1nInput
  S3BackupMode: String
  S3Update: AwsFirehoseS2uInput
  ProcessingConfiguration: AwsFirehoseSnInput
  CloudWatchLoggingOptions: AwsFirehoseSiInput
}

# Amazon GameLift (2015-10-01)
type AwsGameLift {
  acceptMatch(input: AwsGameLiftAcceptMatchInput!, config: AwsConfig): JSON
  createAlias(input: AwsGameLiftCreateAliasInput!, config: AwsConfig): AwsGameLiftCreateAliasOutput
  createBuild(input: AwsGameLiftCreateBuildInput, config: AwsConfig): AwsGameLiftCreateBuildOutput
  createFleet(input: AwsGameLiftCreateFleetInput!, config: AwsConfig): AwsGameLiftCreateFleetOutput
  createGameSession(input: AwsGameLiftCreateGameSessionInput!, config: AwsConfig): AwsGameLiftCreateGameSessionOutput
  createGameSessionQueue(input: AwsGameLiftCreateGameSessionQueueInput!, config: AwsConfig): AwsGameLiftCreateGameSessionQueueOutput
  createMatchmakingConfiguration(input: AwsGameLiftCreateMatchmakingConfigurationInput!, config: AwsConfig): AwsGameLiftCreateMatchmakingConfigurationOutput
  createMatchmakingRuleSet(input: AwsGameLiftCreateMatchmakingRuleSetInput!, config: AwsConfig): AwsGameLiftCreateMatchmakingRuleSetOutput
  createPlayerSession(input: AwsGameLiftCreatePlayerSessionInput!, config: AwsConfig): AwsGameLiftCreatePlayerSessionOutput
  createPlayerSessions(input: AwsGameLiftCreatePlayerSessionsInput!, config: AwsConfig): AwsGameLiftCreatePlayerSessionsOutput
  createVpcPeeringAuthorization(input: AwsGameLiftCreateVpcPeeringAuthorizationInput!, config: AwsConfig): AwsGameLiftCreateVpcPeeringAuthorizationOutput
  createVpcPeeringConnection(input: AwsGameLiftCreateVpcPeeringConnectionInput!, config: AwsConfig): JSON
  deleteAlias(input: AwsGameLiftDeleteAliasInput!, config: AwsConfig): JSON
  deleteBuild(input: AwsGameLiftDeleteBuildInput!, config: AwsConfig): JSON
  deleteFleet(input: AwsGameLiftDeleteFleetInput!, config: AwsConfig): JSON
  deleteGameSessionQueue(input: AwsGameLiftDeleteGameSessionQueueInput!, config: AwsConfig): JSON
  deleteMatchmakingConfiguration(input: AwsGameLiftDeleteMatchmakingConfigurationInput!, config: AwsConfig): JSON
  deleteScalingPolicy(input: AwsGameLiftDeleteScalingPolicyInput!, config: AwsConfig): JSON
  deleteVpcPeeringAuthorization(input: AwsGameLiftDeleteVpcPeeringAuthorizationInput!, config: AwsConfig): JSON
  deleteVpcPeeringConnection(input: AwsGameLiftDeleteVpcPeeringConnectionInput!, config: AwsConfig): JSON
  describeAlias(input: AwsGameLiftDescribeAliasInput!, config: AwsConfig): AwsGameLiftDescribeAliasOutput
  describeBuild(input: AwsGameLiftDescribeBuildInput!, config: AwsConfig): AwsGameLiftDescribeBuildOutput
  describeEC2InstanceLimits(input: AwsGameLiftDescribeEC2InstanceLimitsInput, config: AwsConfig): AwsGameLiftDescribeEC2InstanceLimitsOutput
  describeFleetAttributes(input: AwsGameLiftDescribeFleetAttributesInput, config: AwsConfig): AwsGameLiftDescribeFleetAttributesOutput
  describeFleetCapacity(input: AwsGameLiftDescribeFleetCapacityInput, config: AwsConfig): AwsGameLiftDescribeFleetCapacityOutput
  describeFleetEvents(input: AwsGameLiftDescribeFleetEventsInput!, config: AwsConfig): AwsGameLiftDescribeFleetEventsOutput
  describeFleetPortSettings(input: AwsGameLiftDescribeFleetPortSettingsInput!, config: AwsConfig): AwsGameLiftDescribeFleetPortSettingsOutput
  describeFleetUtilization(input: AwsGameLiftDescribeFleetUtilizationInput, config: AwsConfig): AwsGameLiftDescribeFleetUtilizationOutput
  describeGameSessionDetails(input: AwsGameLiftDescribeGameSessionDetailsInput, config: AwsConfig): AwsGameLiftDescribeGameSessionDetailsOutput
  describeGameSessionPlacement(input: AwsGameLiftDescribeGameSessionPlacementInput!, config: AwsConfig): AwsGameLiftDescribeGameSessionPlacementOutput
  describeGameSessionQueues(input: AwsGameLiftDescribeGameSessionQueuesInput, config: AwsConfig): AwsGameLiftDescribeGameSessionQueuesOutput
  describeGameSessions(input: AwsGameLiftDescribeGameSessionsInput, config: AwsConfig): AwsGameLiftDescribeGameSessionsOutput
  describeInstances(input: AwsGameLiftDescribeInstancesInput!, config: AwsConfig): AwsGameLiftDescribeInstancesOutput
  describeMatchmaking(input: AwsGameLiftDescribeMatchmakingInput!, config: AwsConfig): AwsGameLiftDescribeMatchmakingOutput
  describeMatchmakingConfigurations(input: AwsGameLiftDescribeMatchmakingConfigurationsInput, config: AwsConfig): AwsGameLiftDescribeMatchmakingConfigurationsOutput
  describeMatchmakingRuleSets(input: AwsGameLiftDescribeMatchmakingRuleSetsInput, config: AwsConfig): AwsGameLiftDescribeMatchmakingRuleSetsOutput
  describePlayerSessions(input: AwsGameLiftDescribePlayerSessionsInput, config: AwsConfig): AwsGameLiftDescribePlayerSessionsOutput
  describeRuntimeConfiguration(input: AwsGameLiftDescribeRuntimeConfigurationInput!, config: AwsConfig): AwsGameLiftDescribeRuntimeConfigurationOutput
  describeScalingPolicies(input: AwsGameLiftDescribeScalingPoliciesInput!, config: AwsConfig): AwsGameLiftDescribeScalingPoliciesOutput
  describeVpcPeeringAuthorizations(input: JSON, config: AwsConfig): AwsGameLiftDescribeVpcPeeringAuthorizationsOutput
  describeVpcPeeringConnections(input: AwsGameLiftDescribeVpcPeeringConnectionsInput, config: AwsConfig): AwsGameLiftDescribeVpcPeeringConnectionsOutput
  getGameSessionLogUrl(input: AwsGameLiftGetGameSessionLogUrlInput!, config: AwsConfig): AwsGameLiftGetGameSessionLogUrlOutput
  getInstanceAccess(input: AwsGameLiftGetInstanceAccessInput!, config: AwsConfig): AwsGameLiftGetInstanceAccessOutput
  listAliases(input: AwsGameLiftListAliasesInput, config: AwsConfig): AwsGameLiftListAliasesOutput
  listBuilds(input: AwsGameLiftListBuildsInput, config: AwsConfig): AwsGameLiftListBuildsOutput
  listFleets(input: AwsGameLiftListFleetsInput, config: AwsConfig): AwsGameLiftListFleetsOutput
  putScalingPolicy(input: AwsGameLiftPutScalingPolicyInput!, config: AwsConfig): AwsGameLiftPutScalingPolicyOutput
  requestUploadCredentials(input: AwsGameLiftRequestUploadCredentialsInput!, config: AwsConfig): AwsGameLiftRequestUploadCredentialsOutput
  resolveAlias(input: AwsGameLiftResolveAliasInput!, config: AwsConfig): AwsGameLiftResolveAliasOutput
  searchGameSessions(input: AwsGameLiftSearchGameSessionsInput, config: AwsConfig): AwsGameLiftSearchGameSessionsOutput
  startGameSessionPlacement(input: AwsGameLiftStartGameSessionPlacementInput!, config: AwsConfig): AwsGameLiftStartGameSessionPlacementOutput
  startMatchmaking(input: AwsGameLiftStartMatchmakingInput!, config: AwsConfig): AwsGameLiftStartMatchmakingOutput
  stopGameSessionPlacement(input: AwsGameLiftStopGameSessionPlacementInput!, config: AwsConfig): AwsGameLiftStopGameSessionPlacementOutput
  stopMatchmaking(input: AwsGameLiftStopMatchmakingInput!, config: AwsConfig): JSON
  updateAlias(input: AwsGameLiftUpdateAliasInput!, config: AwsConfig): AwsGameLiftUpdateAliasOutput
  updateBuild(input: AwsGameLiftUpdateBuildInput!, config: AwsConfig): AwsGameLiftUpdateBuildOutput
  updateFleetAttributes(input: AwsGameLiftUpdateFleetAttributesInput!, config: AwsConfig): AwsGameLiftUpdateFleetAttributesOutput
  updateFleetCapacity(input: AwsGameLiftUpdateFleetCapacityInput!, config: AwsConfig): AwsGameLiftUpdateFleetCapacityOutput
  updateFleetPortSettings(input: AwsGameLiftUpdateFleetPortSettingsInput!, config: AwsConfig): AwsGameLiftUpdateFleetPortSettingsOutput
  updateGameSession(input: AwsGameLiftUpdateGameSessionInput!, config: AwsConfig): AwsGameLiftUpdateGameSessionOutput
  updateGameSessionQueue(input: AwsGameLiftUpdateGameSessionQueueInput!, config: AwsConfig): AwsGameLiftUpdateGameSessionQueueOutput
  updateMatchmakingConfiguration(input: AwsGameLiftUpdateMatchmakingConfigurationInput!, config: AwsConfig): AwsGameLiftUpdateMatchmakingConfigurationOutput
  updateRuntimeConfiguration(input: AwsGameLiftUpdateRuntimeConfigurationInput!, config: AwsConfig): AwsGameLiftUpdateRuntimeConfigurationOutput
  validateMatchmakingRuleSet(input: AwsGameLiftValidateMatchmakingRuleSetInput!, config: AwsConfig): AwsGameLiftValidateMatchmakingRuleSetOutput
}

input AwsGameLiftAcceptMatchInput {
  TicketId: String!
  PlayerIds: [String]!
  AcceptanceType: String!
}

input AwsGameLiftCreateAliasInput {
  Name: String!
  Description: String
  RoutingStrategy: AwsGameLiftSaInput!
}

type AwsGameLiftCreateAliasOutput {
  Alias: AwsGameLiftSf
}

input AwsGameLiftCreateBuildInput {
  Name: String
  Version: String
  StorageLocation: AwsGameLiftSkInput
  OperatingSystem: String
}

type AwsGameLiftCreateBuildOutput {
  Build: AwsGameLiftSo
  UploadCredentials: AwsGameLiftSs
  StorageLocation: AwsGameLiftSk
}

input AwsGameLiftCreateFleetInput {
  Name: String!
  Description: String
  BuildId: String!
  ServerLaunchPath: String
  ServerLaunchParameters: String
  LogPaths: [String]
  EC2InstanceType: String!
  EC2InboundPermissions: [AwsGameLiftSwInput]
  NewGameSessionProtectionPolicy: String
  RuntimeConfiguration: AwsGameLiftS12Input
  ResourceCreationLimitPolicy: AwsGameLiftS18Input
  MetricGroups: [String]
  PeerVpcAwsAccountId: String
  PeerVpcId: String
}

type AwsGameLiftCreateFleetOutput {
  FleetAttributes: AwsGameLiftS1d
}

input AwsGameLiftCreateGameSessionInput {
  FleetId: String
  AliasId: String
  MaximumPlayerSessionCount: Int!
  Name: String
  GameProperties: [AwsGameLiftS1gInput]
  CreatorId: String
  GameSessionId: String
  IdempotencyToken: String
  GameSessionData: String
}

type AwsGameLiftCreateGameSessionOutput {
  GameSession: AwsGameLiftS1n
}

input AwsGameLiftCreateGameSessionQueueInput {
  Name: String!
  TimeoutInSeconds: Int
  PlayerLatencyPolicies: [AwsGameLiftS1tInput]
  Destinations: [AwsGameLiftS1vInput]
}

type AwsGameLiftCreateGameSessionQueueOutput {
  GameSessionQueue: AwsGameLiftS1y
}

input AwsGameLiftCreateMatchmakingConfigurationInput {
  Name: String!
  Description: String
  GameSessionQueueArns: [String]!
  RequestTimeoutSeconds: Int!
  AcceptanceTimeoutSeconds: Int
  AcceptanceRequired: Boolean!
  RuleSetName: String!
  NotificationTarget: String
  AdditionalPlayerCount: Int
  CustomEventData: String
  GameProperties: [AwsGameLiftS1gInput]
  GameSessionData: String
}

type AwsGameLiftCreateMatchmakingConfigurationOutput {
  Configuration: AwsGameLiftS27
}

input AwsGameLiftCreateMatchmakingRuleSetInput {
  Name: String!
  RuleSetBody: String!
}

type AwsGameLiftCreateMatchmakingRuleSetOutput {
  RuleSet: AwsGameLiftS2b!
}

input AwsGameLiftCreatePlayerSessionInput {
  GameSessionId: String!
  PlayerId: String!
  PlayerData: String
}

type AwsGameLiftCreatePlayerSessionOutput {
  PlayerSession: AwsGameLiftS2f
}

input AwsGameLiftCreatePlayerSessionsInput {
  GameSessionId: String!
  PlayerIds: [String]!
  PlayerDataMap: JSON
}

type AwsGameLiftCreatePlayerSessionsOutput {
  PlayerSessions: [AwsGameLiftS2f]
}

input AwsGameLiftCreateVpcPeeringAuthorizationInput {
  GameLiftAwsAccountId: String!
  PeerVpcId: String!
}

type AwsGameLiftCreateVpcPeeringAuthorizationOutput {
  VpcPeeringAuthorization: AwsGameLiftS2p
}

input AwsGameLiftCreateVpcPeeringConnectionInput {
  FleetId: String!
  PeerVpcAwsAccountId: String!
  PeerVpcId: String!
}

input AwsGameLiftDeleteAliasInput {
  AliasId: String!
}

input AwsGameLiftDeleteBuildInput {
  BuildId: String!
}

input AwsGameLiftDeleteFleetInput {
  FleetId: String!
}

input AwsGameLiftDeleteGameSessionQueueInput {
  Name: String!
}

input AwsGameLiftDeleteMatchmakingConfigurationInput {
  Name: String!
}

input AwsGameLiftDeleteScalingPolicyInput {
  Name: String!
  FleetId: String!
}

input AwsGameLiftDeleteVpcPeeringAuthorizationInput {
  GameLiftAwsAccountId: String!
  PeerVpcId: String!
}

input AwsGameLiftDeleteVpcPeeringConnectionInput {
  FleetId: String!
  VpcPeeringConnectionId: String!
}

input AwsGameLiftDescribeAliasInput {
  AliasId: String!
}

type AwsGameLiftDescribeAliasOutput {
  Alias: AwsGameLiftSf
}

input AwsGameLiftDescribeBuildInput {
  BuildId: String!
}

type AwsGameLiftDescribeBuildOutput {
  Build: AwsGameLiftSo
}

input AwsGameLiftDescribeEC2InstanceLimitsInput {
  EC2InstanceType: String
}

type AwsGameLiftDescribeEC2InstanceLimitsOutput {
  EC2InstanceLimits: [AwsGameLiftDescribeEC2InstanceLimitsOutputEC2InstanceLimits]
}

type AwsGameLiftDescribeEC2InstanceLimitsOutputEC2InstanceLimits {
  EC2InstanceType: String
  CurrentInstances: Int
  InstanceLimit: Int
}

input AwsGameLiftDescribeFleetAttributesInput {
  FleetIds: [String]
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeFleetAttributesOutput {
  FleetAttributes: [AwsGameLiftS1d]
  NextToken: String
}

input AwsGameLiftDescribeFleetCapacityInput {
  FleetIds: [String]
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeFleetCapacityOutput {
  FleetCapacity: [AwsGameLiftDescribeFleetCapacityOutputFleetCapacity]
  NextToken: String
}

type AwsGameLiftDescribeFleetCapacityOutputFleetCapacity {
  FleetId: String
  InstanceType: String
  InstanceCounts: AwsGameLiftDescribeFleetCapacityOutputFleetCapacityInstanceCounts
}

type AwsGameLiftDescribeFleetCapacityOutputFleetCapacityInstanceCounts {
  DESIRED: Int
  MINIMUM: Int
  MAXIMUM: Int
  PENDING: Int
  ACTIVE: Int
  IDLE: Int
  TERMINATING: Int
}

input AwsGameLiftDescribeFleetEventsInput {
  FleetId: String!
  StartTime: Date
  EndTime: Date
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeFleetEventsOutput {
  Events: [AwsGameLiftDescribeFleetEventsOutputEvents]
  NextToken: String
}

type AwsGameLiftDescribeFleetEventsOutputEvents {
  EventId: String
  ResourceId: String
  EventCode: String
  Message: String
  EventTime: Date
  PreSignedLogUrl: String
}

input AwsGameLiftDescribeFleetPortSettingsInput {
  FleetId: String!
}

type AwsGameLiftDescribeFleetPortSettingsOutput {
  InboundPermissions: [AwsGameLiftSw]
}

input AwsGameLiftDescribeFleetUtilizationInput {
  FleetIds: [String]
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeFleetUtilizationOutput {
  FleetUtilization: [AwsGameLiftDescribeFleetUtilizationOutputFleetUtilization]
  NextToken: String
}

type AwsGameLiftDescribeFleetUtilizationOutputFleetUtilization {
  FleetId: String
  ActiveServerProcessCount: Int
  ActiveGameSessionCount: Int
  CurrentPlayerSessionCount: Int
  MaximumPlayerSessionCount: Int
}

input AwsGameLiftDescribeGameSessionDetailsInput {
  FleetId: String
  GameSessionId: String
  AliasId: String
  StatusFilter: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeGameSessionDetailsOutput {
  GameSessionDetails: [AwsGameLiftDescribeGameSessionDetailsOutputGameSessionDetails]
  NextToken: String
}

type AwsGameLiftDescribeGameSessionDetailsOutputGameSessionDetails {
  GameSession: AwsGameLiftS1n
  ProtectionPolicy: String
}

input AwsGameLiftDescribeGameSessionPlacementInput {
  PlacementId: String!
}

type AwsGameLiftDescribeGameSessionPlacementOutput {
  GameSessionPlacement: AwsGameLiftS42
}

input AwsGameLiftDescribeGameSessionQueuesInput {
  Names: [String]
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeGameSessionQueuesOutput {
  GameSessionQueues: [AwsGameLiftS1y]
  NextToken: String
}

input AwsGameLiftDescribeGameSessionsInput {
  FleetId: String
  GameSessionId: String
  AliasId: String
  StatusFilter: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeGameSessionsOutput {
  GameSessions: [AwsGameLiftS1n]
  NextToken: String
}

input AwsGameLiftDescribeInstancesInput {
  FleetId: String!
  InstanceId: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeInstancesOutput {
  Instances: [AwsGameLiftDescribeInstancesOutputInstances]
  NextToken: String
}

type AwsGameLiftDescribeInstancesOutputInstances {
  FleetId: String
  InstanceId: String
  IpAddress: String
  OperatingSystem: String
  Type: String
  Status: String
  CreationTime: Date
}

input AwsGameLiftDescribeMatchmakingConfigurationsInput {
  Names: [String]
  RuleSetName: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeMatchmakingConfigurationsOutput {
  Configurations: [AwsGameLiftS27]
  NextToken: String
}

input AwsGameLiftDescribeMatchmakingInput {
  TicketIds: [String]!
}

type AwsGameLiftDescribeMatchmakingOutput {
  TicketList: [AwsGameLiftS4q]
}

input AwsGameLiftDescribeMatchmakingRuleSetsInput {
  Names: [String]
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeMatchmakingRuleSetsOutput {
  RuleSets: [AwsGameLiftS2b]!
  NextToken: String
}

input AwsGameLiftDescribePlayerSessionsInput {
  GameSessionId: String
  PlayerId: String
  PlayerSessionId: String
  PlayerSessionStatusFilter: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribePlayerSessionsOutput {
  PlayerSessions: [AwsGameLiftS2f]
  NextToken: String
}

input AwsGameLiftDescribeRuntimeConfigurationInput {
  FleetId: String!
}

type AwsGameLiftDescribeRuntimeConfigurationOutput {
  RuntimeConfiguration: AwsGameLiftS12
}

input AwsGameLiftDescribeScalingPoliciesInput {
  FleetId: String!
  StatusFilter: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftDescribeScalingPoliciesOutput {
  ScalingPolicies: [AwsGameLiftDescribeScalingPoliciesOutputScalingPolicies]
  NextToken: String
}

type AwsGameLiftDescribeScalingPoliciesOutputScalingPolicies {
  FleetId: String
  Name: String
  Status: String
  ScalingAdjustment: Int
  ScalingAdjustmentType: String
  ComparisonOperator: String
  Threshold: JSON
  EvaluationPeriods: Int
  MetricName: String
}

type AwsGameLiftDescribeVpcPeeringAuthorizationsOutput {
  VpcPeeringAuthorizations: [AwsGameLiftS2p]
}

input AwsGameLiftDescribeVpcPeeringConnectionsInput {
  FleetId: String
}

type AwsGameLiftDescribeVpcPeeringConnectionsOutput {
  VpcPeeringConnections: [AwsGameLiftDescribeVpcPeeringConnectionsOutputVpcPeeringConnections]
}

type AwsGameLiftDescribeVpcPeeringConnectionsOutputVpcPeeringConnections {
  FleetId: String
  IpV4CidrBlock: String
  VpcPeeringConnectionId: String
  Status: AwsGameLiftDescribeVpcPeeringConnectionsOutputVpcPeeringConnectionsStatus
  PeerVpcId: String
  GameLiftVpcId: String
}

type AwsGameLiftDescribeVpcPeeringConnectionsOutputVpcPeeringConnectionsStatus {
  Code: String
  Message: String
}

input AwsGameLiftGetGameSessionLogUrlInput {
  GameSessionId: String!
}

type AwsGameLiftGetGameSessionLogUrlOutput {
  PreSignedUrl: String
}

input AwsGameLiftGetInstanceAccessInput {
  FleetId: String!
  InstanceId: String!
}

type AwsGameLiftGetInstanceAccessOutput {
  InstanceAccess: AwsGameLiftGetInstanceAccessOutputInstanceAccess
}

type AwsGameLiftGetInstanceAccessOutputInstanceAccess {
  FleetId: String
  InstanceId: String
  IpAddress: String
  OperatingSystem: String
  Credentials: AwsGameLiftGetInstanceAccessOutputInstanceAccessCredentials
}

type AwsGameLiftGetInstanceAccessOutputInstanceAccessCredentials {
  UserName: String
  Secret: String
}

input AwsGameLiftListAliasesInput {
  RoutingStrategyType: String
  Name: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftListAliasesOutput {
  Aliases: [AwsGameLiftSf]
  NextToken: String
}

input AwsGameLiftListBuildsInput {
  Status: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftListBuildsOutput {
  Builds: [AwsGameLiftSo]
  NextToken: String
}

input AwsGameLiftListFleetsInput {
  BuildId: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftListFleetsOutput {
  FleetIds: [String]
  NextToken: String
}

input AwsGameLiftPutScalingPolicyInput {
  Name: String!
  FleetId: String!
  ScalingAdjustment: Int!
  ScalingAdjustmentType: String!
  Threshold: JSON!
  ComparisonOperator: String!
  EvaluationPeriods: Int!
  MetricName: String!
}

type AwsGameLiftPutScalingPolicyOutput {
  Name: String
}

input AwsGameLiftRequestUploadCredentialsInput {
  BuildId: String!
}

type AwsGameLiftRequestUploadCredentialsOutput {
  UploadCredentials: AwsGameLiftSs
  StorageLocation: AwsGameLiftSk
}

input AwsGameLiftResolveAliasInput {
  AliasId: String!
}

type AwsGameLiftResolveAliasOutput {
  FleetId: String
}

type AwsGameLiftS12 {
  ServerProcesses: [AwsGameLiftS12ServerProcesses]
  MaxConcurrentGameSessionActivations: Int
  GameSessionActivationTimeoutSeconds: Int
}

input AwsGameLiftS12Input {
  ServerProcesses: [AwsGameLiftS12ServerProcessesInput]
  MaxConcurrentGameSessionActivations: Int
  GameSessionActivationTimeoutSeconds: Int
}

type AwsGameLiftS12ServerProcesses {
  LaunchPath: String!
  Parameters: String
  ConcurrentExecutions: Int!
}

input AwsGameLiftS12ServerProcessesInput {
  LaunchPath: String!
  Parameters: String
  ConcurrentExecutions: Int!
}

type AwsGameLiftS18 {
  NewGameSessionsPerCreator: Int
  PolicyPeriodInMinutes: Int
}

input AwsGameLiftS18Input {
  NewGameSessionsPerCreator: Int
  PolicyPeriodInMinutes: Int
}

type AwsGameLiftS1d {
  FleetId: String
  FleetArn: String
  Description: String
  Name: String
  CreationTime: Date
  TerminationTime: Date
  Status: String
  BuildId: String
  ServerLaunchPath: String
  ServerLaunchParameters: String
  LogPaths: [String]
  NewGameSessionProtectionPolicy: String
  OperatingSystem: String
  ResourceCreationLimitPolicy: AwsGameLiftS18
  MetricGroups: [String]
}

type AwsGameLiftS1g {
  Key: String!
  Value: String!
}

input AwsGameLiftS1gInput {
  Key: String!
  Value: String!
}

type AwsGameLiftS1n {
  GameSessionId: String
  Name: String
  FleetId: String
  CreationTime: Date
  TerminationTime: Date
  CurrentPlayerSessionCount: Int
  MaximumPlayerSessionCount: Int
  Status: String
  GameProperties: [AwsGameLiftS1g]
  IpAddress: String
  Port: Int
  PlayerSessionCreationPolicy: String
  CreatorId: String
  GameSessionData: String
}

type AwsGameLiftS1t {
  MaximumIndividualPlayerLatencyMilliseconds: Int
  PolicyDurationSeconds: Int
}

input AwsGameLiftS1tInput {
  MaximumIndividualPlayerLatencyMilliseconds: Int
  PolicyDurationSeconds: Int
}

type AwsGameLiftS1v {
  DestinationArn: String
}

input AwsGameLiftS1vInput {
  DestinationArn: String
}

type AwsGameLiftS1y {
  Name: String
  GameSessionQueueArn: String
  TimeoutInSeconds: Int
  PlayerLatencyPolicies: [AwsGameLiftS1t]
  Destinations: [AwsGameLiftS1v]
}

type AwsGameLiftS27 {
  Name: String
  Description: String
  GameSessionQueueArns: [String]
  RequestTimeoutSeconds: Int
  AcceptanceTimeoutSeconds: Int
  AcceptanceRequired: Boolean
  RuleSetName: String
  NotificationTarget: String
  AdditionalPlayerCount: Int
  CustomEventData: String
  CreationTime: Date
  GameProperties: [AwsGameLiftS1g]
  GameSessionData: String
}

type AwsGameLiftS2b {
  RuleSetName: String
  RuleSetBody: String!
  CreationTime: Date
}

type AwsGameLiftS2f {
  PlayerSessionId: String
  PlayerId: String
  GameSessionId: String
  FleetId: String
  CreationTime: Date
  TerminationTime: Date
  Status: String
  IpAddress: String
  Port: Int
  PlayerData: String
}

type AwsGameLiftS2p {
  GameLiftAwsAccountId: String
  PeerVpcAwsAccountId: String
  PeerVpcId: String
  CreationTime: Date
  ExpirationTime: Date
}

type AwsGameLiftS42 {
  PlacementId: String
  GameSessionQueueName: String
  Status: String
  GameProperties: [AwsGameLiftS1g]
  MaximumPlayerSessionCount: Int
  GameSessionName: String
  GameSessionId: String
  GameSessionArn: String
  GameSessionRegion: String
  PlayerLatencies: [AwsGameLiftS44]
  StartTime: Date
  EndTime: Date
  IpAddress: String
  Port: Int
  PlacedPlayerSessions: [AwsGameLiftS42PlacedPlayerSessions]
  GameSessionData: String
}

type AwsGameLiftS42PlacedPlayerSessions {
  PlayerId: String
  PlayerSessionId: String
}

type AwsGameLiftS44 {
  PlayerId: String
  RegionIdentifier: String
  LatencyInMilliseconds: Float
}

input AwsGameLiftS44Input {
  PlayerId: String
  RegionIdentifier: String
  LatencyInMilliseconds: Float
}

type AwsGameLiftS4q {
  TicketId: String
  ConfigurationName: String
  Status: String
  StatusReason: String
  StatusMessage: String
  StartTime: Date
  EndTime: Date
  Players: [AwsGameLiftS4t]
  GameSessionConnectionInfo: AwsGameLiftS4qGameSessionConnectionInfo
  EstimatedWaitTime: Int
}

type AwsGameLiftS4qGameSessionConnectionInfo {
  GameSessionArn: String
  IpAddress: String
  Port: Int
  MatchedPlayerSessions: [AwsGameLiftS4qGameSessionConnectionInfoMatchedPlayerSessions]
}

type AwsGameLiftS4qGameSessionConnectionInfoMatchedPlayerSessions {
  PlayerId: String
  PlayerSessionId: String
}

type AwsGameLiftS4t {
  PlayerId: String
  PlayerAttributes: JSON
  Team: String
  LatencyInMs: JSON
}

input AwsGameLiftS4tInput {
  PlayerId: String
  PlayerAttributes: JSON
  Team: String
  LatencyInMs: JSON
}

type AwsGameLiftSa {
  Type: String
  FleetId: String
  Message: String
}

input AwsGameLiftSaInput {
  Type: String
  FleetId: String
  Message: String
}

input AwsGameLiftSearchGameSessionsInput {
  FleetId: String
  AliasId: String
  FilterExpression: String
  SortExpression: String
  Limit: Int
  NextToken: String
}

type AwsGameLiftSearchGameSessionsOutput {
  GameSessions: [AwsGameLiftS1n]
  NextToken: String
}

type AwsGameLiftSf {
  AliasId: String
  Name: String
  AliasArn: String
  Description: String
  RoutingStrategy: AwsGameLiftSa
  CreationTime: Date
  LastUpdatedTime: Date
}

type AwsGameLiftSk {
  Bucket: String
  Key: String
  RoleArn: String
}

input AwsGameLiftSkInput {
  Bucket: String
  Key: String
  RoleArn: String
}

type AwsGameLiftSo {
  BuildId: String
  Name: String
  Version: String
  Status: String
  SizeOnDisk: JSON
  OperatingSystem: String
  CreationTime: Date
}

type AwsGameLiftSs {
  AccessKeyId: String
  SecretAccessKey: String
  SessionToken: String
}

input AwsGameLiftStartGameSessionPlacementDesiredPlayerSessionsInput {
  PlayerId: String
  PlayerData: String
}

input AwsGameLiftStartGameSessionPlacementInput {
  PlacementId: String!
  GameSessionQueueName: String!
  GameProperties: [AwsGameLiftS1gInput]
  MaximumPlayerSessionCount: Int!
  GameSessionName: String
  PlayerLatencies: [AwsGameLiftS44Input]
  DesiredPlayerSessions: [AwsGameLiftStartGameSessionPlacementDesiredPlayerSessionsInput]
  GameSessionData: String
}

type AwsGameLiftStartGameSessionPlacementOutput {
  GameSessionPlacement: AwsGameLiftS42
}

input AwsGameLiftStartMatchmakingInput {
  TicketId: String
  ConfigurationName: String!
  Players: [AwsGameLiftS4tInput]!
}

type AwsGameLiftStartMatchmakingOutput {
  MatchmakingTicket: AwsGameLiftS4q
}

input AwsGameLiftStopGameSessionPlacementInput {
  PlacementId: String!
}

type AwsGameLiftStopGameSessionPlacementOutput {
  GameSessionPlacement: AwsGameLiftS42
}

input AwsGameLiftStopMatchmakingInput {
  TicketId: String!
}

type AwsGameLiftSw {
  FromPort: Int!
  ToPort: Int!
  IpRange: String!
  Protocol: String!
}

input AwsGameLiftSwInput {
  FromPort: Int!
  ToPort: Int!
  IpRange: String!
  Protocol: String!
}

input AwsGameLiftUpdateAliasInput {
  AliasId: String!
  Name: String
  Description: String
  RoutingStrategy: AwsGameLiftSaInput
}

type AwsGameLiftUpdateAliasOutput {
  Alias: AwsGameLiftSf
}

input AwsGameLiftUpdateBuildInput {
  BuildId: String!
  Name: String
  Version: String
}

type AwsGameLiftUpdateBuildOutput {
  Build: AwsGameLiftSo
}

input AwsGameLiftUpdateFleetAttributesInput {
  FleetId: String!
  Name: String
  Description: String
  NewGameSessionProtectionPolicy: String
  ResourceCreationLimitPolicy: AwsGameLiftS18Input
  MetricGroups: [String]
}

type AwsGameLiftUpdateFleetAttributesOutput {
  FleetId: String
}

input AwsGameLiftUpdateFleetCapacityInput {
  FleetId: String!
  DesiredInstances: Int
  MinSize: Int
  MaxSize: Int
}

type AwsGameLiftUpdateFleetCapacityOutput {
  FleetId: String
}

input AwsGameLiftUpdateFleetPortSettingsInput {
  FleetId: String!
  InboundPermissionAuthorizations: [AwsGameLiftSwInput]
  InboundPermissionRevocations: [AwsGameLiftSwInput]
}

type AwsGameLiftUpdateFleetPortSettingsOutput {
  FleetId: String
}

input AwsGameLiftUpdateGameSessionInput {
  GameSessionId: String!
  MaximumPlayerSessionCount: Int
  Name: String
  PlayerSessionCreationPolicy: String
  ProtectionPolicy: String
}

type AwsGameLiftUpdateGameSessionOutput {
  GameSession: AwsGameLiftS1n
}

input AwsGameLiftUpdateGameSessionQueueInput {
  Name: String!
  TimeoutInSeconds: Int
  PlayerLatencyPolicies: [AwsGameLiftS1tInput]
  Destinations: [AwsGameLiftS1vInput]
}

type AwsGameLiftUpdateGameSessionQueueOutput {
  GameSessionQueue: AwsGameLiftS1y
}

input AwsGameLiftUpdateMatchmakingConfigurationInput {
  Name: String!
  Description: String
  GameSessionQueueArns: [String]
  RequestTimeoutSeconds: Int
  AcceptanceTimeoutSeconds: Int
  AcceptanceRequired: Boolean
  RuleSetName: String
  NotificationTarget: String
  AdditionalPlayerCount: Int
  CustomEventData: String
  GameProperties: [AwsGameLiftS1gInput]
  GameSessionData: String
}

type AwsGameLiftUpdateMatchmakingConfigurationOutput {
  Configuration: AwsGameLiftS27
}

input AwsGameLiftUpdateRuntimeConfigurationInput {
  FleetId: String!
  RuntimeConfiguration: AwsGameLiftS12Input!
}

type AwsGameLiftUpdateRuntimeConfigurationOutput {
  RuntimeConfiguration: AwsGameLiftS12
}

input AwsGameLiftValidateMatchmakingRuleSetInput {
  RuleSetBody: String!
}

type AwsGameLiftValidateMatchmakingRuleSetOutput {
  Valid: Boolean
}

# Amazon Glacier (2012-06-01)
type AwsGlacier {
  abortMultipartUpload(input: AwsGlacierAbortMultipartUploadInput!, config: AwsConfig): JSON
  abortVaultLock(input: AwsGlacierAbortVaultLockInput!, config: AwsConfig): JSON
  addTagsToVault(input: AwsGlacierAddTagsToVaultInput!, config: AwsConfig): JSON
  completeMultipartUpload(input: AwsGlacierCompleteMultipartUploadInput!, config: AwsConfig): JSON
  completeVaultLock(input: AwsGlacierCompleteVaultLockInput!, config: AwsConfig): JSON
  createVault(input: AwsGlacierCreateVaultInput!, config: AwsConfig): AwsGlacierCreateVaultOutput
  deleteArchive(input: AwsGlacierDeleteArchiveInput!, config: AwsConfig): JSON
  deleteVault(input: AwsGlacierDeleteVaultInput!, config: AwsConfig): JSON
  deleteVaultAccessPolicy(input: AwsGlacierDeleteVaultAccessPolicyInput!, config: AwsConfig): JSON
  deleteVaultNotifications(input: AwsGlacierDeleteVaultNotificationsInput!, config: AwsConfig): JSON
  describeJob(input: AwsGlacierDescribeJobInput!, config: AwsConfig): JSON
  describeVault(input: AwsGlacierDescribeVaultInput!, config: AwsConfig): JSON
  getDataRetrievalPolicy(input: AwsGlacierGetDataRetrievalPolicyInput!, config: AwsConfig): AwsGlacierGetDataRetrievalPolicyOutput
  getJobOutput(input: AwsGlacierGetJobOutputInput!, config: AwsConfig): AwsGlacierGetJobOutputOutput
  getVaultAccessPolicy(input: AwsGlacierGetVaultAccessPolicyInput!, config: AwsConfig): AwsGlacierGetVaultAccessPolicyOutput
  getVaultLock(input: AwsGlacierGetVaultLockInput!, config: AwsConfig): AwsGlacierGetVaultLockOutput
  getVaultNotifications(input: AwsGlacierGetVaultNotificationsInput!, config: AwsConfig): AwsGlacierGetVaultNotificationsOutput
  initiateJob(input: AwsGlacierInitiateJobInput!, config: AwsConfig): AwsGlacierInitiateJobOutput
  initiateMultipartUpload(input: AwsGlacierInitiateMultipartUploadInput!, config: AwsConfig): AwsGlacierInitiateMultipartUploadOutput
  initiateVaultLock(input: AwsGlacierInitiateVaultLockInput!, config: AwsConfig): AwsGlacierInitiateVaultLockOutput
  listJobs(input: AwsGlacierListJobsInput!, config: AwsConfig): AwsGlacierListJobsOutput
  listMultipartUploads(input: AwsGlacierListMultipartUploadsInput!, config: AwsConfig): AwsGlacierListMultipartUploadsOutput
  listParts(input: AwsGlacierListPartsInput!, config: AwsConfig): AwsGlacierListPartsOutput
  listProvisionedCapacity(input: AwsGlacierListProvisionedCapacityInput!, config: AwsConfig): AwsGlacierListProvisionedCapacityOutput
  listTagsForVault(input: AwsGlacierListTagsForVaultInput!, config: AwsConfig): AwsGlacierListTagsForVaultOutput
  listVaults(input: AwsGlacierListVaultsInput!, config: AwsConfig): AwsGlacierListVaultsOutput
  purchaseProvisionedCapacity(input: AwsGlacierPurchaseProvisionedCapacityInput!, config: AwsConfig): AwsGlacierPurchaseProvisionedCapacityOutput
  removeTagsFromVault(input: AwsGlacierRemoveTagsFromVaultInput!, config: AwsConfig): JSON
  setDataRetrievalPolicy(input: AwsGlacierSetDataRetrievalPolicyInput!, config: AwsConfig): JSON
  setVaultAccessPolicy(input: AwsGlacierSetVaultAccessPolicyInput!, config: AwsConfig): JSON
  setVaultNotifications(input: AwsGlacierSetVaultNotificationsInput!, config: AwsConfig): JSON
  uploadArchive(input: AwsGlacierUploadArchiveInput!, config: AwsConfig): JSON
  uploadMultipartPart(input: AwsGlacierUploadMultipartPartInput!, config: AwsConfig): AwsGlacierUploadMultipartPartOutput
}

input AwsGlacierAbortMultipartUploadInput {
  accountId: String!
  vaultName: String!
  uploadId: String!
}

input AwsGlacierAbortVaultLockInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierAddTagsToVaultInput {
  accountId: String!
  vaultName: String!
  Tags: JSON
}

input AwsGlacierCompleteMultipartUploadInput {
  accountId: String!
  vaultName: String!
  uploadId: String!
  archiveSize: String
  checksum: String
}

input AwsGlacierCompleteVaultLockInput {
  accountId: String!
  vaultName: String!
  lockId: String!
}

input AwsGlacierCreateVaultInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierCreateVaultOutput {
  location: String
}

input AwsGlacierDeleteArchiveInput {
  accountId: String!
  vaultName: String!
  archiveId: String!
}

input AwsGlacierDeleteVaultAccessPolicyInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierDeleteVaultInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierDeleteVaultNotificationsInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierDescribeJobInput {
  accountId: String!
  vaultName: String!
  jobId: String!
}

input AwsGlacierDescribeVaultInput {
  accountId: String!
  vaultName: String!
}

input AwsGlacierGetDataRetrievalPolicyInput {
  accountId: String!
}

type AwsGlacierGetDataRetrievalPolicyOutput {
  Policy: AwsGlacierS1e
}

input AwsGlacierGetJobOutputInput {
  accountId: String!
  vaultName: String!
  jobId: String!
  range: String
}

type AwsGlacierGetJobOutputOutput {
  body: JSON
  checksum: String
  status: Int
  contentRange: String
  acceptRanges: String
  contentType: String
  archiveDescription: String
}

input AwsGlacierGetVaultAccessPolicyInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierGetVaultAccessPolicyOutput {
  policy: AwsGlacierS1o
}

input AwsGlacierGetVaultLockInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierGetVaultLockOutput {
  Policy: String
  State: String
  ExpirationDate: String
  CreationDate: String
}

input AwsGlacierGetVaultNotificationsInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierGetVaultNotificationsOutput {
  vaultNotificationConfig: AwsGlacierS1t
}

input AwsGlacierInitiateJobInput {
  accountId: String!
  vaultName: String!
  jobParameters: AwsGlacierInitiateJobJobParametersInput
}

input AwsGlacierInitiateJobJobParametersInput {
  Format: String
  Type: String
  ArchiveId: String
  Description: String
  SNSTopic: String
  RetrievalByteRange: String
  Tier: String
  InventoryRetrievalParameters: AwsGlacierInitiateJobJobParametersInventoryRetrievalParametersInput
  SelectParameters: AwsGlacierSpInput
  OutputLocation: AwsGlacierSxInput
}

input AwsGlacierInitiateJobJobParametersInventoryRetrievalParametersInput {
  StartDate: String
  EndDate: String
  Limit: String
  Marker: String
}

type AwsGlacierInitiateJobOutput {
  location: String
  jobId: String
  jobOutputPath: String
}

input AwsGlacierInitiateMultipartUploadInput {
  accountId: String!
  vaultName: String!
  archiveDescription: String
  partSize: String
}

type AwsGlacierInitiateMultipartUploadOutput {
  location: String
  uploadId: String
}

input AwsGlacierInitiateVaultLockInput {
  accountId: String!
  vaultName: String!
  policy: AwsGlacierInitiateVaultLockPolicyInput
}

type AwsGlacierInitiateVaultLockOutput {
  lockId: String
}

input AwsGlacierInitiateVaultLockPolicyInput {
  Policy: String
}

input AwsGlacierListJobsInput {
  accountId: String!
  vaultName: String!
  limit: String
  marker: String
  statuscode: String
  completed: String
}

type AwsGlacierListJobsOutput {
  JobList: [AwsGlacierSi]
  Marker: String
}

input AwsGlacierListMultipartUploadsInput {
  accountId: String!
  vaultName: String!
  marker: String
  limit: String
}

type AwsGlacierListMultipartUploadsOutput {
  UploadsList: [AwsGlacierListMultipartUploadsOutputUploadsList]
  Marker: String
}

type AwsGlacierListMultipartUploadsOutputUploadsList {
  MultipartUploadId: String
  VaultARN: String
  ArchiveDescription: String
  PartSizeInBytes: JSON
  CreationDate: String
}

input AwsGlacierListPartsInput {
  accountId: String!
  vaultName: String!
  uploadId: String!
  marker: String
  limit: String
}

type AwsGlacierListPartsOutput {
  MultipartUploadId: String
  VaultARN: String
  ArchiveDescription: String
  PartSizeInBytes: JSON
  CreationDate: String
  Parts: [AwsGlacierListPartsOutputParts]
  Marker: String
}

type AwsGlacierListPartsOutputParts {
  RangeInBytes: String
  SHA256TreeHash: String
}

input AwsGlacierListProvisionedCapacityInput {
  accountId: String!
}

type AwsGlacierListProvisionedCapacityOutput {
  ProvisionedCapacityList: [AwsGlacierListProvisionedCapacityOutputProvisionedCapacityList]
}

type AwsGlacierListProvisionedCapacityOutputProvisionedCapacityList {
  CapacityId: String
  StartDate: String
  ExpirationDate: String
}

input AwsGlacierListTagsForVaultInput {
  accountId: String!
  vaultName: String!
}

type AwsGlacierListTagsForVaultOutput {
  Tags: JSON
}

input AwsGlacierListVaultsInput {
  accountId: String!
  marker: String
  limit: String
}

type AwsGlacierListVaultsOutput {
  VaultList: [AwsGlacierS1a]
  Marker: String
}

input AwsGlacierPurchaseProvisionedCapacityInput {
  accountId: String!
}

type AwsGlacierPurchaseProvisionedCapacityOutput {
  capacityId: String
}

input AwsGlacierRemoveTagsFromVaultInput {
  accountId: String!
  vaultName: String!
  TagKeys: [String]
}

type AwsGlacierS1a {
  VaultARN: String
  VaultName: String
  CreationDate: String
  LastInventoryDate: String
  NumberOfArchives: JSON
  SizeInBytes: JSON
}

type AwsGlacierS1e {
  Rules: [AwsGlacierS1eRules]
}

input AwsGlacierS1eInput {
  Rules: [AwsGlacierS1eRulesInput]
}

type AwsGlacierS1eRules {
  Strategy: String
  BytesPerHour: JSON
}

input AwsGlacierS1eRulesInput {
  Strategy: String
  BytesPerHour: JSON
}

type AwsGlacierS1o {
  Policy: String
}

input AwsGlacierS1oInput {
  Policy: String
}

type AwsGlacierS1t {
  SNSTopic: String
  Events: [String]
}

input AwsGlacierS1tInput {
  SNSTopic: String
  Events: [String]
}

input AwsGlacierSetDataRetrievalPolicyInput {
  accountId: String!
  Policy: AwsGlacierS1eInput
}

input AwsGlacierSetVaultAccessPolicyInput {
  accountId: String!
  vaultName: String!
  policy: AwsGlacierS1oInput
}

input AwsGlacierSetVaultNotificationsInput {
  accountId: String!
  vaultName: String!
  vaultNotificationConfig: AwsGlacierS1tInput
}

type AwsGlacierSi {
  JobId: String
  JobDescription: String
  Action: String
  ArchiveId: String
  VaultARN: String
  CreationDate: String
  Completed: Boolean
  StatusCode: String
  StatusMessage: String
  ArchiveSizeInBytes: JSON
  InventorySizeInBytes: JSON
  SNSTopic: String
  CompletionDate: String
  SHA256TreeHash: String
  ArchiveSHA256TreeHash: String
  RetrievalByteRange: String
  Tier: String
  InventoryRetrievalParameters: AwsGlacierSiInventoryRetrievalParameters
  JobOutputPath: String
  SelectParameters: AwsGlacierSp
  OutputLocation: AwsGlacierSx
}

type AwsGlacierSiInventoryRetrievalParameters {
  Format: String
  StartDate: String
  EndDate: String
  Limit: String
  Marker: String
}

type AwsGlacierSp {
  InputSerialization: AwsGlacierSpInputSerialization
  ExpressionType: String
  Expression: String
  OutputSerialization: AwsGlacierSpOutputSerialization
}

input AwsGlacierSpInput {
  InputSerialization: AwsGlacierSpInputSerializationInput
  ExpressionType: String
  Expression: String
  OutputSerialization: AwsGlacierSpOutputSerializationInput
}

type AwsGlacierSpInputSerialization {
  csv: AwsGlacierSpInputSerializationCsv
}

type AwsGlacierSpInputSerializationCsv {
  FileHeaderInfo: String
  Comments: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsGlacierSpInputSerializationCsvInput {
  FileHeaderInfo: String
  Comments: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsGlacierSpInputSerializationInput {
  csv: AwsGlacierSpInputSerializationCsvInput
}

type AwsGlacierSpOutputSerialization {
  csv: AwsGlacierSpOutputSerializationCsv
}

type AwsGlacierSpOutputSerializationCsv {
  QuoteFields: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsGlacierSpOutputSerializationCsvInput {
  QuoteFields: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsGlacierSpOutputSerializationInput {
  csv: AwsGlacierSpOutputSerializationCsvInput
}

type AwsGlacierSx {
  S3: AwsGlacierSxS3
}

input AwsGlacierSxInput {
  S3: AwsGlacierSxS3Input
}

type AwsGlacierSxS3 {
  BucketName: String
  Prefix: String
  Encryption: AwsGlacierSxS3Encryption
  CannedACL: String
  AccessControlList: [AwsGlacierSxS3AccessControlList]
  Tagging: JSON
  UserMetadata: JSON
  StorageClass: String
}

type AwsGlacierSxS3AccessControlList {
  Grantee: AwsGlacierSxS3AccessControlListGrantee
  Permission: String
}

type AwsGlacierSxS3AccessControlListGrantee {
  Type: String!
  DisplayName: String
  URI: String
  ID: String
  EmailAddress: String
}

input AwsGlacierSxS3AccessControlListGranteeInput {
  Type: String!
  DisplayName: String
  URI: String
  ID: String
  EmailAddress: String
}

input AwsGlacierSxS3AccessControlListInput {
  Grantee: AwsGlacierSxS3AccessControlListGranteeInput
  Permission: String
}

type AwsGlacierSxS3Encryption {
  EncryptionType: String
  KMSKeyId: String
  KMSContext: String
}

input AwsGlacierSxS3EncryptionInput {
  EncryptionType: String
  KMSKeyId: String
  KMSContext: String
}

input AwsGlacierSxS3Input {
  BucketName: String
  Prefix: String
  Encryption: AwsGlacierSxS3EncryptionInput
  CannedACL: String
  AccessControlList: [AwsGlacierSxS3AccessControlListInput]
  Tagging: JSON
  UserMetadata: JSON
  StorageClass: String
}

input AwsGlacierUploadArchiveInput {
  vaultName: String!
  accountId: String!
  archiveDescription: String
  checksum: String
  body: JSON
}

input AwsGlacierUploadMultipartPartInput {
  accountId: String!
  vaultName: String!
  uploadId: String!
  checksum: String
  range: String
  body: JSON
}

type AwsGlacierUploadMultipartPartOutput {
  checksum: String
}

# AWS Glue (2017-03-31)
type AwsGlue {
  batchCreatePartition(input: AwsGlueBatchCreatePartitionInput!, config: AwsConfig): AwsGlueBatchCreatePartitionOutput
  batchDeleteConnection(input: AwsGlueBatchDeleteConnectionInput!, config: AwsConfig): AwsGlueBatchDeleteConnectionOutput
  batchDeletePartition(input: AwsGlueBatchDeletePartitionInput!, config: AwsConfig): AwsGlueBatchDeletePartitionOutput
  batchDeleteTable(input: AwsGlueBatchDeleteTableInput!, config: AwsConfig): AwsGlueBatchDeleteTableOutput
  batchGetPartition(input: AwsGlueBatchGetPartitionInput!, config: AwsConfig): AwsGlueBatchGetPartitionOutput
  batchStopJobRun(input: AwsGlueBatchStopJobRunInput!, config: AwsConfig): AwsGlueBatchStopJobRunOutput
  createClassifier(input: AwsGlueCreateClassifierInput, config: AwsConfig): JSON
  createConnection(input: AwsGlueCreateConnectionInput!, config: AwsConfig): JSON
  createCrawler(input: AwsGlueCreateCrawlerInput!, config: AwsConfig): JSON
  createDatabase(input: AwsGlueCreateDatabaseInput!, config: AwsConfig): JSON
  createDevEndpoint(input: AwsGlueCreateDevEndpointInput!, config: AwsConfig): AwsGlueCreateDevEndpointOutput
  createJob(input: AwsGlueCreateJobInput!, config: AwsConfig): AwsGlueCreateJobOutput
  createPartition(input: AwsGlueCreatePartitionInput!, config: AwsConfig): JSON
  createScript(input: AwsGlueCreateScriptInput, config: AwsConfig): AwsGlueCreateScriptOutput
  createTable(input: AwsGlueCreateTableInput!, config: AwsConfig): JSON
  createTrigger(input: AwsGlueCreateTriggerInput!, config: AwsConfig): AwsGlueCreateTriggerOutput
  createUserDefinedFunction(input: AwsGlueCreateUserDefinedFunctionInput!, config: AwsConfig): JSON
  deleteClassifier(input: AwsGlueDeleteClassifierInput!, config: AwsConfig): JSON
  deleteConnection(input: AwsGlueDeleteConnectionInput!, config: AwsConfig): JSON
  deleteCrawler(input: AwsGlueDeleteCrawlerInput!, config: AwsConfig): JSON
  deleteDatabase(input: AwsGlueDeleteDatabaseInput!, config: AwsConfig): JSON
  deleteDevEndpoint(input: AwsGlueDeleteDevEndpointInput!, config: AwsConfig): JSON
  deleteJob(input: AwsGlueDeleteJobInput!, config: AwsConfig): AwsGlueDeleteJobOutput
  deletePartition(input: AwsGlueDeletePartitionInput!, config: AwsConfig): JSON
  deleteTable(input: AwsGlueDeleteTableInput!, config: AwsConfig): JSON
  deleteTrigger(input: AwsGlueDeleteTriggerInput!, config: AwsConfig): AwsGlueDeleteTriggerOutput
  deleteUserDefinedFunction(input: AwsGlueDeleteUserDefinedFunctionInput!, config: AwsConfig): JSON
  getCatalogImportStatus(input: AwsGlueGetCatalogImportStatusInput, config: AwsConfig): AwsGlueGetCatalogImportStatusOutput
  getClassifier(input: AwsGlueGetClassifierInput!, config: AwsConfig): AwsGlueGetClassifierOutput
  getClassifiers(input: AwsGlueGetClassifiersInput, config: AwsConfig): AwsGlueGetClassifiersOutput
  getConnection(input: AwsGlueGetConnectionInput!, config: AwsConfig): AwsGlueGetConnectionOutput
  getConnections(input: AwsGlueGetConnectionsInput, config: AwsConfig): AwsGlueGetConnectionsOutput
  getCrawler(input: AwsGlueGetCrawlerInput!, config: AwsConfig): AwsGlueGetCrawlerOutput
  getCrawlerMetrics(input: AwsGlueGetCrawlerMetricsInput, config: AwsConfig): AwsGlueGetCrawlerMetricsOutput
  getCrawlers(input: AwsGlueGetCrawlersInput, config: AwsConfig): AwsGlueGetCrawlersOutput
  getDatabase(input: AwsGlueGetDatabaseInput!, config: AwsConfig): AwsGlueGetDatabaseOutput
  getDatabases(input: AwsGlueGetDatabasesInput, config: AwsConfig): AwsGlueGetDatabasesOutput
  getDataflowGraph(input: AwsGlueGetDataflowGraphInput, config: AwsConfig): AwsGlueGetDataflowGraphOutput
  getDevEndpoint(input: AwsGlueGetDevEndpointInput!, config: AwsConfig): AwsGlueGetDevEndpointOutput
  getDevEndpoints(input: AwsGlueGetDevEndpointsInput, config: AwsConfig): AwsGlueGetDevEndpointsOutput
  getJob(input: AwsGlueGetJobInput!, config: AwsConfig): AwsGlueGetJobOutput
  getJobRun(input: AwsGlueGetJobRunInput!, config: AwsConfig): AwsGlueGetJobRunOutput
  getJobRuns(input: AwsGlueGetJobRunsInput!, config: AwsConfig): AwsGlueGetJobRunsOutput
  getJobs(input: AwsGlueGetJobsInput, config: AwsConfig): AwsGlueGetJobsOutput
  getMapping(input: AwsGlueGetMappingInput!, config: AwsConfig): AwsGlueGetMappingOutput
  getPartition(input: AwsGlueGetPartitionInput!, config: AwsConfig): AwsGlueGetPartitionOutput
  getPartitions(input: AwsGlueGetPartitionsInput!, config: AwsConfig): AwsGlueGetPartitionsOutput
  getPlan(input: AwsGlueGetPlanInput!, config: AwsConfig): AwsGlueGetPlanOutput
  getTable(input: AwsGlueGetTableInput!, config: AwsConfig): AwsGlueGetTableOutput
  getTableVersions(input: AwsGlueGetTableVersionsInput!, config: AwsConfig): AwsGlueGetTableVersionsOutput
  getTables(input: AwsGlueGetTablesInput!, config: AwsConfig): AwsGlueGetTablesOutput
  getTrigger(input: AwsGlueGetTriggerInput!, config: AwsConfig): AwsGlueGetTriggerOutput
  getTriggers(input: AwsGlueGetTriggersInput, config: AwsConfig): AwsGlueGetTriggersOutput
  getUserDefinedFunction(input: AwsGlueGetUserDefinedFunctionInput!, config: AwsConfig): AwsGlueGetUserDefinedFunctionOutput
  getUserDefinedFunctions(input: AwsGlueGetUserDefinedFunctionsInput!, config: AwsConfig): AwsGlueGetUserDefinedFunctionsOutput
  importCatalogToGlue(input: AwsGlueImportCatalogToGlueInput, config: AwsConfig): JSON
  resetJobBookmark(input: AwsGlueResetJobBookmarkInput!, config: AwsConfig): AwsGlueResetJobBookmarkOutput
  startCrawler(input: AwsGlueStartCrawlerInput!, config: AwsConfig): JSON
  startCrawlerSchedule(input: AwsGlueStartCrawlerScheduleInput!, config: AwsConfig): JSON
  startJobRun(input: AwsGlueStartJobRunInput!, config: AwsConfig): AwsGlueStartJobRunOutput
  startTrigger(input: AwsGlueStartTriggerInput!, config: AwsConfig): AwsGlueStartTriggerOutput
  stopCrawler(input: AwsGlueStopCrawlerInput!, config: AwsConfig): JSON
  stopCrawlerSchedule(input: AwsGlueStopCrawlerScheduleInput!, config: AwsConfig): JSON
  stopTrigger(input: AwsGlueStopTriggerInput!, config: AwsConfig): AwsGlueStopTriggerOutput
  updateClassifier(input: AwsGlueUpdateClassifierInput, config: AwsConfig): JSON
  updateConnection(input: AwsGlueUpdateConnectionInput!, config: AwsConfig): JSON
  updateCrawler(input: AwsGlueUpdateCrawlerInput!, config: AwsConfig): JSON
  updateCrawlerSchedule(input: AwsGlueUpdateCrawlerScheduleInput!, config: AwsConfig): JSON
  updateDatabase(input: AwsGlueUpdateDatabaseInput!, config: AwsConfig): JSON
  updateDevEndpoint(input: AwsGlueUpdateDevEndpointInput!, config: AwsConfig): JSON
  updateJob(input: AwsGlueUpdateJobInput!, config: AwsConfig): AwsGlueUpdateJobOutput
  updatePartition(input: AwsGlueUpdatePartitionInput!, config: AwsConfig): JSON
  updateTable(input: AwsGlueUpdateTableInput!, config: AwsConfig): JSON
  updateTrigger(input: AwsGlueUpdateTriggerInput!, config: AwsConfig): AwsGlueUpdateTriggerOutput
  updateUserDefinedFunction(input: AwsGlueUpdateUserDefinedFunctionInput!, config: AwsConfig): JSON
}

input AwsGlueBatchCreatePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionInputList: [AwsGlueS5Input]!
}

type AwsGlueBatchCreatePartitionOutput {
  Errors: [AwsGlueSv]
}

input AwsGlueBatchDeleteConnectionInput {
  CatalogId: String
  ConnectionNameList: [String]!
}

type AwsGlueBatchDeleteConnectionOutput {
  Succeeded: [String]
  Errors: JSON
}

input AwsGlueBatchDeletePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionsToDelete: [AwsGlueS15Input]!
}

type AwsGlueBatchDeletePartitionOutput {
  Errors: [AwsGlueSv]
}

input AwsGlueBatchDeleteTableInput {
  CatalogId: String
  DatabaseName: String!
  TablesToDelete: [String]!
}

type AwsGlueBatchDeleteTableOutput {
  Errors: [AwsGlueBatchDeleteTableOutputErrors]
}

type AwsGlueBatchDeleteTableOutputErrors {
  TableName: String
  ErrorDetail: AwsGlueSx
}

input AwsGlueBatchGetPartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionsToGet: [AwsGlueS15Input]!
}

type AwsGlueBatchGetPartitionOutput {
  Partitions: [AwsGlueS1g]
  UnprocessedKeys: [AwsGlueS15]
}

input AwsGlueBatchStopJobRunInput {
  JobName: String!
  JobRunIds: [String]!
}

type AwsGlueBatchStopJobRunOutput {
  SuccessfulSubmissions: [AwsGlueBatchStopJobRunOutputSuccessfulSubmissions]
  Errors: [AwsGlueBatchStopJobRunOutputErrors]
}

type AwsGlueBatchStopJobRunOutputErrors {
  JobName: String
  JobRunId: String
  ErrorDetail: AwsGlueSx
}

type AwsGlueBatchStopJobRunOutputSuccessfulSubmissions {
  JobName: String
  JobRunId: String
}

input AwsGlueCreateClassifierGrokClassifierInput {
  Classification: String!
  Name: String!
  GrokPattern: String!
  CustomPatterns: String
}

input AwsGlueCreateClassifierInput {
  GrokClassifier: AwsGlueCreateClassifierGrokClassifierInput
  XMLClassifier: AwsGlueCreateClassifierXMLClassifierInput
}

input AwsGlueCreateClassifierXMLClassifierInput {
  Classification: String!
  Name: String!
  RowTag: String
}

input AwsGlueCreateConnectionInput {
  CatalogId: String
  ConnectionInput: AwsGlueS1yInput!
}

input AwsGlueCreateCrawlerInput {
  Name: String!
  Role: String!
  DatabaseName: String!
  Description: String
  Targets: AwsGlueS29Input!
  Schedule: String
  Classifiers: [String]
  TablePrefix: String
  SchemaChangePolicy: AwsGlueS2kInput
  Configuration: String
}

input AwsGlueCreateDatabaseInput {
  CatalogId: String
  DatabaseInput: AwsGlueS2qInput!
}

input AwsGlueCreateDevEndpointInput {
  EndpointName: String!
  RoleArn: String!
  SecurityGroupIds: [String]
  SubnetId: String
  PublicKey: String!
  NumberOfNodes: Int
  ExtraPythonLibsS3Path: String
  ExtraJarsS3Path: String
}

type AwsGlueCreateDevEndpointOutput {
  EndpointName: String
  Status: String
  SecurityGroupIds: [String]
  SubnetId: String
  RoleArn: String
  YarnEndpointAddress: String
  ZeppelinRemoteSparkInterpreterPort: Int
  NumberOfNodes: Int
  AvailabilityZone: String
  VpcId: String
  ExtraPythonLibsS3Path: String
  ExtraJarsS3Path: String
  FailureReason: String
  CreatedTimestamp: Date
}

input AwsGlueCreateJobInput {
  Name: String!
  Description: String
  LogUri: String
  Role: String!
  ExecutionProperty: AwsGlueS33Input
  Command: AwsGlueS35Input!
  DefaultArguments: JSON
  Connections: AwsGlueS38Input
  MaxRetries: Int
  AllocatedCapacity: Int
}

type AwsGlueCreateJobOutput {
  Name: String
}

input AwsGlueCreatePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionInput: AwsGlueS5Input!
}

input AwsGlueCreateScriptInput {
  DagNodes: [AwsGlueS3eInput]
  DagEdges: [AwsGlueS3mInput]
}

type AwsGlueCreateScriptOutput {
  PythonScript: String
}

input AwsGlueCreateTableInput {
  CatalogId: String
  DatabaseName: String!
  TableInput: AwsGlueS3rInput!
}

input AwsGlueCreateTriggerInput {
  Name: String!
  Type: String!
  Schedule: String
  Predicate: AwsGlueS3yInput
  Actions: [AwsGlueS44Input]!
  Description: String
}

type AwsGlueCreateTriggerOutput {
  Name: String
}

input AwsGlueCreateUserDefinedFunctionInput {
  CatalogId: String
  DatabaseName: String!
  FunctionInput: AwsGlueS48Input!
}

input AwsGlueDeleteClassifierInput {
  Name: String!
}

input AwsGlueDeleteConnectionInput {
  CatalogId: String
  ConnectionName: String!
}

input AwsGlueDeleteCrawlerInput {
  Name: String!
}

input AwsGlueDeleteDatabaseInput {
  CatalogId: String
  Name: String!
}

input AwsGlueDeleteDevEndpointInput {
  EndpointName: String!
}

input AwsGlueDeleteJobInput {
  JobName: String!
}

type AwsGlueDeleteJobOutput {
  JobName: String
}

input AwsGlueDeletePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionValues: [String]!
}

input AwsGlueDeleteTableInput {
  CatalogId: String
  DatabaseName: String!
  Name: String!
}

input AwsGlueDeleteTriggerInput {
  Name: String!
}

type AwsGlueDeleteTriggerOutput {
  Name: String
}

input AwsGlueDeleteUserDefinedFunctionInput {
  CatalogId: String
  DatabaseName: String!
  FunctionName: String!
}

input AwsGlueGetCatalogImportStatusInput {
  CatalogId: String
}

type AwsGlueGetCatalogImportStatusOutput {
  ImportStatus: AwsGlueGetCatalogImportStatusOutputImportStatus
}

type AwsGlueGetCatalogImportStatusOutputImportStatus {
  ImportCompleted: Boolean
  ImportTime: Date
  ImportedBy: String
}

input AwsGlueGetClassifierInput {
  Name: String!
}

type AwsGlueGetClassifierOutput {
  Classifier: AwsGlueS53
}

input AwsGlueGetClassifiersInput {
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetClassifiersOutput {
  Classifiers: [AwsGlueS53]
  NextToken: String
}

input AwsGlueGetConnectionInput {
  CatalogId: String
  Name: String!
}

type AwsGlueGetConnectionOutput {
  Connection: AwsGlueS5e
}

input AwsGlueGetConnectionsFilterInput {
  MatchCriteria: [String]
  ConnectionType: String
}

input AwsGlueGetConnectionsInput {
  CatalogId: String
  Filter: AwsGlueGetConnectionsFilterInput
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetConnectionsOutput {
  ConnectionList: [AwsGlueS5e]
  NextToken: String
}

input AwsGlueGetCrawlerInput {
  Name: String!
}

input AwsGlueGetCrawlerMetricsInput {
  CrawlerNameList: [String]
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetCrawlerMetricsOutput {
  CrawlerMetricsList: [AwsGlueGetCrawlerMetricsOutputCrawlerMetricsList]
  NextToken: String
}

type AwsGlueGetCrawlerMetricsOutputCrawlerMetricsList {
  CrawlerName: String
  TimeLeftSeconds: JSON
  StillEstimating: Boolean
  LastRuntimeSeconds: JSON
  MedianRuntimeSeconds: JSON
  TablesCreated: Int
  TablesUpdated: Int
  TablesDeleted: Int
}

type AwsGlueGetCrawlerOutput {
  Crawler: AwsGlueS5l
}

input AwsGlueGetCrawlersInput {
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetCrawlersOutput {
  Crawlers: [AwsGlueS5l]
  NextToken: String
}

input AwsGlueGetDatabaseInput {
  CatalogId: String
  Name: String!
}

type AwsGlueGetDatabaseOutput {
  Database: AwsGlueS66
}

input AwsGlueGetDatabasesInput {
  CatalogId: String
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetDatabasesOutput {
  DatabaseList: [AwsGlueS66]!
  NextToken: String
}

input AwsGlueGetDataflowGraphInput {
  PythonScript: String
}

type AwsGlueGetDataflowGraphOutput {
  DagNodes: [AwsGlueS3e]
  DagEdges: [AwsGlueS3m]
}

input AwsGlueGetDevEndpointInput {
  EndpointName: String!
}

type AwsGlueGetDevEndpointOutput {
  DevEndpoint: AwsGlueS6e
}

input AwsGlueGetDevEndpointsInput {
  MaxResults: Int
  NextToken: String
}

type AwsGlueGetDevEndpointsOutput {
  DevEndpoints: [AwsGlueS6e]
  NextToken: String
}

input AwsGlueGetJobInput {
  JobName: String!
}

type AwsGlueGetJobOutput {
  Job: AwsGlueS6k
}

input AwsGlueGetJobRunInput {
  JobName: String!
  RunId: String!
  PredecessorsIncluded: Boolean
}

type AwsGlueGetJobRunOutput {
  JobRun: AwsGlueS6o
}

input AwsGlueGetJobRunsInput {
  JobName: String!
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetJobRunsOutput {
  JobRuns: [AwsGlueS6o]
  NextToken: String
}

input AwsGlueGetJobsInput {
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetJobsOutput {
  Jobs: [AwsGlueS6k]
  NextToken: String
}

input AwsGlueGetMappingInput {
  Source: AwsGlueS70Input!
  Sinks: [AwsGlueS70Input]
  Location: AwsGlueS72Input
}

type AwsGlueGetMappingOutput {
  Mapping: [AwsGlueS74]!
}

input AwsGlueGetPartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionValues: [String]!
}

type AwsGlueGetPartitionOutput {
  Partition: AwsGlueS1g
}

input AwsGlueGetPartitionsInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  Expression: String
  NextToken: String
  Segment: AwsGlueGetPartitionsSegmentInput
  MaxResults: Int
}

type AwsGlueGetPartitionsOutput {
  Partitions: [AwsGlueS1g]
  NextToken: String
}

input AwsGlueGetPartitionsSegmentInput {
  SegmentNumber: Int!
  TotalSegments: Int!
}

input AwsGlueGetPlanInput {
  Mapping: [AwsGlueS74Input]!
  Source: AwsGlueS70Input!
  Sinks: [AwsGlueS70Input]
  Location: AwsGlueS72Input
}

type AwsGlueGetPlanOutput {
  PythonScript: String
}

input AwsGlueGetTableInput {
  CatalogId: String
  DatabaseName: String!
  Name: String!
}

type AwsGlueGetTableOutput {
  Table: AwsGlueS7k
}

input AwsGlueGetTablesInput {
  CatalogId: String
  DatabaseName: String!
  Expression: String
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetTablesOutput {
  TableList: [AwsGlueS7k]
  NextToken: String
}

input AwsGlueGetTableVersionsInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetTableVersionsOutput {
  TableVersions: [AwsGlueGetTableVersionsOutputTableVersions]
  NextToken: String
}

type AwsGlueGetTableVersionsOutputTableVersions {
  Table: AwsGlueS7k
  VersionId: String
}

input AwsGlueGetTriggerInput {
  Name: String!
}

type AwsGlueGetTriggerOutput {
  Trigger: AwsGlueS7w
}

input AwsGlueGetTriggersInput {
  NextToken: String
  DependentJobName: String
  MaxResults: Int
}

type AwsGlueGetTriggersOutput {
  Triggers: [AwsGlueS7w]
  NextToken: String
}

input AwsGlueGetUserDefinedFunctionInput {
  CatalogId: String
  DatabaseName: String!
  FunctionName: String!
}

type AwsGlueGetUserDefinedFunctionOutput {
  UserDefinedFunction: AwsGlueS83
}

input AwsGlueGetUserDefinedFunctionsInput {
  CatalogId: String
  DatabaseName: String!
  Pattern: String!
  NextToken: String
  MaxResults: Int
}

type AwsGlueGetUserDefinedFunctionsOutput {
  UserDefinedFunctions: [AwsGlueS83]
  NextToken: String
}

input AwsGlueImportCatalogToGlueInput {
  CatalogId: String
}

input AwsGlueResetJobBookmarkInput {
  JobName: String!
}

type AwsGlueResetJobBookmarkOutput {
  JobBookmarkEntry: AwsGlueResetJobBookmarkOutputJobBookmarkEntry
}

type AwsGlueResetJobBookmarkOutputJobBookmarkEntry {
  JobName: String
  Version: Int
  Run: Int
  Attempt: Int
  JobBookmark: String
}

type AwsGlueS15 {
  Values: [String]!
}

input AwsGlueS15Input {
  Values: [String]!
}

type AwsGlueS1g {
  Values: [String]
  DatabaseName: String
  TableName: String
  CreationTime: Date
  LastAccessTime: Date
  StorageDescriptor: AwsGlueS9
  Parameters: JSON
  LastAnalyzedTime: Date
}

input AwsGlueS1yInput {
  Name: String
  Description: String
  ConnectionType: String
  MatchCriteria: [String]
  ConnectionProperties: JSON
  PhysicalConnectionRequirements: AwsGlueS23Input
}

type AwsGlueS23 {
  SubnetId: String
  SecurityGroupIdList: [String]
  AvailabilityZone: String
}

input AwsGlueS23Input {
  SubnetId: String
  SecurityGroupIdList: [String]
  AvailabilityZone: String
}

type AwsGlueS29 {
  S3Targets: [AwsGlueS29S3Targets]
  JdbcTargets: [AwsGlueS29JdbcTargets]
}

input AwsGlueS29Input {
  S3Targets: [AwsGlueS29S3TargetsInput]
  JdbcTargets: [AwsGlueS29JdbcTargetsInput]
}

type AwsGlueS29JdbcTargets {
  ConnectionName: String
  Path: String
  Exclusions: [String]
}

input AwsGlueS29JdbcTargetsInput {
  ConnectionName: String
  Path: String
  Exclusions: [String]
}

type AwsGlueS29S3Targets {
  Path: String
  Exclusions: [String]
}

input AwsGlueS29S3TargetsInput {
  Path: String
  Exclusions: [String]
}

type AwsGlueS2k {
  UpdateBehavior: String
  DeleteBehavior: String
}

input AwsGlueS2kInput {
  UpdateBehavior: String
  DeleteBehavior: String
}

input AwsGlueS2qInput {
  Name: String!
  Description: String
  LocationUri: String
  Parameters: JSON
}

type AwsGlueS33 {
  MaxConcurrentRuns: Int
}

input AwsGlueS33Input {
  MaxConcurrentRuns: Int
}

type AwsGlueS35 {
  Name: String
  ScriptLocation: String
}

input AwsGlueS35Input {
  Name: String
  ScriptLocation: String
}

type AwsGlueS38 {
  Connections: [String]
}

input AwsGlueS38Input {
  Connections: [String]
}

type AwsGlueS3e {
  Id: String!
  NodeType: String!
  Args: [AwsGlueS3i]!
  LineNumber: Int
}

input AwsGlueS3eInput {
  Id: String!
  NodeType: String!
  Args: [AwsGlueS3iInput]!
  LineNumber: Int
}

type AwsGlueS3i {
  Name: String!
  Value: String!
  Param: Boolean
}

input AwsGlueS3iInput {
  Name: String!
  Value: String!
  Param: Boolean
}

type AwsGlueS3m {
  Source: String!
  Target: String!
  TargetParameter: String
}

input AwsGlueS3mInput {
  Source: String!
  Target: String!
  TargetParameter: String
}

input AwsGlueS3rInput {
  Name: String!
  Description: String
  Owner: String
  LastAccessTime: Date
  LastAnalyzedTime: Date
  Retention: Int
  StorageDescriptor: AwsGlueS9Input
  PartitionKeys: [AwsGlueSaInput]
  ViewOriginalText: String
  ViewExpandedText: String
  TableType: String
  Parameters: JSON
}

type AwsGlueS3y {
  Logical: String
  Conditions: [AwsGlueS3yConditions]
}

type AwsGlueS3yConditions {
  LogicalOperator: String
  JobName: String
  State: String
}

input AwsGlueS3yConditionsInput {
  LogicalOperator: String
  JobName: String
  State: String
}

input AwsGlueS3yInput {
  Logical: String
  Conditions: [AwsGlueS3yConditionsInput]
}

type AwsGlueS44 {
  JobName: String
  Arguments: JSON
}

input AwsGlueS44Input {
  JobName: String
  Arguments: JSON
}

input AwsGlueS48Input {
  FunctionName: String
  ClassName: String
  OwnerName: String
  OwnerType: String
  ResourceUris: [AwsGlueS4aInput]
}

type AwsGlueS4a {
  ResourceType: String
  Uri: String
}

input AwsGlueS4aInput {
  ResourceType: String
  Uri: String
}

type AwsGlueS53 {
  GrokClassifier: AwsGlueS53GrokClassifier
  XMLClassifier: AwsGlueS53XMLClassifier
}

type AwsGlueS53GrokClassifier {
  Name: String!
  Classification: String!
  CreationTime: Date
  LastUpdated: Date
  Version: JSON
  GrokPattern: String!
  CustomPatterns: String
}

type AwsGlueS53XMLClassifier {
  Name: String!
  Classification: String!
  CreationTime: Date
  LastUpdated: Date
  Version: JSON
  RowTag: String
}

type AwsGlueS5e {
  Name: String
  Description: String
  ConnectionType: String
  MatchCriteria: [String]
  ConnectionProperties: JSON
  PhysicalConnectionRequirements: AwsGlueS23
  CreationTime: Date
  LastUpdatedTime: Date
  LastUpdatedBy: String
}

input AwsGlueS5Input {
  Values: [String]
  LastAccessTime: Date
  StorageDescriptor: AwsGlueS9Input
  Parameters: JSON
  LastAnalyzedTime: Date
}

type AwsGlueS5l {
  Name: String
  Role: String
  Targets: AwsGlueS29
  DatabaseName: String
  Description: String
  Classifiers: [String]
  SchemaChangePolicy: AwsGlueS2k
  State: String
  TablePrefix: String
  Schedule: AwsGlueS5lSchedule
  CrawlElapsedTime: JSON
  CreationTime: Date
  LastUpdated: Date
  LastCrawl: AwsGlueS5lLastCrawl
  Version: JSON
  Configuration: String
}

type AwsGlueS5lLastCrawl {
  Status: String
  ErrorMessage: String
  LogGroup: String
  LogStream: String
  MessagePrefix: String
  StartTime: Date
}

type AwsGlueS5lSchedule {
  ScheduleExpression: String
  State: String
}

type AwsGlueS66 {
  Name: String!
  Description: String
  LocationUri: String
  Parameters: JSON
  CreateTime: Date
}

type AwsGlueS6e {
  EndpointName: String
  RoleArn: String
  SecurityGroupIds: [String]
  SubnetId: String
  YarnEndpointAddress: String
  ZeppelinRemoteSparkInterpreterPort: Int
  PublicAddress: String
  Status: String
  NumberOfNodes: Int
  AvailabilityZone: String
  VpcId: String
  ExtraPythonLibsS3Path: String
  ExtraJarsS3Path: String
  FailureReason: String
  LastUpdateStatus: String
  CreatedTimestamp: Date
  LastModifiedTimestamp: Date
  PublicKey: String
}

type AwsGlueS6k {
  Name: String
  Description: String
  LogUri: String
  Role: String
  CreatedOn: Date
  LastModifiedOn: Date
  ExecutionProperty: AwsGlueS33
  Command: AwsGlueS35
  DefaultArguments: JSON
  Connections: AwsGlueS38
  MaxRetries: Int
  AllocatedCapacity: Int
}

type AwsGlueS6o {
  Id: String
  Attempt: Int
  PreviousRunId: String
  TriggerName: String
  JobName: String
  StartedOn: Date
  LastModifiedOn: Date
  CompletedOn: Date
  JobRunState: String
  Arguments: JSON
  ErrorMessage: String
  PredecessorRuns: [AwsGlueS6oPredecessorRuns]
  AllocatedCapacity: Int
}

type AwsGlueS6oPredecessorRuns {
  JobName: String
  RunId: String
}

input AwsGlueS70Input {
  DatabaseName: String!
  TableName: String!
}

input AwsGlueS72Input {
  Jdbc: [AwsGlueS3iInput]
  S3: [AwsGlueS3iInput]
}

type AwsGlueS74 {
  SourceTable: String
  SourcePath: String
  SourceType: String
  TargetTable: String
  TargetPath: String
  TargetType: String
}

input AwsGlueS74Input {
  SourceTable: String
  SourcePath: String
  SourceType: String
  TargetTable: String
  TargetPath: String
  TargetType: String
}

type AwsGlueS7k {
  Name: String!
  DatabaseName: String
  Description: String
  Owner: String
  CreateTime: Date
  UpdateTime: Date
  LastAccessTime: Date
  LastAnalyzedTime: Date
  Retention: Int
  StorageDescriptor: AwsGlueS9
  PartitionKeys: [AwsGlueSa]
  ViewOriginalText: String
  ViewExpandedText: String
  TableType: String
  Parameters: JSON
  CreatedBy: String
}

type AwsGlueS7w {
  Name: String
  Id: String
  Type: String
  State: String
  Description: String
  Schedule: String
  Actions: [AwsGlueS44]
  Predicate: AwsGlueS3y
}

type AwsGlueS83 {
  FunctionName: String
  ClassName: String
  OwnerName: String
  OwnerType: String
  CreateTime: Date
  ResourceUris: [AwsGlueS4a]
}

type AwsGlueS9 {
  Columns: [AwsGlueSa]
  Location: String
  InputFormat: String
  OutputFormat: String
  Compressed: Boolean
  NumberOfBuckets: Int
  SerdeInfo: AwsGlueS9SerdeInfo
  BucketColumns: [String]
  SortColumns: [AwsGlueS9SortColumns]
  Parameters: JSON
  SkewedInfo: AwsGlueS9SkewedInfo
  StoredAsSubDirectories: Boolean
}

input AwsGlueS9Input {
  Columns: [AwsGlueSaInput]
  Location: String
  InputFormat: String
  OutputFormat: String
  Compressed: Boolean
  NumberOfBuckets: Int
  SerdeInfo: AwsGlueS9SerdeInfoInput
  BucketColumns: [String]
  SortColumns: [AwsGlueS9SortColumnsInput]
  Parameters: JSON
  SkewedInfo: AwsGlueS9SkewedInfoInput
  StoredAsSubDirectories: Boolean
}

type AwsGlueS9SerdeInfo {
  Name: String
  SerializationLibrary: String
  Parameters: JSON
}

input AwsGlueS9SerdeInfoInput {
  Name: String
  SerializationLibrary: String
  Parameters: JSON
}

type AwsGlueS9SkewedInfo {
  SkewedColumnNames: [String]
  SkewedColumnValues: [String]
  SkewedColumnValueLocationMaps: JSON
}

input AwsGlueS9SkewedInfoInput {
  SkewedColumnNames: [String]
  SkewedColumnValues: [String]
  SkewedColumnValueLocationMaps: JSON
}

type AwsGlueS9SortColumns {
  Column: String!
  SortOrder: Int!
}

input AwsGlueS9SortColumnsInput {
  Column: String!
  SortOrder: Int!
}

type AwsGlueSa {
  Name: String!
  Type: String
  Comment: String
}

input AwsGlueSaInput {
  Name: String!
  Type: String
  Comment: String
}

input AwsGlueStartCrawlerInput {
  Name: String!
}

input AwsGlueStartCrawlerScheduleInput {
  CrawlerName: String!
}

input AwsGlueStartJobRunInput {
  JobName: String!
  JobRunId: String
  Arguments: JSON
  AllocatedCapacity: Int
}

type AwsGlueStartJobRunOutput {
  JobRunId: String
}

input AwsGlueStartTriggerInput {
  Name: String!
}

type AwsGlueStartTriggerOutput {
  Name: String
}

input AwsGlueStopCrawlerInput {
  Name: String!
}

input AwsGlueStopCrawlerScheduleInput {
  CrawlerName: String!
}

input AwsGlueStopTriggerInput {
  Name: String!
}

type AwsGlueStopTriggerOutput {
  Name: String
}

type AwsGlueSv {
  PartitionValues: [String]
  ErrorDetail: AwsGlueSx
}

type AwsGlueSx {
  ErrorCode: String
  ErrorMessage: String
}

input AwsGlueUpdateClassifierGrokClassifierInput {
  Name: String!
  Classification: String
  GrokPattern: String
  CustomPatterns: String
}

input AwsGlueUpdateClassifierInput {
  GrokClassifier: AwsGlueUpdateClassifierGrokClassifierInput
  XMLClassifier: AwsGlueUpdateClassifierXMLClassifierInput
}

input AwsGlueUpdateClassifierXMLClassifierInput {
  Name: String!
  Classification: String
  RowTag: String
}

input AwsGlueUpdateConnectionInput {
  CatalogId: String
  Name: String!
  ConnectionInput: AwsGlueS1yInput!
}

input AwsGlueUpdateCrawlerInput {
  Name: String!
  Role: String
  DatabaseName: String
  Description: String
  Targets: AwsGlueS29Input
  Schedule: String
  Classifiers: [String]
  TablePrefix: String
  SchemaChangePolicy: AwsGlueS2kInput
  Configuration: String
}

input AwsGlueUpdateCrawlerScheduleInput {
  CrawlerName: String!
  Schedule: String
}

input AwsGlueUpdateDatabaseInput {
  CatalogId: String
  Name: String!
  DatabaseInput: AwsGlueS2qInput!
}

input AwsGlueUpdateDevEndpointCustomLibrariesInput {
  ExtraPythonLibsS3Path: String
  ExtraJarsS3Path: String
}

input AwsGlueUpdateDevEndpointInput {
  EndpointName: String!
  PublicKey: String
  CustomLibraries: AwsGlueUpdateDevEndpointCustomLibrariesInput
  UpdateEtlLibraries: Boolean
}

input AwsGlueUpdateJobInput {
  JobName: String!
  JobUpdate: AwsGlueUpdateJobJobUpdateInput!
}

input AwsGlueUpdateJobJobUpdateInput {
  Description: String
  LogUri: String
  Role: String
  ExecutionProperty: AwsGlueS33Input
  Command: AwsGlueS35Input
  DefaultArguments: JSON
  Connections: AwsGlueS38Input
  MaxRetries: Int
  AllocatedCapacity: Int
}

type AwsGlueUpdateJobOutput {
  JobName: String
}

input AwsGlueUpdatePartitionInput {
  CatalogId: String
  DatabaseName: String!
  TableName: String!
  PartitionValueList: [String]!
  PartitionInput: AwsGlueS5Input!
}

input AwsGlueUpdateTableInput {
  CatalogId: String
  DatabaseName: String!
  TableInput: AwsGlueS3rInput!
}

input AwsGlueUpdateTriggerInput {
  Name: String!
  TriggerUpdate: AwsGlueUpdateTriggerTriggerUpdateInput!
}

type AwsGlueUpdateTriggerOutput {
  Trigger: AwsGlueS7w
}

input AwsGlueUpdateTriggerTriggerUpdateInput {
  Name: String
  Description: String
  Schedule: String
  Actions: [AwsGlueS44Input]
  Predicate: AwsGlueS3yInput
}

input AwsGlueUpdateUserDefinedFunctionInput {
  CatalogId: String
  DatabaseName: String!
  FunctionName: String!
  FunctionInput: AwsGlueS48Input!
}

# AWS Greengrass (2017-06-07)
type AwsGreengrass {
  associateRoleToGroup(input: AwsGreengrassAssociateRoleToGroupInput!, config: AwsConfig): AwsGreengrassAssociateRoleToGroupOutput
  associateServiceRoleToAccount(input: AwsGreengrassAssociateServiceRoleToAccountInput, config: AwsConfig): AwsGreengrassAssociateServiceRoleToAccountOutput
  createCoreDefinition(input: AwsGreengrassCreateCoreDefinitionInput, config: AwsConfig): AwsGreengrassCreateCoreDefinitionOutput
  createCoreDefinitionVersion(input: AwsGreengrassCreateCoreDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateCoreDefinitionVersionOutput
  createDeployment(input: AwsGreengrassCreateDeploymentInput!, config: AwsConfig): AwsGreengrassCreateDeploymentOutput
  createDeviceDefinition(input: AwsGreengrassCreateDeviceDefinitionInput, config: AwsConfig): AwsGreengrassCreateDeviceDefinitionOutput
  createDeviceDefinitionVersion(input: AwsGreengrassCreateDeviceDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateDeviceDefinitionVersionOutput
  createFunctionDefinition(input: AwsGreengrassCreateFunctionDefinitionInput, config: AwsConfig): AwsGreengrassCreateFunctionDefinitionOutput
  createFunctionDefinitionVersion(input: AwsGreengrassCreateFunctionDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateFunctionDefinitionVersionOutput
  createGroup(input: AwsGreengrassCreateGroupInput, config: AwsConfig): AwsGreengrassCreateGroupOutput
  createGroupCertificateAuthority(input: AwsGreengrassCreateGroupCertificateAuthorityInput!, config: AwsConfig): AwsGreengrassCreateGroupCertificateAuthorityOutput
  createGroupVersion(input: AwsGreengrassCreateGroupVersionInput!, config: AwsConfig): AwsGreengrassCreateGroupVersionOutput
  createLoggerDefinition(input: AwsGreengrassCreateLoggerDefinitionInput, config: AwsConfig): AwsGreengrassCreateLoggerDefinitionOutput
  createLoggerDefinitionVersion(input: AwsGreengrassCreateLoggerDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateLoggerDefinitionVersionOutput
  createResourceDefinition(input: AwsGreengrassCreateResourceDefinitionInput, config: AwsConfig): AwsGreengrassCreateResourceDefinitionOutput
  createResourceDefinitionVersion(input: AwsGreengrassCreateResourceDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateResourceDefinitionVersionOutput
  createSoftwareUpdateJob(input: AwsGreengrassCreateSoftwareUpdateJobInput, config: AwsConfig): AwsGreengrassCreateSoftwareUpdateJobOutput
  createSubscriptionDefinition(input: AwsGreengrassCreateSubscriptionDefinitionInput, config: AwsConfig): AwsGreengrassCreateSubscriptionDefinitionOutput
  createSubscriptionDefinitionVersion(input: AwsGreengrassCreateSubscriptionDefinitionVersionInput!, config: AwsConfig): AwsGreengrassCreateSubscriptionDefinitionVersionOutput
  deleteCoreDefinition(input: AwsGreengrassDeleteCoreDefinitionInput!, config: AwsConfig): JSON
  deleteDeviceDefinition(input: AwsGreengrassDeleteDeviceDefinitionInput!, config: AwsConfig): JSON
  deleteFunctionDefinition(input: AwsGreengrassDeleteFunctionDefinitionInput!, config: AwsConfig): JSON
  deleteGroup(input: AwsGreengrassDeleteGroupInput!, config: AwsConfig): JSON
  deleteLoggerDefinition(input: AwsGreengrassDeleteLoggerDefinitionInput!, config: AwsConfig): JSON
  deleteResourceDefinition(input: AwsGreengrassDeleteResourceDefinitionInput!, config: AwsConfig): JSON
  deleteSubscriptionDefinition(input: AwsGreengrassDeleteSubscriptionDefinitionInput!, config: AwsConfig): JSON
  disassociateRoleFromGroup(input: AwsGreengrassDisassociateRoleFromGroupInput!, config: AwsConfig): AwsGreengrassDisassociateRoleFromGroupOutput
  disassociateServiceRoleFromAccount(input: JSON, config: AwsConfig): AwsGreengrassDisassociateServiceRoleFromAccountOutput
  getAssociatedRole(input: AwsGreengrassGetAssociatedRoleInput!, config: AwsConfig): AwsGreengrassGetAssociatedRoleOutput
  getConnectivityInfo(input: AwsGreengrassGetConnectivityInfoInput!, config: AwsConfig): AwsGreengrassGetConnectivityInfoOutput
  getCoreDefinition(input: AwsGreengrassGetCoreDefinitionInput!, config: AwsConfig): AwsGreengrassGetCoreDefinitionOutput
  getCoreDefinitionVersion(input: AwsGreengrassGetCoreDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetCoreDefinitionVersionOutput
  getDeploymentStatus(input: AwsGreengrassGetDeploymentStatusInput!, config: AwsConfig): AwsGreengrassGetDeploymentStatusOutput
  getDeviceDefinition(input: AwsGreengrassGetDeviceDefinitionInput!, config: AwsConfig): AwsGreengrassGetDeviceDefinitionOutput
  getDeviceDefinitionVersion(input: AwsGreengrassGetDeviceDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetDeviceDefinitionVersionOutput
  getFunctionDefinition(input: AwsGreengrassGetFunctionDefinitionInput!, config: AwsConfig): AwsGreengrassGetFunctionDefinitionOutput
  getFunctionDefinitionVersion(input: AwsGreengrassGetFunctionDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetFunctionDefinitionVersionOutput
  getGroup(input: AwsGreengrassGetGroupInput!, config: AwsConfig): AwsGreengrassGetGroupOutput
  getGroupCertificateAuthority(input: AwsGreengrassGetGroupCertificateAuthorityInput!, config: AwsConfig): AwsGreengrassGetGroupCertificateAuthorityOutput
  getGroupCertificateConfiguration(input: AwsGreengrassGetGroupCertificateConfigurationInput!, config: AwsConfig): AwsGreengrassGetGroupCertificateConfigurationOutput
  getGroupVersion(input: AwsGreengrassGetGroupVersionInput!, config: AwsConfig): AwsGreengrassGetGroupVersionOutput
  getLoggerDefinition(input: AwsGreengrassGetLoggerDefinitionInput!, config: AwsConfig): AwsGreengrassGetLoggerDefinitionOutput
  getLoggerDefinitionVersion(input: AwsGreengrassGetLoggerDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetLoggerDefinitionVersionOutput
  getResourceDefinition(input: AwsGreengrassGetResourceDefinitionInput!, config: AwsConfig): AwsGreengrassGetResourceDefinitionOutput
  getResourceDefinitionVersion(input: AwsGreengrassGetResourceDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetResourceDefinitionVersionOutput
  getServiceRoleForAccount(input: JSON, config: AwsConfig): AwsGreengrassGetServiceRoleForAccountOutput
  getSubscriptionDefinition(input: AwsGreengrassGetSubscriptionDefinitionInput!, config: AwsConfig): AwsGreengrassGetSubscriptionDefinitionOutput
  getSubscriptionDefinitionVersion(input: AwsGreengrassGetSubscriptionDefinitionVersionInput!, config: AwsConfig): AwsGreengrassGetSubscriptionDefinitionVersionOutput
  listCoreDefinitionVersions(input: AwsGreengrassListCoreDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListCoreDefinitionVersionsOutput
  listCoreDefinitions(input: AwsGreengrassListCoreDefinitionsInput, config: AwsConfig): AwsGreengrassListCoreDefinitionsOutput
  listDeployments(input: AwsGreengrassListDeploymentsInput!, config: AwsConfig): AwsGreengrassListDeploymentsOutput
  listDeviceDefinitionVersions(input: AwsGreengrassListDeviceDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListDeviceDefinitionVersionsOutput
  listDeviceDefinitions(input: AwsGreengrassListDeviceDefinitionsInput, config: AwsConfig): AwsGreengrassListDeviceDefinitionsOutput
  listFunctionDefinitionVersions(input: AwsGreengrassListFunctionDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListFunctionDefinitionVersionsOutput
  listFunctionDefinitions(input: AwsGreengrassListFunctionDefinitionsInput, config: AwsConfig): AwsGreengrassListFunctionDefinitionsOutput
  listGroupCertificateAuthorities(input: AwsGreengrassListGroupCertificateAuthoritiesInput!, config: AwsConfig): AwsGreengrassListGroupCertificateAuthoritiesOutput
  listGroupVersions(input: AwsGreengrassListGroupVersionsInput!, config: AwsConfig): AwsGreengrassListGroupVersionsOutput
  listGroups(input: AwsGreengrassListGroupsInput, config: AwsConfig): AwsGreengrassListGroupsOutput
  listLoggerDefinitionVersions(input: AwsGreengrassListLoggerDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListLoggerDefinitionVersionsOutput
  listLoggerDefinitions(input: AwsGreengrassListLoggerDefinitionsInput, config: AwsConfig): AwsGreengrassListLoggerDefinitionsOutput
  listResourceDefinitionVersions(input: AwsGreengrassListResourceDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListResourceDefinitionVersionsOutput
  listResourceDefinitions(input: AwsGreengrassListResourceDefinitionsInput, config: AwsConfig): AwsGreengrassListResourceDefinitionsOutput
  listSubscriptionDefinitionVersions(input: AwsGreengrassListSubscriptionDefinitionVersionsInput!, config: AwsConfig): AwsGreengrassListSubscriptionDefinitionVersionsOutput
  listSubscriptionDefinitions(input: AwsGreengrassListSubscriptionDefinitionsInput, config: AwsConfig): AwsGreengrassListSubscriptionDefinitionsOutput
  resetDeployments(input: AwsGreengrassResetDeploymentsInput!, config: AwsConfig): AwsGreengrassResetDeploymentsOutput
  updateConnectivityInfo(input: AwsGreengrassUpdateConnectivityInfoInput!, config: AwsConfig): AwsGreengrassUpdateConnectivityInfoOutput
  updateCoreDefinition(input: AwsGreengrassUpdateCoreDefinitionInput!, config: AwsConfig): JSON
  updateDeviceDefinition(input: AwsGreengrassUpdateDeviceDefinitionInput!, config: AwsConfig): JSON
  updateFunctionDefinition(input: AwsGreengrassUpdateFunctionDefinitionInput!, config: AwsConfig): JSON
  updateGroup(input: AwsGreengrassUpdateGroupInput!, config: AwsConfig): JSON
  updateGroupCertificateConfiguration(input: AwsGreengrassUpdateGroupCertificateConfigurationInput!, config: AwsConfig): AwsGreengrassUpdateGroupCertificateConfigurationOutput
  updateLoggerDefinition(input: AwsGreengrassUpdateLoggerDefinitionInput!, config: AwsConfig): JSON
  updateResourceDefinition(input: AwsGreengrassUpdateResourceDefinitionInput!, config: AwsConfig): JSON
  updateSubscriptionDefinition(input: AwsGreengrassUpdateSubscriptionDefinitionInput!, config: AwsConfig): JSON
}

input AwsGreengrassAssociateRoleToGroupInput {
  GroupId: String!
  RoleArn: String
}

type AwsGreengrassAssociateRoleToGroupOutput {
  AssociatedAt: String
}

input AwsGreengrassAssociateServiceRoleToAccountInput {
  RoleArn: String
}

type AwsGreengrassAssociateServiceRoleToAccountOutput {
  AssociatedAt: String
}

input AwsGreengrassCreateCoreDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS7Input
  Name: String
}

type AwsGreengrassCreateCoreDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateCoreDefinitionVersionInput {
  AmznClientToken: String
  CoreDefinitionId: String!
  Cores: [AwsGreengrassS8Input]
}

type AwsGreengrassCreateCoreDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateDeploymentInput {
  AmznClientToken: String
  DeploymentId: String
  DeploymentType: String
  GroupId: String!
  GroupVersionId: String
}

type AwsGreengrassCreateDeploymentOutput {
  DeploymentArn: String
  DeploymentId: String
}

input AwsGreengrassCreateDeviceDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassSiInput
  Name: String
}

type AwsGreengrassCreateDeviceDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateDeviceDefinitionVersionInput {
  AmznClientToken: String
  DeviceDefinitionId: String!
  Devices: [AwsGreengrassSjInput]
}

type AwsGreengrassCreateDeviceDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateFunctionDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassSpInput
  Name: String
}

type AwsGreengrassCreateFunctionDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateFunctionDefinitionVersionInput {
  AmznClientToken: String
  FunctionDefinitionId: String!
  Functions: [AwsGreengrassSqInput]
}

type AwsGreengrassCreateFunctionDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateGroupCertificateAuthorityInput {
  AmznClientToken: String
  GroupId: String!
}

type AwsGreengrassCreateGroupCertificateAuthorityOutput {
  GroupCertificateAuthorityArn: String
}

input AwsGreengrassCreateGroupInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS13Input
  Name: String
}

type AwsGreengrassCreateGroupOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateGroupVersionInput {
  AmznClientToken: String
  CoreDefinitionVersionArn: String
  DeviceDefinitionVersionArn: String
  FunctionDefinitionVersionArn: String
  GroupId: String!
  LoggerDefinitionVersionArn: String
  ResourceDefinitionVersionArn: String
  SubscriptionDefinitionVersionArn: String
}

type AwsGreengrassCreateGroupVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateLoggerDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS1aInput
  Name: String
}

type AwsGreengrassCreateLoggerDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateLoggerDefinitionVersionInput {
  AmznClientToken: String
  LoggerDefinitionId: String!
  Loggers: [AwsGreengrassS1bInput]
}

type AwsGreengrassCreateLoggerDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateResourceDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS1kInput
  Name: String
}

type AwsGreengrassCreateResourceDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateResourceDefinitionVersionInput {
  AmznClientToken: String
  ResourceDefinitionId: String!
  Resources: [AwsGreengrassS1lInput]
}

type AwsGreengrassCreateResourceDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassCreateSoftwareUpdateJobInput {
  AmznClientToken: String
  S3UrlSignerRole: String
  SoftwareToUpdate: String
  UpdateAgentLogLevel: String
  UpdateTargets: [String]
  UpdateTargetsArchitecture: String
  UpdateTargetsOperatingSystem: String
}

type AwsGreengrassCreateSoftwareUpdateJobOutput {
  IotJobArn: String
  IotJobId: String
}

input AwsGreengrassCreateSubscriptionDefinitionInput {
  AmznClientToken: String
  InitialVersion: AwsGreengrassS23Input
  Name: String
}

type AwsGreengrassCreateSubscriptionDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassCreateSubscriptionDefinitionVersionInput {
  AmznClientToken: String
  SubscriptionDefinitionId: String!
  Subscriptions: [AwsGreengrassS24Input]
}

type AwsGreengrassCreateSubscriptionDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

input AwsGreengrassDeleteCoreDefinitionInput {
  CoreDefinitionId: String!
}

input AwsGreengrassDeleteDeviceDefinitionInput {
  DeviceDefinitionId: String!
}

input AwsGreengrassDeleteFunctionDefinitionInput {
  FunctionDefinitionId: String!
}

input AwsGreengrassDeleteGroupInput {
  GroupId: String!
}

input AwsGreengrassDeleteLoggerDefinitionInput {
  LoggerDefinitionId: String!
}

input AwsGreengrassDeleteResourceDefinitionInput {
  ResourceDefinitionId: String!
}

input AwsGreengrassDeleteSubscriptionDefinitionInput {
  SubscriptionDefinitionId: String!
}

input AwsGreengrassDisassociateRoleFromGroupInput {
  GroupId: String!
}

type AwsGreengrassDisassociateRoleFromGroupOutput {
  DisassociatedAt: String
}

type AwsGreengrassDisassociateServiceRoleFromAccountOutput {
  DisassociatedAt: String
}

input AwsGreengrassGetAssociatedRoleInput {
  GroupId: String!
}

type AwsGreengrassGetAssociatedRoleOutput {
  AssociatedAt: String
  RoleArn: String
}

input AwsGreengrassGetConnectivityInfoInput {
  ThingName: String!
}

type AwsGreengrassGetConnectivityInfoOutput {
  ConnectivityInfo: [AwsGreengrassS2v]
  Message: String
}

input AwsGreengrassGetCoreDefinitionInput {
  CoreDefinitionId: String!
}

type AwsGreengrassGetCoreDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetCoreDefinitionVersionInput {
  CoreDefinitionId: String!
  CoreDefinitionVersionId: String!
}

type AwsGreengrassGetCoreDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS7
  Id: String
  Version: String
}

input AwsGreengrassGetDeploymentStatusInput {
  DeploymentId: String!
  GroupId: String!
}

type AwsGreengrassGetDeploymentStatusOutput {
  DeploymentStatus: String
  DeploymentType: String
  ErrorDetails: [AwsGreengrassGetDeploymentStatusOutputErrorDetails]
  ErrorMessage: String
  UpdatedAt: String
}

type AwsGreengrassGetDeploymentStatusOutputErrorDetails {
  DetailedErrorCode: String
  DetailedErrorMessage: String
}

input AwsGreengrassGetDeviceDefinitionInput {
  DeviceDefinitionId: String!
}

type AwsGreengrassGetDeviceDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetDeviceDefinitionVersionInput {
  DeviceDefinitionId: String!
  DeviceDefinitionVersionId: String!
}

type AwsGreengrassGetDeviceDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassSi
  Id: String
  Version: String
}

input AwsGreengrassGetFunctionDefinitionInput {
  FunctionDefinitionId: String!
}

type AwsGreengrassGetFunctionDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetFunctionDefinitionVersionInput {
  FunctionDefinitionId: String!
  FunctionDefinitionVersionId: String!
}

type AwsGreengrassGetFunctionDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassSp
  Id: String
  Version: String
}

input AwsGreengrassGetGroupCertificateAuthorityInput {
  CertificateAuthorityId: String!
  GroupId: String!
}

type AwsGreengrassGetGroupCertificateAuthorityOutput {
  GroupCertificateAuthorityArn: String
  GroupCertificateAuthorityId: String
  PemEncodedCertificate: String
}

input AwsGreengrassGetGroupCertificateConfigurationInput {
  GroupId: String!
}

type AwsGreengrassGetGroupCertificateConfigurationOutput {
  CertificateAuthorityExpiryInMilliseconds: String
  CertificateExpiryInMilliseconds: String
  GroupId: String
}

input AwsGreengrassGetGroupInput {
  GroupId: String!
}

type AwsGreengrassGetGroupOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetGroupVersionInput {
  GroupId: String!
  GroupVersionId: String!
}

type AwsGreengrassGetGroupVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS13
  Id: String
  Version: String
}

input AwsGreengrassGetLoggerDefinitionInput {
  LoggerDefinitionId: String!
}

type AwsGreengrassGetLoggerDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetLoggerDefinitionVersionInput {
  LoggerDefinitionId: String!
  LoggerDefinitionVersionId: String!
}

type AwsGreengrassGetLoggerDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS1a
  Id: String
  Version: String
}

input AwsGreengrassGetResourceDefinitionInput {
  ResourceDefinitionId: String!
}

type AwsGreengrassGetResourceDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetResourceDefinitionVersionInput {
  ResourceDefinitionId: String!
  ResourceDefinitionVersionId: String!
}

type AwsGreengrassGetResourceDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS1k
  Id: String
  Version: String
}

type AwsGreengrassGetServiceRoleForAccountOutput {
  AssociatedAt: String
  RoleArn: String
}

input AwsGreengrassGetSubscriptionDefinitionInput {
  SubscriptionDefinitionId: String!
}

type AwsGreengrassGetSubscriptionDefinitionOutput {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassGetSubscriptionDefinitionVersionInput {
  SubscriptionDefinitionId: String!
  SubscriptionDefinitionVersionId: String!
}

type AwsGreengrassGetSubscriptionDefinitionVersionOutput {
  Arn: String
  CreationTimestamp: String
  Definition: AwsGreengrassS23
  Id: String
  Version: String
}

input AwsGreengrassListCoreDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListCoreDefinitionsOutput {
  Definitions: [AwsGreengrassS45]
  NextToken: String
}

input AwsGreengrassListCoreDefinitionVersionsInput {
  CoreDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListCoreDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassListDeploymentsInput {
  GroupId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListDeploymentsOutput {
  Deployments: [AwsGreengrassListDeploymentsOutputDeployments]
  NextToken: String
}

type AwsGreengrassListDeploymentsOutputDeployments {
  CreatedAt: String
  DeploymentArn: String
  DeploymentId: String
  DeploymentType: String
  GroupArn: String
}

input AwsGreengrassListDeviceDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListDeviceDefinitionsOutput {
  Definitions: [AwsGreengrassS45]
  NextToken: String
}

input AwsGreengrassListDeviceDefinitionVersionsInput {
  DeviceDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListDeviceDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassListFunctionDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListFunctionDefinitionsOutput {
  Definitions: [AwsGreengrassS45]
  NextToken: String
}

input AwsGreengrassListFunctionDefinitionVersionsInput {
  FunctionDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListFunctionDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassListGroupCertificateAuthoritiesInput {
  GroupId: String!
}

type AwsGreengrassListGroupCertificateAuthoritiesOutput {
  GroupCertificateAuthorities: [AwsGreengrassListGroupCertificateAuthoritiesOutputGroupCertificateAuthorities]
}

type AwsGreengrassListGroupCertificateAuthoritiesOutputGroupCertificateAuthorities {
  GroupCertificateAuthorityArn: String
  GroupCertificateAuthorityId: String
}

input AwsGreengrassListGroupsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListGroupsOutput {
  Groups: [AwsGreengrassListGroupsOutputGroups]
  NextToken: String
}

type AwsGreengrassListGroupsOutputGroups {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

input AwsGreengrassListGroupVersionsInput {
  GroupId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListGroupVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassListLoggerDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListLoggerDefinitionsOutput {
  Definitions: [AwsGreengrassS45]
  NextToken: String
}

input AwsGreengrassListLoggerDefinitionVersionsInput {
  LoggerDefinitionId: String!
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListLoggerDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassListResourceDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListResourceDefinitionsOutput {
  Definitions: [AwsGreengrassS45]
  NextToken: String
}

input AwsGreengrassListResourceDefinitionVersionsInput {
  MaxResults: String
  NextToken: String
  ResourceDefinitionId: String!
}

type AwsGreengrassListResourceDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassListSubscriptionDefinitionsInput {
  MaxResults: String
  NextToken: String
}

type AwsGreengrassListSubscriptionDefinitionsOutput {
  Definitions: [AwsGreengrassS45]
  NextToken: String
}

input AwsGreengrassListSubscriptionDefinitionVersionsInput {
  MaxResults: String
  NextToken: String
  SubscriptionDefinitionId: String!
}

type AwsGreengrassListSubscriptionDefinitionVersionsOutput {
  NextToken: String
  Versions: [AwsGreengrassS41]
}

input AwsGreengrassResetDeploymentsInput {
  AmznClientToken: String
  Force: Boolean
  GroupId: String!
}

type AwsGreengrassResetDeploymentsOutput {
  DeploymentArn: String
  DeploymentId: String
}

type AwsGreengrassS13 {
  CoreDefinitionVersionArn: String
  DeviceDefinitionVersionArn: String
  FunctionDefinitionVersionArn: String
  LoggerDefinitionVersionArn: String
  ResourceDefinitionVersionArn: String
  SubscriptionDefinitionVersionArn: String
}

input AwsGreengrassS13Input {
  CoreDefinitionVersionArn: String
  DeviceDefinitionVersionArn: String
  FunctionDefinitionVersionArn: String
  LoggerDefinitionVersionArn: String
  ResourceDefinitionVersionArn: String
  SubscriptionDefinitionVersionArn: String
}

type AwsGreengrassS1a {
  Loggers: [AwsGreengrassS1b]
}

input AwsGreengrassS1aInput {
  Loggers: [AwsGreengrassS1bInput]
}

type AwsGreengrassS1b {
  Component: String
  Id: String
  Level: String
  Space: Int
  Type: String
}

input AwsGreengrassS1bInput {
  Component: String
  Id: String
  Level: String
  Space: Int
  Type: String
}

type AwsGreengrassS1k {
  Resources: [AwsGreengrassS1l]
}

input AwsGreengrassS1kInput {
  Resources: [AwsGreengrassS1lInput]
}

type AwsGreengrassS1l {
  Id: String
  Name: String
  ResourceDataContainer: AwsGreengrassS1lResourceDataContainer
}

input AwsGreengrassS1lInput {
  Id: String
  Name: String
  ResourceDataContainer: AwsGreengrassS1lResourceDataContainerInput
}

type AwsGreengrassS1lResourceDataContainer {
  LocalDeviceResourceData: AwsGreengrassS1lResourceDataContainerLocalDeviceResourceData
  LocalVolumeResourceData: AwsGreengrassS1lResourceDataContainerLocalVolumeResourceData
}

input AwsGreengrassS1lResourceDataContainerInput {
  LocalDeviceResourceData: AwsGreengrassS1lResourceDataContainerLocalDeviceResourceDataInput
  LocalVolumeResourceData: AwsGreengrassS1lResourceDataContainerLocalVolumeResourceDataInput
}

type AwsGreengrassS1lResourceDataContainerLocalDeviceResourceData {
  GroupOwnerSetting: AwsGreengrassS1p
  SourcePath: String
}

input AwsGreengrassS1lResourceDataContainerLocalDeviceResourceDataInput {
  GroupOwnerSetting: AwsGreengrassS1pInput
  SourcePath: String
}

type AwsGreengrassS1lResourceDataContainerLocalVolumeResourceData {
  DestinationPath: String
  GroupOwnerSetting: AwsGreengrassS1p
  SourcePath: String
}

input AwsGreengrassS1lResourceDataContainerLocalVolumeResourceDataInput {
  DestinationPath: String
  GroupOwnerSetting: AwsGreengrassS1pInput
  SourcePath: String
}

type AwsGreengrassS1p {
  AutoAddGroupOwner: Boolean
  GroupOwner: String
}

input AwsGreengrassS1pInput {
  AutoAddGroupOwner: Boolean
  GroupOwner: String
}

type AwsGreengrassS23 {
  Subscriptions: [AwsGreengrassS24]
}

input AwsGreengrassS23Input {
  Subscriptions: [AwsGreengrassS24Input]
}

type AwsGreengrassS24 {
  Id: String
  Source: String
  Subject: String
  Target: String
}

input AwsGreengrassS24Input {
  Id: String
  Source: String
  Subject: String
  Target: String
}

type AwsGreengrassS2v {
  HostAddress: String
  Id: String
  Metadata: String
  PortNumber: Int
}

input AwsGreengrassS2vInput {
  HostAddress: String
  Id: String
  Metadata: String
  PortNumber: Int
}

type AwsGreengrassS41 {
  Arn: String
  CreationTimestamp: String
  Id: String
  Version: String
}

type AwsGreengrassS45 {
  Arn: String
  CreationTimestamp: String
  Id: String
  LastUpdatedTimestamp: String
  LatestVersion: String
  LatestVersionArn: String
  Name: String
}

type AwsGreengrassS7 {
  Cores: [AwsGreengrassS8]
}

input AwsGreengrassS7Input {
  Cores: [AwsGreengrassS8Input]
}

type AwsGreengrassS8 {
  CertificateArn: String
  Id: String
  SyncShadow: Boolean
  ThingArn: String
}

input AwsGreengrassS8Input {
  CertificateArn: String
  Id: String
  SyncShadow: Boolean
  ThingArn: String
}

type AwsGreengrassSi {
  Devices: [AwsGreengrassSj]
}

input AwsGreengrassSiInput {
  Devices: [AwsGreengrassSjInput]
}

type AwsGreengrassSj {
  CertificateArn: String
  Id: String
  SyncShadow: Boolean
  ThingArn: String
}

input AwsGreengrassSjInput {
  CertificateArn: String
  Id: String
  SyncShadow: Boolean
  ThingArn: String
}

type AwsGreengrassSp {
  Functions: [AwsGreengrassSq]
}

input AwsGreengrassSpInput {
  Functions: [AwsGreengrassSqInput]
}

type AwsGreengrassSq {
  FunctionArn: String
  FunctionConfiguration: AwsGreengrassSqFunctionConfiguration
  Id: String
}

type AwsGreengrassSqFunctionConfiguration {
  Environment: AwsGreengrassSqFunctionConfigurationEnvironment
  ExecArgs: String
  Executable: String
  MemorySize: Int
  Pinned: Boolean
  Timeout: Int
}

type AwsGreengrassSqFunctionConfigurationEnvironment {
  AccessSysfs: Boolean
  ResourceAccessPolicies: [AwsGreengrassSqFunctionConfigurationEnvironmentResourceAccessPolicies]
  Variables: JSON
}

input AwsGreengrassSqFunctionConfigurationEnvironmentInput {
  AccessSysfs: Boolean
  ResourceAccessPolicies: [AwsGreengrassSqFunctionConfigurationEnvironmentResourceAccessPoliciesInput]
  Variables: JSON
}

type AwsGreengrassSqFunctionConfigurationEnvironmentResourceAccessPolicies {
  Permission: String
  ResourceId: String
}

input AwsGreengrassSqFunctionConfigurationEnvironmentResourceAccessPoliciesInput {
  Permission: String
  ResourceId: String
}

input AwsGreengrassSqFunctionConfigurationInput {
  Environment: AwsGreengrassSqFunctionConfigurationEnvironmentInput
  ExecArgs: String
  Executable: String
  MemorySize: Int
  Pinned: Boolean
  Timeout: Int
}

input AwsGreengrassSqInput {
  FunctionArn: String
  FunctionConfiguration: AwsGreengrassSqFunctionConfigurationInput
  Id: String
}

input AwsGreengrassUpdateConnectivityInfoInput {
  ConnectivityInfo: [AwsGreengrassS2vInput]
  ThingName: String!
}

type AwsGreengrassUpdateConnectivityInfoOutput {
  Message: String
  Version: String
}

input AwsGreengrassUpdateCoreDefinitionInput {
  CoreDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateDeviceDefinitionInput {
  DeviceDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateFunctionDefinitionInput {
  FunctionDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateGroupCertificateConfigurationInput {
  CertificateExpiryInMilliseconds: String
  GroupId: String!
}

type AwsGreengrassUpdateGroupCertificateConfigurationOutput {
  CertificateAuthorityExpiryInMilliseconds: String
  CertificateExpiryInMilliseconds: String
  GroupId: String
}

input AwsGreengrassUpdateGroupInput {
  GroupId: String!
  Name: String
}

input AwsGreengrassUpdateLoggerDefinitionInput {
  LoggerDefinitionId: String!
  Name: String
}

input AwsGreengrassUpdateResourceDefinitionInput {
  Name: String
  ResourceDefinitionId: String!
}

input AwsGreengrassUpdateSubscriptionDefinitionInput {
  Name: String
  SubscriptionDefinitionId: String!
}

# Amazon GuardDuty (2017-11-28)
type AwsGuardDuty {
  acceptInvitation(input: AwsGuardDutyAcceptInvitationInput!, config: AwsConfig): JSON
  archiveFindings(input: AwsGuardDutyArchiveFindingsInput!, config: AwsConfig): JSON
  createDetector(input: AwsGuardDutyCreateDetectorInput, config: AwsConfig): AwsGuardDutyCreateDetectorOutput
  createIPSet(input: AwsGuardDutyCreateIPSetInput!, config: AwsConfig): AwsGuardDutyCreateIPSetOutput
  createMembers(input: AwsGuardDutyCreateMembersInput!, config: AwsConfig): AwsGuardDutyCreateMembersOutput
  createSampleFindings(input: AwsGuardDutyCreateSampleFindingsInput!, config: AwsConfig): JSON
  createThreatIntelSet(input: AwsGuardDutyCreateThreatIntelSetInput!, config: AwsConfig): AwsGuardDutyCreateThreatIntelSetOutput
  declineInvitations(input: AwsGuardDutyDeclineInvitationsInput, config: AwsConfig): AwsGuardDutyDeclineInvitationsOutput
  deleteDetector(input: AwsGuardDutyDeleteDetectorInput!, config: AwsConfig): JSON
  deleteIPSet(input: AwsGuardDutyDeleteIPSetInput!, config: AwsConfig): JSON
  deleteInvitations(input: AwsGuardDutyDeleteInvitationsInput, config: AwsConfig): AwsGuardDutyDeleteInvitationsOutput
  deleteMembers(input: AwsGuardDutyDeleteMembersInput!, config: AwsConfig): AwsGuardDutyDeleteMembersOutput
  deleteThreatIntelSet(input: AwsGuardDutyDeleteThreatIntelSetInput!, config: AwsConfig): JSON
  disassociateFromMasterAccount(input: AwsGuardDutyDisassociateFromMasterAccountInput!, config: AwsConfig): JSON
  disassociateMembers(input: AwsGuardDutyDisassociateMembersInput!, config: AwsConfig): AwsGuardDutyDisassociateMembersOutput
  getDetector(input: AwsGuardDutyGetDetectorInput!, config: AwsConfig): AwsGuardDutyGetDetectorOutput
  getFindings(input: AwsGuardDutyGetFindingsInput!, config: AwsConfig): AwsGuardDutyGetFindingsOutput
  getFindingsStatistics(input: AwsGuardDutyGetFindingsStatisticsInput!, config: AwsConfig): AwsGuardDutyGetFindingsStatisticsOutput
  getIPSet(input: AwsGuardDutyGetIPSetInput!, config: AwsConfig): AwsGuardDutyGetIPSetOutput
  getInvitationsCount(input: JSON, config: AwsConfig): AwsGuardDutyGetInvitationsCountOutput
  getMasterAccount(input: AwsGuardDutyGetMasterAccountInput!, config: AwsConfig): AwsGuardDutyGetMasterAccountOutput
  getMembers(input: AwsGuardDutyGetMembersInput!, config: AwsConfig): AwsGuardDutyGetMembersOutput
  getThreatIntelSet(input: AwsGuardDutyGetThreatIntelSetInput!, config: AwsConfig): AwsGuardDutyGetThreatIntelSetOutput
  inviteMembers(input: AwsGuardDutyInviteMembersInput!, config: AwsConfig): AwsGuardDutyInviteMembersOutput
  listDetectors(input: AwsGuardDutyListDetectorsInput, config: AwsConfig): AwsGuardDutyListDetectorsOutput
  listFindings(input: AwsGuardDutyListFindingsInput!, config: AwsConfig): AwsGuardDutyListFindingsOutput
  listIPSets(input: AwsGuardDutyListIPSetsInput!, config: AwsConfig): AwsGuardDutyListIPSetsOutput
  listInvitations(input: AwsGuardDutyListInvitationsInput, config: AwsConfig): AwsGuardDutyListInvitationsOutput
  listMembers(input: AwsGuardDutyListMembersInput!, config: AwsConfig): AwsGuardDutyListMembersOutput
  listThreatIntelSets(input: AwsGuardDutyListThreatIntelSetsInput!, config: AwsConfig): AwsGuardDutyListThreatIntelSetsOutput
  startMonitoringMembers(input: AwsGuardDutyStartMonitoringMembersInput!, config: AwsConfig): AwsGuardDutyStartMonitoringMembersOutput
  stopMonitoringMembers(input: AwsGuardDutyStopMonitoringMembersInput!, config: AwsConfig): AwsGuardDutyStopMonitoringMembersOutput
  unarchiveFindings(input: AwsGuardDutyUnarchiveFindingsInput!, config: AwsConfig): JSON
  updateDetector(input: AwsGuardDutyUpdateDetectorInput!, config: AwsConfig): JSON
  updateFindingsFeedback(input: AwsGuardDutyUpdateFindingsFeedbackInput!, config: AwsConfig): JSON
  updateIPSet(input: AwsGuardDutyUpdateIPSetInput!, config: AwsConfig): JSON
  updateThreatIntelSet(input: AwsGuardDutyUpdateThreatIntelSetInput!, config: AwsConfig): JSON
}

input AwsGuardDutyAcceptInvitationInput {
  DetectorId: String!
  InvitationId: String
  MasterId: String
}

input AwsGuardDutyArchiveFindingsInput {
  DetectorId: String!
  FindingIds: [String]
}

input AwsGuardDutyCreateDetectorInput {
  Enable: Boolean
}

type AwsGuardDutyCreateDetectorOutput {
  DetectorId: String
}

input AwsGuardDutyCreateIPSetInput {
  Activate: Boolean
  DetectorId: String!
  Format: String
  Location: String
  Name: String
}

type AwsGuardDutyCreateIPSetOutput {
  IpSetId: String
}

input AwsGuardDutyCreateMembersAccountDetailsInput {
  AccountId: String
  Email: String
}

input AwsGuardDutyCreateMembersInput {
  AccountDetails: [AwsGuardDutyCreateMembersAccountDetailsInput]
  DetectorId: String!
}

type AwsGuardDutyCreateMembersOutput {
  UnprocessedAccounts: [AwsGuardDutySr]
}

input AwsGuardDutyCreateSampleFindingsInput {
  DetectorId: String!
  FindingTypes: [String]
}

input AwsGuardDutyCreateThreatIntelSetInput {
  Activate: Boolean
  DetectorId: String!
  Format: String
  Location: String
  Name: String
}

type AwsGuardDutyCreateThreatIntelSetOutput {
  ThreatIntelSetId: String
}

input AwsGuardDutyDeclineInvitationsInput {
  AccountIds: [String]
}

type AwsGuardDutyDeclineInvitationsOutput {
  UnprocessedAccounts: [AwsGuardDutySr]
}

input AwsGuardDutyDeleteDetectorInput {
  DetectorId: String!
}

input AwsGuardDutyDeleteInvitationsInput {
  AccountIds: [String]
}

type AwsGuardDutyDeleteInvitationsOutput {
  UnprocessedAccounts: [AwsGuardDutySr]
}

input AwsGuardDutyDeleteIPSetInput {
  DetectorId: String!
  IpSetId: String!
}

input AwsGuardDutyDeleteMembersInput {
  AccountIds: [String]
  DetectorId: String!
}

type AwsGuardDutyDeleteMembersOutput {
  UnprocessedAccounts: [AwsGuardDutySr]
}

input AwsGuardDutyDeleteThreatIntelSetInput {
  DetectorId: String!
  ThreatIntelSetId: String!
}

input AwsGuardDutyDisassociateFromMasterAccountInput {
  DetectorId: String!
}

input AwsGuardDutyDisassociateMembersInput {
  AccountIds: [String]
  DetectorId: String!
}

type AwsGuardDutyDisassociateMembersOutput {
  UnprocessedAccounts: [AwsGuardDutySr]
}

input AwsGuardDutyGetDetectorInput {
  DetectorId: String!
}

type AwsGuardDutyGetDetectorOutput {
  CreatedAt: String
  ServiceRole: String
  Status: String
  UpdatedAt: String
}

input AwsGuardDutyGetFindingsInput {
  DetectorId: String!
  FindingIds: [String]
  SortCriteria: AwsGuardDutyS1pInput
}

type AwsGuardDutyGetFindingsOutput {
  Findings: [AwsGuardDutyGetFindingsOutputFindings]
}

type AwsGuardDutyGetFindingsOutputFindings {
  AccountId: String
  Arn: String
  Confidence: JSON
  CreatedAt: String
  Description: String
  Id: String
  Partition: String
  Region: String
  Resource: AwsGuardDutyGetFindingsOutputFindingsResource
  SchemaVersion: String
  Service: AwsGuardDutyGetFindingsOutputFindingsService
  Severity: JSON
  Title: String
  Type: String
  UpdatedAt: String
}

type AwsGuardDutyGetFindingsOutputFindingsResource {
  InstanceDetails: AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetails
  ResourceType: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetails {
  AvailabilityZone: String
  IamInstanceProfile: AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsIamInstanceProfile
  ImageId: String
  InstanceId: String
  InstanceState: String
  InstanceType: String
  LaunchTime: String
  NetworkInterfaces: [AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfaces]
  Platform: String
  ProductCodes: [AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsProductCodes]
  Tags: [AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsTags]
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsIamInstanceProfile {
  Arn: String
  Id: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfaces {
  Ipv6Addresses: [String]
  PrivateDnsName: String
  PrivateIpAddress: String
  PrivateIpAddresses: [AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfacesPrivateIpAddresses]
  PublicDnsName: String
  PublicIp: String
  SecurityGroups: [AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfacesSecurityGroups]
  SubnetId: String
  VpcId: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfacesPrivateIpAddresses {
  PrivateDnsName: String
  PrivateIpAddress: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsNetworkInterfacesSecurityGroups {
  GroupId: String
  GroupName: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsProductCodes {
  Code: String
  ProductType: String
}

type AwsGuardDutyGetFindingsOutputFindingsResourceInstanceDetailsTags {
  Key: String
  Value: String
}

type AwsGuardDutyGetFindingsOutputFindingsService {
  Action: AwsGuardDutyGetFindingsOutputFindingsServiceAction
  Archived: Boolean
  Count: Int
  DetectorId: String
  EventFirstSeen: String
  EventLastSeen: String
  ResourceRole: String
  ServiceName: String
  UserFeedback: String
}

type AwsGuardDutyGetFindingsOutputFindingsServiceAction {
  ActionType: String
  AwsApiCallAction: AwsGuardDutyGetFindingsOutputFindingsServiceActionAwsApiCallAction
  DnsRequestAction: AwsGuardDutyGetFindingsOutputFindingsServiceActionDnsRequestAction
  NetworkConnectionAction: AwsGuardDutyGetFindingsOutputFindingsServiceActionNetworkConnectionAction
}

type AwsGuardDutyGetFindingsOutputFindingsServiceActionAwsApiCallAction {
  Api: String
  CallerType: String
  DomainDetails: JSON
  RemoteIpDetails: AwsGuardDutyS2g
  ServiceName: String
}

type AwsGuardDutyGetFindingsOutputFindingsServiceActionDnsRequestAction {
  Domain: String
}

type AwsGuardDutyGetFindingsOutputFindingsServiceActionNetworkConnectionAction {
  Blocked: Boolean
  ConnectionDirection: String
  LocalPortDetails: AwsGuardDutyGetFindingsOutputFindingsServiceActionNetworkConnectionActionLocalPortDetails
  Protocol: String
  RemoteIpDetails: AwsGuardDutyS2g
  RemotePortDetails: AwsGuardDutyGetFindingsOutputFindingsServiceActionNetworkConnectionActionRemotePortDetails
}

type AwsGuardDutyGetFindingsOutputFindingsServiceActionNetworkConnectionActionLocalPortDetails {
  Port: Int
  PortName: String
}

type AwsGuardDutyGetFindingsOutputFindingsServiceActionNetworkConnectionActionRemotePortDetails {
  Port: Int
  PortName: String
}

input AwsGuardDutyGetFindingsStatisticsInput {
  DetectorId: String!
  FindingCriteria: AwsGuardDutyS2tInput
  FindingStatisticTypes: [String]
}

type AwsGuardDutyGetFindingsStatisticsOutput {
  FindingStatistics: AwsGuardDutyGetFindingsStatisticsOutputFindingStatistics
}

type AwsGuardDutyGetFindingsStatisticsOutputFindingStatistics {
  CountBySeverity: JSON
}

type AwsGuardDutyGetInvitationsCountOutput {
  InvitationsCount: Int
}

input AwsGuardDutyGetIPSetInput {
  DetectorId: String!
  IpSetId: String!
}

type AwsGuardDutyGetIPSetOutput {
  Format: String
  Location: String
  Name: String
  Status: String
}

input AwsGuardDutyGetMasterAccountInput {
  DetectorId: String!
}

type AwsGuardDutyGetMasterAccountOutput {
  Master: AwsGuardDutyGetMasterAccountOutputMaster
}

type AwsGuardDutyGetMasterAccountOutputMaster {
  AccountId: String
  InvitationId: String
  InvitedAt: String
  RelationshipStatus: String
}

input AwsGuardDutyGetMembersInput {
  AccountIds: [String]
  DetectorId: String!
}

type AwsGuardDutyGetMembersOutput {
  Members: [AwsGuardDutyS3f]
  UnprocessedAccounts: [AwsGuardDutySr]
}

input AwsGuardDutyGetThreatIntelSetInput {
  DetectorId: String!
  ThreatIntelSetId: String!
}

type AwsGuardDutyGetThreatIntelSetOutput {
  Format: String
  Location: String
  Name: String
  Status: String
}

input AwsGuardDutyInviteMembersInput {
  AccountIds: [String]
  DetectorId: String!
  Message: String
}

type AwsGuardDutyInviteMembersOutput {
  UnprocessedAccounts: [AwsGuardDutySr]
}

input AwsGuardDutyListDetectorsInput {
  MaxResults: Int
  NextToken: String
}

type AwsGuardDutyListDetectorsOutput {
  DetectorIds: [String]
  NextToken: String
}

input AwsGuardDutyListFindingsInput {
  DetectorId: String!
  FindingCriteria: AwsGuardDutyS2tInput
  MaxResults: Int
  NextToken: String
  SortCriteria: AwsGuardDutyS1pInput
}

type AwsGuardDutyListFindingsOutput {
  FindingIds: [String]
  NextToken: String
}

input AwsGuardDutyListInvitationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsGuardDutyListInvitationsOutput {
  Invitations: [AwsGuardDutyListInvitationsOutputInvitations]
  NextToken: String
}

type AwsGuardDutyListInvitationsOutputInvitations {
  AccountId: String
  InvitationId: String
  InvitedAt: String
  RelationshipStatus: String
}

input AwsGuardDutyListIPSetsInput {
  DetectorId: String!
  MaxResults: Int
  NextToken: String
}

type AwsGuardDutyListIPSetsOutput {
  IpSetIds: [String]
  NextToken: String
}

input AwsGuardDutyListMembersInput {
  DetectorId: String!
  MaxResults: Int
  NextToken: String
  OnlyAssociated: String
}

type AwsGuardDutyListMembersOutput {
  Members: [AwsGuardDutyS3f]
  NextToken: String
}

input AwsGuardDutyListThreatIntelSetsInput {
  DetectorId: String!
  MaxResults: Int
  NextToken: String
}

type AwsGuardDutyListThreatIntelSetsOutput {
  NextToken: String
  ThreatIntelSetIds: [String]
}

input AwsGuardDutyS1pInput {
  AttributeName: String
  OrderBy: String
}

type AwsGuardDutyS2g {
  City: AwsGuardDutyS2gCity
  Country: AwsGuardDutyS2gCountry
  GeoLocation: AwsGuardDutyS2gGeoLocation
  IpAddressV4: String
  Organization: AwsGuardDutyS2gOrganization
}

type AwsGuardDutyS2gCity {
  CityName: String
}

type AwsGuardDutyS2gCountry {
  CountryCode: String
  CountryName: String
}

type AwsGuardDutyS2gGeoLocation {
  Lat: JSON
  Lon: JSON
}

type AwsGuardDutyS2gOrganization {
  Asn: String
  AsnOrg: String
  Isp: String
  Org: String
}

input AwsGuardDutyS2tInput {
  Criterion: JSON
}

type AwsGuardDutyS3f {
  AccountId: String
  DetectorId: String
  Email: String
  InvitedAt: String
  MasterId: String
  RelationshipStatus: String
  UpdatedAt: String
}

type AwsGuardDutySr {
  AccountId: String
  Result: String
}

input AwsGuardDutyStartMonitoringMembersInput {
  AccountIds: [String]
  DetectorId: String!
}

type AwsGuardDutyStartMonitoringMembersOutput {
  UnprocessedAccounts: [AwsGuardDutySr]
}

input AwsGuardDutyStopMonitoringMembersInput {
  AccountIds: [String]
  DetectorId: String!
}

type AwsGuardDutyStopMonitoringMembersOutput {
  UnprocessedAccounts: [AwsGuardDutySr]
}

input AwsGuardDutyUnarchiveFindingsInput {
  DetectorId: String!
  FindingIds: [String]
}

input AwsGuardDutyUpdateDetectorInput {
  DetectorId: String!
  Enable: Boolean
}

input AwsGuardDutyUpdateFindingsFeedbackInput {
  Comments: String
  DetectorId: String!
  Feedback: String
  FindingIds: [String]
}

input AwsGuardDutyUpdateIPSetInput {
  Activate: Boolean
  DetectorId: String!
  IpSetId: String!
  Location: String
  Name: String
}

input AwsGuardDutyUpdateThreatIntelSetInput {
  Activate: Boolean
  DetectorId: String!
  Location: String
  Name: String
  ThreatIntelSetId: String!
}

# AWS Health APIs and Notifications (2016-08-04)
type AwsHealth {
  describeAffectedEntities(input: AwsHealthDescribeAffectedEntitiesInput!, config: AwsConfig): AwsHealthDescribeAffectedEntitiesOutput
  describeEntityAggregates(input: AwsHealthDescribeEntityAggregatesInput, config: AwsConfig): AwsHealthDescribeEntityAggregatesOutput
  describeEventAggregates(input: AwsHealthDescribeEventAggregatesInput!, config: AwsConfig): AwsHealthDescribeEventAggregatesOutput
  describeEventDetails(input: AwsHealthDescribeEventDetailsInput!, config: AwsConfig): AwsHealthDescribeEventDetailsOutput
  describeEventTypes(input: AwsHealthDescribeEventTypesInput, config: AwsConfig): AwsHealthDescribeEventTypesOutput
  describeEvents(input: AwsHealthDescribeEventsInput, config: AwsConfig): AwsHealthDescribeEventsOutput
}

input AwsHealthDescribeAffectedEntitiesFilterInput {
  eventArns: [String]!
  entityArns: [String]
  entityValues: [String]
  lastUpdatedTimes: [AwsHealthS9Input]
  tags: [JSON]
  statusCodes: [String]
}

input AwsHealthDescribeAffectedEntitiesInput {
  filter: AwsHealthDescribeAffectedEntitiesFilterInput!
  locale: String
  nextToken: String
  maxResults: Int
}

type AwsHealthDescribeAffectedEntitiesOutput {
  entities: [AwsHealthDescribeAffectedEntitiesOutputEntities]
  nextToken: String
}

type AwsHealthDescribeAffectedEntitiesOutputEntities {
  entityArn: String
  eventArn: String
  entityValue: String
  awsAccountId: String
  lastUpdatedTime: Date
  statusCode: String
  tags: JSON
}

input AwsHealthDescribeEntityAggregatesInput {
  eventArns: [String]
}

type AwsHealthDescribeEntityAggregatesOutput {
  entityAggregates: [AwsHealthDescribeEntityAggregatesOutputEntityAggregates]
}

type AwsHealthDescribeEntityAggregatesOutputEntityAggregates {
  eventArn: String
  count: Int
}

input AwsHealthDescribeEventAggregatesInput {
  filter: AwsHealthSwInput
  aggregateField: String!
  maxResults: Int
  nextToken: String
}

type AwsHealthDescribeEventAggregatesOutput {
  eventAggregates: [AwsHealthDescribeEventAggregatesOutputEventAggregates]
  nextToken: String
}

type AwsHealthDescribeEventAggregatesOutputEventAggregates {
  aggregateValue: String
  count: Int
}

input AwsHealthDescribeEventDetailsInput {
  eventArns: [String]!
  locale: String
}

type AwsHealthDescribeEventDetailsOutput {
  successfulSet: [AwsHealthDescribeEventDetailsOutputSuccessfulSet]
  failedSet: [AwsHealthDescribeEventDetailsOutputFailedSet]
}

type AwsHealthDescribeEventDetailsOutputFailedSet {
  eventArn: String
  errorName: String
  errorMessage: String
}

type AwsHealthDescribeEventDetailsOutputSuccessfulSet {
  event: AwsHealthS1i
  eventDescription: AwsHealthDescribeEventDetailsOutputSuccessfulSetEventDescription
  eventMetadata: JSON
}

type AwsHealthDescribeEventDetailsOutputSuccessfulSetEventDescription {
  latestDescription: String
}

input AwsHealthDescribeEventsInput {
  filter: AwsHealthSwInput
  nextToken: String
  maxResults: Int
  locale: String
}

type AwsHealthDescribeEventsOutput {
  events: [AwsHealthS1i]
  nextToken: String
}

input AwsHealthDescribeEventTypesFilterInput {
  eventTypeCodes: [String]
  services: [String]
  eventTypeCategories: [String]
}

input AwsHealthDescribeEventTypesInput {
  filter: AwsHealthDescribeEventTypesFilterInput
  locale: String
  nextToken: String
  maxResults: Int
}

type AwsHealthDescribeEventTypesOutput {
  eventTypes: [AwsHealthDescribeEventTypesOutputEventTypes]
  nextToken: String
}

type AwsHealthDescribeEventTypesOutputEventTypes {
  service: String
  code: String
  category: String
}

type AwsHealthS1i {
  arn: String
  service: String
  eventTypeCode: String
  eventTypeCategory: String
  region: String
  availabilityZone: String
  startTime: Date
  endTime: Date
  lastUpdatedTime: Date
  statusCode: String
}

input AwsHealthS9Input {
  from: Date
  to: Date
}

input AwsHealthSwInput {
  eventArns: [String]
  eventTypeCodes: [String]
  services: [String]
  regions: [String]
  availabilityZones: [String]
  startTimes: [AwsHealthS9Input]
  endTimes: [AwsHealthS9Input]
  lastUpdatedTimes: [AwsHealthS9Input]
  entityArns: [String]
  entityValues: [String]
  eventTypeCategories: [String]
  tags: [JSON]
  eventStatusCodes: [String]
}

# AWS Identity and Access Management (2010-05-08)
type AwsIAM {
  addClientIDToOpenIDConnectProvider(input: AwsIAMAddClientIDToOpenIDConnectProviderInput!, config: AwsConfig): JSON
  addRoleToInstanceProfile(input: AwsIAMAddRoleToInstanceProfileInput!, config: AwsConfig): JSON
  addUserToGroup(input: AwsIAMAddUserToGroupInput!, config: AwsConfig): JSON
  attachGroupPolicy(input: AwsIAMAttachGroupPolicyInput!, config: AwsConfig): JSON
  attachRolePolicy(input: AwsIAMAttachRolePolicyInput!, config: AwsConfig): JSON
  attachUserPolicy(input: AwsIAMAttachUserPolicyInput!, config: AwsConfig): JSON
  changePassword(input: AwsIAMChangePasswordInput!, config: AwsConfig): JSON
  createAccessKey(input: AwsIAMCreateAccessKeyInput, config: AwsConfig): AwsIAMCreateAccessKeyOutput
  createAccountAlias(input: AwsIAMCreateAccountAliasInput!, config: AwsConfig): JSON
  createGroup(input: AwsIAMCreateGroupInput!, config: AwsConfig): AwsIAMCreateGroupOutput
  createInstanceProfile(input: AwsIAMCreateInstanceProfileInput!, config: AwsConfig): AwsIAMCreateInstanceProfileOutput
  createLoginProfile(input: AwsIAMCreateLoginProfileInput!, config: AwsConfig): AwsIAMCreateLoginProfileOutput
  createOpenIDConnectProvider(input: AwsIAMCreateOpenIDConnectProviderInput!, config: AwsConfig): AwsIAMCreateOpenIDConnectProviderOutput
  createPolicy(input: AwsIAMCreatePolicyInput!, config: AwsConfig): AwsIAMCreatePolicyOutput
  createPolicyVersion(input: AwsIAMCreatePolicyVersionInput!, config: AwsConfig): AwsIAMCreatePolicyVersionOutput
  createRole(input: AwsIAMCreateRoleInput!, config: AwsConfig): AwsIAMCreateRoleOutput
  createSAMLProvider(input: AwsIAMCreateSAMLProviderInput!, config: AwsConfig): AwsIAMCreateSAMLProviderOutput
  createServiceLinkedRole(input: AwsIAMCreateServiceLinkedRoleInput!, config: AwsConfig): AwsIAMCreateServiceLinkedRoleOutput
  createServiceSpecificCredential(input: AwsIAMCreateServiceSpecificCredentialInput!, config: AwsConfig): AwsIAMCreateServiceSpecificCredentialOutput
  createUser(input: AwsIAMCreateUserInput!, config: AwsConfig): AwsIAMCreateUserOutput
  createVirtualMFADevice(input: AwsIAMCreateVirtualMFADeviceInput!, config: AwsConfig): AwsIAMCreateVirtualMFADeviceOutput
  deactivateMFADevice(input: AwsIAMDeactivateMFADeviceInput!, config: AwsConfig): JSON
  deleteAccessKey(input: AwsIAMDeleteAccessKeyInput!, config: AwsConfig): JSON
  deleteAccountAlias(input: AwsIAMDeleteAccountAliasInput!, config: AwsConfig): JSON
  deleteAccountPasswordPolicy(config: AwsConfig): JSON
  deleteGroup(input: AwsIAMDeleteGroupInput!, config: AwsConfig): JSON
  deleteGroupPolicy(input: AwsIAMDeleteGroupPolicyInput!, config: AwsConfig): JSON
  deleteInstanceProfile(input: AwsIAMDeleteInstanceProfileInput!, config: AwsConfig): JSON
  deleteLoginProfile(input: AwsIAMDeleteLoginProfileInput!, config: AwsConfig): JSON
  deleteOpenIDConnectProvider(input: AwsIAMDeleteOpenIDConnectProviderInput!, config: AwsConfig): JSON
  deletePolicy(input: AwsIAMDeletePolicyInput!, config: AwsConfig): JSON
  deletePolicyVersion(input: AwsIAMDeletePolicyVersionInput!, config: AwsConfig): JSON
  deleteRole(input: AwsIAMDeleteRoleInput!, config: AwsConfig): JSON
  deleteRolePolicy(input: AwsIAMDeleteRolePolicyInput!, config: AwsConfig): JSON
  deleteSAMLProvider(input: AwsIAMDeleteSAMLProviderInput!, config: AwsConfig): JSON
  deleteSSHPublicKey(input: AwsIAMDeleteSSHPublicKeyInput!, config: AwsConfig): JSON
  deleteServerCertificate(input: AwsIAMDeleteServerCertificateInput!, config: AwsConfig): JSON
  deleteServiceLinkedRole(input: AwsIAMDeleteServiceLinkedRoleInput!, config: AwsConfig): AwsIAMDeleteServiceLinkedRoleOutput
  deleteServiceSpecificCredential(input: AwsIAMDeleteServiceSpecificCredentialInput!, config: AwsConfig): JSON
  deleteSigningCertificate(input: AwsIAMDeleteSigningCertificateInput!, config: AwsConfig): JSON
  deleteUser(input: AwsIAMDeleteUserInput!, config: AwsConfig): JSON
  deleteUserPolicy(input: AwsIAMDeleteUserPolicyInput!, config: AwsConfig): JSON
  deleteVirtualMFADevice(input: AwsIAMDeleteVirtualMFADeviceInput!, config: AwsConfig): JSON
  detachGroupPolicy(input: AwsIAMDetachGroupPolicyInput!, config: AwsConfig): JSON
  detachRolePolicy(input: AwsIAMDetachRolePolicyInput!, config: AwsConfig): JSON
  detachUserPolicy(input: AwsIAMDetachUserPolicyInput!, config: AwsConfig): JSON
  enableMFADevice(input: AwsIAMEnableMFADeviceInput!, config: AwsConfig): JSON
  generateCredentialReport(config: AwsConfig): AwsIAMGenerateCredentialReportOutput
  getAccessKeyLastUsed(input: AwsIAMGetAccessKeyLastUsedInput!, config: AwsConfig): AwsIAMGetAccessKeyLastUsedOutput
  getAccountAuthorizationDetails(input: AwsIAMGetAccountAuthorizationDetailsInput, config: AwsConfig): AwsIAMGetAccountAuthorizationDetailsOutput
  getAccountPasswordPolicy(config: AwsConfig): AwsIAMGetAccountPasswordPolicyOutput
  getAccountSummary(config: AwsConfig): AwsIAMGetAccountSummaryOutput
  getContextKeysForCustomPolicy(input: AwsIAMGetContextKeysForCustomPolicyInput!, config: AwsConfig): JSON
  getContextKeysForPrincipalPolicy(input: AwsIAMGetContextKeysForPrincipalPolicyInput!, config: AwsConfig): JSON
  getCredentialReport(config: AwsConfig): AwsIAMGetCredentialReportOutput
  getGroup(input: AwsIAMGetGroupInput!, config: AwsConfig): AwsIAMGetGroupOutput
  getGroupPolicy(input: AwsIAMGetGroupPolicyInput!, config: AwsConfig): AwsIAMGetGroupPolicyOutput
  getInstanceProfile(input: AwsIAMGetInstanceProfileInput!, config: AwsConfig): AwsIAMGetInstanceProfileOutput
  getLoginProfile(input: AwsIAMGetLoginProfileInput!, config: AwsConfig): AwsIAMGetLoginProfileOutput
  getOpenIDConnectProvider(input: AwsIAMGetOpenIDConnectProviderInput!, config: AwsConfig): AwsIAMGetOpenIDConnectProviderOutput
  getPolicy(input: AwsIAMGetPolicyInput!, config: AwsConfig): AwsIAMGetPolicyOutput
  getPolicyVersion(input: AwsIAMGetPolicyVersionInput!, config: AwsConfig): AwsIAMGetPolicyVersionOutput
  getRole(input: AwsIAMGetRoleInput!, config: AwsConfig): AwsIAMGetRoleOutput
  getRolePolicy(input: AwsIAMGetRolePolicyInput!, config: AwsConfig): AwsIAMGetRolePolicyOutput
  getSAMLProvider(input: AwsIAMGetSAMLProviderInput!, config: AwsConfig): AwsIAMGetSAMLProviderOutput
  getSSHPublicKey(input: AwsIAMGetSSHPublicKeyInput!, config: AwsConfig): AwsIAMGetSSHPublicKeyOutput
  getServerCertificate(input: AwsIAMGetServerCertificateInput!, config: AwsConfig): AwsIAMGetServerCertificateOutput
  getServiceLinkedRoleDeletionStatus(input: AwsIAMGetServiceLinkedRoleDeletionStatusInput!, config: AwsConfig): AwsIAMGetServiceLinkedRoleDeletionStatusOutput
  getUser(input: AwsIAMGetUserInput, config: AwsConfig): AwsIAMGetUserOutput
  getUserPolicy(input: AwsIAMGetUserPolicyInput!, config: AwsConfig): AwsIAMGetUserPolicyOutput
  listAccessKeys(input: AwsIAMListAccessKeysInput, config: AwsConfig): AwsIAMListAccessKeysOutput
  listAccountAliases(input: AwsIAMListAccountAliasesInput, config: AwsConfig): AwsIAMListAccountAliasesOutput
  listAttachedGroupPolicies(input: AwsIAMListAttachedGroupPoliciesInput!, config: AwsConfig): AwsIAMListAttachedGroupPoliciesOutput
  listAttachedRolePolicies(input: AwsIAMListAttachedRolePoliciesInput!, config: AwsConfig): AwsIAMListAttachedRolePoliciesOutput
  listAttachedUserPolicies(input: AwsIAMListAttachedUserPoliciesInput!, config: AwsConfig): AwsIAMListAttachedUserPoliciesOutput
  listEntitiesForPolicy(input: AwsIAMListEntitiesForPolicyInput!, config: AwsConfig): AwsIAMListEntitiesForPolicyOutput
  listGroupPolicies(input: AwsIAMListGroupPoliciesInput!, config: AwsConfig): AwsIAMListGroupPoliciesOutput
  listGroups(input: AwsIAMListGroupsInput, config: AwsConfig): AwsIAMListGroupsOutput
  listGroupsForUser(input: AwsIAMListGroupsForUserInput!, config: AwsConfig): AwsIAMListGroupsForUserOutput
  listInstanceProfiles(input: AwsIAMListInstanceProfilesInput, config: AwsConfig): AwsIAMListInstanceProfilesOutput
  listInstanceProfilesForRole(input: AwsIAMListInstanceProfilesForRoleInput!, config: AwsConfig): AwsIAMListInstanceProfilesForRoleOutput
  listMFADevices(input: AwsIAMListMFADevicesInput, config: AwsConfig): AwsIAMListMFADevicesOutput
  listOpenIDConnectProviders(input: JSON, config: AwsConfig): AwsIAMListOpenIDConnectProvidersOutput
  listPolicies(input: AwsIAMListPoliciesInput, config: AwsConfig): AwsIAMListPoliciesOutput
  listPolicyVersions(input: AwsIAMListPolicyVersionsInput!, config: AwsConfig): AwsIAMListPolicyVersionsOutput
  listRolePolicies(input: AwsIAMListRolePoliciesInput!, config: AwsConfig): AwsIAMListRolePoliciesOutput
  listRoles(input: AwsIAMListRolesInput, config: AwsConfig): AwsIAMListRolesOutput
  listSAMLProviders(input: JSON, config: AwsConfig): AwsIAMListSAMLProvidersOutput
  listSSHPublicKeys(input: AwsIAMListSSHPublicKeysInput, config: AwsConfig): AwsIAMListSSHPublicKeysOutput
  listServerCertificates(input: AwsIAMListServerCertificatesInput, config: AwsConfig): AwsIAMListServerCertificatesOutput
  listServiceSpecificCredentials(input: AwsIAMListServiceSpecificCredentialsInput, config: AwsConfig): AwsIAMListServiceSpecificCredentialsOutput
  listSigningCertificates(input: AwsIAMListSigningCertificatesInput, config: AwsConfig): AwsIAMListSigningCertificatesOutput
  listUserPolicies(input: AwsIAMListUserPoliciesInput!, config: AwsConfig): AwsIAMListUserPoliciesOutput
  listUsers(input: AwsIAMListUsersInput, config: AwsConfig): AwsIAMListUsersOutput
  listVirtualMFADevices(input: AwsIAMListVirtualMFADevicesInput, config: AwsConfig): AwsIAMListVirtualMFADevicesOutput
  putGroupPolicy(input: AwsIAMPutGroupPolicyInput!, config: AwsConfig): JSON
  putRolePolicy(input: AwsIAMPutRolePolicyInput!, config: AwsConfig): JSON
  putUserPolicy(input: AwsIAMPutUserPolicyInput!, config: AwsConfig): JSON
  removeClientIDFromOpenIDConnectProvider(input: AwsIAMRemoveClientIDFromOpenIDConnectProviderInput!, config: AwsConfig): JSON
  removeRoleFromInstanceProfile(input: AwsIAMRemoveRoleFromInstanceProfileInput!, config: AwsConfig): JSON
  removeUserFromGroup(input: AwsIAMRemoveUserFromGroupInput!, config: AwsConfig): JSON
  resetServiceSpecificCredential(input: AwsIAMResetServiceSpecificCredentialInput!, config: AwsConfig): AwsIAMResetServiceSpecificCredentialOutput
  resyncMFADevice(input: AwsIAMResyncMFADeviceInput!, config: AwsConfig): JSON
  setDefaultPolicyVersion(input: AwsIAMSetDefaultPolicyVersionInput!, config: AwsConfig): JSON
  simulateCustomPolicy(input: AwsIAMSimulateCustomPolicyInput!, config: AwsConfig): JSON
  simulatePrincipalPolicy(input: AwsIAMSimulatePrincipalPolicyInput!, config: AwsConfig): JSON
  updateAccessKey(input: AwsIAMUpdateAccessKeyInput!, config: AwsConfig): JSON
  updateAccountPasswordPolicy(input: AwsIAMUpdateAccountPasswordPolicyInput, config: AwsConfig): JSON
  updateAssumeRolePolicy(input: AwsIAMUpdateAssumeRolePolicyInput!, config: AwsConfig): JSON
  updateGroup(input: AwsIAMUpdateGroupInput!, config: AwsConfig): JSON
  updateLoginProfile(input: AwsIAMUpdateLoginProfileInput!, config: AwsConfig): JSON
  updateOpenIDConnectProviderThumbprint(input: AwsIAMUpdateOpenIDConnectProviderThumbprintInput!, config: AwsConfig): JSON
  updateRoleDescription(input: AwsIAMUpdateRoleDescriptionInput!, config: AwsConfig): AwsIAMUpdateRoleDescriptionOutput
  updateSAMLProvider(input: AwsIAMUpdateSAMLProviderInput!, config: AwsConfig): AwsIAMUpdateSAMLProviderOutput
  updateSSHPublicKey(input: AwsIAMUpdateSSHPublicKeyInput!, config: AwsConfig): JSON
  updateServerCertificate(input: AwsIAMUpdateServerCertificateInput!, config: AwsConfig): JSON
  updateServiceSpecificCredential(input: AwsIAMUpdateServiceSpecificCredentialInput!, config: AwsConfig): JSON
  updateSigningCertificate(input: AwsIAMUpdateSigningCertificateInput!, config: AwsConfig): JSON
  updateUser(input: AwsIAMUpdateUserInput!, config: AwsConfig): JSON
  uploadSSHPublicKey(input: AwsIAMUploadSSHPublicKeyInput!, config: AwsConfig): AwsIAMUploadSSHPublicKeyOutput
  uploadServerCertificate(input: AwsIAMUploadServerCertificateInput!, config: AwsConfig): AwsIAMUploadServerCertificateOutput
  uploadSigningCertificate(input: AwsIAMUploadSigningCertificateInput!, config: AwsConfig): AwsIAMUploadSigningCertificateOutput
}

input AwsIAMAddClientIDToOpenIDConnectProviderInput {
  OpenIDConnectProviderArn: String!
  ClientID: String!
}

input AwsIAMAddRoleToInstanceProfileInput {
  InstanceProfileName: String!
  RoleName: String!
}

input AwsIAMAddUserToGroupInput {
  GroupName: String!
  UserName: String!
}

input AwsIAMAttachGroupPolicyInput {
  GroupName: String!
  PolicyArn: String!
}

input AwsIAMAttachRolePolicyInput {
  RoleName: String!
  PolicyArn: String!
}

input AwsIAMAttachUserPolicyInput {
  UserName: String!
  PolicyArn: String!
}

input AwsIAMChangePasswordInput {
  OldPassword: String!
  NewPassword: String!
}

input AwsIAMCreateAccessKeyInput {
  UserName: String
}

type AwsIAMCreateAccessKeyOutput {
  AccessKey: AwsIAMCreateAccessKeyOutputAccessKey!
}

type AwsIAMCreateAccessKeyOutputAccessKey {
  UserName: String!
  AccessKeyId: String!
  Status: String!
  SecretAccessKey: String!
  CreateDate: Date
}

input AwsIAMCreateAccountAliasInput {
  AccountAlias: String!
}

input AwsIAMCreateGroupInput {
  Path: String
  GroupName: String!
}

type AwsIAMCreateGroupOutput {
  Group: AwsIAMSs!
}

input AwsIAMCreateInstanceProfileInput {
  InstanceProfileName: String!
  Path: String
}

type AwsIAMCreateInstanceProfileOutput {
  InstanceProfile: AwsIAMSw!
}

input AwsIAMCreateLoginProfileInput {
  UserName: String!
  Password: String!
  PasswordResetRequired: Boolean
}

type AwsIAMCreateLoginProfileOutput {
  LoginProfile: AwsIAMS14!
}

input AwsIAMCreateOpenIDConnectProviderInput {
  Url: String!
  ClientIDList: [String]
  ThumbprintList: [String]!
}

type AwsIAMCreateOpenIDConnectProviderOutput {
  OpenIDConnectProviderArn: String
}

input AwsIAMCreatePolicyInput {
  PolicyName: String!
  Path: String
  PolicyDocument: String!
  Description: String
}

type AwsIAMCreatePolicyOutput {
  Policy: AwsIAMS1g
}

input AwsIAMCreatePolicyVersionInput {
  PolicyArn: String!
  PolicyDocument: String!
  SetAsDefault: Boolean
}

type AwsIAMCreatePolicyVersionOutput {
  PolicyVersion: AwsIAMS1l
}

input AwsIAMCreateRoleInput {
  Path: String
  RoleName: String!
  AssumeRolePolicyDocument: String!
  Description: String
}

type AwsIAMCreateRoleOutput {
  Role: AwsIAMSy!
}

input AwsIAMCreateSAMLProviderInput {
  SAMLMetadataDocument: String!
  Name: String!
}

type AwsIAMCreateSAMLProviderOutput {
  SAMLProviderArn: String
}

input AwsIAMCreateServiceLinkedRoleInput {
  AWSServiceName: String!
  Description: String
  CustomSuffix: String
}

type AwsIAMCreateServiceLinkedRoleOutput {
  Role: AwsIAMSy
}

input AwsIAMCreateServiceSpecificCredentialInput {
  UserName: String!
  ServiceName: String!
}

type AwsIAMCreateServiceSpecificCredentialOutput {
  ServiceSpecificCredential: AwsIAMS1y
}

input AwsIAMCreateUserInput {
  Path: String
  UserName: String!
}

type AwsIAMCreateUserOutput {
  User: AwsIAMS24
}

input AwsIAMCreateVirtualMFADeviceInput {
  Path: String
  VirtualMFADeviceName: String!
}

type AwsIAMCreateVirtualMFADeviceOutput {
  VirtualMFADevice: AwsIAMS28!
}

input AwsIAMDeactivateMFADeviceInput {
  UserName: String!
  SerialNumber: String!
}

input AwsIAMDeleteAccessKeyInput {
  UserName: String
  AccessKeyId: String!
}

input AwsIAMDeleteAccountAliasInput {
  AccountAlias: String!
}

input AwsIAMDeleteGroupInput {
  GroupName: String!
}

input AwsIAMDeleteGroupPolicyInput {
  GroupName: String!
  PolicyName: String!
}

input AwsIAMDeleteInstanceProfileInput {
  InstanceProfileName: String!
}

input AwsIAMDeleteLoginProfileInput {
  UserName: String!
}

input AwsIAMDeleteOpenIDConnectProviderInput {
  OpenIDConnectProviderArn: String!
}

input AwsIAMDeletePolicyInput {
  PolicyArn: String!
}

input AwsIAMDeletePolicyVersionInput {
  PolicyArn: String!
  VersionId: String!
}

input AwsIAMDeleteRoleInput {
  RoleName: String!
}

input AwsIAMDeleteRolePolicyInput {
  RoleName: String!
  PolicyName: String!
}

input AwsIAMDeleteSAMLProviderInput {
  SAMLProviderArn: String!
}

input AwsIAMDeleteServerCertificateInput {
  ServerCertificateName: String!
}

input AwsIAMDeleteServiceLinkedRoleInput {
  RoleName: String!
}

type AwsIAMDeleteServiceLinkedRoleOutput {
  DeletionTaskId: String!
}

input AwsIAMDeleteServiceSpecificCredentialInput {
  UserName: String
  ServiceSpecificCredentialId: String!
}

input AwsIAMDeleteSigningCertificateInput {
  UserName: String
  CertificateId: String!
}

input AwsIAMDeleteSSHPublicKeyInput {
  UserName: String!
  SSHPublicKeyId: String!
}

input AwsIAMDeleteUserInput {
  UserName: String!
}

input AwsIAMDeleteUserPolicyInput {
  UserName: String!
  PolicyName: String!
}

input AwsIAMDeleteVirtualMFADeviceInput {
  SerialNumber: String!
}

input AwsIAMDetachGroupPolicyInput {
  GroupName: String!
  PolicyArn: String!
}

input AwsIAMDetachRolePolicyInput {
  RoleName: String!
  PolicyArn: String!
}

input AwsIAMDetachUserPolicyInput {
  UserName: String!
  PolicyArn: String!
}

input AwsIAMEnableMFADeviceInput {
  UserName: String!
  SerialNumber: String!
  AuthenticationCode1: String!
  AuthenticationCode2: String!
}

type AwsIAMGenerateCredentialReportOutput {
  State: String
  Description: String
}

input AwsIAMGetAccessKeyLastUsedInput {
  AccessKeyId: String!
}

type AwsIAMGetAccessKeyLastUsedOutput {
  UserName: String
  AccessKeyLastUsed: AwsIAMGetAccessKeyLastUsedOutputAccessKeyLastUsed
}

type AwsIAMGetAccessKeyLastUsedOutputAccessKeyLastUsed {
  LastUsedDate: Date!
  ServiceName: String!
  Region: String!
}

input AwsIAMGetAccountAuthorizationDetailsInput {
  Filter: [String]
  MaxItems: Int
  Marker: String
}

type AwsIAMGetAccountAuthorizationDetailsOutput {
  UserDetailList: [AwsIAMGetAccountAuthorizationDetailsOutputUserDetailList]
  GroupDetailList: [AwsIAMGetAccountAuthorizationDetailsOutputGroupDetailList]
  RoleDetailList: [AwsIAMGetAccountAuthorizationDetailsOutputRoleDetailList]
  Policies: [AwsIAMGetAccountAuthorizationDetailsOutputPolicies]
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMGetAccountAuthorizationDetailsOutputGroupDetailList {
  Path: String
  GroupName: String
  GroupId: String
  Arn: String
  CreateDate: Date
  GroupPolicyList: [AwsIAMS3l]
  AttachedManagedPolicies: [AwsIAMS3o]
}

type AwsIAMGetAccountAuthorizationDetailsOutputPolicies {
  PolicyName: String
  PolicyId: String
  Arn: String
  Path: String
  DefaultVersionId: String
  AttachmentCount: Int
  IsAttachable: Boolean
  Description: String
  CreateDate: Date
  UpdateDate: Date
  PolicyVersionList: [AwsIAMS1l]
}

type AwsIAMGetAccountAuthorizationDetailsOutputRoleDetailList {
  Path: String
  RoleName: String
  RoleId: String
  Arn: String
  CreateDate: Date
  AssumeRolePolicyDocument: String
  InstanceProfileList: [AwsIAMSw]
  RolePolicyList: [AwsIAMS3l]
  AttachedManagedPolicies: [AwsIAMS3o]
}

type AwsIAMGetAccountAuthorizationDetailsOutputUserDetailList {
  Path: String
  UserName: String
  UserId: String
  Arn: String
  CreateDate: Date
  UserPolicyList: [AwsIAMS3l]
  GroupList: [String]
  AttachedManagedPolicies: [AwsIAMS3o]
}

type AwsIAMGetAccountPasswordPolicyOutput {
  PasswordPolicy: AwsIAMGetAccountPasswordPolicyOutputPasswordPolicy!
}

type AwsIAMGetAccountPasswordPolicyOutputPasswordPolicy {
  MinimumPasswordLength: Int
  RequireSymbols: Boolean
  RequireNumbers: Boolean
  RequireUppercaseCharacters: Boolean
  RequireLowercaseCharacters: Boolean
  AllowUsersToChangePassword: Boolean
  ExpirePasswords: Boolean
  MaxPasswordAge: Int
  PasswordReusePrevention: Int
  HardExpiry: Boolean
}

type AwsIAMGetAccountSummaryOutput {
  SummaryMap: JSON
}

input AwsIAMGetContextKeysForCustomPolicyInput {
  PolicyInputList: [String]!
}

input AwsIAMGetContextKeysForPrincipalPolicyInput {
  PolicySourceArn: String!
  PolicyInputList: [String]
}

type AwsIAMGetCredentialReportOutput {
  Content: JSON
  ReportFormat: String
  GeneratedTime: Date
}

input AwsIAMGetGroupInput {
  GroupName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMGetGroupOutput {
  Group: AwsIAMSs!
  Users: [AwsIAMS24]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMGetGroupPolicyInput {
  GroupName: String!
  PolicyName: String!
}

type AwsIAMGetGroupPolicyOutput {
  GroupName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIAMGetInstanceProfileInput {
  InstanceProfileName: String!
}

type AwsIAMGetInstanceProfileOutput {
  InstanceProfile: AwsIAMSw!
}

input AwsIAMGetLoginProfileInput {
  UserName: String!
}

type AwsIAMGetLoginProfileOutput {
  LoginProfile: AwsIAMS14!
}

input AwsIAMGetOpenIDConnectProviderInput {
  OpenIDConnectProviderArn: String!
}

type AwsIAMGetOpenIDConnectProviderOutput {
  Url: String
  ClientIDList: [String]
  ThumbprintList: [String]
  CreateDate: Date
}

input AwsIAMGetPolicyInput {
  PolicyArn: String!
}

type AwsIAMGetPolicyOutput {
  Policy: AwsIAMS1g
}

input AwsIAMGetPolicyVersionInput {
  PolicyArn: String!
  VersionId: String!
}

type AwsIAMGetPolicyVersionOutput {
  PolicyVersion: AwsIAMS1l
}

input AwsIAMGetRoleInput {
  RoleName: String!
}

type AwsIAMGetRoleOutput {
  Role: AwsIAMSy!
}

input AwsIAMGetRolePolicyInput {
  RoleName: String!
  PolicyName: String!
}

type AwsIAMGetRolePolicyOutput {
  RoleName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIAMGetSAMLProviderInput {
  SAMLProviderArn: String!
}

type AwsIAMGetSAMLProviderOutput {
  SAMLMetadataDocument: String
  CreateDate: Date
  ValidUntil: Date
}

input AwsIAMGetServerCertificateInput {
  ServerCertificateName: String!
}

type AwsIAMGetServerCertificateOutput {
  ServerCertificate: AwsIAMGetServerCertificateOutputServerCertificate!
}

type AwsIAMGetServerCertificateOutputServerCertificate {
  ServerCertificateMetadata: AwsIAMS5b!
  CertificateBody: String!
  CertificateChain: String
}

input AwsIAMGetServiceLinkedRoleDeletionStatusInput {
  DeletionTaskId: String!
}

type AwsIAMGetServiceLinkedRoleDeletionStatusOutput {
  Status: String!
  Reason: AwsIAMGetServiceLinkedRoleDeletionStatusOutputReason
}

type AwsIAMGetServiceLinkedRoleDeletionStatusOutputReason {
  Reason: String
  RoleUsageList: [AwsIAMGetServiceLinkedRoleDeletionStatusOutputReasonRoleUsageList]
}

type AwsIAMGetServiceLinkedRoleDeletionStatusOutputReasonRoleUsageList {
  Region: String
  Resources: [String]
}

input AwsIAMGetSSHPublicKeyInput {
  UserName: String!
  SSHPublicKeyId: String!
  Encoding: String!
}

type AwsIAMGetSSHPublicKeyOutput {
  SSHPublicKey: AwsIAMS55
}

input AwsIAMGetUserInput {
  UserName: String
}

type AwsIAMGetUserOutput {
  User: AwsIAMS24!
}

input AwsIAMGetUserPolicyInput {
  UserName: String!
  PolicyName: String!
}

type AwsIAMGetUserPolicyOutput {
  UserName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIAMListAccessKeysInput {
  UserName: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListAccessKeysOutput {
  AccessKeyMetadata: [AwsIAMListAccessKeysOutputAccessKeyMetadata]!
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMListAccessKeysOutputAccessKeyMetadata {
  UserName: String
  AccessKeyId: String
  Status: String
  CreateDate: Date
}

input AwsIAMListAccountAliasesInput {
  Marker: String
  MaxItems: Int
}

type AwsIAMListAccountAliasesOutput {
  AccountAliases: [String]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListAttachedGroupPoliciesInput {
  GroupName: String!
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListAttachedGroupPoliciesOutput {
  AttachedPolicies: [AwsIAMS3o]
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListAttachedRolePoliciesInput {
  RoleName: String!
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListAttachedRolePoliciesOutput {
  AttachedPolicies: [AwsIAMS3o]
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListAttachedUserPoliciesInput {
  UserName: String!
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListAttachedUserPoliciesOutput {
  AttachedPolicies: [AwsIAMS3o]
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListEntitiesForPolicyInput {
  PolicyArn: String!
  EntityFilter: String
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListEntitiesForPolicyOutput {
  PolicyGroups: [AwsIAMListEntitiesForPolicyOutputPolicyGroups]
  PolicyUsers: [AwsIAMListEntitiesForPolicyOutputPolicyUsers]
  PolicyRoles: [AwsIAMListEntitiesForPolicyOutputPolicyRoles]
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMListEntitiesForPolicyOutputPolicyGroups {
  GroupName: String
  GroupId: String
}

type AwsIAMListEntitiesForPolicyOutputPolicyRoles {
  RoleName: String
  RoleId: String
}

type AwsIAMListEntitiesForPolicyOutputPolicyUsers {
  UserName: String
  UserId: String
}

input AwsIAMListGroupPoliciesInput {
  GroupName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListGroupPoliciesOutput {
  PolicyNames: [String]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListGroupsForUserInput {
  UserName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListGroupsForUserOutput {
  Groups: [AwsIAMSs]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListGroupsInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListGroupsOutput {
  Groups: [AwsIAMSs]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListInstanceProfilesForRoleInput {
  RoleName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListInstanceProfilesForRoleOutput {
  InstanceProfiles: [AwsIAMSw]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListInstanceProfilesInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListInstanceProfilesOutput {
  InstanceProfiles: [AwsIAMSw]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListMFADevicesInput {
  UserName: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListMFADevicesOutput {
  MFADevices: [AwsIAMListMFADevicesOutputMFADevices]!
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMListMFADevicesOutputMFADevices {
  UserName: String!
  SerialNumber: String!
  EnableDate: Date!
}

type AwsIAMListOpenIDConnectProvidersOutput {
  OpenIDConnectProviderList: [AwsIAMListOpenIDConnectProvidersOutputOpenIDConnectProviderList]
}

type AwsIAMListOpenIDConnectProvidersOutputOpenIDConnectProviderList {
  Arn: String
}

input AwsIAMListPoliciesInput {
  Scope: String
  OnlyAttached: Boolean
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListPoliciesOutput {
  Policies: [AwsIAMS1g]
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListPolicyVersionsInput {
  PolicyArn: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListPolicyVersionsOutput {
  Versions: [AwsIAMS1l]
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListRolePoliciesInput {
  RoleName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListRolePoliciesOutput {
  PolicyNames: [String]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListRolesInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListRolesOutput {
  Roles: [AwsIAMSy]!
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMListSAMLProvidersOutput {
  SAMLProviderList: [AwsIAMListSAMLProvidersOutputSAMLProviderList]
}

type AwsIAMListSAMLProvidersOutputSAMLProviderList {
  Arn: String
  ValidUntil: Date
  CreateDate: Date
}

input AwsIAMListServerCertificatesInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListServerCertificatesOutput {
  ServerCertificateMetadataList: [AwsIAMS5b]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListServiceSpecificCredentialsInput {
  UserName: String
  ServiceName: String
}

type AwsIAMListServiceSpecificCredentialsOutput {
  ServiceSpecificCredentials: [AwsIAMListServiceSpecificCredentialsOutputServiceSpecificCredentials]
}

type AwsIAMListServiceSpecificCredentialsOutputServiceSpecificCredentials {
  UserName: String!
  Status: String!
  ServiceUserName: String!
  CreateDate: Date!
  ServiceSpecificCredentialId: String!
  ServiceName: String!
}

input AwsIAMListSigningCertificatesInput {
  UserName: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListSigningCertificatesOutput {
  Certificates: [AwsIAMS7p]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListSSHPublicKeysInput {
  UserName: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListSSHPublicKeysOutput {
  SSHPublicKeys: [AwsIAMListSSHPublicKeysOutputSSHPublicKeys]
  IsTruncated: Boolean
  Marker: String
}

type AwsIAMListSSHPublicKeysOutputSSHPublicKeys {
  UserName: String!
  SSHPublicKeyId: String!
  Status: String!
  UploadDate: Date!
}

input AwsIAMListUserPoliciesInput {
  UserName: String!
  Marker: String
  MaxItems: Int
}

type AwsIAMListUserPoliciesOutput {
  PolicyNames: [String]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListUsersInput {
  PathPrefix: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListUsersOutput {
  Users: [AwsIAMS24]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMListVirtualMFADevicesInput {
  AssignmentStatus: String
  Marker: String
  MaxItems: Int
}

type AwsIAMListVirtualMFADevicesOutput {
  VirtualMFADevices: [AwsIAMS28]!
  IsTruncated: Boolean
  Marker: String
}

input AwsIAMPutGroupPolicyInput {
  GroupName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIAMPutRolePolicyInput {
  RoleName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIAMPutUserPolicyInput {
  UserName: String!
  PolicyName: String!
  PolicyDocument: String!
}

input AwsIAMRemoveClientIDFromOpenIDConnectProviderInput {
  OpenIDConnectProviderArn: String!
  ClientID: String!
}

input AwsIAMRemoveRoleFromInstanceProfileInput {
  InstanceProfileName: String!
  RoleName: String!
}

input AwsIAMRemoveUserFromGroupInput {
  GroupName: String!
  UserName: String!
}

input AwsIAMResetServiceSpecificCredentialInput {
  UserName: String
  ServiceSpecificCredentialId: String!
}

type AwsIAMResetServiceSpecificCredentialOutput {
  ServiceSpecificCredential: AwsIAMS1y
}

input AwsIAMResyncMFADeviceInput {
  UserName: String!
  SerialNumber: String!
  AuthenticationCode1: String!
  AuthenticationCode2: String!
}

type AwsIAMS14 {
  UserName: String!
  CreateDate: Date!
  PasswordResetRequired: Boolean
}

type AwsIAMS1g {
  PolicyName: String
  PolicyId: String
  Arn: String
  Path: String
  DefaultVersionId: String
  AttachmentCount: Int
  IsAttachable: Boolean
  Description: String
  CreateDate: Date
  UpdateDate: Date
}

type AwsIAMS1l {
  Document: String
  VersionId: String
  IsDefaultVersion: Boolean
  CreateDate: Date
}

type AwsIAMS1y {
  CreateDate: Date!
  ServiceName: String!
  ServiceUserName: String!
  ServicePassword: String!
  ServiceSpecificCredentialId: String!
  UserName: String!
  Status: String!
}

type AwsIAMS24 {
  Path: String!
  UserName: String!
  UserId: String!
  Arn: String!
  CreateDate: Date!
  PasswordLastUsed: Date
}

type AwsIAMS28 {
  SerialNumber: String!
  Base32StringSeed: JSON
  QRCodePNG: JSON
  User: AwsIAMS24
  EnableDate: Date
}

type AwsIAMS3l {
  PolicyName: String
  PolicyDocument: String
}

type AwsIAMS3o {
  PolicyName: String
  PolicyArn: String
}

type AwsIAMS55 {
  UserName: String!
  SSHPublicKeyId: String!
  Fingerprint: String!
  SSHPublicKeyBody: String!
  Status: String!
  UploadDate: Date
}

type AwsIAMS5b {
  Path: String!
  ServerCertificateName: String!
  ServerCertificateId: String!
  Arn: String!
  UploadDate: Date
  Expiration: Date
}

type AwsIAMS7p {
  UserName: String!
  CertificateId: String!
  CertificateBody: String!
  Status: String!
  UploadDate: Date
}

input AwsIAMS8dInput {
  ContextKeyName: String
  ContextKeyValues: [String]
  ContextKeyType: String
}

input AwsIAMSetDefaultPolicyVersionInput {
  PolicyArn: String!
  VersionId: String!
}

input AwsIAMSimulateCustomPolicyInput {
  PolicyInputList: [String]!
  ActionNames: [String]!
  ResourceArns: [String]
  ResourcePolicy: String
  ResourceOwner: String
  CallerArn: String
  ContextEntries: [AwsIAMS8dInput]
  ResourceHandlingOption: String
  MaxItems: Int
  Marker: String
}

input AwsIAMSimulatePrincipalPolicyInput {
  PolicySourceArn: String!
  PolicyInputList: [String]
  ActionNames: [String]!
  ResourceArns: [String]
  ResourcePolicy: String
  ResourceOwner: String
  CallerArn: String
  ContextEntries: [AwsIAMS8dInput]
  ResourceHandlingOption: String
  MaxItems: Int
  Marker: String
}

type AwsIAMSs {
  Path: String!
  GroupName: String!
  GroupId: String!
  Arn: String!
  CreateDate: Date!
}

type AwsIAMSw {
  Path: String!
  InstanceProfileName: String!
  InstanceProfileId: String!
  Arn: String!
  CreateDate: Date!
  Roles: [AwsIAMSy]!
}

type AwsIAMSy {
  Path: String!
  RoleName: String!
  RoleId: String!
  Arn: String!
  CreateDate: Date!
  AssumeRolePolicyDocument: String
  Description: String
}

input AwsIAMUpdateAccessKeyInput {
  UserName: String
  AccessKeyId: String!
  Status: String!
}

input AwsIAMUpdateAccountPasswordPolicyInput {
  MinimumPasswordLength: Int
  RequireSymbols: Boolean
  RequireNumbers: Boolean
  RequireUppercaseCharacters: Boolean
  RequireLowercaseCharacters: Boolean
  AllowUsersToChangePassword: Boolean
  MaxPasswordAge: Int
  PasswordReusePrevention: Int
  HardExpiry: Boolean
}

input AwsIAMUpdateAssumeRolePolicyInput {
  RoleName: String!
  PolicyDocument: String!
}

input AwsIAMUpdateGroupInput {
  GroupName: String!
  NewPath: String
  NewGroupName: String
}

input AwsIAMUpdateLoginProfileInput {
  UserName: String!
  Password: String
  PasswordResetRequired: Boolean
}

input AwsIAMUpdateOpenIDConnectProviderThumbprintInput {
  OpenIDConnectProviderArn: String!
  ThumbprintList: [String]!
}

input AwsIAMUpdateRoleDescriptionInput {
  RoleName: String!
  Description: String!
}

type AwsIAMUpdateRoleDescriptionOutput {
  Role: AwsIAMSy
}

input AwsIAMUpdateSAMLProviderInput {
  SAMLMetadataDocument: String!
  SAMLProviderArn: String!
}

type AwsIAMUpdateSAMLProviderOutput {
  SAMLProviderArn: String
}

input AwsIAMUpdateServerCertificateInput {
  ServerCertificateName: String!
  NewPath: String
  NewServerCertificateName: String
}

input AwsIAMUpdateServiceSpecificCredentialInput {
  UserName: String
  ServiceSpecificCredentialId: String!
  Status: String!
}

input AwsIAMUpdateSigningCertificateInput {
  UserName: String
  CertificateId: String!
  Status: String!
}

input AwsIAMUpdateSSHPublicKeyInput {
  UserName: String!
  SSHPublicKeyId: String!
  Status: String!
}

input AwsIAMUpdateUserInput {
  UserName: String!
  NewPath: String
  NewUserName: String
}

input AwsIAMUploadServerCertificateInput {
  Path: String
  ServerCertificateName: String!
  CertificateBody: String!
  PrivateKey: String!
  CertificateChain: String
}

type AwsIAMUploadServerCertificateOutput {
  ServerCertificateMetadata: AwsIAMS5b
}

input AwsIAMUploadSigningCertificateInput {
  UserName: String
  CertificateBody: String!
}

type AwsIAMUploadSigningCertificateOutput {
  Certificate: AwsIAMS7p!
}

input AwsIAMUploadSSHPublicKeyInput {
  UserName: String!
  SSHPublicKeyBody: String!
}

type AwsIAMUploadSSHPublicKeyOutput {
  SSHPublicKey: AwsIAMS55
}

# AWS Import/Export (2010-06-01)
type AwsImportExport {
  cancelJob(input: AwsImportExportCancelJobInput!, config: AwsConfig): AwsImportExportCancelJobOutput
  createJob(input: AwsImportExportCreateJobInput!, config: AwsConfig): AwsImportExportCreateJobOutput
  getShippingLabel(input: AwsImportExportGetShippingLabelInput!, config: AwsConfig): AwsImportExportGetShippingLabelOutput
  getStatus(input: AwsImportExportGetStatusInput!, config: AwsConfig): AwsImportExportGetStatusOutput
  listJobs(input: AwsImportExportListJobsInput, config: AwsConfig): AwsImportExportListJobsOutput
  updateJob(input: AwsImportExportUpdateJobInput!, config: AwsConfig): AwsImportExportUpdateJobOutput
}

input AwsImportExportCancelJobInput {
  JobId: String!
  APIVersion: String
}

type AwsImportExportCancelJobOutput {
  Success: Boolean
}

input AwsImportExportCreateJobInput {
  JobType: String!
  Manifest: String!
  ManifestAddendum: String
  ValidateOnly: Boolean!
  APIVersion: String
}

type AwsImportExportCreateJobOutput {
  JobId: String
  JobType: String
  Signature: String
  SignatureFileContents: String
  WarningMessage: String
  ArtifactList: [AwsImportExportSf]
}

input AwsImportExportGetShippingLabelInput {
  jobIds: [String]!
  name: String
  company: String
  phoneNumber: String
  country: String
  stateOrProvince: String
  city: String
  postalCode: String
  street1: String
  street2: String
  street3: String
  APIVersion: String
}

type AwsImportExportGetShippingLabelOutput {
  ShippingLabelURL: String
  Warning: String
}

input AwsImportExportGetStatusInput {
  JobId: String!
  APIVersion: String
}

type AwsImportExportGetStatusOutput {
  JobId: String
  JobType: String
  LocationCode: String
  LocationMessage: String
  ProgressCode: String
  ProgressMessage: String
  Carrier: String
  TrackingNumber: String
  LogBucket: String
  LogKey: String
  ErrorCount: Int
  Signature: String
  SignatureFileContents: String
  CurrentManifest: String
  CreationDate: Date
  ArtifactList: [AwsImportExportSf]
}

input AwsImportExportListJobsInput {
  MaxJobs: Int
  Marker: String
  APIVersion: String
}

type AwsImportExportListJobsOutput {
  Jobs: [AwsImportExportListJobsOutputJobs]
  IsTruncated: Boolean
}

type AwsImportExportListJobsOutputJobs {
  JobId: String
  CreationDate: Date
  IsCanceled: Boolean
  JobType: String
}

type AwsImportExportSf {
  Description: String
  URL: String
}

input AwsImportExportUpdateJobInput {
  JobId: String!
  Manifest: String!
  JobType: String!
  ValidateOnly: Boolean!
  APIVersion: String
}

type AwsImportExportUpdateJobOutput {
  Success: Boolean
  WarningMessage: String
  ArtifactList: [AwsImportExportSf]
}

# Amazon Inspector (2016-02-16)
type AwsInspector {
  addAttributesToFindings(input: AwsInspectorAddAttributesToFindingsInput!, config: AwsConfig): AwsInspectorAddAttributesToFindingsOutput
  createAssessmentTarget(input: AwsInspectorCreateAssessmentTargetInput!, config: AwsConfig): AwsInspectorCreateAssessmentTargetOutput
  createAssessmentTemplate(input: AwsInspectorCreateAssessmentTemplateInput!, config: AwsConfig): AwsInspectorCreateAssessmentTemplateOutput
  createResourceGroup(input: AwsInspectorCreateResourceGroupInput!, config: AwsConfig): AwsInspectorCreateResourceGroupOutput
  deleteAssessmentRun(input: AwsInspectorDeleteAssessmentRunInput!, config: AwsConfig): JSON
  deleteAssessmentTarget(input: AwsInspectorDeleteAssessmentTargetInput!, config: AwsConfig): JSON
  deleteAssessmentTemplate(input: AwsInspectorDeleteAssessmentTemplateInput!, config: AwsConfig): JSON
  describeAssessmentRuns(input: AwsInspectorDescribeAssessmentRunsInput!, config: AwsConfig): AwsInspectorDescribeAssessmentRunsOutput
  describeAssessmentTargets(input: AwsInspectorDescribeAssessmentTargetsInput!, config: AwsConfig): AwsInspectorDescribeAssessmentTargetsOutput
  describeAssessmentTemplates(input: AwsInspectorDescribeAssessmentTemplatesInput!, config: AwsConfig): AwsInspectorDescribeAssessmentTemplatesOutput
  describeCrossAccountAccessRole(config: AwsConfig): AwsInspectorDescribeCrossAccountAccessRoleOutput
  describeFindings(input: AwsInspectorDescribeFindingsInput!, config: AwsConfig): AwsInspectorDescribeFindingsOutput
  describeResourceGroups(input: AwsInspectorDescribeResourceGroupsInput!, config: AwsConfig): AwsInspectorDescribeResourceGroupsOutput
  describeRulesPackages(input: AwsInspectorDescribeRulesPackagesInput!, config: AwsConfig): AwsInspectorDescribeRulesPackagesOutput
  getAssessmentReport(input: AwsInspectorGetAssessmentReportInput!, config: AwsConfig): AwsInspectorGetAssessmentReportOutput
  getTelemetryMetadata(input: AwsInspectorGetTelemetryMetadataInput!, config: AwsConfig): AwsInspectorGetTelemetryMetadataOutput
  listAssessmentRunAgents(input: AwsInspectorListAssessmentRunAgentsInput!, config: AwsConfig): AwsInspectorListAssessmentRunAgentsOutput
  listAssessmentRuns(input: AwsInspectorListAssessmentRunsInput, config: AwsConfig): AwsInspectorListAssessmentRunsOutput
  listAssessmentTargets(input: AwsInspectorListAssessmentTargetsInput, config: AwsConfig): AwsInspectorListAssessmentTargetsOutput
  listAssessmentTemplates(input: AwsInspectorListAssessmentTemplatesInput, config: AwsConfig): AwsInspectorListAssessmentTemplatesOutput
  listEventSubscriptions(input: AwsInspectorListEventSubscriptionsInput, config: AwsConfig): AwsInspectorListEventSubscriptionsOutput
  listFindings(input: AwsInspectorListFindingsInput, config: AwsConfig): AwsInspectorListFindingsOutput
  listRulesPackages(input: AwsInspectorListRulesPackagesInput, config: AwsConfig): AwsInspectorListRulesPackagesOutput
  listTagsForResource(input: AwsInspectorListTagsForResourceInput!, config: AwsConfig): AwsInspectorListTagsForResourceOutput
  previewAgents(input: AwsInspectorPreviewAgentsInput!, config: AwsConfig): AwsInspectorPreviewAgentsOutput
  registerCrossAccountAccessRole(input: AwsInspectorRegisterCrossAccountAccessRoleInput!, config: AwsConfig): JSON
  removeAttributesFromFindings(input: AwsInspectorRemoveAttributesFromFindingsInput!, config: AwsConfig): AwsInspectorRemoveAttributesFromFindingsOutput
  setTagsForResource(input: AwsInspectorSetTagsForResourceInput!, config: AwsConfig): JSON
  startAssessmentRun(input: AwsInspectorStartAssessmentRunInput!, config: AwsConfig): AwsInspectorStartAssessmentRunOutput
  stopAssessmentRun(input: AwsInspectorStopAssessmentRunInput!, config: AwsConfig): JSON
  subscribeToEvent(input: AwsInspectorSubscribeToEventInput!, config: AwsConfig): JSON
  unsubscribeFromEvent(input: AwsInspectorUnsubscribeFromEventInput!, config: AwsConfig): JSON
  updateAssessmentTarget(input: AwsInspectorUpdateAssessmentTargetInput!, config: AwsConfig): JSON
}

input AwsInspectorAddAttributesToFindingsInput {
  findingArns: [String]!
  attributes: [AwsInspectorS5Input]!
}

type AwsInspectorAddAttributesToFindingsOutput {
  failedItems: JSON!
}

input AwsInspectorCreateAssessmentTargetInput {
  assessmentTargetName: String!
  resourceGroupArn: String!
}

type AwsInspectorCreateAssessmentTargetOutput {
  assessmentTargetArn: String!
}

input AwsInspectorCreateAssessmentTemplateInput {
  assessmentTargetArn: String!
  assessmentTemplateName: String!
  durationInSeconds: Int!
  rulesPackageArns: [String]!
  userAttributesForFindings: [AwsInspectorS5Input]
}

type AwsInspectorCreateAssessmentTemplateOutput {
  assessmentTemplateArn: String!
}

input AwsInspectorCreateResourceGroupInput {
  resourceGroupTags: [AwsInspectorSmInput]!
}

type AwsInspectorCreateResourceGroupOutput {
  resourceGroupArn: String!
}

input AwsInspectorDeleteAssessmentRunInput {
  assessmentRunArn: String!
}

input AwsInspectorDeleteAssessmentTargetInput {
  assessmentTargetArn: String!
}

input AwsInspectorDeleteAssessmentTemplateInput {
  assessmentTemplateArn: String!
}

input AwsInspectorDescribeAssessmentRunsInput {
  assessmentRunArns: [String]!
}

type AwsInspectorDescribeAssessmentRunsOutput {
  assessmentRuns: [AwsInspectorDescribeAssessmentRunsOutputAssessmentRuns]!
  failedItems: JSON!
}

type AwsInspectorDescribeAssessmentRunsOutputAssessmentRuns {
  arn: String!
  name: String!
  assessmentTemplateArn: String!
  state: String!
  durationInSeconds: Int!
  rulesPackageArns: [String]!
  userAttributesForFindings: [AwsInspectorS5]!
  createdAt: Date!
  startedAt: Date
  completedAt: Date
  stateChangedAt: Date!
  dataCollected: Boolean!
  stateChanges: [AwsInspectorDescribeAssessmentRunsOutputAssessmentRunsStateChanges]!
  notifications: [AwsInspectorDescribeAssessmentRunsOutputAssessmentRunsNotifications]!
  findingCounts: JSON!
}

type AwsInspectorDescribeAssessmentRunsOutputAssessmentRunsNotifications {
  date: Date!
  event: String!
  message: String
  error: Boolean!
  snsTopicArn: String
  snsPublishStatusCode: String
}

type AwsInspectorDescribeAssessmentRunsOutputAssessmentRunsStateChanges {
  stateChangedAt: Date!
  state: String!
}

input AwsInspectorDescribeAssessmentTargetsInput {
  assessmentTargetArns: [String]!
}

type AwsInspectorDescribeAssessmentTargetsOutput {
  assessmentTargets: [AwsInspectorDescribeAssessmentTargetsOutputAssessmentTargets]!
  failedItems: JSON!
}

type AwsInspectorDescribeAssessmentTargetsOutputAssessmentTargets {
  arn: String!
  name: String!
  resourceGroupArn: String!
  createdAt: Date!
  updatedAt: Date!
}

input AwsInspectorDescribeAssessmentTemplatesInput {
  assessmentTemplateArns: [String]!
}

type AwsInspectorDescribeAssessmentTemplatesOutput {
  assessmentTemplates: [AwsInspectorDescribeAssessmentTemplatesOutputAssessmentTemplates]!
  failedItems: JSON!
}

type AwsInspectorDescribeAssessmentTemplatesOutputAssessmentTemplates {
  arn: String!
  name: String!
  assessmentTargetArn: String!
  durationInSeconds: Int!
  rulesPackageArns: [String]!
  userAttributesForFindings: [AwsInspectorS5]!
  createdAt: Date!
}

type AwsInspectorDescribeCrossAccountAccessRoleOutput {
  roleArn: String!
  valid: Boolean!
  registeredAt: Date!
}

input AwsInspectorDescribeFindingsInput {
  findingArns: [String]!
  locale: String
}

type AwsInspectorDescribeFindingsOutput {
  findings: [AwsInspectorDescribeFindingsOutputFindings]!
  failedItems: JSON!
}

type AwsInspectorDescribeFindingsOutputFindings {
  arn: String!
  schemaVersion: Int
  service: String
  serviceAttributes: AwsInspectorDescribeFindingsOutputFindingsServiceAttributes
  assetType: String
  assetAttributes: AwsInspectorDescribeFindingsOutputFindingsAssetAttributes
  id: String
  title: String
  description: String
  recommendation: String
  severity: String
  numericSeverity: JSON
  confidence: Int
  indicatorOfCompromise: Boolean
  attributes: [AwsInspectorS5]!
  userAttributes: [AwsInspectorS5]!
  createdAt: Date!
  updatedAt: Date!
}

type AwsInspectorDescribeFindingsOutputFindingsAssetAttributes {
  schemaVersion: Int!
  agentId: String
  autoScalingGroup: String
  amiId: String
  hostname: String
  ipv4Addresses: [String]
}

type AwsInspectorDescribeFindingsOutputFindingsServiceAttributes {
  schemaVersion: Int!
  assessmentRunArn: String
  rulesPackageArn: String
}

input AwsInspectorDescribeResourceGroupsInput {
  resourceGroupArns: [String]!
}

type AwsInspectorDescribeResourceGroupsOutput {
  resourceGroups: [AwsInspectorDescribeResourceGroupsOutputResourceGroups]!
  failedItems: JSON!
}

type AwsInspectorDescribeResourceGroupsOutputResourceGroups {
  arn: String!
  tags: [AwsInspectorSm]!
  createdAt: Date!
}

input AwsInspectorDescribeRulesPackagesInput {
  rulesPackageArns: [String]!
  locale: String
}

type AwsInspectorDescribeRulesPackagesOutput {
  rulesPackages: [AwsInspectorDescribeRulesPackagesOutputRulesPackages]!
  failedItems: JSON!
}

type AwsInspectorDescribeRulesPackagesOutputRulesPackages {
  arn: String!
  name: String!
  version: String!
  provider: String!
  description: String
}

input AwsInspectorGetAssessmentReportInput {
  assessmentRunArn: String!
  reportFileFormat: String!
  reportType: String!
}

type AwsInspectorGetAssessmentReportOutput {
  status: String!
  url: String
}

input AwsInspectorGetTelemetryMetadataInput {
  assessmentRunArn: String!
}

type AwsInspectorGetTelemetryMetadataOutput {
  telemetryMetadata: [AwsInspectorS2q]!
}

input AwsInspectorListAssessmentRunAgentsFilterInput {
  agentHealths: [String]!
  agentHealthCodes: [String]!
}

input AwsInspectorListAssessmentRunAgentsInput {
  assessmentRunArn: String!
  filter: AwsInspectorListAssessmentRunAgentsFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListAssessmentRunAgentsOutput {
  assessmentRunAgents: [AwsInspectorListAssessmentRunAgentsOutputAssessmentRunAgents]!
  nextToken: String
}

type AwsInspectorListAssessmentRunAgentsOutputAssessmentRunAgents {
  agentId: String!
  assessmentRunArn: String!
  agentHealth: String!
  agentHealthCode: String!
  agentHealthDetails: String
  autoScalingGroup: String
  telemetryMetadata: [AwsInspectorS2q]!
}

input AwsInspectorListAssessmentRunsFilterInput {
  namePattern: String
  states: [String]
  durationRange: AwsInspectorS3aInput
  rulesPackageArns: [String]
  startTimeRange: AwsInspectorS3cInput
  completionTimeRange: AwsInspectorS3cInput
  stateChangeTimeRange: AwsInspectorS3cInput
}

input AwsInspectorListAssessmentRunsInput {
  assessmentTemplateArns: [String]
  filter: AwsInspectorListAssessmentRunsFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListAssessmentRunsOutput {
  assessmentRunArns: [String]!
  nextToken: String
}

input AwsInspectorListAssessmentTargetsFilterInput {
  assessmentTargetNamePattern: String
}

input AwsInspectorListAssessmentTargetsInput {
  filter: AwsInspectorListAssessmentTargetsFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListAssessmentTargetsOutput {
  assessmentTargetArns: [String]!
  nextToken: String
}

input AwsInspectorListAssessmentTemplatesFilterInput {
  namePattern: String
  durationRange: AwsInspectorS3aInput
  rulesPackageArns: [String]
}

input AwsInspectorListAssessmentTemplatesInput {
  assessmentTargetArns: [String]
  filter: AwsInspectorListAssessmentTemplatesFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListAssessmentTemplatesOutput {
  assessmentTemplateArns: [String]!
  nextToken: String
}

input AwsInspectorListEventSubscriptionsInput {
  resourceArn: String
  nextToken: String
  maxResults: Int
}

type AwsInspectorListEventSubscriptionsOutput {
  subscriptions: [AwsInspectorListEventSubscriptionsOutputSubscriptions]!
  nextToken: String
}

type AwsInspectorListEventSubscriptionsOutputSubscriptions {
  resourceArn: String!
  topicArn: String!
  eventSubscriptions: [AwsInspectorListEventSubscriptionsOutputSubscriptionsEventSubscriptions]!
}

type AwsInspectorListEventSubscriptionsOutputSubscriptionsEventSubscriptions {
  event: String!
  subscribedAt: Date!
}

input AwsInspectorListFindingsFilterInput {
  agentIds: [String]
  autoScalingGroups: [String]
  ruleNames: [String]
  severities: [String]
  rulesPackageArns: [String]
  attributes: [AwsInspectorS5Input]
  userAttributes: [AwsInspectorS5Input]
  creationTimeRange: AwsInspectorS3cInput
}

input AwsInspectorListFindingsInput {
  assessmentRunArns: [String]
  filter: AwsInspectorListFindingsFilterInput
  nextToken: String
  maxResults: Int
}

type AwsInspectorListFindingsOutput {
  findingArns: [String]!
  nextToken: String
}

input AwsInspectorListRulesPackagesInput {
  nextToken: String
  maxResults: Int
}

type AwsInspectorListRulesPackagesOutput {
  rulesPackageArns: [String]!
  nextToken: String
}

input AwsInspectorListTagsForResourceInput {
  resourceArn: String!
}

type AwsInspectorListTagsForResourceOutput {
  tags: [AwsInspectorS44]!
}

input AwsInspectorPreviewAgentsInput {
  previewAgentsArn: String!
  nextToken: String
  maxResults: Int
}

type AwsInspectorPreviewAgentsOutput {
  agentPreviews: [AwsInspectorPreviewAgentsOutputAgentPreviews]!
  nextToken: String
}

type AwsInspectorPreviewAgentsOutputAgentPreviews {
  agentId: String!
  autoScalingGroup: String
}

input AwsInspectorRegisterCrossAccountAccessRoleInput {
  roleArn: String!
}

input AwsInspectorRemoveAttributesFromFindingsInput {
  findingArns: [String]!
  attributeKeys: [String]!
}

type AwsInspectorRemoveAttributesFromFindingsOutput {
  failedItems: JSON!
}

type AwsInspectorS2q {
  messageType: String!
  count: JSON!
  dataSize: JSON
}

input AwsInspectorS3aInput {
  minSeconds: Int
  maxSeconds: Int
}

input AwsInspectorS3cInput {
  beginDate: Date
  endDate: Date
}

type AwsInspectorS44 {
  key: String!
  value: String
}

input AwsInspectorS44Input {
  key: String!
  value: String
}

type AwsInspectorS5 {
  key: String!
  value: String
}

input AwsInspectorS5Input {
  key: String!
  value: String
}

input AwsInspectorSetTagsForResourceInput {
  resourceArn: String!
  tags: [AwsInspectorS44Input]
}

type AwsInspectorSm {
  key: String!
  value: String
}

input AwsInspectorSmInput {
  key: String!
  value: String
}

input AwsInspectorStartAssessmentRunInput {
  assessmentTemplateArn: String!
  assessmentRunName: String
}

type AwsInspectorStartAssessmentRunOutput {
  assessmentRunArn: String!
}

input AwsInspectorStopAssessmentRunInput {
  assessmentRunArn: String!
  stopAction: String
}

input AwsInspectorSubscribeToEventInput {
  resourceArn: String!
  event: String!
  topicArn: String!
}

input AwsInspectorUnsubscribeFromEventInput {
  resourceArn: String!
  event: String!
  topicArn: String!
}

input AwsInspectorUpdateAssessmentTargetInput {
  assessmentTargetArn: String!
  assessmentTargetName: String!
  resourceGroupArn: String!
}

# AWS IoT (2015-05-28)
type AwsIot {
  acceptCertificateTransfer(input: AwsIotAcceptCertificateTransferInput!, config: AwsConfig): JSON
  addThingToThingGroup(input: AwsIotAddThingToThingGroupInput, config: AwsConfig): JSON
  associateTargetsWithJob(input: AwsIotAssociateTargetsWithJobInput!, config: AwsConfig): AwsIotAssociateTargetsWithJobOutput
  attachPolicy(input: AwsIotAttachPolicyInput!, config: AwsConfig): JSON
  attachPrincipalPolicy(input: AwsIotAttachPrincipalPolicyInput!, config: AwsConfig): JSON
  attachThingPrincipal(input: AwsIotAttachThingPrincipalInput!, config: AwsConfig): JSON
  cancelCertificateTransfer(input: AwsIotCancelCertificateTransferInput!, config: AwsConfig): JSON
  cancelJob(input: AwsIotCancelJobInput!, config: AwsConfig): AwsIotCancelJobOutput
  clearDefaultAuthorizer(input: JSON, config: AwsConfig): JSON
  createAuthorizer(input: AwsIotCreateAuthorizerInput!, config: AwsConfig): AwsIotCreateAuthorizerOutput
  createCertificateFromCsr(input: AwsIotCreateCertificateFromCsrInput!, config: AwsConfig): AwsIotCreateCertificateFromCsrOutput
  createJob(input: AwsIotCreateJobInput!, config: AwsConfig): AwsIotCreateJobOutput
  createKeysAndCertificate(input: AwsIotCreateKeysAndCertificateInput, config: AwsConfig): AwsIotCreateKeysAndCertificateOutput
  createPolicy(input: AwsIotCreatePolicyInput!, config: AwsConfig): AwsIotCreatePolicyOutput
  createPolicyVersion(input: AwsIotCreatePolicyVersionInput!, config: AwsConfig): AwsIotCreatePolicyVersionOutput
  createRoleAlias(input: AwsIotCreateRoleAliasInput!, config: AwsConfig): AwsIotCreateRoleAliasOutput
  createThing(input: AwsIotCreateThingInput!, config: AwsConfig): AwsIotCreateThingOutput
  createThingGroup(input: AwsIotCreateThingGroupInput!, config: AwsConfig): AwsIotCreateThingGroupOutput
  createThingType(input: AwsIotCreateThingTypeInput!, config: AwsConfig): AwsIotCreateThingTypeOutput
  createTopicRule(input: AwsIotCreateTopicRuleInput!, config: AwsConfig): JSON
  deleteAuthorizer(input: AwsIotDeleteAuthorizerInput!, config: AwsConfig): JSON
  deleteCACertificate(input: AwsIotDeleteCACertificateInput!, config: AwsConfig): JSON
  deleteCertificate(input: AwsIotDeleteCertificateInput!, config: AwsConfig): JSON
  deletePolicy(input: AwsIotDeletePolicyInput!, config: AwsConfig): JSON
  deletePolicyVersion(input: AwsIotDeletePolicyVersionInput!, config: AwsConfig): JSON
  deleteRegistrationCode(input: JSON, config: AwsConfig): JSON
  deleteRoleAlias(input: AwsIotDeleteRoleAliasInput!, config: AwsConfig): JSON
  deleteThing(input: AwsIotDeleteThingInput!, config: AwsConfig): JSON
  deleteThingGroup(input: AwsIotDeleteThingGroupInput!, config: AwsConfig): JSON
  deleteThingType(input: AwsIotDeleteThingTypeInput!, config: AwsConfig): JSON
  deleteTopicRule(input: AwsIotDeleteTopicRuleInput!, config: AwsConfig): JSON
  deleteV2LoggingLevel(input: AwsIotDeleteV2LoggingLevelInput!, config: AwsConfig): JSON
  deprecateThingType(input: AwsIotDeprecateThingTypeInput!, config: AwsConfig): JSON
  describeAuthorizer(input: AwsIotDescribeAuthorizerInput!, config: AwsConfig): AwsIotDescribeAuthorizerOutput
  describeCACertificate(input: AwsIotDescribeCACertificateInput!, config: AwsConfig): AwsIotDescribeCACertificateOutput
  describeCertificate(input: AwsIotDescribeCertificateInput!, config: AwsConfig): AwsIotDescribeCertificateOutput
  describeDefaultAuthorizer(input: JSON, config: AwsConfig): AwsIotDescribeDefaultAuthorizerOutput
  describeEndpoint(input: AwsIotDescribeEndpointInput, config: AwsConfig): AwsIotDescribeEndpointOutput
  describeEventConfigurations(input: JSON, config: AwsConfig): AwsIotDescribeEventConfigurationsOutput
  describeIndex(input: AwsIotDescribeIndexInput!, config: AwsConfig): AwsIotDescribeIndexOutput
  describeJob(input: AwsIotDescribeJobInput!, config: AwsConfig): AwsIotDescribeJobOutput
  describeJobExecution(input: AwsIotDescribeJobExecutionInput!, config: AwsConfig): AwsIotDescribeJobExecutionOutput
  describeRoleAlias(input: AwsIotDescribeRoleAliasInput!, config: AwsConfig): AwsIotDescribeRoleAliasOutput
  describeThing(input: AwsIotDescribeThingInput!, config: AwsConfig): AwsIotDescribeThingOutput
  describeThingGroup(input: AwsIotDescribeThingGroupInput!, config: AwsConfig): AwsIotDescribeThingGroupOutput
  describeThingRegistrationTask(input: AwsIotDescribeThingRegistrationTaskInput!, config: AwsConfig): AwsIotDescribeThingRegistrationTaskOutput
  describeThingType(input: AwsIotDescribeThingTypeInput!, config: AwsConfig): AwsIotDescribeThingTypeOutput
  detachPolicy(input: AwsIotDetachPolicyInput!, config: AwsConfig): JSON
  detachPrincipalPolicy(input: AwsIotDetachPrincipalPolicyInput!, config: AwsConfig): JSON
  detachThingPrincipal(input: AwsIotDetachThingPrincipalInput!, config: AwsConfig): JSON
  disableTopicRule(input: AwsIotDisableTopicRuleInput!, config: AwsConfig): JSON
  enableTopicRule(input: AwsIotEnableTopicRuleInput!, config: AwsConfig): JSON
  getEffectivePolicies(input: AwsIotGetEffectivePoliciesInput, config: AwsConfig): AwsIotGetEffectivePoliciesOutput
  getIndexingConfiguration(input: JSON, config: AwsConfig): AwsIotGetIndexingConfigurationOutput
  getJobDocument(input: AwsIotGetJobDocumentInput!, config: AwsConfig): AwsIotGetJobDocumentOutput
  getLoggingOptions(input: JSON, config: AwsConfig): AwsIotGetLoggingOptionsOutput
  getPolicy(input: AwsIotGetPolicyInput!, config: AwsConfig): AwsIotGetPolicyOutput
  getPolicyVersion(input: AwsIotGetPolicyVersionInput!, config: AwsConfig): AwsIotGetPolicyVersionOutput
  getRegistrationCode(input: JSON, config: AwsConfig): AwsIotGetRegistrationCodeOutput
  getTopicRule(input: AwsIotGetTopicRuleInput!, config: AwsConfig): AwsIotGetTopicRuleOutput
  getV2LoggingOptions(input: JSON, config: AwsConfig): AwsIotGetV2LoggingOptionsOutput
  listAttachedPolicies(input: AwsIotListAttachedPoliciesInput!, config: AwsConfig): AwsIotListAttachedPoliciesOutput
  listAuthorizers(input: AwsIotListAuthorizersInput, config: AwsConfig): AwsIotListAuthorizersOutput
  listCACertificates(input: AwsIotListCACertificatesInput, config: AwsConfig): AwsIotListCACertificatesOutput
  listCertificates(input: AwsIotListCertificatesInput, config: AwsConfig): AwsIotListCertificatesOutput
  listCertificatesByCA(input: AwsIotListCertificatesByCAInput!, config: AwsConfig): AwsIotListCertificatesByCAOutput
  listIndices(input: AwsIotListIndicesInput, config: AwsConfig): AwsIotListIndicesOutput
  listJobExecutionsForJob(input: AwsIotListJobExecutionsForJobInput!, config: AwsConfig): AwsIotListJobExecutionsForJobOutput
  listJobExecutionsForThing(input: AwsIotListJobExecutionsForThingInput!, config: AwsConfig): AwsIotListJobExecutionsForThingOutput
  listJobs(input: AwsIotListJobsInput, config: AwsConfig): AwsIotListJobsOutput
  listOutgoingCertificates(input: AwsIotListOutgoingCertificatesInput, config: AwsConfig): AwsIotListOutgoingCertificatesOutput
  listPolicies(input: AwsIotListPoliciesInput, config: AwsConfig): AwsIotListPoliciesOutput
  listPolicyPrincipals(input: AwsIotListPolicyPrincipalsInput!, config: AwsConfig): AwsIotListPolicyPrincipalsOutput
  listPolicyVersions(input: AwsIotListPolicyVersionsInput!, config: AwsConfig): AwsIotListPolicyVersionsOutput
  listPrincipalPolicies(input: AwsIotListPrincipalPoliciesInput!, config: AwsConfig): AwsIotListPrincipalPoliciesOutput
  listPrincipalThings(input: AwsIotListPrincipalThingsInput!, config: AwsConfig): AwsIotListPrincipalThingsOutput
  listRoleAliases(input: AwsIotListRoleAliasesInput, config: AwsConfig): AwsIotListRoleAliasesOutput
  listTargetsForPolicy(input: AwsIotListTargetsForPolicyInput!, config: AwsConfig): AwsIotListTargetsForPolicyOutput
  listThingGroups(input: AwsIotListThingGroupsInput, config: AwsConfig): AwsIotListThingGroupsOutput
  listThingGroupsForThing(input: AwsIotListThingGroupsForThingInput!, config: AwsConfig): AwsIotListThingGroupsForThingOutput
  listThingPrincipals(input: AwsIotListThingPrincipalsInput!, config: AwsConfig): AwsIotListThingPrincipalsOutput
  listThingRegistrationTaskReports(input: AwsIotListThingRegistrationTaskReportsInput!, config: AwsConfig): AwsIotListThingRegistrationTaskReportsOutput
  listThingRegistrationTasks(input: AwsIotListThingRegistrationTasksInput, config: AwsConfig): AwsIotListThingRegistrationTasksOutput
  listThingTypes(input: AwsIotListThingTypesInput, config: AwsConfig): AwsIotListThingTypesOutput
  listThings(input: AwsIotListThingsInput, config: AwsConfig): AwsIotListThingsOutput
  listThingsInThingGroup(input: AwsIotListThingsInThingGroupInput!, config: AwsConfig): AwsIotListThingsInThingGroupOutput
  listTopicRules(input: AwsIotListTopicRulesInput, config: AwsConfig): AwsIotListTopicRulesOutput
  listV2LoggingLevels(input: AwsIotListV2LoggingLevelsInput, config: AwsConfig): AwsIotListV2LoggingLevelsOutput
  registerCACertificate(input: AwsIotRegisterCACertificateInput!, config: AwsConfig): AwsIotRegisterCACertificateOutput
  registerCertificate(input: AwsIotRegisterCertificateInput!, config: AwsConfig): AwsIotRegisterCertificateOutput
  registerThing(input: AwsIotRegisterThingInput!, config: AwsConfig): AwsIotRegisterThingOutput
  rejectCertificateTransfer(input: AwsIotRejectCertificateTransferInput!, config: AwsConfig): JSON
  removeThingFromThingGroup(input: AwsIotRemoveThingFromThingGroupInput, config: AwsConfig): JSON
  replaceTopicRule(input: AwsIotReplaceTopicRuleInput!, config: AwsConfig): JSON
  searchIndex(input: AwsIotSearchIndexInput!, config: AwsConfig): AwsIotSearchIndexOutput
  setDefaultAuthorizer(input: AwsIotSetDefaultAuthorizerInput!, config: AwsConfig): AwsIotSetDefaultAuthorizerOutput
  setDefaultPolicyVersion(input: AwsIotSetDefaultPolicyVersionInput!, config: AwsConfig): JSON
  setLoggingOptions(input: AwsIotSetLoggingOptionsInput!, config: AwsConfig): JSON
  setV2LoggingLevel(input: AwsIotSetV2LoggingLevelInput!, config: AwsConfig): JSON
  setV2LoggingOptions(input: AwsIotSetV2LoggingOptionsInput, config: AwsConfig): JSON
  startThingRegistrationTask(input: AwsIotStartThingRegistrationTaskInput!, config: AwsConfig): AwsIotStartThingRegistrationTaskOutput
  stopThingRegistrationTask(input: AwsIotStopThingRegistrationTaskInput!, config: AwsConfig): JSON
  testAuthorization(input: AwsIotTestAuthorizationInput!, config: AwsConfig): AwsIotTestAuthorizationOutput
  testInvokeAuthorizer(input: AwsIotTestInvokeAuthorizerInput!, config: AwsConfig): AwsIotTestInvokeAuthorizerOutput
  transferCertificate(input: AwsIotTransferCertificateInput!, config: AwsConfig): AwsIotTransferCertificateOutput
  updateAuthorizer(input: AwsIotUpdateAuthorizerInput!, config: AwsConfig): AwsIotUpdateAuthorizerOutput
  updateCACertificate(input: AwsIotUpdateCACertificateInput!, config: AwsConfig): JSON
  updateCertificate(input: AwsIotUpdateCertificateInput!, config: AwsConfig): JSON
  updateEventConfigurations(input: AwsIotUpdateEventConfigurationsInput, config: AwsConfig): JSON
  updateIndexingConfiguration(input: AwsIotUpdateIndexingConfigurationInput, config: AwsConfig): JSON
  updateRoleAlias(input: AwsIotUpdateRoleAliasInput!, config: AwsConfig): AwsIotUpdateRoleAliasOutput
  updateThing(input: AwsIotUpdateThingInput!, config: AwsConfig): JSON
  updateThingGroup(input: AwsIotUpdateThingGroupInput!, config: AwsConfig): AwsIotUpdateThingGroupOutput
  updateThingGroupsForThing(input: AwsIotUpdateThingGroupsForThingInput, config: AwsConfig): JSON
}

input AwsIotAcceptCertificateTransferInput {
  certificateId: String!
  setAsActive: Boolean
}

input AwsIotAddThingToThingGroupInput {
  thingGroupName: String
  thingGroupArn: String
  thingName: String
  thingArn: String
}

input AwsIotAssociateTargetsWithJobInput {
  targets: [String]!
  jobId: String!
  comment: String
}

type AwsIotAssociateTargetsWithJobOutput {
  jobArn: String
  jobId: String
  description: String
}

input AwsIotAttachPolicyInput {
  policyName: String!
  target: String!
}

input AwsIotAttachPrincipalPolicyInput {
  policyName: String!
  principal: String!
}

input AwsIotAttachThingPrincipalInput {
  thingName: String!
  principal: String!
}

input AwsIotCancelCertificateTransferInput {
  certificateId: String!
}

input AwsIotCancelJobInput {
  jobId: String!
  comment: String
}

type AwsIotCancelJobOutput {
  jobArn: String
  jobId: String
  description: String
}

input AwsIotCreateAuthorizerInput {
  authorizerName: String!
  authorizerFunctionArn: String!
  tokenKeyName: String!
  tokenSigningPublicKeys: JSON!
  status: String
}

type AwsIotCreateAuthorizerOutput {
  authorizerName: String
  authorizerArn: String
}

input AwsIotCreateCertificateFromCsrInput {
  certificateSigningRequest: String!
  setAsActive: Boolean
}

type AwsIotCreateCertificateFromCsrOutput {
  certificateArn: String
  certificateId: String
  certificatePem: String
}

input AwsIotCreateJobInput {
  jobId: String!
  targets: [String]!
  documentSource: String
  document: String
  description: String
  presignedUrlConfig: AwsIotS1cInput
  targetSelection: String
  jobExecutionsRolloutConfig: AwsIotS1gInput
  documentParameters: JSON
}

type AwsIotCreateJobOutput {
  jobArn: String
  jobId: String
  description: String
}

input AwsIotCreateKeysAndCertificateInput {
  setAsActive: Boolean
}

type AwsIotCreateKeysAndCertificateOutput {
  certificateArn: String
  certificateId: String
  certificatePem: String
  keyPair: AwsIotCreateKeysAndCertificateOutputKeyPair
}

type AwsIotCreateKeysAndCertificateOutputKeyPair {
  PublicKey: String
  PrivateKey: String
}

input AwsIotCreatePolicyInput {
  policyName: String!
  policyDocument: String!
}

type AwsIotCreatePolicyOutput {
  policyName: String
  policyArn: String
  policyDocument: String
  policyVersionId: String
}

input AwsIotCreatePolicyVersionInput {
  policyName: String!
  policyDocument: String!
  setAsDefault: Boolean
}

type AwsIotCreatePolicyVersionOutput {
  policyArn: String
  policyDocument: String
  policyVersionId: String
  isDefaultVersion: Boolean
}

input AwsIotCreateRoleAliasInput {
  roleAlias: String!
  roleArn: String!
  credentialDurationSeconds: Int
}

type AwsIotCreateRoleAliasOutput {
  roleAlias: String
  roleAliasArn: String
}

input AwsIotCreateThingGroupInput {
  thingGroupName: String!
  parentGroupName: String
  thingGroupProperties: AwsIotS2fInput
}

type AwsIotCreateThingGroupOutput {
  thingGroupName: String
  thingGroupArn: String
  thingGroupId: String
}

input AwsIotCreateThingInput {
  thingName: String!
  thingTypeName: String
  attributePayload: AwsIotS27Input
}

type AwsIotCreateThingOutput {
  thingName: String
  thingArn: String
  thingId: String
}

input AwsIotCreateThingTypeInput {
  thingTypeName: String!
  thingTypeProperties: AwsIotS2kInput
}

type AwsIotCreateThingTypeOutput {
  thingTypeName: String
  thingTypeArn: String
  thingTypeId: String
}

input AwsIotCreateTopicRuleInput {
  ruleName: String!
  topicRulePayload: AwsIotS2sInput!
}

# AWS IoT Data Plane (2015-05-28)
type AwsIotData {
  deleteThingShadow(input: AwsIotDataDeleteThingShadowInput!, config: AwsConfig): AwsIotDataDeleteThingShadowOutput
  getThingShadow(input: AwsIotDataGetThingShadowInput!, config: AwsConfig): AwsIotDataGetThingShadowOutput
  publish(input: AwsIotDataPublishInput!, config: AwsConfig): JSON
  updateThingShadow(input: AwsIotDataUpdateThingShadowInput!, config: AwsConfig): AwsIotDataUpdateThingShadowOutput
}

input AwsIotDataDeleteThingShadowInput {
  thingName: String!
}

type AwsIotDataDeleteThingShadowOutput {
  payload: JSON!
}

input AwsIotDataGetThingShadowInput {
  thingName: String!
}

type AwsIotDataGetThingShadowOutput {
  payload: JSON
}

input AwsIotDataPublishInput {
  topic: String!
  qos: Int
  payload: JSON
}

input AwsIotDataUpdateThingShadowInput {
  thingName: String!
  payload: JSON!
}

type AwsIotDataUpdateThingShadowOutput {
  payload: JSON
}

input AwsIotDeleteAuthorizerInput {
  authorizerName: String!
}

input AwsIotDeleteCACertificateInput {
  certificateId: String!
}

input AwsIotDeleteCertificateInput {
  certificateId: String!
  forceDelete: Boolean
}

input AwsIotDeletePolicyInput {
  policyName: String!
}

input AwsIotDeletePolicyVersionInput {
  policyName: String!
  policyVersionId: String!
}

input AwsIotDeleteRoleAliasInput {
  roleAlias: String!
}

input AwsIotDeleteThingGroupInput {
  thingGroupName: String!
  expectedVersion: JSON
}

input AwsIotDeleteThingInput {
  thingName: String!
  expectedVersion: JSON
}

input AwsIotDeleteThingTypeInput {
  thingTypeName: String!
}

input AwsIotDeleteTopicRuleInput {
  ruleName: String!
}

input AwsIotDeleteV2LoggingLevelInput {
  targetType: String!
  targetName: String!
}

input AwsIotDeprecateThingTypeInput {
  thingTypeName: String!
  undoDeprecate: Boolean
}

input AwsIotDescribeAuthorizerInput {
  authorizerName: String!
}

type AwsIotDescribeAuthorizerOutput {
  authorizerDescription: AwsIotS54
}

input AwsIotDescribeCACertificateInput {
  certificateId: String!
}

type AwsIotDescribeCACertificateOutput {
  certificateDescription: AwsIotDescribeCACertificateOutputCertificateDescription
  registrationConfig: AwsIotS5c
}

type AwsIotDescribeCACertificateOutputCertificateDescription {
  certificateArn: String
  certificateId: String
  status: String
  certificatePem: String
  ownedBy: String
  creationDate: Date
  autoRegistrationStatus: String
}

input AwsIotDescribeCertificateInput {
  certificateId: String!
}

type AwsIotDescribeCertificateOutput {
  certificateDescription: AwsIotDescribeCertificateOutputCertificateDescription
}

type AwsIotDescribeCertificateOutputCertificateDescription {
  certificateArn: String
  certificateId: String
  caCertificateId: String
  status: String
  certificatePem: String
  ownedBy: String
  previousOwnedBy: String
  creationDate: Date
  lastModifiedDate: Date
  transferData: AwsIotDescribeCertificateOutputCertificateDescriptionTransferData
}

type AwsIotDescribeCertificateOutputCertificateDescriptionTransferData {
  transferMessage: String
  rejectReason: String
  transferDate: Date
  acceptDate: Date
  rejectDate: Date
}

type AwsIotDescribeDefaultAuthorizerOutput {
  authorizerDescription: AwsIotS54
}

input AwsIotDescribeEndpointInput {
  endpointType: String
}

type AwsIotDescribeEndpointOutput {
  endpointAddress: String
}

type AwsIotDescribeEventConfigurationsOutput {
  eventConfigurations: JSON
  creationDate: Date
  lastModifiedDate: Date
}

input AwsIotDescribeIndexInput {
  indexName: String!
}

type AwsIotDescribeIndexOutput {
  indexName: String
  indexStatus: String
  schema: String
}

input AwsIotDescribeJobExecutionInput {
  jobId: String!
  thingName: String!
  executionNumber: JSON
}

type AwsIotDescribeJobExecutionOutput {
  execution: AwsIotDescribeJobExecutionOutputExecution
}

type AwsIotDescribeJobExecutionOutputExecution {
  jobId: String
  status: String
  statusDetails: AwsIotDescribeJobExecutionOutputExecutionStatusDetails
  thingArn: String
  queuedAt: Date
  startedAt: Date
  lastUpdatedAt: Date
  executionNumber: JSON
}

type AwsIotDescribeJobExecutionOutputExecutionStatusDetails {
  detailsMap: JSON
}

input AwsIotDescribeJobInput {
  jobId: String!
}

type AwsIotDescribeJobOutput {
  documentSource: String
  job: AwsIotDescribeJobOutputJob
}

type AwsIotDescribeJobOutputJob {
  jobArn: String
  jobId: String
  targetSelection: String
  status: String
  comment: String
  targets: [String]
  description: String
  presignedUrlConfig: AwsIotS1c
  jobExecutionsRolloutConfig: AwsIotS1g
  createdAt: Date
  lastUpdatedAt: Date
  completedAt: Date
  jobProcessDetails: AwsIotDescribeJobOutputJobJobProcessDetails
  documentParameters: JSON
}

type AwsIotDescribeJobOutputJobJobProcessDetails {
  processingTargets: [String]
  numberOfCanceledThings: Int
  numberOfSucceededThings: Int
  numberOfFailedThings: Int
  numberOfRejectedThings: Int
  numberOfQueuedThings: Int
  numberOfInProgressThings: Int
  numberOfRemovedThings: Int
}

input AwsIotDescribeRoleAliasInput {
  roleAlias: String!
}

type AwsIotDescribeRoleAliasOutput {
  roleAliasDescription: AwsIotDescribeRoleAliasOutputRoleAliasDescription
}

type AwsIotDescribeRoleAliasOutputRoleAliasDescription {
  roleAlias: String
  roleArn: String
  owner: String
  credentialDurationSeconds: Int
  creationDate: Date
  lastModifiedDate: Date
}

input AwsIotDescribeThingGroupInput {
  thingGroupName: String!
}

type AwsIotDescribeThingGroupOutput {
  thingGroupName: String
  thingGroupId: String
  thingGroupArn: String
  version: JSON
  thingGroupProperties: AwsIotS2f
  thingGroupMetadata: AwsIotDescribeThingGroupOutputThingGroupMetadata
}

type AwsIotDescribeThingGroupOutputThingGroupMetadata {
  parentGroupName: String
  rootToParentThingGroups: [AwsIotS70]
  creationDate: Date
}

input AwsIotDescribeThingInput {
  thingName: String!
}

type AwsIotDescribeThingOutput {
  defaultClientId: String
  thingName: String
  thingId: String
  thingArn: String
  thingTypeName: String
  attributes: JSON
  version: JSON
}

input AwsIotDescribeThingRegistrationTaskInput {
  taskId: String!
}

type AwsIotDescribeThingRegistrationTaskOutput {
  taskId: String
  creationDate: Date
  lastModifiedDate: Date
  templateBody: String
  inputFileBucket: String
  inputFileKey: String
  roleArn: String
  status: String
  message: String
  successCount: Int
  failureCount: Int
  percentageProgress: Int
}

input AwsIotDescribeThingTypeInput {
  thingTypeName: String!
}

type AwsIotDescribeThingTypeOutput {
  thingTypeName: String
  thingTypeId: String
  thingTypeArn: String
  thingTypeProperties: AwsIotS2k
  thingTypeMetadata: AwsIotS7d
}

input AwsIotDetachPolicyInput {
  policyName: String!
  target: String!
}

input AwsIotDetachPrincipalPolicyInput {
  policyName: String!
  principal: String!
}

input AwsIotDetachThingPrincipalInput {
  thingName: String!
  principal: String!
}

input AwsIotDisableTopicRuleInput {
  ruleName: String!
}

input AwsIotEnableTopicRuleInput {
  ruleName: String!
}

input AwsIotGetEffectivePoliciesInput {
  principal: String
  cognitoIdentityPoolId: String
  thingName: String
}

type AwsIotGetEffectivePoliciesOutput {
  effectivePolicies: [AwsIotGetEffectivePoliciesOutputEffectivePolicies]
}

type AwsIotGetEffectivePoliciesOutputEffectivePolicies {
  policyName: String
  policyArn: String
  policyDocument: String
}

type AwsIotGetIndexingConfigurationOutput {
  thingIndexingConfiguration: AwsIotS7t
}

input AwsIotGetJobDocumentInput {
  jobId: String!
}

type AwsIotGetJobDocumentOutput {
  document: String
}

type AwsIotGetLoggingOptionsOutput {
  roleArn: String
  logLevel: String
}

input AwsIotGetPolicyInput {
  policyName: String!
}

type AwsIotGetPolicyOutput {
  policyName: String
  policyArn: String
  policyDocument: String
  defaultVersionId: String
}

input AwsIotGetPolicyVersionInput {
  policyName: String!
  policyVersionId: String!
}

type AwsIotGetPolicyVersionOutput {
  policyArn: String
  policyName: String
  policyDocument: String
  policyVersionId: String
  isDefaultVersion: Boolean
}

type AwsIotGetRegistrationCodeOutput {
  registrationCode: String
}

input AwsIotGetTopicRuleInput {
  ruleName: String!
}

type AwsIotGetTopicRuleOutput {
  ruleArn: String
  rule: AwsIotGetTopicRuleOutputRule
}

type AwsIotGetTopicRuleOutputRule {
  ruleName: String
  sql: String
  description: String
  createdAt: Date
  actions: [AwsIotS2v]
  ruleDisabled: Boolean
  awsIotSqlVersion: String
}

type AwsIotGetV2LoggingOptionsOutput {
  roleArn: String
  defaultLogLevel: String
  disableAllLogs: Boolean
}

# AWS IoT Jobs Data Plane (2017-09-29)
type AwsIoTJobsDataPlane {
  describeJobExecution(input: AwsIoTJobsDataPlaneDescribeJobExecutionInput!, config: AwsConfig): AwsIoTJobsDataPlaneDescribeJobExecutionOutput
  getPendingJobExecutions(input: AwsIoTJobsDataPlaneGetPendingJobExecutionsInput!, config: AwsConfig): AwsIoTJobsDataPlaneGetPendingJobExecutionsOutput
  startNextPendingJobExecution(input: AwsIoTJobsDataPlaneStartNextPendingJobExecutionInput!, config: AwsConfig): AwsIoTJobsDataPlaneStartNextPendingJobExecutionOutput
  updateJobExecution(input: AwsIoTJobsDataPlaneUpdateJobExecutionInput!, config: AwsConfig): AwsIoTJobsDataPlaneUpdateJobExecutionOutput
}

input AwsIoTJobsDataPlaneDescribeJobExecutionInput {
  jobId: String!
  thingName: String!
  includeJobDocument: Boolean
  executionNumber: JSON
}

type AwsIoTJobsDataPlaneDescribeJobExecutionOutput {
  execution: AwsIoTJobsDataPlaneS7
}

input AwsIoTJobsDataPlaneGetPendingJobExecutionsInput {
  thingName: String!
}

type AwsIoTJobsDataPlaneGetPendingJobExecutionsOutput {
  inProgressJobs: [AwsIoTJobsDataPlaneSk]
  queuedJobs: [AwsIoTJobsDataPlaneSk]
}

type AwsIoTJobsDataPlaneS7 {
  jobId: String
  thingName: String
  status: String
  statusDetails: JSON
  queuedAt: JSON
  startedAt: JSON
  lastUpdatedAt: JSON
  versionNumber: JSON
  executionNumber: JSON
  jobDocument: String
}

type AwsIoTJobsDataPlaneSk {
  jobId: String
  queuedAt: JSON
  startedAt: JSON
  lastUpdatedAt: JSON
  versionNumber: JSON
  executionNumber: JSON
}

input AwsIoTJobsDataPlaneStartNextPendingJobExecutionInput {
  thingName: String!
  statusDetails: JSON
}

type AwsIoTJobsDataPlaneStartNextPendingJobExecutionOutput {
  execution: AwsIoTJobsDataPlaneS7
}

input AwsIoTJobsDataPlaneUpdateJobExecutionInput {
  jobId: String!
  thingName: String!
  status: String!
  statusDetails: JSON
  expectedVersion: JSON
  includeJobExecutionState: Boolean
  includeJobDocument: Boolean
  executionNumber: JSON
}

type AwsIoTJobsDataPlaneUpdateJobExecutionOutput {
  executionState: AwsIoTJobsDataPlaneUpdateJobExecutionOutputExecutionState
  jobDocument: String
}

type AwsIoTJobsDataPlaneUpdateJobExecutionOutputExecutionState {
  status: String
  statusDetails: JSON
  versionNumber: JSON
}

input AwsIotListAttachedPoliciesInput {
  target: String!
  recursive: Boolean
  marker: String
  pageSize: Int
}

type AwsIotListAttachedPoliciesOutput {
  policies: [AwsIotS8k]
  nextMarker: String
}

input AwsIotListAuthorizersInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
  status: String
}

type AwsIotListAuthorizersOutput {
  authorizers: [AwsIotListAuthorizersOutputAuthorizers]
  nextMarker: String
}

type AwsIotListAuthorizersOutputAuthorizers {
  authorizerName: String
  authorizerArn: String
}

input AwsIotListCACertificatesInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListCACertificatesOutput {
  certificates: [AwsIotListCACertificatesOutputCertificates]
  nextMarker: String
}

type AwsIotListCACertificatesOutputCertificates {
  certificateArn: String
  certificateId: String
  status: String
  creationDate: Date
}

input AwsIotListCertificatesByCAInput {
  caCertificateId: String!
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListCertificatesByCAOutput {
  certificates: [AwsIotS8x]
  nextMarker: String
}

input AwsIotListCertificatesInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListCertificatesOutput {
  certificates: [AwsIotS8x]
  nextMarker: String
}

input AwsIotListIndicesInput {
  nextToken: String
  maxResults: Int
}

type AwsIotListIndicesOutput {
  indexNames: [String]
  nextToken: String
}

input AwsIotListJobExecutionsForJobInput {
  jobId: String!
  status: String
  maxResults: Int
  nextToken: String
}

type AwsIotListJobExecutionsForJobOutput {
  executionSummaries: [AwsIotListJobExecutionsForJobOutputExecutionSummaries]
  nextToken: String
}

type AwsIotListJobExecutionsForJobOutputExecutionSummaries {
  thingArn: String
  jobExecutionSummary: AwsIotS9b
}

input AwsIotListJobExecutionsForThingInput {
  thingName: String!
  status: String
  maxResults: Int
  nextToken: String
}

type AwsIotListJobExecutionsForThingOutput {
  executionSummaries: [AwsIotListJobExecutionsForThingOutputExecutionSummaries]
  nextToken: String
}

type AwsIotListJobExecutionsForThingOutputExecutionSummaries {
  jobId: String
  jobExecutionSummary: AwsIotS9b
}

input AwsIotListJobsInput {
  status: String
  targetSelection: String
  maxResults: Int
  nextToken: String
  thingGroupName: String
  thingGroupId: String
}

type AwsIotListJobsOutput {
  jobs: [AwsIotListJobsOutputJobs]
  nextToken: String
}

type AwsIotListJobsOutputJobs {
  jobArn: String
  jobId: String
  thingGroupId: String
  targetSelection: String
  status: String
  createdAt: Date
  lastUpdatedAt: Date
  completedAt: Date
}

input AwsIotListOutgoingCertificatesInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListOutgoingCertificatesOutput {
  outgoingCertificates: [AwsIotListOutgoingCertificatesOutputOutgoingCertificates]
  nextMarker: String
}

type AwsIotListOutgoingCertificatesOutputOutgoingCertificates {
  certificateArn: String
  certificateId: String
  transferredTo: String
  transferDate: Date
  transferMessage: String
  creationDate: Date
}

input AwsIotListPoliciesInput {
  marker: String
  pageSize: Int
  ascendingOrder: Boolean
}

type AwsIotListPoliciesOutput {
  policies: [AwsIotS8k]
  nextMarker: String
}

input AwsIotListPolicyPrincipalsInput {
  policyName: String!
  marker: String
  pageSize: Int
  ascendingOrder: Boolean
}

type AwsIotListPolicyPrincipalsOutput {
  principals: [String]
  nextMarker: String
}

input AwsIotListPolicyVersionsInput {
  policyName: String!
}

type AwsIotListPolicyVersionsOutput {
  policyVersions: [AwsIotListPolicyVersionsOutputPolicyVersions]
}

type AwsIotListPolicyVersionsOutputPolicyVersions {
  versionId: String
  isDefaultVersion: Boolean
  createDate: Date
}

input AwsIotListPrincipalPoliciesInput {
  principal: String!
  marker: String
  pageSize: Int
  ascendingOrder: Boolean
}

type AwsIotListPrincipalPoliciesOutput {
  policies: [AwsIotS8k]
  nextMarker: String
}

input AwsIotListPrincipalThingsInput {
  nextToken: String
  maxResults: Int
  principal: String!
}

type AwsIotListPrincipalThingsOutput {
  things: [String]
  nextToken: String
}

input AwsIotListRoleAliasesInput {
  pageSize: Int
  marker: String
  ascendingOrder: Boolean
}

type AwsIotListRoleAliasesOutput {
  roleAliases: [String]
  nextMarker: String
}

input AwsIotListTargetsForPolicyInput {
  policyName: String!
  marker: String
  pageSize: Int
}

type AwsIotListTargetsForPolicyOutput {
  targets: [String]
  nextMarker: String
}

input AwsIotListThingGroupsForThingInput {
  thingName: String!
  nextToken: String
  maxResults: Int
}

type AwsIotListThingGroupsForThingOutput {
  thingGroups: [AwsIotS70]
  nextToken: String
}

input AwsIotListThingGroupsInput {
  nextToken: String
  maxResults: Int
  parentGroup: String
  namePrefixFilter: String
  recursive: Boolean
}

type AwsIotListThingGroupsOutput {
  thingGroups: [AwsIotS70]
  nextToken: String
}

input AwsIotListThingPrincipalsInput {
  thingName: String!
}

type AwsIotListThingPrincipalsOutput {
  principals: [String]
}

input AwsIotListThingRegistrationTaskReportsInput {
  taskId: String!
  reportType: String!
  nextToken: String
  maxResults: Int
}

type AwsIotListThingRegistrationTaskReportsOutput {
  resourceLinks: [String]
  reportType: String
  nextToken: String
}

input AwsIotListThingRegistrationTasksInput {
  nextToken: String
  maxResults: Int
  status: String
}

type AwsIotListThingRegistrationTasksOutput {
  taskIds: [String]
  nextToken: String
}

input AwsIotListThingsInput {
  nextToken: String
  maxResults: Int
  attributeName: String
  attributeValue: String
  thingTypeName: String
}

input AwsIotListThingsInThingGroupInput {
  thingGroupName: String!
  recursive: Boolean
  nextToken: String
  maxResults: Int
}

type AwsIotListThingsInThingGroupOutput {
  things: [String]
  nextToken: String
}

type AwsIotListThingsOutput {
  things: [AwsIotListThingsOutputThings]
  nextToken: String
}

type AwsIotListThingsOutputThings {
  thingName: String
  thingTypeName: String
  thingArn: String
  attributes: JSON
  version: JSON
}

input AwsIotListThingTypesInput {
  nextToken: String
  maxResults: Int
  thingTypeName: String
}

type AwsIotListThingTypesOutput {
  thingTypes: [AwsIotListThingTypesOutputThingTypes]
  nextToken: String
}

type AwsIotListThingTypesOutputThingTypes {
  thingTypeName: String
  thingTypeArn: String
  thingTypeProperties: AwsIotS2k
  thingTypeMetadata: AwsIotS7d
}

input AwsIotListTopicRulesInput {
  topic: String
  maxResults: Int
  nextToken: String
  ruleDisabled: Boolean
}

type AwsIotListTopicRulesOutput {
  rules: [AwsIotListTopicRulesOutputRules]
  nextToken: String
}

type AwsIotListTopicRulesOutputRules {
  ruleArn: String
  ruleName: String
  topicPattern: String
  createdAt: Date
  ruleDisabled: Boolean
}

input AwsIotListV2LoggingLevelsInput {
  targetType: String
  nextToken: String
  maxResults: Int
}

type AwsIotListV2LoggingLevelsOutput {
  logTargetConfigurations: [AwsIotListV2LoggingLevelsOutputLogTargetConfigurations]
  nextToken: String
}

type AwsIotListV2LoggingLevelsOutputLogTargetConfigurations {
  logTarget: AwsIotSba
  logLevel: String
}

input AwsIotRegisterCACertificateInput {
  caCertificate: String!
  verificationCertificate: String!
  setAsActive: Boolean
  allowAutoRegistration: Boolean
  registrationConfig: AwsIotS5cInput
}

type AwsIotRegisterCACertificateOutput {
  certificateArn: String
  certificateId: String
}

input AwsIotRegisterCertificateInput {
  certificatePem: String!
  caCertificatePem: String
  setAsActive: Boolean
  status: String
}

type AwsIotRegisterCertificateOutput {
  certificateArn: String
  certificateId: String
}

input AwsIotRegisterThingInput {
  templateBody: String!
  parameters: JSON
}

type AwsIotRegisterThingOutput {
  certificatePem: String
  resourceArns: JSON
}

input AwsIotRejectCertificateTransferInput {
  certificateId: String!
  rejectReason: String
}

input AwsIotRemoveThingFromThingGroupInput {
  thingGroupName: String
  thingGroupArn: String
  thingName: String
  thingArn: String
}

input AwsIotReplaceTopicRuleInput {
  ruleName: String!
  topicRulePayload: AwsIotS2sInput!
}

type AwsIotS1c {
  roleArn: String
  expiresInSec: JSON
}

input AwsIotS1cInput {
  roleArn: String
  expiresInSec: JSON
}

type AwsIotS1g {
  maximumPerMinute: Int
}

input AwsIotS1gInput {
  maximumPerMinute: Int
}

type AwsIotS27 {
  attributes: JSON
  merge: Boolean
}

input AwsIotS27Input {
  attributes: JSON
  merge: Boolean
}

type AwsIotS2f {
  thingGroupDescription: String
  attributePayload: AwsIotS27
}

input AwsIotS2fInput {
  thingGroupDescription: String
  attributePayload: AwsIotS27Input
}

type AwsIotS2k {
  thingTypeDescription: String
  searchableAttributes: [String]
}

input AwsIotS2kInput {
  thingTypeDescription: String
  searchableAttributes: [String]
}

input AwsIotS2sInput {
  sql: String!
  description: String
  actions: [AwsIotS2vInput]!
  ruleDisabled: Boolean
  awsIotSqlVersion: String
}

type AwsIotS2v {
  dynamoDB: AwsIotS2vDynamoDB
  dynamoDBv2: AwsIotS2vDynamoDBv2
  lambda: AwsIotS2vLambda
  sns: AwsIotS2vSns
  sqs: AwsIotS2vSqs
  kinesis: AwsIotS2vKinesis
  republish: AwsIotS2vRepublish
  s3: AwsIotS2vS3
  firehose: AwsIotS2vFirehose
  cloudwatchMetric: AwsIotS2vCloudwatchMetric
  cloudwatchAlarm: AwsIotS2vCloudwatchAlarm
  elasticsearch: AwsIotS2vElasticsearch
  salesforce: AwsIotS2vSalesforce
}

type AwsIotS2vCloudwatchAlarm {
  roleArn: String!
  alarmName: String!
  stateReason: String!
  stateValue: String!
}

input AwsIotS2vCloudwatchAlarmInput {
  roleArn: String!
  alarmName: String!
  stateReason: String!
  stateValue: String!
}

type AwsIotS2vCloudwatchMetric {
  roleArn: String!
  metricNamespace: String!
  metricName: String!
  metricValue: String!
  metricUnit: String!
  metricTimestamp: String
}

input AwsIotS2vCloudwatchMetricInput {
  roleArn: String!
  metricNamespace: String!
  metricName: String!
  metricValue: String!
  metricUnit: String!
  metricTimestamp: String
}

type AwsIotS2vDynamoDB {
  tableName: String!
  roleArn: String!
  operation: String
  hashKeyField: String!
  hashKeyValue: String!
  hashKeyType: String
  rangeKeyField: String
  rangeKeyValue: String
  rangeKeyType: String
  payloadField: String
}

input AwsIotS2vDynamoDBInput {
  tableName: String!
  roleArn: String!
  operation: String
  hashKeyField: String!
  hashKeyValue: String!
  hashKeyType: String
  rangeKeyField: String
  rangeKeyValue: String
  rangeKeyType: String
  payloadField: String
}

type AwsIotS2vDynamoDBv2 {
  roleArn: String
  putItem: AwsIotS2vDynamoDBv2PutItem
}

input AwsIotS2vDynamoDBv2Input {
  roleArn: String
  putItem: AwsIotS2vDynamoDBv2PutItemInput
}

type AwsIotS2vDynamoDBv2PutItem {
  tableName: String!
}

input AwsIotS2vDynamoDBv2PutItemInput {
  tableName: String!
}

type AwsIotS2vElasticsearch {
  roleArn: String!
  endpoint: String!
  index: String!
  type: String!
  id: String!
}

input AwsIotS2vElasticsearchInput {
  roleArn: String!
  endpoint: String!
  index: String!
  type: String!
  id: String!
}

type AwsIotS2vFirehose {
  roleArn: String!
  deliveryStreamName: String!
  separator: String
}

input AwsIotS2vFirehoseInput {
  roleArn: String!
  deliveryStreamName: String!
  separator: String
}

input AwsIotS2vInput {
  dynamoDB: AwsIotS2vDynamoDBInput
  dynamoDBv2: AwsIotS2vDynamoDBv2Input
  lambda: AwsIotS2vLambdaInput
  sns: AwsIotS2vSnsInput
  sqs: AwsIotS2vSqsInput
  kinesis: AwsIotS2vKinesisInput
  republish: AwsIotS2vRepublishInput
  s3: AwsIotS2vS3Input
  firehose: AwsIotS2vFirehoseInput
  cloudwatchMetric: AwsIotS2vCloudwatchMetricInput
  cloudwatchAlarm: AwsIotS2vCloudwatchAlarmInput
  elasticsearch: AwsIotS2vElasticsearchInput
  salesforce: AwsIotS2vSalesforceInput
}

type AwsIotS2vKinesis {
  roleArn: String!
  streamName: String!
  partitionKey: String
}

input AwsIotS2vKinesisInput {
  roleArn: String!
  streamName: String!
  partitionKey: String
}

type AwsIotS2vLambda {
  functionArn: String!
}

input AwsIotS2vLambdaInput {
  functionArn: String!
}

type AwsIotS2vRepublish {
  roleArn: String!
  topic: String!
}

input AwsIotS2vRepublishInput {
  roleArn: String!
  topic: String!
}

type AwsIotS2vS3 {
  roleArn: String!
  bucketName: String!
  key: String!
  cannedAcl: String
}

input AwsIotS2vS3Input {
  roleArn: String!
  bucketName: String!
  key: String!
  cannedAcl: String
}

type AwsIotS2vSalesforce {
  token: String!
  url: String!
}

input AwsIotS2vSalesforceInput {
  token: String!
  url: String!
}

type AwsIotS2vSns {
  targetArn: String!
  roleArn: String!
  messageFormat: String
}

input AwsIotS2vSnsInput {
  targetArn: String!
  roleArn: String!
  messageFormat: String
}

type AwsIotS2vSqs {
  roleArn: String!
  queueUrl: String!
  useBase64: Boolean
}

input AwsIotS2vSqsInput {
  roleArn: String!
  queueUrl: String!
  useBase64: Boolean
}

type AwsIotS54 {
  authorizerName: String
  authorizerArn: String
  authorizerFunctionArn: String
  tokenKeyName: String
  tokenSigningPublicKeys: JSON
  status: String
  creationDate: Date
  lastModifiedDate: Date
}

type AwsIotS5c {
  templateBody: String
  roleArn: String
}

input AwsIotS5cInput {
  templateBody: String
  roleArn: String
}

type AwsIotS70 {
  groupName: String
  groupArn: String
}

type AwsIotS7d {
  deprecated: Boolean
  deprecationDate: Date
  creationDate: Date
}

type AwsIotS7t {
  thingIndexingMode: String
}

input AwsIotS7tInput {
  thingIndexingMode: String
}

type AwsIotS8k {
  policyName: String
  policyArn: String
}

type AwsIotS8x {
  certificateArn: String
  certificateId: String
  status: String
  creationDate: Date
}

type AwsIotS9b {
  status: String
  queuedAt: Date
  startedAt: Date
  lastUpdatedAt: Date
  executionNumber: JSON
}

type AwsIotSba {
  targetType: String!
  targetName: String
}

input AwsIotSbaInput {
  targetType: String!
  targetName: String
}

type AwsIotSce {
  actionType: String
  resources: [String]
}

input AwsIotSceInput {
  actionType: String
  resources: [String]
}

input AwsIotSearchIndexInput {
  indexName: String
  queryString: String!
  nextToken: String
  maxResults: Int
  queryVersion: String
}

type AwsIotSearchIndexOutput {
  nextToken: String
  things: [AwsIotSearchIndexOutputThings]
}

type AwsIotSearchIndexOutputThings {
  thingName: String
  thingId: String
  thingTypeName: String
  thingGroupNames: [String]
  attributes: JSON
  shadow: String
}

input AwsIotSetDefaultAuthorizerInput {
  authorizerName: String!
}

type AwsIotSetDefaultAuthorizerOutput {
  authorizerName: String
  authorizerArn: String
}

input AwsIotSetDefaultPolicyVersionInput {
  policyName: String!
  policyVersionId: String!
}

input AwsIotSetLoggingOptionsInput {
  loggingOptionsPayload: AwsIotSetLoggingOptionsLoggingOptionsPayloadInput!
}

input AwsIotSetLoggingOptionsLoggingOptionsPayloadInput {
  roleArn: String!
  logLevel: String
}

input AwsIotSetV2LoggingLevelInput {
  logTarget: AwsIotSbaInput!
  logLevel: String!
}

input AwsIotSetV2LoggingOptionsInput {
  roleArn: String
  defaultLogLevel: String
  disableAllLogs: Boolean
}

input AwsIotStartThingRegistrationTaskInput {
  templateBody: String!
  inputFileBucket: String!
  inputFileKey: String!
  roleArn: String!
}

type AwsIotStartThingRegistrationTaskOutput {
  taskId: String
}

input AwsIotStopThingRegistrationTaskInput {
  taskId: String!
}

input AwsIotTestAuthorizationInput {
  principal: String
  cognitoIdentityPoolId: String
  authInfos: [AwsIotSceInput]!
  clientId: String
  policyNamesToAdd: [String]
  policyNamesToSkip: [String]
}

type AwsIotTestAuthorizationOutput {
  authResults: [AwsIotTestAuthorizationOutputAuthResults]
}

type AwsIotTestAuthorizationOutputAuthResults {
  authInfo: AwsIotSce
  allowed: AwsIotTestAuthorizationOutputAuthResultsAllowed
  denied: AwsIotTestAuthorizationOutputAuthResultsDenied
  authDecision: String
  missingContextValues: [String]
}

type AwsIotTestAuthorizationOutputAuthResultsAllowed {
  policies: [AwsIotS8k]
}

type AwsIotTestAuthorizationOutputAuthResultsDenied {
  implicitDeny: AwsIotTestAuthorizationOutputAuthResultsDeniedImplicitDeny
  explicitDeny: AwsIotTestAuthorizationOutputAuthResultsDeniedExplicitDeny
}

type AwsIotTestAuthorizationOutputAuthResultsDeniedExplicitDeny {
  policies: [AwsIotS8k]
}

type AwsIotTestAuthorizationOutputAuthResultsDeniedImplicitDeny {
  policies: [AwsIotS8k]
}

input AwsIotTestInvokeAuthorizerInput {
  authorizerName: String!
  token: String!
  tokenSignature: String!
}

type AwsIotTestInvokeAuthorizerOutput {
  isAuthenticated: Boolean
  principalId: String
  policyDocuments: [String]
  refreshAfterInSeconds: Int
  disconnectAfterInSeconds: Int
}

input AwsIotTransferCertificateInput {
  certificateId: String!
  targetAwsAccount: String!
  transferMessage: String
}

type AwsIotTransferCertificateOutput {
  transferredCertificateArn: String
}

input AwsIotUpdateAuthorizerInput {
  authorizerName: String!
  authorizerFunctionArn: String
  tokenKeyName: String
  tokenSigningPublicKeys: JSON
  status: String
}

type AwsIotUpdateAuthorizerOutput {
  authorizerName: String
  authorizerArn: String
}

input AwsIotUpdateCACertificateInput {
  certificateId: String!
  newStatus: String
  newAutoRegistrationStatus: String
  registrationConfig: AwsIotS5cInput
  removeAutoRegistration: Boolean
}

input AwsIotUpdateCertificateInput {
  certificateId: String!
  newStatus: String!
}

input AwsIotUpdateEventConfigurationsInput {
  eventConfigurations: JSON
}

input AwsIotUpdateIndexingConfigurationInput {
  thingIndexingConfiguration: AwsIotS7tInput
}

input AwsIotUpdateRoleAliasInput {
  roleAlias: String!
  roleArn: String
  credentialDurationSeconds: Int
}

type AwsIotUpdateRoleAliasOutput {
  roleAlias: String
  roleAliasArn: String
}

input AwsIotUpdateThingGroupInput {
  thingGroupName: String!
  thingGroupProperties: AwsIotS2fInput!
  expectedVersion: JSON
}

type AwsIotUpdateThingGroupOutput {
  version: JSON
}

input AwsIotUpdateThingGroupsForThingInput {
  thingName: String
  thingGroupsToAdd: [String]
  thingGroupsToRemove: [String]
}

input AwsIotUpdateThingInput {
  thingName: String!
  thingTypeName: String
  attributePayload: AwsIotS27Input
  expectedVersion: JSON
  removeThingType: Boolean
}

# Amazon Kinesis (2013-12-02)
type AwsKinesis {
  addTagsToStream(input: AwsKinesisAddTagsToStreamInput!, config: AwsConfig): JSON
  createStream(input: AwsKinesisCreateStreamInput!, config: AwsConfig): JSON
  decreaseStreamRetentionPeriod(input: AwsKinesisDecreaseStreamRetentionPeriodInput!, config: AwsConfig): JSON
  deleteStream(input: AwsKinesisDeleteStreamInput!, config: AwsConfig): JSON
  describeLimits(input: JSON, config: AwsConfig): AwsKinesisDescribeLimitsOutput
  describeStream(input: AwsKinesisDescribeStreamInput!, config: AwsConfig): AwsKinesisDescribeStreamOutput
  describeStreamSummary(input: AwsKinesisDescribeStreamSummaryInput!, config: AwsConfig): AwsKinesisDescribeStreamSummaryOutput
  disableEnhancedMonitoring(input: AwsKinesisDisableEnhancedMonitoringInput!, config: AwsConfig): JSON
  enableEnhancedMonitoring(input: AwsKinesisEnableEnhancedMonitoringInput!, config: AwsConfig): JSON
  getRecords(input: AwsKinesisGetRecordsInput!, config: AwsConfig): AwsKinesisGetRecordsOutput
  getShardIterator(input: AwsKinesisGetShardIteratorInput!, config: AwsConfig): AwsKinesisGetShardIteratorOutput
  increaseStreamRetentionPeriod(input: AwsKinesisIncreaseStreamRetentionPeriodInput!, config: AwsConfig): JSON
  listStreams(input: AwsKinesisListStreamsInput, config: AwsConfig): AwsKinesisListStreamsOutput
  listTagsForStream(input: AwsKinesisListTagsForStreamInput!, config: AwsConfig): AwsKinesisListTagsForStreamOutput
  mergeShards(input: AwsKinesisMergeShardsInput!, config: AwsConfig): JSON
  putRecord(input: AwsKinesisPutRecordInput!, config: AwsConfig): AwsKinesisPutRecordOutput
  putRecords(input: AwsKinesisPutRecordsInput!, config: AwsConfig): AwsKinesisPutRecordsOutput
  removeTagsFromStream(input: AwsKinesisRemoveTagsFromStreamInput!, config: AwsConfig): JSON
  splitShard(input: AwsKinesisSplitShardInput!, config: AwsConfig): JSON
  startStreamEncryption(input: AwsKinesisStartStreamEncryptionInput!, config: AwsConfig): JSON
  stopStreamEncryption(input: AwsKinesisStopStreamEncryptionInput!, config: AwsConfig): JSON
  updateShardCount(input: AwsKinesisUpdateShardCountInput!, config: AwsConfig): AwsKinesisUpdateShardCountOutput
}

input AwsKinesisAddTagsToStreamInput {
  StreamName: String!
  Tags: JSON!
}

# Amazon Kinesis Analytics (2015-08-14)
type AwsKinesisAnalytics {
  addApplicationCloudWatchLoggingOption(input: AwsKinesisAnalyticsAddApplicationCloudWatchLoggingOptionInput!, config: AwsConfig): JSON
  addApplicationInput(input: AwsKinesisAnalyticsAddApplicationInputInput!, config: AwsConfig): JSON
  addApplicationInputProcessingConfiguration(input: AwsKinesisAnalyticsAddApplicationInputProcessingConfigurationInput!, config: AwsConfig): JSON
  addApplicationOutput(input: AwsKinesisAnalyticsAddApplicationOutputInput!, config: AwsConfig): JSON
  addApplicationReferenceDataSource(input: AwsKinesisAnalyticsAddApplicationReferenceDataSourceInput!, config: AwsConfig): JSON
  createApplication(input: AwsKinesisAnalyticsCreateApplicationInput!, config: AwsConfig): AwsKinesisAnalyticsCreateApplicationOutput
  deleteApplication(input: AwsKinesisAnalyticsDeleteApplicationInput!, config: AwsConfig): JSON
  deleteApplicationCloudWatchLoggingOption(input: AwsKinesisAnalyticsDeleteApplicationCloudWatchLoggingOptionInput!, config: AwsConfig): JSON
  deleteApplicationInputProcessingConfiguration(input: AwsKinesisAnalyticsDeleteApplicationInputProcessingConfigurationInput!, config: AwsConfig): JSON
  deleteApplicationOutput(input: AwsKinesisAnalyticsDeleteApplicationOutputInput!, config: AwsConfig): JSON
  deleteApplicationReferenceDataSource(input: AwsKinesisAnalyticsDeleteApplicationReferenceDataSourceInput!, config: AwsConfig): JSON
  describeApplication(input: AwsKinesisAnalyticsDescribeApplicationInput!, config: AwsConfig): AwsKinesisAnalyticsDescribeApplicationOutput
  discoverInputSchema(input: AwsKinesisAnalyticsDiscoverInputSchemaInput, config: AwsConfig): AwsKinesisAnalyticsDiscoverInputSchemaOutput
  listApplications(input: AwsKinesisAnalyticsListApplicationsInput, config: AwsConfig): AwsKinesisAnalyticsListApplicationsOutput
  startApplication(input: AwsKinesisAnalyticsStartApplicationInput!, config: AwsConfig): JSON
  stopApplication(input: AwsKinesisAnalyticsStopApplicationInput!, config: AwsConfig): JSON
  updateApplication(input: AwsKinesisAnalyticsUpdateApplicationInput!, config: AwsConfig): JSON
}

input AwsKinesisAnalyticsAddApplicationCloudWatchLoggingOptionInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  CloudWatchLoggingOption: AwsKinesisAnalyticsS4Input!
}

input AwsKinesisAnalyticsAddApplicationInputInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  Input: AwsKinesisAnalyticsS9Input!
}

input AwsKinesisAnalyticsAddApplicationInputProcessingConfigurationInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  InputId: String!
  InputProcessingConfiguration: AwsKinesisAnalyticsSbInput!
}

input AwsKinesisAnalyticsAddApplicationOutputInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  Output: AwsKinesisAnalyticsS12Input!
}

input AwsKinesisAnalyticsAddApplicationReferenceDataSourceInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  ReferenceDataSource: AwsKinesisAnalyticsAddApplicationReferenceDataSourceReferenceDataSourceInput!
}

input AwsKinesisAnalyticsAddApplicationReferenceDataSourceReferenceDataSourceInput {
  TableName: String!
  S3ReferenceDataSource: AwsKinesisAnalyticsAddApplicationReferenceDataSourceReferenceDataSourceS3ReferenceDataSourceInput
  ReferenceSchema: AwsKinesisAnalyticsSiInput!
}

input AwsKinesisAnalyticsAddApplicationReferenceDataSourceReferenceDataSourceS3ReferenceDataSourceInput {
  BucketARN: String!
  FileKey: String!
  ReferenceRoleARN: String!
}

input AwsKinesisAnalyticsCreateApplicationInput {
  ApplicationName: String!
  ApplicationDescription: String
  Inputs: [AwsKinesisAnalyticsS9Input]
  Outputs: [AwsKinesisAnalyticsS12Input]
  CloudWatchLoggingOptions: [AwsKinesisAnalyticsS4Input]
  ApplicationCode: String
}

type AwsKinesisAnalyticsCreateApplicationOutput {
  ApplicationSummary: AwsKinesisAnalyticsS1l!
}

input AwsKinesisAnalyticsDeleteApplicationCloudWatchLoggingOptionInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  CloudWatchLoggingOptionId: String!
}

input AwsKinesisAnalyticsDeleteApplicationInput {
  ApplicationName: String!
  CreateTimestamp: Date!
}

input AwsKinesisAnalyticsDeleteApplicationInputProcessingConfigurationInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  InputId: String!
}

input AwsKinesisAnalyticsDeleteApplicationOutputInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  OutputId: String!
}

input AwsKinesisAnalyticsDeleteApplicationReferenceDataSourceInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  ReferenceId: String!
}

input AwsKinesisAnalyticsDescribeApplicationInput {
  ApplicationName: String!
}

type AwsKinesisAnalyticsDescribeApplicationOutput {
  ApplicationDetail: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetail!
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetail {
  ApplicationName: String!
  ApplicationDescription: String
  ApplicationARN: String!
  ApplicationStatus: String!
  CreateTimestamp: Date
  LastUpdateTimestamp: Date
  InputDescriptions: [AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptions]
  OutputDescriptions: [AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptions]
  ReferenceDataSourceDescriptions: [AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailReferenceDataSourceDescriptions]
  CloudWatchLoggingOptionDescriptions: [AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailCloudWatchLoggingOptionDescriptions]
  ApplicationCode: String
  ApplicationVersionId: JSON!
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailCloudWatchLoggingOptionDescriptions {
  CloudWatchLoggingOptionId: String
  LogStreamARN: String!
  RoleARN: String!
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptions {
  InputId: String
  NamePrefix: String
  InAppStreamNames: [String]
  InputProcessingConfigurationDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsInputProcessingConfigurationDescription
  KinesisStreamsInputDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsKinesisStreamsInputDescription
  KinesisFirehoseInputDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsKinesisFirehoseInputDescription
  InputSchema: AwsKinesisAnalyticsSi
  InputParallelism: AwsKinesisAnalyticsSg
  InputStartingPositionConfiguration: AwsKinesisAnalyticsS28
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsInputProcessingConfigurationDescription {
  InputLambdaProcessorDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsInputProcessingConfigurationDescriptionInputLambdaProcessorDescription
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsInputProcessingConfigurationDescriptionInputLambdaProcessorDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsKinesisFirehoseInputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailInputDescriptionsKinesisStreamsInputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptions {
  OutputId: String
  Name: String
  KinesisStreamsOutputDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsKinesisStreamsOutputDescription
  KinesisFirehoseOutputDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsKinesisFirehoseOutputDescription
  DestinationSchema: AwsKinesisAnalyticsS15
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsKinesisFirehoseOutputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailOutputDescriptionsKinesisStreamsOutputDescription {
  ResourceARN: String
  RoleARN: String
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailReferenceDataSourceDescriptions {
  ReferenceId: String!
  TableName: String!
  S3ReferenceDataSourceDescription: AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailReferenceDataSourceDescriptionsS3ReferenceDataSourceDescription!
  ReferenceSchema: AwsKinesisAnalyticsSi
}

type AwsKinesisAnalyticsDescribeApplicationOutputApplicationDetailReferenceDataSourceDescriptionsS3ReferenceDataSourceDescription {
  BucketARN: String!
  FileKey: String!
  ReferenceRoleARN: String!
}

input AwsKinesisAnalyticsDiscoverInputSchemaInput {
  ResourceARN: String
  RoleARN: String
  InputStartingPositionConfiguration: AwsKinesisAnalyticsS28Input
  S3Configuration: AwsKinesisAnalyticsDiscoverInputSchemaS3ConfigurationInput
  InputProcessingConfiguration: AwsKinesisAnalyticsSbInput
}

type AwsKinesisAnalyticsDiscoverInputSchemaOutput {
  InputSchema: AwsKinesisAnalyticsSi
  ParsedInputRecords: [[String]]
  ProcessedInputRecords: [String]
  RawInputRecords: [String]
}

input AwsKinesisAnalyticsDiscoverInputSchemaS3ConfigurationInput {
  RoleARN: String!
  BucketARN: String!
  FileKey: String!
}

input AwsKinesisAnalyticsListApplicationsInput {
  Limit: Int
  ExclusiveStartApplicationName: String
}

type AwsKinesisAnalyticsListApplicationsOutput {
  ApplicationSummaries: [AwsKinesisAnalyticsS1l]!
  HasMoreApplications: Boolean!
}

input AwsKinesisAnalyticsS12Input {
  Name: String!
  KinesisStreamsOutput: AwsKinesisAnalyticsS12KinesisStreamsOutputInput
  KinesisFirehoseOutput: AwsKinesisAnalyticsS12KinesisFirehoseOutputInput
  DestinationSchema: AwsKinesisAnalyticsS15Input!
}

input AwsKinesisAnalyticsS12KinesisFirehoseOutputInput {
  ResourceARN: String!
  RoleARN: String!
}

input AwsKinesisAnalyticsS12KinesisStreamsOutputInput {
  ResourceARN: String!
  RoleARN: String!
}

type AwsKinesisAnalyticsS15 {
  RecordFormatType: String
}

input AwsKinesisAnalyticsS15Input {
  RecordFormatType: String
}

type AwsKinesisAnalyticsS1l {
  ApplicationName: String!
  ApplicationARN: String!
  ApplicationStatus: String!
}

type AwsKinesisAnalyticsS28 {
  InputStartingPosition: String
}

input AwsKinesisAnalyticsS28Input {
  InputStartingPosition: String
}

input AwsKinesisAnalyticsS4Input {
  LogStreamARN: String!
  RoleARN: String!
}

input AwsKinesisAnalyticsS9Input {
  NamePrefix: String!
  InputProcessingConfiguration: AwsKinesisAnalyticsSbInput
  KinesisStreamsInput: AwsKinesisAnalyticsS9KinesisStreamsInputInput
  KinesisFirehoseInput: AwsKinesisAnalyticsS9KinesisFirehoseInputInput
  InputParallelism: AwsKinesisAnalyticsSgInput
  InputSchema: AwsKinesisAnalyticsSiInput!
}

input AwsKinesisAnalyticsS9KinesisFirehoseInputInput {
  ResourceARN: String!
  RoleARN: String!
}

input AwsKinesisAnalyticsS9KinesisStreamsInputInput {
  ResourceARN: String!
  RoleARN: String!
}

input AwsKinesisAnalyticsSbInput {
  InputLambdaProcessor: AwsKinesisAnalyticsSbInputLambdaProcessorInput!
}

input AwsKinesisAnalyticsSbInputLambdaProcessorInput {
  ResourceARN: String!
  RoleARN: String!
}

type AwsKinesisAnalyticsSg {
  Count: Int
}

input AwsKinesisAnalyticsSgInput {
  Count: Int
}

type AwsKinesisAnalyticsSi {
  RecordFormat: AwsKinesisAnalyticsSj!
  RecordEncoding: String
  RecordColumns: [AwsKinesisAnalyticsSs]!
}

input AwsKinesisAnalyticsSiInput {
  RecordFormat: AwsKinesisAnalyticsSjInput!
  RecordEncoding: String
  RecordColumns: [AwsKinesisAnalyticsSsInput]!
}

type AwsKinesisAnalyticsSj {
  RecordFormatType: String!
  MappingParameters: AwsKinesisAnalyticsSjMappingParameters
}

input AwsKinesisAnalyticsSjInput {
  RecordFormatType: String!
  MappingParameters: AwsKinesisAnalyticsSjMappingParametersInput
}

type AwsKinesisAnalyticsSjMappingParameters {
  JSONMappingParameters: AwsKinesisAnalyticsSjMappingParametersJSONMappingParameters
  CSVMappingParameters: AwsKinesisAnalyticsSjMappingParametersCSVMappingParameters
}

type AwsKinesisAnalyticsSjMappingParametersCSVMappingParameters {
  RecordRowDelimiter: String!
  RecordColumnDelimiter: String!
}

input AwsKinesisAnalyticsSjMappingParametersCSVMappingParametersInput {
  RecordRowDelimiter: String!
  RecordColumnDelimiter: String!
}

input AwsKinesisAnalyticsSjMappingParametersInput {
  JSONMappingParameters: AwsKinesisAnalyticsSjMappingParametersJSONMappingParametersInput
  CSVMappingParameters: AwsKinesisAnalyticsSjMappingParametersCSVMappingParametersInput
}

type AwsKinesisAnalyticsSjMappingParametersJSONMappingParameters {
  RecordRowPath: String!
}

input AwsKinesisAnalyticsSjMappingParametersJSONMappingParametersInput {
  RecordRowPath: String!
}

type AwsKinesisAnalyticsSs {
  Name: String!
  Mapping: String
  SqlType: String!
}

input AwsKinesisAnalyticsSsInput {
  Name: String!
  Mapping: String
  SqlType: String!
}

input AwsKinesisAnalyticsStartApplicationInput {
  ApplicationName: String!
  InputConfigurations: [AwsKinesisAnalyticsStartApplicationInputConfigurationsInput]!
}

input AwsKinesisAnalyticsStartApplicationInputConfigurationsInput {
  Id: String!
  InputStartingPositionConfiguration: AwsKinesisAnalyticsS28Input!
}

input AwsKinesisAnalyticsStopApplicationInput {
  ApplicationName: String!
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateCloudWatchLoggingOptionUpdatesInput {
  CloudWatchLoggingOptionId: String!
  LogStreamARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInput {
  InputUpdates: [AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInput]
  ApplicationCodeUpdate: String
  OutputUpdates: [AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesInput]
  ReferenceDataSourceUpdates: [AwsKinesisAnalyticsUpdateApplicationApplicationUpdateReferenceDataSourceUpdatesInput]
  CloudWatchLoggingOptionUpdates: [AwsKinesisAnalyticsUpdateApplicationApplicationUpdateCloudWatchLoggingOptionUpdatesInput]
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInput {
  InputId: String!
  NamePrefixUpdate: String
  InputProcessingConfigurationUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputProcessingConfigurationUpdateInput
  KinesisStreamsInputUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesKinesisStreamsInputUpdateInput
  KinesisFirehoseInputUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesKinesisFirehoseInputUpdateInput
  InputSchemaUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputSchemaUpdateInput
  InputParallelismUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputParallelismUpdateInput
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputParallelismUpdateInput {
  CountUpdate: Int
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputProcessingConfigurationUpdateInput {
  InputLambdaProcessorUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputProcessingConfigurationUpdateInputLambdaProcessorUpdateInput!
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputProcessingConfigurationUpdateInputLambdaProcessorUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesInputSchemaUpdateInput {
  RecordFormatUpdate: AwsKinesisAnalyticsSjInput
  RecordEncodingUpdate: String
  RecordColumnUpdates: [AwsKinesisAnalyticsSsInput]
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesKinesisFirehoseInputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInputUpdatesKinesisStreamsInputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesInput {
  OutputId: String!
  NameUpdate: String
  KinesisStreamsOutputUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesKinesisStreamsOutputUpdateInput
  KinesisFirehoseOutputUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesKinesisFirehoseOutputUpdateInput
  DestinationSchemaUpdate: AwsKinesisAnalyticsS15Input
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesKinesisFirehoseOutputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateOutputUpdatesKinesisStreamsOutputUpdateInput {
  ResourceARNUpdate: String
  RoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateReferenceDataSourceUpdatesInput {
  ReferenceId: String!
  TableNameUpdate: String
  S3ReferenceDataSourceUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateReferenceDataSourceUpdatesS3ReferenceDataSourceUpdateInput
  ReferenceSchemaUpdate: AwsKinesisAnalyticsSiInput
}

input AwsKinesisAnalyticsUpdateApplicationApplicationUpdateReferenceDataSourceUpdatesS3ReferenceDataSourceUpdateInput {
  BucketARNUpdate: String
  FileKeyUpdate: String
  ReferenceRoleARNUpdate: String
}

input AwsKinesisAnalyticsUpdateApplicationInput {
  ApplicationName: String!
  CurrentApplicationVersionId: JSON!
  ApplicationUpdate: AwsKinesisAnalyticsUpdateApplicationApplicationUpdateInput!
}

input AwsKinesisCreateStreamInput {
  StreamName: String!
  ShardCount: Int!
}

input AwsKinesisDecreaseStreamRetentionPeriodInput {
  StreamName: String!
  RetentionPeriodHours: Int!
}

input AwsKinesisDeleteStreamInput {
  StreamName: String!
}

type AwsKinesisDescribeLimitsOutput {
  ShardLimit: Int!
  OpenShardCount: Int!
}

input AwsKinesisDescribeStreamInput {
  StreamName: String!
  Limit: Int
  ExclusiveStartShardId: String
}

type AwsKinesisDescribeStreamOutput {
  StreamDescription: AwsKinesisDescribeStreamOutputStreamDescription!
}

type AwsKinesisDescribeStreamOutputStreamDescription {
  StreamName: String!
  StreamARN: String!
  StreamStatus: String!
  Shards: [AwsKinesisDescribeStreamOutputStreamDescriptionShards]!
  HasMoreShards: Boolean!
  RetentionPeriodHours: Int!
  StreamCreationTimestamp: Date!
  EnhancedMonitoring: [AwsKinesisSs]!
  EncryptionType: String
  KeyId: String
}

type AwsKinesisDescribeStreamOutputStreamDescriptionShards {
  ShardId: String!
  ParentShardId: String
  AdjacentParentShardId: String
  HashKeyRange: AwsKinesisDescribeStreamOutputStreamDescriptionShardsHashKeyRange!
  SequenceNumberRange: AwsKinesisDescribeStreamOutputStreamDescriptionShardsSequenceNumberRange!
}

type AwsKinesisDescribeStreamOutputStreamDescriptionShardsHashKeyRange {
  StartingHashKey: String!
  EndingHashKey: String!
}

type AwsKinesisDescribeStreamOutputStreamDescriptionShardsSequenceNumberRange {
  StartingSequenceNumber: String!
  EndingSequenceNumber: String
}

input AwsKinesisDescribeStreamSummaryInput {
  StreamName: String!
}

type AwsKinesisDescribeStreamSummaryOutput {
  StreamDescriptionSummary: AwsKinesisDescribeStreamSummaryOutputStreamDescriptionSummary!
}

type AwsKinesisDescribeStreamSummaryOutputStreamDescriptionSummary {
  StreamName: String!
  StreamARN: String!
  StreamStatus: String!
  RetentionPeriodHours: Int!
  StreamCreationTimestamp: Date!
  EnhancedMonitoring: [AwsKinesisSs]!
  EncryptionType: String
  KeyId: String
  OpenShardCount: Int!
}

input AwsKinesisDisableEnhancedMonitoringInput {
  StreamName: String!
  ShardLevelMetrics: [String]!
}

input AwsKinesisEnableEnhancedMonitoringInput {
  StreamName: String!
  ShardLevelMetrics: [String]!
}

input AwsKinesisGetRecordsInput {
  ShardIterator: String!
  Limit: Int
}

type AwsKinesisGetRecordsOutput {
  Records: [AwsKinesisGetRecordsOutputRecords]!
  NextShardIterator: String
  MillisBehindLatest: JSON
}

type AwsKinesisGetRecordsOutputRecords {
  SequenceNumber: String!
  ApproximateArrivalTimestamp: Date
  Data: JSON!
  PartitionKey: String!
  EncryptionType: String
}

input AwsKinesisGetShardIteratorInput {
  StreamName: String!
  ShardId: String!
  ShardIteratorType: String!
  StartingSequenceNumber: String
  Timestamp: Date
}

type AwsKinesisGetShardIteratorOutput {
  ShardIterator: String
}

input AwsKinesisIncreaseStreamRetentionPeriodInput {
  StreamName: String!
  RetentionPeriodHours: Int!
}

input AwsKinesisListStreamsInput {
  Limit: Int
  ExclusiveStartStreamName: String
}

type AwsKinesisListStreamsOutput {
  StreamNames: [String]!
  HasMoreStreams: Boolean!
}

input AwsKinesisListTagsForStreamInput {
  StreamName: String!
  ExclusiveStartTagKey: String
  Limit: Int
}

type AwsKinesisListTagsForStreamOutput {
  Tags: [AwsKinesisListTagsForStreamOutputTags]!
  HasMoreTags: Boolean!
}

type AwsKinesisListTagsForStreamOutputTags {
  Key: String!
  Value: String
}

input AwsKinesisMergeShardsInput {
  StreamName: String!
  ShardToMerge: String!
  AdjacentShardToMerge: String!
}

input AwsKinesisPutRecordInput {
  StreamName: String!
  Data: JSON!
  PartitionKey: String!
  ExplicitHashKey: String
  SequenceNumberForOrdering: String
}

type AwsKinesisPutRecordOutput {
  ShardId: String!
  SequenceNumber: String!
  EncryptionType: String
}

input AwsKinesisPutRecordsInput {
  Records: [AwsKinesisPutRecordsRecordsInput]!
  StreamName: String!
}

type AwsKinesisPutRecordsOutput {
  FailedRecordCount: Int
  Records: [AwsKinesisPutRecordsOutputRecords]!
  EncryptionType: String
}

type AwsKinesisPutRecordsOutputRecords {
  SequenceNumber: String
  ShardId: String
  ErrorCode: String
  ErrorMessage: String
}

input AwsKinesisPutRecordsRecordsInput {
  Data: JSON!
  ExplicitHashKey: String
  PartitionKey: String!
}

input AwsKinesisRemoveTagsFromStreamInput {
  StreamName: String!
  TagKeys: [String]!
}

input AwsKinesisSplitShardInput {
  StreamName: String!
  ShardToSplit: String!
  NewStartingHashKey: String!
}

type AwsKinesisSs {
  ShardLevelMetrics: [String]
}

input AwsKinesisStartStreamEncryptionInput {
  StreamName: String!
  EncryptionType: String!
  KeyId: String!
}

input AwsKinesisStopStreamEncryptionInput {
  StreamName: String!
  EncryptionType: String!
  KeyId: String!
}

input AwsKinesisUpdateShardCountInput {
  StreamName: String!
  TargetShardCount: Int!
  ScalingType: String!
}

type AwsKinesisUpdateShardCountOutput {
  StreamName: String
  CurrentShardCount: Int
  TargetShardCount: Int
}

# Amazon Kinesis Video Streams (2017-09-30)
type AwsKinesisVideo {
  createStream(input: AwsKinesisVideoCreateStreamInput!, config: AwsConfig): AwsKinesisVideoCreateStreamOutput
  deleteStream(input: AwsKinesisVideoDeleteStreamInput!, config: AwsConfig): JSON
  describeStream(input: AwsKinesisVideoDescribeStreamInput, config: AwsConfig): AwsKinesisVideoDescribeStreamOutput
  getDataEndpoint(input: AwsKinesisVideoGetDataEndpointInput!, config: AwsConfig): AwsKinesisVideoGetDataEndpointOutput
  listStreams(input: AwsKinesisVideoListStreamsInput, config: AwsConfig): AwsKinesisVideoListStreamsOutput
  listTagsForStream(input: AwsKinesisVideoListTagsForStreamInput, config: AwsConfig): AwsKinesisVideoListTagsForStreamOutput
  tagStream(input: AwsKinesisVideoTagStreamInput!, config: AwsConfig): JSON
  untagStream(input: AwsKinesisVideoUntagStreamInput!, config: AwsConfig): JSON
  updateDataRetention(input: AwsKinesisVideoUpdateDataRetentionInput!, config: AwsConfig): JSON
  updateStream(input: AwsKinesisVideoUpdateStreamInput!, config: AwsConfig): JSON
}

# Amazon Kinesis Video Streams Archived Media (2017-09-30)
type AwsKinesisVideoArchivedMedia {
  getMediaForFragmentList(input: AwsKinesisVideoArchivedMediaGetMediaForFragmentListInput!, config: AwsConfig): AwsKinesisVideoArchivedMediaGetMediaForFragmentListOutput
  listFragments(input: AwsKinesisVideoArchivedMediaListFragmentsInput!, config: AwsConfig): AwsKinesisVideoArchivedMediaListFragmentsOutput
}

input AwsKinesisVideoArchivedMediaGetMediaForFragmentListInput {
  StreamName: String!
  Fragments: [String]!
}

type AwsKinesisVideoArchivedMediaGetMediaForFragmentListOutput {
  ContentType: String
  Payload: JSON
}

input AwsKinesisVideoArchivedMediaListFragmentsFragmentSelectorInput {
  FragmentSelectorType: String!
  TimestampRange: AwsKinesisVideoArchivedMediaListFragmentsFragmentSelectorTimestampRangeInput!
}

input AwsKinesisVideoArchivedMediaListFragmentsFragmentSelectorTimestampRangeInput {
  StartTimestamp: Date!
  EndTimestamp: Date!
}

input AwsKinesisVideoArchivedMediaListFragmentsInput {
  StreamName: String!
  MaxResults: JSON
  NextToken: String
  FragmentSelector: AwsKinesisVideoArchivedMediaListFragmentsFragmentSelectorInput
}

type AwsKinesisVideoArchivedMediaListFragmentsOutput {
  Fragments: [AwsKinesisVideoArchivedMediaListFragmentsOutputFragments]
  NextToken: String
}

type AwsKinesisVideoArchivedMediaListFragmentsOutputFragments {
  FragmentNumber: String
  FragmentSizeInBytes: JSON
  ProducerTimestamp: Date
  ServerTimestamp: Date
  FragmentLengthInMilliseconds: JSON
}

input AwsKinesisVideoCreateStreamInput {
  DeviceName: String
  StreamName: String!
  MediaType: String
  KmsKeyId: String
  DataRetentionInHours: Int
}

type AwsKinesisVideoCreateStreamOutput {
  StreamARN: String
}

input AwsKinesisVideoDeleteStreamInput {
  StreamARN: String!
  CurrentVersion: String
}

input AwsKinesisVideoDescribeStreamInput {
  StreamName: String
  StreamARN: String
}

type AwsKinesisVideoDescribeStreamOutput {
  StreamInfo: AwsKinesisVideoSe
}

input AwsKinesisVideoGetDataEndpointInput {
  StreamName: String
  StreamARN: String
  APIName: String!
}

type AwsKinesisVideoGetDataEndpointOutput {
  DataEndpoint: String
}

input AwsKinesisVideoListStreamsInput {
  MaxResults: Int
  NextToken: String
  StreamNameCondition: AwsKinesisVideoListStreamsStreamNameConditionInput
}

type AwsKinesisVideoListStreamsOutput {
  StreamInfoList: [AwsKinesisVideoSe]
  NextToken: String
}

input AwsKinesisVideoListStreamsStreamNameConditionInput {
  ComparisonOperator: String
  ComparisonValue: String
}

input AwsKinesisVideoListTagsForStreamInput {
  NextToken: String
  StreamARN: String
  StreamName: String
}

type AwsKinesisVideoListTagsForStreamOutput {
  NextToken: String
  Tags: JSON
}

# Amazon Kinesis Video Streams Media (2017-09-30)
type AwsKinesisVideoMedia {
  getMedia(input: AwsKinesisVideoMediaGetMediaInput!, config: AwsConfig): AwsKinesisVideoMediaGetMediaOutput
}

input AwsKinesisVideoMediaGetMediaInput {
  StreamName: String
  StreamARN: String
  StartSelector: AwsKinesisVideoMediaGetMediaStartSelectorInput!
}

type AwsKinesisVideoMediaGetMediaOutput {
  ContentType: String
  Payload: JSON
}

input AwsKinesisVideoMediaGetMediaStartSelectorInput {
  StartSelectorType: String!
  AfterFragmentNumber: String
  StartTimestamp: Date
  ContinuationToken: String
}

type AwsKinesisVideoSe {
  DeviceName: String
  StreamName: String
  StreamARN: String
  MediaType: String
  KmsKeyId: String
  Version: String
  Status: String
  CreationTime: Date
  DataRetentionInHours: Int
}

input AwsKinesisVideoTagStreamInput {
  StreamARN: String
  StreamName: String
  Tags: JSON!
}

input AwsKinesisVideoUntagStreamInput {
  StreamARN: String
  StreamName: String
  TagKeyList: [String]!
}

input AwsKinesisVideoUpdateDataRetentionInput {
  StreamName: String
  StreamARN: String
  CurrentVersion: String!
  Operation: String!
  DataRetentionChangeInHours: Int!
}

input AwsKinesisVideoUpdateStreamInput {
  StreamName: String
  StreamARN: String
  CurrentVersion: String!
  DeviceName: String
  MediaType: String
}

# AWS Key Management Service (2014-11-01)
type AwsKMS {
  cancelKeyDeletion(input: AwsKMSCancelKeyDeletionInput!, config: AwsConfig): AwsKMSCancelKeyDeletionOutput
  createAlias(input: AwsKMSCreateAliasInput!, config: AwsConfig): JSON
  createGrant(input: AwsKMSCreateGrantInput!, config: AwsConfig): AwsKMSCreateGrantOutput
  createKey(input: AwsKMSCreateKeyInput, config: AwsConfig): AwsKMSCreateKeyOutput
  decrypt(input: AwsKMSDecryptInput!, config: AwsConfig): AwsKMSDecryptOutput
  deleteAlias(input: AwsKMSDeleteAliasInput!, config: AwsConfig): JSON
  deleteImportedKeyMaterial(input: AwsKMSDeleteImportedKeyMaterialInput!, config: AwsConfig): JSON
  describeKey(input: AwsKMSDescribeKeyInput!, config: AwsConfig): AwsKMSDescribeKeyOutput
  disableKey(input: AwsKMSDisableKeyInput!, config: AwsConfig): JSON
  disableKeyRotation(input: AwsKMSDisableKeyRotationInput!, config: AwsConfig): JSON
  enableKey(input: AwsKMSEnableKeyInput!, config: AwsConfig): JSON
  enableKeyRotation(input: AwsKMSEnableKeyRotationInput!, config: AwsConfig): JSON
  encrypt(input: AwsKMSEncryptInput!, config: AwsConfig): AwsKMSEncryptOutput
  generateDataKey(input: AwsKMSGenerateDataKeyInput!, config: AwsConfig): AwsKMSGenerateDataKeyOutput
  generateDataKeyWithoutPlaintext(input: AwsKMSGenerateDataKeyWithoutPlaintextInput!, config: AwsConfig): AwsKMSGenerateDataKeyWithoutPlaintextOutput
  generateRandom(input: AwsKMSGenerateRandomInput, config: AwsConfig): AwsKMSGenerateRandomOutput
  getKeyPolicy(input: AwsKMSGetKeyPolicyInput!, config: AwsConfig): AwsKMSGetKeyPolicyOutput
  getKeyRotationStatus(input: AwsKMSGetKeyRotationStatusInput!, config: AwsConfig): AwsKMSGetKeyRotationStatusOutput
  getParametersForImport(input: AwsKMSGetParametersForImportInput!, config: AwsConfig): AwsKMSGetParametersForImportOutput
  importKeyMaterial(input: AwsKMSImportKeyMaterialInput!, config: AwsConfig): JSON
  listAliases(input: AwsKMSListAliasesInput, config: AwsConfig): AwsKMSListAliasesOutput
  listGrants(input: AwsKMSListGrantsInput!, config: AwsConfig): JSON
  listKeyPolicies(input: AwsKMSListKeyPoliciesInput!, config: AwsConfig): AwsKMSListKeyPoliciesOutput
  listKeys(input: AwsKMSListKeysInput, config: AwsConfig): AwsKMSListKeysOutput
  listResourceTags(input: AwsKMSListResourceTagsInput!, config: AwsConfig): AwsKMSListResourceTagsOutput
  listRetirableGrants(input: AwsKMSListRetirableGrantsInput!, config: AwsConfig): JSON
  putKeyPolicy(input: AwsKMSPutKeyPolicyInput!, config: AwsConfig): JSON
  reEncrypt(input: AwsKMSReEncryptInput!, config: AwsConfig): AwsKMSReEncryptOutput
  retireGrant(input: AwsKMSRetireGrantInput, config: AwsConfig): JSON
  revokeGrant(input: AwsKMSRevokeGrantInput!, config: AwsConfig): JSON
  scheduleKeyDeletion(input: AwsKMSScheduleKeyDeletionInput!, config: AwsConfig): AwsKMSScheduleKeyDeletionOutput
  tagResource(input: AwsKMSTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsKMSUntagResourceInput!, config: AwsConfig): JSON
  updateAlias(input: AwsKMSUpdateAliasInput!, config: AwsConfig): JSON
  updateKeyDescription(input: AwsKMSUpdateKeyDescriptionInput!, config: AwsConfig): JSON
}

input AwsKMSCancelKeyDeletionInput {
  KeyId: String!
}

type AwsKMSCancelKeyDeletionOutput {
  KeyId: String
}

input AwsKMSCreateAliasInput {
  AliasName: String!
  TargetKeyId: String!
}

input AwsKMSCreateGrantInput {
  KeyId: String!
  GranteePrincipal: String!
  RetiringPrincipal: String
  Operations: [String]!
  Constraints: AwsKMSSaInput
  GrantTokens: [String]
  Name: String
}

type AwsKMSCreateGrantOutput {
  GrantToken: String
  GrantId: String
}

input AwsKMSCreateKeyInput {
  Policy: String
  Description: String
  KeyUsage: String
  Origin: String
  BypassPolicyLockoutSafetyCheck: Boolean
  Tags: [AwsKMSSpInput]
}

type AwsKMSCreateKeyOutput {
  KeyMetadata: AwsKMSSu
}

input AwsKMSDecryptInput {
  CiphertextBlob: JSON!
  EncryptionContext: JSON
  GrantTokens: [String]
}

type AwsKMSDecryptOutput {
  KeyId: String
  Plaintext: JSON
}

input AwsKMSDeleteAliasInput {
  AliasName: String!
}

input AwsKMSDeleteImportedKeyMaterialInput {
  KeyId: String!
}

input AwsKMSDescribeKeyInput {
  KeyId: String!
  GrantTokens: [String]
}

type AwsKMSDescribeKeyOutput {
  KeyMetadata: AwsKMSSu
}

input AwsKMSDisableKeyInput {
  KeyId: String!
}

input AwsKMSDisableKeyRotationInput {
  KeyId: String!
}

input AwsKMSEnableKeyInput {
  KeyId: String!
}

input AwsKMSEnableKeyRotationInput {
  KeyId: String!
}

input AwsKMSEncryptInput {
  KeyId: String!
  Plaintext: JSON!
  EncryptionContext: JSON
  GrantTokens: [String]
}

type AwsKMSEncryptOutput {
  CiphertextBlob: JSON
  KeyId: String
}

input AwsKMSGenerateDataKeyInput {
  KeyId: String!
  EncryptionContext: JSON
  NumberOfBytes: Int
  KeySpec: String
  GrantTokens: [String]
}

type AwsKMSGenerateDataKeyOutput {
  CiphertextBlob: JSON
  Plaintext: JSON
  KeyId: String
}

input AwsKMSGenerateDataKeyWithoutPlaintextInput {
  KeyId: String!
  EncryptionContext: JSON
  KeySpec: String
  NumberOfBytes: Int
  GrantTokens: [String]
}

type AwsKMSGenerateDataKeyWithoutPlaintextOutput {
  CiphertextBlob: JSON
  KeyId: String
}

input AwsKMSGenerateRandomInput {
  NumberOfBytes: Int
}

type AwsKMSGenerateRandomOutput {
  Plaintext: JSON
}

input AwsKMSGetKeyPolicyInput {
  KeyId: String!
  PolicyName: String!
}

type AwsKMSGetKeyPolicyOutput {
  Policy: String
}

input AwsKMSGetKeyRotationStatusInput {
  KeyId: String!
}

type AwsKMSGetKeyRotationStatusOutput {
  KeyRotationEnabled: Boolean
}

input AwsKMSGetParametersForImportInput {
  KeyId: String!
  WrappingAlgorithm: String!
  WrappingKeySpec: String!
}

type AwsKMSGetParametersForImportOutput {
  KeyId: String
  ImportToken: JSON
  PublicKey: JSON
  ParametersValidTo: Date
}

input AwsKMSImportKeyMaterialInput {
  KeyId: String!
  ImportToken: JSON!
  EncryptedKeyMaterial: JSON!
  ValidTo: Date
  ExpirationModel: String
}

input AwsKMSListAliasesInput {
  Limit: Int
  Marker: String
}

type AwsKMSListAliasesOutput {
  Aliases: [AwsKMSListAliasesOutputAliases]
  NextMarker: String
  Truncated: Boolean
}

type AwsKMSListAliasesOutputAliases {
  AliasName: String
  AliasArn: String
  TargetKeyId: String
}

input AwsKMSListGrantsInput {
  Limit: Int
  Marker: String
  KeyId: String!
}

input AwsKMSListKeyPoliciesInput {
  KeyId: String!
  Limit: Int
  Marker: String
}

type AwsKMSListKeyPoliciesOutput {
  PolicyNames: [String]
  NextMarker: String
  Truncated: Boolean
}

input AwsKMSListKeysInput {
  Limit: Int
  Marker: String
}

type AwsKMSListKeysOutput {
  Keys: [AwsKMSListKeysOutputKeys]
  NextMarker: String
  Truncated: Boolean
}

type AwsKMSListKeysOutputKeys {
  KeyId: String
  KeyArn: String
}

input AwsKMSListResourceTagsInput {
  KeyId: String!
  Limit: Int
  Marker: String
}

type AwsKMSListResourceTagsOutput {
  Tags: [AwsKMSSp]
  NextMarker: String
  Truncated: Boolean
}

input AwsKMSListRetirableGrantsInput {
  Limit: Int
  Marker: String
  RetiringPrincipal: String!
}

input AwsKMSPutKeyPolicyInput {
  KeyId: String!
  PolicyName: String!
  Policy: String!
  BypassPolicyLockoutSafetyCheck: Boolean
}

input AwsKMSReEncryptInput {
  CiphertextBlob: JSON!
  SourceEncryptionContext: JSON
  DestinationKeyId: String!
  DestinationEncryptionContext: JSON
  GrantTokens: [String]
}

type AwsKMSReEncryptOutput {
  CiphertextBlob: JSON
  SourceKeyId: String
  KeyId: String
}

input AwsKMSRetireGrantInput {
  GrantToken: String
  KeyId: String
  GrantId: String
}

input AwsKMSRevokeGrantInput {
  KeyId: String!
  GrantId: String!
}

input AwsKMSSaInput {
  EncryptionContextSubset: JSON
  EncryptionContextEquals: JSON
}

input AwsKMSScheduleKeyDeletionInput {
  KeyId: String!
  PendingWindowInDays: Int
}

type AwsKMSScheduleKeyDeletionOutput {
  KeyId: String
  DeletionDate: Date
}

type AwsKMSSp {
  TagKey: String!
  TagValue: String!
}

input AwsKMSSpInput {
  TagKey: String!
  TagValue: String!
}

type AwsKMSSu {
  AWSAccountId: String
  KeyId: String!
  Arn: String
  CreationDate: Date
  Enabled: Boolean
  Description: String
  KeyUsage: String
  KeyState: String
  DeletionDate: Date
  ValidTo: Date
  Origin: String
  ExpirationModel: String
  KeyManager: String
}

input AwsKMSTagResourceInput {
  KeyId: String!
  Tags: [AwsKMSSpInput]!
}

input AwsKMSUntagResourceInput {
  KeyId: String!
  TagKeys: [String]!
}

input AwsKMSUpdateAliasInput {
  AliasName: String!
  TargetKeyId: String!
}

input AwsKMSUpdateKeyDescriptionInput {
  KeyId: String!
  Description: String!
}

# AWS Lambda (2015-03-31)
type AwsLambda {
  addPermission(input: AwsLambdaAddPermissionInput!, config: AwsConfig): AwsLambdaAddPermissionOutput
  createAlias(input: AwsLambdaCreateAliasInput!, config: AwsConfig): JSON
  createEventSourceMapping(input: AwsLambdaCreateEventSourceMappingInput!, config: AwsConfig): JSON
  createFunction(input: AwsLambdaCreateFunctionInput!, config: AwsConfig): JSON
  deleteAlias(input: AwsLambdaDeleteAliasInput!, config: AwsConfig): JSON
  deleteEventSourceMapping(input: AwsLambdaDeleteEventSourceMappingInput!, config: AwsConfig): JSON
  deleteFunction(input: AwsLambdaDeleteFunctionInput!, config: AwsConfig): JSON
  getAccountSettings(input: JSON, config: AwsConfig): AwsLambdaGetAccountSettingsOutput
  getAlias(input: AwsLambdaGetAliasInput!, config: AwsConfig): JSON
  getEventSourceMapping(input: AwsLambdaGetEventSourceMappingInput!, config: AwsConfig): JSON
  getFunction(input: AwsLambdaGetFunctionInput!, config: AwsConfig): AwsLambdaGetFunctionOutput
  getFunctionConfiguration(input: AwsLambdaGetFunctionConfigurationInput!, config: AwsConfig): JSON
  getPolicy(input: AwsLambdaGetPolicyInput!, config: AwsConfig): AwsLambdaGetPolicyOutput
  invoke(input: AwsLambdaInvokeInput!, config: AwsConfig): AwsLambdaInvokeOutput
  invokeAsync(input: AwsLambdaInvokeAsyncInput!, config: AwsConfig): AwsLambdaInvokeAsyncOutput
  listAliases(input: AwsLambdaListAliasesInput!, config: AwsConfig): AwsLambdaListAliasesOutput
  listEventSourceMappings(input: AwsLambdaListEventSourceMappingsInput, config: AwsConfig): AwsLambdaListEventSourceMappingsOutput
  listFunctions(input: AwsLambdaListFunctionsInput, config: AwsConfig): AwsLambdaListFunctionsOutput
  listTags(input: AwsLambdaListTagsInput!, config: AwsConfig): AwsLambdaListTagsOutput
  listVersionsByFunction(input: AwsLambdaListVersionsByFunctionInput!, config: AwsConfig): AwsLambdaListVersionsByFunctionOutput
  publishVersion(input: AwsLambdaPublishVersionInput!, config: AwsConfig): JSON
  removePermission(input: AwsLambdaRemovePermissionInput!, config: AwsConfig): JSON
  tagResource(input: AwsLambdaTagResourceInput!, config: AwsConfig): JSON
  untagResource(input: AwsLambdaUntagResourceInput!, config: AwsConfig): JSON
  updateAlias(input: AwsLambdaUpdateAliasInput!, config: AwsConfig): JSON
  updateEventSourceMapping(input: AwsLambdaUpdateEventSourceMappingInput!, config: AwsConfig): JSON
  updateFunctionCode(input: AwsLambdaUpdateFunctionCodeInput!, config: AwsConfig): JSON
  updateFunctionConfiguration(input: AwsLambdaUpdateFunctionConfigurationInput!, config: AwsConfig): JSON
}

input AwsLambdaAddPermissionInput {
  FunctionName: String!
  StatementId: String!
  Action: String!
  Principal: String!
  SourceArn: String
  SourceAccount: String
  EventSourceToken: String
  Qualifier: String
}

type AwsLambdaAddPermissionOutput {
  Statement: String
}

input AwsLambdaCreateAliasInput {
  FunctionName: String!
  Name: String!
  FunctionVersion: String!
  Description: String
  RoutingConfig: AwsLambdaSgInput
}

input AwsLambdaCreateEventSourceMappingInput {
  EventSourceArn: String!
  FunctionName: String!
  Enabled: Boolean
  BatchSize: Int
  StartingPosition: String!
  StartingPositionTimestamp: Date
}

input AwsLambdaCreateFunctionCodeInput {
  ZipFile: JSON
  S3Bucket: String
  S3Key: String
  S3ObjectVersion: String
}

input AwsLambdaCreateFunctionInput {
  FunctionName: String!
  Runtime: String!
  Role: String!
  Handler: String!
  Code: AwsLambdaCreateFunctionCodeInput!
  Description: String
  Timeout: Int
  MemorySize: Int
  Publish: Boolean
  VpcConfig: AwsLambdaS14Input
  DeadLetterConfig: AwsLambdaS19Input
  Environment: AwsLambdaS1bInput
  KMSKeyArn: String
  TracingConfig: AwsLambdaS1gInput
  Tags: JSON
}

input AwsLambdaDeleteAliasInput {
  FunctionName: String!
  Name: String!
}

input AwsLambdaDeleteEventSourceMappingInput {
  UUID: String!
}

input AwsLambdaDeleteFunctionInput {
  FunctionName: String!
  Qualifier: String
}

type AwsLambdaGetAccountSettingsOutput {
  AccountLimit: AwsLambdaGetAccountSettingsOutputAccountLimit
  AccountUsage: AwsLambdaGetAccountSettingsOutputAccountUsage
}

type AwsLambdaGetAccountSettingsOutputAccountLimit {
  TotalCodeSize: JSON
  CodeSizeUnzipped: JSON
  CodeSizeZipped: JSON
  ConcurrentExecutions: Int
}

type AwsLambdaGetAccountSettingsOutputAccountUsage {
  TotalCodeSize: JSON
  FunctionCount: JSON
}

input AwsLambdaGetAliasInput {
  FunctionName: String!
  Name: String!
}

input AwsLambdaGetEventSourceMappingInput {
  UUID: String!
}

input AwsLambdaGetFunctionConfigurationInput {
  FunctionName: String!
  Qualifier: String
}

input AwsLambdaGetFunctionInput {
  FunctionName: String!
  Qualifier: String
}

type AwsLambdaGetFunctionOutput {
  Configuration: AwsLambdaS1l
  Code: AwsLambdaGetFunctionOutputCode
  Tags: JSON
}

type AwsLambdaGetFunctionOutputCode {
  RepositoryType: String
  Location: String
}

input AwsLambdaGetPolicyInput {
  FunctionName: String!
  Qualifier: String
}

type AwsLambdaGetPolicyOutput {
  Policy: String
}

input AwsLambdaInvokeAsyncInput {
  FunctionName: String!
  InvokeArgs: JSON!
}

type AwsLambdaInvokeAsyncOutput {
  Status: Int
}

input AwsLambdaInvokeInput {
  FunctionName: String!
  InvocationType: String
  LogType: String
  ClientContext: String
  Payload: JSON
  Qualifier: String
}

type AwsLambdaInvokeOutput {
  StatusCode: Int
  FunctionError: String
  LogResult: String
  Payload: JSON
  ExecutedVersion: String
}

input AwsLambdaListAliasesInput {
  FunctionName: String!
  FunctionVersion: String
  Marker: String
  MaxItems: Int
}

type AwsLambdaListAliasesOutput {
  NextMarker: String
  Aliases: [AwsLambdaSk]
}

input AwsLambdaListEventSourceMappingsInput {
  EventSourceArn: String
  FunctionName: String
  Marker: String
  MaxItems: Int
}

type AwsLambdaListEventSourceMappingsOutput {
  NextMarker: String
  EventSourceMappings: [AwsLambdaSr]
}

input AwsLambdaListFunctionsInput {
  MasterRegion: String
  FunctionVersion: String
  Marker: String
  MaxItems: Int
}

type AwsLambdaListFunctionsOutput {
  NextMarker: String
  Functions: [AwsLambdaS1l]
}

input AwsLambdaListTagsInput {
  Resource: String!
}

type AwsLambdaListTagsOutput {
  Tags: JSON
}

input AwsLambdaListVersionsByFunctionInput {
  FunctionName: String!
  Marker: String
  MaxItems: Int
}

type AwsLambdaListVersionsByFunctionOutput {
  NextMarker: String
  Versions: [AwsLambdaS1l]
}

input AwsLambdaPublishVersionInput {
  FunctionName: String!
  CodeSha256: String
  Description: String
}

input AwsLambdaRemovePermissionInput {
  FunctionName: String!
  StatementId: String!
  Qualifier: String
}

input AwsLambdaS14Input {
  SubnetIds: [String]
  SecurityGroupIds: [String]
}

type AwsLambdaS19 {
  TargetArn: String
}

input AwsLambdaS19Input {
  TargetArn: String
}

input AwsLambdaS1bInput {
  Variables: JSON
}

input AwsLambdaS1gInput {
  Mode: String
}

type AwsLambdaS1l {
  FunctionName: String
  FunctionArn: String
  Runtime: String
  Role: String
  Handler: String
  CodeSize: JSON
  Description: String
  Timeout: Int
  MemorySize: Int
  LastModified: String
  CodeSha256: String
  Version: String
  VpcConfig: AwsLambdaS1lVpcConfig
  DeadLetterConfig: AwsLambdaS19
  Environment: AwsLambdaS1lEnvironment
  KMSKeyArn: String
  TracingConfig: AwsLambdaS1lTracingConfig
  MasterArn: String
}

type AwsLambdaS1lEnvironment {
  Variables: JSON
  Error: AwsLambdaS1lEnvironmentError
}

type AwsLambdaS1lEnvironmentError {
  ErrorCode: String
  Message: String
}

type AwsLambdaS1lTracingConfig {
  Mode: String
}

type AwsLambdaS1lVpcConfig {
  SubnetIds: [String]
  SecurityGroupIds: [String]
  VpcId: String
}

type AwsLambdaSg {
  AdditionalVersionWeights: JSON
}

input AwsLambdaSgInput {
  AdditionalVersionWeights: JSON
}

type AwsLambdaSk {
  AliasArn: String
  Name: String
  FunctionVersion: String
  Description: String
  RoutingConfig: AwsLambdaSg
}

type AwsLambdaSr {
  UUID: String
  BatchSize: Int
  EventSourceArn: String
  FunctionArn: String
  LastModified: Date
  LastProcessingResult: String
  State: String
  StateTransitionReason: String
}

input AwsLambdaTagResourceInput {
  Resource: String!
  Tags: JSON!
}

input AwsLambdaUntagResourceInput {
  Resource: String!
  TagKeys: [String]!
}

input AwsLambdaUpdateAliasInput {
  FunctionName: String!
  Name: String!
  FunctionVersion: String
  Description: String
  RoutingConfig: AwsLambdaSgInput
}

input AwsLambdaUpdateEventSourceMappingInput {
  UUID: String!
  FunctionName: String
  Enabled: Boolean
  BatchSize: Int
}

input AwsLambdaUpdateFunctionCodeInput {
  FunctionName: String!
  ZipFile: JSON
  S3Bucket: String
  S3Key: String
  S3ObjectVersion: String
  Publish: Boolean
  DryRun: Boolean
}

input AwsLambdaUpdateFunctionConfigurationInput {
  FunctionName: String!
  Role: String
  Handler: String
  Description: String
  Timeout: Int
  MemorySize: Int
  VpcConfig: AwsLambdaS14Input
  Environment: AwsLambdaS1bInput
  Runtime: String
  DeadLetterConfig: AwsLambdaS19Input
  KMSKeyArn: String
  TracingConfig: AwsLambdaS1gInput
}

# Amazon Lex Model Building Service (2017-04-19)
type AwsLexModelBuildingService {
  createBotVersion(input: AwsLexModelBuildingServiceCreateBotVersionInput!, config: AwsConfig): AwsLexModelBuildingServiceCreateBotVersionOutput
  createIntentVersion(input: AwsLexModelBuildingServiceCreateIntentVersionInput!, config: AwsConfig): AwsLexModelBuildingServiceCreateIntentVersionOutput
  createSlotTypeVersion(input: AwsLexModelBuildingServiceCreateSlotTypeVersionInput!, config: AwsConfig): AwsLexModelBuildingServiceCreateSlotTypeVersionOutput
  deleteBot(input: AwsLexModelBuildingServiceDeleteBotInput!, config: AwsConfig): JSON
  deleteBotAlias(input: AwsLexModelBuildingServiceDeleteBotAliasInput!, config: AwsConfig): JSON
  deleteBotChannelAssociation(input: AwsLexModelBuildingServiceDeleteBotChannelAssociationInput!, config: AwsConfig): JSON
  deleteBotVersion(input: AwsLexModelBuildingServiceDeleteBotVersionInput!, config: AwsConfig): JSON
  deleteIntent(input: AwsLexModelBuildingServiceDeleteIntentInput!, config: AwsConfig): JSON
  deleteIntentVersion(input: AwsLexModelBuildingServiceDeleteIntentVersionInput!, config: AwsConfig): JSON
  deleteSlotType(input: AwsLexModelBuildingServiceDeleteSlotTypeInput!, config: AwsConfig): JSON
  deleteSlotTypeVersion(input: AwsLexModelBuildingServiceDeleteSlotTypeVersionInput!, config: AwsConfig): JSON
  deleteUtterances(input: AwsLexModelBuildingServiceDeleteUtterancesInput!, config: AwsConfig): JSON
  getBot(input: AwsLexModelBuildingServiceGetBotInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBotOutput
  getBotAlias(input: AwsLexModelBuildingServiceGetBotAliasInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBotAliasOutput
  getBotAliases(input: AwsLexModelBuildingServiceGetBotAliasesInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBotAliasesOutput
  getBotChannelAssociation(input: AwsLexModelBuildingServiceGetBotChannelAssociationInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBotChannelAssociationOutput
  getBotChannelAssociations(input: AwsLexModelBuildingServiceGetBotChannelAssociationsInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBotChannelAssociationsOutput
  getBotVersions(input: AwsLexModelBuildingServiceGetBotVersionsInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBotVersionsOutput
  getBots(input: AwsLexModelBuildingServiceGetBotsInput, config: AwsConfig): AwsLexModelBuildingServiceGetBotsOutput
  getBuiltinIntent(input: AwsLexModelBuildingServiceGetBuiltinIntentInput!, config: AwsConfig): AwsLexModelBuildingServiceGetBuiltinIntentOutput
  getBuiltinIntents(input: AwsLexModelBuildingServiceGetBuiltinIntentsInput, config: AwsConfig): AwsLexModelBuildingServiceGetBuiltinIntentsOutput
  getBuiltinSlotTypes(input: AwsLexModelBuildingServiceGetBuiltinSlotTypesInput, config: AwsConfig): AwsLexModelBuildingServiceGetBuiltinSlotTypesOutput
  getExport(input: AwsLexModelBuildingServiceGetExportInput!, config: AwsConfig): AwsLexModelBuildingServiceGetExportOutput
  getIntent(input: AwsLexModelBuildingServiceGetIntentInput!, config: AwsConfig): AwsLexModelBuildingServiceGetIntentOutput
  getIntentVersions(input: AwsLexModelBuildingServiceGetIntentVersionsInput!, config: AwsConfig): AwsLexModelBuildingServiceGetIntentVersionsOutput
  getIntents(input: AwsLexModelBuildingServiceGetIntentsInput, config: AwsConfig): AwsLexModelBuildingServiceGetIntentsOutput
  getSlotType(input: AwsLexModelBuildingServiceGetSlotTypeInput!, config: AwsConfig): AwsLexModelBuildingServiceGetSlotTypeOutput
  getSlotTypeVersions(input: AwsLexModelBuildingServiceGetSlotTypeVersionsInput!, config: AwsConfig): AwsLexModelBuildingServiceGetSlotTypeVersionsOutput
  getSlotTypes(input: AwsLexModelBuildingServiceGetSlotTypesInput, config: AwsConfig): AwsLexModelBuildingServiceGetSlotTypesOutput
  getUtterancesView(input: AwsLexModelBuildingServiceGetUtterancesViewInput!, config: AwsConfig): AwsLexModelBuildingServiceGetUtterancesViewOutput
  putBot(input: AwsLexModelBuildingServicePutBotInput!, config: AwsConfig): AwsLexModelBuildingServicePutBotOutput
  putBotAlias(input: AwsLexModelBuildingServicePutBotAliasInput!, config: AwsConfig): AwsLexModelBuildingServicePutBotAliasOutput
  putIntent(input: AwsLexModelBuildingServicePutIntentInput!, config: AwsConfig): AwsLexModelBuildingServicePutIntentOutput
  putSlotType(input: AwsLexModelBuildingServicePutSlotTypeInput!, config: AwsConfig): AwsLexModelBuildingServicePutSlotTypeOutput
}

input AwsLexModelBuildingServiceCreateBotVersionInput {
  name: String!
  checksum: String
}

type AwsLexModelBuildingServiceCreateBotVersionOutput {
  name: String
  description: String
  intents: [AwsLexModelBuildingServiceS6]
  clarificationPrompt: AwsLexModelBuildingServiceSa
  abortStatement: AwsLexModelBuildingServiceSh
  status: String
  failureReason: String
  lastUpdatedDate: Date
  createdDate: Date
  idleSessionTTLInSeconds: Int
  voiceId: String
  checksum: String
  version: String
  locale: String
  childDirected: Boolean
}

input AwsLexModelBuildingServiceCreateIntentVersionInput {
  name: String!
  checksum: String
}

type AwsLexModelBuildingServiceCreateIntentVersionOutput {
  name: String
  description: String
  slots: [AwsLexModelBuildingServiceSp]
  sampleUtterances: [String]
  confirmationPrompt: AwsLexModelBuildingServiceSa
  rejectionStatement: AwsLexModelBuildingServiceSh
  followUpPrompt: AwsLexModelBuildingServiceSy
  conclusionStatement: AwsLexModelBuildingServiceSh
  dialogCodeHook: AwsLexModelBuildingServiceSz
  fulfillmentActivity: AwsLexModelBuildingServiceS12
  parentIntentSignature: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
}

input AwsLexModelBuildingServiceCreateSlotTypeVersionInput {
  name: String!
  checksum: String
}

type AwsLexModelBuildingServiceCreateSlotTypeVersionOutput {
  name: String
  description: String
  enumerationValues: [AwsLexModelBuildingServiceS18]
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
  valueSelectionStrategy: String
}

input AwsLexModelBuildingServiceDeleteBotAliasInput {
  name: String!
  botName: String!
}

input AwsLexModelBuildingServiceDeleteBotChannelAssociationInput {
  name: String!
  botName: String!
  botAlias: String!
}

input AwsLexModelBuildingServiceDeleteBotInput {
  name: String!
}

input AwsLexModelBuildingServiceDeleteBotVersionInput {
  name: String!
  version: String!
}

input AwsLexModelBuildingServiceDeleteIntentInput {
  name: String!
}

input AwsLexModelBuildingServiceDeleteIntentVersionInput {
  name: String!
  version: String!
}

input AwsLexModelBuildingServiceDeleteSlotTypeInput {
  name: String!
}

input AwsLexModelBuildingServiceDeleteSlotTypeVersionInput {
  name: String!
  version: String!
}

input AwsLexModelBuildingServiceDeleteUtterancesInput {
  botName: String!
  userId: String!
}

input AwsLexModelBuildingServiceGetBotAliasesInput {
  botName: String!
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexModelBuildingServiceGetBotAliasesOutput {
  BotAliases: [AwsLexModelBuildingServiceGetBotAliasesOutputBotAliases]
  nextToken: String
}

type AwsLexModelBuildingServiceGetBotAliasesOutputBotAliases {
  name: String
  description: String
  botVersion: String
  botName: String
  lastUpdatedDate: Date
  createdDate: Date
  checksum: String
}

input AwsLexModelBuildingServiceGetBotAliasInput {
  name: String!
  botName: String!
}

type AwsLexModelBuildingServiceGetBotAliasOutput {
  name: String
  description: String
  botVersion: String
  botName: String
  lastUpdatedDate: Date
  createdDate: Date
  checksum: String
}

input AwsLexModelBuildingServiceGetBotChannelAssociationInput {
  name: String!
  botName: String!
  botAlias: String!
}

type AwsLexModelBuildingServiceGetBotChannelAssociationOutput {
  name: String
  description: String
  botAlias: String
  botName: String
  createdDate: Date
  type: String
  botConfiguration: JSON
}

input AwsLexModelBuildingServiceGetBotChannelAssociationsInput {
  botName: String!
  botAlias: String!
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexModelBuildingServiceGetBotChannelAssociationsOutput {
  botChannelAssociations: [AwsLexModelBuildingServiceGetBotChannelAssociationsOutputBotChannelAssociations]
  nextToken: String
}

type AwsLexModelBuildingServiceGetBotChannelAssociationsOutputBotChannelAssociations {
  name: String
  description: String
  botAlias: String
  botName: String
  createdDate: Date
  type: String
  botConfiguration: JSON
}

input AwsLexModelBuildingServiceGetBotInput {
  name: String!
  versionOrAlias: String!
}

type AwsLexModelBuildingServiceGetBotOutput {
  name: String
  description: String
  intents: [AwsLexModelBuildingServiceS6]
  clarificationPrompt: AwsLexModelBuildingServiceSa
  abortStatement: AwsLexModelBuildingServiceSh
  status: String
  failureReason: String
  lastUpdatedDate: Date
  createdDate: Date
  idleSessionTTLInSeconds: Int
  voiceId: String
  checksum: String
  version: String
  locale: String
  childDirected: Boolean
}

input AwsLexModelBuildingServiceGetBotsInput {
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexModelBuildingServiceGetBotsOutput {
  bots: [AwsLexModelBuildingServiceS2b]
  nextToken: String
}

input AwsLexModelBuildingServiceGetBotVersionsInput {
  name: String!
  nextToken: String
  maxResults: Int
}

type AwsLexModelBuildingServiceGetBotVersionsOutput {
  bots: [AwsLexModelBuildingServiceS2b]
  nextToken: String
}

input AwsLexModelBuildingServiceGetBuiltinIntentInput {
  signature: String!
}

type AwsLexModelBuildingServiceGetBuiltinIntentOutput {
  signature: String
  supportedLocales: [String]
  slots: [AwsLexModelBuildingServiceGetBuiltinIntentOutputSlots]
}

type AwsLexModelBuildingServiceGetBuiltinIntentOutputSlots {
  name: String
}

input AwsLexModelBuildingServiceGetBuiltinIntentsInput {
  locale: String
  signatureContains: String
  nextToken: String
  maxResults: Int
}

type AwsLexModelBuildingServiceGetBuiltinIntentsOutput {
  intents: [AwsLexModelBuildingServiceGetBuiltinIntentsOutputIntents]
  nextToken: String
}

type AwsLexModelBuildingServiceGetBuiltinIntentsOutputIntents {
  signature: String
  supportedLocales: [String]
}

input AwsLexModelBuildingServiceGetBuiltinSlotTypesInput {
  locale: String
  signatureContains: String
  nextToken: String
  maxResults: Int
}

type AwsLexModelBuildingServiceGetBuiltinSlotTypesOutput {
  slotTypes: [AwsLexModelBuildingServiceGetBuiltinSlotTypesOutputSlotTypes]
  nextToken: String
}

type AwsLexModelBuildingServiceGetBuiltinSlotTypesOutputSlotTypes {
  signature: String
  supportedLocales: [String]
}

input AwsLexModelBuildingServiceGetExportInput {
  name: String!
  version: String!
  resourceType: String!
  exportType: String!
}

type AwsLexModelBuildingServiceGetExportOutput {
  name: String
  version: String
  resourceType: String
  exportType: String
  exportStatus: String
  failureReason: String
  url: String
}

input AwsLexModelBuildingServiceGetIntentInput {
  name: String!
  version: String!
}

type AwsLexModelBuildingServiceGetIntentOutput {
  name: String
  description: String
  slots: [AwsLexModelBuildingServiceSp]
  sampleUtterances: [String]
  confirmationPrompt: AwsLexModelBuildingServiceSa
  rejectionStatement: AwsLexModelBuildingServiceSh
  followUpPrompt: AwsLexModelBuildingServiceSy
  conclusionStatement: AwsLexModelBuildingServiceSh
  dialogCodeHook: AwsLexModelBuildingServiceSz
  fulfillmentActivity: AwsLexModelBuildingServiceS12
  parentIntentSignature: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
}

input AwsLexModelBuildingServiceGetIntentsInput {
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexModelBuildingServiceGetIntentsOutput {
  intents: [AwsLexModelBuildingServiceS33]
  nextToken: String
}

input AwsLexModelBuildingServiceGetIntentVersionsInput {
  name: String!
  nextToken: String
  maxResults: Int
}

type AwsLexModelBuildingServiceGetIntentVersionsOutput {
  intents: [AwsLexModelBuildingServiceS33]
  nextToken: String
}

input AwsLexModelBuildingServiceGetSlotTypeInput {
  name: String!
  version: String!
}

type AwsLexModelBuildingServiceGetSlotTypeOutput {
  name: String
  description: String
  enumerationValues: [AwsLexModelBuildingServiceS18]
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
  valueSelectionStrategy: String
}

input AwsLexModelBuildingServiceGetSlotTypesInput {
  nextToken: String
  maxResults: Int
  nameContains: String
}

type AwsLexModelBuildingServiceGetSlotTypesOutput {
  slotTypes: [AwsLexModelBuildingServiceS3b]
  nextToken: String
}

input AwsLexModelBuildingServiceGetSlotTypeVersionsInput {
  name: String!
  nextToken: String
  maxResults: Int
}

type AwsLexModelBuildingServiceGetSlotTypeVersionsOutput {
  slotTypes: [AwsLexModelBuildingServiceS3b]
  nextToken: String
}

input AwsLexModelBuildingServiceGetUtterancesViewInput {
  botName: String!
  botVersions: [String]!
  statusType: String!
}

type AwsLexModelBuildingServiceGetUtterancesViewOutput {
  botName: String
  utterances: [AwsLexModelBuildingServiceGetUtterancesViewOutputUtterances]
}

type AwsLexModelBuildingServiceGetUtterancesViewOutputUtterances {
  botVersion: String
  utterances: [AwsLexModelBuildingServiceGetUtterancesViewOutputUtterancesUtterances]
}

type AwsLexModelBuildingServiceGetUtterancesViewOutputUtterancesUtterances {
  utteranceString: String
  count: Int
  distinctUsers: Int
  firstUtteredDate: Date
  lastUtteredDate: Date
}

input AwsLexModelBuildingServicePutBotAliasInput {
  name: String!
  description: String
  botVersion: String!
  botName: String!
  checksum: String
}

type AwsLexModelBuildingServicePutBotAliasOutput {
  name: String
  description: String
  botVersion: String
  botName: String
  lastUpdatedDate: Date
  createdDate: Date
  checksum: String
}

input AwsLexModelBuildingServicePutBotInput {
  name: String!
  description: String
  intents: [AwsLexModelBuildingServiceS6Input]
  clarificationPrompt: AwsLexModelBuildingServiceSaInput
  abortStatement: AwsLexModelBuildingServiceShInput
  idleSessionTTLInSeconds: Int
  voiceId: String
  checksum: String
  processBehavior: String
  locale: String!
  childDirected: Boolean!
}

type AwsLexModelBuildingServicePutBotOutput {
  name: String
  description: String
  intents: [AwsLexModelBuildingServiceS6]
  clarificationPrompt: AwsLexModelBuildingServiceSa
  abortStatement: AwsLexModelBuildingServiceSh
  status: String
  failureReason: String
  lastUpdatedDate: Date
  createdDate: Date
  idleSessionTTLInSeconds: Int
  voiceId: String
  checksum: String
  version: String
  locale: String
  childDirected: Boolean
}

input AwsLexModelBuildingServicePutIntentInput {
  name: String!
  description: String
  slots: [AwsLexModelBuildingServiceSpInput]
  sampleUtterances: [String]
  confirmationPrompt: AwsLexModelBuildingServiceSaInput
  rejectionStatement: AwsLexModelBuildingServiceShInput
  followUpPrompt: AwsLexModelBuildingServiceSyInput
  conclusionStatement: AwsLexModelBuildingServiceShInput
  dialogCodeHook: AwsLexModelBuildingServiceSzInput
  fulfillmentActivity: AwsLexModelBuildingServiceS12Input
  parentIntentSignature: String
  checksum: String
}

type AwsLexModelBuildingServicePutIntentOutput {
  name: String
  description: String
  slots: [AwsLexModelBuildingServiceSp]
  sampleUtterances: [String]
  confirmationPrompt: AwsLexModelBuildingServiceSa
  rejectionStatement: AwsLexModelBuildingServiceSh
  followUpPrompt: AwsLexModelBuildingServiceSy
  conclusionStatement: AwsLexModelBuildingServiceSh
  dialogCodeHook: AwsLexModelBuildingServiceSz
  fulfillmentActivity: AwsLexModelBuildingServiceS12
  parentIntentSignature: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
}

input AwsLexModelBuildingServicePutSlotTypeInput {
  name: String!
  description: String
  enumerationValues: [AwsLexModelBuildingServiceS18Input]
  checksum: String
  valueSelectionStrategy: String
}

type AwsLexModelBuildingServicePutSlotTypeOutput {
  name: String
  description: String
  enumerationValues: [AwsLexModelBuildingServiceS18]
  lastUpdatedDate: Date
  createdDate: Date
  version: String
  checksum: String
  valueSelectionStrategy: String
}

type AwsLexModelBuildingServiceS12 {
  type: String!
  codeHook: AwsLexModelBuildingServiceSz
}

input AwsLexModelBuildingServiceS12Input {
  type: String!
  codeHook: AwsLexModelBuildingServiceSzInput
}

type AwsLexModelBuildingServiceS18 {
  value: String!
  synonyms: [String]
}

input AwsLexModelBuildingServiceS18Input {
  value: String!
  synonyms: [String]
}

type AwsLexModelBuildingServiceS2b {
  name: String
  description: String
  status: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
}

type AwsLexModelBuildingServiceS33 {
  name: String
  description: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
}

type AwsLexModelBuildingServiceS3b {
  name: String
  description: String
  lastUpdatedDate: Date
  createdDate: Date
  version: String
}

type AwsLexModelBuildingServiceS6 {
  intentName: String!
  intentVersion: String!
}

input AwsLexModelBuildingServiceS6Input {
  intentName: String!
  intentVersion: String!
}

type AwsLexModelBuildingServiceSa {
  messages: [AwsLexModelBuildingServiceSb]!
  maxAttempts: Int!
  responseCard: String
}

input AwsLexModelBuildingServiceSaInput {
  messages: [AwsLexModelBuildingServiceSbInput]!
  maxAttempts: Int!
  responseCard: String
}

type AwsLexModelBuildingServiceSb {
  contentType: String!
  content: String!
}

input AwsLexModelBuildingServiceSbInput {
  contentType: String!
  content: String!
}

type AwsLexModelBuildingServiceSh {
  messages: [AwsLexModelBuildingServiceSb]!
  responseCard: String
}

input AwsLexModelBuildingServiceShInput {
  messages: [AwsLexModelBuildingServiceSbInput]!
  responseCard: String
}

type AwsLexModelBuildingServiceSp {
  name: String!
  description: String
  slotConstraint: String!
  slotType: String
  slotTypeVersion: String
  valueElicitationPrompt: AwsLexModelBuildingServiceSa
  priority: Int
  sampleUtterances: [String]
  responseCard: String
}

input AwsLexModelBuildingServiceSpInput {
  name: String!
  description: String
  slotConstraint: String!
  slotType: String
  slotTypeVersion: String
  valueElicitationPrompt: AwsLexModelBuildingServiceSaInput
  priority: Int
  sampleUtterances: [String]
  responseCard: String
}

type AwsLexModelBuildingServiceSy {
  prompt: AwsLexModelBuildingServiceSa!
  rejectionStatement: AwsLexModelBuildingServiceSh!
}

input AwsLexModelBuildingServiceSyInput {
  prompt: AwsLexModelBuildingServiceSaInput!
  rejectionStatement: AwsLexModelBuildingServiceShInput!
}

type AwsLexModelBuildingServiceSz {
  uri: String!
  messageVersion: String!
}

input AwsLexModelBuildingServiceSzInput {
  uri: String!
  messageVersion: String!
}

# Amazon Lex Runtime Service (2016-11-28)
type AwsLexRuntime {
  postContent(input: AwsLexRuntimePostContentInput!, config: AwsConfig): AwsLexRuntimePostContentOutput
  postText(input: AwsLexRuntimePostTextInput!, config: AwsConfig): AwsLexRuntimePostTextOutput
}

input AwsLexRuntimePostContentInput {
  botName: String!
  botAlias: String!
  userId: String!
  sessionAttributes: String
  requestAttributes: String
  contentType: String!
  accept: String
  inputStream: JSON!
}

type AwsLexRuntimePostContentOutput {
  contentType: String
  intentName: String
  slots: String
  sessionAttributes: String
  message: String
  dialogState: String
  slotToElicit: String
  inputTranscript: String
  audioStream: JSON
}

input AwsLexRuntimePostTextInput {
  botName: String!
  botAlias: String!
  userId: String!
  sessionAttributes: JSON
  requestAttributes: JSON
  inputText: String!
}

type AwsLexRuntimePostTextOutput {
  intentName: String
  slots: JSON
  sessionAttributes: JSON
  message: String
  dialogState: String
  slotToElicit: String
  responseCard: AwsLexRuntimePostTextOutputResponseCard
}

type AwsLexRuntimePostTextOutputResponseCard {
  version: String
  contentType: String
  genericAttachments: [AwsLexRuntimePostTextOutputResponseCardGenericAttachments]
}

type AwsLexRuntimePostTextOutputResponseCardGenericAttachments {
  title: String
  subTitle: String
  attachmentLinkUrl: String
  imageUrl: String
  buttons: [AwsLexRuntimePostTextOutputResponseCardGenericAttachmentsButtons]
}

type AwsLexRuntimePostTextOutputResponseCardGenericAttachmentsButtons {
  text: String!
  value: String!
}

# Amazon Lightsail (2016-11-28)
type AwsLightsail {
  allocateStaticIp(input: AwsLightsailAllocateStaticIpInput!, config: AwsConfig): AwsLightsailAllocateStaticIpOutput
  attachDisk(input: AwsLightsailAttachDiskInput!, config: AwsConfig): AwsLightsailAttachDiskOutput
  attachInstancesToLoadBalancer(input: AwsLightsailAttachInstancesToLoadBalancerInput!, config: AwsConfig): AwsLightsailAttachInstancesToLoadBalancerOutput
  attachLoadBalancerTlsCertificate(input: AwsLightsailAttachLoadBalancerTlsCertificateInput!, config: AwsConfig): AwsLightsailAttachLoadBalancerTlsCertificateOutput
  attachStaticIp(input: AwsLightsailAttachStaticIpInput!, config: AwsConfig): AwsLightsailAttachStaticIpOutput
  closeInstancePublicPorts(input: AwsLightsailCloseInstancePublicPortsInput!, config: AwsConfig): AwsLightsailCloseInstancePublicPortsOutput
  createDisk(input: AwsLightsailCreateDiskInput!, config: AwsConfig): AwsLightsailCreateDiskOutput
  createDiskFromSnapshot(input: AwsLightsailCreateDiskFromSnapshotInput!, config: AwsConfig): AwsLightsailCreateDiskFromSnapshotOutput
  createDiskSnapshot(input: AwsLightsailCreateDiskSnapshotInput!, config: AwsConfig): AwsLightsailCreateDiskSnapshotOutput
  createDomain(input: AwsLightsailCreateDomainInput!, config: AwsConfig): AwsLightsailCreateDomainOutput
  createDomainEntry(input: AwsLightsailCreateDomainEntryInput!, config: AwsConfig): AwsLightsailCreateDomainEntryOutput
  createInstanceSnapshot(input: AwsLightsailCreateInstanceSnapshotInput!, config: AwsConfig): AwsLightsailCreateInstanceSnapshotOutput
  createInstances(input: AwsLightsailCreateInstancesInput!, config: AwsConfig): AwsLightsailCreateInstancesOutput
  createInstancesFromSnapshot(input: AwsLightsailCreateInstancesFromSnapshotInput!, config: AwsConfig): AwsLightsailCreateInstancesFromSnapshotOutput
  createKeyPair(input: AwsLightsailCreateKeyPairInput!, config: AwsConfig): AwsLightsailCreateKeyPairOutput
  createLoadBalancer(input: AwsLightsailCreateLoadBalancerInput!, config: AwsConfig): AwsLightsailCreateLoadBalancerOutput
  createLoadBalancerTlsCertificate(input: AwsLightsailCreateLoadBalancerTlsCertificateInput!, config: AwsConfig): AwsLightsailCreateLoadBalancerTlsCertificateOutput
  deleteDisk(input: AwsLightsailDeleteDiskInput!, config: AwsConfig): AwsLightsailDeleteDiskOutput
  deleteDiskSnapshot(input: AwsLightsailDeleteDiskSnapshotInput!, config: AwsConfig): AwsLightsailDeleteDiskSnapshotOutput
  deleteDomain(input: AwsLightsailDeleteDomainInput!, config: AwsConfig): AwsLightsailDeleteDomainOutput
  deleteDomainEntry(input: AwsLightsailDeleteDomainEntryInput!, config: AwsConfig): AwsLightsailDeleteDomainEntryOutput
  deleteInstance(input: AwsLightsailDeleteInstanceInput!, config: AwsConfig): AwsLightsailDeleteInstanceOutput
  deleteInstanceSnapshot(input: AwsLightsailDeleteInstanceSnapshotInput!, config: AwsConfig): AwsLightsailDeleteInstanceSnapshotOutput
  deleteKeyPair(input: AwsLightsailDeleteKeyPairInput!, config: AwsConfig): AwsLightsailDeleteKeyPairOutput
  deleteLoadBalancer(input: AwsLightsailDeleteLoadBalancerInput!, config: AwsConfig): AwsLightsailDeleteLoadBalancerOutput
  deleteLoadBalancerTlsCertificate(input: AwsLightsailDeleteLoadBalancerTlsCertificateInput!, config: AwsConfig): AwsLightsailDeleteLoadBalancerTlsCertificateOutput
  detachDisk(input: AwsLightsailDetachDiskInput!, config: AwsConfig): AwsLightsailDetachDiskOutput
  detachInstancesFromLoadBalancer(input: AwsLightsailDetachInstancesFromLoadBalancerInput!, config: AwsConfig): AwsLightsailDetachInstancesFromLoadBalancerOutput
  detachStaticIp(input: AwsLightsailDetachStaticIpInput!, config: AwsConfig): AwsLightsailDetachStaticIpOutput
  downloadDefaultKeyPair(input: JSON, config: AwsConfig): AwsLightsailDownloadDefaultKeyPairOutput
  getActiveNames(input: AwsLightsailGetActiveNamesInput, config: AwsConfig): AwsLightsailGetActiveNamesOutput
  getBlueprints(input: AwsLightsailGetBlueprintsInput, config: AwsConfig): AwsLightsailGetBlueprintsOutput
  getBundles(input: AwsLightsailGetBundlesInput, config: AwsConfig): AwsLightsailGetBundlesOutput
  getDisk(input: AwsLightsailGetDiskInput!, config: AwsConfig): AwsLightsailGetDiskOutput
  getDiskSnapshot(input: AwsLightsailGetDiskSnapshotInput!, config: AwsConfig): AwsLightsailGetDiskSnapshotOutput
  getDiskSnapshots(input: AwsLightsailGetDiskSnapshotsInput, config: AwsConfig): AwsLightsailGetDiskSnapshotsOutput
  getDisks(input: AwsLightsailGetDisksInput, config: AwsConfig): AwsLightsailGetDisksOutput
  getDomain(input: AwsLightsailGetDomainInput!, config: AwsConfig): AwsLightsailGetDomainOutput
  getDomains(input: AwsLightsailGetDomainsInput, config: AwsConfig): AwsLightsailGetDomainsOutput
  getInstance(input: AwsLightsailGetInstanceInput!, config: AwsConfig): AwsLightsailGetInstanceOutput
  getInstanceAccessDetails(input: AwsLightsailGetInstanceAccessDetailsInput!, config: AwsConfig): AwsLightsailGetInstanceAccessDetailsOutput
  getInstanceMetricData(input: AwsLightsailGetInstanceMetricDataInput!, config: AwsConfig): AwsLightsailGetInstanceMetricDataOutput
  getInstancePortStates(input: AwsLightsailGetInstancePortStatesInput!, config: AwsConfig): AwsLightsailGetInstancePortStatesOutput
  getInstanceSnapshot(input: AwsLightsailGetInstanceSnapshotInput!, config: AwsConfig): AwsLightsailGetInstanceSnapshotOutput
  getInstanceSnapshots(input: AwsLightsailGetInstanceSnapshotsInput, config: AwsConfig): AwsLightsailGetInstanceSnapshotsOutput
  getInstanceState(input: AwsLightsailGetInstanceStateInput!, config: AwsConfig): AwsLightsailGetInstanceStateOutput
  getInstances(input: AwsLightsailGetInstancesInput, config: AwsConfig): AwsLightsailGetInstancesOutput
  getKeyPair(input: AwsLightsailGetKeyPairInput!, config: AwsConfig): AwsLightsailGetKeyPairOutput
  getKeyPairs(input: AwsLightsailGetKeyPairsInput, config: AwsConfig): AwsLightsailGetKeyPairsOutput
  getLoadBalancer(input: AwsLightsailGetLoadBalancerInput!, config: AwsConfig): AwsLightsailGetLoadBalancerOutput
  getLoadBalancerMetricData(input: AwsLightsailGetLoadBalancerMetricDataInput!, config: AwsConfig): AwsLightsailGetLoadBalancerMetricDataOutput
  getLoadBalancerTlsCertificates(input: AwsLightsailGetLoadBalancerTlsCertificatesInput!, config: AwsConfig): AwsLightsailGetLoadBalancerTlsCertificatesOutput
  getLoadBalancers(input: AwsLightsailGetLoadBalancersInput, config: AwsConfig): AwsLightsailGetLoadBalancersOutput
  getOperation(input: AwsLightsailGetOperationInput!, config: AwsConfig): AwsLightsailGetOperationOutput
  getOperations(input: AwsLightsailGetOperationsInput, config: AwsConfig): AwsLightsailGetOperationsOutput
  getOperationsForResource(input: AwsLightsailGetOperationsForResourceInput!, config: AwsConfig): AwsLightsailGetOperationsForResourceOutput
  getRegions(input: AwsLightsailGetRegionsInput, config: AwsConfig): AwsLightsailGetRegionsOutput
  getStaticIp(input: AwsLightsailGetStaticIpInput!, config: AwsConfig): AwsLightsailGetStaticIpOutput
  getStaticIps(input: AwsLightsailGetStaticIpsInput, config: AwsConfig): AwsLightsailGetStaticIpsOutput
  importKeyPair(input: AwsLightsailImportKeyPairInput!, config: AwsConfig): AwsLightsailImportKeyPairOutput
  isVpcPeered(input: JSON, config: AwsConfig): AwsLightsailIsVpcPeeredOutput
  openInstancePublicPorts(input: AwsLightsailOpenInstancePublicPortsInput!, config: AwsConfig): AwsLightsailOpenInstancePublicPortsOutput
  peerVpc(input: JSON, config: AwsConfig): AwsLightsailPeerVpcOutput
  putInstancePublicPorts(input: AwsLightsailPutInstancePublicPortsInput!, config: AwsConfig): AwsLightsailPutInstancePublicPortsOutput
  rebootInstance(input: AwsLightsailRebootInstanceInput!, config: AwsConfig): AwsLightsailRebootInstanceOutput
  releaseStaticIp(input: AwsLightsailReleaseStaticIpInput!, config: AwsConfig): AwsLightsailReleaseStaticIpOutput
  startInstance(input: AwsLightsailStartInstanceInput!, config: AwsConfig): AwsLightsailStartInstanceOutput
  stopInstance(input: AwsLightsailStopInstanceInput!, config: AwsConfig): AwsLightsailStopInstanceOutput
  unpeerVpc(input: JSON, config: AwsConfig): AwsLightsailUnpeerVpcOutput
  updateDomainEntry(input: AwsLightsailUpdateDomainEntryInput!, config: AwsConfig): AwsLightsailUpdateDomainEntryOutput
  updateLoadBalancerAttribute(input: AwsLightsailUpdateLoadBalancerAttributeInput!, config: AwsConfig): AwsLightsailUpdateLoadBalancerAttributeOutput
}

input AwsLightsailAllocateStaticIpInput {
  staticIpName: String!
}

type AwsLightsailAllocateStaticIpOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailAttachDiskInput {
  diskName: String!
  instanceName: String!
  diskPath: String!
}

type AwsLightsailAttachDiskOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailAttachInstancesToLoadBalancerInput {
  loadBalancerName: String!
  instanceNames: [String]!
}

type AwsLightsailAttachInstancesToLoadBalancerOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailAttachLoadBalancerTlsCertificateInput {
  loadBalancerName: String!
  certificateName: String!
}

type AwsLightsailAttachLoadBalancerTlsCertificateOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailAttachStaticIpInput {
  staticIpName: String!
  instanceName: String!
}

type AwsLightsailAttachStaticIpOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCloseInstancePublicPortsInput {
  portInfo: AwsLightsailSpInput!
  instanceName: String!
}

type AwsLightsailCloseInstancePublicPortsOutput {
  operation: AwsLightsailS5
}

input AwsLightsailCreateDiskFromSnapshotInput {
  diskName: String!
  diskSnapshotName: String!
  availabilityZone: String!
  sizeInGb: Int!
}

type AwsLightsailCreateDiskFromSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateDiskInput {
  diskName: String!
  availabilityZone: String!
  sizeInGb: Int!
}

type AwsLightsailCreateDiskOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateDiskSnapshotInput {
  diskName: String!
  diskSnapshotName: String!
}

type AwsLightsailCreateDiskSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateDomainEntryInput {
  domainName: String!
  domainEntry: AwsLightsailS14Input!
}

type AwsLightsailCreateDomainEntryOutput {
  operation: AwsLightsailS5
}

input AwsLightsailCreateDomainInput {
  domainName: String!
}

type AwsLightsailCreateDomainOutput {
  operation: AwsLightsailS5
}

input AwsLightsailCreateInstancesFromSnapshotInput {
  instanceNames: [String]!
  attachedDiskMapping: JSON
  availabilityZone: String!
  instanceSnapshotName: String!
  bundleId: String!
  userData: String
  keyPairName: String
}

type AwsLightsailCreateInstancesFromSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateInstancesInput {
  instanceNames: [String]!
  availabilityZone: String!
  customImageName: String
  blueprintId: String!
  bundleId: String!
  userData: String
  keyPairName: String
}

input AwsLightsailCreateInstanceSnapshotInput {
  instanceSnapshotName: String!
  instanceName: String!
}

type AwsLightsailCreateInstanceSnapshotOutput {
  operations: [AwsLightsailS5]
}

type AwsLightsailCreateInstancesOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateKeyPairInput {
  keyPairName: String!
}

type AwsLightsailCreateKeyPairOutput {
  keyPair: AwsLightsailS1l
  publicKeyBase64: String
  privateKeyBase64: String
  operation: AwsLightsailS5
}

input AwsLightsailCreateLoadBalancerInput {
  loadBalancerName: String!
  instancePort: Int!
  healthCheckPath: String
  certificateName: String
  certificateDomainName: String
  certificateAlternativeNames: [String]
}

type AwsLightsailCreateLoadBalancerOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailCreateLoadBalancerTlsCertificateInput {
  loadBalancerName: String!
  certificateName: String!
  certificateDomainName: String!
  certificateAlternativeNames: [String]
}

type AwsLightsailCreateLoadBalancerTlsCertificateOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteDiskInput {
  diskName: String!
}

type AwsLightsailDeleteDiskOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteDiskSnapshotInput {
  diskSnapshotName: String!
}

type AwsLightsailDeleteDiskSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteDomainEntryInput {
  domainName: String!
  domainEntry: AwsLightsailS14Input!
}

type AwsLightsailDeleteDomainEntryOutput {
  operation: AwsLightsailS5
}

input AwsLightsailDeleteDomainInput {
  domainName: String!
}

type AwsLightsailDeleteDomainOutput {
  operation: AwsLightsailS5
}

input AwsLightsailDeleteInstanceInput {
  instanceName: String!
}

type AwsLightsailDeleteInstanceOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteInstanceSnapshotInput {
  instanceSnapshotName: String!
}

type AwsLightsailDeleteInstanceSnapshotOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteKeyPairInput {
  keyPairName: String!
}

type AwsLightsailDeleteKeyPairOutput {
  operation: AwsLightsailS5
}

input AwsLightsailDeleteLoadBalancerInput {
  loadBalancerName: String!
}

type AwsLightsailDeleteLoadBalancerOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDeleteLoadBalancerTlsCertificateInput {
  loadBalancerName: String!
  certificateName: String!
  force: Boolean
}

type AwsLightsailDeleteLoadBalancerTlsCertificateOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDetachDiskInput {
  diskName: String!
}

type AwsLightsailDetachDiskOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDetachInstancesFromLoadBalancerInput {
  loadBalancerName: String!
  instanceNames: [String]!
}

type AwsLightsailDetachInstancesFromLoadBalancerOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailDetachStaticIpInput {
  staticIpName: String!
}

type AwsLightsailDetachStaticIpOutput {
  operations: [AwsLightsailS5]
}

type AwsLightsailDownloadDefaultKeyPairOutput {
  publicKeyBase64: String
  privateKeyBase64: String
}

input AwsLightsailGetActiveNamesInput {
  pageToken: String
}

type AwsLightsailGetActiveNamesOutput {
  activeNames: [String]
  nextPageToken: String
}

input AwsLightsailGetBlueprintsInput {
  includeInactive: Boolean
  pageToken: String
}

type AwsLightsailGetBlueprintsOutput {
  blueprints: [AwsLightsailGetBlueprintsOutputBlueprints]
  nextPageToken: String
}

type AwsLightsailGetBlueprintsOutputBlueprints {
  blueprintId: String
  name: String
  group: String
  type: String
  description: String
  isActive: Boolean
  minPower: Int
  version: String
  versionCode: String
  productUrl: String
  licenseUrl: String
  platform: String
}

input AwsLightsailGetBundlesInput {
  includeInactive: Boolean
  pageToken: String
}

type AwsLightsailGetBundlesOutput {
  bundles: [AwsLightsailGetBundlesOutputBundles]
  nextPageToken: String
}

type AwsLightsailGetBundlesOutputBundles {
  price: Float
  cpuCount: Int
  diskSizeInGb: Int
  bundleId: String
  instanceType: String
  isActive: Boolean
  name: String
  power: Int
  ramSizeInGb: Float
  transferPerMonthInGb: Int
  supportedPlatforms: [String]
}

input AwsLightsailGetDiskInput {
  diskName: String!
}

type AwsLightsailGetDiskOutput {
  disk: AwsLightsailS2y
}

input AwsLightsailGetDisksInput {
  pageToken: String
}

input AwsLightsailGetDiskSnapshotInput {
  diskSnapshotName: String!
}

type AwsLightsailGetDiskSnapshotOutput {
  diskSnapshot: AwsLightsailS32
}

input AwsLightsailGetDiskSnapshotsInput {
  pageToken: String
}

type AwsLightsailGetDiskSnapshotsOutput {
  diskSnapshots: [AwsLightsailS32]
  nextPageToken: String
}

type AwsLightsailGetDisksOutput {
  disks: [AwsLightsailS2y]
  nextPageToken: String
}

input AwsLightsailGetDomainInput {
  domainName: String!
}

type AwsLightsailGetDomainOutput {
  domain: AwsLightsailS3c
}

input AwsLightsailGetDomainsInput {
  pageToken: String
}

type AwsLightsailGetDomainsOutput {
  domains: [AwsLightsailS3c]
  nextPageToken: String
}

input AwsLightsailGetInstanceAccessDetailsInput {
  instanceName: String!
  protocol: String
}

type AwsLightsailGetInstanceAccessDetailsOutput {
  accessDetails: AwsLightsailGetInstanceAccessDetailsOutputAccessDetails
}

type AwsLightsailGetInstanceAccessDetailsOutputAccessDetails {
  certKey: String
  expiresAt: Date
  ipAddress: String
  password: String
  passwordData: AwsLightsailGetInstanceAccessDetailsOutputAccessDetailsPasswordData
  privateKey: String
  protocol: String
  instanceName: String
  username: String
}

type AwsLightsailGetInstanceAccessDetailsOutputAccessDetailsPasswordData {
  ciphertext: String
  keyPairName: String
}

input AwsLightsailGetInstanceInput {
  instanceName: String!
}

input AwsLightsailGetInstanceMetricDataInput {
  instanceName: String!
  metricName: String!
  period: Int!
  startTime: Date!
  endTime: Date!
  unit: String!
  statistics: [String]!
}

type AwsLightsailGetInstanceMetricDataOutput {
  metricName: String
  metricData: [AwsLightsailS47]
}

type AwsLightsailGetInstanceOutput {
  instance: AwsLightsailS3j
}

input AwsLightsailGetInstancePortStatesInput {
  instanceName: String!
}

type AwsLightsailGetInstancePortStatesOutput {
  portStates: [AwsLightsailGetInstancePortStatesOutputPortStates]
}

type AwsLightsailGetInstancePortStatesOutputPortStates {
  fromPort: Int
  toPort: Int
  protocol: String
  state: String
}

input AwsLightsailGetInstancesInput {
  pageToken: String
}

input AwsLightsailGetInstanceSnapshotInput {
  instanceSnapshotName: String!
}

type AwsLightsailGetInstanceSnapshotOutput {
  instanceSnapshot: AwsLightsailS4h
}

input AwsLightsailGetInstanceSnapshotsInput {
  pageToken: String
}

type AwsLightsailGetInstanceSnapshotsOutput {
  instanceSnapshots: [AwsLightsailS4h]
  nextPageToken: String
}

type AwsLightsailGetInstancesOutput {
  instances: [AwsLightsailS3j]
  nextPageToken: String
}

input AwsLightsailGetInstanceStateInput {
  instanceName: String!
}

type AwsLightsailGetInstanceStateOutput {
  state: AwsLightsailS3t
}

input AwsLightsailGetKeyPairInput {
  keyPairName: String!
}

type AwsLightsailGetKeyPairOutput {
  keyPair: AwsLightsailS1l
}

input AwsLightsailGetKeyPairsInput {
  pageToken: String
}

type AwsLightsailGetKeyPairsOutput {
  keyPairs: [AwsLightsailS1l]
  nextPageToken: String
}

input AwsLightsailGetLoadBalancerInput {
  loadBalancerName: String!
}

input AwsLightsailGetLoadBalancerMetricDataInput {
  loadBalancerName: String!
  metricName: String!
  period: Int!
  startTime: Date!
  endTime: Date!
  unit: String!
  statistics: [String]!
}

type AwsLightsailGetLoadBalancerMetricDataOutput {
  metricName: String
  metricData: [AwsLightsailS47]
}

type AwsLightsailGetLoadBalancerOutput {
  loadBalancer: AwsLightsailS4y
}

input AwsLightsailGetLoadBalancersInput {
  pageToken: String
}

type AwsLightsailGetLoadBalancersOutput {
  loadBalancers: [AwsLightsailS4y]
  nextPageToken: String
}

input AwsLightsailGetLoadBalancerTlsCertificatesInput {
  loadBalancerName: String!
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutput {
  tlsCertificates: [AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificates]
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificates {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  loadBalancerName: String
  isAttached: Boolean
  status: String
  domainName: String
  domainValidationRecords: [AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesDomainValidationRecords]
  failureReason: String
  issuedAt: Date
  issuer: String
  keyAlgorithm: String
  notAfter: Date
  notBefore: Date
  renewalSummary: AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesRenewalSummary
  revocationReason: String
  revokedAt: Date
  serial: String
  signatureAlgorithm: String
  subject: String
  subjectAlternativeNames: [String]
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesDomainValidationRecords {
  name: String
  type: String
  value: String
  validationStatus: String
  domainName: String
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesRenewalSummary {
  renewalStatus: String
  domainValidationOptions: [AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesRenewalSummaryDomainValidationOptions]
}

type AwsLightsailGetLoadBalancerTlsCertificatesOutputTlsCertificatesRenewalSummaryDomainValidationOptions {
  domainName: String
  validationStatus: String
}

input AwsLightsailGetOperationInput {
  operationId: String!
}

type AwsLightsailGetOperationOutput {
  operation: AwsLightsailS5
}

input AwsLightsailGetOperationsForResourceInput {
  resourceName: String!
  pageToken: String
}

type AwsLightsailGetOperationsForResourceOutput {
  operations: [AwsLightsailS5]
  nextPageCount: String
  nextPageToken: String
}

input AwsLightsailGetOperationsInput {
  pageToken: String
}

type AwsLightsailGetOperationsOutput {
  operations: [AwsLightsailS5]
  nextPageToken: String
}

input AwsLightsailGetRegionsInput {
  includeAvailabilityZones: Boolean
}

type AwsLightsailGetRegionsOutput {
  regions: [AwsLightsailGetRegionsOutputRegions]
}

type AwsLightsailGetRegionsOutputRegions {
  continentCode: String
  description: String
  displayName: String
  name: String
  availabilityZones: [AwsLightsailGetRegionsOutputRegionsAvailabilityZones]
}

type AwsLightsailGetRegionsOutputRegionsAvailabilityZones {
  zoneName: String
  state: String
}

input AwsLightsailGetStaticIpInput {
  staticIpName: String!
}

type AwsLightsailGetStaticIpOutput {
  staticIp: AwsLightsailS68
}

input AwsLightsailGetStaticIpsInput {
  pageToken: String
}

type AwsLightsailGetStaticIpsOutput {
  staticIps: [AwsLightsailS68]
  nextPageToken: String
}

input AwsLightsailImportKeyPairInput {
  keyPairName: String!
  publicKeyBase64: String!
}

type AwsLightsailImportKeyPairOutput {
  operation: AwsLightsailS5
}

type AwsLightsailIsVpcPeeredOutput {
  isPeered: Boolean
}

input AwsLightsailOpenInstancePublicPortsInput {
  portInfo: AwsLightsailSpInput!
  instanceName: String!
}

type AwsLightsailOpenInstancePublicPortsOutput {
  operation: AwsLightsailS5
}

type AwsLightsailPeerVpcOutput {
  operation: AwsLightsailS5
}

input AwsLightsailPutInstancePublicPortsInput {
  portInfos: [AwsLightsailSpInput]!
  instanceName: String!
}

type AwsLightsailPutInstancePublicPortsOutput {
  operation: AwsLightsailS5
}

input AwsLightsailRebootInstanceInput {
  instanceName: String!
}

type AwsLightsailRebootInstanceOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailReleaseStaticIpInput {
  staticIpName: String!
}

type AwsLightsailReleaseStaticIpOutput {
  operations: [AwsLightsailS5]
}

type AwsLightsailS14 {
  id: String
  name: String
  target: String
  isAlias: Boolean
  type: String
  options: JSON
}

input AwsLightsailS14Input {
  id: String
  name: String
  target: String
  isAlias: Boolean
  type: String
  options: JSON
}

type AwsLightsailS1l {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  fingerprint: String
}

type AwsLightsailS2y {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  sizeInGb: Int
  isSystemDisk: Boolean
  iops: Int
  path: String
  state: String
  attachedTo: String
  isAttached: Boolean
  attachmentState: String
  gbInUse: Int
}

type AwsLightsailS32 {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  sizeInGb: Int
  state: String
  progress: String
  fromDiskName: String
  fromDiskArn: String
}

type AwsLightsailS3c {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  domainEntries: [AwsLightsailS14]
}

type AwsLightsailS3j {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  blueprintId: String
  blueprintName: String
  bundleId: String
  isStaticIp: Boolean
  privateIpAddress: String
  publicIpAddress: String
  ipv6Address: String
  hardware: AwsLightsailS3jHardware
  networking: AwsLightsailS3jNetworking
  state: AwsLightsailS3t
  username: String
  sshKeyName: String
}

type AwsLightsailS3jHardware {
  cpuCount: Int
  disks: [AwsLightsailS2y]
  ramSizeInGb: Float
}

type AwsLightsailS3jNetworking {
  monthlyTransfer: AwsLightsailS3jNetworkingMonthlyTransfer
  ports: [AwsLightsailS3jNetworkingPorts]
}

type AwsLightsailS3jNetworkingMonthlyTransfer {
  gbPerMonthAllocated: Int
}

type AwsLightsailS3jNetworkingPorts {
  fromPort: Int
  toPort: Int
  protocol: String
  accessFrom: String
  accessType: String
  commonName: String
  accessDirection: String
}

type AwsLightsailS3t {
  code: Int
  name: String
}

type AwsLightsailS47 {
  average: JSON
  maximum: JSON
  minimum: JSON
  sampleCount: JSON
  sum: JSON
  timestamp: Date
  unit: String
}

type AwsLightsailS4h {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  state: String
  progress: String
  fromAttachedDisks: [AwsLightsailS2y]
  fromInstanceName: String
  fromInstanceArn: String
  fromBlueprintId: String
  fromBundleId: String
  sizeInGb: Int
}

type AwsLightsailS4y {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  dnsName: String
  state: String
  protocol: String
  publicPorts: [Int]
  healthCheckPath: String
  instancePort: Int
  instanceHealthSummary: [AwsLightsailS4yInstanceHealthSummary]
  tlsCertificateSummaries: [AwsLightsailS4yTlsCertificateSummaries]
  configurationOptions: JSON
}

type AwsLightsailS4yInstanceHealthSummary {
  instanceName: String
  instanceHealth: String
  instanceHealthReason: String
}

type AwsLightsailS4yTlsCertificateSummaries {
  name: String
  isAttached: Boolean
}

type AwsLightsailS5 {
  id: String
  resourceName: String
  resourceType: String
  createdAt: Date
  location: AwsLightsailS9
  isTerminal: Boolean
  operationDetails: String
  operationType: String
  status: String
  statusChangedAt: Date
  errorCode: String
  errorDetails: String
}

type AwsLightsailS68 {
  name: String
  arn: String
  supportCode: String
  createdAt: Date
  location: AwsLightsailS9
  resourceType: String
  ipAddress: String
  attachedTo: String
  isAttached: Boolean
}

type AwsLightsailS9 {
  availabilityZone: String
  regionName: String
}

input AwsLightsailSpInput {
  fromPort: Int
  toPort: Int
  protocol: String
}

input AwsLightsailStartInstanceInput {
  instanceName: String!
}

type AwsLightsailStartInstanceOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailStopInstanceInput {
  instanceName: String!
  force: Boolean
}

type AwsLightsailStopInstanceOutput {
  operations: [AwsLightsailS5]
}

type AwsLightsailUnpeerVpcOutput {
  operation: AwsLightsailS5
}

input AwsLightsailUpdateDomainEntryInput {
  domainName: String!
  domainEntry: AwsLightsailS14Input!
}

type AwsLightsailUpdateDomainEntryOutput {
  operations: [AwsLightsailS5]
}

input AwsLightsailUpdateLoadBalancerAttributeInput {
  loadBalancerName: String!
  attributeName: String!
  attributeValue: String!
}

type AwsLightsailUpdateLoadBalancerAttributeOutput {
  operations: [AwsLightsailS5]
}

# Amazon Machine Learning (2014-12-12)
type AwsMachineLearning {
  addTags(input: AwsMachineLearningAddTagsInput!, config: AwsConfig): AwsMachineLearningAddTagsOutput
  createBatchPrediction(input: AwsMachineLearningCreateBatchPredictionInput!, config: AwsConfig): AwsMachineLearningCreateBatchPredictionOutput
  createDataSourceFromRDS(input: AwsMachineLearningCreateDataSourceFromRDSInput!, config: AwsConfig): AwsMachineLearningCreateDataSourceFromRDSOutput
  createDataSourceFromRedshift(input: AwsMachineLearningCreateDataSourceFromRedshiftInput!, config: AwsConfig): AwsMachineLearningCreateDataSourceFromRedshiftOutput
  createDataSourceFromS3(input: AwsMachineLearningCreateDataSourceFromS3Input!, config: AwsConfig): AwsMachineLearningCreateDataSourceFromS3Output
  createEvaluation(input: AwsMachineLearningCreateEvaluationInput!, config: AwsConfig): AwsMachineLearningCreateEvaluationOutput
  createMLModel(input: AwsMachineLearningCreateMLModelInput!, config: AwsConfig): AwsMachineLearningCreateMLModelOutput
  createRealtimeEndpoint(input: AwsMachineLearningCreateRealtimeEndpointInput!, config: AwsConfig): AwsMachineLearningCreateRealtimeEndpointOutput
  deleteBatchPrediction(input: AwsMachineLearningDeleteBatchPredictionInput!, config: AwsConfig): AwsMachineLearningDeleteBatchPredictionOutput
  deleteDataSource(input: AwsMachineLearningDeleteDataSourceInput!, config: AwsConfig): AwsMachineLearningDeleteDataSourceOutput
  deleteEvaluation(input: AwsMachineLearningDeleteEvaluationInput!, config: AwsConfig): AwsMachineLearningDeleteEvaluationOutput
  deleteMLModel(input: AwsMachineLearningDeleteMLModelInput!, config: AwsConfig): AwsMachineLearningDeleteMLModelOutput
  deleteRealtimeEndpoint(input: AwsMachineLearningDeleteRealtimeEndpointInput!, config: AwsConfig): AwsMachineLearningDeleteRealtimeEndpointOutput
  deleteTags(input: AwsMachineLearningDeleteTagsInput!, config: AwsConfig): AwsMachineLearningDeleteTagsOutput
  describeBatchPredictions(input: AwsMachineLearningDescribeBatchPredictionsInput, config: AwsConfig): AwsMachineLearningDescribeBatchPredictionsOutput
  describeDataSources(input: AwsMachineLearningDescribeDataSourcesInput, config: AwsConfig): AwsMachineLearningDescribeDataSourcesOutput
  describeEvaluations(input: AwsMachineLearningDescribeEvaluationsInput, config: AwsConfig): AwsMachineLearningDescribeEvaluationsOutput
  describeMLModels(input: AwsMachineLearningDescribeMLModelsInput, config: AwsConfig): AwsMachineLearningDescribeMLModelsOutput
  describeTags(input: AwsMachineLearningDescribeTagsInput!, config: AwsConfig): AwsMachineLearningDescribeTagsOutput
  getBatchPrediction(input: AwsMachineLearningGetBatchPredictionInput!, config: AwsConfig): AwsMachineLearningGetBatchPredictionOutput
  getDataSource(input: AwsMachineLearningGetDataSourceInput!, config: AwsConfig): AwsMachineLearningGetDataSourceOutput
  getEvaluation(input: AwsMachineLearningGetEvaluationInput!, config: AwsConfig): AwsMachineLearningGetEvaluationOutput
  getMLModel(input: AwsMachineLearningGetMLModelInput!, config: AwsConfig): AwsMachineLearningGetMLModelOutput
  predict(input: AwsMachineLearningPredictInput!, config: AwsConfig): AwsMachineLearningPredictOutput
  updateBatchPrediction(input: AwsMachineLearningUpdateBatchPredictionInput!, config: AwsConfig): AwsMachineLearningUpdateBatchPredictionOutput
  updateDataSource(input: AwsMachineLearningUpdateDataSourceInput!, config: AwsConfig): AwsMachineLearningUpdateDataSourceOutput
  updateEvaluation(input: AwsMachineLearningUpdateEvaluationInput!, config: AwsConfig): AwsMachineLearningUpdateEvaluationOutput
  updateMLModel(input: AwsMachineLearningUpdateMLModelInput!, config: AwsConfig): AwsMachineLearningUpdateMLModelOutput
}

input AwsMachineLearningAddTagsInput {
  Tags: [AwsMachineLearningS2Input]!
  ResourceId: String!
  ResourceType: String!
}

type AwsMachineLearningAddTagsOutput {
  ResourceId: String
  ResourceType: String
}

input AwsMachineLearningCreateBatchPredictionInput {
  BatchPredictionId: String!
  BatchPredictionName: String
  MLModelId: String!
  BatchPredictionDataSourceId: String!
  OutputUri: String!
}

type AwsMachineLearningCreateBatchPredictionOutput {
  BatchPredictionId: String
}

input AwsMachineLearningCreateDataSourceFromRDSInput {
  DataSourceId: String!
  DataSourceName: String
  RDSData: AwsMachineLearningCreateDataSourceFromRDSRDSDataInput!
  RoleARN: String!
  ComputeStatistics: Boolean
}

type AwsMachineLearningCreateDataSourceFromRDSOutput {
  DataSourceId: String
}

input AwsMachineLearningCreateDataSourceFromRDSRDSDataDatabaseCredentialsInput {
  Username: String!
  Password: String!
}

input AwsMachineLearningCreateDataSourceFromRDSRDSDataInput {
  DatabaseInformation: AwsMachineLearningSfInput!
  SelectSqlQuery: String!
  DatabaseCredentials: AwsMachineLearningCreateDataSourceFromRDSRDSDataDatabaseCredentialsInput!
  S3StagingLocation: String!
  DataRearrangement: String
  DataSchema: String
  DataSchemaUri: String
  ResourceRole: String!
  ServiceRole: String!
  SubnetId: String!
  SecurityGroupIds: [String]!
}

input AwsMachineLearningCreateDataSourceFromRedshiftDataSpecDatabaseCredentialsInput {
  Username: String!
  Password: String!
}

input AwsMachineLearningCreateDataSourceFromRedshiftDataSpecInput {
  DatabaseInformation: AwsMachineLearningSyInput!
  SelectSqlQuery: String!
  DatabaseCredentials: AwsMachineLearningCreateDataSourceFromRedshiftDataSpecDatabaseCredentialsInput!
  S3StagingLocation: String!
  DataRearrangement: String
  DataSchema: String
  DataSchemaUri: String
}

input AwsMachineLearningCreateDataSourceFromRedshiftInput {
  DataSourceId: String!
  DataSourceName: String
  DataSpec: AwsMachineLearningCreateDataSourceFromRedshiftDataSpecInput!
  RoleARN: String!
  ComputeStatistics: Boolean
}

type AwsMachineLearningCreateDataSourceFromRedshiftOutput {
  DataSourceId: String
}

input AwsMachineLearningCreateDataSourceFromS3DataSpecInput {
  DataLocationS3: String!
  DataRearrangement: String
  DataSchema: String
  DataSchemaLocationS3: String
}

input AwsMachineLearningCreateDataSourceFromS3Input {
  DataSourceId: String!
  DataSourceName: String
  DataSpec: AwsMachineLearningCreateDataSourceFromS3DataSpecInput!
  ComputeStatistics: Boolean
}

type AwsMachineLearningCreateDataSourceFromS3Output {
  DataSourceId: String
}

input AwsMachineLearningCreateEvaluationInput {
  EvaluationId: String!
  EvaluationName: String
  MLModelId: String!
  EvaluationDataSourceId: String!
}

type AwsMachineLearningCreateEvaluationOutput {
  EvaluationId: String
}

input AwsMachineLearningCreateMLModelInput {
  MLModelId: String!
  MLModelName: String
  MLModelType: String!
  Parameters: JSON
  TrainingDataSourceId: String!
  Recipe: String
  RecipeUri: String
}

type AwsMachineLearningCreateMLModelOutput {
  MLModelId: String
}

input AwsMachineLearningCreateRealtimeEndpointInput {
  MLModelId: String!
}

type AwsMachineLearningCreateRealtimeEndpointOutput {
  MLModelId: String
  RealtimeEndpointInfo: AwsMachineLearningS1j
}

input AwsMachineLearningDeleteBatchPredictionInput {
  BatchPredictionId: String!
}

type AwsMachineLearningDeleteBatchPredictionOutput {
  BatchPredictionId: String
}

input AwsMachineLearningDeleteDataSourceInput {
  DataSourceId: String!
}

type AwsMachineLearningDeleteDataSourceOutput {
  DataSourceId: String
}

input AwsMachineLearningDeleteEvaluationInput {
  EvaluationId: String!
}

type AwsMachineLearningDeleteEvaluationOutput {
  EvaluationId: String
}

input AwsMachineLearningDeleteMLModelInput {
  MLModelId: String!
}

type AwsMachineLearningDeleteMLModelOutput {
  MLModelId: String
}

input AwsMachineLearningDeleteRealtimeEndpointInput {
  MLModelId: String!
}

type AwsMachineLearningDeleteRealtimeEndpointOutput {
  MLModelId: String
  RealtimeEndpointInfo: AwsMachineLearningS1j
}

input AwsMachineLearningDeleteTagsInput {
  TagKeys: [String]!
  ResourceId: String!
  ResourceType: String!
}

type AwsMachineLearningDeleteTagsOutput {
  ResourceId: String
  ResourceType: String
}

input AwsMachineLearningDescribeBatchPredictionsInput {
  FilterVariable: String
  EQ: String
  GT: String
  LT: String
  GE: String
  LE: String
  NE: String
  Prefix: String
  SortOrder: String
  NextToken: String
  Limit: Int
}

type AwsMachineLearningDescribeBatchPredictionsOutput {
  Results: [AwsMachineLearningDescribeBatchPredictionsOutputResults]
  NextToken: String
}

type AwsMachineLearningDescribeBatchPredictionsOutputResults {
  BatchPredictionId: String
  MLModelId: String
  BatchPredictionDataSourceId: String
  InputDataLocationS3: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  OutputUri: String
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
  TotalRecordCount: JSON
  InvalidRecordCount: JSON
}

input AwsMachineLearningDescribeDataSourcesInput {
  FilterVariable: String
  EQ: String
  GT: String
  LT: String
  GE: String
  LE: String
  NE: String
  Prefix: String
  SortOrder: String
  NextToken: String
  Limit: Int
}

type AwsMachineLearningDescribeDataSourcesOutput {
  Results: [AwsMachineLearningDescribeDataSourcesOutputResults]
  NextToken: String
}

type AwsMachineLearningDescribeDataSourcesOutputResults {
  DataSourceId: String
  DataLocationS3: String
  DataRearrangement: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  DataSizeInBytes: JSON
  NumberOfFiles: JSON
  Name: String
  Status: String
  Message: String
  RedshiftMetadata: AwsMachineLearningS2i
  RDSMetadata: AwsMachineLearningS2j
  RoleARN: String
  ComputeStatistics: Boolean
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
}

input AwsMachineLearningDescribeEvaluationsInput {
  FilterVariable: String
  EQ: String
  GT: String
  LT: String
  GE: String
  LE: String
  NE: String
  Prefix: String
  SortOrder: String
  NextToken: String
  Limit: Int
}

type AwsMachineLearningDescribeEvaluationsOutput {
  Results: [AwsMachineLearningDescribeEvaluationsOutputResults]
  NextToken: String
}

type AwsMachineLearningDescribeEvaluationsOutputResults {
  EvaluationId: String
  MLModelId: String
  EvaluationDataSourceId: String
  InputDataLocationS3: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  PerformanceMetrics: AwsMachineLearningS2q
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
}

input AwsMachineLearningDescribeMLModelsInput {
  FilterVariable: String
  EQ: String
  GT: String
  LT: String
  GE: String
  LE: String
  NE: String
  Prefix: String
  SortOrder: String
  NextToken: String
  Limit: Int
}

type AwsMachineLearningDescribeMLModelsOutput {
  Results: [AwsMachineLearningDescribeMLModelsOutputResults]
  NextToken: String
}

type AwsMachineLearningDescribeMLModelsOutputResults {
  MLModelId: String
  TrainingDataSourceId: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  SizeInBytes: JSON
  EndpointInfo: AwsMachineLearningS1j
  TrainingParameters: JSON
  InputDataLocationS3: String
  Algorithm: String
  MLModelType: String
  ScoreThreshold: Float
  ScoreThresholdLastUpdatedAt: Date
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
}

input AwsMachineLearningDescribeTagsInput {
  ResourceId: String!
  ResourceType: String!
}

type AwsMachineLearningDescribeTagsOutput {
  ResourceId: String
  ResourceType: String
  Tags: [AwsMachineLearningS2]
}

input AwsMachineLearningGetBatchPredictionInput {
  BatchPredictionId: String!
}

type AwsMachineLearningGetBatchPredictionOutput {
  BatchPredictionId: String
  MLModelId: String
  BatchPredictionDataSourceId: String
  InputDataLocationS3: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  OutputUri: String
  LogUri: String
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
  TotalRecordCount: JSON
  InvalidRecordCount: JSON
}

input AwsMachineLearningGetDataSourceInput {
  DataSourceId: String!
  Verbose: Boolean
}

type AwsMachineLearningGetDataSourceOutput {
  DataSourceId: String
  DataLocationS3: String
  DataRearrangement: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  DataSizeInBytes: JSON
  NumberOfFiles: JSON
  Name: String
  Status: String
  LogUri: String
  Message: String
  RedshiftMetadata: AwsMachineLearningS2i
  RDSMetadata: AwsMachineLearningS2j
  RoleARN: String
  ComputeStatistics: Boolean
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
  DataSourceSchema: String
}

input AwsMachineLearningGetEvaluationInput {
  EvaluationId: String!
}

type AwsMachineLearningGetEvaluationOutput {
  EvaluationId: String
  MLModelId: String
  EvaluationDataSourceId: String
  InputDataLocationS3: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  PerformanceMetrics: AwsMachineLearningS2q
  LogUri: String
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
}

input AwsMachineLearningGetMLModelInput {
  MLModelId: String!
  Verbose: Boolean
}

type AwsMachineLearningGetMLModelOutput {
  MLModelId: String
  TrainingDataSourceId: String
  CreatedByIamUser: String
  CreatedAt: Date
  LastUpdatedAt: Date
  Name: String
  Status: String
  SizeInBytes: JSON
  EndpointInfo: AwsMachineLearningS1j
  TrainingParameters: JSON
  InputDataLocationS3: String
  MLModelType: String
  ScoreThreshold: Float
  ScoreThresholdLastUpdatedAt: Date
  LogUri: String
  Message: String
  ComputeTime: JSON
  FinishedAt: Date
  StartedAt: Date
  Recipe: String
  Schema: String
}

input AwsMachineLearningPredictInput {
  MLModelId: String!
  Record: JSON!
  PredictEndpoint: String!
}

type AwsMachineLearningPredictOutput {
  Prediction: AwsMachineLearningPredictOutputPrediction
}

type AwsMachineLearningPredictOutputPrediction {
  predictedLabel: String
  predictedValue: Float
  predictedScores: JSON
  details: JSON
}

type AwsMachineLearningS1j {
  PeakRequestsPerSecond: Int
  CreatedAt: Date
  EndpointUrl: String
  EndpointStatus: String
}

type AwsMachineLearningS2 {
  Key: String
  Value: String
}

type AwsMachineLearningS2i {
  RedshiftDatabase: AwsMachineLearningSy
  DatabaseUserName: String
  SelectSqlQuery: String
}

input AwsMachineLearningS2Input {
  Key: String
  Value: String
}

type AwsMachineLearningS2j {
  Database: AwsMachineLearningSf
  DatabaseUserName: String
  SelectSqlQuery: String
  ResourceRole: String
  ServiceRole: String
  DataPipelineId: String
}

type AwsMachineLearningS2q {
  Properties: JSON
}

type AwsMachineLearningSf {
  InstanceIdentifier: String!
  DatabaseName: String!
}

input AwsMachineLearningSfInput {
  InstanceIdentifier: String!
  DatabaseName: String!
}

type AwsMachineLearningSy {
  DatabaseName: String!
  ClusterIdentifier: String!
}

input AwsMachineLearningSyInput {
  DatabaseName: String!
  ClusterIdentifier: String!
}

input AwsMachineLearningUpdateBatchPredictionInput {
  BatchPredictionId: String!
  BatchPredictionName: String!
}

type AwsMachineLearningUpdateBatchPredictionOutput {
  BatchPredictionId: String
}

input AwsMachineLearningUpdateDataSourceInput {
  DataSourceId: String!
  DataSourceName: String!
}

type AwsMachineLearningUpdateDataSourceOutput {
  DataSourceId: String
}

input AwsMachineLearningUpdateEvaluationInput {
  EvaluationId: String!
  EvaluationName: String!
}

type AwsMachineLearningUpdateEvaluationOutput {
  EvaluationId: String
}

input AwsMachineLearningUpdateMLModelInput {
  MLModelId: String!
  MLModelName: String
  ScoreThreshold: Float
}

type AwsMachineLearningUpdateMLModelOutput {
  MLModelId: String
}

# AWS Marketplace Commerce Analytics (2015-07-01)
type AwsMarketplaceCommerceAnalytics {
  generateDataSet(input: AwsMarketplaceCommerceAnalyticsGenerateDataSetInput!, config: AwsConfig): AwsMarketplaceCommerceAnalyticsGenerateDataSetOutput
  startSupportDataExport(input: AwsMarketplaceCommerceAnalyticsStartSupportDataExportInput!, config: AwsConfig): AwsMarketplaceCommerceAnalyticsStartSupportDataExportOutput
}

input AwsMarketplaceCommerceAnalyticsGenerateDataSetInput {
  dataSetType: String!
  dataSetPublicationDate: Date!
  roleNameArn: String!
  destinationS3BucketName: String!
  destinationS3Prefix: String
  snsTopicArn: String!
  customerDefinedValues: JSON
}

type AwsMarketplaceCommerceAnalyticsGenerateDataSetOutput {
  dataSetRequestId: String
}

input AwsMarketplaceCommerceAnalyticsStartSupportDataExportInput {
  dataSetType: String!
  fromDate: Date!
  roleNameArn: String!
  destinationS3BucketName: String!
  destinationS3Prefix: String
  snsTopicArn: String!
  customerDefinedValues: JSON
}

type AwsMarketplaceCommerceAnalyticsStartSupportDataExportOutput {
  dataSetRequestId: String
}

# AWS Marketplace Entitlement Service (2017-01-11)
type AwsMarketplaceEntitlementService {
  getEntitlements(input: AwsMarketplaceEntitlementServiceGetEntitlementsInput!, config: AwsConfig): AwsMarketplaceEntitlementServiceGetEntitlementsOutput
}

input AwsMarketplaceEntitlementServiceGetEntitlementsInput {
  ProductCode: String!
  Filter: JSON
  NextToken: String
  MaxResults: Int
}

type AwsMarketplaceEntitlementServiceGetEntitlementsOutput {
  Entitlements: [AwsMarketplaceEntitlementServiceGetEntitlementsOutputEntitlements]
  NextToken: String
}

type AwsMarketplaceEntitlementServiceGetEntitlementsOutputEntitlements {
  ProductCode: String
  Dimension: String
  CustomerIdentifier: String
  Value: AwsMarketplaceEntitlementServiceGetEntitlementsOutputEntitlementsValue
  ExpirationDate: Date
}

type AwsMarketplaceEntitlementServiceGetEntitlementsOutputEntitlementsValue {
  IntegerValue: Int
  DoubleValue: JSON
  BooleanValue: Boolean
  StringValue: String
}

# AWSMarketplace Metering (2016-01-14)
type AwsMarketplaceMetering {
  batchMeterUsage(input: AwsMarketplaceMeteringBatchMeterUsageInput!, config: AwsConfig): AwsMarketplaceMeteringBatchMeterUsageOutput
  meterUsage(input: AwsMarketplaceMeteringMeterUsageInput!, config: AwsConfig): AwsMarketplaceMeteringMeterUsageOutput
  resolveCustomer(input: AwsMarketplaceMeteringResolveCustomerInput!, config: AwsConfig): AwsMarketplaceMeteringResolveCustomerOutput
}

input AwsMarketplaceMeteringBatchMeterUsageInput {
  UsageRecords: [AwsMarketplaceMeteringS3Input]!
  ProductCode: String!
}

type AwsMarketplaceMeteringBatchMeterUsageOutput {
  Results: [AwsMarketplaceMeteringBatchMeterUsageOutputResults]
  UnprocessedRecords: [AwsMarketplaceMeteringS3]
}

type AwsMarketplaceMeteringBatchMeterUsageOutputResults {
  UsageRecord: AwsMarketplaceMeteringS3
  MeteringRecordId: String
  Status: String
}

input AwsMarketplaceMeteringMeterUsageInput {
  ProductCode: String!
  Timestamp: Date!
  UsageDimension: String!
  UsageQuantity: Int!
  DryRun: Boolean!
}

type AwsMarketplaceMeteringMeterUsageOutput {
  MeteringRecordId: String
}

input AwsMarketplaceMeteringResolveCustomerInput {
  RegistrationToken: String!
}

type AwsMarketplaceMeteringResolveCustomerOutput {
  CustomerIdentifier: String
  ProductCode: String
}

type AwsMarketplaceMeteringS3 {
  Timestamp: Date!
  CustomerIdentifier: String!
  Dimension: String!
  Quantity: Int!
}

input AwsMarketplaceMeteringS3Input {
  Timestamp: Date!
  CustomerIdentifier: String!
  Dimension: String!
  Quantity: Int!
}

# AWS Elemental MediaConvert (2017-08-29)
type AwsMediaConvert {
  cancelJob(input: AwsMediaConvertCancelJobInput!, config: AwsConfig): JSON
  createJob(input: AwsMediaConvertCreateJobInput, config: AwsConfig): AwsMediaConvertCreateJobOutput
  createJobTemplate(input: AwsMediaConvertCreateJobTemplateInput, config: AwsConfig): AwsMediaConvertCreateJobTemplateOutput
  createPreset(input: AwsMediaConvertCreatePresetInput, config: AwsConfig): AwsMediaConvertCreatePresetOutput
  createQueue(input: AwsMediaConvertCreateQueueInput, config: AwsConfig): AwsMediaConvertCreateQueueOutput
  deleteJobTemplate(input: AwsMediaConvertDeleteJobTemplateInput!, config: AwsConfig): JSON
  deletePreset(input: AwsMediaConvertDeletePresetInput!, config: AwsConfig): JSON
  deleteQueue(input: AwsMediaConvertDeleteQueueInput!, config: AwsConfig): JSON
  describeEndpoints(input: AwsMediaConvertDescribeEndpointsInput, config: AwsConfig): AwsMediaConvertDescribeEndpointsOutput
  getJob(input: AwsMediaConvertGetJobInput!, config: AwsConfig): AwsMediaConvertGetJobOutput
  getJobTemplate(input: AwsMediaConvertGetJobTemplateInput!, config: AwsConfig): AwsMediaConvertGetJobTemplateOutput
  getPreset(input: AwsMediaConvertGetPresetInput!, config: AwsConfig): AwsMediaConvertGetPresetOutput
  getQueue(input: AwsMediaConvertGetQueueInput!, config: AwsConfig): AwsMediaConvertGetQueueOutput
  listJobTemplates(input: AwsMediaConvertListJobTemplatesInput, config: AwsConfig): AwsMediaConvertListJobTemplatesOutput
  listJobs(input: AwsMediaConvertListJobsInput, config: AwsConfig): AwsMediaConvertListJobsOutput
  listPresets(input: AwsMediaConvertListPresetsInput, config: AwsConfig): AwsMediaConvertListPresetsOutput
  listQueues(input: AwsMediaConvertListQueuesInput, config: AwsConfig): AwsMediaConvertListQueuesOutput
  updateJobTemplate(input: AwsMediaConvertUpdateJobTemplateInput!, config: AwsConfig): AwsMediaConvertUpdateJobTemplateOutput
  updatePreset(input: AwsMediaConvertUpdatePresetInput!, config: AwsConfig): AwsMediaConvertUpdatePresetOutput
  updateQueue(input: AwsMediaConvertUpdateQueueInput!, config: AwsConfig): AwsMediaConvertUpdateQueueOutput
}

input AwsMediaConvertCancelJobInput {
  Id: String!
}

input AwsMediaConvertCreateJobInput {
  ClientRequestToken: String
  JobTemplate: String
  Queue: String
  Role: String
  Settings: AwsMediaConvertS5Input
  UserMetadata: JSON
}

type AwsMediaConvertCreateJobOutput {
  Job: AwsMediaConvertS86
}

input AwsMediaConvertCreateJobTemplateInput {
  Category: String
  Description: String
  Name: String
  Queue: String
  Settings: AwsMediaConvertS8gInput
}

type AwsMediaConvertCreateJobTemplateOutput {
  JobTemplate: AwsMediaConvertS8k
}

input AwsMediaConvertCreatePresetInput {
  Category: String
  Description: String
  Name: String
  Settings: AwsMediaConvertS8nInput
}

type AwsMediaConvertCreatePresetOutput {
  Preset: AwsMediaConvertS8r
}

input AwsMediaConvertCreateQueueInput {
  Description: String
  Name: String
}

type AwsMediaConvertCreateQueueOutput {
  Queue: AwsMediaConvertS8u
}

input AwsMediaConvertDeleteJobTemplateInput {
  Name: String!
}

input AwsMediaConvertDeletePresetInput {
  Name: String!
}

input AwsMediaConvertDeleteQueueInput {
  Name: String!
}

input AwsMediaConvertDescribeEndpointsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaConvertDescribeEndpointsOutput {
  Endpoints: [AwsMediaConvertDescribeEndpointsOutputEndpoints]
  NextToken: String
}

type AwsMediaConvertDescribeEndpointsOutputEndpoints {
  Url: String
}

input AwsMediaConvertGetJobInput {
  Id: String!
}

type AwsMediaConvertGetJobOutput {
  Job: AwsMediaConvertS86
}

input AwsMediaConvertGetJobTemplateInput {
  Name: String!
}

type AwsMediaConvertGetJobTemplateOutput {
  JobTemplate: AwsMediaConvertS8k
}

input AwsMediaConvertGetPresetInput {
  Name: String!
}

type AwsMediaConvertGetPresetOutput {
  Preset: AwsMediaConvertS8r
}

input AwsMediaConvertGetQueueInput {
  Name: String!
}

type AwsMediaConvertGetQueueOutput {
  Queue: AwsMediaConvertS8u
}

input AwsMediaConvertListJobsInput {
  MaxResults: Int
  NextToken: String
  Order: String
  Queue: String
  Status: String
}

type AwsMediaConvertListJobsOutput {
  Jobs: [AwsMediaConvertS86]
  NextToken: String
}

input AwsMediaConvertListJobTemplatesInput {
  Category: String
  ListBy: String
  MaxResults: Int
  NextToken: String
  Order: String
}

type AwsMediaConvertListJobTemplatesOutput {
  JobTemplates: [AwsMediaConvertS8k]
  NextToken: String
}

input AwsMediaConvertListPresetsInput {
  Category: String
  ListBy: String
  MaxResults: Int
  NextToken: String
  Order: String
}

type AwsMediaConvertListPresetsOutput {
  NextToken: String
  Presets: [AwsMediaConvertS8r]
}

input AwsMediaConvertListQueuesInput {
  ListBy: String
  MaxResults: Int
  NextToken: String
  Order: String
}

type AwsMediaConvertListQueuesOutput {
  NextToken: String
  Queues: [AwsMediaConvertS8u]
}

type AwsMediaConvertS11 {
  EndTimecode: String
  StartTimecode: String
}

input AwsMediaConvertS11Input {
  EndTimecode: String
  StartTimecode: String
}

type AwsMediaConvertS15 {
  ColorSpace: String
  ColorSpaceUsage: String
  Hdr10Metadata: AwsMediaConvertS18
  Pid: Int
  ProgramNumber: Int
}

input AwsMediaConvertS15Input {
  ColorSpace: String
  ColorSpaceUsage: String
  Hdr10Metadata: AwsMediaConvertS18Input
  Pid: Int
  ProgramNumber: Int
}

type AwsMediaConvertS18 {
  BluePrimaryX: Int
  BluePrimaryY: Int
  GreenPrimaryX: Int
  GreenPrimaryY: Int
  MaxContentLightLevel: Int
  MaxFrameAverageLightLevel: Int
  MaxLuminance: Int
  MinLuminance: Int
  RedPrimaryX: Int
  RedPrimaryY: Int
  WhitePointX: Int
  WhitePointY: Int
}

input AwsMediaConvertS18Input {
  BluePrimaryX: Int
  BluePrimaryY: Int
  GreenPrimaryX: Int
  GreenPrimaryY: Int
  MaxContentLightLevel: Int
  MaxFrameAverageLightLevel: Int
  MaxLuminance: Int
  MinLuminance: Int
  RedPrimaryX: Int
  RedPrimaryY: Int
  WhitePointX: Int
  WhitePointY: Int
}

type AwsMediaConvertS19 {
  BreakoutCode: Int
  DistributorId: String
}

input AwsMediaConvertS19Input {
  BreakoutCode: Int
  DistributorId: String
}

type AwsMediaConvertS1a {
  CustomName: String
  Name: String
  OutputGroupSettings: AwsMediaConvertS1aOutputGroupSettings
  Outputs: [AwsMediaConvertS1aOutputs]
}

input AwsMediaConvertS1aInput {
  CustomName: String
  Name: String
  OutputGroupSettings: AwsMediaConvertS1aOutputGroupSettingsInput
  Outputs: [AwsMediaConvertS1aOutputsInput]
}

type AwsMediaConvertS1aOutputGroupSettings {
  DashIsoGroupSettings: AwsMediaConvertS1aOutputGroupSettingsDashIsoGroupSettings
  FileGroupSettings: AwsMediaConvertS1aOutputGroupSettingsFileGroupSettings
  HlsGroupSettings: AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettings
  MsSmoothGroupSettings: AwsMediaConvertS1aOutputGroupSettingsMsSmoothGroupSettings
  Type: String
}

type AwsMediaConvertS1aOutputGroupSettingsDashIsoGroupSettings {
  BaseUrl: String
  Destination: String
  Encryption: AwsMediaConvertS1aOutputGroupSettingsDashIsoGroupSettingsEncryption
  FragmentLength: Int
  HbbtvCompliance: String
  MinBufferTime: Int
  SegmentControl: String
  SegmentLength: Int
}

type AwsMediaConvertS1aOutputGroupSettingsDashIsoGroupSettingsEncryption {
  SpekeKeyProvider: AwsMediaConvertS1f
}

input AwsMediaConvertS1aOutputGroupSettingsDashIsoGroupSettingsEncryptionInput {
  SpekeKeyProvider: AwsMediaConvertS1fInput
}

input AwsMediaConvertS1aOutputGroupSettingsDashIsoGroupSettingsInput {
  BaseUrl: String
  Destination: String
  Encryption: AwsMediaConvertS1aOutputGroupSettingsDashIsoGroupSettingsEncryptionInput
  FragmentLength: Int
  HbbtvCompliance: String
  MinBufferTime: Int
  SegmentControl: String
  SegmentLength: Int
}

type AwsMediaConvertS1aOutputGroupSettingsFileGroupSettings {
  Destination: String
}

input AwsMediaConvertS1aOutputGroupSettingsFileGroupSettingsInput {
  Destination: String
}

type AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettings {
  AdMarkers: [String]
  BaseUrl: String
  CaptionLanguageMappings: [AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappings]
  CaptionLanguageSetting: String
  ClientCache: String
  CodecSpecification: String
  Destination: String
  DirectoryStructure: String
  Encryption: AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsEncryption
  ManifestCompression: String
  ManifestDurationFormat: String
  MinSegmentLength: Int
  OutputSelection: String
  ProgramDateTime: String
  ProgramDateTimePeriod: Int
  SegmentControl: String
  SegmentLength: Int
  SegmentsPerSubdirectory: Int
  StreamInfResolution: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
  TimestampDeltaMilliseconds: Int
}

type AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappings {
  CaptionChannel: Int
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsInput {
  CaptionChannel: Int
  LanguageCode: String
  LanguageDescription: String
}

type AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsEncryption {
  ConstantInitializationVector: String
  EncryptionMethod: String
  InitializationVectorInManifest: String
  SpekeKeyProvider: AwsMediaConvertS1f
  StaticKeyProvider: AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProvider
  Type: String
}

input AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsEncryptionInput {
  ConstantInitializationVector: String
  EncryptionMethod: String
  InitializationVectorInManifest: String
  SpekeKeyProvider: AwsMediaConvertS1fInput
  StaticKeyProvider: AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderInput
  Type: String
}

type AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProvider {
  KeyFormat: String
  KeyFormatVersions: String
  StaticKeyValue: String
  Url: String
}

input AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsEncryptionStaticKeyProviderInput {
  KeyFormat: String
  KeyFormatVersions: String
  StaticKeyValue: String
  Url: String
}

input AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsInput {
  AdMarkers: [String]
  BaseUrl: String
  CaptionLanguageMappings: [AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsInput]
  CaptionLanguageSetting: String
  ClientCache: String
  CodecSpecification: String
  Destination: String
  DirectoryStructure: String
  Encryption: AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsEncryptionInput
  ManifestCompression: String
  ManifestDurationFormat: String
  MinSegmentLength: Int
  OutputSelection: String
  ProgramDateTime: String
  ProgramDateTimePeriod: Int
  SegmentControl: String
  SegmentLength: Int
  SegmentsPerSubdirectory: Int
  StreamInfResolution: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
  TimestampDeltaMilliseconds: Int
}

input AwsMediaConvertS1aOutputGroupSettingsInput {
  DashIsoGroupSettings: AwsMediaConvertS1aOutputGroupSettingsDashIsoGroupSettingsInput
  FileGroupSettings: AwsMediaConvertS1aOutputGroupSettingsFileGroupSettingsInput
  HlsGroupSettings: AwsMediaConvertS1aOutputGroupSettingsHlsGroupSettingsInput
  MsSmoothGroupSettings: AwsMediaConvertS1aOutputGroupSettingsMsSmoothGroupSettingsInput
  Type: String
}

type AwsMediaConvertS1aOutputGroupSettingsMsSmoothGroupSettings {
  AudioDeduplication: String
  Destination: String
  Encryption: AwsMediaConvertS1aOutputGroupSettingsMsSmoothGroupSettingsEncryption
  FragmentLength: Int
  ManifestEncoding: String
}

type AwsMediaConvertS1aOutputGroupSettingsMsSmoothGroupSettingsEncryption {
  SpekeKeyProvider: AwsMediaConvertS1f
}

input AwsMediaConvertS1aOutputGroupSettingsMsSmoothGroupSettingsEncryptionInput {
  SpekeKeyProvider: AwsMediaConvertS1fInput
}

input AwsMediaConvertS1aOutputGroupSettingsMsSmoothGroupSettingsInput {
  AudioDeduplication: String
  Destination: String
  Encryption: AwsMediaConvertS1aOutputGroupSettingsMsSmoothGroupSettingsEncryptionInput
  FragmentLength: Int
  ManifestEncoding: String
}

type AwsMediaConvertS1aOutputs {
  AudioDescriptions: [AwsMediaConvertS2b]
  CaptionDescriptions: [AwsMediaConvertS1aOutputsCaptionDescriptions]
  ContainerSettings: AwsMediaConvertS46
  Extension: String
  NameModifier: String
  OutputSettings: AwsMediaConvertS1aOutputsOutputSettings
  Preset: String
  VideoDescription: AwsMediaConvertS57
}

type AwsMediaConvertS1aOutputsCaptionDescriptions {
  CaptionSelectorName: String
  DestinationSettings: AwsMediaConvertS3l
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaConvertS1aOutputsCaptionDescriptionsInput {
  CaptionSelectorName: String
  DestinationSettings: AwsMediaConvertS3lInput
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaConvertS1aOutputsInput {
  AudioDescriptions: [AwsMediaConvertS2bInput]
  CaptionDescriptions: [AwsMediaConvertS1aOutputsCaptionDescriptionsInput]
  ContainerSettings: AwsMediaConvertS46Input
  Extension: String
  NameModifier: String
  OutputSettings: AwsMediaConvertS1aOutputsOutputSettingsInput
  Preset: String
  VideoDescription: AwsMediaConvertS57Input
}

type AwsMediaConvertS1aOutputsOutputSettings {
  HlsSettings: AwsMediaConvertS1aOutputsOutputSettingsHlsSettings
}

type AwsMediaConvertS1aOutputsOutputSettingsHlsSettings {
  AudioGroupId: String
  AudioRenditionSets: String
  AudioTrackType: String
  IFrameOnlyManifest: String
  SegmentModifier: String
}

input AwsMediaConvertS1aOutputsOutputSettingsHlsSettingsInput {
  AudioGroupId: String
  AudioRenditionSets: String
  AudioTrackType: String
  IFrameOnlyManifest: String
  SegmentModifier: String
}

input AwsMediaConvertS1aOutputsOutputSettingsInput {
  HlsSettings: AwsMediaConvertS1aOutputsOutputSettingsHlsSettingsInput
}

type AwsMediaConvertS1f {
  ResourceId: String
  SystemIds: [String]
  Url: String
}

input AwsMediaConvertS1fInput {
  ResourceId: String
  SystemIds: [String]
  Url: String
}

type AwsMediaConvertS2b {
  AudioNormalizationSettings: AwsMediaConvertS2bAudioNormalizationSettings
  AudioSourceName: String
  AudioType: Int
  AudioTypeControl: String
  CodecSettings: AwsMediaConvertS2bCodecSettings
  LanguageCode: String
  LanguageCodeControl: String
  RemixSettings: AwsMediaConvertSi
  StreamName: String
}

type AwsMediaConvertS2bAudioNormalizationSettings {
  Algorithm: String
  AlgorithmControl: String
  CorrectionGateLevel: Int
  LoudnessLogging: String
  PeakCalculation: String
  TargetLkfs: JSON
}

input AwsMediaConvertS2bAudioNormalizationSettingsInput {
  Algorithm: String
  AlgorithmControl: String
  CorrectionGateLevel: Int
  LoudnessLogging: String
  PeakCalculation: String
  TargetLkfs: JSON
}

type AwsMediaConvertS2bCodecSettings {
  AacSettings: AwsMediaConvertS2bCodecSettingsAacSettings
  Ac3Settings: AwsMediaConvertS2bCodecSettingsAc3Settings
  AiffSettings: AwsMediaConvertS2bCodecSettingsAiffSettings
  Codec: String
  Eac3Settings: AwsMediaConvertS2bCodecSettingsEac3Settings
  Mp2Settings: AwsMediaConvertS2bCodecSettingsMp2Settings
  WavSettings: AwsMediaConvertS2bCodecSettingsWavSettings
}

type AwsMediaConvertS2bCodecSettingsAacSettings {
  AudioDescriptionBroadcasterMix: String
  Bitrate: Int
  CodecProfile: String
  CodingMode: String
  RateControlMode: String
  RawFormat: String
  SampleRate: Int
  Specification: String
  VbrQuality: String
}

input AwsMediaConvertS2bCodecSettingsAacSettingsInput {
  AudioDescriptionBroadcasterMix: String
  Bitrate: Int
  CodecProfile: String
  CodingMode: String
  RateControlMode: String
  RawFormat: String
  SampleRate: Int
  Specification: String
  VbrQuality: String
}

type AwsMediaConvertS2bCodecSettingsAc3Settings {
  Bitrate: Int
  BitstreamMode: String
  CodingMode: String
  Dialnorm: Int
  DynamicRangeCompressionProfile: String
  LfeFilter: String
  MetadataControl: String
  SampleRate: Int
}

input AwsMediaConvertS2bCodecSettingsAc3SettingsInput {
  Bitrate: Int
  BitstreamMode: String
  CodingMode: String
  Dialnorm: Int
  DynamicRangeCompressionProfile: String
  LfeFilter: String
  MetadataControl: String
  SampleRate: Int
}

type AwsMediaConvertS2bCodecSettingsAiffSettings {
  BitDepth: Int
  Channels: Int
  SampleRate: Int
}

input AwsMediaConvertS2bCodecSettingsAiffSettingsInput {
  BitDepth: Int
  Channels: Int
  SampleRate: Int
}

type AwsMediaConvertS2bCodecSettingsEac3Settings {
  AttenuationControl: String
  Bitrate: Int
  BitstreamMode: String
  CodingMode: String
  DcFilter: String
  Dialnorm: Int
  DynamicRangeCompressionLine: String
  DynamicRangeCompressionRf: String
  LfeControl: String
  LfeFilter: String
  LoRoCenterMixLevel: JSON
  LoRoSurroundMixLevel: JSON
  LtRtCenterMixLevel: JSON
  LtRtSurroundMixLevel: JSON
  MetadataControl: String
  PassthroughControl: String
  PhaseControl: String
  SampleRate: Int
  StereoDownmix: String
  SurroundExMode: String
  SurroundMode: String
}

input AwsMediaConvertS2bCodecSettingsEac3SettingsInput {
  AttenuationControl: String
  Bitrate: Int
  BitstreamMode: String
  CodingMode: String
  DcFilter: String
  Dialnorm: Int
  DynamicRangeCompressionLine: String
  DynamicRangeCompressionRf: String
  LfeControl: String
  LfeFilter: String
  LoRoCenterMixLevel: JSON
  LoRoSurroundMixLevel: JSON
  LtRtCenterMixLevel: JSON
  LtRtSurroundMixLevel: JSON
  MetadataControl: String
  PassthroughControl: String
  PhaseControl: String
  SampleRate: Int
  StereoDownmix: String
  SurroundExMode: String
  SurroundMode: String
}

input AwsMediaConvertS2bCodecSettingsInput {
  AacSettings: AwsMediaConvertS2bCodecSettingsAacSettingsInput
  Ac3Settings: AwsMediaConvertS2bCodecSettingsAc3SettingsInput
  AiffSettings: AwsMediaConvertS2bCodecSettingsAiffSettingsInput
  Codec: String
  Eac3Settings: AwsMediaConvertS2bCodecSettingsEac3SettingsInput
  Mp2Settings: AwsMediaConvertS2bCodecSettingsMp2SettingsInput
  WavSettings: AwsMediaConvertS2bCodecSettingsWavSettingsInput
}

type AwsMediaConvertS2bCodecSettingsMp2Settings {
  Bitrate: Int
  Channels: Int
  SampleRate: Int
}

input AwsMediaConvertS2bCodecSettingsMp2SettingsInput {
  Bitrate: Int
  Channels: Int
  SampleRate: Int
}

type AwsMediaConvertS2bCodecSettingsWavSettings {
  BitDepth: Int
  Channels: Int
  SampleRate: Int
}

input AwsMediaConvertS2bCodecSettingsWavSettingsInput {
  BitDepth: Int
  Channels: Int
  SampleRate: Int
}

input AwsMediaConvertS2bInput {
  AudioNormalizationSettings: AwsMediaConvertS2bAudioNormalizationSettingsInput
  AudioSourceName: String
  AudioType: Int
  AudioTypeControl: String
  CodecSettings: AwsMediaConvertS2bCodecSettingsInput
  LanguageCode: String
  LanguageCodeControl: String
  RemixSettings: AwsMediaConvertSiInput
  StreamName: String
}

type AwsMediaConvertS3l {
  BurninDestinationSettings: AwsMediaConvertS3lBurninDestinationSettings
  DestinationType: String
  DvbSubDestinationSettings: AwsMediaConvertS3lDvbSubDestinationSettings
  SccDestinationSettings: AwsMediaConvertS3lSccDestinationSettings
  TeletextDestinationSettings: AwsMediaConvertS3lTeletextDestinationSettings
  TtmlDestinationSettings: AwsMediaConvertS3lTtmlDestinationSettings
}

type AwsMediaConvertS3lBurninDestinationSettings {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: Int
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextSpacing: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaConvertS3lBurninDestinationSettingsInput {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: Int
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextSpacing: String
  XPosition: Int
  YPosition: Int
}

type AwsMediaConvertS3lDvbSubDestinationSettings {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: Int
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextSpacing: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaConvertS3lDvbSubDestinationSettingsInput {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: Int
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextSpacing: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaConvertS3lInput {
  BurninDestinationSettings: AwsMediaConvertS3lBurninDestinationSettingsInput
  DestinationType: String
  DvbSubDestinationSettings: AwsMediaConvertS3lDvbSubDestinationSettingsInput
  SccDestinationSettings: AwsMediaConvertS3lSccDestinationSettingsInput
  TeletextDestinationSettings: AwsMediaConvertS3lTeletextDestinationSettingsInput
  TtmlDestinationSettings: AwsMediaConvertS3lTtmlDestinationSettingsInput
}

type AwsMediaConvertS3lSccDestinationSettings {
  Framerate: String
}

input AwsMediaConvertS3lSccDestinationSettingsInput {
  Framerate: String
}

type AwsMediaConvertS3lTeletextDestinationSettings {
  PageNumber: String
}

input AwsMediaConvertS3lTeletextDestinationSettingsInput {
  PageNumber: String
}

type AwsMediaConvertS3lTtmlDestinationSettings {
  StylePassthrough: String
}

input AwsMediaConvertS3lTtmlDestinationSettingsInput {
  StylePassthrough: String
}

type AwsMediaConvertS46 {
  Container: String
  F4vSettings: AwsMediaConvertS46F4vSettings
  M2tsSettings: AwsMediaConvertS46M2tsSettings
  M3u8Settings: AwsMediaConvertS46M3u8Settings
  MovSettings: AwsMediaConvertS46MovSettings
  Mp4Settings: AwsMediaConvertS46Mp4Settings
}

type AwsMediaConvertS46F4vSettings {
  MoovPlacement: String
}

input AwsMediaConvertS46F4vSettingsInput {
  MoovPlacement: String
}

input AwsMediaConvertS46Input {
  Container: String
  F4vSettings: AwsMediaConvertS46F4vSettingsInput
  M2tsSettings: AwsMediaConvertS46M2tsSettingsInput
  M3u8Settings: AwsMediaConvertS46M3u8SettingsInput
  MovSettings: AwsMediaConvertS46MovSettingsInput
  Mp4Settings: AwsMediaConvertS46Mp4SettingsInput
}

type AwsMediaConvertS46M2tsSettings {
  AudioBufferModel: String
  AudioFramesPerPes: Int
  AudioPids: [Int]
  Bitrate: Int
  BufferModel: String
  DvbNitSettings: AwsMediaConvertS46M2tsSettingsDvbNitSettings
  DvbSdtSettings: AwsMediaConvertS46M2tsSettingsDvbSdtSettings
  DvbSubPids: [Int]
  DvbTdtSettings: AwsMediaConvertS46M2tsSettingsDvbTdtSettings
  DvbTeletextPid: Int
  EbpAudioInterval: String
  EbpPlacement: String
  EsRateInPes: String
  FragmentTime: JSON
  MaxPcrInterval: Int
  MinEbpInterval: Int
  NullPacketBitrate: JSON
  PatInterval: Int
  PcrControl: String
  PcrPid: Int
  PmtInterval: Int
  PmtPid: Int
  PrivateMetadataPid: Int
  ProgramNumber: Int
  RateMode: String
  Scte35Pid: Int
  Scte35Source: String
  SegmentationMarkers: String
  SegmentationStyle: String
  SegmentationTime: JSON
  TransportStreamId: Int
  VideoPid: Int
}

type AwsMediaConvertS46M2tsSettingsDvbNitSettings {
  NetworkId: Int
  NetworkName: String
  NitInterval: Int
}

input AwsMediaConvertS46M2tsSettingsDvbNitSettingsInput {
  NetworkId: Int
  NetworkName: String
  NitInterval: Int
}

type AwsMediaConvertS46M2tsSettingsDvbSdtSettings {
  OutputSdt: String
  SdtInterval: Int
  ServiceName: String
  ServiceProviderName: String
}

input AwsMediaConvertS46M2tsSettingsDvbSdtSettingsInput {
  OutputSdt: String
  SdtInterval: Int
  ServiceName: String
  ServiceProviderName: String
}

type AwsMediaConvertS46M2tsSettingsDvbTdtSettings {
  TdtInterval: Int
}

input AwsMediaConvertS46M2tsSettingsDvbTdtSettingsInput {
  TdtInterval: Int
}

input AwsMediaConvertS46M2tsSettingsInput {
  AudioBufferModel: String
  AudioFramesPerPes: Int
  AudioPids: [Int]
  Bitrate: Int
  BufferModel: String
  DvbNitSettings: AwsMediaConvertS46M2tsSettingsDvbNitSettingsInput
  DvbSdtSettings: AwsMediaConvertS46M2tsSettingsDvbSdtSettingsInput
  DvbSubPids: [Int]
  DvbTdtSettings: AwsMediaConvertS46M2tsSettingsDvbTdtSettingsInput
  DvbTeletextPid: Int
  EbpAudioInterval: String
  EbpPlacement: String
  EsRateInPes: String
  FragmentTime: JSON
  MaxPcrInterval: Int
  MinEbpInterval: Int
  NullPacketBitrate: JSON
  PatInterval: Int
  PcrControl: String
  PcrPid: Int
  PmtInterval: Int
  PmtPid: Int
  PrivateMetadataPid: Int
  ProgramNumber: Int
  RateMode: String
  Scte35Pid: Int
  Scte35Source: String
  SegmentationMarkers: String
  SegmentationStyle: String
  SegmentationTime: JSON
  TransportStreamId: Int
  VideoPid: Int
}

type AwsMediaConvertS46M3u8Settings {
  AudioFramesPerPes: Int
  AudioPids: [Int]
  PatInterval: Int
  PcrControl: String
  PcrPid: Int
  PmtInterval: Int
  PmtPid: Int
  PrivateMetadataPid: Int
  ProgramNumber: Int
  Scte35Pid: Int
  Scte35Source: String
  TimedMetadata: String
  TimedMetadataPid: Int
  TransportStreamId: Int
  VideoPid: Int
}

input AwsMediaConvertS46M3u8SettingsInput {
  AudioFramesPerPes: Int
  AudioPids: [Int]
  PatInterval: Int
  PcrControl: String
  PcrPid: Int
  PmtInterval: Int
  PmtPid: Int
  PrivateMetadataPid: Int
  ProgramNumber: Int
  Scte35Pid: Int
  Scte35Source: String
  TimedMetadata: String
  TimedMetadataPid: Int
  TransportStreamId: Int
  VideoPid: Int
}

type AwsMediaConvertS46MovSettings {
  ClapAtom: String
  CslgAtom: String
  Mpeg2FourCCControl: String
  PaddingControl: String
  Reference: String
}

input AwsMediaConvertS46MovSettingsInput {
  ClapAtom: String
  CslgAtom: String
  Mpeg2FourCCControl: String
  PaddingControl: String
  Reference: String
}

type AwsMediaConvertS46Mp4Settings {
  CslgAtom: String
  FreeSpaceBox: String
  MoovPlacement: String
  Mp4MajorBrand: String
}

input AwsMediaConvertS46Mp4SettingsInput {
  CslgAtom: String
  FreeSpaceBox: String
  MoovPlacement: String
  Mp4MajorBrand: String
}

type AwsMediaConvertS5 {
  AdAvailOffset: Int
  AvailBlanking: AwsMediaConvertS7
  Inputs: [AwsMediaConvertS5Inputs]
  NielsenConfiguration: AwsMediaConvertS19
  OutputGroups: [AwsMediaConvertS1a]
  TimecodeConfig: AwsMediaConvertS7z
  TimedMetadataInsertion: AwsMediaConvertS81
}

type AwsMediaConvertS57 {
  AfdSignaling: String
  AntiAlias: String
  CodecSettings: AwsMediaConvertS57CodecSettings
  ColorMetadata: String
  Crop: AwsMediaConvertS7e
  DropFrameTimecode: String
  FixedAfd: Int
  Height: Int
  Position: AwsMediaConvertS7e
  RespondToAfd: String
  ScalingBehavior: String
  Sharpness: Int
  TimecodeInsertion: String
  VideoPreprocessors: AwsMediaConvertS57VideoPreprocessors
  Width: Int
}

type AwsMediaConvertS57CodecSettings {
  Codec: String
  FrameCaptureSettings: AwsMediaConvertS57CodecSettingsFrameCaptureSettings
  H264Settings: AwsMediaConvertS57CodecSettingsH264Settings
  H265Settings: AwsMediaConvertS57CodecSettingsH265Settings
  Mpeg2Settings: AwsMediaConvertS57CodecSettingsMpeg2Settings
  ProresSettings: AwsMediaConvertS57CodecSettingsProresSettings
}

type AwsMediaConvertS57CodecSettingsFrameCaptureSettings {
  FramerateDenominator: Int
  FramerateNumerator: Int
  MaxCaptures: Int
  Quality: Int
}

input AwsMediaConvertS57CodecSettingsFrameCaptureSettingsInput {
  FramerateDenominator: Int
  FramerateNumerator: Int
  MaxCaptures: Int
  Quality: Int
}

type AwsMediaConvertS57CodecSettingsH264Settings {
  AdaptiveQuantization: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  EntropyEncoding: String
  FieldEncoding: String
  FlickerAdaptiveQuantization: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  NumberReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  RepeatPps: String
  SceneChangeDetect: String
  Slices: Int
  SlowPal: String
  Softness: Int
  SpatialAdaptiveQuantization: String
  Syntax: String
  Telecine: String
  TemporalAdaptiveQuantization: String
  UnregisteredSeiTimecode: String
}

input AwsMediaConvertS57CodecSettingsH264SettingsInput {
  AdaptiveQuantization: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  EntropyEncoding: String
  FieldEncoding: String
  FlickerAdaptiveQuantization: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  NumberReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  RepeatPps: String
  SceneChangeDetect: String
  Slices: Int
  SlowPal: String
  Softness: Int
  SpatialAdaptiveQuantization: String
  Syntax: String
  Telecine: String
  TemporalAdaptiveQuantization: String
  UnregisteredSeiTimecode: String
}

type AwsMediaConvertS57CodecSettingsH265Settings {
  AdaptiveQuantization: String
  AlternateTransferFunctionSei: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  FlickerAdaptiveQuantization: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  NumberReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  SampleAdaptiveOffsetFilterMode: String
  SceneChangeDetect: String
  Slices: Int
  SlowPal: String
  SpatialAdaptiveQuantization: String
  Telecine: String
  TemporalAdaptiveQuantization: String
  TemporalIds: String
  Tiles: String
  UnregisteredSeiTimecode: String
}

input AwsMediaConvertS57CodecSettingsH265SettingsInput {
  AdaptiveQuantization: String
  AlternateTransferFunctionSei: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  FlickerAdaptiveQuantization: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  NumberReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  SampleAdaptiveOffsetFilterMode: String
  SceneChangeDetect: String
  Slices: Int
  SlowPal: String
  SpatialAdaptiveQuantization: String
  Telecine: String
  TemporalAdaptiveQuantization: String
  TemporalIds: String
  Tiles: String
  UnregisteredSeiTimecode: String
}

input AwsMediaConvertS57CodecSettingsInput {
  Codec: String
  FrameCaptureSettings: AwsMediaConvertS57CodecSettingsFrameCaptureSettingsInput
  H264Settings: AwsMediaConvertS57CodecSettingsH264SettingsInput
  H265Settings: AwsMediaConvertS57CodecSettingsH265SettingsInput
  Mpeg2Settings: AwsMediaConvertS57CodecSettingsMpeg2SettingsInput
  ProresSettings: AwsMediaConvertS57CodecSettingsProresSettingsInput
}

type AwsMediaConvertS57CodecSettingsMpeg2Settings {
  AdaptiveQuantization: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  IntraDcPrecision: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  SceneChangeDetect: String
  SlowPal: String
  Softness: Int
  SpatialAdaptiveQuantization: String
  Syntax: String
  Telecine: String
  TemporalAdaptiveQuantization: String
}

input AwsMediaConvertS57CodecSettingsMpeg2SettingsInput {
  AdaptiveQuantization: String
  Bitrate: Int
  CodecLevel: String
  CodecProfile: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopClosedCadence: Int
  GopSize: JSON
  GopSizeUnits: String
  HrdBufferInitialFillPercentage: Int
  HrdBufferSize: Int
  InterlaceMode: String
  IntraDcPrecision: String
  MaxBitrate: Int
  MinIInterval: Int
  NumberBFramesBetweenReferenceFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  QualityTuningLevel: String
  RateControlMode: String
  SceneChangeDetect: String
  SlowPal: String
  Softness: Int
  SpatialAdaptiveQuantization: String
  Syntax: String
  Telecine: String
  TemporalAdaptiveQuantization: String
}

type AwsMediaConvertS57CodecSettingsProresSettings {
  CodecProfile: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  InterlaceMode: String
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  SlowPal: String
  Telecine: String
}

input AwsMediaConvertS57CodecSettingsProresSettingsInput {
  CodecProfile: String
  FramerateControl: String
  FramerateConversionAlgorithm: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  InterlaceMode: String
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  SlowPal: String
  Telecine: String
}

input AwsMediaConvertS57Input {
  AfdSignaling: String
  AntiAlias: String
  CodecSettings: AwsMediaConvertS57CodecSettingsInput
  ColorMetadata: String
  Crop: AwsMediaConvertS7eInput
  DropFrameTimecode: String
  FixedAfd: Int
  Height: Int
  Position: AwsMediaConvertS7eInput
  RespondToAfd: String
  ScalingBehavior: String
  Sharpness: Int
  TimecodeInsertion: String
  VideoPreprocessors: AwsMediaConvertS57VideoPreprocessorsInput
  Width: Int
}

type AwsMediaConvertS57VideoPreprocessors {
  ColorCorrector: AwsMediaConvertS57VideoPreprocessorsColorCorrector
  Deinterlacer: AwsMediaConvertS57VideoPreprocessorsDeinterlacer
  ImageInserter: AwsMediaConvertS57VideoPreprocessorsImageInserter
  NoiseReducer: AwsMediaConvertS57VideoPreprocessorsNoiseReducer
  TimecodeBurnin: AwsMediaConvertS57VideoPreprocessorsTimecodeBurnin
}

type AwsMediaConvertS57VideoPreprocessorsColorCorrector {
  Brightness: Int
  ColorSpaceConversion: String
  Contrast: Int
  Hdr10Metadata: AwsMediaConvertS18
  Hue: Int
  Saturation: Int
}

input AwsMediaConvertS57VideoPreprocessorsColorCorrectorInput {
  Brightness: Int
  ColorSpaceConversion: String
  Contrast: Int
  Hdr10Metadata: AwsMediaConvertS18Input
  Hue: Int
  Saturation: Int
}

type AwsMediaConvertS57VideoPreprocessorsDeinterlacer {
  Algorithm: String
  Control: String
  Mode: String
}

input AwsMediaConvertS57VideoPreprocessorsDeinterlacerInput {
  Algorithm: String
  Control: String
  Mode: String
}

type AwsMediaConvertS57VideoPreprocessorsImageInserter {
  InsertableImages: [AwsMediaConvertS57VideoPreprocessorsImageInserterInsertableImages]
}

input AwsMediaConvertS57VideoPreprocessorsImageInserterInput {
  InsertableImages: [AwsMediaConvertS57VideoPreprocessorsImageInserterInsertableImagesInput]
}

type AwsMediaConvertS57VideoPreprocessorsImageInserterInsertableImages {
  Duration: Int
  FadeIn: Int
  FadeOut: Int
  Height: Int
  ImageInserterInput: String
  ImageX: Int
  ImageY: Int
  Layer: Int
  Opacity: Int
  StartTime: String
  Width: Int
}

input AwsMediaConvertS57VideoPreprocessorsImageInserterInsertableImagesInput {
  Duration: Int
  FadeIn: Int
  FadeOut: Int
  Height: Int
  ImageInserterInput: String
  ImageX: Int
  ImageY: Int
  Layer: Int
  Opacity: Int
  StartTime: String
  Width: Int
}

input AwsMediaConvertS57VideoPreprocessorsInput {
  ColorCorrector: AwsMediaConvertS57VideoPreprocessorsColorCorrectorInput
  Deinterlacer: AwsMediaConvertS57VideoPreprocessorsDeinterlacerInput
  ImageInserter: AwsMediaConvertS57VideoPreprocessorsImageInserterInput
  NoiseReducer: AwsMediaConvertS57VideoPreprocessorsNoiseReducerInput
  TimecodeBurnin: AwsMediaConvertS57VideoPreprocessorsTimecodeBurninInput
}

type AwsMediaConvertS57VideoPreprocessorsNoiseReducer {
  Filter: String
  FilterSettings: AwsMediaConvertS57VideoPreprocessorsNoiseReducerFilterSettings
  SpatialFilterSettings: AwsMediaConvertS57VideoPreprocessorsNoiseReducerSpatialFilterSettings
}

type AwsMediaConvertS57VideoPreprocessorsNoiseReducerFilterSettings {
  Strength: Int
}

input AwsMediaConvertS57VideoPreprocessorsNoiseReducerFilterSettingsInput {
  Strength: Int
}

input AwsMediaConvertS57VideoPreprocessorsNoiseReducerInput {
  Filter: String
  FilterSettings: AwsMediaConvertS57VideoPreprocessorsNoiseReducerFilterSettingsInput
  SpatialFilterSettings: AwsMediaConvertS57VideoPreprocessorsNoiseReducerSpatialFilterSettingsInput
}

type AwsMediaConvertS57VideoPreprocessorsNoiseReducerSpatialFilterSettings {
  PostFilterSharpenStrength: Int
  Speed: Int
  Strength: Int
}

input AwsMediaConvertS57VideoPreprocessorsNoiseReducerSpatialFilterSettingsInput {
  PostFilterSharpenStrength: Int
  Speed: Int
  Strength: Int
}

type AwsMediaConvertS57VideoPreprocessorsTimecodeBurnin {
  FontSize: Int
  Position: String
  Prefix: String
}

input AwsMediaConvertS57VideoPreprocessorsTimecodeBurninInput {
  FontSize: Int
  Position: String
  Prefix: String
}

input AwsMediaConvertS5Input {
  AdAvailOffset: Int
  AvailBlanking: AwsMediaConvertS7Input
  Inputs: [AwsMediaConvertS5InputsInput]
  NielsenConfiguration: AwsMediaConvertS19Input
  OutputGroups: [AwsMediaConvertS1aInput]
  TimecodeConfig: AwsMediaConvertS7zInput
  TimedMetadataInsertion: AwsMediaConvertS81Input
}

type AwsMediaConvertS5Inputs {
  AudioSelectorGroups: JSON
  AudioSelectors: JSON
  CaptionSelectors: JSON
  DeblockFilter: String
  DenoiseFilter: String
  FileInput: String
  FilterEnable: String
  FilterStrength: Int
  InputClippings: [AwsMediaConvertS11]
  ProgramNumber: Int
  PsiControl: String
  TimecodeSource: String
  VideoSelector: AwsMediaConvertS15
}

input AwsMediaConvertS5InputsInput {
  AudioSelectorGroups: JSON
  AudioSelectors: JSON
  CaptionSelectors: JSON
  DeblockFilter: String
  DenoiseFilter: String
  FileInput: String
  FilterEnable: String
  FilterStrength: Int
  InputClippings: [AwsMediaConvertS11Input]
  ProgramNumber: Int
  PsiControl: String
  TimecodeSource: String
  VideoSelector: AwsMediaConvertS15Input
}

type AwsMediaConvertS7 {
  AvailBlankingImage: String
}

type AwsMediaConvertS7e {
  Height: Int
  Width: Int
  X: Int
  Y: Int
}

input AwsMediaConvertS7eInput {
  Height: Int
  Width: Int
  X: Int
  Y: Int
}

input AwsMediaConvertS7Input {
  AvailBlankingImage: String
}

type AwsMediaConvertS7z {
  Anchor: String
  Source: String
  Start: String
  TimestampOffset: String
}

input AwsMediaConvertS7zInput {
  Anchor: String
  Source: String
  Start: String
  TimestampOffset: String
}

type AwsMediaConvertS81 {
  Id3Insertions: [AwsMediaConvertS81Id3Insertions]
}

type AwsMediaConvertS81Id3Insertions {
  Id3: String
  Timecode: String
}

input AwsMediaConvertS81Id3InsertionsInput {
  Id3: String
  Timecode: String
}

input AwsMediaConvertS81Input {
  Id3Insertions: [AwsMediaConvertS81Id3InsertionsInput]
}

type AwsMediaConvertS86 {
  Arn: String
  CreatedAt: Date
  ErrorCode: Int
  ErrorMessage: String
  Id: String
  JobTemplate: String
  OutputGroupDetails: [AwsMediaConvertS86OutputGroupDetails]
  Queue: String
  Role: String
  Settings: AwsMediaConvertS5
  Status: String
  Timing: AwsMediaConvertS86Timing
  UserMetadata: JSON
}

type AwsMediaConvertS86OutputGroupDetails {
  OutputDetails: [AwsMediaConvertS86OutputGroupDetailsOutputDetails]
}

type AwsMediaConvertS86OutputGroupDetailsOutputDetails {
  DurationInMs: Int
  VideoDetails: AwsMediaConvertS86OutputGroupDetailsOutputDetailsVideoDetails
}

type AwsMediaConvertS86OutputGroupDetailsOutputDetailsVideoDetails {
  HeightInPx: Int
  WidthInPx: Int
}

type AwsMediaConvertS86Timing {
  FinishTime: Date
  StartTime: Date
  SubmitTime: Date
}

type AwsMediaConvertS8g {
  AdAvailOffset: Int
  AvailBlanking: AwsMediaConvertS7
  Inputs: [AwsMediaConvertS8gInputs]
  NielsenConfiguration: AwsMediaConvertS19
  OutputGroups: [AwsMediaConvertS1a]
  TimecodeConfig: AwsMediaConvertS7z
  TimedMetadataInsertion: AwsMediaConvertS81
}

input AwsMediaConvertS8gInput {
  AdAvailOffset: Int
  AvailBlanking: AwsMediaConvertS7Input
  Inputs: [AwsMediaConvertS8gInputsInput]
  NielsenConfiguration: AwsMediaConvertS19Input
  OutputGroups: [AwsMediaConvertS1aInput]
  TimecodeConfig: AwsMediaConvertS7zInput
  TimedMetadataInsertion: AwsMediaConvertS81Input
}

type AwsMediaConvertS8gInputs {
  AudioSelectorGroups: JSON
  AudioSelectors: JSON
  CaptionSelectors: JSON
  DeblockFilter: String
  DenoiseFilter: String
  FilterEnable: String
  FilterStrength: Int
  InputClippings: [AwsMediaConvertS11]
  ProgramNumber: Int
  PsiControl: String
  TimecodeSource: String
  VideoSelector: AwsMediaConvertS15
}

input AwsMediaConvertS8gInputsInput {
  AudioSelectorGroups: JSON
  AudioSelectors: JSON
  CaptionSelectors: JSON
  DeblockFilter: String
  DenoiseFilter: String
  FilterEnable: String
  FilterStrength: Int
  InputClippings: [AwsMediaConvertS11Input]
  ProgramNumber: Int
  PsiControl: String
  TimecodeSource: String
  VideoSelector: AwsMediaConvertS15Input
}

type AwsMediaConvertS8k {
  Arn: String
  Category: String
  CreatedAt: Date
  Description: String
  LastUpdated: Date
  Name: String
  Queue: String
  Settings: AwsMediaConvertS8g
  Type: String
}

type AwsMediaConvertS8n {
  AudioDescriptions: [AwsMediaConvertS2b]
  CaptionDescriptions: [AwsMediaConvertS8nCaptionDescriptions]
  ContainerSettings: AwsMediaConvertS46
  VideoDescription: AwsMediaConvertS57
}

type AwsMediaConvertS8nCaptionDescriptions {
  DestinationSettings: AwsMediaConvertS3l
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaConvertS8nCaptionDescriptionsInput {
  DestinationSettings: AwsMediaConvertS3lInput
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaConvertS8nInput {
  AudioDescriptions: [AwsMediaConvertS2bInput]
  CaptionDescriptions: [AwsMediaConvertS8nCaptionDescriptionsInput]
  ContainerSettings: AwsMediaConvertS46Input
  VideoDescription: AwsMediaConvertS57Input
}

type AwsMediaConvertS8r {
  Arn: String
  Category: String
  CreatedAt: Date
  Description: String
  LastUpdated: Date
  Name: String
  Settings: AwsMediaConvertS8n
  Type: String
}

type AwsMediaConvertS8u {
  Arn: String
  CreatedAt: Date
  Description: String
  LastUpdated: Date
  Name: String
  Status: String
  Type: String
}

type AwsMediaConvertSi {
  ChannelMapping: AwsMediaConvertSiChannelMapping
  ChannelsIn: Int
  ChannelsOut: Int
}

type AwsMediaConvertSiChannelMapping {
  OutputChannels: [AwsMediaConvertSiChannelMappingOutputChannels]
}

input AwsMediaConvertSiChannelMappingInput {
  OutputChannels: [AwsMediaConvertSiChannelMappingOutputChannelsInput]
}

type AwsMediaConvertSiChannelMappingOutputChannels {
  InputChannels: [Int]
}

input AwsMediaConvertSiChannelMappingOutputChannelsInput {
  InputChannels: [Int]
}

input AwsMediaConvertSiInput {
  ChannelMapping: AwsMediaConvertSiChannelMappingInput
  ChannelsIn: Int
  ChannelsOut: Int
}

input AwsMediaConvertUpdateJobTemplateInput {
  Category: String
  Description: String
  Name: String!
  Queue: String
  Settings: AwsMediaConvertS8gInput
}

type AwsMediaConvertUpdateJobTemplateOutput {
  JobTemplate: AwsMediaConvertS8k
}

input AwsMediaConvertUpdatePresetInput {
  Category: String
  Description: String
  Name: String!
  Settings: AwsMediaConvertS8nInput
}

type AwsMediaConvertUpdatePresetOutput {
  Preset: AwsMediaConvertS8r
}

input AwsMediaConvertUpdateQueueInput {
  Description: String
  Name: String!
  Status: String
}

type AwsMediaConvertUpdateQueueOutput {
  Queue: AwsMediaConvertS8u
}

# AWS Elemental MediaLive (2017-10-14)
type AwsMediaLive {
  createChannel(input: AwsMediaLiveCreateChannelInput, config: AwsConfig): AwsMediaLiveCreateChannelOutput
  createInput(input: AwsMediaLiveCreateInputInput, config: AwsConfig): AwsMediaLiveCreateInputOutput
  createInputSecurityGroup(input: AwsMediaLiveCreateInputSecurityGroupInput, config: AwsConfig): AwsMediaLiveCreateInputSecurityGroupOutput
  deleteChannel(input: AwsMediaLiveDeleteChannelInput!, config: AwsConfig): AwsMediaLiveDeleteChannelOutput
  deleteInput(input: AwsMediaLiveDeleteInputInput!, config: AwsConfig): JSON
  deleteInputSecurityGroup(input: AwsMediaLiveDeleteInputSecurityGroupInput!, config: AwsConfig): JSON
  describeChannel(input: AwsMediaLiveDescribeChannelInput!, config: AwsConfig): AwsMediaLiveDescribeChannelOutput
  describeInput(input: AwsMediaLiveDescribeInputInput!, config: AwsConfig): AwsMediaLiveDescribeInputOutput
  describeInputSecurityGroup(input: AwsMediaLiveDescribeInputSecurityGroupInput!, config: AwsConfig): AwsMediaLiveDescribeInputSecurityGroupOutput
  listChannels(input: AwsMediaLiveListChannelsInput, config: AwsConfig): AwsMediaLiveListChannelsOutput
  listInputSecurityGroups(input: AwsMediaLiveListInputSecurityGroupsInput, config: AwsConfig): AwsMediaLiveListInputSecurityGroupsOutput
  listInputs(input: AwsMediaLiveListInputsInput, config: AwsConfig): AwsMediaLiveListInputsOutput
  startChannel(input: AwsMediaLiveStartChannelInput!, config: AwsConfig): AwsMediaLiveStartChannelOutput
  stopChannel(input: AwsMediaLiveStopChannelInput!, config: AwsConfig): AwsMediaLiveStopChannelOutput
}

input AwsMediaLiveCreateChannelInput {
  Destinations: [AwsMediaLiveS2Input]
  EncoderSettings: AwsMediaLiveS7Input
  InputAttachments: [AwsMediaLiveS68Input]
  Name: String
  RequestId: String
  Reserved: String
  RoleArn: String
}

type AwsMediaLiveCreateChannelOutput {
  Channel: AwsMediaLiveCreateChannelOutputChannel
}

type AwsMediaLiveCreateChannelOutputChannel {
  Arn: String
  Destinations: [AwsMediaLiveS2]
  EgressEndpoints: [AwsMediaLiveS78]
  EncoderSettings: AwsMediaLiveS7
  Id: String
  InputAttachments: [AwsMediaLiveS68]
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
}

input AwsMediaLiveCreateInputDestinationsInput {
  StreamName: String
}

input AwsMediaLiveCreateInputInput {
  Destinations: [AwsMediaLiveCreateInputDestinationsInput]
  InputSecurityGroups: [String]
  Name: String
  RequestId: String
  Sources: [AwsMediaLiveCreateInputSourcesInput]
  Type: String
}

type AwsMediaLiveCreateInputOutput {
  Input: AwsMediaLiveS7i
}

input AwsMediaLiveCreateInputSecurityGroupInput {
  WhitelistRules: [AwsMediaLiveCreateInputSecurityGroupWhitelistRulesInput]
}

type AwsMediaLiveCreateInputSecurityGroupOutput {
  SecurityGroup: AwsMediaLiveS7s
}

input AwsMediaLiveCreateInputSecurityGroupWhitelistRulesInput {
  Cidr: String
}

input AwsMediaLiveCreateInputSourcesInput {
  PasswordParam: String
  Url: String
  Username: String
}

input AwsMediaLiveDeleteChannelInput {
  ChannelId: String!
}

type AwsMediaLiveDeleteChannelOutput {
  Arn: String
  Destinations: [AwsMediaLiveS2]
  EgressEndpoints: [AwsMediaLiveS78]
  EncoderSettings: AwsMediaLiveS7
  Id: String
  InputAttachments: [AwsMediaLiveS68]
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
}

input AwsMediaLiveDeleteInputInput {
  InputId: String!
}

input AwsMediaLiveDeleteInputSecurityGroupInput {
  InputSecurityGroupId: String!
}

input AwsMediaLiveDescribeChannelInput {
  ChannelId: String!
}

type AwsMediaLiveDescribeChannelOutput {
  Arn: String
  Destinations: [AwsMediaLiveS2]
  EgressEndpoints: [AwsMediaLiveS78]
  EncoderSettings: AwsMediaLiveS7
  Id: String
  InputAttachments: [AwsMediaLiveS68]
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
}

input AwsMediaLiveDescribeInputInput {
  InputId: String!
}

type AwsMediaLiveDescribeInputOutput {
  Arn: String
  AttachedChannels: [String]
  Destinations: [AwsMediaLiveS7j]
  Id: String
  Name: String
  SecurityGroups: [String]
  Sources: [AwsMediaLiveS7l]
  State: String
  Type: String
}

input AwsMediaLiveDescribeInputSecurityGroupInput {
  InputSecurityGroupId: String!
}

type AwsMediaLiveDescribeInputSecurityGroupOutput {
  Arn: String
  Id: String
  WhitelistRules: [AwsMediaLiveS7t]
}

input AwsMediaLiveListChannelsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaLiveListChannelsOutput {
  Channels: [AwsMediaLiveListChannelsOutputChannels]
  NextToken: String
}

type AwsMediaLiveListChannelsOutputChannels {
  Arn: String
  Destinations: [AwsMediaLiveS2]
  EgressEndpoints: [AwsMediaLiveS78]
  Id: String
  InputAttachments: [AwsMediaLiveS68]
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
}

input AwsMediaLiveListInputSecurityGroupsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaLiveListInputSecurityGroupsOutput {
  InputSecurityGroups: [AwsMediaLiveS7s]
  NextToken: String
}

input AwsMediaLiveListInputsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaLiveListInputsOutput {
  Inputs: [AwsMediaLiveS7i]
  NextToken: String
}

type AwsMediaLiveS1l {
  PasswordParam: String
  Uri: String
  Username: String
}

input AwsMediaLiveS1lInput {
  PasswordParam: String
  Uri: String
  Username: String
}

type AwsMediaLiveS2 {
  Id: String
  Settings: [AwsMediaLiveS2Settings]
}

input AwsMediaLiveS2Input {
  Id: String
  Settings: [AwsMediaLiveS2SettingsInput]
}

type AwsMediaLiveS2Settings {
  PasswordParam: String
  Url: String
  Username: String
}

input AwsMediaLiveS2SettingsInput {
  PasswordParam: String
  Url: String
  Username: String
}

type AwsMediaLiveS2z {
  DestinationRefId: String
}

input AwsMediaLiveS2zInput {
  DestinationRefId: String
}

type AwsMediaLiveS4f {
  AbsentInputAudioBehavior: String
  Arib: String
  AribCaptionsPid: String
  AribCaptionsPidControl: String
  AudioBufferModel: String
  AudioFramesPerPes: Int
  AudioPids: String
  AudioStreamType: String
  Bitrate: Int
  BufferModel: String
  CcDescriptor: String
  DvbNitSettings: AwsMediaLiveS4fDvbNitSettings
  DvbSdtSettings: AwsMediaLiveS4fDvbSdtSettings
  DvbSubPids: String
  DvbTdtSettings: AwsMediaLiveS4fDvbTdtSettings
  DvbTeletextPid: String
  Ebif: String
  EbpAudioInterval: String
  EbpLookaheadMs: Int
  EbpPlacement: String
  EcmPid: String
  EsRateInPes: String
  EtvPlatformPid: String
  EtvSignalPid: String
  FragmentTime: JSON
  Klv: String
  KlvDataPids: String
  NullPacketBitrate: JSON
  PatInterval: Int
  PcrControl: String
  PcrPeriod: Int
  PcrPid: String
  PmtInterval: Int
  PmtPid: String
  ProgramNum: Int
  RateMode: String
  Scte27Pids: String
  Scte35Control: String
  Scte35Pid: String
  SegmentationMarkers: String
  SegmentationStyle: String
  SegmentationTime: JSON
  TimedMetadataBehavior: String
  TimedMetadataPid: String
  TransportStreamId: Int
  VideoPid: String
}

type AwsMediaLiveS4fDvbNitSettings {
  NetworkId: Int
  NetworkName: String
  RepInterval: Int
}

input AwsMediaLiveS4fDvbNitSettingsInput {
  NetworkId: Int
  NetworkName: String
  RepInterval: Int
}

type AwsMediaLiveS4fDvbSdtSettings {
  OutputSdt: String
  RepInterval: Int
  ServiceName: String
  ServiceProviderName: String
}

input AwsMediaLiveS4fDvbSdtSettingsInput {
  OutputSdt: String
  RepInterval: Int
  ServiceName: String
  ServiceProviderName: String
}

type AwsMediaLiveS4fDvbTdtSettings {
  RepInterval: Int
}

input AwsMediaLiveS4fDvbTdtSettingsInput {
  RepInterval: Int
}

input AwsMediaLiveS4fInput {
  AbsentInputAudioBehavior: String
  Arib: String
  AribCaptionsPid: String
  AribCaptionsPidControl: String
  AudioBufferModel: String
  AudioFramesPerPes: Int
  AudioPids: String
  AudioStreamType: String
  Bitrate: Int
  BufferModel: String
  CcDescriptor: String
  DvbNitSettings: AwsMediaLiveS4fDvbNitSettingsInput
  DvbSdtSettings: AwsMediaLiveS4fDvbSdtSettingsInput
  DvbSubPids: String
  DvbTdtSettings: AwsMediaLiveS4fDvbTdtSettingsInput
  DvbTeletextPid: String
  Ebif: String
  EbpAudioInterval: String
  EbpLookaheadMs: Int
  EbpPlacement: String
  EcmPid: String
  EsRateInPes: String
  EtvPlatformPid: String
  EtvSignalPid: String
  FragmentTime: JSON
  Klv: String
  KlvDataPids: String
  NullPacketBitrate: JSON
  PatInterval: Int
  PcrControl: String
  PcrPeriod: Int
  PcrPid: String
  PmtInterval: Int
  PmtPid: String
  ProgramNum: Int
  RateMode: String
  Scte27Pids: String
  Scte35Control: String
  Scte35Pid: String
  SegmentationMarkers: String
  SegmentationStyle: String
  SegmentationTime: JSON
  TimedMetadataBehavior: String
  TimedMetadataPid: String
  TransportStreamId: Int
  VideoPid: String
}

type AwsMediaLiveS68 {
  InputId: String
  InputSettings: AwsMediaLiveS68InputSettings
}

input AwsMediaLiveS68Input {
  InputId: String
  InputSettings: AwsMediaLiveS68InputSettingsInput
}

type AwsMediaLiveS68InputSettings {
  AudioSelectors: [AwsMediaLiveS68InputSettingsAudioSelectors]
  CaptionSelectors: [AwsMediaLiveS68InputSettingsCaptionSelectors]
  DeblockFilter: String
  DenoiseFilter: String
  FilterStrength: Int
  InputFilter: String
  NetworkInputSettings: AwsMediaLiveS68InputSettingsNetworkInputSettings
  SourceEndBehavior: String
  VideoSelector: AwsMediaLiveS68InputSettingsVideoSelector
}

type AwsMediaLiveS68InputSettingsAudioSelectors {
  Name: String
  SelectorSettings: AwsMediaLiveS68InputSettingsAudioSelectorsSelectorSettings
}

input AwsMediaLiveS68InputSettingsAudioSelectorsInput {
  Name: String
  SelectorSettings: AwsMediaLiveS68InputSettingsAudioSelectorsSelectorSettingsInput
}

type AwsMediaLiveS68InputSettingsAudioSelectorsSelectorSettings {
  AudioLanguageSelection: AwsMediaLiveS68InputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelection
  AudioPidSelection: AwsMediaLiveS68InputSettingsAudioSelectorsSelectorSettingsAudioPidSelection
}

type AwsMediaLiveS68InputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelection {
  LanguageCode: String
  LanguageSelectionPolicy: String
}

input AwsMediaLiveS68InputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionInput {
  LanguageCode: String
  LanguageSelectionPolicy: String
}

type AwsMediaLiveS68InputSettingsAudioSelectorsSelectorSettingsAudioPidSelection {
  Pid: Int
}

input AwsMediaLiveS68InputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionInput {
  Pid: Int
}

input AwsMediaLiveS68InputSettingsAudioSelectorsSelectorSettingsInput {
  AudioLanguageSelection: AwsMediaLiveS68InputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionInput
  AudioPidSelection: AwsMediaLiveS68InputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionInput
}

type AwsMediaLiveS68InputSettingsCaptionSelectors {
  LanguageCode: String
  Name: String
  SelectorSettings: AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettings
}

input AwsMediaLiveS68InputSettingsCaptionSelectorsInput {
  LanguageCode: String
  Name: String
  SelectorSettings: AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsInput
}

type AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettings {
  AribSourceSettings: JSON
  DvbSubSourceSettings: AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettings
  EmbeddedSourceSettings: AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettings
  Scte20SourceSettings: AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettings
  Scte27SourceSettings: AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettings
  TeletextSourceSettings: AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettings
}

type AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettings {
  Pid: Int
}

input AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsInput {
  Pid: Int
}

type AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettings {
  Convert608To708: String
  Scte20Detection: String
  Source608ChannelNumber: Int
  Source608TrackNumber: Int
}

input AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsInput {
  Convert608To708: String
  Scte20Detection: String
  Source608ChannelNumber: Int
  Source608TrackNumber: Int
}

input AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsInput {
  AribSourceSettings: JSON
  DvbSubSourceSettings: AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsInput
  EmbeddedSourceSettings: AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsInput
  Scte20SourceSettings: AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsInput
  Scte27SourceSettings: AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsInput
  TeletextSourceSettings: AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsInput
}

type AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettings {
  Convert608To708: String
  Source608ChannelNumber: Int
}

input AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsInput {
  Convert608To708: String
  Source608ChannelNumber: Int
}

type AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettings {
  Pid: Int
}

input AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsInput {
  Pid: Int
}

type AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettings {
  PageNumber: String
}

input AwsMediaLiveS68InputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsInput {
  PageNumber: String
}

input AwsMediaLiveS68InputSettingsInput {
  AudioSelectors: [AwsMediaLiveS68InputSettingsAudioSelectorsInput]
  CaptionSelectors: [AwsMediaLiveS68InputSettingsCaptionSelectorsInput]
  DeblockFilter: String
  DenoiseFilter: String
  FilterStrength: Int
  InputFilter: String
  NetworkInputSettings: AwsMediaLiveS68InputSettingsNetworkInputSettingsInput
  SourceEndBehavior: String
  VideoSelector: AwsMediaLiveS68InputSettingsVideoSelectorInput
}

type AwsMediaLiveS68InputSettingsNetworkInputSettings {
  HlsInputSettings: AwsMediaLiveS68InputSettingsNetworkInputSettingsHlsInputSettings
  ServerValidation: String
}

type AwsMediaLiveS68InputSettingsNetworkInputSettingsHlsInputSettings {
  Bandwidth: Int
  BufferSegments: Int
  Retries: Int
  RetryInterval: Int
}

input AwsMediaLiveS68InputSettingsNetworkInputSettingsHlsInputSettingsInput {
  Bandwidth: Int
  BufferSegments: Int
  Retries: Int
  RetryInterval: Int
}

input AwsMediaLiveS68InputSettingsNetworkInputSettingsInput {
  HlsInputSettings: AwsMediaLiveS68InputSettingsNetworkInputSettingsHlsInputSettingsInput
  ServerValidation: String
}

type AwsMediaLiveS68InputSettingsVideoSelector {
  ColorSpace: String
  ColorSpaceUsage: String
  SelectorSettings: AwsMediaLiveS68InputSettingsVideoSelectorSelectorSettings
}

input AwsMediaLiveS68InputSettingsVideoSelectorInput {
  ColorSpace: String
  ColorSpaceUsage: String
  SelectorSettings: AwsMediaLiveS68InputSettingsVideoSelectorSelectorSettingsInput
}

type AwsMediaLiveS68InputSettingsVideoSelectorSelectorSettings {
  VideoSelectorPid: AwsMediaLiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorPid
  VideoSelectorProgramId: AwsMediaLiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramId
}

input AwsMediaLiveS68InputSettingsVideoSelectorSelectorSettingsInput {
  VideoSelectorPid: AwsMediaLiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorPidInput
  VideoSelectorProgramId: AwsMediaLiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdInput
}

type AwsMediaLiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorPid {
  Pid: Int
}

input AwsMediaLiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorPidInput {
  Pid: Int
}

type AwsMediaLiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramId {
  ProgramId: Int
}

input AwsMediaLiveS68InputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdInput {
  ProgramId: Int
}

type AwsMediaLiveS7 {
  AudioDescriptions: [AwsMediaLiveS7AudioDescriptions]
  AvailBlanking: AwsMediaLiveS7AvailBlanking
  AvailConfiguration: AwsMediaLiveS7AvailConfiguration
  BlackoutSlate: AwsMediaLiveS7BlackoutSlate
  CaptionDescriptions: [AwsMediaLiveS7CaptionDescriptions]
  GlobalConfiguration: AwsMediaLiveS7GlobalConfiguration
  OutputGroups: [AwsMediaLiveS7OutputGroups]
  TimecodeConfig: AwsMediaLiveS7TimecodeConfig
  VideoDescriptions: [AwsMediaLiveS7VideoDescriptions]
}

type AwsMediaLiveS78 {
  SourceIp: String
}

type AwsMediaLiveS7AudioDescriptions {
  AudioNormalizationSettings: AwsMediaLiveS7AudioDescriptionsAudioNormalizationSettings
  AudioSelectorName: String
  AudioType: String
  AudioTypeControl: String
  CodecSettings: AwsMediaLiveS7AudioDescriptionsCodecSettings
  LanguageCode: String
  LanguageCodeControl: String
  Name: String
  RemixSettings: AwsMediaLiveS7AudioDescriptionsRemixSettings
  StreamName: String
}

type AwsMediaLiveS7AudioDescriptionsAudioNormalizationSettings {
  Algorithm: String
  AlgorithmControl: String
  TargetLkfs: JSON
}

input AwsMediaLiveS7AudioDescriptionsAudioNormalizationSettingsInput {
  Algorithm: String
  AlgorithmControl: String
  TargetLkfs: JSON
}

type AwsMediaLiveS7AudioDescriptionsCodecSettings {
  AacSettings: AwsMediaLiveS7AudioDescriptionsCodecSettingsAacSettings
  Ac3Settings: AwsMediaLiveS7AudioDescriptionsCodecSettingsAc3Settings
  Eac3Settings: AwsMediaLiveS7AudioDescriptionsCodecSettingsEac3Settings
  Mp2Settings: AwsMediaLiveS7AudioDescriptionsCodecSettingsMp2Settings
  PassThroughSettings: JSON
}

type AwsMediaLiveS7AudioDescriptionsCodecSettingsAacSettings {
  Bitrate: JSON
  CodingMode: String
  InputType: String
  Profile: String
  RateControlMode: String
  RawFormat: String
  SampleRate: JSON
  Spec: String
  VbrQuality: String
}

input AwsMediaLiveS7AudioDescriptionsCodecSettingsAacSettingsInput {
  Bitrate: JSON
  CodingMode: String
  InputType: String
  Profile: String
  RateControlMode: String
  RawFormat: String
  SampleRate: JSON
  Spec: String
  VbrQuality: String
}

type AwsMediaLiveS7AudioDescriptionsCodecSettingsAc3Settings {
  Bitrate: JSON
  BitstreamMode: String
  CodingMode: String
  Dialnorm: Int
  DrcProfile: String
  LfeFilter: String
  MetadataControl: String
}

input AwsMediaLiveS7AudioDescriptionsCodecSettingsAc3SettingsInput {
  Bitrate: JSON
  BitstreamMode: String
  CodingMode: String
  Dialnorm: Int
  DrcProfile: String
  LfeFilter: String
  MetadataControl: String
}

type AwsMediaLiveS7AudioDescriptionsCodecSettingsEac3Settings {
  AttenuationControl: String
  Bitrate: JSON
  BitstreamMode: String
  CodingMode: String
  DcFilter: String
  Dialnorm: Int
  DrcLine: String
  DrcRf: String
  LfeControl: String
  LfeFilter: String
  LoRoCenterMixLevel: JSON
  LoRoSurroundMixLevel: JSON
  LtRtCenterMixLevel: JSON
  LtRtSurroundMixLevel: JSON
  MetadataControl: String
  PassthroughControl: String
  PhaseControl: String
  StereoDownmix: String
  SurroundExMode: String
  SurroundMode: String
}

input AwsMediaLiveS7AudioDescriptionsCodecSettingsEac3SettingsInput {
  AttenuationControl: String
  Bitrate: JSON
  BitstreamMode: String
  CodingMode: String
  DcFilter: String
  Dialnorm: Int
  DrcLine: String
  DrcRf: String
  LfeControl: String
  LfeFilter: String
  LoRoCenterMixLevel: JSON
  LoRoSurroundMixLevel: JSON
  LtRtCenterMixLevel: JSON
  LtRtSurroundMixLevel: JSON
  MetadataControl: String
  PassthroughControl: String
  PhaseControl: String
  StereoDownmix: String
  SurroundExMode: String
  SurroundMode: String
}

input AwsMediaLiveS7AudioDescriptionsCodecSettingsInput {
  AacSettings: AwsMediaLiveS7AudioDescriptionsCodecSettingsAacSettingsInput
  Ac3Settings: AwsMediaLiveS7AudioDescriptionsCodecSettingsAc3SettingsInput
  Eac3Settings: AwsMediaLiveS7AudioDescriptionsCodecSettingsEac3SettingsInput
  Mp2Settings: AwsMediaLiveS7AudioDescriptionsCodecSettingsMp2SettingsInput
  PassThroughSettings: JSON
}

type AwsMediaLiveS7AudioDescriptionsCodecSettingsMp2Settings {
  Bitrate: JSON
  CodingMode: String
  SampleRate: JSON
}

input AwsMediaLiveS7AudioDescriptionsCodecSettingsMp2SettingsInput {
  Bitrate: JSON
  CodingMode: String
  SampleRate: JSON
}

input AwsMediaLiveS7AudioDescriptionsInput {
  AudioNormalizationSettings: AwsMediaLiveS7AudioDescriptionsAudioNormalizationSettingsInput
  AudioSelectorName: String
  AudioType: String
  AudioTypeControl: String
  CodecSettings: AwsMediaLiveS7AudioDescriptionsCodecSettingsInput
  LanguageCode: String
  LanguageCodeControl: String
  Name: String
  RemixSettings: AwsMediaLiveS7AudioDescriptionsRemixSettingsInput
  StreamName: String
}

type AwsMediaLiveS7AudioDescriptionsRemixSettings {
  ChannelMappings: [AwsMediaLiveS7AudioDescriptionsRemixSettingsChannelMappings]
  ChannelsIn: Int
  ChannelsOut: Int
}

type AwsMediaLiveS7AudioDescriptionsRemixSettingsChannelMappings {
  InputChannelLevels: [AwsMediaLiveS7AudioDescriptionsRemixSettingsChannelMappingsInputChannelLevels]
  OutputChannel: Int
}

input AwsMediaLiveS7AudioDescriptionsRemixSettingsChannelMappingsInput {
  InputChannelLevels: [AwsMediaLiveS7AudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsInput]
  OutputChannel: Int
}

type AwsMediaLiveS7AudioDescriptionsRemixSettingsChannelMappingsInputChannelLevels {
  Gain: Int
  InputChannel: Int
}

input AwsMediaLiveS7AudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsInput {
  Gain: Int
  InputChannel: Int
}

input AwsMediaLiveS7AudioDescriptionsRemixSettingsInput {
  ChannelMappings: [AwsMediaLiveS7AudioDescriptionsRemixSettingsChannelMappingsInput]
  ChannelsIn: Int
  ChannelsOut: Int
}

type AwsMediaLiveS7AvailBlanking {
  AvailBlankingImage: AwsMediaLiveS1l
  State: String
}

input AwsMediaLiveS7AvailBlankingInput {
  AvailBlankingImage: AwsMediaLiveS1lInput
  State: String
}

type AwsMediaLiveS7AvailConfiguration {
  AvailSettings: AwsMediaLiveS7AvailConfigurationAvailSettings
}

type AwsMediaLiveS7AvailConfigurationAvailSettings {
  Scte35SpliceInsert: AwsMediaLiveS7AvailConfigurationAvailSettingsScte35SpliceInsert
  Scte35TimeSignalApos: AwsMediaLiveS7AvailConfigurationAvailSettingsScte35TimeSignalApos
}

input AwsMediaLiveS7AvailConfigurationAvailSettingsInput {
  Scte35SpliceInsert: AwsMediaLiveS7AvailConfigurationAvailSettingsScte35SpliceInsertInput
  Scte35TimeSignalApos: AwsMediaLiveS7AvailConfigurationAvailSettingsScte35TimeSignalAposInput
}

type AwsMediaLiveS7AvailConfigurationAvailSettingsScte35SpliceInsert {
  AdAvailOffset: Int
  NoRegionalBlackoutFlag: String
  WebDeliveryAllowedFlag: String
}

input AwsMediaLiveS7AvailConfigurationAvailSettingsScte35SpliceInsertInput {
  AdAvailOffset: Int
  NoRegionalBlackoutFlag: String
  WebDeliveryAllowedFlag: String
}

type AwsMediaLiveS7AvailConfigurationAvailSettingsScte35TimeSignalApos {
  AdAvailOffset: Int
  NoRegionalBlackoutFlag: String
  WebDeliveryAllowedFlag: String
}

input AwsMediaLiveS7AvailConfigurationAvailSettingsScte35TimeSignalAposInput {
  AdAvailOffset: Int
  NoRegionalBlackoutFlag: String
  WebDeliveryAllowedFlag: String
}

input AwsMediaLiveS7AvailConfigurationInput {
  AvailSettings: AwsMediaLiveS7AvailConfigurationAvailSettingsInput
}

type AwsMediaLiveS7BlackoutSlate {
  BlackoutSlateImage: AwsMediaLiveS1l
  NetworkEndBlackout: String
  NetworkEndBlackoutImage: AwsMediaLiveS1l
  NetworkId: String
  State: String
}

input AwsMediaLiveS7BlackoutSlateInput {
  BlackoutSlateImage: AwsMediaLiveS1lInput
  NetworkEndBlackout: String
  NetworkEndBlackoutImage: AwsMediaLiveS1lInput
  NetworkId: String
  State: String
}

type AwsMediaLiveS7CaptionDescriptions {
  CaptionSelectorName: String
  DestinationSettings: AwsMediaLiveS7CaptionDescriptionsDestinationSettings
  LanguageCode: String
  LanguageDescription: String
  Name: String
}

type AwsMediaLiveS7CaptionDescriptionsDestinationSettings {
  AribDestinationSettings: JSON
  BurnInDestinationSettings: AwsMediaLiveS7CaptionDescriptionsDestinationSettingsBurnInDestinationSettings
  DvbSubDestinationSettings: AwsMediaLiveS7CaptionDescriptionsDestinationSettingsDvbSubDestinationSettings
  EmbeddedDestinationSettings: JSON
  EmbeddedPlusScte20DestinationSettings: JSON
  Scte20PlusEmbeddedDestinationSettings: JSON
  Scte27DestinationSettings: JSON
  SmpteTtDestinationSettings: JSON
  TeletextDestinationSettings: JSON
  TtmlDestinationSettings: AwsMediaLiveS7CaptionDescriptionsDestinationSettingsTtmlDestinationSettings
  WebvttDestinationSettings: JSON
}

type AwsMediaLiveS7CaptionDescriptionsDestinationSettingsBurnInDestinationSettings {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  Font: AwsMediaLiveS1l
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: String
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextGridControl: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaLiveS7CaptionDescriptionsDestinationSettingsBurnInDestinationSettingsInput {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  Font: AwsMediaLiveS1lInput
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: String
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextGridControl: String
  XPosition: Int
  YPosition: Int
}

type AwsMediaLiveS7CaptionDescriptionsDestinationSettingsDvbSubDestinationSettings {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  Font: AwsMediaLiveS1l
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: String
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextGridControl: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaLiveS7CaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsInput {
  Alignment: String
  BackgroundColor: String
  BackgroundOpacity: Int
  Font: AwsMediaLiveS1lInput
  FontColor: String
  FontOpacity: Int
  FontResolution: Int
  FontSize: String
  OutlineColor: String
  OutlineSize: Int
  ShadowColor: String
  ShadowOpacity: Int
  ShadowXOffset: Int
  ShadowYOffset: Int
  TeletextGridControl: String
  XPosition: Int
  YPosition: Int
}

input AwsMediaLiveS7CaptionDescriptionsDestinationSettingsInput {
  AribDestinationSettings: JSON
  BurnInDestinationSettings: AwsMediaLiveS7CaptionDescriptionsDestinationSettingsBurnInDestinationSettingsInput
  DvbSubDestinationSettings: AwsMediaLiveS7CaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsInput
  EmbeddedDestinationSettings: JSON
  EmbeddedPlusScte20DestinationSettings: JSON
  Scte20PlusEmbeddedDestinationSettings: JSON
  Scte27DestinationSettings: JSON
  SmpteTtDestinationSettings: JSON
  TeletextDestinationSettings: JSON
  TtmlDestinationSettings: AwsMediaLiveS7CaptionDescriptionsDestinationSettingsTtmlDestinationSettingsInput
  WebvttDestinationSettings: JSON
}

type AwsMediaLiveS7CaptionDescriptionsDestinationSettingsTtmlDestinationSettings {
  StyleControl: String
}

input AwsMediaLiveS7CaptionDescriptionsDestinationSettingsTtmlDestinationSettingsInput {
  StyleControl: String
}

input AwsMediaLiveS7CaptionDescriptionsInput {
  CaptionSelectorName: String
  DestinationSettings: AwsMediaLiveS7CaptionDescriptionsDestinationSettingsInput
  LanguageCode: String
  LanguageDescription: String
  Name: String
}

type AwsMediaLiveS7GlobalConfiguration {
  InitialAudioGain: Int
  InputEndAction: String
  InputLossBehavior: AwsMediaLiveS7GlobalConfigurationInputLossBehavior
  OutputTimingSource: String
  SupportLowFramerateInputs: String
}

input AwsMediaLiveS7GlobalConfigurationInput {
  InitialAudioGain: Int
  InputEndAction: String
  InputLossBehavior: AwsMediaLiveS7GlobalConfigurationInputLossBehaviorInput
  OutputTimingSource: String
  SupportLowFramerateInputs: String
}

type AwsMediaLiveS7GlobalConfigurationInputLossBehavior {
  BlackFrameMsec: Int
  InputLossImageColor: String
  InputLossImageSlate: AwsMediaLiveS1l
  InputLossImageType: String
  RepeatFrameMsec: Int
}

input AwsMediaLiveS7GlobalConfigurationInputLossBehaviorInput {
  BlackFrameMsec: Int
  InputLossImageColor: String
  InputLossImageSlate: AwsMediaLiveS1lInput
  InputLossImageType: String
  RepeatFrameMsec: Int
}

type AwsMediaLiveS7i {
  Arn: String
  AttachedChannels: [String]
  Destinations: [AwsMediaLiveS7j]
  Id: String
  Name: String
  SecurityGroups: [String]
  Sources: [AwsMediaLiveS7l]
  State: String
  Type: String
}

input AwsMediaLiveS7Input {
  AudioDescriptions: [AwsMediaLiveS7AudioDescriptionsInput]
  AvailBlanking: AwsMediaLiveS7AvailBlankingInput
  AvailConfiguration: AwsMediaLiveS7AvailConfigurationInput
  BlackoutSlate: AwsMediaLiveS7BlackoutSlateInput
  CaptionDescriptions: [AwsMediaLiveS7CaptionDescriptionsInput]
  GlobalConfiguration: AwsMediaLiveS7GlobalConfigurationInput
  OutputGroups: [AwsMediaLiveS7OutputGroupsInput]
  TimecodeConfig: AwsMediaLiveS7TimecodeConfigInput
  VideoDescriptions: [AwsMediaLiveS7VideoDescriptionsInput]
}

type AwsMediaLiveS7j {
  Ip: String
  Port: String
  Url: String
}

type AwsMediaLiveS7l {
  PasswordParam: String
  Url: String
  Username: String
}

type AwsMediaLiveS7OutputGroups {
  Name: String
  OutputGroupSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettings
  Outputs: [AwsMediaLiveS7OutputGroupsOutputs]
}

input AwsMediaLiveS7OutputGroupsInput {
  Name: String
  OutputGroupSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsInput
  Outputs: [AwsMediaLiveS7OutputGroupsOutputsInput]
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettings {
  ArchiveGroupSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsArchiveGroupSettings
  HlsGroupSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettings
  MsSmoothGroupSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsMsSmoothGroupSettings
  UdpGroupSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsUdpGroupSettings
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettingsArchiveGroupSettings {
  Destination: AwsMediaLiveS2z
  RolloverInterval: Int
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsArchiveGroupSettingsInput {
  Destination: AwsMediaLiveS2zInput
  RolloverInterval: Int
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettings {
  AdMarkers: [String]
  BaseUrlContent: String
  BaseUrlManifest: String
  CaptionLanguageMappings: [AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappings]
  CaptionLanguageSetting: String
  ClientCache: String
  CodecSpecification: String
  ConstantIv: String
  Destination: AwsMediaLiveS2z
  DirectoryStructure: String
  EncryptionType: String
  HlsCdnSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettings
  IndexNSegments: Int
  InputLossAction: String
  IvInManifest: String
  IvSource: String
  KeepSegments: Int
  KeyFormat: String
  KeyFormatVersions: String
  KeyProviderSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettings
  ManifestCompression: String
  ManifestDurationFormat: String
  MinSegmentLength: Int
  Mode: String
  OutputSelection: String
  ProgramDateTime: String
  ProgramDateTimePeriod: Int
  SegmentLength: Int
  SegmentationMode: String
  SegmentsPerSubdirectory: Int
  StreamInfResolution: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
  TimestampDeltaMilliseconds: Int
  TsFileMode: String
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappings {
  CaptionChannel: Int
  LanguageCode: String
  LanguageDescription: String
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsInput {
  CaptionChannel: Int
  LanguageCode: String
  LanguageDescription: String
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettings {
  HlsAkamaiSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettings
  HlsBasicPutSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettings
  HlsMediaStoreSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettings
  HlsWebdavSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettings
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettings {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  HttpTransferMode: String
  NumRetries: Int
  RestartDelay: Int
  Salt: String
  Token: String
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsInput {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  HttpTransferMode: String
  NumRetries: Int
  RestartDelay: Int
  Salt: String
  Token: String
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettings {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  NumRetries: Int
  RestartDelay: Int
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsInput {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  NumRetries: Int
  RestartDelay: Int
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettings {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  MediaStoreStorageClass: String
  NumRetries: Int
  RestartDelay: Int
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsInput {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  MediaStoreStorageClass: String
  NumRetries: Int
  RestartDelay: Int
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettings {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  HttpTransferMode: String
  NumRetries: Int
  RestartDelay: Int
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsInput {
  ConnectionRetryInterval: Int
  FilecacheDuration: Int
  HttpTransferMode: String
  NumRetries: Int
  RestartDelay: Int
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsInput {
  HlsAkamaiSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsInput
  HlsBasicPutSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsInput
  HlsMediaStoreSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsInput
  HlsWebdavSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsInput
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsInput {
  AdMarkers: [String]
  BaseUrlContent: String
  BaseUrlManifest: String
  CaptionLanguageMappings: [AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsInput]
  CaptionLanguageSetting: String
  ClientCache: String
  CodecSpecification: String
  ConstantIv: String
  Destination: AwsMediaLiveS2zInput
  DirectoryStructure: String
  EncryptionType: String
  HlsCdnSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsInput
  IndexNSegments: Int
  InputLossAction: String
  IvInManifest: String
  IvSource: String
  KeepSegments: Int
  KeyFormat: String
  KeyFormatVersions: String
  KeyProviderSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsInput
  ManifestCompression: String
  ManifestDurationFormat: String
  MinSegmentLength: Int
  Mode: String
  OutputSelection: String
  ProgramDateTime: String
  ProgramDateTimePeriod: Int
  SegmentLength: Int
  SegmentationMode: String
  SegmentsPerSubdirectory: Int
  StreamInfResolution: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
  TimestampDeltaMilliseconds: Int
  TsFileMode: String
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettings {
  StaticKeySettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettings
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsInput {
  StaticKeySettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsInput
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettings {
  KeyProviderServer: AwsMediaLiveS1l
  StaticKeyValue: String
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsInput {
  KeyProviderServer: AwsMediaLiveS1lInput
  StaticKeyValue: String
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsInput {
  ArchiveGroupSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsArchiveGroupSettingsInput
  HlsGroupSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsHlsGroupSettingsInput
  MsSmoothGroupSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsMsSmoothGroupSettingsInput
  UdpGroupSettings: AwsMediaLiveS7OutputGroupsOutputGroupSettingsUdpGroupSettingsInput
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettingsMsSmoothGroupSettings {
  AcquisitionPointId: String
  AudioOnlyTimecodeControl: String
  CertificateMode: String
  ConnectionRetryInterval: Int
  Destination: AwsMediaLiveS2z
  EventId: String
  EventIdMode: String
  EventStopBehavior: String
  FilecacheDuration: Int
  FragmentLength: Int
  InputLossAction: String
  NumRetries: Int
  RestartDelay: Int
  SegmentationMode: String
  SendDelayMs: Int
  SparseTrackType: String
  StreamManifestBehavior: String
  TimestampOffset: String
  TimestampOffsetMode: String
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsMsSmoothGroupSettingsInput {
  AcquisitionPointId: String
  AudioOnlyTimecodeControl: String
  CertificateMode: String
  ConnectionRetryInterval: Int
  Destination: AwsMediaLiveS2zInput
  EventId: String
  EventIdMode: String
  EventStopBehavior: String
  FilecacheDuration: Int
  FragmentLength: Int
  InputLossAction: String
  NumRetries: Int
  RestartDelay: Int
  SegmentationMode: String
  SendDelayMs: Int
  SparseTrackType: String
  StreamManifestBehavior: String
  TimestampOffset: String
  TimestampOffsetMode: String
}

type AwsMediaLiveS7OutputGroupsOutputGroupSettingsUdpGroupSettings {
  InputLossAction: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
}

input AwsMediaLiveS7OutputGroupsOutputGroupSettingsUdpGroupSettingsInput {
  InputLossAction: String
  TimedMetadataId3Frame: String
  TimedMetadataId3Period: Int
}

type AwsMediaLiveS7OutputGroupsOutputs {
  AudioDescriptionNames: [String]
  CaptionDescriptionNames: [String]
  OutputName: String
  OutputSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettings
  VideoDescriptionName: String
}

input AwsMediaLiveS7OutputGroupsOutputsInput {
  AudioDescriptionNames: [String]
  CaptionDescriptionNames: [String]
  OutputName: String
  OutputSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsInput
  VideoDescriptionName: String
}

type AwsMediaLiveS7OutputGroupsOutputsOutputSettings {
  ArchiveOutputSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettings
  HlsOutputSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettings
  MsSmoothOutputSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsMsSmoothOutputSettings
  UdpOutputSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettings
}

type AwsMediaLiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettings {
  ContainerSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettings
  Extension: String
  NameModifier: String
}

type AwsMediaLiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettings {
  M2tsSettings: AwsMediaLiveS4f
}

input AwsMediaLiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsInput {
  M2tsSettings: AwsMediaLiveS4fInput
}

input AwsMediaLiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettingsInput {
  ContainerSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsInput
  Extension: String
  NameModifier: String
}

type AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettings {
  HlsSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettings
  NameModifier: String
  SegmentModifier: String
}

type AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettings {
  AudioOnlyHlsSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettings
  StandardHlsSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettings
}

type AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettings {
  AudioGroupId: String
  AudioOnlyImage: AwsMediaLiveS1l
  AudioTrackType: String
}

input AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsInput {
  AudioGroupId: String
  AudioOnlyImage: AwsMediaLiveS1lInput
  AudioTrackType: String
}

input AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsInput {
  AudioOnlyHlsSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsInput
  StandardHlsSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsInput
}

type AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettings {
  AudioRenditionSets: String
  M3u8Settings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8Settings
}

input AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsInput {
  AudioRenditionSets: String
  M3u8Settings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsInput
}

type AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8Settings {
  AudioFramesPerPes: Int
  AudioPids: String
  EcmPid: String
  PatInterval: Int
  PcrControl: String
  PcrPeriod: Int
  PcrPid: String
  PmtInterval: Int
  PmtPid: String
  ProgramNum: Int
  Scte35Behavior: String
  Scte35Pid: String
  TimedMetadataBehavior: String
  TransportStreamId: Int
  VideoPid: String
}

input AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsInput {
  AudioFramesPerPes: Int
  AudioPids: String
  EcmPid: String
  PatInterval: Int
  PcrControl: String
  PcrPeriod: Int
  PcrPid: String
  PmtInterval: Int
  PmtPid: String
  ProgramNum: Int
  Scte35Behavior: String
  Scte35Pid: String
  TimedMetadataBehavior: String
  TransportStreamId: Int
  VideoPid: String
}

input AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsInput {
  HlsSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsInput
  NameModifier: String
  SegmentModifier: String
}

input AwsMediaLiveS7OutputGroupsOutputsOutputSettingsInput {
  ArchiveOutputSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsArchiveOutputSettingsInput
  HlsOutputSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsHlsOutputSettingsInput
  MsSmoothOutputSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsInput
  UdpOutputSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsInput
}

type AwsMediaLiveS7OutputGroupsOutputsOutputSettingsMsSmoothOutputSettings {
  NameModifier: String
}

input AwsMediaLiveS7OutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsInput {
  NameModifier: String
}

type AwsMediaLiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettings {
  BufferMsec: Int
  ContainerSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettings
  Destination: AwsMediaLiveS2z
  FecOutputSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettings
}

type AwsMediaLiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettings {
  M2tsSettings: AwsMediaLiveS4f
}

input AwsMediaLiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsInput {
  M2tsSettings: AwsMediaLiveS4fInput
}

type AwsMediaLiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettings {
  ColumnDepth: Int
  IncludeFec: String
  RowLength: Int
}

input AwsMediaLiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsInput {
  ColumnDepth: Int
  IncludeFec: String
  RowLength: Int
}

input AwsMediaLiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsInput {
  BufferMsec: Int
  ContainerSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsInput
  Destination: AwsMediaLiveS2zInput
  FecOutputSettings: AwsMediaLiveS7OutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsInput
}

type AwsMediaLiveS7s {
  Arn: String
  Id: String
  WhitelistRules: [AwsMediaLiveS7t]
}

type AwsMediaLiveS7t {
  Cidr: String
}

type AwsMediaLiveS7TimecodeConfig {
  Source: String
  SyncThreshold: Int
}

input AwsMediaLiveS7TimecodeConfigInput {
  Source: String
  SyncThreshold: Int
}

type AwsMediaLiveS7VideoDescriptions {
  CodecSettings: AwsMediaLiveS7VideoDescriptionsCodecSettings
  Height: Int
  Name: String
  RespondToAfd: String
  ScalingBehavior: String
  Sharpness: Int
  Width: Int
}

type AwsMediaLiveS7VideoDescriptionsCodecSettings {
  H264Settings: AwsMediaLiveS7VideoDescriptionsCodecSettingsH264Settings
}

type AwsMediaLiveS7VideoDescriptionsCodecSettingsH264Settings {
  AdaptiveQuantization: String
  AfdSignaling: String
  Bitrate: Int
  BufFillPct: Int
  BufSize: Int
  ColorMetadata: String
  EntropyEncoding: String
  FixedAfd: String
  FlickerAq: String
  FramerateControl: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopNumBFrames: Int
  GopSize: JSON
  GopSizeUnits: String
  Level: String
  LookAheadRateControl: String
  MaxBitrate: Int
  MinIInterval: Int
  NumRefFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  Profile: String
  RateControlMode: String
  ScanType: String
  SceneChangeDetect: String
  Slices: Int
  Softness: Int
  SpatialAq: String
  Syntax: String
  TemporalAq: String
  TimecodeInsertion: String
}

input AwsMediaLiveS7VideoDescriptionsCodecSettingsH264SettingsInput {
  AdaptiveQuantization: String
  AfdSignaling: String
  Bitrate: Int
  BufFillPct: Int
  BufSize: Int
  ColorMetadata: String
  EntropyEncoding: String
  FixedAfd: String
  FlickerAq: String
  FramerateControl: String
  FramerateDenominator: Int
  FramerateNumerator: Int
  GopBReference: String
  GopClosedCadence: Int
  GopNumBFrames: Int
  GopSize: JSON
  GopSizeUnits: String
  Level: String
  LookAheadRateControl: String
  MaxBitrate: Int
  MinIInterval: Int
  NumRefFrames: Int
  ParControl: String
  ParDenominator: Int
  ParNumerator: Int
  Profile: String
  RateControlMode: String
  ScanType: String
  SceneChangeDetect: String
  Slices: Int
  Softness: Int
  SpatialAq: String
  Syntax: String
  TemporalAq: String
  TimecodeInsertion: String
}

input AwsMediaLiveS7VideoDescriptionsCodecSettingsInput {
  H264Settings: AwsMediaLiveS7VideoDescriptionsCodecSettingsH264SettingsInput
}

input AwsMediaLiveS7VideoDescriptionsInput {
  CodecSettings: AwsMediaLiveS7VideoDescriptionsCodecSettingsInput
  Height: Int
  Name: String
  RespondToAfd: String
  ScalingBehavior: String
  Sharpness: Int
  Width: Int
}

input AwsMediaLiveStartChannelInput {
  ChannelId: String!
}

type AwsMediaLiveStartChannelOutput {
  Arn: String
  Destinations: [AwsMediaLiveS2]
  EgressEndpoints: [AwsMediaLiveS78]
  EncoderSettings: AwsMediaLiveS7
  Id: String
  InputAttachments: [AwsMediaLiveS68]
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
}

input AwsMediaLiveStopChannelInput {
  ChannelId: String!
}

type AwsMediaLiveStopChannelOutput {
  Arn: String
  Destinations: [AwsMediaLiveS2]
  EgressEndpoints: [AwsMediaLiveS78]
  EncoderSettings: AwsMediaLiveS7
  Id: String
  InputAttachments: [AwsMediaLiveS68]
  Name: String
  PipelinesRunningCount: Int
  RoleArn: String
  State: String
}

# AWS Elemental MediaPackage (2017-10-12)
type AwsMediaPackage {
  createChannel(input: AwsMediaPackageCreateChannelInput!, config: AwsConfig): AwsMediaPackageCreateChannelOutput
  createOriginEndpoint(input: AwsMediaPackageCreateOriginEndpointInput!, config: AwsConfig): AwsMediaPackageCreateOriginEndpointOutput
  deleteChannel(input: AwsMediaPackageDeleteChannelInput!, config: AwsConfig): JSON
  deleteOriginEndpoint(input: AwsMediaPackageDeleteOriginEndpointInput!, config: AwsConfig): JSON
  describeChannel(input: AwsMediaPackageDescribeChannelInput!, config: AwsConfig): AwsMediaPackageDescribeChannelOutput
  describeOriginEndpoint(input: AwsMediaPackageDescribeOriginEndpointInput!, config: AwsConfig): AwsMediaPackageDescribeOriginEndpointOutput
  listChannels(input: AwsMediaPackageListChannelsInput, config: AwsConfig): AwsMediaPackageListChannelsOutput
  listOriginEndpoints(input: AwsMediaPackageListOriginEndpointsInput, config: AwsConfig): AwsMediaPackageListOriginEndpointsOutput
  rotateChannelCredentials(input: AwsMediaPackageRotateChannelCredentialsInput!, config: AwsConfig): AwsMediaPackageRotateChannelCredentialsOutput
  updateChannel(input: AwsMediaPackageUpdateChannelInput!, config: AwsConfig): AwsMediaPackageUpdateChannelOutput
  updateOriginEndpoint(input: AwsMediaPackageUpdateOriginEndpointInput!, config: AwsConfig): AwsMediaPackageUpdateOriginEndpointOutput
}

input AwsMediaPackageCreateChannelInput {
  Description: String
  Id: String!
}

type AwsMediaPackageCreateChannelOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediaPackageS4
  Id: String
}

input AwsMediaPackageCreateOriginEndpointInput {
  ChannelId: String!
  DashPackage: AwsMediaPackageS8Input
  Description: String
  HlsPackage: AwsMediaPackageSgInput
  Id: String!
  ManifestName: String
  MssPackage: AwsMediaPackageSmInput
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Whitelist: [String]
}

type AwsMediaPackageCreateOriginEndpointOutput {
  Arn: String
  ChannelId: String
  DashPackage: AwsMediaPackageS8
  Description: String
  HlsPackage: AwsMediaPackageSg
  Id: String
  ManifestName: String
  MssPackage: AwsMediaPackageSm
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Url: String
  Whitelist: [String]
}

input AwsMediaPackageDeleteChannelInput {
  Id: String!
}

input AwsMediaPackageDeleteOriginEndpointInput {
  Id: String!
}

input AwsMediaPackageDescribeChannelInput {
  Id: String!
}

type AwsMediaPackageDescribeChannelOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediaPackageS4
  Id: String
}

input AwsMediaPackageDescribeOriginEndpointInput {
  Id: String!
}

type AwsMediaPackageDescribeOriginEndpointOutput {
  Arn: String
  ChannelId: String
  DashPackage: AwsMediaPackageS8
  Description: String
  HlsPackage: AwsMediaPackageSg
  Id: String
  ManifestName: String
  MssPackage: AwsMediaPackageSm
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Url: String
  Whitelist: [String]
}

input AwsMediaPackageListChannelsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMediaPackageListChannelsOutput {
  Channels: [AwsMediaPackageListChannelsOutputChannels]
  NextToken: String
}

type AwsMediaPackageListChannelsOutputChannels {
  Arn: String
  Description: String
  HlsIngest: AwsMediaPackageS4
  Id: String
}

input AwsMediaPackageListOriginEndpointsInput {
  ChannelId: String
  MaxResults: Int
  NextToken: String
}

type AwsMediaPackageListOriginEndpointsOutput {
  NextToken: String
  OriginEndpoints: [AwsMediaPackageListOriginEndpointsOutputOriginEndpoints]
}

type AwsMediaPackageListOriginEndpointsOutputOriginEndpoints {
  Arn: String
  ChannelId: String
  DashPackage: AwsMediaPackageS8
  Description: String
  HlsPackage: AwsMediaPackageSg
  Id: String
  ManifestName: String
  MssPackage: AwsMediaPackageSm
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Url: String
  Whitelist: [String]
}

input AwsMediaPackageRotateChannelCredentialsInput {
  Id: String!
}

type AwsMediaPackageRotateChannelCredentialsOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediaPackageS4
  Id: String
}

type AwsMediaPackageS4 {
  IngestEndpoints: [AwsMediaPackageS4IngestEndpoints]
}

type AwsMediaPackageS4IngestEndpoints {
  Password: String
  Url: String
  Username: String
}

type AwsMediaPackageS8 {
  Encryption: AwsMediaPackageS8Encryption
  ManifestWindowSeconds: Int
  MinBufferTimeSeconds: Int
  MinUpdatePeriodSeconds: Int
  Profile: String
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediaPackageSe
  SuggestedPresentationDelaySeconds: Int
}

type AwsMediaPackageS8Encryption {
  KeyRotationIntervalSeconds: Int
  SpekeKeyProvider: AwsMediaPackageSb!
}

input AwsMediaPackageS8EncryptionInput {
  KeyRotationIntervalSeconds: Int
  SpekeKeyProvider: AwsMediaPackageSbInput!
}

input AwsMediaPackageS8Input {
  Encryption: AwsMediaPackageS8EncryptionInput
  ManifestWindowSeconds: Int
  MinBufferTimeSeconds: Int
  MinUpdatePeriodSeconds: Int
  Profile: String
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediaPackageSeInput
  SuggestedPresentationDelaySeconds: Int
}

type AwsMediaPackageSb {
  ResourceId: String!
  RoleArn: String!
  SystemIds: [String]!
  Url: String!
}

input AwsMediaPackageSbInput {
  ResourceId: String!
  RoleArn: String!
  SystemIds: [String]!
  Url: String!
}

type AwsMediaPackageSe {
  MaxVideoBitsPerSecond: Int
  MinVideoBitsPerSecond: Int
  StreamOrder: String
}

input AwsMediaPackageSeInput {
  MaxVideoBitsPerSecond: Int
  MinVideoBitsPerSecond: Int
  StreamOrder: String
}

type AwsMediaPackageSg {
  AdMarkers: String
  Encryption: AwsMediaPackageSgEncryption
  IncludeIframeOnlyStream: Boolean
  PlaylistType: String
  PlaylistWindowSeconds: Int
  ProgramDateTimeIntervalSeconds: Int
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediaPackageSe
  UseAudioRenditionGroup: Boolean
}

type AwsMediaPackageSgEncryption {
  ConstantInitializationVector: String
  EncryptionMethod: String
  KeyRotationIntervalSeconds: Int
  RepeatExtXKey: Boolean
  SpekeKeyProvider: AwsMediaPackageSb!
}

input AwsMediaPackageSgEncryptionInput {
  ConstantInitializationVector: String
  EncryptionMethod: String
  KeyRotationIntervalSeconds: Int
  RepeatExtXKey: Boolean
  SpekeKeyProvider: AwsMediaPackageSbInput!
}

input AwsMediaPackageSgInput {
  AdMarkers: String
  Encryption: AwsMediaPackageSgEncryptionInput
  IncludeIframeOnlyStream: Boolean
  PlaylistType: String
  PlaylistWindowSeconds: Int
  ProgramDateTimeIntervalSeconds: Int
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediaPackageSeInput
  UseAudioRenditionGroup: Boolean
}

type AwsMediaPackageSm {
  Encryption: AwsMediaPackageSmEncryption
  ManifestWindowSeconds: Int
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediaPackageSe
}

type AwsMediaPackageSmEncryption {
  SpekeKeyProvider: AwsMediaPackageSb!
}

input AwsMediaPackageSmEncryptionInput {
  SpekeKeyProvider: AwsMediaPackageSbInput!
}

input AwsMediaPackageSmInput {
  Encryption: AwsMediaPackageSmEncryptionInput
  ManifestWindowSeconds: Int
  SegmentDurationSeconds: Int
  StreamSelection: AwsMediaPackageSeInput
}

input AwsMediaPackageUpdateChannelInput {
  Description: String
  Id: String!
}

type AwsMediaPackageUpdateChannelOutput {
  Arn: String
  Description: String
  HlsIngest: AwsMediaPackageS4
  Id: String
}

input AwsMediaPackageUpdateOriginEndpointInput {
  DashPackage: AwsMediaPackageS8Input
  Description: String
  HlsPackage: AwsMediaPackageSgInput
  Id: String!
  ManifestName: String
  MssPackage: AwsMediaPackageSmInput
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Whitelist: [String]
}

type AwsMediaPackageUpdateOriginEndpointOutput {
  Arn: String
  ChannelId: String
  DashPackage: AwsMediaPackageS8
  Description: String
  HlsPackage: AwsMediaPackageSg
  Id: String
  ManifestName: String
  MssPackage: AwsMediaPackageSm
  StartoverWindowSeconds: Int
  TimeDelaySeconds: Int
  Url: String
  Whitelist: [String]
}

# AWS Elemental MediaStore (2017-09-01)
type AwsMediaStore {
  createContainer(input: AwsMediaStoreCreateContainerInput!, config: AwsConfig): AwsMediaStoreCreateContainerOutput
  deleteContainer(input: AwsMediaStoreDeleteContainerInput!, config: AwsConfig): JSON
  deleteContainerPolicy(input: AwsMediaStoreDeleteContainerPolicyInput!, config: AwsConfig): JSON
  describeContainer(input: AwsMediaStoreDescribeContainerInput, config: AwsConfig): AwsMediaStoreDescribeContainerOutput
  getContainerPolicy(input: AwsMediaStoreGetContainerPolicyInput!, config: AwsConfig): AwsMediaStoreGetContainerPolicyOutput
  listContainers(input: AwsMediaStoreListContainersInput, config: AwsConfig): AwsMediaStoreListContainersOutput
  putContainerPolicy(input: AwsMediaStorePutContainerPolicyInput!, config: AwsConfig): JSON
}

input AwsMediaStoreCreateContainerInput {
  ContainerName: String!
}

type AwsMediaStoreCreateContainerOutput {
  Container: AwsMediaStoreS4!
}

# AWS Elemental MediaStore Data Plane (2017-09-01)
type AwsMediaStoreData {
  deleteObject(input: AwsMediaStoreDataDeleteObjectInput!, config: AwsConfig): JSON
  describeObject(input: AwsMediaStoreDataDescribeObjectInput!, config: AwsConfig): AwsMediaStoreDataDescribeObjectOutput
  getObject(input: AwsMediaStoreDataGetObjectInput!, config: AwsConfig): AwsMediaStoreDataGetObjectOutput
  listItems(input: AwsMediaStoreDataListItemsInput, config: AwsConfig): AwsMediaStoreDataListItemsOutput
  putObject(input: AwsMediaStoreDataPutObjectInput!, config: AwsConfig): AwsMediaStoreDataPutObjectOutput
}

input AwsMediaStoreDataDeleteObjectInput {
  Path: String!
}

input AwsMediaStoreDataDescribeObjectInput {
  Path: String!
}

type AwsMediaStoreDataDescribeObjectOutput {
  ETag: String
  ContentType: String
  ContentLength: JSON
  CacheControl: String
  LastModified: Date
}

input AwsMediaStoreDataGetObjectInput {
  Path: String!
  Range: String
}

type AwsMediaStoreDataGetObjectOutput {
  Body: JSON
  CacheControl: String
  ContentRange: String
  ContentLength: JSON
  ContentType: String
  ETag: String
  LastModified: Date
  StatusCode: Int!
}

input AwsMediaStoreDataListItemsInput {
  Path: String
  MaxResults: Int
  NextToken: String
}

type AwsMediaStoreDataListItemsOutput {
  Items: [AwsMediaStoreDataListItemsOutputItems]
  NextToken: String
}

type AwsMediaStoreDataListItemsOutputItems {
  Name: String
  Type: String
  ETag: String
  LastModified: Date
  ContentType: String
  ContentLength: JSON
}

input AwsMediaStoreDataPutObjectInput {
  Body: JSON!
  Path: String!
  ContentType: String
  CacheControl: String
  StorageClass: String
}

type AwsMediaStoreDataPutObjectOutput {
  ContentSHA256: String
  ETag: String
  StorageClass: String
}

input AwsMediaStoreDeleteContainerInput {
  ContainerName: String!
}

input AwsMediaStoreDeleteContainerPolicyInput {
  ContainerName: String!
}

input AwsMediaStoreDescribeContainerInput {
  ContainerName: String
}

type AwsMediaStoreDescribeContainerOutput {
  Container: AwsMediaStoreS4
}

input AwsMediaStoreGetContainerPolicyInput {
  ContainerName: String!
}

type AwsMediaStoreGetContainerPolicyOutput {
  Policy: String!
}

input AwsMediaStoreListContainersInput {
  NextToken: String
  MaxResults: Int
}

type AwsMediaStoreListContainersOutput {
  Containers: [AwsMediaStoreS4]!
  NextToken: String
}

input AwsMediaStorePutContainerPolicyInput {
  ContainerName: String!
  Policy: String!
}

type AwsMediaStoreS4 {
  Endpoint: String
  CreationTime: Date
  ARN: String
  Name: String
  Status: String
}

# AWS Migration Hub (2017-05-31)
type AwsMigrationHub {
  associateCreatedArtifact(input: AwsMigrationHubAssociateCreatedArtifactInput!, config: AwsConfig): JSON
  associateDiscoveredResource(input: AwsMigrationHubAssociateDiscoveredResourceInput!, config: AwsConfig): JSON
  createProgressUpdateStream(input: AwsMigrationHubCreateProgressUpdateStreamInput!, config: AwsConfig): JSON
  deleteProgressUpdateStream(input: AwsMigrationHubDeleteProgressUpdateStreamInput!, config: AwsConfig): JSON
  describeApplicationState(input: AwsMigrationHubDescribeApplicationStateInput!, config: AwsConfig): AwsMigrationHubDescribeApplicationStateOutput
  describeMigrationTask(input: AwsMigrationHubDescribeMigrationTaskInput!, config: AwsConfig): AwsMigrationHubDescribeMigrationTaskOutput
  disassociateCreatedArtifact(input: AwsMigrationHubDisassociateCreatedArtifactInput!, config: AwsConfig): JSON
  disassociateDiscoveredResource(input: AwsMigrationHubDisassociateDiscoveredResourceInput!, config: AwsConfig): JSON
  importMigrationTask(input: AwsMigrationHubImportMigrationTaskInput!, config: AwsConfig): JSON
  listCreatedArtifacts(input: AwsMigrationHubListCreatedArtifactsInput!, config: AwsConfig): AwsMigrationHubListCreatedArtifactsOutput
  listDiscoveredResources(input: AwsMigrationHubListDiscoveredResourcesInput!, config: AwsConfig): AwsMigrationHubListDiscoveredResourcesOutput
  listMigrationTasks(input: AwsMigrationHubListMigrationTasksInput, config: AwsConfig): AwsMigrationHubListMigrationTasksOutput
  listProgressUpdateStreams(input: AwsMigrationHubListProgressUpdateStreamsInput, config: AwsConfig): AwsMigrationHubListProgressUpdateStreamsOutput
  notifyApplicationState(input: AwsMigrationHubNotifyApplicationStateInput!, config: AwsConfig): JSON
  notifyMigrationTaskState(input: AwsMigrationHubNotifyMigrationTaskStateInput!, config: AwsConfig): JSON
  putResourceAttributes(input: AwsMigrationHubPutResourceAttributesInput!, config: AwsConfig): JSON
}

input AwsMigrationHubAssociateCreatedArtifactInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  CreatedArtifact: AwsMigrationHubS4Input!
  DryRun: Boolean
}

input AwsMigrationHubAssociateDiscoveredResourceInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  DiscoveredResource: AwsMigrationHubSaInput!
  DryRun: Boolean
}

input AwsMigrationHubCreateProgressUpdateStreamInput {
  ProgressUpdateStreamName: String!
  DryRun: Boolean
}

input AwsMigrationHubDeleteProgressUpdateStreamInput {
  ProgressUpdateStreamName: String!
  DryRun: Boolean
}

input AwsMigrationHubDescribeApplicationStateInput {
  ApplicationId: String!
}

type AwsMigrationHubDescribeApplicationStateOutput {
  ApplicationStatus: String
  LastUpdatedTime: Date
}

input AwsMigrationHubDescribeMigrationTaskInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
}

type AwsMigrationHubDescribeMigrationTaskOutput {
  MigrationTask: AwsMigrationHubDescribeMigrationTaskOutputMigrationTask
}

type AwsMigrationHubDescribeMigrationTaskOutputMigrationTask {
  ProgressUpdateStream: String
  MigrationTaskName: String
  Task: AwsMigrationHubSq
  UpdateDateTime: Date
  ResourceAttributeList: [AwsMigrationHubSv]
}

input AwsMigrationHubDisassociateCreatedArtifactInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  CreatedArtifactName: String!
  DryRun: Boolean
}

input AwsMigrationHubDisassociateDiscoveredResourceInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  ConfigurationId: String!
  DryRun: Boolean
}

input AwsMigrationHubImportMigrationTaskInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  DryRun: Boolean
}

input AwsMigrationHubListCreatedArtifactsInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  NextToken: String
  MaxResults: Int
}

type AwsMigrationHubListCreatedArtifactsOutput {
  NextToken: String
  CreatedArtifactList: [AwsMigrationHubS4]
}

input AwsMigrationHubListDiscoveredResourcesInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  NextToken: String
  MaxResults: Int
}

type AwsMigrationHubListDiscoveredResourcesOutput {
  NextToken: String
  DiscoveredResourceList: [AwsMigrationHubSa]
}

input AwsMigrationHubListMigrationTasksInput {
  NextToken: String
  MaxResults: Int
  ResourceName: String
}

type AwsMigrationHubListMigrationTasksOutput {
  NextToken: String
  MigrationTaskSummaryList: [AwsMigrationHubListMigrationTasksOutputMigrationTaskSummaryList]
}

type AwsMigrationHubListMigrationTasksOutputMigrationTaskSummaryList {
  ProgressUpdateStream: String
  MigrationTaskName: String
  Status: String
  ProgressPercent: Int
  StatusDetail: String
  UpdateDateTime: Date
}

input AwsMigrationHubListProgressUpdateStreamsInput {
  NextToken: String
  MaxResults: Int
}

type AwsMigrationHubListProgressUpdateStreamsOutput {
  ProgressUpdateStreamSummaryList: [AwsMigrationHubListProgressUpdateStreamsOutputProgressUpdateStreamSummaryList]
  NextToken: String
}

type AwsMigrationHubListProgressUpdateStreamsOutputProgressUpdateStreamSummaryList {
  ProgressUpdateStreamName: String
}

input AwsMigrationHubNotifyApplicationStateInput {
  ApplicationId: String!
  Status: String!
  DryRun: Boolean
}

input AwsMigrationHubNotifyMigrationTaskStateInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  Task: AwsMigrationHubSqInput!
  UpdateDateTime: Date!
  NextUpdateSeconds: Int!
  DryRun: Boolean
}

input AwsMigrationHubPutResourceAttributesInput {
  ProgressUpdateStream: String!
  MigrationTaskName: String!
  ResourceAttributeList: [AwsMigrationHubSvInput]!
  DryRun: Boolean
}

type AwsMigrationHubS4 {
  Name: String!
  Description: String
}

input AwsMigrationHubS4Input {
  Name: String!
  Description: String
}

type AwsMigrationHubSa {
  ConfigurationId: String!
  Description: String
}

input AwsMigrationHubSaInput {
  ConfigurationId: String!
  Description: String
}

type AwsMigrationHubSq {
  Status: String!
  StatusDetail: String
  ProgressPercent: Int
}

input AwsMigrationHubSqInput {
  Status: String!
  StatusDetail: String
  ProgressPercent: Int
}

type AwsMigrationHubSv {
  Type: String!
  Value: String!
}

input AwsMigrationHubSvInput {
  Type: String!
  Value: String!
}

# AWS Mobile (2017-07-01)
type AwsMobile {
  createProject(input: AwsMobileCreateProjectInput, config: AwsConfig): AwsMobileCreateProjectOutput
  deleteProject(input: AwsMobileDeleteProjectInput!, config: AwsConfig): AwsMobileDeleteProjectOutput
  describeBundle(input: AwsMobileDescribeBundleInput!, config: AwsConfig): AwsMobileDescribeBundleOutput
  describeProject(input: AwsMobileDescribeProjectInput!, config: AwsConfig): AwsMobileDescribeProjectOutput
  exportBundle(input: AwsMobileExportBundleInput!, config: AwsConfig): AwsMobileExportBundleOutput
  exportProject(input: AwsMobileExportProjectInput!, config: AwsConfig): AwsMobileExportProjectOutput
  listBundles(input: AwsMobileListBundlesInput, config: AwsConfig): AwsMobileListBundlesOutput
  listProjects(input: AwsMobileListProjectsInput, config: AwsConfig): AwsMobileListProjectsOutput
  updateProject(input: AwsMobileUpdateProjectInput!, config: AwsConfig): AwsMobileUpdateProjectOutput
}

# Amazon Mobile Analytics (2014-06-05)
type AwsMobileAnalytics {
  putEvents(input: AwsMobileAnalyticsPutEventsInput!, config: AwsConfig): JSON
}

input AwsMobileAnalyticsPutEventsEventsInput {
  eventType: String!
  timestamp: String!
  session: AwsMobileAnalyticsPutEventsEventsSessionInput
  version: String
  attributes: JSON
  metrics: JSON
}

input AwsMobileAnalyticsPutEventsEventsSessionInput {
  id: String
  duration: JSON
  startTimestamp: String
  stopTimestamp: String
}

input AwsMobileAnalyticsPutEventsInput {
  events: [AwsMobileAnalyticsPutEventsEventsInput]!
  clientContext: String!
  clientContextEncoding: String
}

input AwsMobileCreateProjectInput {
  name: String
  region: String
  contents: JSON
  snapshotId: String
}

type AwsMobileCreateProjectOutput {
  details: AwsMobileS7
}

input AwsMobileDeleteProjectInput {
  projectId: String!
}

type AwsMobileDeleteProjectOutput {
  deletedResources: [AwsMobileSc]
  orphanedResources: [AwsMobileSc]
}

input AwsMobileDescribeBundleInput {
  bundleId: String!
}

type AwsMobileDescribeBundleOutput {
  details: AwsMobileSq
}

input AwsMobileDescribeProjectInput {
  projectId: String!
  syncFromResources: Boolean
}

type AwsMobileDescribeProjectOutput {
  details: AwsMobileS7
}

input AwsMobileExportBundleInput {
  bundleId: String!
  projectId: String
  platform: String
}

type AwsMobileExportBundleOutput {
  downloadUrl: String
}

input AwsMobileExportProjectInput {
  projectId: String!
}

type AwsMobileExportProjectOutput {
  downloadUrl: String
  shareUrl: String
  snapshotId: String
}

input AwsMobileListBundlesInput {
  maxResults: Int
  nextToken: String
}

type AwsMobileListBundlesOutput {
  bundleList: [AwsMobileSq]
  nextToken: String
}

input AwsMobileListProjectsInput {
  maxResults: Int
  nextToken: String
}

type AwsMobileListProjectsOutput {
  projects: [AwsMobileListProjectsOutputProjects]
  nextToken: String
}

type AwsMobileListProjectsOutputProjects {
  name: String
  projectId: String
}

type AwsMobileS7 {
  name: String
  projectId: String
  region: String
  state: String
  createdDate: Date
  lastUpdatedDate: Date
  consoleUrl: String
  resources: [AwsMobileSc]
}

type AwsMobileSc {
  type: String
  name: String
  arn: String
  feature: String
  attributes: JSON
}

type AwsMobileSq {
  bundleId: String
  title: String
  version: String
  description: String
  iconUrl: String
  availablePlatforms: [String]
}

input AwsMobileUpdateProjectInput {
  contents: JSON
  projectId: String!
}

type AwsMobileUpdateProjectOutput {
  details: AwsMobileS7
}

# AmazonMQ (2017-11-27)
type AwsMQ {
  createBroker(input: AwsMQCreateBrokerInput, config: AwsConfig): AwsMQCreateBrokerOutput
  createConfiguration(input: AwsMQCreateConfigurationInput, config: AwsConfig): AwsMQCreateConfigurationOutput
  createUser(input: AwsMQCreateUserInput!, config: AwsConfig): JSON
  deleteBroker(input: AwsMQDeleteBrokerInput!, config: AwsConfig): AwsMQDeleteBrokerOutput
  deleteUser(input: AwsMQDeleteUserInput!, config: AwsConfig): JSON
  describeBroker(input: AwsMQDescribeBrokerInput!, config: AwsConfig): AwsMQDescribeBrokerOutput
  describeConfiguration(input: AwsMQDescribeConfigurationInput!, config: AwsConfig): AwsMQDescribeConfigurationOutput
  describeConfigurationRevision(input: AwsMQDescribeConfigurationRevisionInput!, config: AwsConfig): AwsMQDescribeConfigurationRevisionOutput
  describeUser(input: AwsMQDescribeUserInput!, config: AwsConfig): AwsMQDescribeUserOutput
  listBrokers(input: AwsMQListBrokersInput, config: AwsConfig): AwsMQListBrokersOutput
  listConfigurationRevisions(input: AwsMQListConfigurationRevisionsInput!, config: AwsConfig): AwsMQListConfigurationRevisionsOutput
  listConfigurations(input: AwsMQListConfigurationsInput, config: AwsConfig): AwsMQListConfigurationsOutput
  listUsers(input: AwsMQListUsersInput!, config: AwsConfig): AwsMQListUsersOutput
  rebootBroker(input: AwsMQRebootBrokerInput!, config: AwsConfig): JSON
  updateBroker(input: AwsMQUpdateBrokerInput!, config: AwsConfig): AwsMQUpdateBrokerOutput
  updateConfiguration(input: AwsMQUpdateConfigurationInput!, config: AwsConfig): AwsMQUpdateConfigurationOutput
  updateUser(input: AwsMQUpdateUserInput!, config: AwsConfig): JSON
}

input AwsMQCreateBrokerInput {
  AutoMinorVersionUpgrade: Boolean
  BrokerName: String
  Configuration: AwsMQS4Input
  CreatorRequestId: String
  DeploymentMode: String
  EngineType: String
  EngineVersion: String
  HostInstanceType: String
  MaintenanceWindowStartTime: AwsMQS8Input
  PubliclyAccessible: Boolean
  SecurityGroups: [String]
  SubnetIds: [String]
  Users: [AwsMQCreateBrokerUsersInput]
}

type AwsMQCreateBrokerOutput {
  BrokerArn: String
  BrokerId: String
}

input AwsMQCreateBrokerUsersInput {
  ConsoleAccess: Boolean
  Groups: [String]
  Password: String
  Username: String
}

input AwsMQCreateConfigurationInput {
  EngineType: String
  EngineVersion: String
  Name: String
}

type AwsMQCreateConfigurationOutput {
  Arn: String
  Id: String
  LatestRevision: AwsMQSg
  Name: String
}

input AwsMQCreateUserInput {
  BrokerId: String!
  ConsoleAccess: Boolean
  Groups: [String]
  Password: String
  Username: String!
}

input AwsMQDeleteBrokerInput {
  BrokerId: String!
}

type AwsMQDeleteBrokerOutput {
  BrokerId: String
}

input AwsMQDeleteUserInput {
  BrokerId: String!
  Username: String!
}

input AwsMQDescribeBrokerInput {
  BrokerId: String!
}

type AwsMQDescribeBrokerOutput {
  AutoMinorVersionUpgrade: Boolean
  BrokerArn: String
  BrokerId: String
  BrokerInstances: [AwsMQDescribeBrokerOutputBrokerInstances]
  BrokerName: String
  BrokerState: String
  Configurations: AwsMQDescribeBrokerOutputConfigurations
  DeploymentMode: String
  EngineType: String
  EngineVersion: String
  HostInstanceType: String
  MaintenanceWindowStartTime: AwsMQS8
  PubliclyAccessible: Boolean
  SecurityGroups: [String]
  SubnetIds: [String]
  Users: [AwsMQSu]
}

type AwsMQDescribeBrokerOutputBrokerInstances {
  ConsoleURL: String
  Endpoints: [String]
}

type AwsMQDescribeBrokerOutputConfigurations {
  Current: AwsMQS4
  History: [AwsMQS4]
  Pending: AwsMQS4
}

input AwsMQDescribeConfigurationInput {
  ConfigurationId: String!
}

type AwsMQDescribeConfigurationOutput {
  Arn: String
  Description: String
  EngineType: String
  EngineVersion: String
  Id: String
  LatestRevision: AwsMQSg
  Name: String
}

input AwsMQDescribeConfigurationRevisionInput {
  ConfigurationId: String!
  ConfigurationRevision: String!
}

type AwsMQDescribeConfigurationRevisionOutput {
  ConfigurationId: String
  Data: String
  Description: String
}

input AwsMQDescribeUserInput {
  BrokerId: String!
  Username: String!
}

type AwsMQDescribeUserOutput {
  BrokerId: String
  ConsoleAccess: Boolean
  Groups: [String]
  Pending: AwsMQDescribeUserOutputPending
  Username: String
}

type AwsMQDescribeUserOutputPending {
  ConsoleAccess: Boolean
  Groups: [String]
  PendingChange: String
}

input AwsMQListBrokersInput {
  MaxResults: Int
  NextToken: String
}

type AwsMQListBrokersOutput {
  BrokerSummaries: [AwsMQListBrokersOutputBrokerSummaries]
  NextToken: String
}

type AwsMQListBrokersOutputBrokerSummaries {
  BrokerArn: String
  BrokerId: String
  BrokerName: String
  BrokerState: String
  DeploymentMode: String
  HostInstanceType: String
}

input AwsMQListConfigurationRevisionsInput {
  ConfigurationId: String!
  MaxResults: Int
  NextToken: String
}

type AwsMQListConfigurationRevisionsOutput {
  ConfigurationId: String
  MaxResults: Int
  NextToken: String
  Revisions: [AwsMQSg]
}

input AwsMQListConfigurationsInput {
  MaxResults: Int
  NextToken: String
}

type AwsMQListConfigurationsOutput {
  Configurations: [AwsMQListConfigurationsOutputConfigurations]
  MaxResults: Int
  NextToken: String
}

type AwsMQListConfigurationsOutputConfigurations {
  Arn: String
  Description: String
  EngineType: String
  EngineVersion: String
  Id: String
  LatestRevision: AwsMQSg
  Name: String
}

input AwsMQListUsersInput {
  BrokerId: String!
  MaxResults: Int
  NextToken: String
}

type AwsMQListUsersOutput {
  BrokerId: String
  MaxResults: Int
  NextToken: String
  Users: [AwsMQSu]
}

input AwsMQRebootBrokerInput {
  BrokerId: String!
}

type AwsMQS4 {
  Id: String
  Revision: Int
}

input AwsMQS4Input {
  Id: String
  Revision: Int
}

type AwsMQS8 {
  DayOfWeek: String
  TimeOfDay: String
  TimeZone: String
}

input AwsMQS8Input {
  DayOfWeek: String
  TimeOfDay: String
  TimeZone: String
}

type AwsMQSg {
  Description: String
  Revision: Int
}

type AwsMQSu {
  PendingChange: String
  Username: String
}

input AwsMQUpdateBrokerInput {
  BrokerId: String!
  Configuration: AwsMQS4Input
}

type AwsMQUpdateBrokerOutput {
  BrokerId: String
  Configuration: AwsMQS4
}

input AwsMQUpdateConfigurationInput {
  ConfigurationId: String!
  Data: String
  Description: String
}

type AwsMQUpdateConfigurationOutput {
  Arn: String
  Id: String
  LatestRevision: AwsMQSg
  Name: String
  Warnings: [AwsMQUpdateConfigurationOutputWarnings]
}

type AwsMQUpdateConfigurationOutputWarnings {
  AttributeName: String
  ElementName: String
  Reason: String
}

input AwsMQUpdateUserInput {
  BrokerId: String!
  ConsoleAccess: Boolean
  Groups: [String]
  Password: String
  Username: String!
}

# Amazon Mechanical Turk (2017-01-17)
type AwsMTurk {
  acceptQualificationRequest(input: AwsMTurkAcceptQualificationRequestInput!, config: AwsConfig): JSON
  approveAssignment(input: AwsMTurkApproveAssignmentInput!, config: AwsConfig): JSON
  associateQualificationWithWorker(input: AwsMTurkAssociateQualificationWithWorkerInput!, config: AwsConfig): JSON
  createAdditionalAssignmentsForHIT(input: AwsMTurkCreateAdditionalAssignmentsForHITInput!, config: AwsConfig): JSON
  createHIT(input: AwsMTurkCreateHITInput!, config: AwsConfig): AwsMTurkCreateHITOutput
  createHITType(input: AwsMTurkCreateHITTypeInput!, config: AwsConfig): AwsMTurkCreateHITTypeOutput
  createHITWithHITType(input: AwsMTurkCreateHITWithHITTypeInput!, config: AwsConfig): AwsMTurkCreateHITWithHITTypeOutput
  createQualificationType(input: AwsMTurkCreateQualificationTypeInput!, config: AwsConfig): AwsMTurkCreateQualificationTypeOutput
  createWorkerBlock(input: AwsMTurkCreateWorkerBlockInput!, config: AwsConfig): JSON
  deleteHIT(input: AwsMTurkDeleteHITInput!, config: AwsConfig): JSON
  deleteQualificationType(input: AwsMTurkDeleteQualificationTypeInput!, config: AwsConfig): JSON
  deleteWorkerBlock(input: AwsMTurkDeleteWorkerBlockInput!, config: AwsConfig): JSON
  disassociateQualificationFromWorker(input: AwsMTurkDisassociateQualificationFromWorkerInput!, config: AwsConfig): JSON
  getAccountBalance(input: JSON, config: AwsConfig): AwsMTurkGetAccountBalanceOutput
  getAssignment(input: AwsMTurkGetAssignmentInput!, config: AwsConfig): AwsMTurkGetAssignmentOutput
  getFileUploadURL(input: AwsMTurkGetFileUploadURLInput!, config: AwsConfig): AwsMTurkGetFileUploadURLOutput
  getHIT(input: AwsMTurkGetHITInput!, config: AwsConfig): AwsMTurkGetHITOutput
  getQualificationScore(input: AwsMTurkGetQualificationScoreInput!, config: AwsConfig): AwsMTurkGetQualificationScoreOutput
  getQualificationType(input: AwsMTurkGetQualificationTypeInput!, config: AwsConfig): AwsMTurkGetQualificationTypeOutput
  listAssignmentsForHIT(input: AwsMTurkListAssignmentsForHITInput!, config: AwsConfig): AwsMTurkListAssignmentsForHITOutput
  listBonusPayments(input: AwsMTurkListBonusPaymentsInput, config: AwsConfig): AwsMTurkListBonusPaymentsOutput
  listHITs(input: AwsMTurkListHITsInput, config: AwsConfig): AwsMTurkListHITsOutput
  listHITsForQualificationType(input: AwsMTurkListHITsForQualificationTypeInput!, config: AwsConfig): AwsMTurkListHITsForQualificationTypeOutput
  listQualificationRequests(input: AwsMTurkListQualificationRequestsInput, config: AwsConfig): AwsMTurkListQualificationRequestsOutput
  listQualificationTypes(input: AwsMTurkListQualificationTypesInput!, config: AwsConfig): AwsMTurkListQualificationTypesOutput
  listReviewPolicyResultsForHIT(input: AwsMTurkListReviewPolicyResultsForHITInput!, config: AwsConfig): AwsMTurkListReviewPolicyResultsForHITOutput
  listReviewableHITs(input: AwsMTurkListReviewableHITsInput, config: AwsConfig): AwsMTurkListReviewableHITsOutput
  listWorkerBlocks(input: AwsMTurkListWorkerBlocksInput, config: AwsConfig): AwsMTurkListWorkerBlocksOutput
  listWorkersWithQualificationType(input: AwsMTurkListWorkersWithQualificationTypeInput!, config: AwsConfig): AwsMTurkListWorkersWithQualificationTypeOutput
  notifyWorkers(input: AwsMTurkNotifyWorkersInput!, config: AwsConfig): AwsMTurkNotifyWorkersOutput
  rejectAssignment(input: AwsMTurkRejectAssignmentInput!, config: AwsConfig): JSON
  rejectQualificationRequest(input: AwsMTurkRejectQualificationRequestInput!, config: AwsConfig): JSON
  sendBonus(input: AwsMTurkSendBonusInput!, config: AwsConfig): JSON
  sendTestEventNotification(input: AwsMTurkSendTestEventNotificationInput!, config: AwsConfig): JSON
  updateExpirationForHIT(input: AwsMTurkUpdateExpirationForHITInput!, config: AwsConfig): JSON
  updateHITReviewStatus(input: AwsMTurkUpdateHITReviewStatusInput!, config: AwsConfig): JSON
  updateHITTypeOfHIT(input: AwsMTurkUpdateHITTypeOfHITInput!, config: AwsConfig): JSON
  updateNotificationSettings(input: AwsMTurkUpdateNotificationSettingsInput!, config: AwsConfig): JSON
  updateQualificationType(input: AwsMTurkUpdateQualificationTypeInput!, config: AwsConfig): AwsMTurkUpdateQualificationTypeOutput
}

input AwsMTurkAcceptQualificationRequestInput {
  QualificationRequestId: String!
  IntegerValue: Int
}

input AwsMTurkApproveAssignmentInput {
  AssignmentId: String!
  RequesterFeedback: String
  OverrideRejection: Boolean
}

input AwsMTurkAssociateQualificationWithWorkerInput {
  QualificationTypeId: String!
  WorkerId: String!
  IntegerValue: Int
  SendNotification: Boolean
}

input AwsMTurkCreateAdditionalAssignmentsForHITInput {
  HITId: String!
  NumberOfAdditionalAssignments: Int!
  UniqueRequestToken: String
}

input AwsMTurkCreateHITInput {
  MaxAssignments: Int
  AutoApprovalDelayInSeconds: JSON
  LifetimeInSeconds: JSON!
  AssignmentDurationInSeconds: JSON!
  Reward: String!
  Title: String!
  Keywords: String
  Description: String!
  Question: String
  RequesterAnnotation: String
  QualificationRequirements: [AwsMTurkSiInput]
  UniqueRequestToken: String
  AssignmentReviewPolicy: AwsMTurkSpInput
  HITReviewPolicy: AwsMTurkSpInput
  HITLayoutId: String
  HITLayoutParameters: [AwsMTurkSvInput]
}

type AwsMTurkCreateHITOutput {
  HIT: AwsMTurkSy
}

input AwsMTurkCreateHITTypeInput {
  AutoApprovalDelayInSeconds: JSON
  AssignmentDurationInSeconds: JSON!
  Reward: String!
  Title: String!
  Keywords: String
  Description: String!
  QualificationRequirements: [AwsMTurkSiInput]
}

type AwsMTurkCreateHITTypeOutput {
  HITTypeId: String
}

input AwsMTurkCreateHITWithHITTypeInput {
  HITTypeId: String!
  MaxAssignments: Int
  LifetimeInSeconds: JSON!
  Question: String
  RequesterAnnotation: String
  UniqueRequestToken: String
  AssignmentReviewPolicy: AwsMTurkSpInput
  HITReviewPolicy: AwsMTurkSpInput
  HITLayoutId: String
  HITLayoutParameters: [AwsMTurkSvInput]
}

type AwsMTurkCreateHITWithHITTypeOutput {
  HIT: AwsMTurkSy
}

input AwsMTurkCreateQualificationTypeInput {
  Name: String!
  Keywords: String
  Description: String!
  QualificationTypeStatus: String!
  RetryDelayInSeconds: JSON
  Test: String
  AnswerKey: String
  TestDurationInSeconds: JSON
  AutoGranted: Boolean
  AutoGrantedValue: Int
}

type AwsMTurkCreateQualificationTypeOutput {
  QualificationType: AwsMTurkS19
}

input AwsMTurkCreateWorkerBlockInput {
  WorkerId: String!
  Reason: String!
}

input AwsMTurkDeleteHITInput {
  HITId: String!
}

input AwsMTurkDeleteQualificationTypeInput {
  QualificationTypeId: String!
}

input AwsMTurkDeleteWorkerBlockInput {
  WorkerId: String!
  Reason: String
}

input AwsMTurkDisassociateQualificationFromWorkerInput {
  WorkerId: String!
  QualificationTypeId: String!
  Reason: String
}

type AwsMTurkGetAccountBalanceOutput {
  AvailableBalance: String
  OnHoldBalance: String
}

input AwsMTurkGetAssignmentInput {
  AssignmentId: String!
}

type AwsMTurkGetAssignmentOutput {
  Assignment: AwsMTurkS1o
  HIT: AwsMTurkSy
}

input AwsMTurkGetFileUploadURLInput {
  AssignmentId: String!
  QuestionIdentifier: String!
}

type AwsMTurkGetFileUploadURLOutput {
  FileUploadURL: String
}

input AwsMTurkGetHITInput {
  HITId: String!
}

type AwsMTurkGetHITOutput {
  HIT: AwsMTurkSy
}

input AwsMTurkGetQualificationScoreInput {
  QualificationTypeId: String!
  WorkerId: String!
}

type AwsMTurkGetQualificationScoreOutput {
  Qualification: AwsMTurkS1w
}

input AwsMTurkGetQualificationTypeInput {
  QualificationTypeId: String!
}

type AwsMTurkGetQualificationTypeOutput {
  QualificationType: AwsMTurkS19
}

input AwsMTurkListAssignmentsForHITInput {
  HITId: String!
  NextToken: String
  MaxResults: Int
  AssignmentStatuses: [String]
}

type AwsMTurkListAssignmentsForHITOutput {
  NextToken: String
  NumResults: Int
  Assignments: [AwsMTurkS1o]
}

input AwsMTurkListBonusPaymentsInput {
  HITId: String
  AssignmentId: String
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListBonusPaymentsOutput {
  NumResults: Int
  NextToken: String
  BonusPayments: [AwsMTurkListBonusPaymentsOutputBonusPayments]
}

type AwsMTurkListBonusPaymentsOutputBonusPayments {
  WorkerId: String
  BonusAmount: String
  AssignmentId: String
  Reason: String
  GrantTime: Date
}

input AwsMTurkListHITsForQualificationTypeInput {
  QualificationTypeId: String!
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListHITsForQualificationTypeOutput {
  NextToken: String
  NumResults: Int
  HITs: [AwsMTurkSy]
}

input AwsMTurkListHITsInput {
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListHITsOutput {
  NextToken: String
  NumResults: Int
  HITs: [AwsMTurkSy]
}

input AwsMTurkListQualificationRequestsInput {
  QualificationTypeId: String
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListQualificationRequestsOutput {
  NumResults: Int
  NextToken: String
  QualificationRequests: [AwsMTurkListQualificationRequestsOutputQualificationRequests]
}

type AwsMTurkListQualificationRequestsOutputQualificationRequests {
  QualificationRequestId: String
  QualificationTypeId: String
  WorkerId: String
  Test: String
  Answer: String
  SubmitTime: Date
}

input AwsMTurkListQualificationTypesInput {
  Query: String
  MustBeRequestable: Boolean!
  MustBeOwnedByCaller: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListQualificationTypesOutput {
  NumResults: Int
  NextToken: String
  QualificationTypes: [AwsMTurkS19]
}

input AwsMTurkListReviewableHITsInput {
  HITTypeId: String
  Status: String
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListReviewableHITsOutput {
  NextToken: String
  NumResults: Int
  HITs: [AwsMTurkSy]
}

input AwsMTurkListReviewPolicyResultsForHITInput {
  HITId: String!
  PolicyLevels: [String]
  RetrieveActions: Boolean
  RetrieveResults: Boolean
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListReviewPolicyResultsForHITOutput {
  HITId: String
  AssignmentReviewPolicy: AwsMTurkSp
  HITReviewPolicy: AwsMTurkSp
  AssignmentReviewReport: AwsMTurkS2q
  HITReviewReport: AwsMTurkS2q
  NextToken: String
}

input AwsMTurkListWorkerBlocksInput {
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListWorkerBlocksOutput {
  NextToken: String
  NumResults: Int
  WorkerBlocks: [AwsMTurkListWorkerBlocksOutputWorkerBlocks]
}

type AwsMTurkListWorkerBlocksOutputWorkerBlocks {
  WorkerId: String
  Reason: String
}

input AwsMTurkListWorkersWithQualificationTypeInput {
  QualificationTypeId: String!
  Status: String
  NextToken: String
  MaxResults: Int
}

type AwsMTurkListWorkersWithQualificationTypeOutput {
  NextToken: String
  NumResults: Int
  Qualifications: [AwsMTurkS1w]
}

input AwsMTurkNotifyWorkersInput {
  Subject: String!
  MessageText: String!
  WorkerIds: [String]!
}

type AwsMTurkNotifyWorkersOutput {
  NotifyWorkersFailureStatuses: [AwsMTurkNotifyWorkersOutputNotifyWorkersFailureStatuses]
}

type AwsMTurkNotifyWorkersOutputNotifyWorkersFailureStatuses {
  NotifyWorkersFailureCode: String
  NotifyWorkersFailureMessage: String
  WorkerId: String
}

input AwsMTurkRejectAssignmentInput {
  AssignmentId: String!
  RequesterFeedback: String!
}

input AwsMTurkRejectQualificationRequestInput {
  QualificationRequestId: String!
  Reason: String
}

type AwsMTurkS19 {
  QualificationTypeId: String
  CreationTime: Date
  Name: String
  Description: String
  Keywords: String
  QualificationTypeStatus: String
  Test: String
  TestDurationInSeconds: JSON
  AnswerKey: String
  RetryDelayInSeconds: JSON
  IsRequestable: Boolean
  AutoGranted: Boolean
  AutoGrantedValue: Int
}

type AwsMTurkS1o {
  AssignmentId: String
  WorkerId: String
  HITId: String
  AssignmentStatus: String
  AutoApprovalTime: Date
  AcceptTime: Date
  SubmitTime: Date
  ApprovalTime: Date
  RejectionTime: Date
  Deadline: Date
  Answer: String
  RequesterFeedback: String
}

type AwsMTurkS1w {
  QualificationTypeId: String
  WorkerId: String
  GrantTime: Date
  IntegerValue: Int
  LocaleValue: AwsMTurkSn
  Status: String
}

type AwsMTurkS2q {
  ReviewResults: [AwsMTurkS2qReviewResults]
  ReviewActions: [AwsMTurkS2qReviewActions]
}

type AwsMTurkS2qReviewActions {
  ActionId: String
  ActionName: String
  TargetId: String
  TargetType: String
  Status: String
  CompleteTime: Date
  Result: String
  ErrorCode: String
}

type AwsMTurkS2qReviewResults {
  ActionId: String
  SubjectId: String
  SubjectType: String
  QuestionId: String
  Key: String
  Value: String
}

input AwsMTurkS3jInput {
  Destination: String!
  Transport: String!
  Version: String!
  EventTypes: [String]!
}

input AwsMTurkSendBonusInput {
  WorkerId: String!
  BonusAmount: String!
  AssignmentId: String!
  Reason: String!
  UniqueRequestToken: String
}

input AwsMTurkSendTestEventNotificationInput {
  Notification: AwsMTurkS3jInput!
  TestEventType: String!
}

type AwsMTurkSi {
  QualificationTypeId: String!
  Comparator: String!
  IntegerValues: [Int]
  LocaleValues: [AwsMTurkSn]
  RequiredToPreview: Boolean
}

input AwsMTurkSiInput {
  QualificationTypeId: String!
  Comparator: String!
  IntegerValues: [Int]
  LocaleValues: [AwsMTurkSnInput]
  RequiredToPreview: Boolean
}

type AwsMTurkSn {
  Country: String!
  Subdivision: String
}

input AwsMTurkSnInput {
  Country: String!
  Subdivision: String
}

type AwsMTurkSp {
  PolicyName: String!
  Parameters: [AwsMTurkSpParameters]
}

input AwsMTurkSpInput {
  PolicyName: String!
  Parameters: [AwsMTurkSpParametersInput]
}

type AwsMTurkSpParameters {
  Key: String
  Values: [String]
  MapEntries: [AwsMTurkSpParametersMapEntries]
}

input AwsMTurkSpParametersInput {
  Key: String
  Values: [String]
  MapEntries: [AwsMTurkSpParametersMapEntriesInput]
}

type AwsMTurkSpParametersMapEntries {
  Key: String
  Values: [String]
}

input AwsMTurkSpParametersMapEntriesInput {
  Key: String
  Values: [String]
}

input AwsMTurkSvInput {
  Name: String!
  Value: String!
}

type AwsMTurkSy {
  HITId: String
  HITTypeId: String
  HITGroupId: String
  HITLayoutId: String
  CreationTime: Date
  Title: String
  Description: String
  Question: String
  Keywords: String
  HITStatus: String
  MaxAssignments: Int
  Reward: String
  AutoApprovalDelayInSeconds: JSON
  Expiration: Date
  AssignmentDurationInSeconds: JSON
  RequesterAnnotation: String
  QualificationRequirements: [AwsMTurkSi]
  HITReviewStatus: String
  NumberOfAssignmentsPending: Int
  NumberOfAssignmentsAvailable: Int
  NumberOfAssignmentsCompleted: Int
}

input AwsMTurkUpdateExpirationForHITInput {
  HITId: String!
  ExpireAt: Date!
}

input AwsMTurkUpdateHITReviewStatusInput {
  HITId: String!
  Revert: Boolean
}

input AwsMTurkUpdateHITTypeOfHITInput {
  HITId: String!
  HITTypeId: String!
}

input AwsMTurkUpdateNotificationSettingsInput {
  HITTypeId: String!
  Notification: AwsMTurkS3jInput
  Active: Boolean
}

input AwsMTurkUpdateQualificationTypeInput {
  QualificationTypeId: String!
  Description: String
  QualificationTypeStatus: String
  Test: String
  AnswerKey: String
  TestDurationInSeconds: JSON
  RetryDelayInSeconds: JSON
  AutoGranted: Boolean
  AutoGrantedValue: Int
}

type AwsMTurkUpdateQualificationTypeOutput {
  QualificationType: AwsMTurkS19
}

# AWS OpsWorks (2013-02-18)
type AwsOpsWorks {
  assignInstance(input: AwsOpsWorksAssignInstanceInput!, config: AwsConfig): JSON
  assignVolume(input: AwsOpsWorksAssignVolumeInput!, config: AwsConfig): JSON
  associateElasticIp(input: AwsOpsWorksAssociateElasticIpInput!, config: AwsConfig): JSON
  attachElasticLoadBalancer(input: AwsOpsWorksAttachElasticLoadBalancerInput!, config: AwsConfig): JSON
  cloneStack(input: AwsOpsWorksCloneStackInput!, config: AwsConfig): AwsOpsWorksCloneStackOutput
  createApp(input: AwsOpsWorksCreateAppInput!, config: AwsConfig): AwsOpsWorksCreateAppOutput
  createDeployment(input: AwsOpsWorksCreateDeploymentInput!, config: AwsConfig): AwsOpsWorksCreateDeploymentOutput
  createInstance(input: AwsOpsWorksCreateInstanceInput!, config: AwsConfig): AwsOpsWorksCreateInstanceOutput
  createLayer(input: AwsOpsWorksCreateLayerInput!, config: AwsConfig): AwsOpsWorksCreateLayerOutput
  createStack(input: AwsOpsWorksCreateStackInput!, config: AwsConfig): AwsOpsWorksCreateStackOutput
  createUserProfile(input: AwsOpsWorksCreateUserProfileInput!, config: AwsConfig): AwsOpsWorksCreateUserProfileOutput
  deleteApp(input: AwsOpsWorksDeleteAppInput!, config: AwsConfig): JSON
  deleteInstance(input: AwsOpsWorksDeleteInstanceInput!, config: AwsConfig): JSON
  deleteLayer(input: AwsOpsWorksDeleteLayerInput!, config: AwsConfig): JSON
  deleteStack(input: AwsOpsWorksDeleteStackInput!, config: AwsConfig): JSON
  deleteUserProfile(input: AwsOpsWorksDeleteUserProfileInput!, config: AwsConfig): JSON
  deregisterEcsCluster(input: AwsOpsWorksDeregisterEcsClusterInput!, config: AwsConfig): JSON
  deregisterElasticIp(input: AwsOpsWorksDeregisterElasticIpInput!, config: AwsConfig): JSON
  deregisterInstance(input: AwsOpsWorksDeregisterInstanceInput!, config: AwsConfig): JSON
  deregisterRdsDbInstance(input: AwsOpsWorksDeregisterRdsDbInstanceInput!, config: AwsConfig): JSON
  deregisterVolume(input: AwsOpsWorksDeregisterVolumeInput!, config: AwsConfig): JSON
  describeAgentVersions(input: AwsOpsWorksDescribeAgentVersionsInput, config: AwsConfig): AwsOpsWorksDescribeAgentVersionsOutput
  describeApps(input: AwsOpsWorksDescribeAppsInput, config: AwsConfig): AwsOpsWorksDescribeAppsOutput
  describeCommands(input: AwsOpsWorksDescribeCommandsInput, config: AwsConfig): AwsOpsWorksDescribeCommandsOutput
  describeDeployments(input: AwsOpsWorksDescribeDeploymentsInput, config: AwsConfig): AwsOpsWorksDescribeDeploymentsOutput
  describeEcsClusters(input: AwsOpsWorksDescribeEcsClustersInput, config: AwsConfig): AwsOpsWorksDescribeEcsClustersOutput
  describeElasticIps(input: AwsOpsWorksDescribeElasticIpsInput, config: AwsConfig): AwsOpsWorksDescribeElasticIpsOutput
  describeElasticLoadBalancers(input: AwsOpsWorksDescribeElasticLoadBalancersInput, config: AwsConfig): AwsOpsWorksDescribeElasticLoadBalancersOutput
  describeInstances(input: AwsOpsWorksDescribeInstancesInput, config: AwsConfig): AwsOpsWorksDescribeInstancesOutput
  describeLayers(input: AwsOpsWorksDescribeLayersInput, config: AwsConfig): AwsOpsWorksDescribeLayersOutput
  describeLoadBasedAutoScaling(input: AwsOpsWorksDescribeLoadBasedAutoScalingInput!, config: AwsConfig): AwsOpsWorksDescribeLoadBasedAutoScalingOutput
  describeMyUserProfile(config: AwsConfig): AwsOpsWorksDescribeMyUserProfileOutput
  describePermissions(input: AwsOpsWorksDescribePermissionsInput, config: AwsConfig): AwsOpsWorksDescribePermissionsOutput
  describeRaidArrays(input: AwsOpsWorksDescribeRaidArraysInput, config: AwsConfig): AwsOpsWorksDescribeRaidArraysOutput
  describeRdsDbInstances(input: AwsOpsWorksDescribeRdsDbInstancesInput!, config: AwsConfig): AwsOpsWorksDescribeRdsDbInstancesOutput
  describeServiceErrors(input: AwsOpsWorksDescribeServiceErrorsInput, config: AwsConfig): AwsOpsWorksDescribeServiceErrorsOutput
  describeStackProvisioningParameters(input: AwsOpsWorksDescribeStackProvisioningParametersInput!, config: AwsConfig): AwsOpsWorksDescribeStackProvisioningParametersOutput
  describeStackSummary(input: AwsOpsWorksDescribeStackSummaryInput!, config: AwsConfig): AwsOpsWorksDescribeStackSummaryOutput
  describeStacks(input: AwsOpsWorksDescribeStacksInput, config: AwsConfig): AwsOpsWorksDescribeStacksOutput
  describeTimeBasedAutoScaling(input: AwsOpsWorksDescribeTimeBasedAutoScalingInput!, config: AwsConfig): AwsOpsWorksDescribeTimeBasedAutoScalingOutput
  describeUserProfiles(input: AwsOpsWorksDescribeUserProfilesInput, config: AwsConfig): AwsOpsWorksDescribeUserProfilesOutput
  describeVolumes(input: AwsOpsWorksDescribeVolumesInput, config: AwsConfig): AwsOpsWorksDescribeVolumesOutput
  detachElasticLoadBalancer(input: AwsOpsWorksDetachElasticLoadBalancerInput!, config: AwsConfig): JSON
  disassociateElasticIp(input: AwsOpsWorksDisassociateElasticIpInput!, config: AwsConfig): JSON
  getHostnameSuggestion(input: AwsOpsWorksGetHostnameSuggestionInput!, config: AwsConfig): AwsOpsWorksGetHostnameSuggestionOutput
  grantAccess(input: AwsOpsWorksGrantAccessInput!, config: AwsConfig): AwsOpsWorksGrantAccessOutput
  listTags(input: AwsOpsWorksListTagsInput!, config: AwsConfig): AwsOpsWorksListTagsOutput
  rebootInstance(input: AwsOpsWorksRebootInstanceInput!, config: AwsConfig): JSON
  registerEcsCluster(input: AwsOpsWorksRegisterEcsClusterInput!, config: AwsConfig): AwsOpsWorksRegisterEcsClusterOutput
  registerElasticIp(input: AwsOpsWorksRegisterElasticIpInput!, config: AwsConfig): AwsOpsWorksRegisterElasticIpOutput
  registerInstance(input: AwsOpsWorksRegisterInstanceInput!, config: AwsConfig): AwsOpsWorksRegisterInstanceOutput
  registerRdsDbInstance(input: AwsOpsWorksRegisterRdsDbInstanceInput!, config: AwsConfig): JSON
  registerVolume(input: AwsOpsWorksRegisterVolumeInput!, config: AwsConfig): AwsOpsWorksRegisterVolumeOutput
  setLoadBasedAutoScaling(input: AwsOpsWorksSetLoadBasedAutoScalingInput!, config: AwsConfig): JSON
  setPermission(input: AwsOpsWorksSetPermissionInput!, config: AwsConfig): JSON
  setTimeBasedAutoScaling(input: AwsOpsWorksSetTimeBasedAutoScalingInput!, config: AwsConfig): JSON
  startInstance(input: AwsOpsWorksStartInstanceInput!, config: AwsConfig): JSON
  startStack(input: AwsOpsWorksStartStackInput!, config: AwsConfig): JSON
  stopInstance(input: AwsOpsWorksStopInstanceInput!, config: AwsConfig): JSON
  stopStack(input: AwsOpsWorksStopStackInput!, config: AwsConfig): JSON
  tagResource(input: AwsOpsWorksTagResourceInput!, config: AwsConfig): JSON
  unassignInstance(input: AwsOpsWorksUnassignInstanceInput!, config: AwsConfig): JSON
  unassignVolume(input: AwsOpsWorksUnassignVolumeInput!, config: AwsConfig): JSON
  untagResource(input: AwsOpsWorksUntagResourceInput!, config: AwsConfig): JSON
  updateApp(input: AwsOpsWorksUpdateAppInput!, config: AwsConfig): JSON
  updateElasticIp(input: AwsOpsWorksUpdateElasticIpInput!, config: AwsConfig): JSON
  updateInstance(input: AwsOpsWorksUpdateInstanceInput!, config: AwsConfig): JSON
  updateLayer(input: AwsOpsWorksUpdateLayerInput!, config: AwsConfig): JSON
  updateMyUserProfile(input: AwsOpsWorksUpdateMyUserProfileInput, config: AwsConfig): JSON
  updateRdsDbInstance(input: AwsOpsWorksUpdateRdsDbInstanceInput!, config: AwsConfig): JSON
  updateStack(input: AwsOpsWorksUpdateStackInput!, config: AwsConfig): JSON
  updateUserProfile(input: AwsOpsWorksUpdateUserProfileInput!, config: AwsConfig): JSON
  updateVolume(input: AwsOpsWorksUpdateVolumeInput!, config: AwsConfig): JSON
}

input AwsOpsWorksAssignInstanceInput {
  InstanceId: String!
  LayerIds: [String]!
}

input AwsOpsWorksAssignVolumeInput {
  VolumeId: String!
  InstanceId: String
}

input AwsOpsWorksAssociateElasticIpInput {
  ElasticIp: String!
  InstanceId: String
}

input AwsOpsWorksAttachElasticLoadBalancerInput {
  ElasticLoadBalancerName: String!
  LayerId: String!
}

input AwsOpsWorksCloneStackInput {
  SourceStackId: String!
  Name: String
  Region: String
  VpcId: String
  Attributes: JSON
  ServiceRoleArn: String!
  DefaultInstanceProfileArn: String
  DefaultOs: String
  HostnameTheme: String
  DefaultAvailabilityZone: String
  DefaultSubnetId: String
  CustomJson: String
  ConfigurationManager: AwsOpsWorksSaInput
  ChefConfiguration: AwsOpsWorksSbInput
  UseCustomCookbooks: Boolean
  UseOpsworksSecurityGroups: Boolean
  CustomCookbooksSource: AwsOpsWorksSdInput
  DefaultSshKeyName: String
  ClonePermissions: Boolean
  CloneAppIds: [String]
  DefaultRootDeviceType: String
  AgentVersion: String
}

type AwsOpsWorksCloneStackOutput {
  StackId: String
}

# AWS OpsWorks for Chef Automate (2016-11-01)
type AwsOpsWorksCM {
  associateNode(input: AwsOpsWorksCMAssociateNodeInput!, config: AwsConfig): AwsOpsWorksCMAssociateNodeOutput
  createBackup(input: AwsOpsWorksCMCreateBackupInput!, config: AwsConfig): AwsOpsWorksCMCreateBackupOutput
  createServer(input: AwsOpsWorksCMCreateServerInput!, config: AwsConfig): AwsOpsWorksCMCreateServerOutput
  deleteBackup(input: AwsOpsWorksCMDeleteBackupInput!, config: AwsConfig): JSON
  deleteServer(input: AwsOpsWorksCMDeleteServerInput!, config: AwsConfig): JSON
  describeAccountAttributes(input: JSON, config: AwsConfig): AwsOpsWorksCMDescribeAccountAttributesOutput
  describeBackups(input: AwsOpsWorksCMDescribeBackupsInput, config: AwsConfig): AwsOpsWorksCMDescribeBackupsOutput
  describeEvents(input: AwsOpsWorksCMDescribeEventsInput!, config: AwsConfig): AwsOpsWorksCMDescribeEventsOutput
  describeNodeAssociationStatus(input: AwsOpsWorksCMDescribeNodeAssociationStatusInput!, config: AwsConfig): AwsOpsWorksCMDescribeNodeAssociationStatusOutput
  describeServers(input: AwsOpsWorksCMDescribeServersInput, config: AwsConfig): AwsOpsWorksCMDescribeServersOutput
  disassociateNode(input: AwsOpsWorksCMDisassociateNodeInput!, config: AwsConfig): AwsOpsWorksCMDisassociateNodeOutput
  restoreServer(input: AwsOpsWorksCMRestoreServerInput!, config: AwsConfig): JSON
  startMaintenance(input: AwsOpsWorksCMStartMaintenanceInput!, config: AwsConfig): AwsOpsWorksCMStartMaintenanceOutput
  updateServer(input: AwsOpsWorksCMUpdateServerInput!, config: AwsConfig): AwsOpsWorksCMUpdateServerOutput
  updateServerEngineAttributes(input: AwsOpsWorksCMUpdateServerEngineAttributesInput!, config: AwsConfig): AwsOpsWorksCMUpdateServerEngineAttributesOutput
}

input AwsOpsWorksCMAssociateNodeInput {
  ServerName: String!
  NodeName: String!
  EngineAttributes: [AwsOpsWorksCMS4Input]!
}

type AwsOpsWorksCMAssociateNodeOutput {
  NodeAssociationStatusToken: String
}

input AwsOpsWorksCMCreateBackupInput {
  ServerName: String!
  Description: String
}

type AwsOpsWorksCMCreateBackupOutput {
  Backup: AwsOpsWorksCMSd
}

input AwsOpsWorksCMCreateServerInput {
  AssociatePublicIpAddress: Boolean
  DisableAutomatedBackup: Boolean
  Engine: String
  EngineModel: String
  EngineVersion: String
  EngineAttributes: [AwsOpsWorksCMS4Input]
  BackupRetentionCount: Int
  ServerName: String!
  InstanceProfileArn: String!
  InstanceType: String!
  KeyPair: String
  PreferredMaintenanceWindow: String
  PreferredBackupWindow: String
  SecurityGroupIds: [String]
  ServiceRoleArn: String!
  SubnetIds: [String]
  BackupId: String
}

type AwsOpsWorksCMCreateServerOutput {
  Server: AwsOpsWorksCMSs
}

input AwsOpsWorksCMDeleteBackupInput {
  BackupId: String!
}

input AwsOpsWorksCMDeleteServerInput {
  ServerName: String!
}

type AwsOpsWorksCMDescribeAccountAttributesOutput {
  Attributes: [AwsOpsWorksCMDescribeAccountAttributesOutputAttributes]
}

type AwsOpsWorksCMDescribeAccountAttributesOutputAttributes {
  Name: String
  Maximum: Int
  Used: Int
}

input AwsOpsWorksCMDescribeBackupsInput {
  BackupId: String
  ServerName: String
  NextToken: String
  MaxResults: Int
}

type AwsOpsWorksCMDescribeBackupsOutput {
  Backups: [AwsOpsWorksCMSd]
  NextToken: String
}

input AwsOpsWorksCMDescribeEventsInput {
  ServerName: String!
  NextToken: String
  MaxResults: Int
}

type AwsOpsWorksCMDescribeEventsOutput {
  ServerEvents: [AwsOpsWorksCMDescribeEventsOutputServerEvents]
  NextToken: String
}

type AwsOpsWorksCMDescribeEventsOutputServerEvents {
  CreatedAt: Date
  ServerName: String
  Message: String
  LogUrl: String
}

input AwsOpsWorksCMDescribeNodeAssociationStatusInput {
  NodeAssociationStatusToken: String!
  ServerName: String!
}

type AwsOpsWorksCMDescribeNodeAssociationStatusOutput {
  NodeAssociationStatus: String
  EngineAttributes: [AwsOpsWorksCMS4]
}

input AwsOpsWorksCMDescribeServersInput {
  ServerName: String
  NextToken: String
  MaxResults: Int
}

type AwsOpsWorksCMDescribeServersOutput {
  Servers: [AwsOpsWorksCMSs]
  NextToken: String
}

input AwsOpsWorksCMDisassociateNodeInput {
  ServerName: String!
  NodeName: String!
  EngineAttributes: [AwsOpsWorksCMS4Input]
}

type AwsOpsWorksCMDisassociateNodeOutput {
  NodeAssociationStatusToken: String
}

input AwsOpsWorksCMRestoreServerInput {
  BackupId: String!
  ServerName: String!
  InstanceType: String
  KeyPair: String
}

type AwsOpsWorksCMS4 {
  Name: String
  Value: String
}

input AwsOpsWorksCMS4Input {
  Name: String
  Value: String
}

type AwsOpsWorksCMSd {
  BackupArn: String
  BackupId: String
  BackupType: String
  CreatedAt: Date
  Description: String
  Engine: String
  EngineModel: String
  EngineVersion: String
  InstanceProfileArn: String
  InstanceType: String
  KeyPair: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  S3DataSize: Int
  S3DataUrl: String
  S3LogUrl: String
  SecurityGroupIds: [String]
  ServerName: String
  ServiceRoleArn: String
  Status: String
  StatusDescription: String
  SubnetIds: [String]
  ToolsVersion: String
  UserArn: String
}

type AwsOpsWorksCMSs {
  AssociatePublicIpAddress: Boolean
  BackupRetentionCount: Int
  ServerName: String
  CreatedAt: Date
  CloudFormationStackArn: String
  DisableAutomatedBackup: Boolean
  Endpoint: String
  Engine: String
  EngineModel: String
  EngineAttributes: [AwsOpsWorksCMS4]
  EngineVersion: String
  InstanceProfileArn: String
  InstanceType: String
  KeyPair: String
  MaintenanceStatus: String
  PreferredMaintenanceWindow: String
  PreferredBackupWindow: String
  SecurityGroupIds: [String]
  ServiceRoleArn: String
  Status: String
  StatusReason: String
  SubnetIds: [String]
  ServerArn: String
}

input AwsOpsWorksCMStartMaintenanceInput {
  ServerName: String!
  EngineAttributes: [AwsOpsWorksCMS4Input]
}

type AwsOpsWorksCMStartMaintenanceOutput {
  Server: AwsOpsWorksCMSs
}

input AwsOpsWorksCMUpdateServerEngineAttributesInput {
  ServerName: String!
  AttributeName: String!
  AttributeValue: String
}

type AwsOpsWorksCMUpdateServerEngineAttributesOutput {
  Server: AwsOpsWorksCMSs
}

input AwsOpsWorksCMUpdateServerInput {
  DisableAutomatedBackup: Boolean
  BackupRetentionCount: Int
  ServerName: String!
  PreferredMaintenanceWindow: String
  PreferredBackupWindow: String
}

type AwsOpsWorksCMUpdateServerOutput {
  Server: AwsOpsWorksCMSs
}

input AwsOpsWorksCreateAppInput {
  StackId: String!
  Shortname: String
  Name: String!
  Description: String
  DataSources: [AwsOpsWorksSiInput]
  Type: String!
  AppSource: AwsOpsWorksSdInput
  Domains: [String]
  EnableSsl: Boolean
  SslConfiguration: AwsOpsWorksSlInput
  Attributes: JSON
  Environment: [AwsOpsWorksSoInput]
}

type AwsOpsWorksCreateAppOutput {
  AppId: String
}

input AwsOpsWorksCreateDeploymentInput {
  StackId: String!
  AppId: String
  InstanceIds: [String]
  LayerIds: [String]
  Command: AwsOpsWorksSsInput!
  Comment: String
  CustomJson: String
}

type AwsOpsWorksCreateDeploymentOutput {
  DeploymentId: String
}

input AwsOpsWorksCreateInstanceInput {
  StackId: String!
  LayerIds: [String]!
  InstanceType: String!
  AutoScalingType: String
  Hostname: String
  Os: String
  AmiId: String
  SshKeyName: String
  AvailabilityZone: String
  VirtualizationType: String
  SubnetId: String
  Architecture: String
  RootDeviceType: String
  BlockDeviceMappings: [AwsOpsWorksSzInput]
  InstallUpdatesOnBoot: Boolean
  EbsOptimized: Boolean
  AgentVersion: String
  Tenancy: String
}

type AwsOpsWorksCreateInstanceOutput {
  InstanceId: String
}

input AwsOpsWorksCreateLayerInput {
  StackId: String!
  Type: String!
  Name: String!
  Shortname: String!
  Attributes: JSON
  CloudWatchLogsConfiguration: AwsOpsWorksS19Input
  CustomInstanceProfileArn: String
  CustomJson: String
  CustomSecurityGroupIds: [String]
  Packages: [String]
  VolumeConfigurations: [AwsOpsWorksS1fInput]
  EnableAutoHealing: Boolean
  AutoAssignElasticIps: Boolean
  AutoAssignPublicIps: Boolean
  CustomRecipes: AwsOpsWorksS1hInput
  InstallUpdatesOnBoot: Boolean
  UseEbsOptimizedInstances: Boolean
  LifecycleEventConfiguration: AwsOpsWorksS1iInput
}

type AwsOpsWorksCreateLayerOutput {
  LayerId: String
}

input AwsOpsWorksCreateStackInput {
  Name: String!
  Region: String!
  VpcId: String
  Attributes: JSON
  ServiceRoleArn: String!
  DefaultInstanceProfileArn: String!
  DefaultOs: String
  HostnameTheme: String
  DefaultAvailabilityZone: String
  DefaultSubnetId: String
  CustomJson: String
  ConfigurationManager: AwsOpsWorksSaInput
  ChefConfiguration: AwsOpsWorksSbInput
  UseCustomCookbooks: Boolean
  UseOpsworksSecurityGroups: Boolean
  CustomCookbooksSource: AwsOpsWorksSdInput
  DefaultSshKeyName: String
  DefaultRootDeviceType: String
  AgentVersion: String
}

type AwsOpsWorksCreateStackOutput {
  StackId: String
}

input AwsOpsWorksCreateUserProfileInput {
  IamUserArn: String!
  SshUsername: String
  SshPublicKey: String
  AllowSelfManagement: Boolean
}

type AwsOpsWorksCreateUserProfileOutput {
  IamUserArn: String
}

input AwsOpsWorksDeleteAppInput {
  AppId: String!
}

input AwsOpsWorksDeleteInstanceInput {
  InstanceId: String!
  DeleteElasticIp: Boolean
  DeleteVolumes: Boolean
}

input AwsOpsWorksDeleteLayerInput {
  LayerId: String!
}

input AwsOpsWorksDeleteStackInput {
  StackId: String!
}

input AwsOpsWorksDeleteUserProfileInput {
  IamUserArn: String!
}

input AwsOpsWorksDeregisterEcsClusterInput {
  EcsClusterArn: String!
}

input AwsOpsWorksDeregisterElasticIpInput {
  ElasticIp: String!
}

input AwsOpsWorksDeregisterInstanceInput {
  InstanceId: String!
}

input AwsOpsWorksDeregisterRdsDbInstanceInput {
  RdsDbInstanceArn: String!
}

input AwsOpsWorksDeregisterVolumeInput {
  VolumeId: String!
}

input AwsOpsWorksDescribeAgentVersionsInput {
  StackId: String
  ConfigurationManager: AwsOpsWorksSaInput
}

type AwsOpsWorksDescribeAgentVersionsOutput {
  AgentVersions: [AwsOpsWorksDescribeAgentVersionsOutputAgentVersions]
}

type AwsOpsWorksDescribeAgentVersionsOutputAgentVersions {
  Version: String
  ConfigurationManager: AwsOpsWorksSa
}

input AwsOpsWorksDescribeAppsInput {
  StackId: String
  AppIds: [String]
}

type AwsOpsWorksDescribeAppsOutput {
  Apps: [AwsOpsWorksDescribeAppsOutputApps]
}

type AwsOpsWorksDescribeAppsOutputApps {
  AppId: String
  StackId: String
  Shortname: String
  Name: String
  Description: String
  DataSources: [AwsOpsWorksSi]
  Type: String
  AppSource: AwsOpsWorksSd
  Domains: [String]
  EnableSsl: Boolean
  SslConfiguration: AwsOpsWorksSl
  Attributes: JSON
  CreatedAt: String
  Environment: [AwsOpsWorksSo]
}

input AwsOpsWorksDescribeCommandsInput {
  DeploymentId: String
  InstanceId: String
  CommandIds: [String]
}

type AwsOpsWorksDescribeCommandsOutput {
  Commands: [AwsOpsWorksDescribeCommandsOutputCommands]
}

type AwsOpsWorksDescribeCommandsOutputCommands {
  CommandId: String
  InstanceId: String
  DeploymentId: String
  CreatedAt: String
  AcknowledgedAt: String
  CompletedAt: String
  Status: String
  ExitCode: Int
  LogUrl: String
  Type: String
}

input AwsOpsWorksDescribeDeploymentsInput {
  StackId: String
  AppId: String
  DeploymentIds: [String]
}

type AwsOpsWorksDescribeDeploymentsOutput {
  Deployments: [AwsOpsWorksDescribeDeploymentsOutputDeployments]
}

type AwsOpsWorksDescribeDeploymentsOutputDeployments {
  DeploymentId: String
  StackId: String
  AppId: String
  CreatedAt: String
  CompletedAt: String
  Duration: Int
  IamUserArn: String
  Comment: String
  Command: AwsOpsWorksSs
  Status: String
  CustomJson: String
  InstanceIds: [String]
}

input AwsOpsWorksDescribeEcsClustersInput {
  EcsClusterArns: [String]
  StackId: String
  NextToken: String
  MaxResults: Int
}

type AwsOpsWorksDescribeEcsClustersOutput {
  EcsClusters: [AwsOpsWorksDescribeEcsClustersOutputEcsClusters]
  NextToken: String
}

type AwsOpsWorksDescribeEcsClustersOutputEcsClusters {
  EcsClusterArn: String
  EcsClusterName: String
  StackId: String
  RegisteredAt: String
}

input AwsOpsWorksDescribeElasticIpsInput {
  InstanceId: String
  StackId: String
  Ips: [String]
}

type AwsOpsWorksDescribeElasticIpsOutput {
  ElasticIps: [AwsOpsWorksDescribeElasticIpsOutputElasticIps]
}

type AwsOpsWorksDescribeElasticIpsOutputElasticIps {
  Ip: String
  Name: String
  Domain: String
  Region: String
  InstanceId: String
}

input AwsOpsWorksDescribeElasticLoadBalancersInput {
  StackId: String
  LayerIds: [String]
}

type AwsOpsWorksDescribeElasticLoadBalancersOutput {
  ElasticLoadBalancers: [AwsOpsWorksDescribeElasticLoadBalancersOutputElasticLoadBalancers]
}

type AwsOpsWorksDescribeElasticLoadBalancersOutputElasticLoadBalancers {
  ElasticLoadBalancerName: String
  Region: String
  DnsName: String
  StackId: String
  LayerId: String
  VpcId: String
  AvailabilityZones: [String]
  SubnetIds: [String]
  Ec2InstanceIds: [String]
}

input AwsOpsWorksDescribeInstancesInput {
  StackId: String
  LayerId: String
  InstanceIds: [String]
}

type AwsOpsWorksDescribeInstancesOutput {
  Instances: [AwsOpsWorksDescribeInstancesOutputInstances]
}

type AwsOpsWorksDescribeInstancesOutputInstances {
  AgentVersion: String
  AmiId: String
  Architecture: String
  Arn: String
  AutoScalingType: String
  AvailabilityZone: String
  BlockDeviceMappings: [AwsOpsWorksSz]
  CreatedAt: String
  EbsOptimized: Boolean
  Ec2InstanceId: String
  EcsClusterArn: String
  EcsContainerInstanceArn: String
  ElasticIp: String
  Hostname: String
  InfrastructureClass: String
  InstallUpdatesOnBoot: Boolean
  InstanceId: String
  InstanceProfileArn: String
  InstanceType: String
  LastServiceErrorId: String
  LayerIds: [String]
  Os: String
  Platform: String
  PrivateDns: String
  PrivateIp: String
  PublicDns: String
  PublicIp: String
  RegisteredBy: String
  ReportedAgentVersion: String
  ReportedOs: AwsOpsWorksDescribeInstancesOutputInstancesReportedOs
  RootDeviceType: String
  RootDeviceVolumeId: String
  SecurityGroupIds: [String]
  SshHostDsaKeyFingerprint: String
  SshHostRsaKeyFingerprint: String
  SshKeyName: String
  StackId: String
  Status: String
  SubnetId: String
  Tenancy: String
  VirtualizationType: String
}

type AwsOpsWorksDescribeInstancesOutputInstancesReportedOs {
  Family: String
  Name: String
  Version: String
}

input AwsOpsWorksDescribeLayersInput {
  StackId: String
  LayerIds: [String]
}

type AwsOpsWorksDescribeLayersOutput {
  Layers: [AwsOpsWorksDescribeLayersOutputLayers]
}

type AwsOpsWorksDescribeLayersOutputLayers {
  Arn: String
  StackId: String
  LayerId: String
  Type: String
  Name: String
  Shortname: String
  Attributes: JSON
  CloudWatchLogsConfiguration: AwsOpsWorksS19
  CustomInstanceProfileArn: String
  CustomJson: String
  CustomSecurityGroupIds: [String]
  DefaultSecurityGroupNames: [String]
  Packages: [String]
  VolumeConfigurations: [AwsOpsWorksS1f]
  EnableAutoHealing: Boolean
  AutoAssignElasticIps: Boolean
  AutoAssignPublicIps: Boolean
  DefaultRecipes: AwsOpsWorksS1h
  CustomRecipes: AwsOpsWorksS1h
  CreatedAt: String
  InstallUpdatesOnBoot: Boolean
  UseEbsOptimizedInstances: Boolean
  LifecycleEventConfiguration: AwsOpsWorksS1i
}

input AwsOpsWorksDescribeLoadBasedAutoScalingInput {
  LayerIds: [String]!
}

type AwsOpsWorksDescribeLoadBasedAutoScalingOutput {
  LoadBasedAutoScalingConfigurations: [AwsOpsWorksDescribeLoadBasedAutoScalingOutputLoadBasedAutoScalingConfigurations]
}

type AwsOpsWorksDescribeLoadBasedAutoScalingOutputLoadBasedAutoScalingConfigurations {
  LayerId: String
  Enable: Boolean
  UpScaling: AwsOpsWorksS36
  DownScaling: AwsOpsWorksS36
}

type AwsOpsWorksDescribeMyUserProfileOutput {
  UserProfile: AwsOpsWorksDescribeMyUserProfileOutputUserProfile
}

type AwsOpsWorksDescribeMyUserProfileOutputUserProfile {
  IamUserArn: String
  Name: String
  SshUsername: String
  SshPublicKey: String
}

input AwsOpsWorksDescribePermissionsInput {
  IamUserArn: String
  StackId: String
}

type AwsOpsWorksDescribePermissionsOutput {
  Permissions: [AwsOpsWorksDescribePermissionsOutputPermissions]
}

type AwsOpsWorksDescribePermissionsOutputPermissions {
  StackId: String
  IamUserArn: String
  AllowSsh: Boolean
  AllowSudo: Boolean
  Level: String
}

input AwsOpsWorksDescribeRaidArraysInput {
  InstanceId: String
  StackId: String
  RaidArrayIds: [String]
}

type AwsOpsWorksDescribeRaidArraysOutput {
  RaidArrays: [AwsOpsWorksDescribeRaidArraysOutputRaidArrays]
}

type AwsOpsWorksDescribeRaidArraysOutputRaidArrays {
  RaidArrayId: String
  InstanceId: String
  Name: String
  RaidLevel: Int
  NumberOfDisks: Int
  Size: Int
  Device: String
  MountPoint: String
  AvailabilityZone: String
  CreatedAt: String
  StackId: String
  VolumeType: String
  Iops: Int
}

input AwsOpsWorksDescribeRdsDbInstancesInput {
  StackId: String!
  RdsDbInstanceArns: [String]
}

type AwsOpsWorksDescribeRdsDbInstancesOutput {
  RdsDbInstances: [AwsOpsWorksDescribeRdsDbInstancesOutputRdsDbInstances]
}

type AwsOpsWorksDescribeRdsDbInstancesOutputRdsDbInstances {
  RdsDbInstanceArn: String
  DbInstanceIdentifier: String
  DbUser: String
  DbPassword: String
  Region: String
  Address: String
  Engine: String
  StackId: String
  MissingOnRds: Boolean
}

input AwsOpsWorksDescribeServiceErrorsInput {
  StackId: String
  InstanceId: String
  ServiceErrorIds: [String]
}

type AwsOpsWorksDescribeServiceErrorsOutput {
  ServiceErrors: [AwsOpsWorksDescribeServiceErrorsOutputServiceErrors]
}

type AwsOpsWorksDescribeServiceErrorsOutputServiceErrors {
  ServiceErrorId: String
  StackId: String
  InstanceId: String
  Type: String
  Message: String
  CreatedAt: String
}

input AwsOpsWorksDescribeStackProvisioningParametersInput {
  StackId: String!
}

type AwsOpsWorksDescribeStackProvisioningParametersOutput {
  AgentInstallerUrl: String
  Parameters: JSON
}

input AwsOpsWorksDescribeStacksInput {
  StackIds: [String]
}

type AwsOpsWorksDescribeStacksOutput {
  Stacks: [AwsOpsWorksDescribeStacksOutputStacks]
}

type AwsOpsWorksDescribeStacksOutputStacks {
  StackId: String
  Name: String
  Arn: String
  Region: String
  VpcId: String
  Attributes: JSON
  ServiceRoleArn: String
  DefaultInstanceProfileArn: String
  DefaultOs: String
  HostnameTheme: String
  DefaultAvailabilityZone: String
  DefaultSubnetId: String
  CustomJson: String
  ConfigurationManager: AwsOpsWorksSa
  ChefConfiguration: AwsOpsWorksSb
  UseCustomCookbooks: Boolean
  UseOpsworksSecurityGroups: Boolean
  CustomCookbooksSource: AwsOpsWorksSd
  DefaultSshKeyName: String
  CreatedAt: String
  DefaultRootDeviceType: String
  AgentVersion: String
}

input AwsOpsWorksDescribeStackSummaryInput {
  StackId: String!
}

type AwsOpsWorksDescribeStackSummaryOutput {
  StackSummary: AwsOpsWorksDescribeStackSummaryOutputStackSummary
}

type AwsOpsWorksDescribeStackSummaryOutputStackSummary {
  StackId: String
  Name: String
  Arn: String
  LayersCount: Int
  AppsCount: Int
  InstancesCount: AwsOpsWorksDescribeStackSummaryOutputStackSummaryInstancesCount
}

type AwsOpsWorksDescribeStackSummaryOutputStackSummaryInstancesCount {
  Assigning: Int
  Booting: Int
  ConnectionLost: Int
  Deregistering: Int
  Online: Int
  Pending: Int
  Rebooting: Int
  Registered: Int
  Registering: Int
  Requested: Int
  RunningSetup: Int
  SetupFailed: Int
  ShuttingDown: Int
  StartFailed: Int
  Stopped: Int
  Stopping: Int
  Terminated: Int
  Terminating: Int
  Unassigning: Int
}

input AwsOpsWorksDescribeTimeBasedAutoScalingInput {
  InstanceIds: [String]!
}

type AwsOpsWorksDescribeTimeBasedAutoScalingOutput {
  TimeBasedAutoScalingConfigurations: [AwsOpsWorksDescribeTimeBasedAutoScalingOutputTimeBasedAutoScalingConfigurations]
}

type AwsOpsWorksDescribeTimeBasedAutoScalingOutputTimeBasedAutoScalingConfigurations {
  InstanceId: String
  AutoScalingSchedule: AwsOpsWorksS46
}

input AwsOpsWorksDescribeUserProfilesInput {
  IamUserArns: [String]
}

type AwsOpsWorksDescribeUserProfilesOutput {
  UserProfiles: [AwsOpsWorksDescribeUserProfilesOutputUserProfiles]
}

type AwsOpsWorksDescribeUserProfilesOutputUserProfiles {
  IamUserArn: String
  Name: String
  SshUsername: String
  SshPublicKey: String
  AllowSelfManagement: Boolean
}

input AwsOpsWorksDescribeVolumesInput {
  InstanceId: String
  StackId: String
  RaidArrayId: String
  VolumeIds: [String]
}

type AwsOpsWorksDescribeVolumesOutput {
  Volumes: [AwsOpsWorksDescribeVolumesOutputVolumes]
}

type AwsOpsWorksDescribeVolumesOutputVolumes {
  VolumeId: String
  Ec2VolumeId: String
  Name: String
  RaidArrayId: String
  InstanceId: String
  Status: String
  Size: Int
  Device: String
  MountPoint: String
  Region: String
  AvailabilityZone: String
  VolumeType: String
  Iops: Int
}

input AwsOpsWorksDetachElasticLoadBalancerInput {
  ElasticLoadBalancerName: String!
  LayerId: String!
}

input AwsOpsWorksDisassociateElasticIpInput {
  ElasticIp: String!
}

input AwsOpsWorksGetHostnameSuggestionInput {
  LayerId: String!
}

type AwsOpsWorksGetHostnameSuggestionOutput {
  LayerId: String
  Hostname: String
}

input AwsOpsWorksGrantAccessInput {
  InstanceId: String!
  ValidForInMinutes: Int
}

type AwsOpsWorksGrantAccessOutput {
  TemporaryCredential: AwsOpsWorksGrantAccessOutputTemporaryCredential
}

type AwsOpsWorksGrantAccessOutputTemporaryCredential {
  Username: String
  Password: String
  ValidForInMinutes: Int
  InstanceId: String
}

input AwsOpsWorksListTagsInput {
  ResourceArn: String!
  MaxResults: Int
  NextToken: String
}

type AwsOpsWorksListTagsOutput {
  Tags: JSON
  NextToken: String
}

input AwsOpsWorksRebootInstanceInput {
  InstanceId: String!
}

input AwsOpsWorksRegisterEcsClusterInput {
  EcsClusterArn: String!
  StackId: String!
}

type AwsOpsWorksRegisterEcsClusterOutput {
  EcsClusterArn: String
}

input AwsOpsWorksRegisterElasticIpInput {
  ElasticIp: String!
  StackId: String!
}

type AwsOpsWorksRegisterElasticIpOutput {
  ElasticIp: String
}

input AwsOpsWorksRegisterInstanceInput {
  StackId: String!
  Hostname: String
  PublicIp: String
  PrivateIp: String
  RsaPublicKey: String
  RsaPublicKeyFingerprint: String
  InstanceIdentity: AwsOpsWorksRegisterInstanceInstanceIdentityInput
}

input AwsOpsWorksRegisterInstanceInstanceIdentityInput {
  Document: String
  Signature: String
}

type AwsOpsWorksRegisterInstanceOutput {
  InstanceId: String
}

input AwsOpsWorksRegisterRdsDbInstanceInput {
  StackId: String!
  RdsDbInstanceArn: String!
  DbUser: String!
  DbPassword: String!
}

input AwsOpsWorksRegisterVolumeInput {
  Ec2VolumeId: String
  StackId: String!
}

type AwsOpsWorksRegisterVolumeOutput {
  VolumeId: String
}

type AwsOpsWorksS19 {
  Enabled: Boolean
  LogStreams: [AwsOpsWorksS19LogStreams]
}

input AwsOpsWorksS19Input {
  Enabled: Boolean
  LogStreams: [AwsOpsWorksS19LogStreamsInput]
}

type AwsOpsWorksS19LogStreams {
  LogGroupName: String
  DatetimeFormat: String
  TimeZone: String
  File: String
  FileFingerprintLines: String
  MultiLineStartPattern: String
  InitialPosition: String
  Encoding: String
  BufferDuration: Int
  BatchCount: Int
  BatchSize: Int
}

input AwsOpsWorksS19LogStreamsInput {
  LogGroupName: String
  DatetimeFormat: String
  TimeZone: String
  File: String
  FileFingerprintLines: String
  MultiLineStartPattern: String
  InitialPosition: String
  Encoding: String
  BufferDuration: Int
  BatchCount: Int
  BatchSize: Int
}

type AwsOpsWorksS1f {
  MountPoint: String!
  RaidLevel: Int
  NumberOfDisks: Int!
  Size: Int!
  VolumeType: String
  Iops: Int
}

input AwsOpsWorksS1fInput {
  MountPoint: String!
  RaidLevel: Int
  NumberOfDisks: Int!
  Size: Int!
  VolumeType: String
  Iops: Int
}

type AwsOpsWorksS1h {
  Setup: [String]
  Configure: [String]
  Deploy: [String]
  Undeploy: [String]
  Shutdown: [String]
}

input AwsOpsWorksS1hInput {
  Setup: [String]
  Configure: [String]
  Deploy: [String]
  Undeploy: [String]
  Shutdown: [String]
}

type AwsOpsWorksS1i {
  Shutdown: AwsOpsWorksS1iShutdown
}

input AwsOpsWorksS1iInput {
  Shutdown: AwsOpsWorksS1iShutdownInput
}

type AwsOpsWorksS1iShutdown {
  ExecutionTimeout: Int
  DelayUntilElbConnectionsDrained: Boolean
}

input AwsOpsWorksS1iShutdownInput {
  ExecutionTimeout: Int
  DelayUntilElbConnectionsDrained: Boolean
}

type AwsOpsWorksS36 {
  InstanceCount: Int
  ThresholdsWaitTime: Int
  IgnoreMetricsTime: Int
  CpuThreshold: JSON
  MemoryThreshold: JSON
  LoadThreshold: JSON
  Alarms: [String]
}

input AwsOpsWorksS36Input {
  InstanceCount: Int
  ThresholdsWaitTime: Int
  IgnoreMetricsTime: Int
  CpuThreshold: JSON
  MemoryThreshold: JSON
  LoadThreshold: JSON
  Alarms: [String]
}

type AwsOpsWorksS46 {
  Monday: JSON
  Tuesday: JSON
  Wednesday: JSON
  Thursday: JSON
  Friday: JSON
  Saturday: JSON
  Sunday: JSON
}

input AwsOpsWorksS46Input {
  Monday: JSON
  Tuesday: JSON
  Wednesday: JSON
  Thursday: JSON
  Friday: JSON
  Saturday: JSON
  Sunday: JSON
}

type AwsOpsWorksSa {
  Name: String
  Version: String
}

input AwsOpsWorksSaInput {
  Name: String
  Version: String
}

type AwsOpsWorksSb {
  ManageBerkshelf: Boolean
  BerkshelfVersion: String
}

input AwsOpsWorksSbInput {
  ManageBerkshelf: Boolean
  BerkshelfVersion: String
}

type AwsOpsWorksSd {
  Type: String
  Url: String
  Username: String
  Password: String
  SshKey: String
  Revision: String
}

input AwsOpsWorksSdInput {
  Type: String
  Url: String
  Username: String
  Password: String
  SshKey: String
  Revision: String
}

input AwsOpsWorksSetLoadBasedAutoScalingInput {
  LayerId: String!
  Enable: Boolean
  UpScaling: AwsOpsWorksS36Input
  DownScaling: AwsOpsWorksS36Input
}

input AwsOpsWorksSetPermissionInput {
  StackId: String!
  IamUserArn: String!
  AllowSsh: Boolean
  AllowSudo: Boolean
  Level: String
}

input AwsOpsWorksSetTimeBasedAutoScalingInput {
  InstanceId: String!
  AutoScalingSchedule: AwsOpsWorksS46Input
}

type AwsOpsWorksSi {
  Type: String
  Arn: String
  DatabaseName: String
}

input AwsOpsWorksSiInput {
  Type: String
  Arn: String
  DatabaseName: String
}

type AwsOpsWorksSl {
  Certificate: String!
  PrivateKey: String!
  Chain: String
}

input AwsOpsWorksSlInput {
  Certificate: String!
  PrivateKey: String!
  Chain: String
}

type AwsOpsWorksSo {
  Key: String!
  Value: String!
  Secure: Boolean
}

input AwsOpsWorksSoInput {
  Key: String!
  Value: String!
  Secure: Boolean
}

type AwsOpsWorksSs {
  Name: String!
  Args: JSON
}

input AwsOpsWorksSsInput {
  Name: String!
  Args: JSON
}

input AwsOpsWorksStartInstanceInput {
  InstanceId: String!
}

input AwsOpsWorksStartStackInput {
  StackId: String!
}

input AwsOpsWorksStopInstanceInput {
  InstanceId: String!
}

input AwsOpsWorksStopStackInput {
  StackId: String!
}

type AwsOpsWorksSz {
  DeviceName: String
  NoDevice: String
  VirtualName: String
  Ebs: AwsOpsWorksSzEbs
}

type AwsOpsWorksSzEbs {
  SnapshotId: String
  Iops: Int
  VolumeSize: Int
  VolumeType: String
  DeleteOnTermination: Boolean
}

input AwsOpsWorksSzEbsInput {
  SnapshotId: String
  Iops: Int
  VolumeSize: Int
  VolumeType: String
  DeleteOnTermination: Boolean
}

input AwsOpsWorksSzInput {
  DeviceName: String
  NoDevice: String
  VirtualName: String
  Ebs: AwsOpsWorksSzEbsInput
}

input AwsOpsWorksTagResourceInput {
  ResourceArn: String!
  Tags: JSON!
}

input AwsOpsWorksUnassignInstanceInput {
  InstanceId: String!
}

input AwsOpsWorksUnassignVolumeInput {
  VolumeId: String!
}

input AwsOpsWorksUntagResourceInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsOpsWorksUpdateAppInput {
  AppId: String!
  Name: String
  Description: String
  DataSources: [AwsOpsWorksSiInput]
  Type: String
  AppSource: AwsOpsWorksSdInput
  Domains: [String]
  EnableSsl: Boolean
  SslConfiguration: AwsOpsWorksSlInput
  Attributes: JSON
  Environment: [AwsOpsWorksSoInput]
}

input AwsOpsWorksUpdateElasticIpInput {
  ElasticIp: String!
  Name: String
}

input AwsOpsWorksUpdateInstanceInput {
  InstanceId: String!
  LayerIds: [String]
  InstanceType: String
  AutoScalingType: String
  Hostname: String
  Os: String
  AmiId: String
  SshKeyName: String
  Architecture: String
  InstallUpdatesOnBoot: Boolean
  EbsOptimized: Boolean
  AgentVersion: String
}

input AwsOpsWorksUpdateLayerInput {
  LayerId: String!
  Name: String
  Shortname: String
  Attributes: JSON
  CloudWatchLogsConfiguration: AwsOpsWorksS19Input
  CustomInstanceProfileArn: String
  CustomJson: String
  CustomSecurityGroupIds: [String]
  Packages: [String]
  VolumeConfigurations: [AwsOpsWorksS1fInput]
  EnableAutoHealing: Boolean
  AutoAssignElasticIps: Boolean
  AutoAssignPublicIps: Boolean
  CustomRecipes: AwsOpsWorksS1hInput
  InstallUpdatesOnBoot: Boolean
  UseEbsOptimizedInstances: Boolean
  LifecycleEventConfiguration: AwsOpsWorksS1iInput
}

input AwsOpsWorksUpdateMyUserProfileInput {
  SshPublicKey: String
}

input AwsOpsWorksUpdateRdsDbInstanceInput {
  RdsDbInstanceArn: String!
  DbUser: String
  DbPassword: String
}

input AwsOpsWorksUpdateStackInput {
  StackId: String!
  Name: String
  Attributes: JSON
  ServiceRoleArn: String
  DefaultInstanceProfileArn: String
  DefaultOs: String
  HostnameTheme: String
  DefaultAvailabilityZone: String
  DefaultSubnetId: String
  CustomJson: String
  ConfigurationManager: AwsOpsWorksSaInput
  ChefConfiguration: AwsOpsWorksSbInput
  UseCustomCookbooks: Boolean
  CustomCookbooksSource: AwsOpsWorksSdInput
  DefaultSshKeyName: String
  DefaultRootDeviceType: String
  UseOpsworksSecurityGroups: Boolean
  AgentVersion: String
}

input AwsOpsWorksUpdateUserProfileInput {
  IamUserArn: String!
  SshUsername: String
  SshPublicKey: String
  AllowSelfManagement: Boolean
}

input AwsOpsWorksUpdateVolumeInput {
  VolumeId: String!
  Name: String
  MountPoint: String
}

# AWS Organizations (2016-11-28)
type AwsOrganizations {
  acceptHandshake(input: AwsOrganizationsAcceptHandshakeInput!, config: AwsConfig): AwsOrganizationsAcceptHandshakeOutput
  attachPolicy(input: AwsOrganizationsAttachPolicyInput!, config: AwsConfig): JSON
  cancelHandshake(input: AwsOrganizationsCancelHandshakeInput!, config: AwsConfig): AwsOrganizationsCancelHandshakeOutput
  createAccount(input: AwsOrganizationsCreateAccountInput!, config: AwsConfig): AwsOrganizationsCreateAccountOutput
  createOrganization(input: AwsOrganizationsCreateOrganizationInput, config: AwsConfig): AwsOrganizationsCreateOrganizationOutput
  createOrganizationalUnit(input: AwsOrganizationsCreateOrganizationalUnitInput!, config: AwsConfig): AwsOrganizationsCreateOrganizationalUnitOutput
  createPolicy(input: AwsOrganizationsCreatePolicyInput!, config: AwsConfig): AwsOrganizationsCreatePolicyOutput
  declineHandshake(input: AwsOrganizationsDeclineHandshakeInput!, config: AwsConfig): AwsOrganizationsDeclineHandshakeOutput
  deleteOrganization(config: AwsConfig): JSON
  deleteOrganizationalUnit(input: AwsOrganizationsDeleteOrganizationalUnitInput!, config: AwsConfig): JSON
  deletePolicy(input: AwsOrganizationsDeletePolicyInput!, config: AwsConfig): JSON
  describeAccount(input: AwsOrganizationsDescribeAccountInput!, config: AwsConfig): AwsOrganizationsDescribeAccountOutput
  describeCreateAccountStatus(input: AwsOrganizationsDescribeCreateAccountStatusInput!, config: AwsConfig): AwsOrganizationsDescribeCreateAccountStatusOutput
  describeHandshake(input: AwsOrganizationsDescribeHandshakeInput!, config: AwsConfig): AwsOrganizationsDescribeHandshakeOutput
  describeOrganization(config: AwsConfig): AwsOrganizationsDescribeOrganizationOutput
  describeOrganizationalUnit(input: AwsOrganizationsDescribeOrganizationalUnitInput!, config: AwsConfig): AwsOrganizationsDescribeOrganizationalUnitOutput
  describePolicy(input: AwsOrganizationsDescribePolicyInput!, config: AwsConfig): AwsOrganizationsDescribePolicyOutput
  detachPolicy(input: AwsOrganizationsDetachPolicyInput!, config: AwsConfig): JSON
  disableAWSServiceAccess(input: AwsOrganizationsDisableAWSServiceAccessInput!, config: AwsConfig): JSON
  disablePolicyType(input: AwsOrganizationsDisablePolicyTypeInput!, config: AwsConfig): AwsOrganizationsDisablePolicyTypeOutput
  enableAWSServiceAccess(input: AwsOrganizationsEnableAWSServiceAccessInput!, config: AwsConfig): JSON
  enableAllFeatures(input: JSON, config: AwsConfig): AwsOrganizationsEnableAllFeaturesOutput
  enablePolicyType(input: AwsOrganizationsEnablePolicyTypeInput!, config: AwsConfig): AwsOrganizationsEnablePolicyTypeOutput
  inviteAccountToOrganization(input: AwsOrganizationsInviteAccountToOrganizationInput!, config: AwsConfig): AwsOrganizationsInviteAccountToOrganizationOutput
  leaveOrganization(config: AwsConfig): JSON
  listAWSServiceAccessForOrganization(input: AwsOrganizationsListAWSServiceAccessForOrganizationInput, config: AwsConfig): AwsOrganizationsListAWSServiceAccessForOrganizationOutput
  listAccounts(input: AwsOrganizationsListAccountsInput, config: AwsConfig): AwsOrganizationsListAccountsOutput
  listAccountsForParent(input: AwsOrganizationsListAccountsForParentInput!, config: AwsConfig): AwsOrganizationsListAccountsForParentOutput
  listChildren(input: AwsOrganizationsListChildrenInput!, config: AwsConfig): AwsOrganizationsListChildrenOutput
  listCreateAccountStatus(input: AwsOrganizationsListCreateAccountStatusInput, config: AwsConfig): AwsOrganizationsListCreateAccountStatusOutput
  listHandshakesForAccount(input: AwsOrganizationsListHandshakesForAccountInput, config: AwsConfig): AwsOrganizationsListHandshakesForAccountOutput
  listHandshakesForOrganization(input: AwsOrganizationsListHandshakesForOrganizationInput, config: AwsConfig): AwsOrganizationsListHandshakesForOrganizationOutput
  listOrganizationalUnitsForParent(input: AwsOrganizationsListOrganizationalUnitsForParentInput!, config: AwsConfig): AwsOrganizationsListOrganizationalUnitsForParentOutput
  listParents(input: AwsOrganizationsListParentsInput!, config: AwsConfig): AwsOrganizationsListParentsOutput
  listPolicies(input: AwsOrganizationsListPoliciesInput!, config: AwsConfig): AwsOrganizationsListPoliciesOutput
  listPoliciesForTarget(input: AwsOrganizationsListPoliciesForTargetInput!, config: AwsConfig): AwsOrganizationsListPoliciesForTargetOutput
  listRoots(input: AwsOrganizationsListRootsInput, config: AwsConfig): AwsOrganizationsListRootsOutput
  listTargetsForPolicy(input: AwsOrganizationsListTargetsForPolicyInput!, config: AwsConfig): AwsOrganizationsListTargetsForPolicyOutput
  moveAccount(input: AwsOrganizationsMoveAccountInput!, config: AwsConfig): JSON
  removeAccountFromOrganization(input: AwsOrganizationsRemoveAccountFromOrganizationInput!, config: AwsConfig): JSON
  updateOrganizationalUnit(input: AwsOrganizationsUpdateOrganizationalUnitInput!, config: AwsConfig): AwsOrganizationsUpdateOrganizationalUnitOutput
  updatePolicy(input: AwsOrganizationsUpdatePolicyInput!, config: AwsConfig): AwsOrganizationsUpdatePolicyOutput
}

input AwsOrganizationsAcceptHandshakeInput {
  HandshakeId: String!
}

type AwsOrganizationsAcceptHandshakeOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsAttachPolicyInput {
  PolicyId: String!
  TargetId: String!
}

input AwsOrganizationsCancelHandshakeInput {
  HandshakeId: String!
}

type AwsOrganizationsCancelHandshakeOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsCreateAccountInput {
  Email: String!
  AccountName: String!
  RoleName: String
  IamUserAccessToBilling: String
}

type AwsOrganizationsCreateAccountOutput {
  CreateAccountStatus: AwsOrganizationsSs
}

input AwsOrganizationsCreateOrganizationalUnitInput {
  ParentId: String!
  Name: String!
}

type AwsOrganizationsCreateOrganizationalUnitOutput {
  OrganizationalUnit: AwsOrganizationsS1c
}

input AwsOrganizationsCreateOrganizationInput {
  FeatureSet: String
}

type AwsOrganizationsCreateOrganizationOutput {
  Organization: AwsOrganizationsS10
}

input AwsOrganizationsCreatePolicyInput {
  Content: String!
  Description: String!
  Name: String!
  Type: String!
}

type AwsOrganizationsCreatePolicyOutput {
  Policy: AwsOrganizationsS1k
}

input AwsOrganizationsDeclineHandshakeInput {
  HandshakeId: String!
}

type AwsOrganizationsDeclineHandshakeOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsDeleteOrganizationalUnitInput {
  OrganizationalUnitId: String!
}

input AwsOrganizationsDeletePolicyInput {
  PolicyId: String!
}

input AwsOrganizationsDescribeAccountInput {
  AccountId: String!
}

type AwsOrganizationsDescribeAccountOutput {
  Account: AwsOrganizationsS1u
}

input AwsOrganizationsDescribeCreateAccountStatusInput {
  CreateAccountRequestId: String!
}

type AwsOrganizationsDescribeCreateAccountStatusOutput {
  CreateAccountStatus: AwsOrganizationsSs
}

input AwsOrganizationsDescribeHandshakeInput {
  HandshakeId: String!
}

type AwsOrganizationsDescribeHandshakeOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsDescribeOrganizationalUnitInput {
  OrganizationalUnitId: String!
}

type AwsOrganizationsDescribeOrganizationalUnitOutput {
  OrganizationalUnit: AwsOrganizationsS1c
}

type AwsOrganizationsDescribeOrganizationOutput {
  Organization: AwsOrganizationsS10
}

input AwsOrganizationsDescribePolicyInput {
  PolicyId: String!
}

type AwsOrganizationsDescribePolicyOutput {
  Policy: AwsOrganizationsS1k
}

input AwsOrganizationsDetachPolicyInput {
  PolicyId: String!
  TargetId: String!
}

input AwsOrganizationsDisableAWSServiceAccessInput {
  ServicePrincipal: String!
}

input AwsOrganizationsDisablePolicyTypeInput {
  RootId: String!
  PolicyType: String!
}

type AwsOrganizationsDisablePolicyTypeOutput {
  Root: AwsOrganizationsS2c
}

type AwsOrganizationsEnableAllFeaturesOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsEnableAWSServiceAccessInput {
  ServicePrincipal: String!
}

input AwsOrganizationsEnablePolicyTypeInput {
  RootId: String!
  PolicyType: String!
}

type AwsOrganizationsEnablePolicyTypeOutput {
  Root: AwsOrganizationsS2c
}

input AwsOrganizationsInviteAccountToOrganizationInput {
  Target: AwsOrganizationsS7Input!
  Notes: String
}

type AwsOrganizationsInviteAccountToOrganizationOutput {
  Handshake: AwsOrganizationsS4
}

input AwsOrganizationsListAccountsForParentInput {
  ParentId: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListAccountsForParentOutput {
  Accounts: [AwsOrganizationsS1u]
  NextToken: String
}

input AwsOrganizationsListAccountsInput {
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListAccountsOutput {
  Accounts: [AwsOrganizationsS1u]
  NextToken: String
}

input AwsOrganizationsListAWSServiceAccessForOrganizationInput {
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListAWSServiceAccessForOrganizationOutput {
  EnabledServicePrincipals: [AwsOrganizationsListAWSServiceAccessForOrganizationOutputEnabledServicePrincipals]
  NextToken: String
}

type AwsOrganizationsListAWSServiceAccessForOrganizationOutputEnabledServicePrincipals {
  ServicePrincipal: String
  DateEnabled: Date
}

input AwsOrganizationsListChildrenInput {
  ParentId: String!
  ChildType: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListChildrenOutput {
  Children: [AwsOrganizationsListChildrenOutputChildren]
  NextToken: String
}

type AwsOrganizationsListChildrenOutputChildren {
  Id: String
  Type: String
}

input AwsOrganizationsListCreateAccountStatusInput {
  States: [String]
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListCreateAccountStatusOutput {
  CreateAccountStatuses: [AwsOrganizationsSs]
  NextToken: String
}

input AwsOrganizationsListHandshakesForAccountInput {
  Filter: AwsOrganizationsS39Input
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListHandshakesForAccountOutput {
  Handshakes: [AwsOrganizationsS4]
  NextToken: String
}

input AwsOrganizationsListHandshakesForOrganizationInput {
  Filter: AwsOrganizationsS39Input
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListHandshakesForOrganizationOutput {
  Handshakes: [AwsOrganizationsS4]
  NextToken: String
}

input AwsOrganizationsListOrganizationalUnitsForParentInput {
  ParentId: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListOrganizationalUnitsForParentOutput {
  OrganizationalUnits: [AwsOrganizationsS1c]
  NextToken: String
}

input AwsOrganizationsListParentsInput {
  ChildId: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListParentsOutput {
  Parents: [AwsOrganizationsListParentsOutputParents]
  NextToken: String
}

type AwsOrganizationsListParentsOutputParents {
  Id: String
  Type: String
}

input AwsOrganizationsListPoliciesForTargetInput {
  TargetId: String!
  Filter: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListPoliciesForTargetOutput {
  Policies: [AwsOrganizationsS1l]
  NextToken: String
}

input AwsOrganizationsListPoliciesInput {
  Filter: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListPoliciesOutput {
  Policies: [AwsOrganizationsS1l]
  NextToken: String
}

input AwsOrganizationsListRootsInput {
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListRootsOutput {
  Roots: [AwsOrganizationsS2c]
  NextToken: String
}

input AwsOrganizationsListTargetsForPolicyInput {
  PolicyId: String!
  NextToken: String
  MaxResults: Int
}

type AwsOrganizationsListTargetsForPolicyOutput {
  Targets: [AwsOrganizationsListTargetsForPolicyOutputTargets]
  NextToken: String
}

type AwsOrganizationsListTargetsForPolicyOutputTargets {
  TargetId: String
  Arn: String
  Name: String
  Type: String
}

input AwsOrganizationsMoveAccountInput {
  AccountId: String!
  SourceParentId: String!
  DestinationParentId: String!
}

input AwsOrganizationsRemoveAccountFromOrganizationInput {
  AccountId: String!
}

type AwsOrganizationsS10 {
  Id: String
  Arn: String
  FeatureSet: String
  MasterAccountArn: String
  MasterAccountId: String
  MasterAccountEmail: String
  AvailablePolicyTypes: [AwsOrganizationsS14]
}

type AwsOrganizationsS14 {
  Type: String
  Status: String
}

type AwsOrganizationsS1c {
  Id: String
  Arn: String
  Name: String
}

type AwsOrganizationsS1k {
  PolicySummary: AwsOrganizationsS1l
  Content: String
}

type AwsOrganizationsS1l {
  Id: String
  Arn: String
  Name: String
  Description: String
  Type: String
  AwsManaged: Boolean
}

type AwsOrganizationsS1u {
  Id: String
  Arn: String
  Email: String
  Name: String
  Status: String
  JoinedMethod: String
  JoinedTimestamp: Date
}

type AwsOrganizationsS2c {
  Id: String
  Arn: String
  Name: String
  PolicyTypes: [AwsOrganizationsS14]
}

input AwsOrganizationsS39Input {
  ActionType: String
  ParentHandshakeId: String
}

type AwsOrganizationsS4 {
  Id: String
  Arn: String
  Parties: [AwsOrganizationsS7]
  State: String
  RequestedTimestamp: Date
  ExpirationTimestamp: Date
  Action: String
  Resources: [AwsOrganizationsSd]
}

type AwsOrganizationsS7 {
  Id: String!
  Type: String!
}

input AwsOrganizationsS7Input {
  Id: String!
  Type: String!
}

type AwsOrganizationsSd {
  Value: String
  Type: String
  Resources: JSON
}

type AwsOrganizationsSs {
  Id: String
  AccountName: String
  State: String
  RequestedTimestamp: Date
  CompletedTimestamp: Date
  AccountId: String
  FailureReason: String
}

input AwsOrganizationsUpdateOrganizationalUnitInput {
  OrganizationalUnitId: String!
  Name: String
}

type AwsOrganizationsUpdateOrganizationalUnitOutput {
  OrganizationalUnit: AwsOrganizationsS1c
}

input AwsOrganizationsUpdatePolicyInput {
  PolicyId: String!
  Name: String
  Description: String
  Content: String
}

type AwsOrganizationsUpdatePolicyOutput {
  Policy: AwsOrganizationsS1k
}

# Amazon Pinpoint (2016-12-01)
type AwsPinpoint {
  createApp(input: AwsPinpointCreateAppInput!, config: AwsConfig): AwsPinpointCreateAppOutput
  createCampaign(input: AwsPinpointCreateCampaignInput!, config: AwsConfig): AwsPinpointCreateCampaignOutput
  createImportJob(input: AwsPinpointCreateImportJobInput!, config: AwsConfig): AwsPinpointCreateImportJobOutput
  createSegment(input: AwsPinpointCreateSegmentInput!, config: AwsConfig): AwsPinpointCreateSegmentOutput
  deleteAdmChannel(input: AwsPinpointDeleteAdmChannelInput!, config: AwsConfig): AwsPinpointDeleteAdmChannelOutput
  deleteApnsChannel(input: AwsPinpointDeleteApnsChannelInput!, config: AwsConfig): AwsPinpointDeleteApnsChannelOutput
  deleteApnsSandboxChannel(input: AwsPinpointDeleteApnsSandboxChannelInput!, config: AwsConfig): AwsPinpointDeleteApnsSandboxChannelOutput
  deleteApnsVoipChannel(input: AwsPinpointDeleteApnsVoipChannelInput!, config: AwsConfig): AwsPinpointDeleteApnsVoipChannelOutput
  deleteApnsVoipSandboxChannel(input: AwsPinpointDeleteApnsVoipSandboxChannelInput!, config: AwsConfig): AwsPinpointDeleteApnsVoipSandboxChannelOutput
  deleteApp(input: AwsPinpointDeleteAppInput!, config: AwsConfig): AwsPinpointDeleteAppOutput
  deleteBaiduChannel(input: AwsPinpointDeleteBaiduChannelInput!, config: AwsConfig): AwsPinpointDeleteBaiduChannelOutput
  deleteCampaign(input: AwsPinpointDeleteCampaignInput!, config: AwsConfig): AwsPinpointDeleteCampaignOutput
  deleteEmailChannel(input: AwsPinpointDeleteEmailChannelInput!, config: AwsConfig): AwsPinpointDeleteEmailChannelOutput
  deleteEventStream(input: AwsPinpointDeleteEventStreamInput!, config: AwsConfig): AwsPinpointDeleteEventStreamOutput
  deleteGcmChannel(input: AwsPinpointDeleteGcmChannelInput!, config: AwsConfig): AwsPinpointDeleteGcmChannelOutput
  deleteSegment(input: AwsPinpointDeleteSegmentInput!, config: AwsConfig): AwsPinpointDeleteSegmentOutput
  deleteSmsChannel(input: AwsPinpointDeleteSmsChannelInput!, config: AwsConfig): AwsPinpointDeleteSmsChannelOutput
  getAdmChannel(input: AwsPinpointGetAdmChannelInput!, config: AwsConfig): AwsPinpointGetAdmChannelOutput
  getApnsChannel(input: AwsPinpointGetApnsChannelInput!, config: AwsConfig): AwsPinpointGetApnsChannelOutput
  getApnsSandboxChannel(input: AwsPinpointGetApnsSandboxChannelInput!, config: AwsConfig): AwsPinpointGetApnsSandboxChannelOutput
  getApnsVoipChannel(input: AwsPinpointGetApnsVoipChannelInput!, config: AwsConfig): AwsPinpointGetApnsVoipChannelOutput
  getApnsVoipSandboxChannel(input: AwsPinpointGetApnsVoipSandboxChannelInput!, config: AwsConfig): AwsPinpointGetApnsVoipSandboxChannelOutput
  getApp(input: AwsPinpointGetAppInput!, config: AwsConfig): AwsPinpointGetAppOutput
  getApplicationSettings(input: AwsPinpointGetApplicationSettingsInput!, config: AwsConfig): AwsPinpointGetApplicationSettingsOutput
  getApps(input: AwsPinpointGetAppsInput, config: AwsConfig): AwsPinpointGetAppsOutput
  getBaiduChannel(input: AwsPinpointGetBaiduChannelInput!, config: AwsConfig): AwsPinpointGetBaiduChannelOutput
  getCampaign(input: AwsPinpointGetCampaignInput!, config: AwsConfig): AwsPinpointGetCampaignOutput
  getCampaignActivities(input: AwsPinpointGetCampaignActivitiesInput!, config: AwsConfig): AwsPinpointGetCampaignActivitiesOutput
  getCampaignVersion(input: AwsPinpointGetCampaignVersionInput!, config: AwsConfig): AwsPinpointGetCampaignVersionOutput
  getCampaignVersions(input: AwsPinpointGetCampaignVersionsInput!, config: AwsConfig): AwsPinpointGetCampaignVersionsOutput
  getCampaigns(input: AwsPinpointGetCampaignsInput!, config: AwsConfig): AwsPinpointGetCampaignsOutput
  getEmailChannel(input: AwsPinpointGetEmailChannelInput!, config: AwsConfig): AwsPinpointGetEmailChannelOutput
  getEndpoint(input: AwsPinpointGetEndpointInput!, config: AwsConfig): AwsPinpointGetEndpointOutput
  getEventStream(input: AwsPinpointGetEventStreamInput!, config: AwsConfig): AwsPinpointGetEventStreamOutput
  getGcmChannel(input: AwsPinpointGetGcmChannelInput!, config: AwsConfig): AwsPinpointGetGcmChannelOutput
  getImportJob(input: AwsPinpointGetImportJobInput!, config: AwsConfig): AwsPinpointGetImportJobOutput
  getImportJobs(input: AwsPinpointGetImportJobsInput!, config: AwsConfig): AwsPinpointGetImportJobsOutput
  getSegment(input: AwsPinpointGetSegmentInput!, config: AwsConfig): AwsPinpointGetSegmentOutput
  getSegmentImportJobs(input: AwsPinpointGetSegmentImportJobsInput!, config: AwsConfig): AwsPinpointGetSegmentImportJobsOutput
  getSegmentVersion(input: AwsPinpointGetSegmentVersionInput!, config: AwsConfig): AwsPinpointGetSegmentVersionOutput
  getSegmentVersions(input: AwsPinpointGetSegmentVersionsInput!, config: AwsConfig): AwsPinpointGetSegmentVersionsOutput
  getSegments(input: AwsPinpointGetSegmentsInput!, config: AwsConfig): AwsPinpointGetSegmentsOutput
  getSmsChannel(input: AwsPinpointGetSmsChannelInput!, config: AwsConfig): AwsPinpointGetSmsChannelOutput
  putEventStream(input: AwsPinpointPutEventStreamInput!, config: AwsConfig): AwsPinpointPutEventStreamOutput
  sendMessages(input: AwsPinpointSendMessagesInput!, config: AwsConfig): AwsPinpointSendMessagesOutput
  sendUsersMessages(input: AwsPinpointSendUsersMessagesInput!, config: AwsConfig): AwsPinpointSendUsersMessagesOutput
  updateAdmChannel(input: AwsPinpointUpdateAdmChannelInput!, config: AwsConfig): AwsPinpointUpdateAdmChannelOutput
  updateApnsChannel(input: AwsPinpointUpdateApnsChannelInput!, config: AwsConfig): AwsPinpointUpdateApnsChannelOutput
  updateApnsSandboxChannel(input: AwsPinpointUpdateApnsSandboxChannelInput!, config: AwsConfig): AwsPinpointUpdateApnsSandboxChannelOutput
  updateApnsVoipChannel(input: AwsPinpointUpdateApnsVoipChannelInput!, config: AwsConfig): AwsPinpointUpdateApnsVoipChannelOutput
  updateApnsVoipSandboxChannel(input: AwsPinpointUpdateApnsVoipSandboxChannelInput!, config: AwsConfig): AwsPinpointUpdateApnsVoipSandboxChannelOutput
  updateApplicationSettings(input: AwsPinpointUpdateApplicationSettingsInput!, config: AwsConfig): AwsPinpointUpdateApplicationSettingsOutput
  updateBaiduChannel(input: AwsPinpointUpdateBaiduChannelInput!, config: AwsConfig): AwsPinpointUpdateBaiduChannelOutput
  updateCampaign(input: AwsPinpointUpdateCampaignInput!, config: AwsConfig): AwsPinpointUpdateCampaignOutput
  updateEmailChannel(input: AwsPinpointUpdateEmailChannelInput!, config: AwsConfig): AwsPinpointUpdateEmailChannelOutput
  updateEndpoint(input: AwsPinpointUpdateEndpointInput!, config: AwsConfig): AwsPinpointUpdateEndpointOutput
  updateEndpointsBatch(input: AwsPinpointUpdateEndpointsBatchInput!, config: AwsConfig): AwsPinpointUpdateEndpointsBatchOutput
  updateGcmChannel(input: AwsPinpointUpdateGcmChannelInput!, config: AwsConfig): AwsPinpointUpdateGcmChannelOutput
  updateSegment(input: AwsPinpointUpdateSegmentInput!, config: AwsConfig): AwsPinpointUpdateSegmentOutput
  updateSmsChannel(input: AwsPinpointUpdateSmsChannelInput!, config: AwsConfig): AwsPinpointUpdateSmsChannelOutput
}

input AwsPinpointCreateAppCreateApplicationRequestInput {
  Name: String
}

input AwsPinpointCreateAppInput {
  CreateApplicationRequest: AwsPinpointCreateAppCreateApplicationRequestInput!
}

type AwsPinpointCreateAppOutput {
  ApplicationResponse: AwsPinpointS5!
}

input AwsPinpointCreateCampaignInput {
  ApplicationId: String!
  WriteCampaignRequest: AwsPinpointS7Input!
}

type AwsPinpointCreateCampaignOutput {
  CampaignResponse: AwsPinpointSn!
}

input AwsPinpointCreateImportJobImportJobRequestInput {
  DefineSegment: Boolean
  ExternalId: String
  Format: String
  RegisterEndpoints: Boolean
  RoleArn: String
  S3Url: String
  SegmentId: String
  SegmentName: String
}

input AwsPinpointCreateImportJobInput {
  ApplicationId: String!
  ImportJobRequest: AwsPinpointCreateImportJobImportJobRequestInput!
}

type AwsPinpointCreateImportJobOutput {
  ImportJobResponse: AwsPinpointSw!
}

input AwsPinpointCreateSegmentInput {
  ApplicationId: String!
  WriteSegmentRequest: AwsPinpointS11Input!
}

type AwsPinpointCreateSegmentOutput {
  SegmentResponse: AwsPinpointS1f!
}

input AwsPinpointDeleteAdmChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteAdmChannelOutput {
  ADMChannelResponse: AwsPinpointS1l!
}

input AwsPinpointDeleteApnsChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteApnsChannelOutput {
  APNSChannelResponse: AwsPinpointS1o!
}

input AwsPinpointDeleteApnsSandboxChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteApnsSandboxChannelOutput {
  APNSSandboxChannelResponse: AwsPinpointS1r!
}

input AwsPinpointDeleteApnsVoipChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteApnsVoipChannelOutput {
  APNSVoipChannelResponse: AwsPinpointS1u!
}

input AwsPinpointDeleteApnsVoipSandboxChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteApnsVoipSandboxChannelOutput {
  APNSVoipSandboxChannelResponse: AwsPinpointS1x!
}

input AwsPinpointDeleteAppInput {
  ApplicationId: String!
}

type AwsPinpointDeleteAppOutput {
  ApplicationResponse: AwsPinpointS5!
}

input AwsPinpointDeleteBaiduChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteBaiduChannelOutput {
  BaiduChannelResponse: AwsPinpointS22!
}

input AwsPinpointDeleteCampaignInput {
  ApplicationId: String!
  CampaignId: String!
}

type AwsPinpointDeleteCampaignOutput {
  CampaignResponse: AwsPinpointSn!
}

input AwsPinpointDeleteEmailChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteEmailChannelOutput {
  EmailChannelResponse: AwsPinpointS27!
}

input AwsPinpointDeleteEventStreamInput {
  ApplicationId: String!
}

type AwsPinpointDeleteEventStreamOutput {
  EventStream: AwsPinpointS2a!
}

input AwsPinpointDeleteGcmChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteGcmChannelOutput {
  GCMChannelResponse: AwsPinpointS2d!
}

input AwsPinpointDeleteSegmentInput {
  ApplicationId: String!
  SegmentId: String!
}

type AwsPinpointDeleteSegmentOutput {
  SegmentResponse: AwsPinpointS1f!
}

input AwsPinpointDeleteSmsChannelInput {
  ApplicationId: String!
}

type AwsPinpointDeleteSmsChannelOutput {
  SMSChannelResponse: AwsPinpointS2i!
}

input AwsPinpointGetAdmChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetAdmChannelOutput {
  ADMChannelResponse: AwsPinpointS1l!
}

input AwsPinpointGetApnsChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetApnsChannelOutput {
  APNSChannelResponse: AwsPinpointS1o!
}

input AwsPinpointGetApnsSandboxChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetApnsSandboxChannelOutput {
  APNSSandboxChannelResponse: AwsPinpointS1r!
}

input AwsPinpointGetApnsVoipChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetApnsVoipChannelOutput {
  APNSVoipChannelResponse: AwsPinpointS1u!
}

input AwsPinpointGetApnsVoipSandboxChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetApnsVoipSandboxChannelOutput {
  APNSVoipSandboxChannelResponse: AwsPinpointS1x!
}

input AwsPinpointGetAppInput {
  ApplicationId: String!
}

input AwsPinpointGetApplicationSettingsInput {
  ApplicationId: String!
}

type AwsPinpointGetApplicationSettingsOutput {
  ApplicationSettingsResource: AwsPinpointS2x!
}

type AwsPinpointGetAppOutput {
  ApplicationResponse: AwsPinpointS5!
}

input AwsPinpointGetAppsInput {
  PageSize: String
  Token: String
}

type AwsPinpointGetAppsOutput {
  ApplicationsResponse: AwsPinpointGetAppsOutputApplicationsResponse!
}

type AwsPinpointGetAppsOutputApplicationsResponse {
  Item: [AwsPinpointS5]
  NextToken: String
}

input AwsPinpointGetBaiduChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetBaiduChannelOutput {
  BaiduChannelResponse: AwsPinpointS22!
}

input AwsPinpointGetCampaignActivitiesInput {
  ApplicationId: String!
  CampaignId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetCampaignActivitiesOutput {
  ActivitiesResponse: AwsPinpointGetCampaignActivitiesOutputActivitiesResponse!
}

type AwsPinpointGetCampaignActivitiesOutputActivitiesResponse {
  Item: [AwsPinpointGetCampaignActivitiesOutputActivitiesResponseItem]
}

type AwsPinpointGetCampaignActivitiesOutputActivitiesResponseItem {
  ApplicationId: String
  CampaignId: String
  End: String
  Id: String
  Result: String
  ScheduledStart: String
  Start: String
  State: String
  SuccessfulEndpointCount: Int
  TimezonesCompletedCount: Int
  TimezonesTotalCount: Int
  TotalEndpointCount: Int
  TreatmentId: String
}

input AwsPinpointGetCampaignInput {
  ApplicationId: String!
  CampaignId: String!
}

type AwsPinpointGetCampaignOutput {
  CampaignResponse: AwsPinpointSn!
}

input AwsPinpointGetCampaignsInput {
  ApplicationId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetCampaignsOutput {
  CampaignsResponse: AwsPinpointS3f!
}

input AwsPinpointGetCampaignVersionInput {
  ApplicationId: String!
  CampaignId: String!
  Version: String!
}

type AwsPinpointGetCampaignVersionOutput {
  CampaignResponse: AwsPinpointSn!
}

input AwsPinpointGetCampaignVersionsInput {
  ApplicationId: String!
  CampaignId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetCampaignVersionsOutput {
  CampaignsResponse: AwsPinpointS3f!
}

input AwsPinpointGetEmailChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetEmailChannelOutput {
  EmailChannelResponse: AwsPinpointS27!
}

input AwsPinpointGetEndpointInput {
  ApplicationId: String!
  EndpointId: String!
}

type AwsPinpointGetEndpointOutput {
  EndpointResponse: AwsPinpointGetEndpointOutputEndpointResponse!
}

type AwsPinpointGetEndpointOutputEndpointResponse {
  Address: String
  ApplicationId: String
  Attributes: JSON
  ChannelType: String
  CohortId: String
  CreationDate: String
  Demographic: AwsPinpointS3q
  EffectiveDate: String
  EndpointStatus: String
  Id: String
  Location: AwsPinpointS3r
  Metrics: JSON
  OptOut: String
  RequestId: String
  User: AwsPinpointS3u
}

input AwsPinpointGetEventStreamInput {
  ApplicationId: String!
}

type AwsPinpointGetEventStreamOutput {
  EventStream: AwsPinpointS2a!
}

input AwsPinpointGetGcmChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetGcmChannelOutput {
  GCMChannelResponse: AwsPinpointS2d!
}

input AwsPinpointGetImportJobInput {
  ApplicationId: String!
  JobId: String!
}

type AwsPinpointGetImportJobOutput {
  ImportJobResponse: AwsPinpointSw!
}

input AwsPinpointGetImportJobsInput {
  ApplicationId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetImportJobsOutput {
  ImportJobsResponse: AwsPinpointS43!
}

input AwsPinpointGetSegmentImportJobsInput {
  ApplicationId: String!
  PageSize: String
  SegmentId: String!
  Token: String
}

type AwsPinpointGetSegmentImportJobsOutput {
  ImportJobsResponse: AwsPinpointS43!
}

input AwsPinpointGetSegmentInput {
  ApplicationId: String!
  SegmentId: String!
}

type AwsPinpointGetSegmentOutput {
  SegmentResponse: AwsPinpointS1f!
}

input AwsPinpointGetSegmentsInput {
  ApplicationId: String!
  PageSize: String
  Token: String
}

type AwsPinpointGetSegmentsOutput {
  SegmentsResponse: AwsPinpointS4d!
}

input AwsPinpointGetSegmentVersionInput {
  ApplicationId: String!
  SegmentId: String!
  Version: String!
}

type AwsPinpointGetSegmentVersionOutput {
  SegmentResponse: AwsPinpointS1f!
}

input AwsPinpointGetSegmentVersionsInput {
  ApplicationId: String!
  PageSize: String
  SegmentId: String!
  Token: String
}

type AwsPinpointGetSegmentVersionsOutput {
  SegmentsResponse: AwsPinpointS4d!
}

input AwsPinpointGetSmsChannelInput {
  ApplicationId: String!
}

type AwsPinpointGetSmsChannelOutput {
  SMSChannelResponse: AwsPinpointS2i!
}

input AwsPinpointPutEventStreamInput {
  ApplicationId: String!
  WriteEventStream: AwsPinpointPutEventStreamWriteEventStreamInput!
}

type AwsPinpointPutEventStreamOutput {
  EventStream: AwsPinpointS2a!
}

input AwsPinpointPutEventStreamWriteEventStreamInput {
  DestinationStreamArn: String
  RoleArn: String
}

input AwsPinpointS11Input {
  Dimensions: AwsPinpointS12Input
  Name: String
}

type AwsPinpointS12 {
  Attributes: JSON
  Behavior: AwsPinpointS12Behavior
  Demographic: AwsPinpointS12Demographic
  Location: AwsPinpointS12Location
  UserAttributes: JSON
}

type AwsPinpointS12Behavior {
  Recency: AwsPinpointS12BehaviorRecency
}

input AwsPinpointS12BehaviorInput {
  Recency: AwsPinpointS12BehaviorRecencyInput
}

type AwsPinpointS12BehaviorRecency {
  Duration: String
  RecencyType: String
}

input AwsPinpointS12BehaviorRecencyInput {
  Duration: String
  RecencyType: String
}

type AwsPinpointS12Demographic {
  AppVersion: AwsPinpointS1b
  Channel: AwsPinpointS1b
  DeviceType: AwsPinpointS1b
  Make: AwsPinpointS1b
  Model: AwsPinpointS1b
  Platform: AwsPinpointS1b
}

input AwsPinpointS12DemographicInput {
  AppVersion: AwsPinpointS1bInput
  Channel: AwsPinpointS1bInput
  DeviceType: AwsPinpointS1bInput
  Make: AwsPinpointS1bInput
  Model: AwsPinpointS1bInput
  Platform: AwsPinpointS1bInput
}

input AwsPinpointS12Input {
  Attributes: JSON
  Behavior: AwsPinpointS12BehaviorInput
  Demographic: AwsPinpointS12DemographicInput
  Location: AwsPinpointS12LocationInput
  UserAttributes: JSON
}

type AwsPinpointS12Location {
  Country: AwsPinpointS1b
}

input AwsPinpointS12LocationInput {
  Country: AwsPinpointS1bInput
}

type AwsPinpointS1b {
  DimensionType: String
  Values: [String]
}

input AwsPinpointS1bInput {
  DimensionType: String
  Values: [String]
}

type AwsPinpointS1f {
  ApplicationId: String
  CreationDate: String
  Dimensions: AwsPinpointS12
  Id: String
  ImportDefinition: AwsPinpointS1fImportDefinition
  LastModifiedDate: String
  Name: String
  SegmentType: String
  Version: Int
}

type AwsPinpointS1fImportDefinition {
  ChannelCounts: JSON
  ExternalId: String
  Format: String
  RoleArn: String
  S3Url: String
  Size: Int
}

type AwsPinpointS1l {
  ApplicationId: String
  CreationDate: String
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS1o {
  ApplicationId: String
  CreationDate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  HasCredential: Boolean
  HasTokenKey: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS1r {
  ApplicationId: String
  CreationDate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  HasCredential: Boolean
  HasTokenKey: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS1u {
  ApplicationId: String
  CreationDate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  HasCredential: Boolean
  HasTokenKey: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS1x {
  ApplicationId: String
  CreationDate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  HasCredential: Boolean
  HasTokenKey: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS22 {
  ApplicationId: String
  CreationDate: String
  Credential: String
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS27 {
  ApplicationId: String
  CreationDate: String
  Enabled: Boolean
  FromAddress: String
  HasCredential: Boolean
  Id: String
  Identity: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  RoleArn: String
  Version: Int
}

type AwsPinpointS2a {
  ApplicationId: String
  DestinationStreamArn: String
  ExternalId: String
  LastModifiedDate: String
  LastUpdatedBy: String
  RoleArn: String
}

type AwsPinpointS2d {
  ApplicationId: String
  CreationDate: String
  Credential: String
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  Version: Int
}

type AwsPinpointS2i {
  ApplicationId: String
  CreationDate: String
  Enabled: Boolean
  HasCredential: Boolean
  Id: String
  IsArchived: Boolean
  LastModifiedBy: String
  LastModifiedDate: String
  Platform: String
  SenderId: String
  ShortCode: String
  Version: Int
}

type AwsPinpointS2x {
  ApplicationId: String
  LastModifiedDate: String
  Limits: AwsPinpointSl
  QuietTime: AwsPinpointSj
}

type AwsPinpointS3f {
  Item: [AwsPinpointSn]
  NextToken: String
}

type AwsPinpointS3q {
  AppVersion: String
  Locale: String
  Make: String
  Model: String
  ModelVersion: String
  Platform: String
  PlatformVersion: String
  Timezone: String
}

input AwsPinpointS3qInput {
  AppVersion: String
  Locale: String
  Make: String
  Model: String
  ModelVersion: String
  Platform: String
  PlatformVersion: String
  Timezone: String
}

type AwsPinpointS3r {
  City: String
  Country: String
  Latitude: JSON
  Longitude: JSON
  PostalCode: String
  Region: String
}

input AwsPinpointS3rInput {
  City: String
  Country: String
  Latitude: JSON
  Longitude: JSON
  PostalCode: String
  Region: String
}

type AwsPinpointS3u {
  UserAttributes: JSON
  UserId: String
}

input AwsPinpointS3uInput {
  UserAttributes: JSON
  UserId: String
}

type AwsPinpointS43 {
  Item: [AwsPinpointSw]
  NextToken: String
}

type AwsPinpointS4d {
  Item: [AwsPinpointS1f]
  NextToken: String
}

input AwsPinpointS4tADMMessageInput {
  Action: String
  Body: String
  ConsolidationKey: String
  Data: JSON
  ExpiresAfter: String
  IconReference: String
  ImageIconUrl: String
  ImageUrl: String
  MD5: String
  RawContent: String
  SilentPush: Boolean
  SmallImageIconUrl: String
  Sound: String
  Substitutions: JSON
  Title: String
  Url: String
}

input AwsPinpointS4tAPNSMessageInput {
  Action: String
  Badge: Int
  Body: String
  Category: String
  CollapseId: String
  Data: JSON
  MediaUrl: String
  PreferredAuthenticationMethod: String
  Priority: String
  RawContent: String
  SilentPush: Boolean
  Sound: String
  Substitutions: JSON
  ThreadId: String
  TimeToLive: Int
  Title: String
  Url: String
}

input AwsPinpointS4tBaiduMessageInput {
  Action: String
  Body: String
  Data: JSON
  IconReference: String
  ImageIconUrl: String
  ImageUrl: String
  RawContent: String
  SilentPush: Boolean
  SmallImageIconUrl: String
  Sound: String
  Substitutions: JSON
  Title: String
  Url: String
}

input AwsPinpointS4tDefaultMessageInput {
  Body: String
  Substitutions: JSON
}

input AwsPinpointS4tDefaultPushNotificationMessageInput {
  Action: String
  Body: String
  Data: JSON
  SilentPush: Boolean
  Substitutions: JSON
  Title: String
  Url: String
}

input AwsPinpointS4tGCMMessageInput {
  Action: String
  Body: String
  CollapseKey: String
  Data: JSON
  IconReference: String
  ImageIconUrl: String
  ImageUrl: String
  Priority: String
  RawContent: String
  RestrictedPackageName: String
  SilentPush: Boolean
  SmallImageIconUrl: String
  Sound: String
  Substitutions: JSON
  TimeToLive: Int
  Title: String
  Url: String
}

input AwsPinpointS4tInput {
  ADMMessage: AwsPinpointS4tADMMessageInput
  APNSMessage: AwsPinpointS4tAPNSMessageInput
  BaiduMessage: AwsPinpointS4tBaiduMessageInput
  DefaultMessage: AwsPinpointS4tDefaultMessageInput
  DefaultPushNotificationMessage: AwsPinpointS4tDefaultPushNotificationMessageInput
  GCMMessage: AwsPinpointS4tGCMMessageInput
  SMSMessage: AwsPinpointS4tSMSMessageInput
}

input AwsPinpointS4tSMSMessageInput {
  Body: String
  MessageType: String
  SenderId: String
  Substitutions: JSON
}

type AwsPinpointS5 {
  Id: String
  Name: String
}

type AwsPinpointS66 {
  Message: String
  RequestID: String
}

input AwsPinpointS7AdditionalTreatmentsInput {
  MessageConfiguration: AwsPinpointSaInput
  Schedule: AwsPinpointShInput
  SizePercent: Int
  TreatmentDescription: String
  TreatmentName: String
}

input AwsPinpointS7Input {
  AdditionalTreatments: [AwsPinpointS7AdditionalTreatmentsInput]
  Description: String
  HoldoutPercent: Int
  IsPaused: Boolean
  Limits: AwsPinpointSlInput
  MessageConfiguration: AwsPinpointSaInput
  Name: String
  Schedule: AwsPinpointShInput
  SegmentId: String
  SegmentVersion: Int
  TreatmentDescription: String
  TreatmentName: String
}

type AwsPinpointSa {
  ADMMessage: AwsPinpointSb
  APNSMessage: AwsPinpointSb
  BaiduMessage: AwsPinpointSb
  DefaultMessage: AwsPinpointSb
  EmailMessage: AwsPinpointSaEmailMessage
  GCMMessage: AwsPinpointSb
  SMSMessage: AwsPinpointSaSMSMessage
}

type AwsPinpointSaEmailMessage {
  Body: String
  FromAddress: String
  HtmlBody: String
  Title: String
}

input AwsPinpointSaEmailMessageInput {
  Body: String
  FromAddress: String
  HtmlBody: String
  Title: String
}

input AwsPinpointSaInput {
  ADMMessage: AwsPinpointSbInput
  APNSMessage: AwsPinpointSbInput
  BaiduMessage: AwsPinpointSbInput
  DefaultMessage: AwsPinpointSbInput
  EmailMessage: AwsPinpointSaEmailMessageInput
  GCMMessage: AwsPinpointSbInput
  SMSMessage: AwsPinpointSaSMSMessageInput
}

type AwsPinpointSaSMSMessage {
  Body: String
  MessageType: String
  SenderId: String
}

input AwsPinpointSaSMSMessageInput {
  Body: String
  MessageType: String
  SenderId: String
}

type AwsPinpointSb {
  Action: String
  Body: String
  ImageIconUrl: String
  ImageSmallIconUrl: String
  ImageUrl: String
  JsonBody: String
  MediaUrl: String
  RawContent: String
  SilentPush: Boolean
  Title: String
  Url: String
}

input AwsPinpointSbInput {
  Action: String
  Body: String
  ImageIconUrl: String
  ImageSmallIconUrl: String
  ImageUrl: String
  JsonBody: String
  MediaUrl: String
  RawContent: String
  SilentPush: Boolean
  Title: String
  Url: String
}

input AwsPinpointSendMessagesInput {
  ApplicationId: String!
  MessageRequest: AwsPinpointSendMessagesMessageRequestInput!
}

input AwsPinpointSendMessagesMessageRequestInput {
  Addresses: JSON
  Context: JSON
  Endpoints: JSON
  MessageConfiguration: AwsPinpointS4tInput
}

type AwsPinpointSendMessagesOutput {
  MessageResponse: AwsPinpointSendMessagesOutputMessageResponse!
}

type AwsPinpointSendMessagesOutputMessageResponse {
  ApplicationId: String
  EndpointResult: JSON
  RequestId: String
  Result: JSON
}

input AwsPinpointSendUsersMessagesInput {
  ApplicationId: String!
  SendUsersMessageRequest: AwsPinpointSendUsersMessagesSendUsersMessageRequestInput!
}

type AwsPinpointSendUsersMessagesOutput {
  SendUsersMessageResponse: AwsPinpointSendUsersMessagesOutputSendUsersMessageResponse!
}

type AwsPinpointSendUsersMessagesOutputSendUsersMessageResponse {
  ApplicationId: String
  RequestId: String
  Result: JSON
}

input AwsPinpointSendUsersMessagesSendUsersMessageRequestInput {
  Context: JSON
  MessageConfiguration: AwsPinpointS4tInput
  Users: JSON
}

type AwsPinpointSh {
  EndTime: String
  Frequency: String
  IsLocalTime: Boolean
  QuietTime: AwsPinpointSj
  StartTime: String
  Timezone: String
}

input AwsPinpointShInput {
  EndTime: String
  Frequency: String
  IsLocalTime: Boolean
  QuietTime: AwsPinpointSjInput
  StartTime: String
  Timezone: String
}

type AwsPinpointSj {
  End: String
  Start: String
}

input AwsPinpointSjInput {
  End: String
  Start: String
}

type AwsPinpointSl {
  Daily: Int
  MaximumDuration: Int
  MessagesPerSecond: Int
  Total: Int
}

input AwsPinpointSlInput {
  Daily: Int
  MaximumDuration: Int
  MessagesPerSecond: Int
  Total: Int
}

type AwsPinpointSn {
  AdditionalTreatments: [AwsPinpointSnAdditionalTreatments]
  ApplicationId: String
  CreationDate: String
  DefaultState: AwsPinpointSq
  Description: String
  HoldoutPercent: Int
  Id: String
  IsPaused: Boolean
  LastModifiedDate: String
  Limits: AwsPinpointSl
  MessageConfiguration: AwsPinpointSa
  Name: String
  Schedule: AwsPinpointSh
  SegmentId: String
  SegmentVersion: Int
  State: AwsPinpointSq
  TreatmentDescription: String
  TreatmentName: String
  Version: Int
}

type AwsPinpointSnAdditionalTreatments {
  Id: String
  MessageConfiguration: AwsPinpointSa
  Schedule: AwsPinpointSh
  SizePercent: Int
  State: AwsPinpointSq
  TreatmentDescription: String
  TreatmentName: String
}

type AwsPinpointSq {
  CampaignStatus: String
}

type AwsPinpointSw {
  ApplicationId: String
  CompletedPieces: Int
  CompletionDate: String
  CreationDate: String
  Definition: AwsPinpointSwDefinition
  FailedPieces: Int
  Failures: [String]
  Id: String
  JobStatus: String
  TotalFailures: Int
  TotalPieces: Int
  TotalProcessed: Int
  Type: String
}

type AwsPinpointSwDefinition {
  DefineSegment: Boolean
  ExternalId: String
  Format: String
  RegisterEndpoints: Boolean
  RoleArn: String
  S3Url: String
  SegmentId: String
  SegmentName: String
}

input AwsPinpointUpdateAdmChannelADMChannelRequestInput {
  ClientId: String
  ClientSecret: String
  Enabled: Boolean
}

input AwsPinpointUpdateAdmChannelInput {
  ADMChannelRequest: AwsPinpointUpdateAdmChannelADMChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateAdmChannelOutput {
  ADMChannelResponse: AwsPinpointS1l!
}

input AwsPinpointUpdateApnsChannelAPNSChannelRequestInput {
  BundleId: String
  Certificate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  PrivateKey: String
  TeamId: String
  TokenKey: String
  TokenKeyId: String
}

input AwsPinpointUpdateApnsChannelInput {
  APNSChannelRequest: AwsPinpointUpdateApnsChannelAPNSChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateApnsChannelOutput {
  APNSChannelResponse: AwsPinpointS1o!
}

input AwsPinpointUpdateApnsSandboxChannelAPNSSandboxChannelRequestInput {
  BundleId: String
  Certificate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  PrivateKey: String
  TeamId: String
  TokenKey: String
  TokenKeyId: String
}

input AwsPinpointUpdateApnsSandboxChannelInput {
  APNSSandboxChannelRequest: AwsPinpointUpdateApnsSandboxChannelAPNSSandboxChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateApnsSandboxChannelOutput {
  APNSSandboxChannelResponse: AwsPinpointS1r!
}

input AwsPinpointUpdateApnsVoipChannelAPNSVoipChannelRequestInput {
  BundleId: String
  Certificate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  PrivateKey: String
  TeamId: String
  TokenKey: String
  TokenKeyId: String
}

input AwsPinpointUpdateApnsVoipChannelInput {
  APNSVoipChannelRequest: AwsPinpointUpdateApnsVoipChannelAPNSVoipChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateApnsVoipChannelOutput {
  APNSVoipChannelResponse: AwsPinpointS1u!
}

input AwsPinpointUpdateApnsVoipSandboxChannelAPNSVoipSandboxChannelRequestInput {
  BundleId: String
  Certificate: String
  DefaultAuthenticationMethod: String
  Enabled: Boolean
  PrivateKey: String
  TeamId: String
  TokenKey: String
  TokenKeyId: String
}

input AwsPinpointUpdateApnsVoipSandboxChannelInput {
  APNSVoipSandboxChannelRequest: AwsPinpointUpdateApnsVoipSandboxChannelAPNSVoipSandboxChannelRequestInput!
  ApplicationId: String!
}

type AwsPinpointUpdateApnsVoipSandboxChannelOutput {
  APNSVoipSandboxChannelResponse: AwsPinpointS1x!
}

input AwsPinpointUpdateApplicationSettingsInput {
  ApplicationId: String!
  WriteApplicationSettingsRequest: AwsPinpointUpdateApplicationSettingsWriteApplicationSettingsRequestInput!
}

type AwsPinpointUpdateApplicationSettingsOutput {
  ApplicationSettingsResource: AwsPinpointS2x!
}

input AwsPinpointUpdateApplicationSettingsWriteApplicationSettingsRequestInput {
  Limits: AwsPinpointSlInput
  QuietTime: AwsPinpointSjInput
}

input AwsPinpointUpdateBaiduChannelBaiduChannelRequestInput {
  ApiKey: String
  Enabled: Boolean
  SecretKey: String
}

input AwsPinpointUpdateBaiduChannelInput {
  ApplicationId: String!
  BaiduChannelRequest: AwsPinpointUpdateBaiduChannelBaiduChannelRequestInput!
}

type AwsPinpointUpdateBaiduChannelOutput {
  BaiduChannelResponse: AwsPinpointS22!
}

input AwsPinpointUpdateCampaignInput {
  ApplicationId: String!
  CampaignId: String!
  WriteCampaignRequest: AwsPinpointS7Input!
}

type AwsPinpointUpdateCampaignOutput {
  CampaignResponse: AwsPinpointSn!
}

input AwsPinpointUpdateEmailChannelEmailChannelRequestInput {
  Enabled: Boolean
  FromAddress: String
  Identity: String
  RoleArn: String
}

input AwsPinpointUpdateEmailChannelInput {
  ApplicationId: String!
  EmailChannelRequest: AwsPinpointUpdateEmailChannelEmailChannelRequestInput!
}

type AwsPinpointUpdateEmailChannelOutput {
  EmailChannelResponse: AwsPinpointS27!
}

input AwsPinpointUpdateEndpointEndpointRequestInput {
  Address: String
  Attributes: JSON
  ChannelType: String
  Demographic: AwsPinpointS3qInput
  EffectiveDate: String
  EndpointStatus: String
  Location: AwsPinpointS3rInput
  Metrics: JSON
  OptOut: String
  RequestId: String
  User: AwsPinpointS3uInput
}

input AwsPinpointUpdateEndpointInput {
  ApplicationId: String!
  EndpointId: String!
  EndpointRequest: AwsPinpointUpdateEndpointEndpointRequestInput!
}

type AwsPinpointUpdateEndpointOutput {
  MessageBody: AwsPinpointS66!
}

input AwsPinpointUpdateEndpointsBatchEndpointBatchRequestInput {
  Item: [AwsPinpointUpdateEndpointsBatchEndpointBatchRequestItemInput]
}

input AwsPinpointUpdateEndpointsBatchEndpointBatchRequestItemInput {
  Address: String
  Attributes: JSON
  ChannelType: String
  Demographic: AwsPinpointS3qInput
  EffectiveDate: String
  EndpointStatus: String
  Id: String
  Location: AwsPinpointS3rInput
  Metrics: JSON
  OptOut: String
  RequestId: String
  User: AwsPinpointS3uInput
}

input AwsPinpointUpdateEndpointsBatchInput {
  ApplicationId: String!
  EndpointBatchRequest: AwsPinpointUpdateEndpointsBatchEndpointBatchRequestInput!
}

type AwsPinpointUpdateEndpointsBatchOutput {
  MessageBody: AwsPinpointS66!
}

input AwsPinpointUpdateGcmChannelGCMChannelRequestInput {
  ApiKey: String
  Enabled: Boolean
}

input AwsPinpointUpdateGcmChannelInput {
  ApplicationId: String!
  GCMChannelRequest: AwsPinpointUpdateGcmChannelGCMChannelRequestInput!
}

type AwsPinpointUpdateGcmChannelOutput {
  GCMChannelResponse: AwsPinpointS2d!
}

input AwsPinpointUpdateSegmentInput {
  ApplicationId: String!
  SegmentId: String!
  WriteSegmentRequest: AwsPinpointS11Input!
}

type AwsPinpointUpdateSegmentOutput {
  SegmentResponse: AwsPinpointS1f!
}

input AwsPinpointUpdateSmsChannelInput {
  ApplicationId: String!
  SMSChannelRequest: AwsPinpointUpdateSmsChannelSMSChannelRequestInput!
}

type AwsPinpointUpdateSmsChannelOutput {
  SMSChannelResponse: AwsPinpointS2i!
}

input AwsPinpointUpdateSmsChannelSMSChannelRequestInput {
  Enabled: Boolean
  SenderId: String
  ShortCode: String
}

# Amazon Polly (2016-06-10)
type AwsPolly {
  deleteLexicon(input: AwsPollyDeleteLexiconInput!, config: AwsConfig): JSON
  describeVoices(input: AwsPollyDescribeVoicesInput, config: AwsConfig): AwsPollyDescribeVoicesOutput
  getLexicon(input: AwsPollyGetLexiconInput!, config: AwsConfig): AwsPollyGetLexiconOutput
  listLexicons(input: AwsPollyListLexiconsInput, config: AwsConfig): AwsPollyListLexiconsOutput
  putLexicon(input: AwsPollyPutLexiconInput!, config: AwsConfig): JSON
  synthesizeSpeech(input: AwsPollySynthesizeSpeechInput!, config: AwsConfig): AwsPollySynthesizeSpeechOutput
}

input AwsPollyDeleteLexiconInput {
  Name: String!
}

input AwsPollyDescribeVoicesInput {
  LanguageCode: String
  NextToken: String
}

type AwsPollyDescribeVoicesOutput {
  Voices: [AwsPollyDescribeVoicesOutputVoices]
  NextToken: String
}

type AwsPollyDescribeVoicesOutputVoices {
  Gender: String
  Id: String
  LanguageCode: String
  LanguageName: String
  Name: String
}

input AwsPollyGetLexiconInput {
  Name: String!
}

type AwsPollyGetLexiconOutput {
  Lexicon: AwsPollyGetLexiconOutputLexicon
  LexiconAttributes: AwsPollySi
}

type AwsPollyGetLexiconOutputLexicon {
  Content: String
  Name: String
}

input AwsPollyListLexiconsInput {
  NextToken: String
}

type AwsPollyListLexiconsOutput {
  Lexicons: [AwsPollyListLexiconsOutputLexicons]
  NextToken: String
}

type AwsPollyListLexiconsOutputLexicons {
  Name: String
  Attributes: AwsPollySi
}

input AwsPollyPutLexiconInput {
  Name: String!
  Content: String!
}

type AwsPollySi {
  Alphabet: String
  LanguageCode: String
  LastModified: Date
  LexiconArn: String
  LexemesCount: Int
  Size: Int
}

input AwsPollySynthesizeSpeechInput {
  LexiconNames: [String]
  OutputFormat: String!
  SampleRate: String
  SpeechMarkTypes: [String]
  Text: String!
  TextType: String
  VoiceId: String!
}

type AwsPollySynthesizeSpeechOutput {
  AudioStream: JSON
  ContentType: String
  RequestCharacters: Int
}

# AWS Price List Service (2017-10-15)
type AwsPricing {
  describeServices(input: AwsPricingDescribeServicesInput, config: AwsConfig): AwsPricingDescribeServicesOutput
  getAttributeValues(input: AwsPricingGetAttributeValuesInput!, config: AwsConfig): AwsPricingGetAttributeValuesOutput
  getProducts(input: AwsPricingGetProductsInput, config: AwsConfig): AwsPricingGetProductsOutput
}

input AwsPricingDescribeServicesInput {
  ServiceCode: String
  FormatVersion: String
  NextToken: String
  MaxResults: Int
}

type AwsPricingDescribeServicesOutput {
  Services: [AwsPricingDescribeServicesOutputServices]
  FormatVersion: String
  NextToken: String
}

type AwsPricingDescribeServicesOutputServices {
  ServiceCode: String
  AttributeNames: [String]
}

input AwsPricingGetAttributeValuesInput {
  ServiceCode: String!
  AttributeName: String!
  NextToken: String
  MaxResults: Int
}

type AwsPricingGetAttributeValuesOutput {
  AttributeValues: [AwsPricingGetAttributeValuesOutputAttributeValues]
  NextToken: String
}

type AwsPricingGetAttributeValuesOutputAttributeValues {
  Value: String
}

input AwsPricingGetProductsFiltersInput {
  Type: String!
  Field: String!
  Value: String!
}

input AwsPricingGetProductsInput {
  ServiceCode: String
  Filters: [AwsPricingGetProductsFiltersInput]
  FormatVersion: String
  NextToken: String
  MaxResults: Int
}

type AwsPricingGetProductsOutput {
  FormatVersion: String
  PriceList: [String]
  NextToken: String
}

# Amazon Relational Database Service (2014-10-31)
type AwsRDS {
  addRoleToDBCluster(input: AwsRDSAddRoleToDBClusterInput!, config: AwsConfig): JSON
  addSourceIdentifierToSubscription(input: AwsRDSAddSourceIdentifierToSubscriptionInput!, config: AwsConfig): AwsRDSAddSourceIdentifierToSubscriptionOutput
  addTagsToResource(input: AwsRDSAddTagsToResourceInput!, config: AwsConfig): JSON
  applyPendingMaintenanceAction(input: AwsRDSApplyPendingMaintenanceActionInput!, config: AwsConfig): AwsRDSApplyPendingMaintenanceActionOutput
  authorizeDBSecurityGroupIngress(input: AwsRDSAuthorizeDBSecurityGroupIngressInput!, config: AwsConfig): AwsRDSAuthorizeDBSecurityGroupIngressOutput
  copyDBClusterParameterGroup(input: AwsRDSCopyDBClusterParameterGroupInput!, config: AwsConfig): AwsRDSCopyDBClusterParameterGroupOutput
  copyDBClusterSnapshot(input: AwsRDSCopyDBClusterSnapshotInput!, config: AwsConfig): AwsRDSCopyDBClusterSnapshotOutput
  copyDBParameterGroup(input: AwsRDSCopyDBParameterGroupInput!, config: AwsConfig): AwsRDSCopyDBParameterGroupOutput
  copyDBSnapshot(input: AwsRDSCopyDBSnapshotInput!, config: AwsConfig): AwsRDSCopyDBSnapshotOutput
  copyOptionGroup(input: AwsRDSCopyOptionGroupInput!, config: AwsConfig): AwsRDSCopyOptionGroupOutput
  createDBCluster(input: AwsRDSCreateDBClusterInput!, config: AwsConfig): AwsRDSCreateDBClusterOutput
  createDBClusterParameterGroup(input: AwsRDSCreateDBClusterParameterGroupInput!, config: AwsConfig): AwsRDSCreateDBClusterParameterGroupOutput
  createDBClusterSnapshot(input: AwsRDSCreateDBClusterSnapshotInput!, config: AwsConfig): AwsRDSCreateDBClusterSnapshotOutput
  createDBInstance(input: AwsRDSCreateDBInstanceInput!, config: AwsConfig): AwsRDSCreateDBInstanceOutput
  createDBInstanceReadReplica(input: AwsRDSCreateDBInstanceReadReplicaInput!, config: AwsConfig): AwsRDSCreateDBInstanceReadReplicaOutput
  createDBParameterGroup(input: AwsRDSCreateDBParameterGroupInput!, config: AwsConfig): AwsRDSCreateDBParameterGroupOutput
  createDBSecurityGroup(input: AwsRDSCreateDBSecurityGroupInput!, config: AwsConfig): AwsRDSCreateDBSecurityGroupOutput
  createDBSnapshot(input: AwsRDSCreateDBSnapshotInput!, config: AwsConfig): AwsRDSCreateDBSnapshotOutput
  createDBSubnetGroup(input: AwsRDSCreateDBSubnetGroupInput!, config: AwsConfig): AwsRDSCreateDBSubnetGroupOutput
  createEventSubscription(input: AwsRDSCreateEventSubscriptionInput!, config: AwsConfig): AwsRDSCreateEventSubscriptionOutput
  createOptionGroup(input: AwsRDSCreateOptionGroupInput!, config: AwsConfig): AwsRDSCreateOptionGroupOutput
  deleteDBCluster(input: AwsRDSDeleteDBClusterInput!, config: AwsConfig): AwsRDSDeleteDBClusterOutput
  deleteDBClusterParameterGroup(input: AwsRDSDeleteDBClusterParameterGroupInput!, config: AwsConfig): JSON
  deleteDBClusterSnapshot(input: AwsRDSDeleteDBClusterSnapshotInput!, config: AwsConfig): AwsRDSDeleteDBClusterSnapshotOutput
  deleteDBInstance(input: AwsRDSDeleteDBInstanceInput!, config: AwsConfig): AwsRDSDeleteDBInstanceOutput
  deleteDBParameterGroup(input: AwsRDSDeleteDBParameterGroupInput!, config: AwsConfig): JSON
  deleteDBSecurityGroup(input: AwsRDSDeleteDBSecurityGroupInput!, config: AwsConfig): JSON
  deleteDBSnapshot(input: AwsRDSDeleteDBSnapshotInput!, config: AwsConfig): AwsRDSDeleteDBSnapshotOutput
  deleteDBSubnetGroup(input: AwsRDSDeleteDBSubnetGroupInput!, config: AwsConfig): JSON
  deleteEventSubscription(input: AwsRDSDeleteEventSubscriptionInput!, config: AwsConfig): AwsRDSDeleteEventSubscriptionOutput
  deleteOptionGroup(input: AwsRDSDeleteOptionGroupInput!, config: AwsConfig): JSON
  describeAccountAttributes(input: JSON, config: AwsConfig): AwsRDSDescribeAccountAttributesOutput
  describeCertificates(input: AwsRDSDescribeCertificatesInput, config: AwsConfig): AwsRDSDescribeCertificatesOutput
  describeDBClusterParameterGroups(input: AwsRDSDescribeDBClusterParameterGroupsInput, config: AwsConfig): AwsRDSDescribeDBClusterParameterGroupsOutput
  describeDBClusterParameters(input: AwsRDSDescribeDBClusterParametersInput!, config: AwsConfig): AwsRDSDescribeDBClusterParametersOutput
  describeDBClusterSnapshotAttributes(input: AwsRDSDescribeDBClusterSnapshotAttributesInput!, config: AwsConfig): AwsRDSDescribeDBClusterSnapshotAttributesOutput
  describeDBClusterSnapshots(input: AwsRDSDescribeDBClusterSnapshotsInput, config: AwsConfig): AwsRDSDescribeDBClusterSnapshotsOutput
  describeDBClusters(input: AwsRDSDescribeDBClustersInput, config: AwsConfig): AwsRDSDescribeDBClustersOutput
  describeDBEngineVersions(input: AwsRDSDescribeDBEngineVersionsInput, config: AwsConfig): AwsRDSDescribeDBEngineVersionsOutput
  describeDBInstances(input: AwsRDSDescribeDBInstancesInput, config: AwsConfig): AwsRDSDescribeDBInstancesOutput
  describeDBLogFiles(input: AwsRDSDescribeDBLogFilesInput!, config: AwsConfig): AwsRDSDescribeDBLogFilesOutput
  describeDBParameterGroups(input: AwsRDSDescribeDBParameterGroupsInput, config: AwsConfig): AwsRDSDescribeDBParameterGroupsOutput
  describeDBParameters(input: AwsRDSDescribeDBParametersInput!, config: AwsConfig): AwsRDSDescribeDBParametersOutput
  describeDBSecurityGroups(input: AwsRDSDescribeDBSecurityGroupsInput, config: AwsConfig): AwsRDSDescribeDBSecurityGroupsOutput
  describeDBSnapshotAttributes(input: AwsRDSDescribeDBSnapshotAttributesInput!, config: AwsConfig): AwsRDSDescribeDBSnapshotAttributesOutput
  describeDBSnapshots(input: AwsRDSDescribeDBSnapshotsInput, config: AwsConfig): AwsRDSDescribeDBSnapshotsOutput
  describeDBSubnetGroups(input: AwsRDSDescribeDBSubnetGroupsInput, config: AwsConfig): AwsRDSDescribeDBSubnetGroupsOutput
  describeEngineDefaultClusterParameters(input: AwsRDSDescribeEngineDefaultClusterParametersInput!, config: AwsConfig): AwsRDSDescribeEngineDefaultClusterParametersOutput
  describeEngineDefaultParameters(input: AwsRDSDescribeEngineDefaultParametersInput!, config: AwsConfig): AwsRDSDescribeEngineDefaultParametersOutput
  describeEventCategories(input: AwsRDSDescribeEventCategoriesInput, config: AwsConfig): AwsRDSDescribeEventCategoriesOutput
  describeEventSubscriptions(input: AwsRDSDescribeEventSubscriptionsInput, config: AwsConfig): AwsRDSDescribeEventSubscriptionsOutput
  describeEvents(input: AwsRDSDescribeEventsInput, config: AwsConfig): AwsRDSDescribeEventsOutput
  describeOptionGroupOptions(input: AwsRDSDescribeOptionGroupOptionsInput!, config: AwsConfig): AwsRDSDescribeOptionGroupOptionsOutput
  describeOptionGroups(input: AwsRDSDescribeOptionGroupsInput, config: AwsConfig): AwsRDSDescribeOptionGroupsOutput
  describeOrderableDBInstanceOptions(input: AwsRDSDescribeOrderableDBInstanceOptionsInput!, config: AwsConfig): AwsRDSDescribeOrderableDBInstanceOptionsOutput
  describePendingMaintenanceActions(input: AwsRDSDescribePendingMaintenanceActionsInput, config: AwsConfig): AwsRDSDescribePendingMaintenanceActionsOutput
  describeReservedDBInstances(input: AwsRDSDescribeReservedDBInstancesInput, config: AwsConfig): AwsRDSDescribeReservedDBInstancesOutput
  describeReservedDBInstancesOfferings(input: AwsRDSDescribeReservedDBInstancesOfferingsInput, config: AwsConfig): AwsRDSDescribeReservedDBInstancesOfferingsOutput
  describeSourceRegions(input: AwsRDSDescribeSourceRegionsInput, config: AwsConfig): AwsRDSDescribeSourceRegionsOutput
  describeValidDBInstanceModifications(input: AwsRDSDescribeValidDBInstanceModificationsInput!, config: AwsConfig): AwsRDSDescribeValidDBInstanceModificationsOutput
  downloadDBLogFilePortion(input: AwsRDSDownloadDBLogFilePortionInput!, config: AwsConfig): AwsRDSDownloadDBLogFilePortionOutput
  failoverDBCluster(input: AwsRDSFailoverDBClusterInput, config: AwsConfig): AwsRDSFailoverDBClusterOutput
  listTagsForResource(input: AwsRDSListTagsForResourceInput!, config: AwsConfig): AwsRDSListTagsForResourceOutput
  modifyDBCluster(input: AwsRDSModifyDBClusterInput!, config: AwsConfig): AwsRDSModifyDBClusterOutput
  modifyDBClusterParameterGroup(input: AwsRDSModifyDBClusterParameterGroupInput!, config: AwsConfig): JSON
  modifyDBClusterSnapshotAttribute(input: AwsRDSModifyDBClusterSnapshotAttributeInput!, config: AwsConfig): AwsRDSModifyDBClusterSnapshotAttributeOutput
  modifyDBInstance(input: AwsRDSModifyDBInstanceInput!, config: AwsConfig): AwsRDSModifyDBInstanceOutput
  modifyDBParameterGroup(input: AwsRDSModifyDBParameterGroupInput!, config: AwsConfig): JSON
  modifyDBSnapshot(input: AwsRDSModifyDBSnapshotInput!, config: AwsConfig): AwsRDSModifyDBSnapshotOutput
  modifyDBSnapshotAttribute(input: AwsRDSModifyDBSnapshotAttributeInput!, config: AwsConfig): AwsRDSModifyDBSnapshotAttributeOutput
  modifyDBSubnetGroup(input: AwsRDSModifyDBSubnetGroupInput!, config: AwsConfig): AwsRDSModifyDBSubnetGroupOutput
  modifyEventSubscription(input: AwsRDSModifyEventSubscriptionInput!, config: AwsConfig): AwsRDSModifyEventSubscriptionOutput
  modifyOptionGroup(input: AwsRDSModifyOptionGroupInput!, config: AwsConfig): AwsRDSModifyOptionGroupOutput
  promoteReadReplica(input: AwsRDSPromoteReadReplicaInput!, config: AwsConfig): AwsRDSPromoteReadReplicaOutput
  promoteReadReplicaDBCluster(input: AwsRDSPromoteReadReplicaDBClusterInput!, config: AwsConfig): AwsRDSPromoteReadReplicaDBClusterOutput
  purchaseReservedDBInstancesOffering(input: AwsRDSPurchaseReservedDBInstancesOfferingInput!, config: AwsConfig): AwsRDSPurchaseReservedDBInstancesOfferingOutput
  rebootDBInstance(input: AwsRDSRebootDBInstanceInput!, config: AwsConfig): AwsRDSRebootDBInstanceOutput
  removeRoleFromDBCluster(input: AwsRDSRemoveRoleFromDBClusterInput!, config: AwsConfig): JSON
  removeSourceIdentifierFromSubscription(input: AwsRDSRemoveSourceIdentifierFromSubscriptionInput!, config: AwsConfig): AwsRDSRemoveSourceIdentifierFromSubscriptionOutput
  removeTagsFromResource(input: AwsRDSRemoveTagsFromResourceInput!, config: AwsConfig): JSON
  resetDBClusterParameterGroup(input: AwsRDSResetDBClusterParameterGroupInput!, config: AwsConfig): JSON
  resetDBParameterGroup(input: AwsRDSResetDBParameterGroupInput!, config: AwsConfig): JSON
  restoreDBClusterFromS3(input: AwsRDSRestoreDBClusterFromS3Input!, config: AwsConfig): AwsRDSRestoreDBClusterFromS3Output
  restoreDBClusterFromSnapshot(input: AwsRDSRestoreDBClusterFromSnapshotInput!, config: AwsConfig): AwsRDSRestoreDBClusterFromSnapshotOutput
  restoreDBClusterToPointInTime(input: AwsRDSRestoreDBClusterToPointInTimeInput!, config: AwsConfig): AwsRDSRestoreDBClusterToPointInTimeOutput
  restoreDBInstanceFromDBSnapshot(input: AwsRDSRestoreDBInstanceFromDBSnapshotInput!, config: AwsConfig): AwsRDSRestoreDBInstanceFromDBSnapshotOutput
  restoreDBInstanceFromS3(input: AwsRDSRestoreDBInstanceFromS3Input!, config: AwsConfig): AwsRDSRestoreDBInstanceFromS3Output
  restoreDBInstanceToPointInTime(input: AwsRDSRestoreDBInstanceToPointInTimeInput!, config: AwsConfig): AwsRDSRestoreDBInstanceToPointInTimeOutput
  revokeDBSecurityGroupIngress(input: AwsRDSRevokeDBSecurityGroupIngressInput!, config: AwsConfig): AwsRDSRevokeDBSecurityGroupIngressOutput
  startDBInstance(input: AwsRDSStartDBInstanceInput!, config: AwsConfig): AwsRDSStartDBInstanceOutput
  stopDBInstance(input: AwsRDSStopDBInstanceInput!, config: AwsConfig): AwsRDSStopDBInstanceOutput
}

input AwsRDSAddRoleToDBClusterInput {
  DBClusterIdentifier: String!
  RoleArn: String!
}

input AwsRDSAddSourceIdentifierToSubscriptionInput {
  SubscriptionName: String!
  SourceIdentifier: String!
}

type AwsRDSAddSourceIdentifierToSubscriptionOutput {
  EventSubscription: AwsRDSS5
}

input AwsRDSAddTagsToResourceInput {
  ResourceName: String!
  Tags: [AwsRDSSaInput]!
}

input AwsRDSApplyPendingMaintenanceActionInput {
  ResourceIdentifier: String!
  ApplyAction: String!
  OptInType: String!
}

type AwsRDSApplyPendingMaintenanceActionOutput {
  ResourcePendingMaintenanceActions: AwsRDSSe
}

input AwsRDSAuthorizeDBSecurityGroupIngressInput {
  DBSecurityGroupName: String!
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupId: String
  EC2SecurityGroupOwnerId: String
}

type AwsRDSAuthorizeDBSecurityGroupIngressOutput {
  DBSecurityGroup: AwsRDSSk
}

input AwsRDSCopyDBClusterParameterGroupInput {
  SourceDBClusterParameterGroupIdentifier: String!
  TargetDBClusterParameterGroupIdentifier: String!
  TargetDBClusterParameterGroupDescription: String!
  Tags: [AwsRDSSaInput]
}

type AwsRDSCopyDBClusterParameterGroupOutput {
  DBClusterParameterGroup: AwsRDSSr
}

input AwsRDSCopyDBClusterSnapshotInput {
  SourceDBClusterSnapshotIdentifier: String!
  TargetDBClusterSnapshotIdentifier: String!
  KmsKeyId: String
  PreSignedUrl: String
  CopyTags: Boolean
  Tags: [AwsRDSSaInput]
  SourceRegion: String
}

type AwsRDSCopyDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsRDSSv
}

input AwsRDSCopyDBParameterGroupInput {
  SourceDBParameterGroupIdentifier: String!
  TargetDBParameterGroupIdentifier: String!
  TargetDBParameterGroupDescription: String!
  Tags: [AwsRDSSaInput]
}

type AwsRDSCopyDBParameterGroupOutput {
  DBParameterGroup: AwsRDSS10
}

input AwsRDSCopyDBSnapshotInput {
  SourceDBSnapshotIdentifier: String!
  TargetDBSnapshotIdentifier: String!
  KmsKeyId: String
  Tags: [AwsRDSSaInput]
  CopyTags: Boolean
  PreSignedUrl: String
  OptionGroupName: String
  SourceRegion: String
}

type AwsRDSCopyDBSnapshotOutput {
  DBSnapshot: AwsRDSS13
}

input AwsRDSCopyOptionGroupInput {
  SourceOptionGroupIdentifier: String!
  TargetOptionGroupIdentifier: String!
  TargetOptionGroupDescription: String!
  Tags: [AwsRDSSaInput]
}

type AwsRDSCopyOptionGroupOutput {
  OptionGroup: AwsRDSS17
}

input AwsRDSCreateDBClusterInput {
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  CharacterSetName: String
  DatabaseName: String
  DBClusterIdentifier: String!
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  DBSubnetGroupName: String
  Engine: String!
  EngineVersion: String
  Port: Int
  MasterUsername: String
  MasterUserPassword: String
  OptionGroupName: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  ReplicationSourceIdentifier: String
  Tags: [AwsRDSSaInput]
  StorageEncrypted: Boolean
  KmsKeyId: String
  PreSignedUrl: String
  EnableIAMDatabaseAuthentication: Boolean
  SourceRegion: String
}

type AwsRDSCreateDBClusterOutput {
  DBCluster: AwsRDSS1j
}

input AwsRDSCreateDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  DBParameterGroupFamily: String!
  Description: String!
  Tags: [AwsRDSSaInput]
}

type AwsRDSCreateDBClusterParameterGroupOutput {
  DBClusterParameterGroup: AwsRDSSr
}

input AwsRDSCreateDBClusterSnapshotInput {
  DBClusterSnapshotIdentifier: String!
  DBClusterIdentifier: String!
  Tags: [AwsRDSSaInput]
}

type AwsRDSCreateDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsRDSSv
}

input AwsRDSCreateDBInstanceInput {
  DBName: String
  DBInstanceIdentifier: String!
  AllocatedStorage: Int
  DBInstanceClass: String!
  Engine: String!
  MasterUsername: String
  MasterUserPassword: String
  DBSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  AvailabilityZone: String
  DBSubnetGroupName: String
  PreferredMaintenanceWindow: String
  DBParameterGroupName: String
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
  Port: Int
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  Iops: Int
  OptionGroupName: String
  CharacterSetName: String
  PubliclyAccessible: Boolean
  Tags: [AwsRDSSaInput]
  DBClusterIdentifier: String
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  Domain: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  MonitoringRoleArn: String
  DomainIAMRoleName: String
  PromotionTier: Int
  Timezone: String
  EnableIAMDatabaseAuthentication: Boolean
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
}

type AwsRDSCreateDBInstanceOutput {
  DBInstance: AwsRDSS1y
}

input AwsRDSCreateDBInstanceReadReplicaInput {
  DBInstanceIdentifier: String!
  SourceDBInstanceIdentifier: String!
  DBInstanceClass: String
  AvailabilityZone: String
  Port: Int
  AutoMinorVersionUpgrade: Boolean
  Iops: Int
  OptionGroupName: String
  PubliclyAccessible: Boolean
  Tags: [AwsRDSSaInput]
  DBSubnetGroupName: String
  StorageType: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  MonitoringRoleArn: String
  KmsKeyId: String
  PreSignedUrl: String
  EnableIAMDatabaseAuthentication: Boolean
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
  SourceRegion: String
}

type AwsRDSCreateDBInstanceReadReplicaOutput {
  DBInstance: AwsRDSS1y
}

input AwsRDSCreateDBParameterGroupInput {
  DBParameterGroupName: String!
  DBParameterGroupFamily: String!
  Description: String!
  Tags: [AwsRDSSaInput]
}

type AwsRDSCreateDBParameterGroupOutput {
  DBParameterGroup: AwsRDSS10
}

input AwsRDSCreateDBSecurityGroupInput {
  DBSecurityGroupName: String!
  DBSecurityGroupDescription: String!
  Tags: [AwsRDSSaInput]
}

type AwsRDSCreateDBSecurityGroupOutput {
  DBSecurityGroup: AwsRDSSk
}

input AwsRDSCreateDBSnapshotInput {
  DBSnapshotIdentifier: String!
  DBInstanceIdentifier: String!
  Tags: [AwsRDSSaInput]
}

type AwsRDSCreateDBSnapshotOutput {
  DBSnapshot: AwsRDSS13
}

input AwsRDSCreateDBSubnetGroupInput {
  DBSubnetGroupName: String!
  DBSubnetGroupDescription: String!
  SubnetIds: [String]!
  Tags: [AwsRDSSaInput]
}

type AwsRDSCreateDBSubnetGroupOutput {
  DBSubnetGroup: AwsRDSS22
}

input AwsRDSCreateEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String!
  SourceType: String
  EventCategories: [String]
  SourceIds: [String]
  Enabled: Boolean
  Tags: [AwsRDSSaInput]
}

type AwsRDSCreateEventSubscriptionOutput {
  EventSubscription: AwsRDSS5
}

input AwsRDSCreateOptionGroupInput {
  OptionGroupName: String!
  EngineName: String!
  MajorEngineVersion: String!
  OptionGroupDescription: String!
  Tags: [AwsRDSSaInput]
}

type AwsRDSCreateOptionGroupOutput {
  OptionGroup: AwsRDSS17
}

input AwsRDSDeleteDBClusterInput {
  DBClusterIdentifier: String!
  SkipFinalSnapshot: Boolean
  FinalDBSnapshotIdentifier: String
}

type AwsRDSDeleteDBClusterOutput {
  DBCluster: AwsRDSS1j
}

input AwsRDSDeleteDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
}

input AwsRDSDeleteDBClusterSnapshotInput {
  DBClusterSnapshotIdentifier: String!
}

type AwsRDSDeleteDBClusterSnapshotOutput {
  DBClusterSnapshot: AwsRDSSv
}

input AwsRDSDeleteDBInstanceInput {
  DBInstanceIdentifier: String!
  SkipFinalSnapshot: Boolean
  FinalDBSnapshotIdentifier: String
}

type AwsRDSDeleteDBInstanceOutput {
  DBInstance: AwsRDSS1y
}

input AwsRDSDeleteDBParameterGroupInput {
  DBParameterGroupName: String!
}

input AwsRDSDeleteDBSecurityGroupInput {
  DBSecurityGroupName: String!
}

input AwsRDSDeleteDBSnapshotInput {
  DBSnapshotIdentifier: String!
}

type AwsRDSDeleteDBSnapshotOutput {
  DBSnapshot: AwsRDSS13
}

input AwsRDSDeleteDBSubnetGroupInput {
  DBSubnetGroupName: String!
}

input AwsRDSDeleteEventSubscriptionInput {
  SubscriptionName: String!
}

type AwsRDSDeleteEventSubscriptionOutput {
  EventSubscription: AwsRDSS5
}

input AwsRDSDeleteOptionGroupInput {
  OptionGroupName: String!
}

type AwsRDSDescribeAccountAttributesOutput {
  AccountQuotas: [AwsRDSDescribeAccountAttributesOutputAccountQuotas]
}

type AwsRDSDescribeAccountAttributesOutputAccountQuotas {
  AccountQuotaName: String
  Used: JSON
  Max: JSON
}

input AwsRDSDescribeCertificatesInput {
  CertificateIdentifier: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeCertificatesOutput {
  Certificates: [AwsRDSDescribeCertificatesOutputCertificates]
  Marker: String
}

type AwsRDSDescribeCertificatesOutputCertificates {
  CertificateIdentifier: String
  CertificateType: String
  Thumbprint: String
  ValidFrom: Date
  ValidTill: Date
  CertificateArn: String
}

input AwsRDSDescribeDBClusterParameterGroupsInput {
  DBClusterParameterGroupName: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBClusterParameterGroupsOutput {
  Marker: String
  DBClusterParameterGroups: [AwsRDSSr]
}

input AwsRDSDescribeDBClusterParametersInput {
  DBClusterParameterGroupName: String!
  Source: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBClusterParametersOutput {
  Parameters: [AwsRDSS3q]
  Marker: String
}

input AwsRDSDescribeDBClustersInput {
  DBClusterIdentifier: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

input AwsRDSDescribeDBClusterSnapshotAttributesInput {
  DBClusterSnapshotIdentifier: String!
}

type AwsRDSDescribeDBClusterSnapshotAttributesOutput {
  DBClusterSnapshotAttributesResult: AwsRDSS3v
}

input AwsRDSDescribeDBClusterSnapshotsInput {
  DBClusterIdentifier: String
  DBClusterSnapshotIdentifier: String
  SnapshotType: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
  IncludeShared: Boolean
  IncludePublic: Boolean
}

type AwsRDSDescribeDBClusterSnapshotsOutput {
  Marker: String
  DBClusterSnapshots: [AwsRDSSv]
}

type AwsRDSDescribeDBClustersOutput {
  Marker: String
  DBClusters: [AwsRDSS1j]
}

input AwsRDSDescribeDBEngineVersionsInput {
  Engine: String
  EngineVersion: String
  DBParameterGroupFamily: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
  DefaultOnly: Boolean
  ListSupportedCharacterSets: Boolean
  ListSupportedTimezones: Boolean
}

type AwsRDSDescribeDBEngineVersionsOutput {
  Marker: String
  DBEngineVersions: [AwsRDSDescribeDBEngineVersionsOutputDBEngineVersions]
}

type AwsRDSDescribeDBEngineVersionsOutputDBEngineVersions {
  Engine: String
  EngineVersion: String
  DBParameterGroupFamily: String
  DBEngineDescription: String
  DBEngineVersionDescription: String
  DefaultCharacterSet: AwsRDSS49
  SupportedCharacterSets: [AwsRDSS49]
  ValidUpgradeTarget: [AwsRDSDescribeDBEngineVersionsOutputDBEngineVersionsValidUpgradeTarget]
  SupportedTimezones: [AwsRDSDescribeDBEngineVersionsOutputDBEngineVersionsSupportedTimezones]
}

type AwsRDSDescribeDBEngineVersionsOutputDBEngineVersionsSupportedTimezones {
  TimezoneName: String
}

type AwsRDSDescribeDBEngineVersionsOutputDBEngineVersionsValidUpgradeTarget {
  Engine: String
  EngineVersion: String
  Description: String
  AutoUpgrade: Boolean
  IsMajorVersionUpgrade: Boolean
}

input AwsRDSDescribeDBInstancesInput {
  DBInstanceIdentifier: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBInstancesOutput {
  Marker: String
  DBInstances: [AwsRDSS1y]
}

input AwsRDSDescribeDBLogFilesInput {
  DBInstanceIdentifier: String!
  FilenameContains: String
  FileLastWritten: JSON
  FileSize: JSON
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBLogFilesOutput {
  DescribeDBLogFiles: [AwsRDSDescribeDBLogFilesOutputDescribeDBLogFiles]
  Marker: String
}

type AwsRDSDescribeDBLogFilesOutputDescribeDBLogFiles {
  LogFileName: String
  LastWritten: JSON
  Size: JSON
}

input AwsRDSDescribeDBParameterGroupsInput {
  DBParameterGroupName: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBParameterGroupsOutput {
  Marker: String
  DBParameterGroups: [AwsRDSS10]
}

input AwsRDSDescribeDBParametersInput {
  DBParameterGroupName: String!
  Source: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBParametersOutput {
  Parameters: [AwsRDSS3q]
  Marker: String
}

input AwsRDSDescribeDBSecurityGroupsInput {
  DBSecurityGroupName: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBSecurityGroupsOutput {
  Marker: String
  DBSecurityGroups: [AwsRDSSk]
}

input AwsRDSDescribeDBSnapshotAttributesInput {
  DBSnapshotIdentifier: String!
}

type AwsRDSDescribeDBSnapshotAttributesOutput {
  DBSnapshotAttributesResult: AwsRDSS4w
}

input AwsRDSDescribeDBSnapshotsInput {
  DBInstanceIdentifier: String
  DBSnapshotIdentifier: String
  SnapshotType: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
  IncludeShared: Boolean
  IncludePublic: Boolean
}

type AwsRDSDescribeDBSnapshotsOutput {
  Marker: String
  DBSnapshots: [AwsRDSS13]
}

input AwsRDSDescribeDBSubnetGroupsInput {
  DBSubnetGroupName: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeDBSubnetGroupsOutput {
  Marker: String
  DBSubnetGroups: [AwsRDSS22]
}

input AwsRDSDescribeEngineDefaultClusterParametersInput {
  DBParameterGroupFamily: String!
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeEngineDefaultClusterParametersOutput {
  EngineDefaults: AwsRDSS57
}

input AwsRDSDescribeEngineDefaultParametersInput {
  DBParameterGroupFamily: String!
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeEngineDefaultParametersOutput {
  EngineDefaults: AwsRDSS57
}

input AwsRDSDescribeEventCategoriesInput {
  SourceType: String
  Filters: [AwsRDSS3fInput]
}

type AwsRDSDescribeEventCategoriesOutput {
  EventCategoriesMapList: [AwsRDSDescribeEventCategoriesOutputEventCategoriesMapList]
}

type AwsRDSDescribeEventCategoriesOutputEventCategoriesMapList {
  SourceType: String
  EventCategories: [String]
}

input AwsRDSDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  EventCategories: [String]
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeEventsOutput {
  Marker: String
  Events: [AwsRDSDescribeEventsOutputEvents]
}

type AwsRDSDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  EventCategories: [String]
  Date: Date
  SourceArn: String
}

input AwsRDSDescribeEventSubscriptionsInput {
  SubscriptionName: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeEventSubscriptionsOutput {
  Marker: String
  EventSubscriptionsList: [AwsRDSS5]
}

input AwsRDSDescribeOptionGroupOptionsInput {
  EngineName: String!
  MajorEngineVersion: String
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeOptionGroupOptionsOutput {
  OptionGroupOptions: [AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptions]
  Marker: String
}

type AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptions {
  Name: String
  Description: String
  EngineName: String
  MajorEngineVersion: String
  MinimumRequiredMinorEngineVersion: String
  PortRequired: Boolean
  DefaultPort: Int
  OptionsDependedOn: [String]
  OptionsConflictsWith: [String]
  Persistent: Boolean
  Permanent: Boolean
  RequiresAutoMinorEngineVersionUpgrade: Boolean
  VpcOnly: Boolean
  SupportsOptionVersionDowngrade: Boolean
  OptionGroupOptionSettings: [AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionSettings]
  OptionGroupOptionVersions: [AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionVersions]
}

type AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionSettings {
  SettingName: String
  SettingDescription: String
  DefaultValue: String
  ApplyType: String
  AllowedValues: String
  IsModifiable: Boolean
}

type AwsRDSDescribeOptionGroupOptionsOutputOptionGroupOptionsOptionGroupOptionVersions {
  Version: String
  IsDefault: Boolean
}

input AwsRDSDescribeOptionGroupsInput {
  OptionGroupName: String
  Filters: [AwsRDSS3fInput]
  Marker: String
  MaxRecords: Int
  EngineName: String
  MajorEngineVersion: String
}

type AwsRDSDescribeOptionGroupsOutput {
  OptionGroupsList: [AwsRDSS17]
  Marker: String
}

input AwsRDSDescribeOrderableDBInstanceOptionsInput {
  Engine: String!
  EngineVersion: String
  DBInstanceClass: String
  LicenseModel: String
  Vpc: Boolean
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeOrderableDBInstanceOptionsOutput {
  OrderableDBInstanceOptions: [AwsRDSDescribeOrderableDBInstanceOptionsOutputOrderableDBInstanceOptions]
  Marker: String
}

type AwsRDSDescribeOrderableDBInstanceOptionsOutputOrderableDBInstanceOptions {
  Engine: String
  EngineVersion: String
  DBInstanceClass: String
  LicenseModel: String
  AvailabilityZones: [AwsRDSS25]
  MultiAZCapable: Boolean
  ReadReplicaCapable: Boolean
  Vpc: Boolean
  SupportsStorageEncryption: Boolean
  StorageType: String
  SupportsIops: Boolean
  SupportsEnhancedMonitoring: Boolean
  SupportsIAMDatabaseAuthentication: Boolean
  SupportsPerformanceInsights: Boolean
  MinStorageSize: Int
  MaxStorageSize: Int
  MinIopsPerDbInstance: Int
  MaxIopsPerDbInstance: Int
  MinIopsPerGib: JSON
  MaxIopsPerGib: JSON
}

input AwsRDSDescribePendingMaintenanceActionsInput {
  ResourceIdentifier: String
  Filters: [AwsRDSS3fInput]
  Marker: String
  MaxRecords: Int
}

type AwsRDSDescribePendingMaintenanceActionsOutput {
  PendingMaintenanceActions: [AwsRDSSe]
  Marker: String
}

input AwsRDSDescribeReservedDBInstancesInput {
  ReservedDBInstanceId: String
  ReservedDBInstancesOfferingId: String
  DBInstanceClass: String
  Duration: String
  ProductDescription: String
  OfferingType: String
  MultiAZ: Boolean
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

input AwsRDSDescribeReservedDBInstancesOfferingsInput {
  ReservedDBInstancesOfferingId: String
  DBInstanceClass: String
  Duration: String
  ProductDescription: String
  OfferingType: String
  MultiAZ: Boolean
  Filters: [AwsRDSS3fInput]
  MaxRecords: Int
  Marker: String
}

type AwsRDSDescribeReservedDBInstancesOfferingsOutput {
  Marker: String
  ReservedDBInstancesOfferings: [AwsRDSDescribeReservedDBInstancesOfferingsOutputReservedDBInstancesOfferings]
}

type AwsRDSDescribeReservedDBInstancesOfferingsOutputReservedDBInstancesOfferings {
  ReservedDBInstancesOfferingId: String
  DBInstanceClass: String
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  ProductDescription: String
  OfferingType: String
  MultiAZ: Boolean
  RecurringCharges: [AwsRDSS6d]
}

type AwsRDSDescribeReservedDBInstancesOutput {
  Marker: String
  ReservedDBInstances: [AwsRDSS6b]
}

input AwsRDSDescribeSourceRegionsInput {
  RegionName: String
  MaxRecords: Int
  Marker: String
  Filters: [AwsRDSS3fInput]
}

type AwsRDSDescribeSourceRegionsOutput {
  Marker: String
  SourceRegions: [AwsRDSDescribeSourceRegionsOutputSourceRegions]
}

type AwsRDSDescribeSourceRegionsOutputSourceRegions {
  RegionName: String
  Endpoint: String
  Status: String
}

input AwsRDSDescribeValidDBInstanceModificationsInput {
  DBInstanceIdentifier: String!
}

type AwsRDSDescribeValidDBInstanceModificationsOutput {
  ValidDBInstanceModificationsMessage: AwsRDSDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessage
}

type AwsRDSDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessage {
  Storage: [AwsRDSDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorage]
}

type AwsRDSDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorage {
  StorageType: String
  StorageSize: [AwsRDSS6s]
  ProvisionedIops: [AwsRDSS6s]
  IopsToStorageRatio: [AwsRDSDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorageIopsToStorageRatio]
}

type AwsRDSDescribeValidDBInstanceModificationsOutputValidDBInstanceModificationsMessageStorageIopsToStorageRatio {
  From: JSON
  To: JSON
}

input AwsRDSDownloadDBLogFilePortionInput {
  DBInstanceIdentifier: String!
  LogFileName: String!
  Marker: String
  NumberOfLines: Int
}

type AwsRDSDownloadDBLogFilePortionOutput {
  LogFileData: String
  Marker: String
  AdditionalDataPending: Boolean
}

input AwsRDSFailoverDBClusterInput {
  DBClusterIdentifier: String
  TargetDBInstanceIdentifier: String
}

type AwsRDSFailoverDBClusterOutput {
  DBCluster: AwsRDSS1j
}

input AwsRDSListTagsForResourceInput {
  ResourceName: String!
  Filters: [AwsRDSS3fInput]
}

type AwsRDSListTagsForResourceOutput {
  TagList: [AwsRDSSa]
}

input AwsRDSModifyDBClusterInput {
  DBClusterIdentifier: String!
  NewDBClusterIdentifier: String
  ApplyImmediately: Boolean
  BackupRetentionPeriod: Int
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  Port: Int
  MasterUserPassword: String
  OptionGroupName: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  EnableIAMDatabaseAuthentication: Boolean
}

type AwsRDSModifyDBClusterOutput {
  DBCluster: AwsRDSS1j
}

input AwsRDSModifyDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  Parameters: [AwsRDSS3qInput]!
}

input AwsRDSModifyDBClusterSnapshotAttributeInput {
  DBClusterSnapshotIdentifier: String!
  AttributeName: String!
  ValuesToAdd: [String]
  ValuesToRemove: [String]
}

type AwsRDSModifyDBClusterSnapshotAttributeOutput {
  DBClusterSnapshotAttributesResult: AwsRDSS3v
}

input AwsRDSModifyDBInstanceInput {
  DBInstanceIdentifier: String!
  AllocatedStorage: Int
  DBInstanceClass: String
  DBSubnetGroupName: String
  DBSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  ApplyImmediately: Boolean
  MasterUserPassword: String
  DBParameterGroupName: String
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  MultiAZ: Boolean
  EngineVersion: String
  AllowMajorVersionUpgrade: Boolean
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  Iops: Int
  OptionGroupName: String
  NewDBInstanceIdentifier: String
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  CACertificateIdentifier: String
  Domain: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  DBPortNumber: Int
  PubliclyAccessible: Boolean
  MonitoringRoleArn: String
  DomainIAMRoleName: String
  PromotionTier: Int
  EnableIAMDatabaseAuthentication: Boolean
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
}

type AwsRDSModifyDBInstanceOutput {
  DBInstance: AwsRDSS1y
}

input AwsRDSModifyDBParameterGroupInput {
  DBParameterGroupName: String!
  Parameters: [AwsRDSS3qInput]!
}

input AwsRDSModifyDBSnapshotAttributeInput {
  DBSnapshotIdentifier: String!
  AttributeName: String!
  ValuesToAdd: [String]
  ValuesToRemove: [String]
}

type AwsRDSModifyDBSnapshotAttributeOutput {
  DBSnapshotAttributesResult: AwsRDSS4w
}

input AwsRDSModifyDBSnapshotInput {
  DBSnapshotIdentifier: String!
  EngineVersion: String
  OptionGroupName: String
}

type AwsRDSModifyDBSnapshotOutput {
  DBSnapshot: AwsRDSS13
}

input AwsRDSModifyDBSubnetGroupInput {
  DBSubnetGroupName: String!
  DBSubnetGroupDescription: String
  SubnetIds: [String]!
}

type AwsRDSModifyDBSubnetGroupOutput {
  DBSubnetGroup: AwsRDSS22
}

input AwsRDSModifyEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String
  SourceType: String
  EventCategories: [String]
  Enabled: Boolean
}

type AwsRDSModifyEventSubscriptionOutput {
  EventSubscription: AwsRDSS5
}

input AwsRDSModifyOptionGroupInput {
  OptionGroupName: String!
  OptionsToInclude: [AwsRDSModifyOptionGroupOptionsToIncludeInput]
  OptionsToRemove: [String]
  ApplyImmediately: Boolean
}

input AwsRDSModifyOptionGroupOptionsToIncludeInput {
  OptionName: String!
  Port: Int
  OptionVersion: String
  DBSecurityGroupMemberships: [String]
  VpcSecurityGroupMemberships: [String]
  OptionSettings: [AwsRDSS1bInput]
}

type AwsRDSModifyOptionGroupOutput {
  OptionGroup: AwsRDSS17
}

input AwsRDSPromoteReadReplicaDBClusterInput {
  DBClusterIdentifier: String!
}

type AwsRDSPromoteReadReplicaDBClusterOutput {
  DBCluster: AwsRDSS1j
}

input AwsRDSPromoteReadReplicaInput {
  DBInstanceIdentifier: String!
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
}

type AwsRDSPromoteReadReplicaOutput {
  DBInstance: AwsRDSS1y
}

input AwsRDSPurchaseReservedDBInstancesOfferingInput {
  ReservedDBInstancesOfferingId: String!
  ReservedDBInstanceId: String
  DBInstanceCount: Int
  Tags: [AwsRDSSaInput]
}

type AwsRDSPurchaseReservedDBInstancesOfferingOutput {
  ReservedDBInstance: AwsRDSS6b
}

input AwsRDSRebootDBInstanceInput {
  DBInstanceIdentifier: String!
  ForceFailover: Boolean
}

type AwsRDSRebootDBInstanceOutput {
  DBInstance: AwsRDSS1y
}

input AwsRDSRemoveRoleFromDBClusterInput {
  DBClusterIdentifier: String!
  RoleArn: String!
}

input AwsRDSRemoveSourceIdentifierFromSubscriptionInput {
  SubscriptionName: String!
  SourceIdentifier: String!
}

type AwsRDSRemoveSourceIdentifierFromSubscriptionOutput {
  EventSubscription: AwsRDSS5
}

input AwsRDSRemoveTagsFromResourceInput {
  ResourceName: String!
  TagKeys: [String]!
}

input AwsRDSResetDBClusterParameterGroupInput {
  DBClusterParameterGroupName: String!
  ResetAllParameters: Boolean
  Parameters: [AwsRDSS3qInput]
}

input AwsRDSResetDBParameterGroupInput {
  DBParameterGroupName: String!
  ResetAllParameters: Boolean
  Parameters: [AwsRDSS3qInput]
}

input AwsRDSRestoreDBClusterFromS3Input {
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  CharacterSetName: String
  DatabaseName: String
  DBClusterIdentifier: String!
  DBClusterParameterGroupName: String
  VpcSecurityGroupIds: [String]
  DBSubnetGroupName: String
  Engine: String!
  EngineVersion: String
  Port: Int
  MasterUsername: String!
  MasterUserPassword: String!
  OptionGroupName: String
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  Tags: [AwsRDSSaInput]
  StorageEncrypted: Boolean
  KmsKeyId: String
  EnableIAMDatabaseAuthentication: Boolean
  SourceEngine: String!
  SourceEngineVersion: String!
  S3BucketName: String!
  S3Prefix: String
  S3IngestionRoleArn: String!
}

type AwsRDSRestoreDBClusterFromS3Output {
  DBCluster: AwsRDSS1j
}

input AwsRDSRestoreDBClusterFromSnapshotInput {
  AvailabilityZones: [String]
  DBClusterIdentifier: String!
  SnapshotIdentifier: String!
  Engine: String!
  EngineVersion: String
  Port: Int
  DBSubnetGroupName: String
  DatabaseName: String
  OptionGroupName: String
  VpcSecurityGroupIds: [String]
  Tags: [AwsRDSSaInput]
  KmsKeyId: String
  EnableIAMDatabaseAuthentication: Boolean
}

type AwsRDSRestoreDBClusterFromSnapshotOutput {
  DBCluster: AwsRDSS1j
}

input AwsRDSRestoreDBClusterToPointInTimeInput {
  DBClusterIdentifier: String!
  RestoreType: String
  SourceDBClusterIdentifier: String!
  RestoreToTime: Date
  UseLatestRestorableTime: Boolean
  Port: Int
  DBSubnetGroupName: String
  OptionGroupName: String
  VpcSecurityGroupIds: [String]
  Tags: [AwsRDSSaInput]
  KmsKeyId: String
  EnableIAMDatabaseAuthentication: Boolean
}

type AwsRDSRestoreDBClusterToPointInTimeOutput {
  DBCluster: AwsRDSS1j
}

input AwsRDSRestoreDBInstanceFromDBSnapshotInput {
  DBInstanceIdentifier: String!
  DBSnapshotIdentifier: String!
  DBInstanceClass: String
  Port: Int
  AvailabilityZone: String
  DBSubnetGroupName: String
  MultiAZ: Boolean
  PubliclyAccessible: Boolean
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  DBName: String
  Engine: String
  Iops: Int
  OptionGroupName: String
  Tags: [AwsRDSSaInput]
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  Domain: String
  CopyTagsToSnapshot: Boolean
  DomainIAMRoleName: String
  EnableIAMDatabaseAuthentication: Boolean
}

type AwsRDSRestoreDBInstanceFromDBSnapshotOutput {
  DBInstance: AwsRDSS1y
}

input AwsRDSRestoreDBInstanceFromS3Input {
  DBName: String
  DBInstanceIdentifier: String!
  AllocatedStorage: Int
  DBInstanceClass: String!
  Engine: String!
  MasterUsername: String
  MasterUserPassword: String
  DBSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  AvailabilityZone: String
  DBSubnetGroupName: String
  PreferredMaintenanceWindow: String
  DBParameterGroupName: String
  BackupRetentionPeriod: Int
  PreferredBackupWindow: String
  Port: Int
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  Iops: Int
  OptionGroupName: String
  PubliclyAccessible: Boolean
  Tags: [AwsRDSSaInput]
  StorageType: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  MonitoringRoleArn: String
  EnableIAMDatabaseAuthentication: Boolean
  SourceEngine: String!
  SourceEngineVersion: String!
  S3BucketName: String!
  S3Prefix: String
  S3IngestionRoleArn: String!
  EnablePerformanceInsights: Boolean
  PerformanceInsightsKMSKeyId: String
}

type AwsRDSRestoreDBInstanceFromS3Output {
  DBInstance: AwsRDSS1y
}

input AwsRDSRestoreDBInstanceToPointInTimeInput {
  SourceDBInstanceIdentifier: String!
  TargetDBInstanceIdentifier: String!
  RestoreTime: Date
  UseLatestRestorableTime: Boolean
  DBInstanceClass: String
  Port: Int
  AvailabilityZone: String
  DBSubnetGroupName: String
  MultiAZ: Boolean
  PubliclyAccessible: Boolean
  AutoMinorVersionUpgrade: Boolean
  LicenseModel: String
  DBName: String
  Engine: String
  Iops: Int
  OptionGroupName: String
  CopyTagsToSnapshot: Boolean
  Tags: [AwsRDSSaInput]
  StorageType: String
  TdeCredentialArn: String
  TdeCredentialPassword: String
  Domain: String
  DomainIAMRoleName: String
  EnableIAMDatabaseAuthentication: Boolean
}

type AwsRDSRestoreDBInstanceToPointInTimeOutput {
  DBInstance: AwsRDSS1y
}

input AwsRDSRevokeDBSecurityGroupIngressInput {
  DBSecurityGroupName: String!
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupId: String
  EC2SecurityGroupOwnerId: String
}

type AwsRDSRevokeDBSecurityGroupIngressOutput {
  DBSecurityGroup: AwsRDSSk
}

type AwsRDSS10 {
  DBParameterGroupName: String
  DBParameterGroupFamily: String
  Description: String
  DBParameterGroupArn: String
}

type AwsRDSS13 {
  DBSnapshotIdentifier: String
  DBInstanceIdentifier: String
  SnapshotCreateTime: Date
  Engine: String
  AllocatedStorage: Int
  Status: String
  Port: Int
  AvailabilityZone: String
  VpcId: String
  InstanceCreateTime: Date
  MasterUsername: String
  EngineVersion: String
  LicenseModel: String
  SnapshotType: String
  Iops: Int
  OptionGroupName: String
  PercentProgress: Int
  SourceRegion: String
  SourceDBSnapshotIdentifier: String
  StorageType: String
  TdeCredentialArn: String
  Encrypted: Boolean
  KmsKeyId: String
  DBSnapshotArn: String
  Timezone: String
  IAMDatabaseAuthenticationEnabled: Boolean
}

type AwsRDSS17 {
  OptionGroupName: String
  OptionGroupDescription: String
  EngineName: String
  MajorEngineVersion: String
  Options: [AwsRDSS17Options]
  AllowsVpcAndNonVpcInstanceMemberships: Boolean
  VpcId: String
  OptionGroupArn: String
}

type AwsRDSS17Options {
  OptionName: String
  OptionDescription: String
  Persistent: Boolean
  Permanent: Boolean
  Port: Int
  OptionVersion: String
  OptionSettings: [AwsRDSS1b]
  DBSecurityGroupMemberships: [AwsRDSS1c]
  VpcSecurityGroupMemberships: [AwsRDSS1e]
}

type AwsRDSS1b {
  Name: String
  Value: String
  DefaultValue: String
  Description: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  IsCollection: Boolean
}

input AwsRDSS1bInput {
  Name: String
  Value: String
  DefaultValue: String
  Description: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  IsCollection: Boolean
}

type AwsRDSS1c {
  DBSecurityGroupName: String
  Status: String
}

type AwsRDSS1e {
  VpcSecurityGroupId: String
  Status: String
}

type AwsRDSS1j {
  AllocatedStorage: Int
  AvailabilityZones: [String]
  BackupRetentionPeriod: Int
  CharacterSetName: String
  DatabaseName: String
  DBClusterIdentifier: String
  DBClusterParameterGroup: String
  DBSubnetGroup: String
  Status: String
  PercentProgress: String
  EarliestRestorableTime: Date
  Endpoint: String
  ReaderEndpoint: String
  MultiAZ: Boolean
  Engine: String
  EngineVersion: String
  LatestRestorableTime: Date
  Port: Int
  MasterUsername: String
  DBClusterOptionGroupMemberships: [AwsRDSS1jDBClusterOptionGroupMemberships]
  PreferredBackupWindow: String
  PreferredMaintenanceWindow: String
  ReplicationSourceIdentifier: String
  ReadReplicaIdentifiers: [String]
  DBClusterMembers: [AwsRDSS1jDBClusterMembers]
  VpcSecurityGroups: [AwsRDSS1e]
  HostedZoneId: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  DbClusterResourceId: String
  DBClusterArn: String
  AssociatedRoles: [AwsRDSS1jAssociatedRoles]
  IAMDatabaseAuthenticationEnabled: Boolean
  CloneGroupId: String
  ClusterCreateTime: Date
}

type AwsRDSS1jAssociatedRoles {
  RoleArn: String
  Status: String
}

type AwsRDSS1jDBClusterMembers {
  DBInstanceIdentifier: String
  IsClusterWriter: Boolean
  DBClusterParameterGroupStatus: String
  PromotionTier: Int
}

type AwsRDSS1jDBClusterOptionGroupMemberships {
  DBClusterOptionGroupName: String
  Status: String
}

type AwsRDSS1y {
  DBInstanceIdentifier: String
  DBInstanceClass: String
  Engine: String
  DBInstanceStatus: String
  MasterUsername: String
  DBName: String
  Endpoint: AwsRDSS1yEndpoint
  AllocatedStorage: Int
  InstanceCreateTime: Date
  PreferredBackupWindow: String
  BackupRetentionPeriod: Int
  DBSecurityGroups: [AwsRDSS1c]
  VpcSecurityGroups: [AwsRDSS1e]
  DBParameterGroups: [AwsRDSS1yDBParameterGroups]
  AvailabilityZone: String
  DBSubnetGroup: AwsRDSS22
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsRDSS1yPendingModifiedValues
  LatestRestorableTime: Date
  MultiAZ: Boolean
  EngineVersion: String
  AutoMinorVersionUpgrade: Boolean
  ReadReplicaSourceDBInstanceIdentifier: String
  ReadReplicaDBInstanceIdentifiers: [String]
  ReadReplicaDBClusterIdentifiers: [String]
  LicenseModel: String
  Iops: Int
  OptionGroupMemberships: [AwsRDSS1yOptionGroupMemberships]
  CharacterSetName: String
  SecondaryAvailabilityZone: String
  PubliclyAccessible: Boolean
  StatusInfos: [AwsRDSS1yStatusInfos]
  StorageType: String
  TdeCredentialArn: String
  DbInstancePort: Int
  DBClusterIdentifier: String
  StorageEncrypted: Boolean
  KmsKeyId: String
  DbiResourceId: String
  CACertificateIdentifier: String
  DomainMemberships: [AwsRDSS1yDomainMemberships]
  CopyTagsToSnapshot: Boolean
  MonitoringInterval: Int
  EnhancedMonitoringResourceArn: String
  MonitoringRoleArn: String
  PromotionTier: Int
  DBInstanceArn: String
  Timezone: String
  IAMDatabaseAuthenticationEnabled: Boolean
  PerformanceInsightsEnabled: Boolean
  PerformanceInsightsKMSKeyId: String
}

type AwsRDSS1yDBParameterGroups {
  DBParameterGroupName: String
  ParameterApplyStatus: String
}

type AwsRDSS1yDomainMemberships {
  Domain: String
  Status: String
  FQDN: String
  IAMRoleName: String
}

type AwsRDSS1yEndpoint {
  Address: String
  Port: Int
  HostedZoneId: String
}

type AwsRDSS1yOptionGroupMemberships {
  OptionGroupName: String
  Status: String
}

type AwsRDSS1yPendingModifiedValues {
  DBInstanceClass: String
  AllocatedStorage: Int
  MasterUserPassword: String
  Port: Int
  BackupRetentionPeriod: Int
  MultiAZ: Boolean
  EngineVersion: String
  LicenseModel: String
  Iops: Int
  DBInstanceIdentifier: String
  StorageType: String
  CACertificateIdentifier: String
  DBSubnetGroupName: String
}

type AwsRDSS1yStatusInfos {
  StatusType: String
  Normal: Boolean
  Status: String
  Message: String
}

type AwsRDSS22 {
  DBSubnetGroupName: String
  DBSubnetGroupDescription: String
  VpcId: String
  SubnetGroupStatus: String
  Subnets: [AwsRDSS22Subnets]
  DBSubnetGroupArn: String
}

type AwsRDSS22Subnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsRDSS25
  SubnetStatus: String
}

type AwsRDSS25 {
  Name: String
}

input AwsRDSS3fInput {
  Name: String!
  Values: [String]!
}

type AwsRDSS3q {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ApplyMethod: String
}

input AwsRDSS3qInput {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  ApplyType: String
  DataType: String
  AllowedValues: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
  ApplyMethod: String
}

type AwsRDSS3v {
  DBClusterSnapshotIdentifier: String
  DBClusterSnapshotAttributes: [AwsRDSS3vDBClusterSnapshotAttributes]
}

type AwsRDSS3vDBClusterSnapshotAttributes {
  AttributeName: String
  AttributeValues: [String]
}

type AwsRDSS49 {
  CharacterSetName: String
  CharacterSetDescription: String
}

type AwsRDSS4w {
  DBSnapshotIdentifier: String
  DBSnapshotAttributes: [AwsRDSS4wDBSnapshotAttributes]
}

type AwsRDSS4wDBSnapshotAttributes {
  AttributeName: String
  AttributeValues: [String]
}

type AwsRDSS5 {
  CustomerAwsId: String
  CustSubscriptionId: String
  SnsTopicArn: String
  Status: String
  SubscriptionCreationTime: String
  SourceType: String
  SourceIdsList: [String]
  EventCategoriesList: [String]
  Enabled: Boolean
  EventSubscriptionArn: String
}

type AwsRDSS57 {
  DBParameterGroupFamily: String
  Marker: String
  Parameters: [AwsRDSS3q]
}

type AwsRDSS6b {
  ReservedDBInstanceId: String
  ReservedDBInstancesOfferingId: String
  DBInstanceClass: String
  StartTime: Date
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  DBInstanceCount: Int
  ProductDescription: String
  OfferingType: String
  MultiAZ: Boolean
  State: String
  RecurringCharges: [AwsRDSS6d]
  ReservedDBInstanceArn: String
}

type AwsRDSS6d {
  RecurringChargeAmount: JSON
  RecurringChargeFrequency: String
}

type AwsRDSS6s {
  From: Int
  To: Int
  Step: Int
}

type AwsRDSSa {
  Key: String
  Value: String
}

input AwsRDSSaInput {
  Key: String
  Value: String
}

type AwsRDSSe {
  ResourceIdentifier: String
  PendingMaintenanceActionDetails: [AwsRDSSePendingMaintenanceActionDetails]
}

type AwsRDSSePendingMaintenanceActionDetails {
  Action: String
  AutoAppliedAfterDate: Date
  ForcedApplyDate: Date
  OptInStatus: String
  CurrentApplyDate: Date
  Description: String
}

type AwsRDSSk {
  OwnerId: String
  DBSecurityGroupName: String
  DBSecurityGroupDescription: String
  VpcId: String
  EC2SecurityGroups: [AwsRDSSkEC2SecurityGroups]
  IPRanges: [AwsRDSSkIPRanges]
  DBSecurityGroupArn: String
}

type AwsRDSSkEC2SecurityGroups {
  Status: String
  EC2SecurityGroupName: String
  EC2SecurityGroupId: String
  EC2SecurityGroupOwnerId: String
}

type AwsRDSSkIPRanges {
  Status: String
  CIDRIP: String
}

type AwsRDSSr {
  DBClusterParameterGroupName: String
  DBParameterGroupFamily: String
  Description: String
  DBClusterParameterGroupArn: String
}

input AwsRDSStartDBInstanceInput {
  DBInstanceIdentifier: String!
}

type AwsRDSStartDBInstanceOutput {
  DBInstance: AwsRDSS1y
}

input AwsRDSStopDBInstanceInput {
  DBInstanceIdentifier: String!
  DBSnapshotIdentifier: String
}

type AwsRDSStopDBInstanceOutput {
  DBInstance: AwsRDSS1y
}

type AwsRDSSv {
  AvailabilityZones: [String]
  DBClusterSnapshotIdentifier: String
  DBClusterIdentifier: String
  SnapshotCreateTime: Date
  Engine: String
  AllocatedStorage: Int
  Status: String
  Port: Int
  VpcId: String
  ClusterCreateTime: Date
  MasterUsername: String
  EngineVersion: String
  LicenseModel: String
  SnapshotType: String
  PercentProgress: Int
  StorageEncrypted: Boolean
  KmsKeyId: String
  DBClusterSnapshotArn: String
  SourceDBClusterSnapshotArn: String
  IAMDatabaseAuthenticationEnabled: Boolean
}

# Amazon Redshift (2012-12-01)
type AwsRedshift {
  authorizeClusterSecurityGroupIngress(input: AwsRedshiftAuthorizeClusterSecurityGroupIngressInput!, config: AwsConfig): AwsRedshiftAuthorizeClusterSecurityGroupIngressOutput
  authorizeSnapshotAccess(input: AwsRedshiftAuthorizeSnapshotAccessInput!, config: AwsConfig): AwsRedshiftAuthorizeSnapshotAccessOutput
  copyClusterSnapshot(input: AwsRedshiftCopyClusterSnapshotInput!, config: AwsConfig): AwsRedshiftCopyClusterSnapshotOutput
  createCluster(input: AwsRedshiftCreateClusterInput!, config: AwsConfig): AwsRedshiftCreateClusterOutput
  createClusterParameterGroup(input: AwsRedshiftCreateClusterParameterGroupInput!, config: AwsConfig): AwsRedshiftCreateClusterParameterGroupOutput
  createClusterSecurityGroup(input: AwsRedshiftCreateClusterSecurityGroupInput!, config: AwsConfig): AwsRedshiftCreateClusterSecurityGroupOutput
  createClusterSnapshot(input: AwsRedshiftCreateClusterSnapshotInput!, config: AwsConfig): AwsRedshiftCreateClusterSnapshotOutput
  createClusterSubnetGroup(input: AwsRedshiftCreateClusterSubnetGroupInput!, config: AwsConfig): AwsRedshiftCreateClusterSubnetGroupOutput
  createEventSubscription(input: AwsRedshiftCreateEventSubscriptionInput!, config: AwsConfig): AwsRedshiftCreateEventSubscriptionOutput
  createHsmClientCertificate(input: AwsRedshiftCreateHsmClientCertificateInput!, config: AwsConfig): AwsRedshiftCreateHsmClientCertificateOutput
  createHsmConfiguration(input: AwsRedshiftCreateHsmConfigurationInput!, config: AwsConfig): AwsRedshiftCreateHsmConfigurationOutput
  createSnapshotCopyGrant(input: AwsRedshiftCreateSnapshotCopyGrantInput!, config: AwsConfig): AwsRedshiftCreateSnapshotCopyGrantOutput
  createTags(input: AwsRedshiftCreateTagsInput!, config: AwsConfig): JSON
  deleteCluster(input: AwsRedshiftDeleteClusterInput!, config: AwsConfig): AwsRedshiftDeleteClusterOutput
  deleteClusterParameterGroup(input: AwsRedshiftDeleteClusterParameterGroupInput!, config: AwsConfig): JSON
  deleteClusterSecurityGroup(input: AwsRedshiftDeleteClusterSecurityGroupInput!, config: AwsConfig): JSON
  deleteClusterSnapshot(input: AwsRedshiftDeleteClusterSnapshotInput!, config: AwsConfig): AwsRedshiftDeleteClusterSnapshotOutput
  deleteClusterSubnetGroup(input: AwsRedshiftDeleteClusterSubnetGroupInput!, config: AwsConfig): JSON
  deleteEventSubscription(input: AwsRedshiftDeleteEventSubscriptionInput!, config: AwsConfig): JSON
  deleteHsmClientCertificate(input: AwsRedshiftDeleteHsmClientCertificateInput!, config: AwsConfig): JSON
  deleteHsmConfiguration(input: AwsRedshiftDeleteHsmConfigurationInput!, config: AwsConfig): JSON
  deleteSnapshotCopyGrant(input: AwsRedshiftDeleteSnapshotCopyGrantInput!, config: AwsConfig): JSON
  deleteTags(input: AwsRedshiftDeleteTagsInput!, config: AwsConfig): JSON
  describeClusterParameterGroups(input: AwsRedshiftDescribeClusterParameterGroupsInput, config: AwsConfig): AwsRedshiftDescribeClusterParameterGroupsOutput
  describeClusterParameters(input: AwsRedshiftDescribeClusterParametersInput!, config: AwsConfig): AwsRedshiftDescribeClusterParametersOutput
  describeClusterSecurityGroups(input: AwsRedshiftDescribeClusterSecurityGroupsInput, config: AwsConfig): AwsRedshiftDescribeClusterSecurityGroupsOutput
  describeClusterSnapshots(input: AwsRedshiftDescribeClusterSnapshotsInput, config: AwsConfig): AwsRedshiftDescribeClusterSnapshotsOutput
  describeClusterSubnetGroups(input: AwsRedshiftDescribeClusterSubnetGroupsInput, config: AwsConfig): AwsRedshiftDescribeClusterSubnetGroupsOutput
  describeClusterVersions(input: AwsRedshiftDescribeClusterVersionsInput, config: AwsConfig): AwsRedshiftDescribeClusterVersionsOutput
  describeClusters(input: AwsRedshiftDescribeClustersInput, config: AwsConfig): AwsRedshiftDescribeClustersOutput
  describeDefaultClusterParameters(input: AwsRedshiftDescribeDefaultClusterParametersInput!, config: AwsConfig): AwsRedshiftDescribeDefaultClusterParametersOutput
  describeEventCategories(input: AwsRedshiftDescribeEventCategoriesInput, config: AwsConfig): AwsRedshiftDescribeEventCategoriesOutput
  describeEventSubscriptions(input: AwsRedshiftDescribeEventSubscriptionsInput, config: AwsConfig): AwsRedshiftDescribeEventSubscriptionsOutput
  describeEvents(input: AwsRedshiftDescribeEventsInput, config: AwsConfig): AwsRedshiftDescribeEventsOutput
  describeHsmClientCertificates(input: AwsRedshiftDescribeHsmClientCertificatesInput, config: AwsConfig): AwsRedshiftDescribeHsmClientCertificatesOutput
  describeHsmConfigurations(input: AwsRedshiftDescribeHsmConfigurationsInput, config: AwsConfig): AwsRedshiftDescribeHsmConfigurationsOutput
  describeLoggingStatus(input: AwsRedshiftDescribeLoggingStatusInput!, config: AwsConfig): JSON
  describeOrderableClusterOptions(input: AwsRedshiftDescribeOrderableClusterOptionsInput, config: AwsConfig): AwsRedshiftDescribeOrderableClusterOptionsOutput
  describeReservedNodeOfferings(input: AwsRedshiftDescribeReservedNodeOfferingsInput, config: AwsConfig): AwsRedshiftDescribeReservedNodeOfferingsOutput
  describeReservedNodes(input: AwsRedshiftDescribeReservedNodesInput, config: AwsConfig): AwsRedshiftDescribeReservedNodesOutput
  describeResize(input: AwsRedshiftDescribeResizeInput!, config: AwsConfig): AwsRedshiftDescribeResizeOutput
  describeSnapshotCopyGrants(input: AwsRedshiftDescribeSnapshotCopyGrantsInput, config: AwsConfig): AwsRedshiftDescribeSnapshotCopyGrantsOutput
  describeTableRestoreStatus(input: AwsRedshiftDescribeTableRestoreStatusInput, config: AwsConfig): AwsRedshiftDescribeTableRestoreStatusOutput
  describeTags(input: AwsRedshiftDescribeTagsInput, config: AwsConfig): AwsRedshiftDescribeTagsOutput
  disableLogging(input: AwsRedshiftDisableLoggingInput!, config: AwsConfig): JSON
  disableSnapshotCopy(input: AwsRedshiftDisableSnapshotCopyInput!, config: AwsConfig): AwsRedshiftDisableSnapshotCopyOutput
  enableLogging(input: AwsRedshiftEnableLoggingInput!, config: AwsConfig): JSON
  enableSnapshotCopy(input: AwsRedshiftEnableSnapshotCopyInput!, config: AwsConfig): AwsRedshiftEnableSnapshotCopyOutput
  getClusterCredentials(input: AwsRedshiftGetClusterCredentialsInput!, config: AwsConfig): AwsRedshiftGetClusterCredentialsOutput
  modifyCluster(input: AwsRedshiftModifyClusterInput!, config: AwsConfig): AwsRedshiftModifyClusterOutput
  modifyClusterIamRoles(input: AwsRedshiftModifyClusterIamRolesInput!, config: AwsConfig): AwsRedshiftModifyClusterIamRolesOutput
  modifyClusterParameterGroup(input: AwsRedshiftModifyClusterParameterGroupInput!, config: AwsConfig): JSON
  modifyClusterSubnetGroup(input: AwsRedshiftModifyClusterSubnetGroupInput!, config: AwsConfig): AwsRedshiftModifyClusterSubnetGroupOutput
  modifyEventSubscription(input: AwsRedshiftModifyEventSubscriptionInput!, config: AwsConfig): AwsRedshiftModifyEventSubscriptionOutput
  modifySnapshotCopyRetentionPeriod(input: AwsRedshiftModifySnapshotCopyRetentionPeriodInput!, config: AwsConfig): AwsRedshiftModifySnapshotCopyRetentionPeriodOutput
  purchaseReservedNodeOffering(input: AwsRedshiftPurchaseReservedNodeOfferingInput!, config: AwsConfig): AwsRedshiftPurchaseReservedNodeOfferingOutput
  rebootCluster(input: AwsRedshiftRebootClusterInput!, config: AwsConfig): AwsRedshiftRebootClusterOutput
  resetClusterParameterGroup(input: AwsRedshiftResetClusterParameterGroupInput!, config: AwsConfig): JSON
  restoreFromClusterSnapshot(input: AwsRedshiftRestoreFromClusterSnapshotInput!, config: AwsConfig): AwsRedshiftRestoreFromClusterSnapshotOutput
  restoreTableFromClusterSnapshot(input: AwsRedshiftRestoreTableFromClusterSnapshotInput!, config: AwsConfig): AwsRedshiftRestoreTableFromClusterSnapshotOutput
  revokeClusterSecurityGroupIngress(input: AwsRedshiftRevokeClusterSecurityGroupIngressInput!, config: AwsConfig): AwsRedshiftRevokeClusterSecurityGroupIngressOutput
  revokeSnapshotAccess(input: AwsRedshiftRevokeSnapshotAccessInput!, config: AwsConfig): AwsRedshiftRevokeSnapshotAccessOutput
  rotateEncryptionKey(input: AwsRedshiftRotateEncryptionKeyInput!, config: AwsConfig): AwsRedshiftRotateEncryptionKeyOutput
}

input AwsRedshiftAuthorizeClusterSecurityGroupIngressInput {
  ClusterSecurityGroupName: String!
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
}

type AwsRedshiftAuthorizeClusterSecurityGroupIngressOutput {
  ClusterSecurityGroup: AwsRedshiftS4
}

input AwsRedshiftAuthorizeSnapshotAccessInput {
  SnapshotIdentifier: String!
  SnapshotClusterIdentifier: String
  AccountWithRestoreAccess: String!
}

type AwsRedshiftAuthorizeSnapshotAccessOutput {
  Snapshot: AwsRedshiftSd
}

input AwsRedshiftCopyClusterSnapshotInput {
  SourceSnapshotIdentifier: String!
  SourceSnapshotClusterIdentifier: String
  TargetSnapshotIdentifier: String!
}

type AwsRedshiftCopyClusterSnapshotOutput {
  Snapshot: AwsRedshiftSd
}

input AwsRedshiftCreateClusterInput {
  DBName: String
  ClusterIdentifier: String!
  ClusterType: String
  NodeType: String!
  MasterUsername: String!
  MasterUserPassword: String!
  ClusterSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  ClusterSubnetGroupName: String
  AvailabilityZone: String
  PreferredMaintenanceWindow: String
  ClusterParameterGroupName: String
  AutomatedSnapshotRetentionPeriod: Int
  Port: Int
  ClusterVersion: String
  AllowVersionUpgrade: Boolean
  NumberOfNodes: Int
  PubliclyAccessible: Boolean
  Encrypted: Boolean
  HsmClientCertificateIdentifier: String
  HsmConfigurationIdentifier: String
  ElasticIp: String
  Tags: [AwsRedshiftS8Input]
  KmsKeyId: String
  EnhancedVpcRouting: Boolean
  AdditionalInfo: String
  IamRoles: [String]
}

type AwsRedshiftCreateClusterOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftCreateClusterParameterGroupInput {
  ParameterGroupName: String!
  ParameterGroupFamily: String!
  Description: String!
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateClusterParameterGroupOutput {
  ClusterParameterGroup: AwsRedshiftS1g
}

input AwsRedshiftCreateClusterSecurityGroupInput {
  ClusterSecurityGroupName: String!
  Description: String!
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateClusterSecurityGroupOutput {
  ClusterSecurityGroup: AwsRedshiftS4
}

input AwsRedshiftCreateClusterSnapshotInput {
  SnapshotIdentifier: String!
  ClusterIdentifier: String!
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateClusterSnapshotOutput {
  Snapshot: AwsRedshiftSd
}

input AwsRedshiftCreateClusterSubnetGroupInput {
  ClusterSubnetGroupName: String!
  Description: String!
  SubnetIds: [String]!
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateClusterSubnetGroupOutput {
  ClusterSubnetGroup: AwsRedshiftS1o
}

input AwsRedshiftCreateEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String!
  SourceType: String
  SourceIds: [String]
  EventCategories: [String]
  Severity: String
  Enabled: Boolean
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateEventSubscriptionOutput {
  EventSubscription: AwsRedshiftS1w
}

input AwsRedshiftCreateHsmClientCertificateInput {
  HsmClientCertificateIdentifier: String!
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateHsmClientCertificateOutput {
  HsmClientCertificate: AwsRedshiftS1z
}

input AwsRedshiftCreateHsmConfigurationInput {
  HsmConfigurationIdentifier: String!
  Description: String!
  HsmIpAddress: String!
  HsmPartitionName: String!
  HsmPartitionPassword: String!
  HsmServerPublicCertificate: String!
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateHsmConfigurationOutput {
  HsmConfiguration: AwsRedshiftS22
}

input AwsRedshiftCreateSnapshotCopyGrantInput {
  SnapshotCopyGrantName: String!
  KmsKeyId: String
  Tags: [AwsRedshiftS8Input]
}

type AwsRedshiftCreateSnapshotCopyGrantOutput {
  SnapshotCopyGrant: AwsRedshiftS25
}

input AwsRedshiftCreateTagsInput {
  ResourceName: String!
  Tags: [AwsRedshiftS8Input]!
}

input AwsRedshiftDeleteClusterInput {
  ClusterIdentifier: String!
  SkipFinalClusterSnapshot: Boolean
  FinalClusterSnapshotIdentifier: String
}

type AwsRedshiftDeleteClusterOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftDeleteClusterParameterGroupInput {
  ParameterGroupName: String!
}

input AwsRedshiftDeleteClusterSecurityGroupInput {
  ClusterSecurityGroupName: String!
}

input AwsRedshiftDeleteClusterSnapshotInput {
  SnapshotIdentifier: String!
  SnapshotClusterIdentifier: String
}

type AwsRedshiftDeleteClusterSnapshotOutput {
  Snapshot: AwsRedshiftSd
}

input AwsRedshiftDeleteClusterSubnetGroupInput {
  ClusterSubnetGroupName: String!
}

input AwsRedshiftDeleteEventSubscriptionInput {
  SubscriptionName: String!
}

input AwsRedshiftDeleteHsmClientCertificateInput {
  HsmClientCertificateIdentifier: String!
}

input AwsRedshiftDeleteHsmConfigurationInput {
  HsmConfigurationIdentifier: String!
}

input AwsRedshiftDeleteSnapshotCopyGrantInput {
  SnapshotCopyGrantName: String!
}

input AwsRedshiftDeleteTagsInput {
  ResourceName: String!
  TagKeys: [String]!
}

input AwsRedshiftDescribeClusterParameterGroupsInput {
  ParameterGroupName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeClusterParameterGroupsOutput {
  Marker: String
  ParameterGroups: [AwsRedshiftS1g]
}

input AwsRedshiftDescribeClusterParametersInput {
  ParameterGroupName: String!
  Source: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeClusterParametersOutput {
  Parameters: [AwsRedshiftS2q]
  Marker: String
}

input AwsRedshiftDescribeClusterSecurityGroupsInput {
  ClusterSecurityGroupName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeClusterSecurityGroupsOutput {
  Marker: String
  ClusterSecurityGroups: [AwsRedshiftS4]
}

input AwsRedshiftDescribeClustersInput {
  ClusterIdentifier: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

input AwsRedshiftDescribeClusterSnapshotsInput {
  ClusterIdentifier: String
  SnapshotIdentifier: String
  SnapshotType: String
  StartTime: Date
  EndTime: Date
  MaxRecords: Int
  Marker: String
  OwnerAccount: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeClusterSnapshotsOutput {
  Marker: String
  Snapshots: [AwsRedshiftSd]
}

type AwsRedshiftDescribeClustersOutput {
  Marker: String
  Clusters: [AwsRedshiftSv]
}

input AwsRedshiftDescribeClusterSubnetGroupsInput {
  ClusterSubnetGroupName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeClusterSubnetGroupsOutput {
  Marker: String
  ClusterSubnetGroups: [AwsRedshiftS1o]
}

input AwsRedshiftDescribeClusterVersionsInput {
  ClusterVersion: String
  ClusterParameterGroupFamily: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeClusterVersionsOutput {
  Marker: String
  ClusterVersions: [AwsRedshiftDescribeClusterVersionsOutputClusterVersions]
}

type AwsRedshiftDescribeClusterVersionsOutputClusterVersions {
  ClusterVersion: String
  ClusterParameterGroupFamily: String
  Description: String
}

input AwsRedshiftDescribeDefaultClusterParametersInput {
  ParameterGroupFamily: String!
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeDefaultClusterParametersOutput {
  DefaultClusterParameters: AwsRedshiftDescribeDefaultClusterParametersOutputDefaultClusterParameters
}

type AwsRedshiftDescribeDefaultClusterParametersOutputDefaultClusterParameters {
  ParameterGroupFamily: String
  Marker: String
  Parameters: [AwsRedshiftS2q]
}

input AwsRedshiftDescribeEventCategoriesInput {
  SourceType: String
}

type AwsRedshiftDescribeEventCategoriesOutput {
  EventCategoriesMapList: [AwsRedshiftDescribeEventCategoriesOutputEventCategoriesMapList]
}

type AwsRedshiftDescribeEventCategoriesOutputEventCategoriesMapList {
  SourceType: String
  Events: [AwsRedshiftDescribeEventCategoriesOutputEventCategoriesMapListEvents]
}

type AwsRedshiftDescribeEventCategoriesOutputEventCategoriesMapListEvents {
  EventId: String
  EventCategories: [String]
  EventDescription: String
  Severity: String
}

input AwsRedshiftDescribeEventsInput {
  SourceIdentifier: String
  SourceType: String
  StartTime: Date
  EndTime: Date
  Duration: Int
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeEventsOutput {
  Marker: String
  Events: [AwsRedshiftDescribeEventsOutputEvents]
}

type AwsRedshiftDescribeEventsOutputEvents {
  SourceIdentifier: String
  SourceType: String
  Message: String
  EventCategories: [String]
  Severity: String
  Date: Date
  EventId: String
}

input AwsRedshiftDescribeEventSubscriptionsInput {
  SubscriptionName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeEventSubscriptionsOutput {
  Marker: String
  EventSubscriptionsList: [AwsRedshiftS1w]
}

input AwsRedshiftDescribeHsmClientCertificatesInput {
  HsmClientCertificateIdentifier: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeHsmClientCertificatesOutput {
  Marker: String
  HsmClientCertificates: [AwsRedshiftS1z]
}

input AwsRedshiftDescribeHsmConfigurationsInput {
  HsmConfigurationIdentifier: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeHsmConfigurationsOutput {
  Marker: String
  HsmConfigurations: [AwsRedshiftS22]
}

input AwsRedshiftDescribeLoggingStatusInput {
  ClusterIdentifier: String!
}

input AwsRedshiftDescribeOrderableClusterOptionsInput {
  ClusterVersion: String
  NodeType: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeOrderableClusterOptionsOutput {
  OrderableClusterOptions: [AwsRedshiftDescribeOrderableClusterOptionsOutputOrderableClusterOptions]
  Marker: String
}

type AwsRedshiftDescribeOrderableClusterOptionsOutputOrderableClusterOptions {
  ClusterVersion: String
  ClusterType: String
  NodeType: String
  AvailabilityZones: [AwsRedshiftS1r]
}

input AwsRedshiftDescribeReservedNodeOfferingsInput {
  ReservedNodeOfferingId: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeReservedNodeOfferingsOutput {
  Marker: String
  ReservedNodeOfferings: [AwsRedshiftDescribeReservedNodeOfferingsOutputReservedNodeOfferings]
}

type AwsRedshiftDescribeReservedNodeOfferingsOutputReservedNodeOfferings {
  ReservedNodeOfferingId: String
  NodeType: String
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  OfferingType: String
  RecurringCharges: [AwsRedshiftS47]
}

input AwsRedshiftDescribeReservedNodesInput {
  ReservedNodeId: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeReservedNodesOutput {
  Marker: String
  ReservedNodes: [AwsRedshiftS4c]
}

input AwsRedshiftDescribeResizeInput {
  ClusterIdentifier: String!
}

type AwsRedshiftDescribeResizeOutput {
  TargetNodeType: String
  TargetNumberOfNodes: Int
  TargetClusterType: String
  Status: String
  ImportTablesCompleted: [String]
  ImportTablesInProgress: [String]
  ImportTablesNotStarted: [String]
  AvgResizeRateInMegaBytesPerSecond: JSON
  TotalResizeDataInMegaBytes: JSON
  ProgressInMegaBytes: JSON
  ElapsedTimeInSeconds: JSON
  EstimatedTimeToCompletionInSeconds: JSON
}

input AwsRedshiftDescribeSnapshotCopyGrantsInput {
  SnapshotCopyGrantName: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeSnapshotCopyGrantsOutput {
  Marker: String
  SnapshotCopyGrants: [AwsRedshiftS25]
}

input AwsRedshiftDescribeTableRestoreStatusInput {
  ClusterIdentifier: String
  TableRestoreRequestId: String
  MaxRecords: Int
  Marker: String
}

type AwsRedshiftDescribeTableRestoreStatusOutput {
  TableRestoreStatusDetails: [AwsRedshiftS4q]
  Marker: String
}

input AwsRedshiftDescribeTagsInput {
  ResourceName: String
  ResourceType: String
  MaxRecords: Int
  Marker: String
  TagKeys: [String]
  TagValues: [String]
}

type AwsRedshiftDescribeTagsOutput {
  TaggedResources: [AwsRedshiftDescribeTagsOutputTaggedResources]
  Marker: String
}

type AwsRedshiftDescribeTagsOutputTaggedResources {
  Tag: AwsRedshiftS8
  ResourceName: String
  ResourceType: String
}

input AwsRedshiftDisableLoggingInput {
  ClusterIdentifier: String!
}

input AwsRedshiftDisableSnapshotCopyInput {
  ClusterIdentifier: String!
}

type AwsRedshiftDisableSnapshotCopyOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftEnableLoggingInput {
  ClusterIdentifier: String!
  BucketName: String!
  S3KeyPrefix: String
}

input AwsRedshiftEnableSnapshotCopyInput {
  ClusterIdentifier: String!
  DestinationRegion: String!
  RetentionPeriod: Int
  SnapshotCopyGrantName: String
}

type AwsRedshiftEnableSnapshotCopyOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftGetClusterCredentialsInput {
  DbUser: String!
  DbName: String
  ClusterIdentifier: String!
  DurationSeconds: Int
  AutoCreate: Boolean
  DbGroups: [String]
}

type AwsRedshiftGetClusterCredentialsOutput {
  DbUser: String
  DbPassword: String
  Expiration: Date
}

input AwsRedshiftModifyClusterIamRolesInput {
  ClusterIdentifier: String!
  AddIamRoles: [String]
  RemoveIamRoles: [String]
}

type AwsRedshiftModifyClusterIamRolesOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftModifyClusterInput {
  ClusterIdentifier: String!
  ClusterType: String
  NodeType: String
  NumberOfNodes: Int
  ClusterSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  MasterUserPassword: String
  ClusterParameterGroupName: String
  AutomatedSnapshotRetentionPeriod: Int
  PreferredMaintenanceWindow: String
  ClusterVersion: String
  AllowVersionUpgrade: Boolean
  HsmClientCertificateIdentifier: String
  HsmConfigurationIdentifier: String
  NewClusterIdentifier: String
  PubliclyAccessible: Boolean
  ElasticIp: String
  EnhancedVpcRouting: Boolean
}

type AwsRedshiftModifyClusterOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftModifyClusterParameterGroupInput {
  ParameterGroupName: String!
  Parameters: [AwsRedshiftS2qInput]!
}

input AwsRedshiftModifyClusterSubnetGroupInput {
  ClusterSubnetGroupName: String!
  Description: String
  SubnetIds: [String]!
}

type AwsRedshiftModifyClusterSubnetGroupOutput {
  ClusterSubnetGroup: AwsRedshiftS1o
}

input AwsRedshiftModifyEventSubscriptionInput {
  SubscriptionName: String!
  SnsTopicArn: String
  SourceType: String
  SourceIds: [String]
  EventCategories: [String]
  Severity: String
  Enabled: Boolean
}

type AwsRedshiftModifyEventSubscriptionOutput {
  EventSubscription: AwsRedshiftS1w
}

input AwsRedshiftModifySnapshotCopyRetentionPeriodInput {
  ClusterIdentifier: String!
  RetentionPeriod: Int!
}

type AwsRedshiftModifySnapshotCopyRetentionPeriodOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftPurchaseReservedNodeOfferingInput {
  ReservedNodeOfferingId: String!
  NodeCount: Int
}

type AwsRedshiftPurchaseReservedNodeOfferingOutput {
  ReservedNode: AwsRedshiftS4c
}

input AwsRedshiftRebootClusterInput {
  ClusterIdentifier: String!
}

type AwsRedshiftRebootClusterOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftResetClusterParameterGroupInput {
  ParameterGroupName: String!
  ResetAllParameters: Boolean
  Parameters: [AwsRedshiftS2qInput]
}

input AwsRedshiftRestoreFromClusterSnapshotInput {
  ClusterIdentifier: String!
  SnapshotIdentifier: String!
  SnapshotClusterIdentifier: String
  Port: Int
  AvailabilityZone: String
  AllowVersionUpgrade: Boolean
  ClusterSubnetGroupName: String
  PubliclyAccessible: Boolean
  OwnerAccount: String
  HsmClientCertificateIdentifier: String
  HsmConfigurationIdentifier: String
  ElasticIp: String
  ClusterParameterGroupName: String
  ClusterSecurityGroups: [String]
  VpcSecurityGroupIds: [String]
  PreferredMaintenanceWindow: String
  AutomatedSnapshotRetentionPeriod: Int
  KmsKeyId: String
  NodeType: String
  EnhancedVpcRouting: Boolean
  AdditionalInfo: String
  IamRoles: [String]
}

type AwsRedshiftRestoreFromClusterSnapshotOutput {
  Cluster: AwsRedshiftSv
}

input AwsRedshiftRestoreTableFromClusterSnapshotInput {
  ClusterIdentifier: String!
  SnapshotIdentifier: String!
  SourceDatabaseName: String!
  SourceSchemaName: String
  SourceTableName: String!
  TargetDatabaseName: String
  TargetSchemaName: String
  NewTableName: String!
}

type AwsRedshiftRestoreTableFromClusterSnapshotOutput {
  TableRestoreStatus: AwsRedshiftS4q
}

input AwsRedshiftRevokeClusterSecurityGroupIngressInput {
  ClusterSecurityGroupName: String!
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
}

type AwsRedshiftRevokeClusterSecurityGroupIngressOutput {
  ClusterSecurityGroup: AwsRedshiftS4
}

input AwsRedshiftRevokeSnapshotAccessInput {
  SnapshotIdentifier: String!
  SnapshotClusterIdentifier: String
  AccountWithRestoreAccess: String!
}

type AwsRedshiftRevokeSnapshotAccessOutput {
  Snapshot: AwsRedshiftSd
}

input AwsRedshiftRotateEncryptionKeyInput {
  ClusterIdentifier: String!
}

type AwsRedshiftRotateEncryptionKeyOutput {
  Cluster: AwsRedshiftSv
}

type AwsRedshiftS1g {
  ParameterGroupName: String
  ParameterGroupFamily: String
  Description: String
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS1o {
  ClusterSubnetGroupName: String
  Description: String
  VpcId: String
  SubnetGroupStatus: String
  Subnets: [AwsRedshiftS1oSubnets]
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS1oSubnets {
  SubnetIdentifier: String
  SubnetAvailabilityZone: AwsRedshiftS1r
  SubnetStatus: String
}

type AwsRedshiftS1r {
  Name: String
}

type AwsRedshiftS1w {
  CustomerAwsId: String
  CustSubscriptionId: String
  SnsTopicArn: String
  Status: String
  SubscriptionCreationTime: Date
  SourceType: String
  SourceIdsList: [String]
  EventCategoriesList: [String]
  Severity: String
  Enabled: Boolean
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS1z {
  HsmClientCertificateIdentifier: String
  HsmClientCertificatePublicKey: String
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS22 {
  HsmConfigurationIdentifier: String
  Description: String
  HsmIpAddress: String
  HsmPartitionName: String
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS25 {
  SnapshotCopyGrantName: String
  KmsKeyId: String
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS2q {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  ApplyType: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
}

input AwsRedshiftS2qInput {
  ParameterName: String
  ParameterValue: String
  Description: String
  Source: String
  DataType: String
  AllowedValues: String
  ApplyType: String
  IsModifiable: Boolean
  MinimumEngineVersion: String
}

type AwsRedshiftS4 {
  ClusterSecurityGroupName: String
  Description: String
  EC2SecurityGroups: [AwsRedshiftS4EC2SecurityGroups]
  IPRanges: [AwsRedshiftS4IPRanges]
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS47 {
  RecurringChargeAmount: JSON
  RecurringChargeFrequency: String
}

type AwsRedshiftS4c {
  ReservedNodeId: String
  ReservedNodeOfferingId: String
  NodeType: String
  StartTime: Date
  Duration: Int
  FixedPrice: JSON
  UsagePrice: JSON
  CurrencyCode: String
  NodeCount: Int
  State: String
  OfferingType: String
  RecurringCharges: [AwsRedshiftS47]
}

type AwsRedshiftS4EC2SecurityGroups {
  Status: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS4IPRanges {
  Status: String
  CIDRIP: String
  Tags: [AwsRedshiftS8]
}

type AwsRedshiftS4q {
  TableRestoreRequestId: String
  Status: String
  Message: String
  RequestTime: Date
  ProgressInMegaBytes: JSON
  TotalDataInMegaBytes: JSON
  ClusterIdentifier: String
  SnapshotIdentifier: String
  SourceDatabaseName: String
  SourceSchemaName: String
  SourceTableName: String
  TargetDatabaseName: String
  TargetSchemaName: String
  NewTableName: String
}

type AwsRedshiftS8 {
  Key: String
  Value: String
}

input AwsRedshiftS8Input {
  Key: String
  Value: String
}

type AwsRedshiftSd {
  SnapshotIdentifier: String
  ClusterIdentifier: String
  SnapshotCreateTime: Date
  Status: String
  Port: Int
  AvailabilityZone: String
  ClusterCreateTime: Date
  MasterUsername: String
  ClusterVersion: String
  SnapshotType: String
  NodeType: String
  NumberOfNodes: Int
  DBName: String
  VpcId: String
  Encrypted: Boolean
  KmsKeyId: String
  EncryptedWithHSM: Boolean
  AccountsWithRestoreAccess: [AwsRedshiftSdAccountsWithRestoreAccess]
  OwnerAccount: String
  TotalBackupSizeInMegaBytes: JSON
  ActualIncrementalBackupSizeInMegaBytes: JSON
  BackupProgressInMegaBytes: JSON
  CurrentBackupRateInMegaBytesPerSecond: JSON
  EstimatedSecondsToCompletion: JSON
  ElapsedTimeInSeconds: JSON
  SourceRegion: String
  Tags: [AwsRedshiftS8]
  RestorableNodeTypes: [String]
  EnhancedVpcRouting: Boolean
}

type AwsRedshiftSdAccountsWithRestoreAccess {
  AccountId: String
  AccountAlias: String
}

type AwsRedshiftSv {
  ClusterIdentifier: String
  NodeType: String
  ClusterStatus: String
  ModifyStatus: String
  MasterUsername: String
  DBName: String
  Endpoint: AwsRedshiftSvEndpoint
  ClusterCreateTime: Date
  AutomatedSnapshotRetentionPeriod: Int
  ClusterSecurityGroups: [AwsRedshiftSvClusterSecurityGroups]
  VpcSecurityGroups: [AwsRedshiftSvVpcSecurityGroups]
  ClusterParameterGroups: [AwsRedshiftSvClusterParameterGroups]
  ClusterSubnetGroupName: String
  VpcId: String
  AvailabilityZone: String
  PreferredMaintenanceWindow: String
  PendingModifiedValues: AwsRedshiftSvPendingModifiedValues
  ClusterVersion: String
  AllowVersionUpgrade: Boolean
  NumberOfNodes: Int
  PubliclyAccessible: Boolean
  Encrypted: Boolean
  RestoreStatus: AwsRedshiftSvRestoreStatus
  HsmStatus: AwsRedshiftSvHsmStatus
  ClusterSnapshotCopyStatus: AwsRedshiftSvClusterSnapshotCopyStatus
  ClusterPublicKey: String
  ClusterNodes: [AwsRedshiftSvClusterNodes]
  ElasticIpStatus: AwsRedshiftSvElasticIpStatus
  ClusterRevisionNumber: String
  Tags: [AwsRedshiftS8]
  KmsKeyId: String
  EnhancedVpcRouting: Boolean
  IamRoles: [AwsRedshiftSvIamRoles]
}

type AwsRedshiftSvClusterNodes {
  NodeRole: String
  PrivateIPAddress: String
  PublicIPAddress: String
}

type AwsRedshiftSvClusterParameterGroups {
  ParameterGroupName: String
  ParameterApplyStatus: String
  ClusterParameterStatusList: [AwsRedshiftSvClusterParameterGroupsClusterParameterStatusList]
}

type AwsRedshiftSvClusterParameterGroupsClusterParameterStatusList {
  ParameterName: String
  ParameterApplyStatus: String
  ParameterApplyErrorDescription: String
}

type AwsRedshiftSvClusterSecurityGroups {
  ClusterSecurityGroupName: String
  Status: String
}

type AwsRedshiftSvClusterSnapshotCopyStatus {
  DestinationRegion: String
  RetentionPeriod: JSON
  SnapshotCopyGrantName: String
}

type AwsRedshiftSvElasticIpStatus {
  ElasticIp: String
  Status: String
}

type AwsRedshiftSvEndpoint {
  Address: String
  Port: Int
}

type AwsRedshiftSvHsmStatus {
  HsmClientCertificateIdentifier: String
  HsmConfigurationIdentifier: String
  Status: String
}

type AwsRedshiftSvIamRoles {
  IamRoleArn: String
  ApplyStatus: String
}

type AwsRedshiftSvPendingModifiedValues {
  MasterUserPassword: String
  NodeType: String
  NumberOfNodes: Int
  ClusterType: String
  ClusterVersion: String
  AutomatedSnapshotRetentionPeriod: Int
  ClusterIdentifier: String
  PubliclyAccessible: Boolean
  EnhancedVpcRouting: Boolean
}

type AwsRedshiftSvRestoreStatus {
  Status: String
  CurrentRestoreRateInMegaBytesPerSecond: JSON
  SnapshotSizeInMegaBytes: JSON
  ProgressInMegaBytes: JSON
  ElapsedTimeInSeconds: JSON
  EstimatedTimeToCompletionInSeconds: JSON
}

type AwsRedshiftSvVpcSecurityGroups {
  VpcSecurityGroupId: String
  Status: String
}

# Amazon Rekognition (2016-06-27)
type AwsRekognition {
  compareFaces(input: AwsRekognitionCompareFacesInput!, config: AwsConfig): AwsRekognitionCompareFacesOutput
  createCollection(input: AwsRekognitionCreateCollectionInput!, config: AwsConfig): AwsRekognitionCreateCollectionOutput
  createStreamProcessor(input: AwsRekognitionCreateStreamProcessorInput!, config: AwsConfig): AwsRekognitionCreateStreamProcessorOutput
  deleteCollection(input: AwsRekognitionDeleteCollectionInput!, config: AwsConfig): AwsRekognitionDeleteCollectionOutput
  deleteFaces(input: AwsRekognitionDeleteFacesInput!, config: AwsConfig): AwsRekognitionDeleteFacesOutput
  deleteStreamProcessor(input: AwsRekognitionDeleteStreamProcessorInput!, config: AwsConfig): JSON
  describeStreamProcessor(input: AwsRekognitionDescribeStreamProcessorInput!, config: AwsConfig): AwsRekognitionDescribeStreamProcessorOutput
  detectFaces(input: AwsRekognitionDetectFacesInput!, config: AwsConfig): AwsRekognitionDetectFacesOutput
  detectLabels(input: AwsRekognitionDetectLabelsInput!, config: AwsConfig): AwsRekognitionDetectLabelsOutput
  detectModerationLabels(input: AwsRekognitionDetectModerationLabelsInput!, config: AwsConfig): AwsRekognitionDetectModerationLabelsOutput
  detectText(input: AwsRekognitionDetectTextInput!, config: AwsConfig): AwsRekognitionDetectTextOutput
  getCelebrityInfo(input: AwsRekognitionGetCelebrityInfoInput!, config: AwsConfig): AwsRekognitionGetCelebrityInfoOutput
  getCelebrityRecognition(input: AwsRekognitionGetCelebrityRecognitionInput!, config: AwsConfig): AwsRekognitionGetCelebrityRecognitionOutput
  getContentModeration(input: AwsRekognitionGetContentModerationInput!, config: AwsConfig): AwsRekognitionGetContentModerationOutput
  getFaceDetection(input: AwsRekognitionGetFaceDetectionInput!, config: AwsConfig): AwsRekognitionGetFaceDetectionOutput
  getFaceSearch(input: AwsRekognitionGetFaceSearchInput!, config: AwsConfig): AwsRekognitionGetFaceSearchOutput
  getLabelDetection(input: AwsRekognitionGetLabelDetectionInput!, config: AwsConfig): AwsRekognitionGetLabelDetectionOutput
  getPersonTracking(input: AwsRekognitionGetPersonTrackingInput!, config: AwsConfig): AwsRekognitionGetPersonTrackingOutput
  indexFaces(input: AwsRekognitionIndexFacesInput!, config: AwsConfig): AwsRekognitionIndexFacesOutput
  listCollections(input: AwsRekognitionListCollectionsInput, config: AwsConfig): AwsRekognitionListCollectionsOutput
  listFaces(input: AwsRekognitionListFacesInput!, config: AwsConfig): AwsRekognitionListFacesOutput
  listStreamProcessors(input: AwsRekognitionListStreamProcessorsInput, config: AwsConfig): AwsRekognitionListStreamProcessorsOutput
  recognizeCelebrities(input: AwsRekognitionRecognizeCelebritiesInput!, config: AwsConfig): AwsRekognitionRecognizeCelebritiesOutput
  searchFaces(input: AwsRekognitionSearchFacesInput!, config: AwsConfig): AwsRekognitionSearchFacesOutput
  searchFacesByImage(input: AwsRekognitionSearchFacesByImageInput!, config: AwsConfig): AwsRekognitionSearchFacesByImageOutput
  startCelebrityRecognition(input: AwsRekognitionStartCelebrityRecognitionInput!, config: AwsConfig): AwsRekognitionStartCelebrityRecognitionOutput
  startContentModeration(input: AwsRekognitionStartContentModerationInput!, config: AwsConfig): AwsRekognitionStartContentModerationOutput
  startFaceDetection(input: AwsRekognitionStartFaceDetectionInput!, config: AwsConfig): AwsRekognitionStartFaceDetectionOutput
  startFaceSearch(input: AwsRekognitionStartFaceSearchInput!, config: AwsConfig): AwsRekognitionStartFaceSearchOutput
  startLabelDetection(input: AwsRekognitionStartLabelDetectionInput!, config: AwsConfig): AwsRekognitionStartLabelDetectionOutput
  startPersonTracking(input: AwsRekognitionStartPersonTrackingInput!, config: AwsConfig): AwsRekognitionStartPersonTrackingOutput
  startStreamProcessor(input: AwsRekognitionStartStreamProcessorInput!, config: AwsConfig): JSON
  stopStreamProcessor(input: AwsRekognitionStopStreamProcessorInput!, config: AwsConfig): JSON
}

input AwsRekognitionCompareFacesInput {
  SourceImage: AwsRekognitionS2Input!
  TargetImage: AwsRekognitionS2Input!
  SimilarityThreshold: Float
}

type AwsRekognitionCompareFacesOutput {
  SourceImageFace: AwsRekognitionCompareFacesOutputSourceImageFace
  FaceMatches: [AwsRekognitionCompareFacesOutputFaceMatches]
  UnmatchedFaces: [AwsRekognitionSf]
  SourceImageOrientationCorrection: String
  TargetImageOrientationCorrection: String
}

type AwsRekognitionCompareFacesOutputFaceMatches {
  Similarity: Float
  Face: AwsRekognitionSf
}

type AwsRekognitionCompareFacesOutputSourceImageFace {
  BoundingBox: AwsRekognitionSb
  Confidence: Float
}

input AwsRekognitionCreateCollectionInput {
  CollectionId: String!
}

type AwsRekognitionCreateCollectionOutput {
  StatusCode: Int
  CollectionArn: String
  FaceModelVersion: String
}

input AwsRekognitionCreateStreamProcessorInput {
  Input: AwsRekognitionSuInput!
  Output: AwsRekognitionSxInput!
  Name: String!
  Settings: AwsRekognitionS11Input!
  RoleArn: String!
}

type AwsRekognitionCreateStreamProcessorOutput {
  StreamProcessorArn: String
}

input AwsRekognitionDeleteCollectionInput {
  CollectionId: String!
}

type AwsRekognitionDeleteCollectionOutput {
  StatusCode: Int
}

input AwsRekognitionDeleteFacesInput {
  CollectionId: String!
  FaceIds: [String]!
}

type AwsRekognitionDeleteFacesOutput {
  DeletedFaces: [String]
}

input AwsRekognitionDeleteStreamProcessorInput {
  Name: String!
}

input AwsRekognitionDescribeStreamProcessorInput {
  Name: String!
}

type AwsRekognitionDescribeStreamProcessorOutput {
  Name: String
  StreamProcessorArn: String
  Status: String
  StatusMessage: String
  CreationTimestamp: Date
  LastUpdateTimestamp: Date
  Input: AwsRekognitionSu
  Output: AwsRekognitionSx
  RoleArn: String
  Settings: AwsRekognitionS11
}

input AwsRekognitionDetectFacesInput {
  Image: AwsRekognitionS2Input!
  Attributes: [String]
}

type AwsRekognitionDetectFacesOutput {
  FaceDetails: [AwsRekognitionS1n]
  OrientationCorrection: String
}

input AwsRekognitionDetectLabelsInput {
  Image: AwsRekognitionS2Input!
  MaxLabels: Int
  MinConfidence: Float
}

type AwsRekognitionDetectLabelsOutput {
  Labels: [AwsRekognitionS25]
  OrientationCorrection: String
}

input AwsRekognitionDetectModerationLabelsInput {
  Image: AwsRekognitionS2Input!
  MinConfidence: Float
}

type AwsRekognitionDetectModerationLabelsOutput {
  ModerationLabels: [AwsRekognitionS29]
}

input AwsRekognitionDetectTextInput {
  Image: AwsRekognitionS2Input!
}

type AwsRekognitionDetectTextOutput {
  TextDetections: [AwsRekognitionDetectTextOutputTextDetections]
}

type AwsRekognitionDetectTextOutputTextDetections {
  DetectedText: String
  Type: String
  Id: Int
  ParentId: Int
  Confidence: Float
  Geometry: AwsRekognitionDetectTextOutputTextDetectionsGeometry
}

type AwsRekognitionDetectTextOutputTextDetectionsGeometry {
  BoundingBox: AwsRekognitionSb
  Polygon: [AwsRekognitionDetectTextOutputTextDetectionsGeometryPolygon]
}

type AwsRekognitionDetectTextOutputTextDetectionsGeometryPolygon {
  X: Float
  Y: Float
}

input AwsRekognitionGetCelebrityInfoInput {
  Id: String!
}

type AwsRekognitionGetCelebrityInfoOutput {
  Urls: [String]
  Name: String
}

input AwsRekognitionGetCelebrityRecognitionInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetCelebrityRecognitionOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS2v
  NextToken: String
  Celebrities: [AwsRekognitionGetCelebrityRecognitionOutputCelebrities]
}

type AwsRekognitionGetCelebrityRecognitionOutputCelebrities {
  Timestamp: JSON
  Celebrity: AwsRekognitionGetCelebrityRecognitionOutputCelebritiesCelebrity
}

type AwsRekognitionGetCelebrityRecognitionOutputCelebritiesCelebrity {
  Urls: [String]
  Name: String
  Id: String
  Confidence: Float
  BoundingBox: AwsRekognitionSb
  Face: AwsRekognitionS1n
}

input AwsRekognitionGetContentModerationInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetContentModerationOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS2v
  ModerationLabels: [AwsRekognitionGetContentModerationOutputModerationLabels]
  NextToken: String
}

type AwsRekognitionGetContentModerationOutputModerationLabels {
  Timestamp: JSON
  ModerationLabel: AwsRekognitionS29
}

input AwsRekognitionGetFaceDetectionInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
}

type AwsRekognitionGetFaceDetectionOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS2v
  NextToken: String
  Faces: [AwsRekognitionGetFaceDetectionOutputFaces]
}

type AwsRekognitionGetFaceDetectionOutputFaces {
  Timestamp: JSON
  Face: AwsRekognitionS1n
}

input AwsRekognitionGetFaceSearchInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetFaceSearchOutput {
  JobStatus: String
  StatusMessage: String
  NextToken: String
  VideoMetadata: AwsRekognitionS2v
  Persons: [AwsRekognitionGetFaceSearchOutputPersons]
}

type AwsRekognitionGetFaceSearchOutputPersons {
  Timestamp: JSON
  Person: AwsRekognitionS3f
  FaceMatches: [AwsRekognitionS3h]
}

input AwsRekognitionGetLabelDetectionInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetLabelDetectionOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS2v
  NextToken: String
  Labels: [AwsRekognitionGetLabelDetectionOutputLabels]
}

type AwsRekognitionGetLabelDetectionOutputLabels {
  Timestamp: JSON
  Label: AwsRekognitionS25
}

input AwsRekognitionGetPersonTrackingInput {
  JobId: String!
  MaxResults: Int
  NextToken: String
  SortBy: String
}

type AwsRekognitionGetPersonTrackingOutput {
  JobStatus: String
  StatusMessage: String
  VideoMetadata: AwsRekognitionS2v
  NextToken: String
  Persons: [AwsRekognitionGetPersonTrackingOutputPersons]
}

type AwsRekognitionGetPersonTrackingOutputPersons {
  Timestamp: JSON
  Person: AwsRekognitionS3f
}

input AwsRekognitionIndexFacesInput {
  CollectionId: String!
  Image: AwsRekognitionS2Input!
  ExternalImageId: String
  DetectionAttributes: [String]
}

type AwsRekognitionIndexFacesOutput {
  FaceRecords: [AwsRekognitionIndexFacesOutputFaceRecords]
  OrientationCorrection: String
  FaceModelVersion: String
}

type AwsRekognitionIndexFacesOutputFaceRecords {
  Face: AwsRekognitionS3j
  FaceDetail: AwsRekognitionS1n
}

input AwsRekognitionListCollectionsInput {
  NextToken: String
  MaxResults: Int
}

type AwsRekognitionListCollectionsOutput {
  CollectionIds: [String]
  NextToken: String
  FaceModelVersions: [String]
}

input AwsRekognitionListFacesInput {
  CollectionId: String!
  NextToken: String
  MaxResults: Int
}

type AwsRekognitionListFacesOutput {
  Faces: [AwsRekognitionS3j]
  NextToken: String
  FaceModelVersion: String
}

input AwsRekognitionListStreamProcessorsInput {
  NextToken: String
  MaxResults: Int
}

type AwsRekognitionListStreamProcessorsOutput {
  NextToken: String
  StreamProcessors: [AwsRekognitionListStreamProcessorsOutputStreamProcessors]
}

type AwsRekognitionListStreamProcessorsOutputStreamProcessors {
  Name: String
  Status: String
}

input AwsRekognitionRecognizeCelebritiesInput {
  Image: AwsRekognitionS2Input!
}

type AwsRekognitionRecognizeCelebritiesOutput {
  CelebrityFaces: [AwsRekognitionRecognizeCelebritiesOutputCelebrityFaces]
  UnrecognizedFaces: [AwsRekognitionSf]
  OrientationCorrection: String
}

type AwsRekognitionRecognizeCelebritiesOutputCelebrityFaces {
  Urls: [String]
  Name: String
  Id: String
  Face: AwsRekognitionSf
  MatchConfidence: Float
}

type AwsRekognitionS11 {
  FaceSearch: AwsRekognitionS11FaceSearch
}

type AwsRekognitionS11FaceSearch {
  CollectionId: String
  FaceMatchThreshold: Float
}

input AwsRekognitionS11FaceSearchInput {
  CollectionId: String
  FaceMatchThreshold: Float
}

input AwsRekognitionS11Input {
  FaceSearch: AwsRekognitionS11FaceSearchInput
}

type AwsRekognitionS1n {
  BoundingBox: AwsRekognitionSb
  AgeRange: AwsRekognitionS1nAgeRange
  Smile: AwsRekognitionS1nSmile
  Eyeglasses: AwsRekognitionS1nEyeglasses
  Sunglasses: AwsRekognitionS1nSunglasses
  Gender: AwsRekognitionS1nGender
  Beard: AwsRekognitionS1nBeard
  Mustache: AwsRekognitionS1nMustache
  EyesOpen: AwsRekognitionS1nEyesOpen
  MouthOpen: AwsRekognitionS1nMouthOpen
  Emotions: [AwsRekognitionS1nEmotions]
  Landmarks: [AwsRekognitionSg]
  Pose: AwsRekognitionSj
  Quality: AwsRekognitionSl
  Confidence: Float
}

type AwsRekognitionS1nAgeRange {
  Low: Int
  High: Int
}

type AwsRekognitionS1nBeard {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1nEmotions {
  Type: String
  Confidence: Float
}

type AwsRekognitionS1nEyeglasses {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1nEyesOpen {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1nGender {
  Value: String
  Confidence: Float
}

type AwsRekognitionS1nMouthOpen {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1nMustache {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1nSmile {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS1nSunglasses {
  Value: Boolean
  Confidence: Float
}

type AwsRekognitionS25 {
  Name: String
  Confidence: Float
}

type AwsRekognitionS29 {
  Confidence: Float
  Name: String
  ParentName: String
}

input AwsRekognitionS2Input {
  Bytes: JSON
  S3Object: AwsRekognitionS4Input
}

type AwsRekognitionS2v {
  Codec: String
  DurationMillis: JSON
  Format: String
  FrameRate: Float
  FrameHeight: JSON
  FrameWidth: JSON
}

type AwsRekognitionS3f {
  Index: JSON
  BoundingBox: AwsRekognitionSb
  Face: AwsRekognitionS1n
}

type AwsRekognitionS3h {
  Similarity: Float
  Face: AwsRekognitionS3j
}

type AwsRekognitionS3j {
  FaceId: String
  BoundingBox: AwsRekognitionSb
  ImageId: String
  ExternalImageId: String
  Confidence: Float
}

input AwsRekognitionS4Input {
  Bucket: String
  Name: String
  Version: String
}

input AwsRekognitionS4nInput {
  S3Object: AwsRekognitionS4Input
}

input AwsRekognitionS4pInput {
  SNSTopicArn: String!
  RoleArn: String!
}

type AwsRekognitionSb {
  Width: Float
  Height: Float
  Left: Float
  Top: Float
}

input AwsRekognitionSearchFacesByImageInput {
  CollectionId: String!
  Image: AwsRekognitionS2Input!
  MaxFaces: Int
  FaceMatchThreshold: Float
}

type AwsRekognitionSearchFacesByImageOutput {
  SearchedFaceBoundingBox: AwsRekognitionSb
  SearchedFaceConfidence: Float
  FaceMatches: [AwsRekognitionS3h]
  FaceModelVersion: String
}

input AwsRekognitionSearchFacesInput {
  CollectionId: String!
  FaceId: String!
  MaxFaces: Int
  FaceMatchThreshold: Float
}

type AwsRekognitionSearchFacesOutput {
  SearchedFaceId: String
  FaceMatches: [AwsRekognitionS3h]
  FaceModelVersion: String
}

type AwsRekognitionSf {
  BoundingBox: AwsRekognitionSb
  Confidence: Float
  Landmarks: [AwsRekognitionSg]
  Pose: AwsRekognitionSj
  Quality: AwsRekognitionSl
}

type AwsRekognitionSg {
  Type: String
  X: Float
  Y: Float
}

type AwsRekognitionSj {
  Roll: Float
  Yaw: Float
  Pitch: Float
}

type AwsRekognitionSl {
  Brightness: Float
  Sharpness: Float
}

input AwsRekognitionStartCelebrityRecognitionInput {
  Video: AwsRekognitionS4nInput!
  ClientRequestToken: String
  NotificationChannel: AwsRekognitionS4pInput
  JobTag: String
}

type AwsRekognitionStartCelebrityRecognitionOutput {
  JobId: String
}

input AwsRekognitionStartContentModerationInput {
  Video: AwsRekognitionS4nInput!
  MinConfidence: Float
  ClientRequestToken: String
  NotificationChannel: AwsRekognitionS4pInput
  JobTag: String
}

type AwsRekognitionStartContentModerationOutput {
  JobId: String
}

input AwsRekognitionStartFaceDetectionInput {
  Video: AwsRekognitionS4nInput!
  ClientRequestToken: String
  NotificationChannel: AwsRekognitionS4pInput
  FaceAttributes: String
  JobTag: String
}

type AwsRekognitionStartFaceDetectionOutput {
  JobId: String
}

input AwsRekognitionStartFaceSearchInput {
  Video: AwsRekognitionS4nInput!
  ClientRequestToken: String
  FaceMatchThreshold: Float
  CollectionId: String!
  NotificationChannel: AwsRekognitionS4pInput
  JobTag: String
}

type AwsRekognitionStartFaceSearchOutput {
  JobId: String
}

input AwsRekognitionStartLabelDetectionInput {
  Video: AwsRekognitionS4nInput!
  ClientRequestToken: String
  MinConfidence: Float
  NotificationChannel: AwsRekognitionS4pInput
  JobTag: String
}

type AwsRekognitionStartLabelDetectionOutput {
  JobId: String
}

input AwsRekognitionStartPersonTrackingInput {
  Video: AwsRekognitionS4nInput!
  ClientRequestToken: String
  NotificationChannel: AwsRekognitionS4pInput
  JobTag: String
}

type AwsRekognitionStartPersonTrackingOutput {
  JobId: String
}

input AwsRekognitionStartStreamProcessorInput {
  Name: String!
}

input AwsRekognitionStopStreamProcessorInput {
  Name: String!
}

type AwsRekognitionSu {
  KinesisVideoStream: AwsRekognitionSuKinesisVideoStream
}

input AwsRekognitionSuInput {
  KinesisVideoStream: AwsRekognitionSuKinesisVideoStreamInput
}

type AwsRekognitionSuKinesisVideoStream {
  Arn: String
}

input AwsRekognitionSuKinesisVideoStreamInput {
  Arn: String
}

type AwsRekognitionSx {
  KinesisDataStream: AwsRekognitionSxKinesisDataStream
}

input AwsRekognitionSxInput {
  KinesisDataStream: AwsRekognitionSxKinesisDataStreamInput
}

type AwsRekognitionSxKinesisDataStream {
  Arn: String
}

input AwsRekognitionSxKinesisDataStreamInput {
  Arn: String
}

# AWS Resource Groups (2017-11-27)
type AwsResourceGroups {
  createGroup(input: AwsResourceGroupsCreateGroupInput!, config: AwsConfig): AwsResourceGroupsCreateGroupOutput
  deleteGroup(input: AwsResourceGroupsDeleteGroupInput!, config: AwsConfig): AwsResourceGroupsDeleteGroupOutput
  getGroup(input: AwsResourceGroupsGetGroupInput!, config: AwsConfig): AwsResourceGroupsGetGroupOutput
  getGroupQuery(input: AwsResourceGroupsGetGroupQueryInput!, config: AwsConfig): AwsResourceGroupsGetGroupQueryOutput
  getTags(input: AwsResourceGroupsGetTagsInput!, config: AwsConfig): AwsResourceGroupsGetTagsOutput
  listGroupResources(input: AwsResourceGroupsListGroupResourcesInput!, config: AwsConfig): AwsResourceGroupsListGroupResourcesOutput
  listGroups(input: AwsResourceGroupsListGroupsInput, config: AwsConfig): AwsResourceGroupsListGroupsOutput
  searchResources(input: AwsResourceGroupsSearchResourcesInput!, config: AwsConfig): AwsResourceGroupsSearchResourcesOutput
  tag(input: AwsResourceGroupsTagInput!, config: AwsConfig): AwsResourceGroupsTagOutput
  untag(input: AwsResourceGroupsUntagInput!, config: AwsConfig): AwsResourceGroupsUntagOutput
  updateGroup(input: AwsResourceGroupsUpdateGroupInput!, config: AwsConfig): AwsResourceGroupsUpdateGroupOutput
  updateGroupQuery(input: AwsResourceGroupsUpdateGroupQueryInput!, config: AwsConfig): AwsResourceGroupsUpdateGroupQueryOutput
}

input AwsResourceGroupsCreateGroupInput {
  Name: String!
  Description: String
  ResourceQuery: AwsResourceGroupsS4Input!
  Tags: JSON
}

type AwsResourceGroupsCreateGroupOutput {
  Group: AwsResourceGroupsSb
  ResourceQuery: AwsResourceGroupsS4
  Tags: JSON
}

input AwsResourceGroupsDeleteGroupInput {
  GroupName: String!
}

type AwsResourceGroupsDeleteGroupOutput {
  Group: AwsResourceGroupsSb
}

input AwsResourceGroupsGetGroupInput {
  GroupName: String!
}

type AwsResourceGroupsGetGroupOutput {
  Group: AwsResourceGroupsSb
}

input AwsResourceGroupsGetGroupQueryInput {
  GroupName: String!
}

type AwsResourceGroupsGetGroupQueryOutput {
  GroupQuery: AwsResourceGroupsSj
}

input AwsResourceGroupsGetTagsInput {
  Arn: String!
}

type AwsResourceGroupsGetTagsOutput {
  Arn: String
  Tags: JSON
}

input AwsResourceGroupsListGroupResourcesInput {
  GroupName: String!
  MaxResults: Int
  NextToken: String
}

type AwsResourceGroupsListGroupResourcesOutput {
  ResourceIdentifiers: [AwsResourceGroupsSq]
  NextToken: String
}

input AwsResourceGroupsListGroupsInput {
  MaxResults: Int
  NextToken: String
}

type AwsResourceGroupsListGroupsOutput {
  Groups: [AwsResourceGroupsSb]
  NextToken: String
}

type AwsResourceGroupsS4 {
  Type: String!
  Query: String!
}

input AwsResourceGroupsS4Input {
  Type: String!
  Query: String!
}

type AwsResourceGroupsSb {
  GroupArn: String!
  Name: String!
  Description: String
}

input AwsResourceGroupsSearchResourcesInput {
  ResourceQuery: AwsResourceGroupsS4Input!
  MaxResults: Int
  NextToken: String
}

type AwsResourceGroupsSearchResourcesOutput {
  ResourceIdentifiers: [AwsResourceGroupsSq]
  NextToken: String
}

type AwsResourceGroupsSj {
  GroupName: String!
  ResourceQuery: AwsResourceGroupsS4!
}

type AwsResourceGroupsSq {
  ResourceArn: String
  ResourceType: String
}

# AWS Resource Groups Tagging API (2017-01-26)
type AwsResourceGroupsTaggingAPI {
  getResources(input: AwsResourceGroupsTaggingAPIGetResourcesInput, config: AwsConfig): AwsResourceGroupsTaggingAPIGetResourcesOutput
  getTagKeys(input: AwsResourceGroupsTaggingAPIGetTagKeysInput, config: AwsConfig): AwsResourceGroupsTaggingAPIGetTagKeysOutput
  getTagValues(input: AwsResourceGroupsTaggingAPIGetTagValuesInput!, config: AwsConfig): AwsResourceGroupsTaggingAPIGetTagValuesOutput
  tagResources(input: AwsResourceGroupsTaggingAPITagResourcesInput!, config: AwsConfig): AwsResourceGroupsTaggingAPITagResourcesOutput
  untagResources(input: AwsResourceGroupsTaggingAPIUntagResourcesInput!, config: AwsConfig): AwsResourceGroupsTaggingAPIUntagResourcesOutput
}

input AwsResourceGroupsTaggingAPIGetResourcesInput {
  PaginationToken: String
  TagFilters: [AwsResourceGroupsTaggingAPIGetResourcesTagFiltersInput]
  ResourcesPerPage: Int
  TagsPerPage: Int
  ResourceTypeFilters: [String]
}

type AwsResourceGroupsTaggingAPIGetResourcesOutput {
  PaginationToken: String
  ResourceTagMappingList: [AwsResourceGroupsTaggingAPIGetResourcesOutputResourceTagMappingList]
}

type AwsResourceGroupsTaggingAPIGetResourcesOutputResourceTagMappingList {
  ResourceARN: String
  Tags: [AwsResourceGroupsTaggingAPIGetResourcesOutputResourceTagMappingListTags]
}

type AwsResourceGroupsTaggingAPIGetResourcesOutputResourceTagMappingListTags {
  Key: String!
  Value: String!
}

input AwsResourceGroupsTaggingAPIGetResourcesTagFiltersInput {
  Key: String
  Values: [String]
}

input AwsResourceGroupsTaggingAPIGetTagKeysInput {
  PaginationToken: String
}

type AwsResourceGroupsTaggingAPIGetTagKeysOutput {
  PaginationToken: String
  TagKeys: [String]
}

input AwsResourceGroupsTaggingAPIGetTagValuesInput {
  PaginationToken: String
  Key: String!
}

type AwsResourceGroupsTaggingAPIGetTagValuesOutput {
  PaginationToken: String
  TagValues: [String]
}

input AwsResourceGroupsTaggingAPITagResourcesInput {
  ResourceARNList: [String]!
  Tags: JSON!
}

type AwsResourceGroupsTaggingAPITagResourcesOutput {
  FailedResourcesMap: JSON
}

input AwsResourceGroupsTaggingAPIUntagResourcesInput {
  ResourceARNList: [String]!
  TagKeys: [String]!
}

type AwsResourceGroupsTaggingAPIUntagResourcesOutput {
  FailedResourcesMap: JSON
}

input AwsResourceGroupsTagInput {
  Arn: String!
  Tags: JSON!
}

type AwsResourceGroupsTagOutput {
  Arn: String
  Tags: JSON
}

input AwsResourceGroupsUntagInput {
  Arn: String!
  Keys: [String]!
}

type AwsResourceGroupsUntagOutput {
  Arn: String
  Keys: [String]
}

input AwsResourceGroupsUpdateGroupInput {
  GroupName: String!
  Description: String
}

type AwsResourceGroupsUpdateGroupOutput {
  Group: AwsResourceGroupsSb
}

input AwsResourceGroupsUpdateGroupQueryInput {
  GroupName: String!
  ResourceQuery: AwsResourceGroupsS4Input!
}

type AwsResourceGroupsUpdateGroupQueryOutput {
  GroupQuery: AwsResourceGroupsSj
}

# Amazon Route 53 (2013-04-01)
type AwsRoute53 {
  associateVPCWithHostedZone(input: AwsRoute53AssociateVPCWithHostedZoneInput!, config: AwsConfig): AwsRoute53AssociateVPCWithHostedZoneOutput
  changeResourceRecordSets(input: AwsRoute53ChangeResourceRecordSetsInput!, config: AwsConfig): AwsRoute53ChangeResourceRecordSetsOutput
  changeTagsForResource(input: AwsRoute53ChangeTagsForResourceInput!, config: AwsConfig): JSON
  createHealthCheck(input: AwsRoute53CreateHealthCheckInput!, config: AwsConfig): AwsRoute53CreateHealthCheckOutput
  createHostedZone(input: AwsRoute53CreateHostedZoneInput!, config: AwsConfig): AwsRoute53CreateHostedZoneOutput
  createQueryLoggingConfig(input: AwsRoute53CreateQueryLoggingConfigInput!, config: AwsConfig): AwsRoute53CreateQueryLoggingConfigOutput
  createReusableDelegationSet(input: AwsRoute53CreateReusableDelegationSetInput!, config: AwsConfig): AwsRoute53CreateReusableDelegationSetOutput
  createTrafficPolicy(input: AwsRoute53CreateTrafficPolicyInput!, config: AwsConfig): AwsRoute53CreateTrafficPolicyOutput
  createTrafficPolicyInstance(input: AwsRoute53CreateTrafficPolicyInstanceInput!, config: AwsConfig): AwsRoute53CreateTrafficPolicyInstanceOutput
  createTrafficPolicyVersion(input: AwsRoute53CreateTrafficPolicyVersionInput!, config: AwsConfig): AwsRoute53CreateTrafficPolicyVersionOutput
  createVPCAssociationAuthorization(input: AwsRoute53CreateVPCAssociationAuthorizationInput!, config: AwsConfig): AwsRoute53CreateVPCAssociationAuthorizationOutput
  deleteHealthCheck(input: AwsRoute53DeleteHealthCheckInput!, config: AwsConfig): JSON
  deleteHostedZone(input: AwsRoute53DeleteHostedZoneInput!, config: AwsConfig): AwsRoute53DeleteHostedZoneOutput
  deleteQueryLoggingConfig(input: AwsRoute53DeleteQueryLoggingConfigInput!, config: AwsConfig): JSON
  deleteReusableDelegationSet(input: AwsRoute53DeleteReusableDelegationSetInput!, config: AwsConfig): JSON
  deleteTrafficPolicy(input: AwsRoute53DeleteTrafficPolicyInput!, config: AwsConfig): JSON
  deleteTrafficPolicyInstance(input: AwsRoute53DeleteTrafficPolicyInstanceInput!, config: AwsConfig): JSON
  deleteVPCAssociationAuthorization(input: AwsRoute53DeleteVPCAssociationAuthorizationInput!, config: AwsConfig): JSON
  disassociateVPCFromHostedZone(input: AwsRoute53DisassociateVPCFromHostedZoneInput!, config: AwsConfig): AwsRoute53DisassociateVPCFromHostedZoneOutput
  getAccountLimit(input: AwsRoute53GetAccountLimitInput!, config: AwsConfig): AwsRoute53GetAccountLimitOutput
  getChange(input: AwsRoute53GetChangeInput!, config: AwsConfig): AwsRoute53GetChangeOutput
  getCheckerIpRanges(input: JSON, config: AwsConfig): AwsRoute53GetCheckerIpRangesOutput
  getGeoLocation(input: AwsRoute53GetGeoLocationInput, config: AwsConfig): AwsRoute53GetGeoLocationOutput
  getHealthCheck(input: AwsRoute53GetHealthCheckInput!, config: AwsConfig): AwsRoute53GetHealthCheckOutput
  getHealthCheckCount(input: JSON, config: AwsConfig): AwsRoute53GetHealthCheckCountOutput
  getHealthCheckLastFailureReason(input: AwsRoute53GetHealthCheckLastFailureReasonInput!, config: AwsConfig): AwsRoute53GetHealthCheckLastFailureReasonOutput
  getHealthCheckStatus(input: AwsRoute53GetHealthCheckStatusInput!, config: AwsConfig): AwsRoute53GetHealthCheckStatusOutput
  getHostedZone(input: AwsRoute53GetHostedZoneInput!, config: AwsConfig): AwsRoute53GetHostedZoneOutput
  getHostedZoneCount(input: JSON, config: AwsConfig): AwsRoute53GetHostedZoneCountOutput
  getHostedZoneLimit(input: AwsRoute53GetHostedZoneLimitInput!, config: AwsConfig): AwsRoute53GetHostedZoneLimitOutput
  getQueryLoggingConfig(input: AwsRoute53GetQueryLoggingConfigInput!, config: AwsConfig): AwsRoute53GetQueryLoggingConfigOutput
  getReusableDelegationSet(input: AwsRoute53GetReusableDelegationSetInput!, config: AwsConfig): AwsRoute53GetReusableDelegationSetOutput
  getReusableDelegationSetLimit(input: AwsRoute53GetReusableDelegationSetLimitInput!, config: AwsConfig): AwsRoute53GetReusableDelegationSetLimitOutput
  getTrafficPolicy(input: AwsRoute53GetTrafficPolicyInput!, config: AwsConfig): AwsRoute53GetTrafficPolicyOutput
  getTrafficPolicyInstance(input: AwsRoute53GetTrafficPolicyInstanceInput!, config: AwsConfig): AwsRoute53GetTrafficPolicyInstanceOutput
  getTrafficPolicyInstanceCount(input: JSON, config: AwsConfig): AwsRoute53GetTrafficPolicyInstanceCountOutput
  listGeoLocations(input: AwsRoute53ListGeoLocationsInput, config: AwsConfig): AwsRoute53ListGeoLocationsOutput
  listHealthChecks(input: AwsRoute53ListHealthChecksInput, config: AwsConfig): AwsRoute53ListHealthChecksOutput
  listHostedZones(input: AwsRoute53ListHostedZonesInput, config: AwsConfig): AwsRoute53ListHostedZonesOutput
  listHostedZonesByName(input: AwsRoute53ListHostedZonesByNameInput, config: AwsConfig): AwsRoute53ListHostedZonesByNameOutput
  listQueryLoggingConfigs(input: AwsRoute53ListQueryLoggingConfigsInput, config: AwsConfig): AwsRoute53ListQueryLoggingConfigsOutput
  listResourceRecordSets(input: AwsRoute53ListResourceRecordSetsInput!, config: AwsConfig): AwsRoute53ListResourceRecordSetsOutput
  listReusableDelegationSets(input: AwsRoute53ListReusableDelegationSetsInput, config: AwsConfig): AwsRoute53ListReusableDelegationSetsOutput
  listTagsForResource(input: AwsRoute53ListTagsForResourceInput!, config: AwsConfig): AwsRoute53ListTagsForResourceOutput
  listTagsForResources(input: AwsRoute53ListTagsForResourcesInput!, config: AwsConfig): AwsRoute53ListTagsForResourcesOutput
  listTrafficPolicies(input: AwsRoute53ListTrafficPoliciesInput, config: AwsConfig): AwsRoute53ListTrafficPoliciesOutput
  listTrafficPolicyInstances(input: AwsRoute53ListTrafficPolicyInstancesInput, config: AwsConfig): AwsRoute53ListTrafficPolicyInstancesOutput
  listTrafficPolicyInstancesByHostedZone(input: AwsRoute53ListTrafficPolicyInstancesByHostedZoneInput!, config: AwsConfig): AwsRoute53ListTrafficPolicyInstancesByHostedZoneOutput
  listTrafficPolicyInstancesByPolicy(input: AwsRoute53ListTrafficPolicyInstancesByPolicyInput!, config: AwsConfig): AwsRoute53ListTrafficPolicyInstancesByPolicyOutput
  listTrafficPolicyVersions(input: AwsRoute53ListTrafficPolicyVersionsInput!, config: AwsConfig): AwsRoute53ListTrafficPolicyVersionsOutput
  listVPCAssociationAuthorizations(input: AwsRoute53ListVPCAssociationAuthorizationsInput!, config: AwsConfig): AwsRoute53ListVPCAssociationAuthorizationsOutput
  testDNSAnswer(input: AwsRoute53TestDNSAnswerInput!, config: AwsConfig): AwsRoute53TestDNSAnswerOutput
  updateHealthCheck(input: AwsRoute53UpdateHealthCheckInput!, config: AwsConfig): AwsRoute53UpdateHealthCheckOutput
  updateHostedZoneComment(input: AwsRoute53UpdateHostedZoneCommentInput!, config: AwsConfig): AwsRoute53UpdateHostedZoneCommentOutput
  updateTrafficPolicyComment(input: AwsRoute53UpdateTrafficPolicyCommentInput!, config: AwsConfig): AwsRoute53UpdateTrafficPolicyCommentOutput
  updateTrafficPolicyInstance(input: AwsRoute53UpdateTrafficPolicyInstanceInput!, config: AwsConfig): AwsRoute53UpdateTrafficPolicyInstanceOutput
}

input AwsRoute53AssociateVPCWithHostedZoneInput {
  HostedZoneId: String!
  VPC: AwsRoute53S3Input!
  Comment: String
}

type AwsRoute53AssociateVPCWithHostedZoneOutput {
  ChangeInfo: AwsRoute53S8!
}

input AwsRoute53ChangeResourceRecordSetsChangeBatchChangesInput {
  Action: String!
  ResourceRecordSet: AwsRoute53ShInput!
}

input AwsRoute53ChangeResourceRecordSetsChangeBatchInput {
  Comment: String
  Changes: [AwsRoute53ChangeResourceRecordSetsChangeBatchChangesInput]!
}

input AwsRoute53ChangeResourceRecordSetsInput {
  HostedZoneId: String!
  ChangeBatch: AwsRoute53ChangeResourceRecordSetsChangeBatchInput!
}

type AwsRoute53ChangeResourceRecordSetsOutput {
  ChangeInfo: AwsRoute53S8!
}

input AwsRoute53ChangeTagsForResourceInput {
  ResourceType: String!
  ResourceId: String!
  AddTags: [AwsRoute53S15Input]
  RemoveTagKeys: [String]
}

input AwsRoute53CreateHealthCheckInput {
  CallerReference: String!
  HealthCheckConfig: AwsRoute53S1dInput!
}

type AwsRoute53CreateHealthCheckOutput {
  HealthCheck: AwsRoute53S1y!
  Location: String!
}

input AwsRoute53CreateHostedZoneInput {
  Name: String!
  VPC: AwsRoute53S3Input
  CallerReference: String!
  HostedZoneConfig: AwsRoute53S2gInput
  DelegationSetId: String
}

type AwsRoute53CreateHostedZoneOutput {
  HostedZone: AwsRoute53S2j!
  ChangeInfo: AwsRoute53S8!
  DelegationSet: AwsRoute53S2l!
  VPC: AwsRoute53S3
  Location: String!
}

input AwsRoute53CreateQueryLoggingConfigInput {
  HostedZoneId: String!
  CloudWatchLogsLogGroupArn: String!
}

type AwsRoute53CreateQueryLoggingConfigOutput {
  QueryLoggingConfig: AwsRoute53S2q!
  Location: String!
}

input AwsRoute53CreateReusableDelegationSetInput {
  CallerReference: String!
  HostedZoneId: String
}

type AwsRoute53CreateReusableDelegationSetOutput {
  DelegationSet: AwsRoute53S2l!
  Location: String!
}

input AwsRoute53CreateTrafficPolicyInput {
  Name: String!
  Document: String!
  Comment: String
}

input AwsRoute53CreateTrafficPolicyInstanceInput {
  HostedZoneId: String!
  Name: String!
  TTL: JSON!
  TrafficPolicyId: String!
  TrafficPolicyVersion: Int!
}

type AwsRoute53CreateTrafficPolicyInstanceOutput {
  TrafficPolicyInstance: AwsRoute53S34!
  Location: String!
}

type AwsRoute53CreateTrafficPolicyOutput {
  TrafficPolicy: AwsRoute53S2z!
  Location: String!
}

input AwsRoute53CreateTrafficPolicyVersionInput {
  Id: String!
  Document: String!
  Comment: String
}

type AwsRoute53CreateTrafficPolicyVersionOutput {
  TrafficPolicy: AwsRoute53S2z!
  Location: String!
}

input AwsRoute53CreateVPCAssociationAuthorizationInput {
  HostedZoneId: String!
  VPC: AwsRoute53S3Input!
}

type AwsRoute53CreateVPCAssociationAuthorizationOutput {
  HostedZoneId: String!
  VPC: AwsRoute53S3!
}

input AwsRoute53DeleteHealthCheckInput {
  HealthCheckId: String!
}

input AwsRoute53DeleteHostedZoneInput {
  Id: String!
}

type AwsRoute53DeleteHostedZoneOutput {
  ChangeInfo: AwsRoute53S8!
}

input AwsRoute53DeleteQueryLoggingConfigInput {
  Id: String!
}

input AwsRoute53DeleteReusableDelegationSetInput {
  Id: String!
}

input AwsRoute53DeleteTrafficPolicyInput {
  Id: String!
  Version: Int!
}

input AwsRoute53DeleteTrafficPolicyInstanceInput {
  Id: String!
}

input AwsRoute53DeleteVPCAssociationAuthorizationInput {
  HostedZoneId: String!
  VPC: AwsRoute53S3Input!
}

input AwsRoute53DisassociateVPCFromHostedZoneInput {
  HostedZoneId: String!
  VPC: AwsRoute53S3Input!
  Comment: String
}

type AwsRoute53DisassociateVPCFromHostedZoneOutput {
  ChangeInfo: AwsRoute53S8!
}

# Amazon Route 53 Domains (2014-05-15)
type AwsRoute53Domains {
  checkDomainAvailability(input: AwsRoute53DomainsCheckDomainAvailabilityInput!, config: AwsConfig): AwsRoute53DomainsCheckDomainAvailabilityOutput
  checkDomainTransferability(input: AwsRoute53DomainsCheckDomainTransferabilityInput!, config: AwsConfig): AwsRoute53DomainsCheckDomainTransferabilityOutput
  deleteTagsForDomain(input: AwsRoute53DomainsDeleteTagsForDomainInput!, config: AwsConfig): JSON
  disableDomainAutoRenew(input: AwsRoute53DomainsDisableDomainAutoRenewInput!, config: AwsConfig): JSON
  disableDomainTransferLock(input: AwsRoute53DomainsDisableDomainTransferLockInput!, config: AwsConfig): AwsRoute53DomainsDisableDomainTransferLockOutput
  enableDomainAutoRenew(input: AwsRoute53DomainsEnableDomainAutoRenewInput!, config: AwsConfig): JSON
  enableDomainTransferLock(input: AwsRoute53DomainsEnableDomainTransferLockInput!, config: AwsConfig): AwsRoute53DomainsEnableDomainTransferLockOutput
  getContactReachabilityStatus(input: AwsRoute53DomainsGetContactReachabilityStatusInput, config: AwsConfig): AwsRoute53DomainsGetContactReachabilityStatusOutput
  getDomainDetail(input: AwsRoute53DomainsGetDomainDetailInput!, config: AwsConfig): AwsRoute53DomainsGetDomainDetailOutput
  getDomainSuggestions(input: AwsRoute53DomainsGetDomainSuggestionsInput!, config: AwsConfig): AwsRoute53DomainsGetDomainSuggestionsOutput
  getOperationDetail(input: AwsRoute53DomainsGetOperationDetailInput!, config: AwsConfig): AwsRoute53DomainsGetOperationDetailOutput
  listDomains(input: AwsRoute53DomainsListDomainsInput, config: AwsConfig): AwsRoute53DomainsListDomainsOutput
  listOperations(input: AwsRoute53DomainsListOperationsInput, config: AwsConfig): AwsRoute53DomainsListOperationsOutput
  listTagsForDomain(input: AwsRoute53DomainsListTagsForDomainInput!, config: AwsConfig): AwsRoute53DomainsListTagsForDomainOutput
  registerDomain(input: AwsRoute53DomainsRegisterDomainInput!, config: AwsConfig): AwsRoute53DomainsRegisterDomainOutput
  renewDomain(input: AwsRoute53DomainsRenewDomainInput!, config: AwsConfig): AwsRoute53DomainsRenewDomainOutput
  resendContactReachabilityEmail(input: AwsRoute53DomainsResendContactReachabilityEmailInput, config: AwsConfig): AwsRoute53DomainsResendContactReachabilityEmailOutput
  retrieveDomainAuthCode(input: AwsRoute53DomainsRetrieveDomainAuthCodeInput!, config: AwsConfig): AwsRoute53DomainsRetrieveDomainAuthCodeOutput
  transferDomain(input: AwsRoute53DomainsTransferDomainInput!, config: AwsConfig): AwsRoute53DomainsTransferDomainOutput
  updateDomainContact(input: AwsRoute53DomainsUpdateDomainContactInput!, config: AwsConfig): AwsRoute53DomainsUpdateDomainContactOutput
  updateDomainContactPrivacy(input: AwsRoute53DomainsUpdateDomainContactPrivacyInput!, config: AwsConfig): AwsRoute53DomainsUpdateDomainContactPrivacyOutput
  updateDomainNameservers(input: AwsRoute53DomainsUpdateDomainNameserversInput!, config: AwsConfig): AwsRoute53DomainsUpdateDomainNameserversOutput
  updateTagsForDomain(input: AwsRoute53DomainsUpdateTagsForDomainInput!, config: AwsConfig): JSON
  viewBilling(input: AwsRoute53DomainsViewBillingInput, config: AwsConfig): AwsRoute53DomainsViewBillingOutput
}

input AwsRoute53DomainsCheckDomainAvailabilityInput {
  DomainName: String!
  IdnLangCode: String
}

type AwsRoute53DomainsCheckDomainAvailabilityOutput {
  Availability: String!
}

input AwsRoute53DomainsCheckDomainTransferabilityInput {
  DomainName: String!
  AuthCode: String
}

type AwsRoute53DomainsCheckDomainTransferabilityOutput {
  Transferability: AwsRoute53DomainsCheckDomainTransferabilityOutputTransferability!
}

type AwsRoute53DomainsCheckDomainTransferabilityOutputTransferability {
  Transferable: String
}

input AwsRoute53DomainsDeleteTagsForDomainInput {
  DomainName: String!
  TagsToDelete: [String]!
}

input AwsRoute53DomainsDisableDomainAutoRenewInput {
  DomainName: String!
}

input AwsRoute53DomainsDisableDomainTransferLockInput {
  DomainName: String!
}

type AwsRoute53DomainsDisableDomainTransferLockOutput {
  OperationId: String!
}

input AwsRoute53DomainsEnableDomainAutoRenewInput {
  DomainName: String!
}

input AwsRoute53DomainsEnableDomainTransferLockInput {
  DomainName: String!
}

type AwsRoute53DomainsEnableDomainTransferLockOutput {
  OperationId: String!
}

input AwsRoute53DomainsGetContactReachabilityStatusInput {
  domainName: String
}

type AwsRoute53DomainsGetContactReachabilityStatusOutput {
  domainName: String
  status: String
}

input AwsRoute53DomainsGetDomainDetailInput {
  DomainName: String!
}

type AwsRoute53DomainsGetDomainDetailOutput {
  DomainName: String!
  Nameservers: [AwsRoute53DomainsSt]!
  AutoRenew: Boolean
  AdminContact: AwsRoute53DomainsSz!
  RegistrantContact: AwsRoute53DomainsSz!
  TechContact: AwsRoute53DomainsSz!
  AdminPrivacy: Boolean
  RegistrantPrivacy: Boolean
  TechPrivacy: Boolean
  RegistrarName: String
  WhoIsServer: String
  RegistrarUrl: String
  AbuseContactEmail: String
  AbuseContactPhone: String
  RegistryDomainId: String
  CreationDate: Date
  UpdatedDate: Date
  ExpirationDate: Date
  Reseller: String
  DnsSec: String
  StatusList: [String]
}

input AwsRoute53DomainsGetDomainSuggestionsInput {
  DomainName: String!
  SuggestionCount: Int!
  OnlyAvailable: Boolean!
}

type AwsRoute53DomainsGetDomainSuggestionsOutput {
  SuggestionsList: [AwsRoute53DomainsGetDomainSuggestionsOutputSuggestionsList]
}

type AwsRoute53DomainsGetDomainSuggestionsOutputSuggestionsList {
  DomainName: String
  Availability: String
}

input AwsRoute53DomainsGetOperationDetailInput {
  OperationId: String!
}

type AwsRoute53DomainsGetOperationDetailOutput {
  OperationId: String
  Status: String
  Message: String
  DomainName: String
  Type: String
  SubmittedDate: Date
}

input AwsRoute53DomainsListDomainsInput {
  Marker: String
  MaxItems: Int
}

type AwsRoute53DomainsListDomainsOutput {
  Domains: [AwsRoute53DomainsListDomainsOutputDomains]!
  NextPageMarker: String
}

type AwsRoute53DomainsListDomainsOutputDomains {
  DomainName: String!
  AutoRenew: Boolean
  TransferLock: Boolean
  Expiry: Date
}

input AwsRoute53DomainsListOperationsInput {
  Marker: String
  MaxItems: Int
}

type AwsRoute53DomainsListOperationsOutput {
  Operations: [AwsRoute53DomainsListOperationsOutputOperations]!
  NextPageMarker: String
}

type AwsRoute53DomainsListOperationsOutputOperations {
  OperationId: String!
  Status: String!
  Type: String!
  SubmittedDate: Date!
}

input AwsRoute53DomainsListTagsForDomainInput {
  DomainName: String!
}

type AwsRoute53DomainsListTagsForDomainOutput {
  TagList: [AwsRoute53DomainsS29]!
}

input AwsRoute53DomainsRegisterDomainInput {
  DomainName: String!
  IdnLangCode: String
  DurationInYears: Int!
  AutoRenew: Boolean
  AdminContact: AwsRoute53DomainsSzInput!
  RegistrantContact: AwsRoute53DomainsSzInput!
  TechContact: AwsRoute53DomainsSzInput!
  PrivacyProtectAdminContact: Boolean
  PrivacyProtectRegistrantContact: Boolean
  PrivacyProtectTechContact: Boolean
}

type AwsRoute53DomainsRegisterDomainOutput {
  OperationId: String!
}

input AwsRoute53DomainsRenewDomainInput {
  DomainName: String!
  DurationInYears: Int
  CurrentExpiryYear: Int!
}

type AwsRoute53DomainsRenewDomainOutput {
  OperationId: String!
}

input AwsRoute53DomainsResendContactReachabilityEmailInput {
  domainName: String
}

type AwsRoute53DomainsResendContactReachabilityEmailOutput {
  domainName: String
  emailAddress: String
  isAlreadyVerified: Boolean
}

input AwsRoute53DomainsRetrieveDomainAuthCodeInput {
  DomainName: String!
}

type AwsRoute53DomainsRetrieveDomainAuthCodeOutput {
  AuthCode: String!
}

type AwsRoute53DomainsS29 {
  Key: String
  Value: String
}

input AwsRoute53DomainsS29Input {
  Key: String
  Value: String
}

type AwsRoute53DomainsSt {
  Name: String!
  GlueIps: [String]
}

input AwsRoute53DomainsStInput {
  Name: String!
  GlueIps: [String]
}

type AwsRoute53DomainsSz {
  FirstName: String
  LastName: String
  ContactType: String
  OrganizationName: String
  AddressLine1: String
  AddressLine2: String
  City: String
  State: String
  CountryCode: String
  ZipCode: String
  PhoneNumber: String
  Email: String
  Fax: String
  ExtraParams: [AwsRoute53DomainsSzExtraParams]
}

type AwsRoute53DomainsSzExtraParams {
  Name: String!
  Value: String!
}

input AwsRoute53DomainsSzExtraParamsInput {
  Name: String!
  Value: String!
}

input AwsRoute53DomainsSzInput {
  FirstName: String
  LastName: String
  ContactType: String
  OrganizationName: String
  AddressLine1: String
  AddressLine2: String
  City: String
  State: String
  CountryCode: String
  ZipCode: String
  PhoneNumber: String
  Email: String
  Fax: String
  ExtraParams: [AwsRoute53DomainsSzExtraParamsInput]
}

input AwsRoute53DomainsTransferDomainInput {
  DomainName: String!
  IdnLangCode: String
  DurationInYears: Int!
  Nameservers: [AwsRoute53DomainsStInput]
  AuthCode: String
  AutoRenew: Boolean
  AdminContact: AwsRoute53DomainsSzInput!
  RegistrantContact: AwsRoute53DomainsSzInput!
  TechContact: AwsRoute53DomainsSzInput!
  PrivacyProtectAdminContact: Boolean
  PrivacyProtectRegistrantContact: Boolean
  PrivacyProtectTechContact: Boolean
}

type AwsRoute53DomainsTransferDomainOutput {
  OperationId: String!
}

input AwsRoute53DomainsUpdateDomainContactInput {
  DomainName: String!
  AdminContact: AwsRoute53DomainsSzInput
  RegistrantContact: AwsRoute53DomainsSzInput
  TechContact: AwsRoute53DomainsSzInput
}

type AwsRoute53DomainsUpdateDomainContactOutput {
  OperationId: String!
}

input AwsRoute53DomainsUpdateDomainContactPrivacyInput {
  DomainName: String!
  AdminPrivacy: Boolean
  RegistrantPrivacy: Boolean
  TechPrivacy: Boolean
}

type AwsRoute53DomainsUpdateDomainContactPrivacyOutput {
  OperationId: String!
}

input AwsRoute53DomainsUpdateDomainNameserversInput {
  DomainName: String!
  FIAuthKey: String
  Nameservers: [AwsRoute53DomainsStInput]!
}

type AwsRoute53DomainsUpdateDomainNameserversOutput {
  OperationId: String!
}

input AwsRoute53DomainsUpdateTagsForDomainInput {
  DomainName: String!
  TagsToUpdate: [AwsRoute53DomainsS29Input]
}

input AwsRoute53DomainsViewBillingInput {
  Start: Date
  End: Date
  Marker: String
  MaxItems: Int
}

type AwsRoute53DomainsViewBillingOutput {
  NextPageMarker: String
  BillingRecords: [AwsRoute53DomainsViewBillingOutputBillingRecords]
}

type AwsRoute53DomainsViewBillingOutputBillingRecords {
  DomainName: String
  Operation: String
  InvoiceId: String
  BillDate: Date
  Price: JSON
}

input AwsRoute53GetAccountLimitInput {
  Type: String!
}

type AwsRoute53GetAccountLimitOutput {
  Limit: AwsRoute53GetAccountLimitOutputLimit!
  Count: JSON!
}

type AwsRoute53GetAccountLimitOutputLimit {
  Type: String!
  Value: JSON!
}

input AwsRoute53GetChangeInput {
  Id: String!
}

type AwsRoute53GetChangeOutput {
  ChangeInfo: AwsRoute53S8!
}

type AwsRoute53GetCheckerIpRangesOutput {
  CheckerIpRanges: [String]!
}

input AwsRoute53GetGeoLocationInput {
  ContinentCode: String
  CountryCode: String
  SubdivisionCode: String
}

type AwsRoute53GetGeoLocationOutput {
  GeoLocationDetails: AwsRoute53S46!
}

type AwsRoute53GetHealthCheckCountOutput {
  HealthCheckCount: JSON!
}

input AwsRoute53GetHealthCheckInput {
  HealthCheckId: String!
}

input AwsRoute53GetHealthCheckLastFailureReasonInput {
  HealthCheckId: String!
}

type AwsRoute53GetHealthCheckLastFailureReasonOutput {
  HealthCheckObservations: [AwsRoute53S4h]!
}

type AwsRoute53GetHealthCheckOutput {
  HealthCheck: AwsRoute53S1y!
}

input AwsRoute53GetHealthCheckStatusInput {
  HealthCheckId: String!
}

type AwsRoute53GetHealthCheckStatusOutput {
  HealthCheckObservations: [AwsRoute53S4h]!
}

type AwsRoute53GetHostedZoneCountOutput {
  HostedZoneCount: JSON!
}

input AwsRoute53GetHostedZoneInput {
  Id: String!
}

input AwsRoute53GetHostedZoneLimitInput {
  Type: String!
  HostedZoneId: String!
}

type AwsRoute53GetHostedZoneLimitOutput {
  Limit: AwsRoute53GetHostedZoneLimitOutputLimit!
  Count: JSON!
}

type AwsRoute53GetHostedZoneLimitOutputLimit {
  Type: String!
  Value: JSON!
}

type AwsRoute53GetHostedZoneOutput {
  HostedZone: AwsRoute53S2j!
  DelegationSet: AwsRoute53S2l
  VPCs: [AwsRoute53S3]
}

input AwsRoute53GetQueryLoggingConfigInput {
  Id: String!
}

type AwsRoute53GetQueryLoggingConfigOutput {
  QueryLoggingConfig: AwsRoute53S2q!
}

input AwsRoute53GetReusableDelegationSetInput {
  Id: String!
}

input AwsRoute53GetReusableDelegationSetLimitInput {
  Type: String!
  DelegationSetId: String!
}

type AwsRoute53GetReusableDelegationSetLimitOutput {
  Limit: AwsRoute53GetReusableDelegationSetLimitOutputLimit!
  Count: JSON!
}

type AwsRoute53GetReusableDelegationSetLimitOutputLimit {
  Type: String!
  Value: JSON!
}

type AwsRoute53GetReusableDelegationSetOutput {
  DelegationSet: AwsRoute53S2l!
}

input AwsRoute53GetTrafficPolicyInput {
  Id: String!
  Version: Int!
}

type AwsRoute53GetTrafficPolicyInstanceCountOutput {
  TrafficPolicyInstanceCount: Int!
}

input AwsRoute53GetTrafficPolicyInstanceInput {
  Id: String!
}

type AwsRoute53GetTrafficPolicyInstanceOutput {
  TrafficPolicyInstance: AwsRoute53S34!
}

type AwsRoute53GetTrafficPolicyOutput {
  TrafficPolicy: AwsRoute53S2z!
}

input AwsRoute53ListGeoLocationsInput {
  StartContinentCode: String
  StartCountryCode: String
  StartSubdivisionCode: String
  MaxItems: String
}

type AwsRoute53ListGeoLocationsOutput {
  GeoLocationDetailsList: [AwsRoute53S46]!
  IsTruncated: Boolean!
  NextContinentCode: String
  NextCountryCode: String
  NextSubdivisionCode: String
  MaxItems: String!
}

input AwsRoute53ListHealthChecksInput {
  Marker: String
  MaxItems: String
}

type AwsRoute53ListHealthChecksOutput {
  HealthChecks: [AwsRoute53S1y]!
  Marker: String!
  IsTruncated: Boolean!
  NextMarker: String
  MaxItems: String!
}

input AwsRoute53ListHostedZonesByNameInput {
  DNSName: String
  HostedZoneId: String
  MaxItems: String
}

type AwsRoute53ListHostedZonesByNameOutput {
  HostedZones: [AwsRoute53S2j]!
  DNSName: String
  HostedZoneId: String
  IsTruncated: Boolean!
  NextDNSName: String
  NextHostedZoneId: String
  MaxItems: String!
}

input AwsRoute53ListHostedZonesInput {
  Marker: String
  MaxItems: String
  DelegationSetId: String
}

type AwsRoute53ListHostedZonesOutput {
  HostedZones: [AwsRoute53S2j]!
  Marker: String!
  IsTruncated: Boolean!
  NextMarker: String
  MaxItems: String!
}

input AwsRoute53ListQueryLoggingConfigsInput {
  HostedZoneId: String
  NextToken: String
  MaxResults: String
}

type AwsRoute53ListQueryLoggingConfigsOutput {
  QueryLoggingConfigs: [AwsRoute53S2q]!
  NextToken: String
}

input AwsRoute53ListResourceRecordSetsInput {
  HostedZoneId: String!
  StartRecordName: String
  StartRecordType: String
  StartRecordIdentifier: String
  MaxItems: String
}

type AwsRoute53ListResourceRecordSetsOutput {
  ResourceRecordSets: [AwsRoute53Sh]!
  IsTruncated: Boolean!
  NextRecordName: String
  NextRecordType: String
  NextRecordIdentifier: String
  MaxItems: String!
}

input AwsRoute53ListReusableDelegationSetsInput {
  Marker: String
  MaxItems: String
}

type AwsRoute53ListReusableDelegationSetsOutput {
  DelegationSets: [AwsRoute53S2l]!
  Marker: String!
  IsTruncated: Boolean!
  NextMarker: String
  MaxItems: String!
}

input AwsRoute53ListTagsForResourceInput {
  ResourceType: String!
  ResourceId: String!
}

type AwsRoute53ListTagsForResourceOutput {
  ResourceTagSet: AwsRoute53S63!
}

input AwsRoute53ListTagsForResourcesInput {
  ResourceType: String!
  ResourceIds: [String]!
}

type AwsRoute53ListTagsForResourcesOutput {
  ResourceTagSets: [AwsRoute53S63]!
}

input AwsRoute53ListTrafficPoliciesInput {
  TrafficPolicyIdMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPoliciesOutput {
  TrafficPolicySummaries: [AwsRoute53ListTrafficPoliciesOutputTrafficPolicySummaries]!
  IsTruncated: Boolean!
  TrafficPolicyIdMarker: String!
  MaxItems: String!
}

type AwsRoute53ListTrafficPoliciesOutputTrafficPolicySummaries {
  Id: String!
  Name: String!
  Type: String!
  LatestVersion: Int!
  TrafficPolicyCount: Int!
}

input AwsRoute53ListTrafficPolicyInstancesByHostedZoneInput {
  HostedZoneId: String!
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPolicyInstancesByHostedZoneOutput {
  TrafficPolicyInstances: [AwsRoute53S34]!
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  IsTruncated: Boolean!
  MaxItems: String!
}

input AwsRoute53ListTrafficPolicyInstancesByPolicyInput {
  TrafficPolicyId: String!
  TrafficPolicyVersion: Int!
  HostedZoneIdMarker: String
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPolicyInstancesByPolicyOutput {
  TrafficPolicyInstances: [AwsRoute53S34]!
  HostedZoneIdMarker: String
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  IsTruncated: Boolean!
  MaxItems: String!
}

input AwsRoute53ListTrafficPolicyInstancesInput {
  HostedZoneIdMarker: String
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPolicyInstancesOutput {
  TrafficPolicyInstances: [AwsRoute53S34]!
  HostedZoneIdMarker: String
  TrafficPolicyInstanceNameMarker: String
  TrafficPolicyInstanceTypeMarker: String
  IsTruncated: Boolean!
  MaxItems: String!
}

input AwsRoute53ListTrafficPolicyVersionsInput {
  Id: String!
  TrafficPolicyVersionMarker: String
  MaxItems: String
}

type AwsRoute53ListTrafficPolicyVersionsOutput {
  TrafficPolicies: [AwsRoute53S2z]!
  IsTruncated: Boolean!
  TrafficPolicyVersionMarker: String!
  MaxItems: String!
}

input AwsRoute53ListVPCAssociationAuthorizationsInput {
  HostedZoneId: String!
  NextToken: String
  MaxResults: String
}

type AwsRoute53ListVPCAssociationAuthorizationsOutput {
  HostedZoneId: String!
  NextToken: String
  VPCs: [AwsRoute53S3]!
}

type AwsRoute53S15 {
  Key: String
  Value: String
}

input AwsRoute53S15Input {
  Key: String
  Value: String
}

type AwsRoute53S1d {
  IPAddress: String
  Port: Int
  Type: String!
  ResourcePath: String
  FullyQualifiedDomainName: String
  SearchString: String
  RequestInterval: Int
  FailureThreshold: Int
  MeasureLatency: Boolean
  Inverted: Boolean
  HealthThreshold: Int
  ChildHealthChecks: [String]
  EnableSNI: Boolean
  Regions: [String]
  AlarmIdentifier: AwsRoute53S1t
  InsufficientDataHealthStatus: String
}

input AwsRoute53S1dInput {
  IPAddress: String
  Port: Int
  Type: String!
  ResourcePath: String
  FullyQualifiedDomainName: String
  SearchString: String
  RequestInterval: Int
  FailureThreshold: Int
  MeasureLatency: Boolean
  Inverted: Boolean
  HealthThreshold: Int
  ChildHealthChecks: [String]
  EnableSNI: Boolean
  Regions: [String]
  AlarmIdentifier: AwsRoute53S1tInput
  InsufficientDataHealthStatus: String
}

type AwsRoute53S1t {
  Region: String!
  Name: String!
}

input AwsRoute53S1tInput {
  Region: String!
  Name: String!
}

type AwsRoute53S1y {
  Id: String!
  CallerReference: String!
  LinkedService: AwsRoute53S1z
  HealthCheckConfig: AwsRoute53S1d!
  HealthCheckVersion: JSON!
  CloudWatchAlarmConfiguration: AwsRoute53S1yCloudWatchAlarmConfiguration
}

type AwsRoute53S1yCloudWatchAlarmConfiguration {
  EvaluationPeriods: Int!
  Threshold: JSON!
  ComparisonOperator: String!
  Period: Int!
  MetricName: String!
  Namespace: String!
  Statistic: String!
  Dimensions: [AwsRoute53S1yCloudWatchAlarmConfigurationDimensions]
}

type AwsRoute53S1yCloudWatchAlarmConfigurationDimensions {
  Name: String!
  Value: String!
}

type AwsRoute53S1z {
  ServicePrincipal: String
  Description: String
}

type AwsRoute53S2g {
  Comment: String
  PrivateZone: Boolean
}

input AwsRoute53S2gInput {
  Comment: String
  PrivateZone: Boolean
}

type AwsRoute53S2j {
  Id: String!
  Name: String!
  CallerReference: String!
  Config: AwsRoute53S2g
  ResourceRecordSetCount: JSON
  LinkedService: AwsRoute53S1z
}

type AwsRoute53S2l {
  Id: String
  CallerReference: String
  NameServers: [String]!
}

type AwsRoute53S2q {
  Id: String!
  HostedZoneId: String!
  CloudWatchLogsLogGroupArn: String!
}

type AwsRoute53S2z {
  Id: String!
  Version: Int!
  Name: String!
  Type: String!
  Document: String!
  Comment: String
}

type AwsRoute53S3 {
  VPCRegion: String
  VPCId: String
}

type AwsRoute53S34 {
  Id: String!
  HostedZoneId: String!
  Name: String!
  TTL: JSON!
  State: String!
  Message: String!
  TrafficPolicyId: String!
  TrafficPolicyVersion: Int!
  TrafficPolicyType: String!
}

input AwsRoute53S3Input {
  VPCRegion: String
  VPCId: String
}

type AwsRoute53S46 {
  ContinentCode: String
  ContinentName: String
  CountryCode: String
  CountryName: String
  SubdivisionCode: String
  SubdivisionName: String
}

type AwsRoute53S4h {
  Region: String
  IPAddress: String
  StatusReport: AwsRoute53S4hStatusReport
}

type AwsRoute53S4hStatusReport {
  Status: String
  CheckedTime: Date
}

type AwsRoute53S63 {
  ResourceType: String
  ResourceId: String
  Tags: [AwsRoute53S15]
}

type AwsRoute53S8 {
  Id: String!
  Status: String!
  SubmittedAt: Date!
  Comment: String
}

type AwsRoute53Sh {
  Name: String!
  Type: String!
  SetIdentifier: String
  Weight: JSON
  Region: String
  GeoLocation: AwsRoute53ShGeoLocation
  Failover: String
  MultiValueAnswer: Boolean
  TTL: JSON
  ResourceRecords: [AwsRoute53ShResourceRecords]
  AliasTarget: AwsRoute53ShAliasTarget
  HealthCheckId: String
  TrafficPolicyInstanceId: String
}

type AwsRoute53ShAliasTarget {
  HostedZoneId: String!
  DNSName: String!
  EvaluateTargetHealth: Boolean!
}

input AwsRoute53ShAliasTargetInput {
  HostedZoneId: String!
  DNSName: String!
  EvaluateTargetHealth: Boolean!
}

type AwsRoute53ShGeoLocation {
  ContinentCode: String
  CountryCode: String
  SubdivisionCode: String
}

input AwsRoute53ShGeoLocationInput {
  ContinentCode: String
  CountryCode: String
  SubdivisionCode: String
}

input AwsRoute53ShInput {
  Name: String!
  Type: String!
  SetIdentifier: String
  Weight: JSON
  Region: String
  GeoLocation: AwsRoute53ShGeoLocationInput
  Failover: String
  MultiValueAnswer: Boolean
  TTL: JSON
  ResourceRecords: [AwsRoute53ShResourceRecordsInput]
  AliasTarget: AwsRoute53ShAliasTargetInput
  HealthCheckId: String
  TrafficPolicyInstanceId: String
}

type AwsRoute53ShResourceRecords {
  Value: String!
}

input AwsRoute53ShResourceRecordsInput {
  Value: String!
}

input AwsRoute53TestDNSAnswerInput {
  HostedZoneId: String!
  RecordName: String!
  RecordType: String!
  ResolverIP: String
  EDNS0ClientSubnetIP: String
  EDNS0ClientSubnetMask: String
}

type AwsRoute53TestDNSAnswerOutput {
  Nameserver: String!
  RecordName: String!
  RecordType: String!
  RecordData: [String]!
  ResponseCode: String!
  Protocol: String!
}

input AwsRoute53UpdateHealthCheckInput {
  HealthCheckId: String!
  HealthCheckVersion: JSON
  IPAddress: String
  Port: Int
  ResourcePath: String
  FullyQualifiedDomainName: String
  SearchString: String
  FailureThreshold: Int
  Inverted: Boolean
  HealthThreshold: Int
  ChildHealthChecks: [String]
  EnableSNI: Boolean
  Regions: [String]
  AlarmIdentifier: AwsRoute53S1tInput
  InsufficientDataHealthStatus: String
  ResetElements: [String]
}

type AwsRoute53UpdateHealthCheckOutput {
  HealthCheck: AwsRoute53S1y!
}

input AwsRoute53UpdateHostedZoneCommentInput {
  Id: String!
  Comment: String
}

type AwsRoute53UpdateHostedZoneCommentOutput {
  HostedZone: AwsRoute53S2j!
}

input AwsRoute53UpdateTrafficPolicyCommentInput {
  Id: String!
  Version: Int!
  Comment: String!
}

type AwsRoute53UpdateTrafficPolicyCommentOutput {
  TrafficPolicy: AwsRoute53S2z!
}

input AwsRoute53UpdateTrafficPolicyInstanceInput {
  Id: String!
  TTL: JSON!
  TrafficPolicyId: String!
  TrafficPolicyVersion: Int!
}

type AwsRoute53UpdateTrafficPolicyInstanceOutput {
  TrafficPolicyInstance: AwsRoute53S34!
}

# Amazon Simple Storage Service (2006-03-01)
type AwsS3 {
  abortMultipartUpload(input: AwsS3AbortMultipartUploadInput!, config: AwsConfig): AwsS3AbortMultipartUploadOutput
  completeMultipartUpload(input: AwsS3CompleteMultipartUploadInput!, config: AwsConfig): AwsS3CompleteMultipartUploadOutput
  copyObject(input: AwsS3CopyObjectInput!, config: AwsConfig): AwsS3CopyObjectOutput
  createBucket(input: AwsS3CreateBucketInput!, config: AwsConfig): AwsS3CreateBucketOutput
  createMultipartUpload(input: AwsS3CreateMultipartUploadInput!, config: AwsConfig): AwsS3CreateMultipartUploadOutput
  deleteBucket(input: AwsS3DeleteBucketInput!, config: AwsConfig): JSON
  deleteBucketAnalyticsConfiguration(input: AwsS3DeleteBucketAnalyticsConfigurationInput!, config: AwsConfig): JSON
  deleteBucketCors(input: AwsS3DeleteBucketCorsInput!, config: AwsConfig): JSON
  deleteBucketEncryption(input: AwsS3DeleteBucketEncryptionInput!, config: AwsConfig): JSON
  deleteBucketInventoryConfiguration(input: AwsS3DeleteBucketInventoryConfigurationInput!, config: AwsConfig): JSON
  deleteBucketLifecycle(input: AwsS3DeleteBucketLifecycleInput!, config: AwsConfig): JSON
  deleteBucketMetricsConfiguration(input: AwsS3DeleteBucketMetricsConfigurationInput!, config: AwsConfig): JSON
  deleteBucketPolicy(input: AwsS3DeleteBucketPolicyInput!, config: AwsConfig): JSON
  deleteBucketReplication(input: AwsS3DeleteBucketReplicationInput!, config: AwsConfig): JSON
  deleteBucketTagging(input: AwsS3DeleteBucketTaggingInput!, config: AwsConfig): JSON
  deleteBucketWebsite(input: AwsS3DeleteBucketWebsiteInput!, config: AwsConfig): JSON
  deleteObject(input: AwsS3DeleteObjectInput!, config: AwsConfig): AwsS3DeleteObjectOutput
  deleteObjectTagging(input: AwsS3DeleteObjectTaggingInput!, config: AwsConfig): AwsS3DeleteObjectTaggingOutput
  deleteObjects(input: AwsS3DeleteObjectsInput!, config: AwsConfig): AwsS3DeleteObjectsOutput
  getBucketAccelerateConfiguration(input: AwsS3GetBucketAccelerateConfigurationInput!, config: AwsConfig): AwsS3GetBucketAccelerateConfigurationOutput
  getBucketAcl(input: AwsS3GetBucketAclInput!, config: AwsConfig): AwsS3GetBucketAclOutput
  getBucketAnalyticsConfiguration(input: AwsS3GetBucketAnalyticsConfigurationInput!, config: AwsConfig): AwsS3GetBucketAnalyticsConfigurationOutput
  getBucketCors(input: AwsS3GetBucketCorsInput!, config: AwsConfig): AwsS3GetBucketCorsOutput
  getBucketEncryption(input: AwsS3GetBucketEncryptionInput!, config: AwsConfig): AwsS3GetBucketEncryptionOutput
  getBucketInventoryConfiguration(input: AwsS3GetBucketInventoryConfigurationInput!, config: AwsConfig): AwsS3GetBucketInventoryConfigurationOutput
  getBucketLifecycle(input: AwsS3GetBucketLifecycleInput!, config: AwsConfig): AwsS3GetBucketLifecycleOutput
  getBucketLifecycleConfiguration(input: AwsS3GetBucketLifecycleConfigurationInput!, config: AwsConfig): AwsS3GetBucketLifecycleConfigurationOutput
  getBucketLocation(input: AwsS3GetBucketLocationInput!, config: AwsConfig): AwsS3GetBucketLocationOutput
  getBucketLogging(input: AwsS3GetBucketLoggingInput!, config: AwsConfig): AwsS3GetBucketLoggingOutput
  getBucketMetricsConfiguration(input: AwsS3GetBucketMetricsConfigurationInput!, config: AwsConfig): AwsS3GetBucketMetricsConfigurationOutput
  getBucketNotification(input: JSON, config: AwsConfig): JSON
  getBucketNotificationConfiguration(input: JSON, config: AwsConfig): JSON
  getBucketPolicy(input: AwsS3GetBucketPolicyInput!, config: AwsConfig): AwsS3GetBucketPolicyOutput
  getBucketReplication(input: AwsS3GetBucketReplicationInput!, config: AwsConfig): AwsS3GetBucketReplicationOutput
  getBucketRequestPayment(input: AwsS3GetBucketRequestPaymentInput!, config: AwsConfig): AwsS3GetBucketRequestPaymentOutput
  getBucketTagging(input: AwsS3GetBucketTaggingInput!, config: AwsConfig): AwsS3GetBucketTaggingOutput
  getBucketVersioning(input: AwsS3GetBucketVersioningInput!, config: AwsConfig): AwsS3GetBucketVersioningOutput
  getBucketWebsite(input: AwsS3GetBucketWebsiteInput!, config: AwsConfig): AwsS3GetBucketWebsiteOutput
  getObject(input: AwsS3GetObjectInput!, config: AwsConfig): AwsS3GetObjectOutput
  getObjectAcl(input: AwsS3GetObjectAclInput!, config: AwsConfig): AwsS3GetObjectAclOutput
  getObjectTagging(input: AwsS3GetObjectTaggingInput!, config: AwsConfig): AwsS3GetObjectTaggingOutput
  getObjectTorrent(input: AwsS3GetObjectTorrentInput!, config: AwsConfig): AwsS3GetObjectTorrentOutput
  headBucket(input: AwsS3HeadBucketInput!, config: AwsConfig): JSON
  headObject(input: AwsS3HeadObjectInput!, config: AwsConfig): AwsS3HeadObjectOutput
  listBucketAnalyticsConfigurations(input: AwsS3ListBucketAnalyticsConfigurationsInput!, config: AwsConfig): AwsS3ListBucketAnalyticsConfigurationsOutput
  listBucketInventoryConfigurations(input: AwsS3ListBucketInventoryConfigurationsInput!, config: AwsConfig): AwsS3ListBucketInventoryConfigurationsOutput
  listBucketMetricsConfigurations(input: AwsS3ListBucketMetricsConfigurationsInput!, config: AwsConfig): AwsS3ListBucketMetricsConfigurationsOutput
  listBuckets(config: AwsConfig): AwsS3ListBucketsOutput
  listMultipartUploads(input: AwsS3ListMultipartUploadsInput!, config: AwsConfig): AwsS3ListMultipartUploadsOutput
  listObjectVersions(input: AwsS3ListObjectVersionsInput!, config: AwsConfig): AwsS3ListObjectVersionsOutput
  listObjects(input: AwsS3ListObjectsInput!, config: AwsConfig): AwsS3ListObjectsOutput
  listObjectsV2(input: AwsS3ListObjectsV2Input!, config: AwsConfig): AwsS3ListObjectsV2Output
  listParts(input: AwsS3ListPartsInput!, config: AwsConfig): AwsS3ListPartsOutput
  putBucketAccelerateConfiguration(input: AwsS3PutBucketAccelerateConfigurationInput!, config: AwsConfig): JSON
  putBucketAcl(input: AwsS3PutBucketAclInput!, config: AwsConfig): JSON
  putBucketAnalyticsConfiguration(input: AwsS3PutBucketAnalyticsConfigurationInput!, config: AwsConfig): JSON
  putBucketCors(input: AwsS3PutBucketCorsInput!, config: AwsConfig): JSON
  putBucketEncryption(input: AwsS3PutBucketEncryptionInput!, config: AwsConfig): JSON
  putBucketInventoryConfiguration(input: AwsS3PutBucketInventoryConfigurationInput!, config: AwsConfig): JSON
  putBucketLifecycle(input: AwsS3PutBucketLifecycleInput!, config: AwsConfig): JSON
  putBucketLifecycleConfiguration(input: AwsS3PutBucketLifecycleConfigurationInput!, config: AwsConfig): JSON
  putBucketLogging(input: AwsS3PutBucketLoggingInput!, config: AwsConfig): JSON
  putBucketMetricsConfiguration(input: AwsS3PutBucketMetricsConfigurationInput!, config: AwsConfig): JSON
  putBucketNotification(input: AwsS3PutBucketNotificationInput!, config: AwsConfig): JSON
  putBucketNotificationConfiguration(input: AwsS3PutBucketNotificationConfigurationInput!, config: AwsConfig): JSON
  putBucketPolicy(input: AwsS3PutBucketPolicyInput!, config: AwsConfig): JSON
  putBucketReplication(input: AwsS3PutBucketReplicationInput!, config: AwsConfig): JSON
  putBucketRequestPayment(input: AwsS3PutBucketRequestPaymentInput!, config: AwsConfig): JSON
  putBucketTagging(input: AwsS3PutBucketTaggingInput!, config: AwsConfig): JSON
  putBucketVersioning(input: AwsS3PutBucketVersioningInput!, config: AwsConfig): JSON
  putBucketWebsite(input: AwsS3PutBucketWebsiteInput!, config: AwsConfig): JSON
  putObject(input: AwsS3PutObjectInput!, config: AwsConfig): AwsS3PutObjectOutput
  putObjectAcl(input: AwsS3PutObjectAclInput!, config: AwsConfig): AwsS3PutObjectAclOutput
  putObjectTagging(input: AwsS3PutObjectTaggingInput!, config: AwsConfig): AwsS3PutObjectTaggingOutput
  restoreObject(input: AwsS3RestoreObjectInput!, config: AwsConfig): AwsS3RestoreObjectOutput
  uploadPart(input: AwsS3UploadPartInput!, config: AwsConfig): AwsS3UploadPartOutput
  uploadPartCopy(input: AwsS3UploadPartCopyInput!, config: AwsConfig): AwsS3UploadPartCopyOutput
}

input AwsS3AbortMultipartUploadInput {
  Bucket: String!
  Key: String!
  UploadId: String!
  RequestPayer: String
}

type AwsS3AbortMultipartUploadOutput {
  RequestCharged: String
}

input AwsS3CompleteMultipartUploadInput {
  Bucket: String!
  Key: String!
  MultipartUpload: AwsS3CompleteMultipartUploadMultipartUploadInput
  UploadId: String!
  RequestPayer: String
}

input AwsS3CompleteMultipartUploadMultipartUploadInput {
  Parts: [AwsS3CompleteMultipartUploadMultipartUploadPartsInput]
}

input AwsS3CompleteMultipartUploadMultipartUploadPartsInput {
  ETag: String
  PartNumber: Int
}

type AwsS3CompleteMultipartUploadOutput {
  Location: String
  Bucket: String
  Key: String
  Expiration: String
  ETag: String
  ServerSideEncryption: String
  VersionId: String
  SSEKMSKeyId: String
  RequestCharged: String
}

input AwsS3CopyObjectInput {
  ACL: String
  Bucket: String!
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentType: String
  CopySource: String!
  CopySourceIfMatch: String
  CopySourceIfModifiedSince: Date
  CopySourceIfNoneMatch: String
  CopySourceIfUnmodifiedSince: Date
  Expires: Date
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWriteACP: String
  Key: String!
  Metadata: JSON
  MetadataDirective: String
  TaggingDirective: String
  ServerSideEncryption: String
  StorageClass: String
  WebsiteRedirectLocation: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  CopySourceSSECustomerAlgorithm: String
  CopySourceSSECustomerKey: JSON
  CopySourceSSECustomerKeyMD5: String
  RequestPayer: String
  Tagging: String
}

type AwsS3CopyObjectOutput {
  CopyObjectResult: AwsS3CopyObjectOutputCopyObjectResult
  Expiration: String
  CopySourceVersionId: String
  VersionId: String
  ServerSideEncryption: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestCharged: String
}

type AwsS3CopyObjectOutputCopyObjectResult {
  ETag: String
  LastModified: Date
}

input AwsS3CreateBucketCreateBucketConfigurationInput {
  LocationConstraint: String
}

input AwsS3CreateBucketInput {
  ACL: String
  Bucket: String!
  CreateBucketConfiguration: AwsS3CreateBucketCreateBucketConfigurationInput
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWrite: String
  GrantWriteACP: String
}

type AwsS3CreateBucketOutput {
  Location: String
}

input AwsS3CreateMultipartUploadInput {
  ACL: String
  Bucket: String!
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentType: String
  Expires: Date
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWriteACP: String
  Key: String!
  Metadata: JSON
  ServerSideEncryption: String
  StorageClass: String
  WebsiteRedirectLocation: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestPayer: String
  Tagging: String
}

type AwsS3CreateMultipartUploadOutput {
  AbortDate: Date
  AbortRuleId: String
  Bucket: String
  Key: String
  UploadId: String
  ServerSideEncryption: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestCharged: String
}

input AwsS3DeleteBucketAnalyticsConfigurationInput {
  Bucket: String!
  Id: String!
}

input AwsS3DeleteBucketCorsInput {
  Bucket: String!
}

input AwsS3DeleteBucketEncryptionInput {
  Bucket: String!
}

input AwsS3DeleteBucketInput {
  Bucket: String!
}

input AwsS3DeleteBucketInventoryConfigurationInput {
  Bucket: String!
  Id: String!
}

input AwsS3DeleteBucketLifecycleInput {
  Bucket: String!
}

input AwsS3DeleteBucketMetricsConfigurationInput {
  Bucket: String!
  Id: String!
}

input AwsS3DeleteBucketPolicyInput {
  Bucket: String!
}

input AwsS3DeleteBucketReplicationInput {
  Bucket: String!
}

input AwsS3DeleteBucketTaggingInput {
  Bucket: String!
}

input AwsS3DeleteBucketWebsiteInput {
  Bucket: String!
}

input AwsS3DeleteObjectInput {
  Bucket: String!
  Key: String!
  MFA: String
  VersionId: String
  RequestPayer: String
}

type AwsS3DeleteObjectOutput {
  DeleteMarker: Boolean
  VersionId: String
  RequestCharged: String
}

input AwsS3DeleteObjectsDeleteInput {
  Objects: [AwsS3DeleteObjectsDeleteObjectsInput]!
  Quiet: Boolean
}

input AwsS3DeleteObjectsDeleteObjectsInput {
  Key: String!
  VersionId: String
}

input AwsS3DeleteObjectsInput {
  Bucket: String!
  Delete: AwsS3DeleteObjectsDeleteInput!
  MFA: String
  RequestPayer: String
}

type AwsS3DeleteObjectsOutput {
  Deleted: [AwsS3DeleteObjectsOutputDeleted]
  RequestCharged: String
  Errors: [AwsS3DeleteObjectsOutputErrors]
}

type AwsS3DeleteObjectsOutputDeleted {
  Key: String
  VersionId: String
  DeleteMarker: Boolean
  DeleteMarkerVersionId: String
}

type AwsS3DeleteObjectsOutputErrors {
  Key: String
  VersionId: String
  Code: String
  Message: String
}

input AwsS3DeleteObjectTaggingInput {
  Bucket: String!
  Key: String!
  VersionId: String
}

type AwsS3DeleteObjectTaggingOutput {
  VersionId: String
}

input AwsS3GetBucketAccelerateConfigurationInput {
  Bucket: String!
}

type AwsS3GetBucketAccelerateConfigurationOutput {
  Status: String
}

input AwsS3GetBucketAclInput {
  Bucket: String!
}

type AwsS3GetBucketAclOutput {
  Owner: AwsS3S2v
  Grants: [AwsS3S2y]
}

input AwsS3GetBucketAnalyticsConfigurationInput {
  Bucket: String!
  Id: String!
}

type AwsS3GetBucketAnalyticsConfigurationOutput {
  AnalyticsConfiguration: AwsS3S37
}

input AwsS3GetBucketCorsInput {
  Bucket: String!
}

type AwsS3GetBucketCorsOutput {
  CORSRules: [AwsS3S3n]
}

input AwsS3GetBucketEncryptionInput {
  Bucket: String!
}

type AwsS3GetBucketEncryptionOutput {
  ServerSideEncryptionConfiguration: AwsS3S40
}

input AwsS3GetBucketInventoryConfigurationInput {
  Bucket: String!
  Id: String!
}

type AwsS3GetBucketInventoryConfigurationOutput {
  InventoryConfiguration: AwsS3S46
}

input AwsS3GetBucketLifecycleConfigurationInput {
  Bucket: String!
}

type AwsS3GetBucketLifecycleConfigurationOutput {
  Rules: [AwsS3S51]
}

input AwsS3GetBucketLifecycleInput {
  Bucket: String!
}

type AwsS3GetBucketLifecycleOutput {
  Rules: [AwsS3S4m]
}

input AwsS3GetBucketLocationInput {
  Bucket: String!
}

type AwsS3GetBucketLocationOutput {
  LocationConstraint: String
}

input AwsS3GetBucketLoggingInput {
  Bucket: String!
}

type AwsS3GetBucketLoggingOutput {
  LoggingEnabled: AwsS3S5b
}

input AwsS3GetBucketMetricsConfigurationInput {
  Bucket: String!
  Id: String!
}

type AwsS3GetBucketMetricsConfigurationOutput {
  MetricsConfiguration: AwsS3S5j
}

input AwsS3GetBucketPolicyInput {
  Bucket: String!
}

type AwsS3GetBucketPolicyOutput {
  Policy: String
}

input AwsS3GetBucketReplicationInput {
  Bucket: String!
}

type AwsS3GetBucketReplicationOutput {
  ReplicationConfiguration: AwsS3S6h
}

input AwsS3GetBucketRequestPaymentInput {
  Bucket: String!
}

type AwsS3GetBucketRequestPaymentOutput {
  Payer: String
}

input AwsS3GetBucketTaggingInput {
  Bucket: String!
}

type AwsS3GetBucketTaggingOutput {
  TagSet: [AwsS3S3a]!
}

input AwsS3GetBucketVersioningInput {
  Bucket: String!
}

type AwsS3GetBucketVersioningOutput {
  Status: String
  MFADelete: String
}

input AwsS3GetBucketWebsiteInput {
  Bucket: String!
}

type AwsS3GetBucketWebsiteOutput {
  RedirectAllRequestsTo: AwsS3S75
  IndexDocument: AwsS3S78
  ErrorDocument: AwsS3S7a
  RoutingRules: [AwsS3S7b]
}

input AwsS3GetObjectAclInput {
  Bucket: String!
  Key: String!
  VersionId: String
  RequestPayer: String
}

type AwsS3GetObjectAclOutput {
  Owner: AwsS3S2v
  Grants: [AwsS3S2y]
  RequestCharged: String
}

input AwsS3GetObjectInput {
  Bucket: String!
  IfMatch: String
  IfModifiedSince: Date
  IfNoneMatch: String
  IfUnmodifiedSince: Date
  Key: String!
  Range: String
  ResponseCacheControl: String
  ResponseContentDisposition: String
  ResponseContentEncoding: String
  ResponseContentLanguage: String
  ResponseContentType: String
  ResponseExpires: Date
  VersionId: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  RequestPayer: String
  PartNumber: Int
}

type AwsS3GetObjectOutput {
  Body: JSON
  DeleteMarker: Boolean
  AcceptRanges: String
  Expiration: String
  Restore: String
  LastModified: Date
  ContentLength: JSON
  ETag: String
  MissingMeta: Int
  VersionId: String
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentRange: String
  ContentType: String
  Expires: Date
  WebsiteRedirectLocation: String
  ServerSideEncryption: String
  Metadata: JSON
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  StorageClass: String
  RequestCharged: String
  ReplicationStatus: String
  PartsCount: Int
  TagCount: Int
}

input AwsS3GetObjectTaggingInput {
  Bucket: String!
  Key: String!
  VersionId: String
}

type AwsS3GetObjectTaggingOutput {
  VersionId: String
  TagSet: [AwsS3S3a]!
}

input AwsS3GetObjectTorrentInput {
  Bucket: String!
  Key: String!
  RequestPayer: String
}

type AwsS3GetObjectTorrentOutput {
  Body: JSON
  RequestCharged: String
}

input AwsS3HeadBucketInput {
  Bucket: String!
}

input AwsS3HeadObjectInput {
  Bucket: String!
  IfMatch: String
  IfModifiedSince: Date
  IfNoneMatch: String
  IfUnmodifiedSince: Date
  Key: String!
  Range: String
  VersionId: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  RequestPayer: String
  PartNumber: Int
}

type AwsS3HeadObjectOutput {
  DeleteMarker: Boolean
  AcceptRanges: String
  Expiration: String
  Restore: String
  LastModified: Date
  ContentLength: JSON
  ETag: String
  MissingMeta: Int
  VersionId: String
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentType: String
  Expires: Date
  WebsiteRedirectLocation: String
  ServerSideEncryption: String
  Metadata: JSON
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  StorageClass: String
  RequestCharged: String
  ReplicationStatus: String
  PartsCount: Int
}

input AwsS3ListBucketAnalyticsConfigurationsInput {
  Bucket: String!
  ContinuationToken: String
}

type AwsS3ListBucketAnalyticsConfigurationsOutput {
  IsTruncated: Boolean
  ContinuationToken: String
  NextContinuationToken: String
  AnalyticsConfigurationList: [AwsS3S37]
}

input AwsS3ListBucketInventoryConfigurationsInput {
  Bucket: String!
  ContinuationToken: String
}

type AwsS3ListBucketInventoryConfigurationsOutput {
  ContinuationToken: String
  InventoryConfigurationList: [AwsS3S46]
  IsTruncated: Boolean
  NextContinuationToken: String
}

input AwsS3ListBucketMetricsConfigurationsInput {
  Bucket: String!
  ContinuationToken: String
}

type AwsS3ListBucketMetricsConfigurationsOutput {
  IsTruncated: Boolean
  ContinuationToken: String
  NextContinuationToken: String
  MetricsConfigurationList: [AwsS3S5j]
}

type AwsS3ListBucketsOutput {
  Buckets: [AwsS3ListBucketsOutputBuckets]
  Owner: AwsS3S2v
}

type AwsS3ListBucketsOutputBuckets {
  Name: String
  CreationDate: Date
}

input AwsS3ListMultipartUploadsInput {
  Bucket: String!
  Delimiter: String
  EncodingType: String
  KeyMarker: String
  MaxUploads: Int
  Prefix: String
  UploadIdMarker: String
}

type AwsS3ListMultipartUploadsOutput {
  Bucket: String
  KeyMarker: String
  UploadIdMarker: String
  NextKeyMarker: String
  Prefix: String
  Delimiter: String
  NextUploadIdMarker: String
  MaxUploads: Int
  IsTruncated: Boolean
  Uploads: [AwsS3ListMultipartUploadsOutputUploads]
  CommonPrefixes: [AwsS3S98]
  EncodingType: String
}

type AwsS3ListMultipartUploadsOutputUploads {
  UploadId: String
  Key: String
  Initiated: Date
  StorageClass: String
  Owner: AwsS3S2v
  Initiator: AwsS3S97
}

input AwsS3ListObjectsInput {
  Bucket: String!
  Delimiter: String
  EncodingType: String
  Marker: String
  MaxKeys: Int
  Prefix: String
  RequestPayer: String
}

type AwsS3ListObjectsOutput {
  IsTruncated: Boolean
  Marker: String
  NextMarker: String
  Contents: [AwsS3S9q]
  Name: String
  Prefix: String
  Delimiter: String
  MaxKeys: Int
  CommonPrefixes: [AwsS3S98]
  EncodingType: String
}

input AwsS3ListObjectsV2Input {
  Bucket: String!
  Delimiter: String
  EncodingType: String
  MaxKeys: Int
  Prefix: String
  ContinuationToken: String
  FetchOwner: Boolean
  StartAfter: String
  RequestPayer: String
}

type AwsS3ListObjectsV2Output {
  IsTruncated: Boolean
  Contents: [AwsS3S9q]
  Name: String
  Prefix: String
  Delimiter: String
  MaxKeys: Int
  CommonPrefixes: [AwsS3S98]
  EncodingType: String
  KeyCount: Int
  ContinuationToken: String
  NextContinuationToken: String
  StartAfter: String
}

input AwsS3ListObjectVersionsInput {
  Bucket: String!
  Delimiter: String
  EncodingType: String
  KeyMarker: String
  MaxKeys: Int
  Prefix: String
  VersionIdMarker: String
}

type AwsS3ListObjectVersionsOutput {
  IsTruncated: Boolean
  KeyMarker: String
  VersionIdMarker: String
  NextKeyMarker: String
  NextVersionIdMarker: String
  Versions: [AwsS3ListObjectVersionsOutputVersions]
  DeleteMarkers: [AwsS3ListObjectVersionsOutputDeleteMarkers]
  Name: String
  Prefix: String
  Delimiter: String
  MaxKeys: Int
  CommonPrefixes: [AwsS3S98]
  EncodingType: String
}

type AwsS3ListObjectVersionsOutputDeleteMarkers {
  Owner: AwsS3S2v
  Key: String
  VersionId: String
  IsLatest: Boolean
  LastModified: Date
}

type AwsS3ListObjectVersionsOutputVersions {
  ETag: String
  Size: Int
  StorageClass: String
  Key: String
  VersionId: String
  IsLatest: Boolean
  LastModified: Date
  Owner: AwsS3S2v
}

input AwsS3ListPartsInput {
  Bucket: String!
  Key: String!
  MaxParts: Int
  PartNumberMarker: Int
  UploadId: String!
  RequestPayer: String
}

type AwsS3ListPartsOutput {
  AbortDate: Date
  AbortRuleId: String
  Bucket: String
  Key: String
  UploadId: String
  PartNumberMarker: Int
  NextPartNumberMarker: Int
  MaxParts: Int
  IsTruncated: Boolean
  Parts: [AwsS3ListPartsOutputParts]
  Initiator: AwsS3S97
  Owner: AwsS3S2v
  StorageClass: String
  RequestCharged: String
}

type AwsS3ListPartsOutputParts {
  PartNumber: Int
  LastModified: Date
  ETag: String
  Size: Int
}

input AwsS3PutBucketAccelerateConfigurationAccelerateConfigurationInput {
  Status: String
}

input AwsS3PutBucketAccelerateConfigurationInput {
  Bucket: String!
  AccelerateConfiguration: AwsS3PutBucketAccelerateConfigurationAccelerateConfigurationInput!
}

input AwsS3PutBucketAclInput {
  ACL: String
  AccessControlPolicy: AwsS3Sa8Input
  Bucket: String!
  ContentMD5: String
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWrite: String
  GrantWriteACP: String
}

input AwsS3PutBucketAnalyticsConfigurationInput {
  Bucket: String!
  Id: String!
  AnalyticsConfiguration: AwsS3S37Input!
}

input AwsS3PutBucketCorsCORSConfigurationInput {
  CORSRules: [AwsS3S3nInput]!
}

input AwsS3PutBucketCorsInput {
  Bucket: String!
  CORSConfiguration: AwsS3PutBucketCorsCORSConfigurationInput!
  ContentMD5: String
}

input AwsS3PutBucketEncryptionInput {
  Bucket: String!
  ContentMD5: String
  ServerSideEncryptionConfiguration: AwsS3S40Input!
}

input AwsS3PutBucketInventoryConfigurationInput {
  Bucket: String!
  Id: String!
  InventoryConfiguration: AwsS3S46Input!
}

input AwsS3PutBucketLifecycleConfigurationInput {
  Bucket: String!
  LifecycleConfiguration: AwsS3PutBucketLifecycleConfigurationLifecycleConfigurationInput
}

input AwsS3PutBucketLifecycleConfigurationLifecycleConfigurationInput {
  Rules: [AwsS3S51Input]!
}

input AwsS3PutBucketLifecycleInput {
  Bucket: String!
  ContentMD5: String
  LifecycleConfiguration: AwsS3PutBucketLifecycleLifecycleConfigurationInput
}

input AwsS3PutBucketLifecycleLifecycleConfigurationInput {
  Rules: [AwsS3S4mInput]!
}

input AwsS3PutBucketLoggingBucketLoggingStatusInput {
  LoggingEnabled: AwsS3S5bInput
}

input AwsS3PutBucketLoggingInput {
  Bucket: String!
  BucketLoggingStatus: AwsS3PutBucketLoggingBucketLoggingStatusInput!
  ContentMD5: String
}

input AwsS3PutBucketMetricsConfigurationInput {
  Bucket: String!
  Id: String!
  MetricsConfiguration: AwsS3S5jInput!
}

input AwsS3PutBucketNotificationConfigurationInput {
  Bucket: String!
  NotificationConfiguration: AwsS3S5yInput!
}

input AwsS3PutBucketNotificationInput {
  Bucket: String!
  ContentMD5: String
  NotificationConfiguration: AwsS3S5nInput!
}

input AwsS3PutBucketPolicyInput {
  Bucket: String!
  ContentMD5: String
  ConfirmRemoveSelfBucketAccess: Boolean
  Policy: String!
}

input AwsS3PutBucketReplicationInput {
  Bucket: String!
  ContentMD5: String
  ReplicationConfiguration: AwsS3S6hInput!
}

input AwsS3PutBucketRequestPaymentInput {
  Bucket: String!
  ContentMD5: String
  RequestPaymentConfiguration: AwsS3PutBucketRequestPaymentRequestPaymentConfigurationInput!
}

input AwsS3PutBucketRequestPaymentRequestPaymentConfigurationInput {
  Payer: String!
}

input AwsS3PutBucketTaggingInput {
  Bucket: String!
  ContentMD5: String
  Tagging: AwsS3SauInput!
}

input AwsS3PutBucketVersioningInput {
  Bucket: String!
  ContentMD5: String
  MFA: String
  VersioningConfiguration: AwsS3PutBucketVersioningVersioningConfigurationInput!
}

input AwsS3PutBucketVersioningVersioningConfigurationInput {
  MFADelete: String
  Status: String
}

input AwsS3PutBucketWebsiteInput {
  Bucket: String!
  ContentMD5: String
  WebsiteConfiguration: AwsS3PutBucketWebsiteWebsiteConfigurationInput!
}

input AwsS3PutBucketWebsiteWebsiteConfigurationInput {
  ErrorDocument: AwsS3S7aInput
  IndexDocument: AwsS3S78Input
  RedirectAllRequestsTo: AwsS3S75Input
  RoutingRules: [AwsS3S7bInput]
}

input AwsS3PutObjectAclInput {
  ACL: String
  AccessControlPolicy: AwsS3Sa8Input
  Bucket: String!
  ContentMD5: String
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWrite: String
  GrantWriteACP: String
  Key: String!
  RequestPayer: String
  VersionId: String
}

type AwsS3PutObjectAclOutput {
  RequestCharged: String
}

input AwsS3PutObjectInput {
  ACL: String
  Body: JSON
  Bucket: String!
  CacheControl: String
  ContentDisposition: String
  ContentEncoding: String
  ContentLanguage: String
  ContentLength: JSON
  ContentMD5: String
  ContentType: String
  Expires: Date
  GrantFullControl: String
  GrantRead: String
  GrantReadACP: String
  GrantWriteACP: String
  Key: String!
  Metadata: JSON
  ServerSideEncryption: String
  StorageClass: String
  WebsiteRedirectLocation: String
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestPayer: String
  Tagging: String
}

type AwsS3PutObjectOutput {
  Expiration: String
  ETag: String
  ServerSideEncryption: String
  VersionId: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestCharged: String
}

input AwsS3PutObjectTaggingInput {
  Bucket: String!
  Key: String!
  VersionId: String
  ContentMD5: String
  Tagging: AwsS3SauInput!
}

type AwsS3PutObjectTaggingOutput {
  VersionId: String
}

input AwsS3RestoreObjectInput {
  Bucket: String!
  Key: String!
  VersionId: String
  RestoreRequest: AwsS3RestoreObjectRestoreRequestInput
  RequestPayer: String
}

type AwsS3RestoreObjectOutput {
  RequestCharged: String
  RestoreOutputPath: String
}

input AwsS3RestoreObjectRestoreRequestGlacierJobParametersInput {
  Tier: String!
}

input AwsS3RestoreObjectRestoreRequestInput {
  Days: Int
  GlacierJobParameters: AwsS3RestoreObjectRestoreRequestGlacierJobParametersInput
  Type: String
  Tier: String
  Description: String
  SelectParameters: AwsS3RestoreObjectRestoreRequestSelectParametersInput
  OutputLocation: AwsS3RestoreObjectRestoreRequestOutputLocationInput
}

input AwsS3RestoreObjectRestoreRequestOutputLocationInput {
  S3: AwsS3RestoreObjectRestoreRequestOutputLocationS3Input
}

input AwsS3RestoreObjectRestoreRequestOutputLocationS3EncryptionInput {
  EncryptionType: String!
  KMSKeyId: String
  KMSContext: String
}

input AwsS3RestoreObjectRestoreRequestOutputLocationS3Input {
  BucketName: String!
  Prefix: String!
  Encryption: AwsS3RestoreObjectRestoreRequestOutputLocationS3EncryptionInput
  CannedACL: String
  AccessControlList: [AwsS3S2yInput]
  Tagging: AwsS3SauInput
  UserMetadata: [AwsS3RestoreObjectRestoreRequestOutputLocationS3UserMetadataInput]
  StorageClass: String
}

input AwsS3RestoreObjectRestoreRequestOutputLocationS3UserMetadataInput {
  Name: String
  Value: String
}

input AwsS3RestoreObjectRestoreRequestSelectParametersInput {
  InputSerialization: AwsS3RestoreObjectRestoreRequestSelectParametersInputSerializationInput!
  ExpressionType: String!
  Expression: String!
  OutputSerialization: AwsS3RestoreObjectRestoreRequestSelectParametersOutputSerializationInput!
}

input AwsS3RestoreObjectRestoreRequestSelectParametersInputSerializationCSVInput {
  FileHeaderInfo: String
  Comments: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsS3RestoreObjectRestoreRequestSelectParametersInputSerializationInput {
  CSV: AwsS3RestoreObjectRestoreRequestSelectParametersInputSerializationCSVInput
}

input AwsS3RestoreObjectRestoreRequestSelectParametersOutputSerializationCSVInput {
  QuoteFields: String
  QuoteEscapeCharacter: String
  RecordDelimiter: String
  FieldDelimiter: String
  QuoteCharacter: String
}

input AwsS3RestoreObjectRestoreRequestSelectParametersOutputSerializationInput {
  CSV: AwsS3RestoreObjectRestoreRequestSelectParametersOutputSerializationCSVInput
}

type AwsS3S2v {
  DisplayName: String
  ID: String
}

input AwsS3S2vInput {
  DisplayName: String
  ID: String
}

type AwsS3S2y {
  Grantee: AwsS3S30
  Permission: String
}

input AwsS3S2yInput {
  Grantee: AwsS3S30Input
  Permission: String
}

type AwsS3S30 {
  DisplayName: String
  EmailAddress: String
  ID: String
  Type: String!
  URI: String
}

input AwsS3S30Input {
  DisplayName: String
  EmailAddress: String
  ID: String
  Type: String!
  URI: String
}

type AwsS3S37 {
  Id: String!
  Filter: AwsS3S37Filter
  StorageClassAnalysis: AwsS3S37StorageClassAnalysis!
}

type AwsS3S37Filter {
  Prefix: String
  Tag: AwsS3S3a
  And: AwsS3S37FilterAnd
}

type AwsS3S37FilterAnd {
  Prefix: String
  Tags: [AwsS3S3a]
}

input AwsS3S37FilterAndInput {
  Prefix: String
  Tags: [AwsS3S3aInput]
}

input AwsS3S37FilterInput {
  Prefix: String
  Tag: AwsS3S3aInput
  And: AwsS3S37FilterAndInput
}

input AwsS3S37Input {
  Id: String!
  Filter: AwsS3S37FilterInput
  StorageClassAnalysis: AwsS3S37StorageClassAnalysisInput!
}

type AwsS3S37StorageClassAnalysis {
  DataExport: AwsS3S37StorageClassAnalysisDataExport
}

type AwsS3S37StorageClassAnalysisDataExport {
  OutputSchemaVersion: String!
  Destination: AwsS3S37StorageClassAnalysisDataExportDestination!
}

type AwsS3S37StorageClassAnalysisDataExportDestination {
  S3BucketDestination: AwsS3S37StorageClassAnalysisDataExportDestinationS3BucketDestination!
}

input AwsS3S37StorageClassAnalysisDataExportDestinationInput {
  S3BucketDestination: AwsS3S37StorageClassAnalysisDataExportDestinationS3BucketDestinationInput!
}

type AwsS3S37StorageClassAnalysisDataExportDestinationS3BucketDestination {
  Format: String!
  BucketAccountId: String
  Bucket: String!
  Prefix: String
}

input AwsS3S37StorageClassAnalysisDataExportDestinationS3BucketDestinationInput {
  Format: String!
  BucketAccountId: String
  Bucket: String!
  Prefix: String
}

input AwsS3S37StorageClassAnalysisDataExportInput {
  OutputSchemaVersion: String!
  Destination: AwsS3S37StorageClassAnalysisDataExportDestinationInput!
}

input AwsS3S37StorageClassAnalysisInput {
  DataExport: AwsS3S37StorageClassAnalysisDataExportInput
}

type AwsS3S3a {
  Key: String!
  Value: String!
}

input AwsS3S3aInput {
  Key: String!
  Value: String!
}

type AwsS3S3n {
  AllowedHeaders: [String]
  AllowedMethods: [String]!
  AllowedOrigins: [String]!
  ExposeHeaders: [String]
  MaxAgeSeconds: Int
}

input AwsS3S3nInput {
  AllowedHeaders: [String]
  AllowedMethods: [String]!
  AllowedOrigins: [String]!
  ExposeHeaders: [String]
  MaxAgeSeconds: Int
}

type AwsS3S40 {
  Rules: [AwsS3S40Rules]!
}

input AwsS3S40Input {
  Rules: [AwsS3S40RulesInput]!
}

type AwsS3S40Rules {
  ApplyServerSideEncryptionByDefault: AwsS3S40RulesApplyServerSideEncryptionByDefault
}

type AwsS3S40RulesApplyServerSideEncryptionByDefault {
  SSEAlgorithm: String!
  KMSMasterKeyID: String
}

input AwsS3S40RulesApplyServerSideEncryptionByDefaultInput {
  SSEAlgorithm: String!
  KMSMasterKeyID: String
}

input AwsS3S40RulesInput {
  ApplyServerSideEncryptionByDefault: AwsS3S40RulesApplyServerSideEncryptionByDefaultInput
}

type AwsS3S46 {
  Destination: AwsS3S46Destination!
  IsEnabled: Boolean!
  Filter: AwsS3S46Filter
  Id: String!
  IncludedObjectVersions: String!
  OptionalFields: [String]
  Schedule: AwsS3S46Schedule!
}

type AwsS3S46Destination {
  S3BucketDestination: AwsS3S46DestinationS3BucketDestination!
}

input AwsS3S46DestinationInput {
  S3BucketDestination: AwsS3S46DestinationS3BucketDestinationInput!
}

type AwsS3S46DestinationS3BucketDestination {
  AccountId: String
  Bucket: String!
  Format: String!
  Prefix: String
  Encryption: AwsS3S46DestinationS3BucketDestinationEncryption
}

type AwsS3S46DestinationS3BucketDestinationEncryption {
  SSES3: JSON
  SSEKMS: AwsS3S46DestinationS3BucketDestinationEncryptionSSEKMS
}

input AwsS3S46DestinationS3BucketDestinationEncryptionInput {
  SSES3: JSON
  SSEKMS: AwsS3S46DestinationS3BucketDestinationEncryptionSSEKMSInput
}

type AwsS3S46DestinationS3BucketDestinationEncryptionSSEKMS {
  KeyId: String!
}

input AwsS3S46DestinationS3BucketDestinationEncryptionSSEKMSInput {
  KeyId: String!
}

input AwsS3S46DestinationS3BucketDestinationInput {
  AccountId: String
  Bucket: String!
  Format: String!
  Prefix: String
  Encryption: AwsS3S46DestinationS3BucketDestinationEncryptionInput
}

type AwsS3S46Filter {
  Prefix: String!
}

input AwsS3S46FilterInput {
  Prefix: String!
}

input AwsS3S46Input {
  Destination: AwsS3S46DestinationInput!
  IsEnabled: Boolean!
  Filter: AwsS3S46FilterInput
  Id: String!
  IncludedObjectVersions: String!
  OptionalFields: [String]
  Schedule: AwsS3S46ScheduleInput!
}

type AwsS3S46Schedule {
  Frequency: String!
}

input AwsS3S46ScheduleInput {
  Frequency: String!
}

type AwsS3S4m {
  Expiration: AwsS3S4o
  ID: String
  Prefix: String!
  Status: String!
  Transition: AwsS3S4t
  NoncurrentVersionTransition: AwsS3S4v
  NoncurrentVersionExpiration: AwsS3S4w
  AbortIncompleteMultipartUpload: AwsS3S4x
}

input AwsS3S4mInput {
  Expiration: AwsS3S4oInput
  ID: String
  Prefix: String!
  Status: String!
  Transition: AwsS3S4tInput
  NoncurrentVersionTransition: AwsS3S4vInput
  NoncurrentVersionExpiration: AwsS3S4wInput
  AbortIncompleteMultipartUpload: AwsS3S4xInput
}

type AwsS3S4o {
  Date: Date
  Days: Int
  ExpiredObjectDeleteMarker: Boolean
}

input AwsS3S4oInput {
  Date: Date
  Days: Int
  ExpiredObjectDeleteMarker: Boolean
}

type AwsS3S4t {
  Date: Date
  Days: Int
  StorageClass: String
}

input AwsS3S4tInput {
  Date: Date
  Days: Int
  StorageClass: String
}

type AwsS3S4v {
  NoncurrentDays: Int
  StorageClass: String
}

input AwsS3S4vInput {
  NoncurrentDays: Int
  StorageClass: String
}

type AwsS3S4w {
  NoncurrentDays: Int
}

input AwsS3S4wInput {
  NoncurrentDays: Int
}

type AwsS3S4x {
  DaysAfterInitiation: Int
}

input AwsS3S4xInput {
  DaysAfterInitiation: Int
}

type AwsS3S51 {
  Expiration: AwsS3S4o
  ID: String
  Prefix: String
  Filter: AwsS3S51Filter
  Status: String!
  Transitions: [AwsS3S4t]
  NoncurrentVersionTransitions: [AwsS3S4v]
  NoncurrentVersionExpiration: AwsS3S4w
  AbortIncompleteMultipartUpload: AwsS3S4x
}

type AwsS3S51Filter {
  Prefix: String
  Tag: AwsS3S3a
  And: AwsS3S51FilterAnd
}

type AwsS3S51FilterAnd {
  Prefix: String
  Tags: [AwsS3S3a]
}

input AwsS3S51FilterAndInput {
  Prefix: String
  Tags: [AwsS3S3aInput]
}

input AwsS3S51FilterInput {
  Prefix: String
  Tag: AwsS3S3aInput
  And: AwsS3S51FilterAndInput
}

input AwsS3S51Input {
  Expiration: AwsS3S4oInput
  ID: String
  Prefix: String
  Filter: AwsS3S51FilterInput
  Status: String!
  Transitions: [AwsS3S4tInput]
  NoncurrentVersionTransitions: [AwsS3S4vInput]
  NoncurrentVersionExpiration: AwsS3S4wInput
  AbortIncompleteMultipartUpload: AwsS3S4xInput
}

type AwsS3S5b {
  TargetBucket: String
  TargetGrants: [AwsS3S5bTargetGrants]
  TargetPrefix: String
}

input AwsS3S5bInput {
  TargetBucket: String
  TargetGrants: [AwsS3S5bTargetGrantsInput]
  TargetPrefix: String
}

type AwsS3S5bTargetGrants {
  Grantee: AwsS3S30
  Permission: String
}

input AwsS3S5bTargetGrantsInput {
  Grantee: AwsS3S30Input
  Permission: String
}

type AwsS3S5j {
  Id: String!
  Filter: AwsS3S5jFilter
}

type AwsS3S5jFilter {
  Prefix: String
  Tag: AwsS3S3a
  And: AwsS3S5jFilterAnd
}

type AwsS3S5jFilterAnd {
  Prefix: String
  Tags: [AwsS3S3a]
}

input AwsS3S5jFilterAndInput {
  Prefix: String
  Tags: [AwsS3S3aInput]
}

input AwsS3S5jFilterInput {
  Prefix: String
  Tag: AwsS3S3aInput
  And: AwsS3S5jFilterAndInput
}

input AwsS3S5jInput {
  Id: String!
  Filter: AwsS3S5jFilterInput
}

input AwsS3S5nCloudFunctionConfigurationInput {
  Id: String
  Event: String
  Events: [String]
  CloudFunction: String
  InvocationRole: String
}

input AwsS3S5nInput {
  TopicConfiguration: AwsS3S5nTopicConfigurationInput
  QueueConfiguration: AwsS3S5nQueueConfigurationInput
  CloudFunctionConfiguration: AwsS3S5nCloudFunctionConfigurationInput
}

input AwsS3S5nQueueConfigurationInput {
  Id: String
  Event: String
  Events: [String]
  Queue: String
}

input AwsS3S5nTopicConfigurationInput {
  Id: String
  Events: [String]
  Event: String
  Topic: String
}

input AwsS3S5yInput {
  TopicConfigurations: [AwsS3S5yTopicConfigurationsInput]
  QueueConfigurations: [AwsS3S5yQueueConfigurationsInput]
  LambdaFunctionConfigurations: [AwsS3S5yLambdaFunctionConfigurationsInput]
}

input AwsS3S5yLambdaFunctionConfigurationsInput {
  Id: String
  LambdaFunctionArn: String!
  Events: [String]!
  Filter: AwsS3S61Input
}

input AwsS3S5yQueueConfigurationsInput {
  Id: String
  QueueArn: String!
  Events: [String]!
  Filter: AwsS3S61Input
}

input AwsS3S5yTopicConfigurationsInput {
  Id: String
  TopicArn: String!
  Events: [String]!
  Filter: AwsS3S61Input
}

input AwsS3S61Input {
  Key: AwsS3S61KeyInput
}

input AwsS3S61KeyFilterRulesInput {
  Name: String
  Value: String
}

input AwsS3S61KeyInput {
  FilterRules: [AwsS3S61KeyFilterRulesInput]
}

type AwsS3S6h {
  Role: String!
  Rules: [AwsS3S6hRules]!
}

input AwsS3S6hInput {
  Role: String!
  Rules: [AwsS3S6hRulesInput]!
}

type AwsS3S6hRules {
  ID: String
  Prefix: String!
  Status: String!
  SourceSelectionCriteria: AwsS3S6hRulesSourceSelectionCriteria
  Destination: AwsS3S6hRulesDestination!
}

type AwsS3S6hRulesDestination {
  Bucket: String!
  Account: String
  StorageClass: String
  AccessControlTranslation: AwsS3S6hRulesDestinationAccessControlTranslation
  EncryptionConfiguration: AwsS3S6hRulesDestinationEncryptionConfiguration
}

type AwsS3S6hRulesDestinationAccessControlTranslation {
  Owner: String!
}

input AwsS3S6hRulesDestinationAccessControlTranslationInput {
  Owner: String!
}

type AwsS3S6hRulesDestinationEncryptionConfiguration {
  ReplicaKmsKeyID: String
}

input AwsS3S6hRulesDestinationEncryptionConfigurationInput {
  ReplicaKmsKeyID: String
}

input AwsS3S6hRulesDestinationInput {
  Bucket: String!
  Account: String
  StorageClass: String
  AccessControlTranslation: AwsS3S6hRulesDestinationAccessControlTranslationInput
  EncryptionConfiguration: AwsS3S6hRulesDestinationEncryptionConfigurationInput
}

input AwsS3S6hRulesInput {
  ID: String
  Prefix: String!
  Status: String!
  SourceSelectionCriteria: AwsS3S6hRulesSourceSelectionCriteriaInput
  Destination: AwsS3S6hRulesDestinationInput!
}

type AwsS3S6hRulesSourceSelectionCriteria {
  SseKmsEncryptedObjects: AwsS3S6hRulesSourceSelectionCriteriaSseKmsEncryptedObjects
}

input AwsS3S6hRulesSourceSelectionCriteriaInput {
  SseKmsEncryptedObjects: AwsS3S6hRulesSourceSelectionCriteriaSseKmsEncryptedObjectsInput
}

type AwsS3S6hRulesSourceSelectionCriteriaSseKmsEncryptedObjects {
  Status: String!
}

input AwsS3S6hRulesSourceSelectionCriteriaSseKmsEncryptedObjectsInput {
  Status: String!
}

type AwsS3S75 {
  HostName: String!
  Protocol: String
}

input AwsS3S75Input {
  HostName: String!
  Protocol: String
}

type AwsS3S78 {
  Suffix: String!
}

input AwsS3S78Input {
  Suffix: String!
}

type AwsS3S7a {
  Key: String!
}

input AwsS3S7aInput {
  Key: String!
}

type AwsS3S7b {
  Condition: AwsS3S7bCondition
  Redirect: AwsS3S7bRedirect!
}

type AwsS3S7bCondition {
  HttpErrorCodeReturnedEquals: String
  KeyPrefixEquals: String
}

input AwsS3S7bConditionInput {
  HttpErrorCodeReturnedEquals: String
  KeyPrefixEquals: String
}

input AwsS3S7bInput {
  Condition: AwsS3S7bConditionInput
  Redirect: AwsS3S7bRedirectInput!
}

type AwsS3S7bRedirect {
  HostName: String
  HttpRedirectCode: String
  Protocol: String
  ReplaceKeyPrefixWith: String
  ReplaceKeyWith: String
}

input AwsS3S7bRedirectInput {
  HostName: String
  HttpRedirectCode: String
  Protocol: String
  ReplaceKeyPrefixWith: String
  ReplaceKeyWith: String
}

type AwsS3S97 {
  ID: String
  DisplayName: String
}

type AwsS3S98 {
  Prefix: String
}

type AwsS3S9q {
  Key: String
  LastModified: Date
  ETag: String
  Size: Int
  StorageClass: String
  Owner: AwsS3S2v
}

input AwsS3Sa8Input {
  Grants: [AwsS3S2yInput]
  Owner: AwsS3S2vInput
}

input AwsS3SauInput {
  TagSet: [AwsS3S3aInput]!
}

input AwsS3UploadPartCopyInput {
  Bucket: String!
  CopySource: String!
  CopySourceIfMatch: String
  CopySourceIfModifiedSince: Date
  CopySourceIfNoneMatch: String
  CopySourceIfUnmodifiedSince: Date
  CopySourceRange: String
  Key: String!
  PartNumber: Int!
  UploadId: String!
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  CopySourceSSECustomerAlgorithm: String
  CopySourceSSECustomerKey: JSON
  CopySourceSSECustomerKeyMD5: String
  RequestPayer: String
}

type AwsS3UploadPartCopyOutput {
  CopySourceVersionId: String
  CopyPartResult: AwsS3UploadPartCopyOutputCopyPartResult
  ServerSideEncryption: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestCharged: String
}

type AwsS3UploadPartCopyOutputCopyPartResult {
  ETag: String
  LastModified: Date
}

input AwsS3UploadPartInput {
  Body: JSON
  Bucket: String!
  ContentLength: JSON
  ContentMD5: String
  Key: String!
  PartNumber: Int!
  UploadId: String!
  SSECustomerAlgorithm: String
  SSECustomerKey: JSON
  SSECustomerKeyMD5: String
  RequestPayer: String
}

type AwsS3UploadPartOutput {
  ServerSideEncryption: String
  ETag: String
  SSECustomerAlgorithm: String
  SSECustomerKeyMD5: String
  SSEKMSKeyId: String
  RequestCharged: String
}

# Amazon SageMaker Service (2017-07-24)
type AwsSageMaker {
  addTags(input: AwsSageMakerAddTagsInput!, config: AwsConfig): AwsSageMakerAddTagsOutput
  createEndpoint(input: AwsSageMakerCreateEndpointInput!, config: AwsConfig): AwsSageMakerCreateEndpointOutput
  createEndpointConfig(input: AwsSageMakerCreateEndpointConfigInput!, config: AwsConfig): AwsSageMakerCreateEndpointConfigOutput
  createModel(input: AwsSageMakerCreateModelInput!, config: AwsConfig): AwsSageMakerCreateModelOutput
  createNotebookInstance(input: AwsSageMakerCreateNotebookInstanceInput!, config: AwsConfig): AwsSageMakerCreateNotebookInstanceOutput
  createPresignedNotebookInstanceUrl(input: AwsSageMakerCreatePresignedNotebookInstanceUrlInput!, config: AwsConfig): AwsSageMakerCreatePresignedNotebookInstanceUrlOutput
  createTrainingJob(input: AwsSageMakerCreateTrainingJobInput!, config: AwsConfig): AwsSageMakerCreateTrainingJobOutput
  deleteEndpoint(input: AwsSageMakerDeleteEndpointInput!, config: AwsConfig): JSON
  deleteEndpointConfig(input: AwsSageMakerDeleteEndpointConfigInput!, config: AwsConfig): JSON
  deleteModel(input: AwsSageMakerDeleteModelInput!, config: AwsConfig): JSON
  deleteNotebookInstance(input: AwsSageMakerDeleteNotebookInstanceInput!, config: AwsConfig): JSON
  deleteTags(input: AwsSageMakerDeleteTagsInput!, config: AwsConfig): JSON
  describeEndpoint(input: AwsSageMakerDescribeEndpointInput!, config: AwsConfig): AwsSageMakerDescribeEndpointOutput
  describeEndpointConfig(input: AwsSageMakerDescribeEndpointConfigInput!, config: AwsConfig): AwsSageMakerDescribeEndpointConfigOutput
  describeModel(input: AwsSageMakerDescribeModelInput!, config: AwsConfig): AwsSageMakerDescribeModelOutput
  describeNotebookInstance(input: AwsSageMakerDescribeNotebookInstanceInput!, config: AwsConfig): AwsSageMakerDescribeNotebookInstanceOutput
  describeTrainingJob(input: AwsSageMakerDescribeTrainingJobInput!, config: AwsConfig): AwsSageMakerDescribeTrainingJobOutput
  listEndpointConfigs(input: AwsSageMakerListEndpointConfigsInput, config: AwsConfig): AwsSageMakerListEndpointConfigsOutput
  listEndpoints(input: AwsSageMakerListEndpointsInput, config: AwsConfig): AwsSageMakerListEndpointsOutput
  listModels(input: AwsSageMakerListModelsInput, config: AwsConfig): AwsSageMakerListModelsOutput
  listNotebookInstances(input: AwsSageMakerListNotebookInstancesInput, config: AwsConfig): AwsSageMakerListNotebookInstancesOutput
  listTags(input: AwsSageMakerListTagsInput!, config: AwsConfig): AwsSageMakerListTagsOutput
  listTrainingJobs(input: AwsSageMakerListTrainingJobsInput, config: AwsConfig): AwsSageMakerListTrainingJobsOutput
  startNotebookInstance(input: AwsSageMakerStartNotebookInstanceInput!, config: AwsConfig): JSON
  stopNotebookInstance(input: AwsSageMakerStopNotebookInstanceInput!, config: AwsConfig): JSON
  stopTrainingJob(input: AwsSageMakerStopTrainingJobInput!, config: AwsConfig): JSON
  updateEndpoint(input: AwsSageMakerUpdateEndpointInput!, config: AwsConfig): AwsSageMakerUpdateEndpointOutput
  updateEndpointWeightsAndCapacities(input: AwsSageMakerUpdateEndpointWeightsAndCapacitiesInput!, config: AwsConfig): AwsSageMakerUpdateEndpointWeightsAndCapacitiesOutput
  updateNotebookInstance(input: AwsSageMakerUpdateNotebookInstanceInput!, config: AwsConfig): JSON
}

input AwsSageMakerAddTagsInput {
  ResourceArn: String!
  Tags: [AwsSageMakerS3Input]!
}

type AwsSageMakerAddTagsOutput {
  Tags: [AwsSageMakerS3]
}

input AwsSageMakerCreateEndpointConfigInput {
  EndpointConfigName: String!
  ProductionVariants: [AwsSageMakerSeInput]!
  Tags: [AwsSageMakerS3Input]
}

type AwsSageMakerCreateEndpointConfigOutput {
  EndpointConfigArn: String!
}

input AwsSageMakerCreateEndpointInput {
  EndpointName: String!
  EndpointConfigName: String!
  Tags: [AwsSageMakerS3Input]
}

type AwsSageMakerCreateEndpointOutput {
  EndpointArn: String!
}

input AwsSageMakerCreateModelInput {
  ModelName: String!
  PrimaryContainer: AwsSageMakerSoInput!
  SupplementalContainers: [AwsSageMakerSoInput]
  ExecutionRoleArn: String
  Tags: [AwsSageMakerS3Input]
}

type AwsSageMakerCreateModelOutput {
  ModelArn: String!
}

input AwsSageMakerCreateNotebookInstanceInput {
  NotebookInstanceName: String!
  InstanceType: String!
  SubnetId: String
  SecurityGroupIds: [String]
  RoleArn: String!
  KmsKeyId: String
  Tags: [AwsSageMakerS3Input]
}

type AwsSageMakerCreateNotebookInstanceOutput {
  NotebookInstanceArn: String
}

input AwsSageMakerCreatePresignedNotebookInstanceUrlInput {
  NotebookInstanceName: String!
  SessionExpirationDurationInSeconds: Int
}

type AwsSageMakerCreatePresignedNotebookInstanceUrlOutput {
  AuthorizedUrl: String
}

input AwsSageMakerCreateTrainingJobInput {
  TrainingJobName: String!
  HyperParameters: JSON
  AlgorithmSpecification: AwsSageMakerS1hInput!
  RoleArn: String!
  InputDataConfig: [AwsSageMakerS1kInput]!
  OutputDataConfig: AwsSageMakerS1vInput!
  ResourceConfig: AwsSageMakerS1wInput!
  StoppingCondition: AwsSageMakerS20Input!
  Tags: [AwsSageMakerS3Input]
}

type AwsSageMakerCreateTrainingJobOutput {
  TrainingJobArn: String!
}

input AwsSageMakerDeleteEndpointConfigInput {
  EndpointConfigName: String!
}

input AwsSageMakerDeleteEndpointInput {
  EndpointName: String!
}

input AwsSageMakerDeleteModelInput {
  ModelName: String!
}

input AwsSageMakerDeleteNotebookInstanceInput {
  NotebookInstanceName: String!
}

input AwsSageMakerDeleteTagsInput {
  ResourceArn: String!
  TagKeys: [String]!
}

input AwsSageMakerDescribeEndpointConfigInput {
  EndpointConfigName: String!
}

type AwsSageMakerDescribeEndpointConfigOutput {
  EndpointConfigName: String!
  EndpointConfigArn: String!
  ProductionVariants: [AwsSageMakerSe]!
  CreationTime: Date!
}

input AwsSageMakerDescribeEndpointInput {
  EndpointName: String!
}

type AwsSageMakerDescribeEndpointOutput {
  EndpointName: String!
  EndpointArn: String!
  EndpointConfigName: String!
  ProductionVariants: [AwsSageMakerDescribeEndpointOutputProductionVariants]
  EndpointStatus: String!
  FailureReason: String
  CreationTime: Date!
  LastModifiedTime: Date!
}

type AwsSageMakerDescribeEndpointOutputProductionVariants {
  VariantName: String!
  CurrentWeight: Float
  DesiredWeight: Float
  CurrentInstanceCount: Int
  DesiredInstanceCount: Int
}

input AwsSageMakerDescribeModelInput {
  ModelName: String!
}

type AwsSageMakerDescribeModelOutput {
  ModelName: String!
  PrimaryContainer: AwsSageMakerSo!
  SupplementalContainers: [AwsSageMakerSo]!
  ExecutionRoleArn: String!
  CreationTime: Date!
  ModelArn: String!
}

input AwsSageMakerDescribeNotebookInstanceInput {
  NotebookInstanceName: String!
}

type AwsSageMakerDescribeNotebookInstanceOutput {
  NotebookInstanceArn: String
  NotebookInstanceName: String
  NotebookInstanceStatus: String
  FailureReason: String
  Url: String
  InstanceType: String
  SubnetId: String
  SecurityGroups: [String]
  RoleArn: String
  KmsKeyId: String
  NetworkInterfaceId: String
  LastModifiedTime: Date
  CreationTime: Date
}

input AwsSageMakerDescribeTrainingJobInput {
  TrainingJobName: String!
}

type AwsSageMakerDescribeTrainingJobOutput {
  TrainingJobName: String!
  TrainingJobArn: String!
  ModelArtifacts: AwsSageMakerDescribeTrainingJobOutputModelArtifacts!
  TrainingJobStatus: String!
  SecondaryStatus: String!
  FailureReason: String
  HyperParameters: JSON
  AlgorithmSpecification: AwsSageMakerS1h!
  RoleArn: String
  InputDataConfig: [AwsSageMakerS1k]!
  OutputDataConfig: AwsSageMakerS1v
  ResourceConfig: AwsSageMakerS1w!
  StoppingCondition: AwsSageMakerS20!
  CreationTime: Date!
  TrainingStartTime: Date
  TrainingEndTime: Date
  LastModifiedTime: Date
}

type AwsSageMakerDescribeTrainingJobOutputModelArtifacts {
  S3ModelArtifacts: String!
}

input AwsSageMakerListEndpointConfigsInput {
  SortBy: String
  SortOrder: String
  NextToken: String
  MaxResults: Int
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
}

type AwsSageMakerListEndpointConfigsOutput {
  EndpointConfigs: [AwsSageMakerListEndpointConfigsOutputEndpointConfigs]!
  NextToken: String
}

type AwsSageMakerListEndpointConfigsOutputEndpointConfigs {
  EndpointConfigName: String!
  EndpointConfigArn: String!
  CreationTime: Date!
}

input AwsSageMakerListEndpointsInput {
  SortBy: String
  SortOrder: String
  NextToken: String
  MaxResults: Int
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
  LastModifiedTimeBefore: Date
  LastModifiedTimeAfter: Date
  StatusEquals: String
}

type AwsSageMakerListEndpointsOutput {
  Endpoints: [AwsSageMakerListEndpointsOutputEndpoints]!
  NextToken: String
}

type AwsSageMakerListEndpointsOutputEndpoints {
  EndpointName: String!
  EndpointArn: String!
  CreationTime: Date!
  LastModifiedTime: Date!
  EndpointStatus: String!
}

input AwsSageMakerListModelsInput {
  SortBy: String
  SortOrder: String
  NextToken: String
  MaxResults: Int
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
}

type AwsSageMakerListModelsOutput {
  Models: [AwsSageMakerListModelsOutputModels]!
  NextToken: String
}

type AwsSageMakerListModelsOutputModels {
  ModelName: String!
  ModelArn: String!
  CreationTime: Date!
}

input AwsSageMakerListNotebookInstancesInput {
  NextToken: String
  MaxResults: Int
  SortBy: String
  SortOrder: String
  NameContains: String
  CreationTimeBefore: Date
  CreationTimeAfter: Date
  LastModifiedTimeBefore: Date
  LastModifiedTimeAfter: Date
  StatusEquals: String
}

type AwsSageMakerListNotebookInstancesOutput {
  NextToken: String
  NotebookInstances: [AwsSageMakerListNotebookInstancesOutputNotebookInstances]
}

type AwsSageMakerListNotebookInstancesOutputNotebookInstances {
  NotebookInstanceName: String!
  NotebookInstanceArn: String!
  NotebookInstanceStatus: String
  Url: String
  InstanceType: String
  CreationTime: Date
  LastModifiedTime: Date
}

input AwsSageMakerListTagsInput {
  ResourceArn: String!
  NextToken: String
  MaxResults: Int
}

type AwsSageMakerListTagsOutput {
  Tags: [AwsSageMakerS3]
  NextToken: String
}

input AwsSageMakerListTrainingJobsInput {
  NextToken: String
  MaxResults: Int
  CreationTimeAfter: Date
  CreationTimeBefore: Date
  LastModifiedTimeAfter: Date
  LastModifiedTimeBefore: Date
  NameContains: String
  StatusEquals: String
  SortBy: String
  SortOrder: String
}

type AwsSageMakerListTrainingJobsOutput {
  TrainingJobSummaries: [AwsSageMakerListTrainingJobsOutputTrainingJobSummaries]!
  NextToken: String
}

type AwsSageMakerListTrainingJobsOutputTrainingJobSummaries {
  TrainingJobName: String!
  TrainingJobArn: String!
  CreationTime: Date!
  TrainingEndTime: Date
  LastModifiedTime: Date
  TrainingJobStatus: String!
}

# Amazon SageMaker Runtime (2017-05-13)
type AwsSageMakerRuntime {
  invokeEndpoint(input: AwsSageMakerRuntimeInvokeEndpointInput!, config: AwsConfig): AwsSageMakerRuntimeInvokeEndpointOutput
}

input AwsSageMakerRuntimeInvokeEndpointInput {
  EndpointName: String!
  Body: JSON!
  ContentType: String
  Accept: String
}

type AwsSageMakerRuntimeInvokeEndpointOutput {
  Body: JSON!
  ContentType: String
  InvokedProductionVariant: String
}

type AwsSageMakerS1h {
  TrainingImage: String!
  TrainingInputMode: String!
}

input AwsSageMakerS1hInput {
  TrainingImage: String!
  TrainingInputMode: String!
}

type AwsSageMakerS1k {
  ChannelName: String!
  DataSource: AwsSageMakerS1kDataSource!
  ContentType: String
  CompressionType: String
  RecordWrapperType: String
}

type AwsSageMakerS1kDataSource {
  S3DataSource: AwsSageMakerS1kDataSourceS3DataSource!
}

input AwsSageMakerS1kDataSourceInput {
  S3DataSource: AwsSageMakerS1kDataSourceS3DataSourceInput!
}

type AwsSageMakerS1kDataSourceS3DataSource {
  S3DataType: String!
  S3Uri: String!
  S3DataDistributionType: String
}

input AwsSageMakerS1kDataSourceS3DataSourceInput {
  S3DataType: String!
  S3Uri: String!
  S3DataDistributionType: String
}

input AwsSageMakerS1kInput {
  ChannelName: String!
  DataSource: AwsSageMakerS1kDataSourceInput!
  ContentType: String
  CompressionType: String
  RecordWrapperType: String
}

type AwsSageMakerS1v {
  KmsKeyId: String
  S3OutputPath: String!
}

input AwsSageMakerS1vInput {
  KmsKeyId: String
  S3OutputPath: String!
}

type AwsSageMakerS1w {
  InstanceType: String!
  InstanceCount: Int!
  VolumeSizeInGB: Int!
}

input AwsSageMakerS1wInput {
  InstanceType: String!
  InstanceCount: Int!
  VolumeSizeInGB: Int!
}

type AwsSageMakerS20 {
  MaxRuntimeInSeconds: Int
}

input AwsSageMakerS20Input {
  MaxRuntimeInSeconds: Int
}

type AwsSageMakerS3 {
  Key: String!
  Value: String!
}

input AwsSageMakerS3Input {
  Key: String!
  Value: String!
}

type AwsSageMakerSe {
  VariantName: String!
  ModelName: String!
  InitialInstanceCount: Int!
  InstanceType: String!
  InitialVariantWeight: Float
}

input AwsSageMakerSeInput {
  VariantName: String!
  ModelName: String!
  InitialInstanceCount: Int!
  InstanceType: String!
  InitialVariantWeight: Float
}

type AwsSageMakerSo {
  ContainerHostname: String
  Image: String!
  ModelDataUrl: String
  Environment: JSON
}

input AwsSageMakerSoInput {
  ContainerHostname: String
  Image: String!
  ModelDataUrl: String
  Environment: JSON
}

input AwsSageMakerStartNotebookInstanceInput {
  NotebookInstanceName: String!
}

input AwsSageMakerStopNotebookInstanceInput {
  NotebookInstanceName: String!
}

input AwsSageMakerStopTrainingJobInput {
  TrainingJobName: String!
}

input AwsSageMakerUpdateEndpointInput {
  EndpointName: String!
  EndpointConfigName: String!
}

type AwsSageMakerUpdateEndpointOutput {
  EndpointArn: String!
}

input AwsSageMakerUpdateEndpointWeightsAndCapacitiesDesiredWeightsAndCapacitiesInput {
  VariantName: String!
  DesiredWeight: Float
  DesiredInstanceCount: Int
}

input AwsSageMakerUpdateEndpointWeightsAndCapacitiesInput {
  EndpointName: String!
  DesiredWeightsAndCapacities: [AwsSageMakerUpdateEndpointWeightsAndCapacitiesDesiredWeightsAndCapacitiesInput]!
}

type AwsSageMakerUpdateEndpointWeightsAndCapacitiesOutput {
  EndpointArn: String!
}

input AwsSageMakerUpdateNotebookInstanceInput {
  NotebookInstanceName: String!
  InstanceType: String
  RoleArn: String
}

# AWS Service Catalog (2015-12-10)
type AwsServiceCatalog {
  acceptPortfolioShare(input: AwsServiceCatalogAcceptPortfolioShareInput!, config: AwsConfig): JSON
  associatePrincipalWithPortfolio(input: AwsServiceCatalogAssociatePrincipalWithPortfolioInput!, config: AwsConfig): JSON
  associateProductWithPortfolio(input: AwsServiceCatalogAssociateProductWithPortfolioInput!, config: AwsConfig): JSON
  associateTagOptionWithResource(input: AwsServiceCatalogAssociateTagOptionWithResourceInput!, config: AwsConfig): JSON
  copyProduct(input: AwsServiceCatalogCopyProductInput!, config: AwsConfig): AwsServiceCatalogCopyProductOutput
  createConstraint(input: AwsServiceCatalogCreateConstraintInput!, config: AwsConfig): AwsServiceCatalogCreateConstraintOutput
  createPortfolio(input: AwsServiceCatalogCreatePortfolioInput!, config: AwsConfig): AwsServiceCatalogCreatePortfolioOutput
  createPortfolioShare(input: AwsServiceCatalogCreatePortfolioShareInput!, config: AwsConfig): JSON
  createProduct(input: AwsServiceCatalogCreateProductInput!, config: AwsConfig): AwsServiceCatalogCreateProductOutput
  createProvisioningArtifact(input: AwsServiceCatalogCreateProvisioningArtifactInput!, config: AwsConfig): AwsServiceCatalogCreateProvisioningArtifactOutput
  createTagOption(input: AwsServiceCatalogCreateTagOptionInput!, config: AwsConfig): AwsServiceCatalogCreateTagOptionOutput
  deleteConstraint(input: AwsServiceCatalogDeleteConstraintInput!, config: AwsConfig): JSON
  deletePortfolio(input: AwsServiceCatalogDeletePortfolioInput!, config: AwsConfig): JSON
  deletePortfolioShare(input: AwsServiceCatalogDeletePortfolioShareInput!, config: AwsConfig): JSON
  deleteProduct(input: AwsServiceCatalogDeleteProductInput!, config: AwsConfig): JSON
  deleteProvisioningArtifact(input: AwsServiceCatalogDeleteProvisioningArtifactInput!, config: AwsConfig): JSON
  describeConstraint(input: AwsServiceCatalogDescribeConstraintInput!, config: AwsConfig): AwsServiceCatalogDescribeConstraintOutput
  describeCopyProductStatus(input: AwsServiceCatalogDescribeCopyProductStatusInput!, config: AwsConfig): AwsServiceCatalogDescribeCopyProductStatusOutput
  describePortfolio(input: AwsServiceCatalogDescribePortfolioInput!, config: AwsConfig): AwsServiceCatalogDescribePortfolioOutput
  describeProduct(input: AwsServiceCatalogDescribeProductInput!, config: AwsConfig): AwsServiceCatalogDescribeProductOutput
  describeProductAsAdmin(input: AwsServiceCatalogDescribeProductAsAdminInput!, config: AwsConfig): AwsServiceCatalogDescribeProductAsAdminOutput
  describeProductView(input: AwsServiceCatalogDescribeProductViewInput!, config: AwsConfig): AwsServiceCatalogDescribeProductViewOutput
  describeProvisionedProduct(input: AwsServiceCatalogDescribeProvisionedProductInput!, config: AwsConfig): AwsServiceCatalogDescribeProvisionedProductOutput
  describeProvisioningArtifact(input: AwsServiceCatalogDescribeProvisioningArtifactInput!, config: AwsConfig): AwsServiceCatalogDescribeProvisioningArtifactOutput
  describeProvisioningParameters(input: AwsServiceCatalogDescribeProvisioningParametersInput!, config: AwsConfig): AwsServiceCatalogDescribeProvisioningParametersOutput
  describeRecord(input: AwsServiceCatalogDescribeRecordInput!, config: AwsConfig): AwsServiceCatalogDescribeRecordOutput
  describeTagOption(input: AwsServiceCatalogDescribeTagOptionInput!, config: AwsConfig): AwsServiceCatalogDescribeTagOptionOutput
  disassociatePrincipalFromPortfolio(input: AwsServiceCatalogDisassociatePrincipalFromPortfolioInput!, config: AwsConfig): JSON
  disassociateProductFromPortfolio(input: AwsServiceCatalogDisassociateProductFromPortfolioInput!, config: AwsConfig): JSON
  disassociateTagOptionFromResource(input: AwsServiceCatalogDisassociateTagOptionFromResourceInput!, config: AwsConfig): JSON
  listAcceptedPortfolioShares(input: AwsServiceCatalogListAcceptedPortfolioSharesInput, config: AwsConfig): AwsServiceCatalogListAcceptedPortfolioSharesOutput
  listConstraintsForPortfolio(input: AwsServiceCatalogListConstraintsForPortfolioInput!, config: AwsConfig): AwsServiceCatalogListConstraintsForPortfolioOutput
  listLaunchPaths(input: AwsServiceCatalogListLaunchPathsInput!, config: AwsConfig): AwsServiceCatalogListLaunchPathsOutput
  listPortfolioAccess(input: AwsServiceCatalogListPortfolioAccessInput!, config: AwsConfig): AwsServiceCatalogListPortfolioAccessOutput
  listPortfolios(input: AwsServiceCatalogListPortfoliosInput, config: AwsConfig): AwsServiceCatalogListPortfoliosOutput
  listPortfoliosForProduct(input: AwsServiceCatalogListPortfoliosForProductInput!, config: AwsConfig): AwsServiceCatalogListPortfoliosForProductOutput
  listPrincipalsForPortfolio(input: AwsServiceCatalogListPrincipalsForPortfolioInput!, config: AwsConfig): AwsServiceCatalogListPrincipalsForPortfolioOutput
  listProvisioningArtifacts(input: AwsServiceCatalogListProvisioningArtifactsInput!, config: AwsConfig): AwsServiceCatalogListProvisioningArtifactsOutput
  listRecordHistory(input: AwsServiceCatalogListRecordHistoryInput, config: AwsConfig): AwsServiceCatalogListRecordHistoryOutput
  listResourcesForTagOption(input: AwsServiceCatalogListResourcesForTagOptionInput!, config: AwsConfig): AwsServiceCatalogListResourcesForTagOptionOutput
  listTagOptions(input: AwsServiceCatalogListTagOptionsInput, config: AwsConfig): AwsServiceCatalogListTagOptionsOutput
  provisionProduct(input: AwsServiceCatalogProvisionProductInput!, config: AwsConfig): AwsServiceCatalogProvisionProductOutput
  rejectPortfolioShare(input: AwsServiceCatalogRejectPortfolioShareInput!, config: AwsConfig): JSON
  scanProvisionedProducts(input: AwsServiceCatalogScanProvisionedProductsInput, config: AwsConfig): AwsServiceCatalogScanProvisionedProductsOutput
  searchProducts(input: AwsServiceCatalogSearchProductsInput, config: AwsConfig): AwsServiceCatalogSearchProductsOutput
  searchProductsAsAdmin(input: AwsServiceCatalogSearchProductsAsAdminInput, config: AwsConfig): AwsServiceCatalogSearchProductsAsAdminOutput
  terminateProvisionedProduct(input: AwsServiceCatalogTerminateProvisionedProductInput!, config: AwsConfig): AwsServiceCatalogTerminateProvisionedProductOutput
  updateConstraint(input: AwsServiceCatalogUpdateConstraintInput!, config: AwsConfig): AwsServiceCatalogUpdateConstraintOutput
  updatePortfolio(input: AwsServiceCatalogUpdatePortfolioInput!, config: AwsConfig): AwsServiceCatalogUpdatePortfolioOutput
  updateProduct(input: AwsServiceCatalogUpdateProductInput!, config: AwsConfig): AwsServiceCatalogUpdateProductOutput
  updateProvisionedProduct(input: AwsServiceCatalogUpdateProvisionedProductInput!, config: AwsConfig): AwsServiceCatalogUpdateProvisionedProductOutput
  updateProvisioningArtifact(input: AwsServiceCatalogUpdateProvisioningArtifactInput!, config: AwsConfig): AwsServiceCatalogUpdateProvisioningArtifactOutput
  updateTagOption(input: AwsServiceCatalogUpdateTagOptionInput!, config: AwsConfig): AwsServiceCatalogUpdateTagOptionOutput
}

input AwsServiceCatalogAcceptPortfolioShareInput {
  AcceptLanguage: String
  PortfolioId: String!
}

input AwsServiceCatalogAssociatePrincipalWithPortfolioInput {
  AcceptLanguage: String
  PortfolioId: String!
  PrincipalARN: String!
  PrincipalType: String!
}

input AwsServiceCatalogAssociateProductWithPortfolioInput {
  AcceptLanguage: String
  ProductId: String!
  PortfolioId: String!
  SourcePortfolioId: String
}

input AwsServiceCatalogAssociateTagOptionWithResourceInput {
  ResourceId: String!
  TagOptionId: String!
}

input AwsServiceCatalogCopyProductInput {
  AcceptLanguage: String
  SourceProductArn: String!
  TargetProductId: String
  TargetProductName: String
  SourceProvisioningArtifactIdentifiers: [JSON]
  CopyOptions: [String]
  IdempotencyToken: String!
}

type AwsServiceCatalogCopyProductOutput {
  CopyProductToken: String
}

input AwsServiceCatalogCreateConstraintInput {
  AcceptLanguage: String
  PortfolioId: String!
  ProductId: String!
  Parameters: String!
  Type: String!
  Description: String
  IdempotencyToken: String!
}

type AwsServiceCatalogCreateConstraintOutput {
  ConstraintDetail: AwsServiceCatalogSv
  ConstraintParameters: String
  Status: String
}

input AwsServiceCatalogCreatePortfolioInput {
  AcceptLanguage: String
  DisplayName: String!
  Description: String
  ProviderName: String!
  Tags: [AwsServiceCatalogS13Input]
  IdempotencyToken: String!
}

type AwsServiceCatalogCreatePortfolioOutput {
  PortfolioDetail: AwsServiceCatalogS17
  Tags: [AwsServiceCatalogS13]
}

input AwsServiceCatalogCreatePortfolioShareInput {
  AcceptLanguage: String
  PortfolioId: String!
  AccountId: String!
}

input AwsServiceCatalogCreateProductInput {
  AcceptLanguage: String
  Name: String!
  Owner: String!
  Description: String
  Distributor: String
  SupportDescription: String
  SupportEmail: String
  SupportUrl: String
  ProductType: String!
  Tags: [AwsServiceCatalogS13Input]
  ProvisioningArtifactParameters: AwsServiceCatalogS1kInput!
  IdempotencyToken: String!
}

type AwsServiceCatalogCreateProductOutput {
  ProductViewDetail: AwsServiceCatalogS1s
  ProvisioningArtifactDetail: AwsServiceCatalogS1x
  Tags: [AwsServiceCatalogS13]
}

input AwsServiceCatalogCreateProvisioningArtifactInput {
  AcceptLanguage: String
  ProductId: String!
  Parameters: AwsServiceCatalogS1kInput!
  IdempotencyToken: String!
}

type AwsServiceCatalogCreateProvisioningArtifactOutput {
  ProvisioningArtifactDetail: AwsServiceCatalogS1x
  Info: JSON
  Status: String
}

input AwsServiceCatalogCreateTagOptionInput {
  Key: String!
  Value: String!
}

type AwsServiceCatalogCreateTagOptionOutput {
  TagOptionDetail: AwsServiceCatalogS24
}

input AwsServiceCatalogDeleteConstraintInput {
  AcceptLanguage: String
  Id: String!
}

input AwsServiceCatalogDeletePortfolioInput {
  AcceptLanguage: String
  Id: String!
}

input AwsServiceCatalogDeletePortfolioShareInput {
  AcceptLanguage: String
  PortfolioId: String!
  AccountId: String!
}

input AwsServiceCatalogDeleteProductInput {
  AcceptLanguage: String
  Id: String!
}

input AwsServiceCatalogDeleteProvisioningArtifactInput {
  AcceptLanguage: String
  ProductId: String!
  ProvisioningArtifactId: String!
}

input AwsServiceCatalogDescribeConstraintInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServiceCatalogDescribeConstraintOutput {
  ConstraintDetail: AwsServiceCatalogSv
  ConstraintParameters: String
  Status: String
}

input AwsServiceCatalogDescribeCopyProductStatusInput {
  AcceptLanguage: String
  CopyProductToken: String!
}

type AwsServiceCatalogDescribeCopyProductStatusOutput {
  CopyProductStatus: String
  TargetProductId: String
  StatusDetail: String
}

input AwsServiceCatalogDescribePortfolioInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServiceCatalogDescribePortfolioOutput {
  PortfolioDetail: AwsServiceCatalogS17
  Tags: [AwsServiceCatalogS13]
  TagOptions: [AwsServiceCatalogS24]
}

input AwsServiceCatalogDescribeProductAsAdminInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServiceCatalogDescribeProductAsAdminOutput {
  ProductViewDetail: AwsServiceCatalogS1s
  ProvisioningArtifactSummaries: [AwsServiceCatalogDescribeProductAsAdminOutputProvisioningArtifactSummaries]
  Tags: [AwsServiceCatalogS13]
  TagOptions: [AwsServiceCatalogS24]
}

type AwsServiceCatalogDescribeProductAsAdminOutputProvisioningArtifactSummaries {
  Id: String
  Name: String
  Description: String
  CreatedTime: Date
  ProvisioningArtifactMetadata: JSON
}

input AwsServiceCatalogDescribeProductInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServiceCatalogDescribeProductOutput {
  ProductViewSummary: AwsServiceCatalogS1t
  ProvisioningArtifacts: [AwsServiceCatalogS2r]
}

input AwsServiceCatalogDescribeProductViewInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServiceCatalogDescribeProductViewOutput {
  ProductViewSummary: AwsServiceCatalogS1t
  ProvisioningArtifacts: [AwsServiceCatalogS2r]
}

input AwsServiceCatalogDescribeProvisionedProductInput {
  AcceptLanguage: String
  Id: String!
}

type AwsServiceCatalogDescribeProvisionedProductOutput {
  ProvisionedProductDetail: AwsServiceCatalogS32
}

input AwsServiceCatalogDescribeProvisioningArtifactInput {
  AcceptLanguage: String
  ProvisioningArtifactId: String!
  ProductId: String!
  Verbose: Boolean
}

type AwsServiceCatalogDescribeProvisioningArtifactOutput {
  ProvisioningArtifactDetail: AwsServiceCatalogS1x
  Info: JSON
  Status: String
}

input AwsServiceCatalogDescribeProvisioningParametersInput {
  AcceptLanguage: String
  ProductId: String!
  ProvisioningArtifactId: String!
  PathId: String
}

type AwsServiceCatalogDescribeProvisioningParametersOutput {
  ProvisioningArtifactParameters: [AwsServiceCatalogDescribeProvisioningParametersOutputProvisioningArtifactParameters]
  ConstraintSummaries: [AwsServiceCatalogS3o]
  UsageInstructions: [AwsServiceCatalogDescribeProvisioningParametersOutputUsageInstructions]
  TagOptions: [AwsServiceCatalogDescribeProvisioningParametersOutputTagOptions]
}

type AwsServiceCatalogDescribeProvisioningParametersOutputProvisioningArtifactParameters {
  ParameterKey: String
  DefaultValue: String
  ParameterType: String
  IsNoEcho: Boolean
  Description: String
  ParameterConstraints: AwsServiceCatalogDescribeProvisioningParametersOutputProvisioningArtifactParametersParameterConstraints
}

type AwsServiceCatalogDescribeProvisioningParametersOutputProvisioningArtifactParametersParameterConstraints {
  AllowedValues: [String]
}

type AwsServiceCatalogDescribeProvisioningParametersOutputTagOptions {
  Key: String
  Values: [String]
}

type AwsServiceCatalogDescribeProvisioningParametersOutputUsageInstructions {
  Type: String
  Value: String
}

input AwsServiceCatalogDescribeRecordInput {
  AcceptLanguage: String
  Id: String!
  PageToken: String
  PageSize: Int
}

type AwsServiceCatalogDescribeRecordOutput {
  RecordDetail: AwsServiceCatalogS41
  RecordOutputs: [AwsServiceCatalogDescribeRecordOutputRecordOutputs]
  NextPageToken: String
}

type AwsServiceCatalogDescribeRecordOutputRecordOutputs {
  OutputKey: String
  OutputValue: String
  Description: String
}

input AwsServiceCatalogDescribeTagOptionInput {
  Id: String!
}

type AwsServiceCatalogDescribeTagOptionOutput {
  TagOptionDetail: AwsServiceCatalogS24
}

input AwsServiceCatalogDisassociatePrincipalFromPortfolioInput {
  AcceptLanguage: String
  PortfolioId: String!
  PrincipalARN: String!
}

input AwsServiceCatalogDisassociateProductFromPortfolioInput {
  AcceptLanguage: String
  ProductId: String!
  PortfolioId: String!
}

input AwsServiceCatalogDisassociateTagOptionFromResourceInput {
  ResourceId: String!
  TagOptionId: String!
}

input AwsServiceCatalogListAcceptedPortfolioSharesInput {
  AcceptLanguage: String
  PageToken: String
  PageSize: Int
}

type AwsServiceCatalogListAcceptedPortfolioSharesOutput {
  PortfolioDetails: [AwsServiceCatalogS17]
  NextPageToken: String
}

input AwsServiceCatalogListConstraintsForPortfolioInput {
  AcceptLanguage: String
  PortfolioId: String!
  ProductId: String
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListConstraintsForPortfolioOutput {
  ConstraintDetails: [AwsServiceCatalogSv]
  NextPageToken: String
}

input AwsServiceCatalogListLaunchPathsInput {
  AcceptLanguage: String
  ProductId: String!
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListLaunchPathsOutput {
  LaunchPathSummaries: [AwsServiceCatalogListLaunchPathsOutputLaunchPathSummaries]
  NextPageToken: String
}

type AwsServiceCatalogListLaunchPathsOutputLaunchPathSummaries {
  Id: String
  ConstraintSummaries: [AwsServiceCatalogS3o]
  Tags: [AwsServiceCatalogS13]
  Name: String
}

input AwsServiceCatalogListPortfolioAccessInput {
  AcceptLanguage: String
  PortfolioId: String!
}

type AwsServiceCatalogListPortfolioAccessOutput {
  AccountIds: [String]
  NextPageToken: String
}

input AwsServiceCatalogListPortfoliosForProductInput {
  AcceptLanguage: String
  ProductId: String!
  PageToken: String
  PageSize: Int
}

type AwsServiceCatalogListPortfoliosForProductOutput {
  PortfolioDetails: [AwsServiceCatalogS17]
  NextPageToken: String
}

input AwsServiceCatalogListPortfoliosInput {
  AcceptLanguage: String
  PageToken: String
  PageSize: Int
}

type AwsServiceCatalogListPortfoliosOutput {
  PortfolioDetails: [AwsServiceCatalogS17]
  NextPageToken: String
}

input AwsServiceCatalogListPrincipalsForPortfolioInput {
  AcceptLanguage: String
  PortfolioId: String!
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListPrincipalsForPortfolioOutput {
  Principals: [AwsServiceCatalogListPrincipalsForPortfolioOutputPrincipals]
  NextPageToken: String
}

type AwsServiceCatalogListPrincipalsForPortfolioOutputPrincipals {
  PrincipalARN: String
  PrincipalType: String
}

input AwsServiceCatalogListProvisioningArtifactsInput {
  AcceptLanguage: String
  ProductId: String!
}

type AwsServiceCatalogListProvisioningArtifactsOutput {
  ProvisioningArtifactDetails: [AwsServiceCatalogS1x]
  NextPageToken: String
}

input AwsServiceCatalogListRecordHistoryInput {
  AcceptLanguage: String
  AccessLevelFilter: AwsServiceCatalogS5gInput
  SearchFilter: AwsServiceCatalogListRecordHistorySearchFilterInput
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListRecordHistoryOutput {
  RecordDetails: [AwsServiceCatalogS41]
  NextPageToken: String
}

input AwsServiceCatalogListRecordHistorySearchFilterInput {
  Key: String
  Value: String
}

input AwsServiceCatalogListResourcesForTagOptionInput {
  TagOptionId: String!
  ResourceType: String
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListResourcesForTagOptionOutput {
  ResourceDetails: [AwsServiceCatalogListResourcesForTagOptionOutputResourceDetails]
  PageToken: String
}

type AwsServiceCatalogListResourcesForTagOptionOutputResourceDetails {
  Id: String
  ARN: String
  Name: String
  Description: String
  CreatedTime: Date
}

input AwsServiceCatalogListTagOptionsFiltersInput {
  Key: String
  Value: String
  Active: Boolean
}

input AwsServiceCatalogListTagOptionsInput {
  Filters: AwsServiceCatalogListTagOptionsFiltersInput
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogListTagOptionsOutput {
  TagOptionDetails: [AwsServiceCatalogS24]
  PageToken: String
}

input AwsServiceCatalogProvisionProductInput {
  AcceptLanguage: String
  ProductId: String!
  ProvisioningArtifactId: String!
  PathId: String
  ProvisionedProductName: String!
  ProvisioningParameters: [AwsServiceCatalogProvisionProductProvisioningParametersInput]
  Tags: [AwsServiceCatalogS13Input]
  NotificationArns: [String]
  ProvisionToken: String!
}

type AwsServiceCatalogProvisionProductOutput {
  RecordDetail: AwsServiceCatalogS41
}

input AwsServiceCatalogProvisionProductProvisioningParametersInput {
  Key: String
  Value: String
}

input AwsServiceCatalogRejectPortfolioShareInput {
  AcceptLanguage: String
  PortfolioId: String!
}

type AwsServiceCatalogS13 {
  Key: String!
  Value: String!
}

input AwsServiceCatalogS13Input {
  Key: String!
  Value: String!
}

type AwsServiceCatalogS17 {
  Id: String
  ARN: String
  DisplayName: String
  Description: String
  CreatedTime: Date
  ProviderName: String
}

input AwsServiceCatalogS1kInput {
  Name: String
  Description: String
  Info: JSON!
  Type: String
}

type AwsServiceCatalogS1s {
  ProductViewSummary: AwsServiceCatalogS1t
  Status: String
  ProductARN: String
  CreatedTime: Date
}

type AwsServiceCatalogS1t {
  Id: String
  ProductId: String
  Name: String
  Owner: String
  ShortDescription: String
  Type: String
  Distributor: String
  HasDefaultPath: Boolean
  SupportEmail: String
  SupportDescription: String
  SupportUrl: String
}

type AwsServiceCatalogS1x {
  Id: String
  Name: String
  Description: String
  Type: String
  CreatedTime: Date
}

type AwsServiceCatalogS24 {
  Key: String
  Value: String
  Active: Boolean
  Id: String
}

type AwsServiceCatalogS2r {
  Id: String
  Name: String
  Description: String
  CreatedTime: Date
}

type AwsServiceCatalogS32 {
  Name: String
  Arn: String
  Type: String
  Id: String
  Status: String
  StatusMessage: String
  CreatedTime: Date
  IdempotencyToken: String
  LastRecordId: String
}

type AwsServiceCatalogS3o {
  Type: String
  Description: String
}

type AwsServiceCatalogS41 {
  RecordId: String
  ProvisionedProductName: String
  Status: String
  CreatedTime: Date
  UpdatedTime: Date
  ProvisionedProductType: String
  RecordType: String
  ProvisionedProductId: String
  ProductId: String
  ProvisioningArtifactId: String
  PathId: String
  RecordErrors: [AwsServiceCatalogS41RecordErrors]
  RecordTags: [AwsServiceCatalogS41RecordTags]
}

type AwsServiceCatalogS41RecordErrors {
  Code: String
  Description: String
}

type AwsServiceCatalogS41RecordTags {
  Key: String
  Value: String
}

input AwsServiceCatalogS5gInput {
  Key: String
  Value: String
}

input AwsServiceCatalogScanProvisionedProductsInput {
  AcceptLanguage: String
  AccessLevelFilter: AwsServiceCatalogS5gInput
  PageSize: Int
  PageToken: String
}

type AwsServiceCatalogScanProvisionedProductsOutput {
  ProvisionedProducts: [AwsServiceCatalogS32]
  NextPageToken: String
}

input AwsServiceCatalogSearchProductsAsAdminInput {
  AcceptLanguage: String
  PortfolioId: String
  Filters: JSON
  SortBy: String
  SortOrder: String
  PageToken: String
  PageSize: Int
  ProductSource: String
}

type AwsServiceCatalogSearchProductsAsAdminOutput {
  ProductViewDetails: [AwsServiceCatalogS1s]
  NextPageToken: String
}

input AwsServiceCatalogSearchProductsInput {
  AcceptLanguage: String
  Filters: JSON
  PageSize: Int
  SortBy: String
  SortOrder: String
  PageToken: String
}

type AwsServiceCatalogSearchProductsOutput {
  ProductViewSummaries: [AwsServiceCatalogS1t]
  ProductViewAggregations: JSON
  NextPageToken: String
}

type AwsServiceCatalogSv {
  ConstraintId: String
  Type: String
  Description: String
  Owner: String
}

input AwsServiceCatalogTerminateProvisionedProductInput {
  ProvisionedProductName: String
  ProvisionedProductId: String
  TerminateToken: String!
  IgnoreErrors: Boolean
  AcceptLanguage: String
}

type AwsServiceCatalogTerminateProvisionedProductOutput {
  RecordDetail: AwsServiceCatalogS41
}

input AwsServiceCatalogUpdateConstraintInput {
  AcceptLanguage: String
  Id: String!
  Description: String
}

type AwsServiceCatalogUpdateConstraintOutput {
  ConstraintDetail: AwsServiceCatalogSv
  ConstraintParameters: String
  Status: String
}

input AwsServiceCatalogUpdatePortfolioInput {
  AcceptLanguage: String
  Id: String!
  DisplayName: String
  Description: String
  ProviderName: String
  AddTags: [AwsServiceCatalogS13Input]
  RemoveTags: [String]
}

type AwsServiceCatalogUpdatePortfolioOutput {
  PortfolioDetail: AwsServiceCatalogS17
  Tags: [AwsServiceCatalogS13]
}

input AwsServiceCatalogUpdateProductInput {
  AcceptLanguage: String
  Id: String!
  Name: String
  Owner: String
  Description: String
  Distributor: String
  SupportDescription: String
  SupportEmail: String
  SupportUrl: String
  AddTags: [AwsServiceCatalogS13Input]
  RemoveTags: [String]
}

type AwsServiceCatalogUpdateProductOutput {
  ProductViewDetail: AwsServiceCatalogS1s
  Tags: [AwsServiceCatalogS13]
}

input AwsServiceCatalogUpdateProvisionedProductInput {
  AcceptLanguage: String
  ProvisionedProductName: String
  ProvisionedProductId: String
  ProductId: String
  ProvisioningArtifactId: String
  PathId: String
  ProvisioningParameters: [AwsServiceCatalogUpdateProvisionedProductProvisioningParametersInput]
  UpdateToken: String!
}

type AwsServiceCatalogUpdateProvisionedProductOutput {
  RecordDetail: AwsServiceCatalogS41
}

input AwsServiceCatalogUpdateProvisionedProductProvisioningParametersInput {
  Key: String
  Value: String
  UsePreviousValue: Boolean
}

input AwsServiceCatalogUpdateProvisioningArtifactInput {
  AcceptLanguage: String
  ProductId: String!
  ProvisioningArtifactId: String!
  Name: String
  Description: String
}

type AwsServiceCatalogUpdateProvisioningArtifactOutput {
  ProvisioningArtifactDetail: AwsServiceCatalogS1x
  Info: JSON
  Status: String
}

input AwsServiceCatalogUpdateTagOptionInput {
  Id: String!
  Value: String
  Active: Boolean
}

type AwsServiceCatalogUpdateTagOptionOutput {
  TagOptionDetail: AwsServiceCatalogS24
}

# Amazon Simple Email Service (2010-12-01)
type AwsSES {
  cloneReceiptRuleSet(input: AwsSESCloneReceiptRuleSetInput!, config: AwsConfig): JSON
  createConfigurationSet(input: AwsSESCreateConfigurationSetInput!, config: AwsConfig): JSON
  createConfigurationSetEventDestination(input: AwsSESCreateConfigurationSetEventDestinationInput!, config: AwsConfig): JSON
  createConfigurationSetTrackingOptions(input: AwsSESCreateConfigurationSetTrackingOptionsInput!, config: AwsConfig): JSON
  createReceiptFilter(input: AwsSESCreateReceiptFilterInput!, config: AwsConfig): JSON
  createReceiptRule(input: AwsSESCreateReceiptRuleInput!, config: AwsConfig): JSON
  createReceiptRuleSet(input: AwsSESCreateReceiptRuleSetInput!, config: AwsConfig): JSON
  createTemplate(input: AwsSESCreateTemplateInput!, config: AwsConfig): JSON
  deleteConfigurationSet(input: AwsSESDeleteConfigurationSetInput!, config: AwsConfig): JSON
  deleteConfigurationSetEventDestination(input: AwsSESDeleteConfigurationSetEventDestinationInput!, config: AwsConfig): JSON
  deleteConfigurationSetTrackingOptions(input: AwsSESDeleteConfigurationSetTrackingOptionsInput!, config: AwsConfig): JSON
  deleteIdentity(input: AwsSESDeleteIdentityInput!, config: AwsConfig): JSON
  deleteIdentityPolicy(input: AwsSESDeleteIdentityPolicyInput!, config: AwsConfig): JSON
  deleteReceiptFilter(input: AwsSESDeleteReceiptFilterInput!, config: AwsConfig): JSON
  deleteReceiptRule(input: AwsSESDeleteReceiptRuleInput!, config: AwsConfig): JSON
  deleteReceiptRuleSet(input: AwsSESDeleteReceiptRuleSetInput!, config: AwsConfig): JSON
  deleteTemplate(input: AwsSESDeleteTemplateInput!, config: AwsConfig): JSON
  deleteVerifiedEmailAddress(input: AwsSESDeleteVerifiedEmailAddressInput!, config: AwsConfig): JSON
  describeActiveReceiptRuleSet(input: JSON, config: AwsConfig): AwsSESDescribeActiveReceiptRuleSetOutput
  describeConfigurationSet(input: AwsSESDescribeConfigurationSetInput!, config: AwsConfig): AwsSESDescribeConfigurationSetOutput
  describeReceiptRule(input: AwsSESDescribeReceiptRuleInput!, config: AwsConfig): AwsSESDescribeReceiptRuleOutput
  describeReceiptRuleSet(input: AwsSESDescribeReceiptRuleSetInput!, config: AwsConfig): AwsSESDescribeReceiptRuleSetOutput
  getAccountSendingEnabled(config: AwsConfig): AwsSESGetAccountSendingEnabledOutput
  getIdentityDkimAttributes(input: AwsSESGetIdentityDkimAttributesInput!, config: AwsConfig): AwsSESGetIdentityDkimAttributesOutput
  getIdentityMailFromDomainAttributes(input: AwsSESGetIdentityMailFromDomainAttributesInput!, config: AwsConfig): AwsSESGetIdentityMailFromDomainAttributesOutput
  getIdentityNotificationAttributes(input: AwsSESGetIdentityNotificationAttributesInput!, config: AwsConfig): AwsSESGetIdentityNotificationAttributesOutput
  getIdentityPolicies(input: AwsSESGetIdentityPoliciesInput!, config: AwsConfig): AwsSESGetIdentityPoliciesOutput
  getIdentityVerificationAttributes(input: AwsSESGetIdentityVerificationAttributesInput!, config: AwsConfig): AwsSESGetIdentityVerificationAttributesOutput
  getSendQuota(config: AwsConfig): AwsSESGetSendQuotaOutput
  getSendStatistics(config: AwsConfig): AwsSESGetSendStatisticsOutput
  getTemplate(input: AwsSESGetTemplateInput!, config: AwsConfig): AwsSESGetTemplateOutput
  listConfigurationSets(input: AwsSESListConfigurationSetsInput, config: AwsConfig): AwsSESListConfigurationSetsOutput
  listIdentities(input: AwsSESListIdentitiesInput, config: AwsConfig): AwsSESListIdentitiesOutput
  listIdentityPolicies(input: AwsSESListIdentityPoliciesInput!, config: AwsConfig): AwsSESListIdentityPoliciesOutput
  listReceiptFilters(input: JSON, config: AwsConfig): AwsSESListReceiptFiltersOutput
  listReceiptRuleSets(input: AwsSESListReceiptRuleSetsInput, config: AwsConfig): AwsSESListReceiptRuleSetsOutput
  listTemplates(input: AwsSESListTemplatesInput, config: AwsConfig): AwsSESListTemplatesOutput
  listVerifiedEmailAddresses(config: AwsConfig): AwsSESListVerifiedEmailAddressesOutput
  putIdentityPolicy(input: AwsSESPutIdentityPolicyInput!, config: AwsConfig): JSON
  reorderReceiptRuleSet(input: AwsSESReorderReceiptRuleSetInput!, config: AwsConfig): JSON
  sendBounce(input: AwsSESSendBounceInput!, config: AwsConfig): AwsSESSendBounceOutput
  sendBulkTemplatedEmail(input: AwsSESSendBulkTemplatedEmailInput!, config: AwsConfig): AwsSESSendBulkTemplatedEmailOutput
  sendEmail(input: AwsSESSendEmailInput!, config: AwsConfig): AwsSESSendEmailOutput
  sendRawEmail(input: AwsSESSendRawEmailInput!, config: AwsConfig): AwsSESSendRawEmailOutput
  sendTemplatedEmail(input: AwsSESSendTemplatedEmailInput!, config: AwsConfig): AwsSESSendTemplatedEmailOutput
  setActiveReceiptRuleSet(input: AwsSESSetActiveReceiptRuleSetInput, config: AwsConfig): JSON
  setIdentityDkimEnabled(input: AwsSESSetIdentityDkimEnabledInput!, config: AwsConfig): JSON
  setIdentityFeedbackForwardingEnabled(input: AwsSESSetIdentityFeedbackForwardingEnabledInput!, config: AwsConfig): JSON
  setIdentityHeadersInNotificationsEnabled(input: AwsSESSetIdentityHeadersInNotificationsEnabledInput!, config: AwsConfig): JSON
  setIdentityMailFromDomain(input: AwsSESSetIdentityMailFromDomainInput!, config: AwsConfig): JSON
  setIdentityNotificationTopic(input: AwsSESSetIdentityNotificationTopicInput!, config: AwsConfig): JSON
  setReceiptRulePosition(input: AwsSESSetReceiptRulePositionInput!, config: AwsConfig): JSON
  testRenderTemplate(input: AwsSESTestRenderTemplateInput!, config: AwsConfig): AwsSESTestRenderTemplateOutput
  updateAccountSendingEnabled(input: AwsSESUpdateAccountSendingEnabledInput, config: AwsConfig): JSON
  updateConfigurationSetEventDestination(input: AwsSESUpdateConfigurationSetEventDestinationInput!, config: AwsConfig): JSON
  updateConfigurationSetReputationMetricsEnabled(input: AwsSESUpdateConfigurationSetReputationMetricsEnabledInput!, config: AwsConfig): JSON
  updateConfigurationSetSendingEnabled(input: AwsSESUpdateConfigurationSetSendingEnabledInput!, config: AwsConfig): JSON
  updateConfigurationSetTrackingOptions(input: AwsSESUpdateConfigurationSetTrackingOptionsInput!, config: AwsConfig): JSON
  updateReceiptRule(input: AwsSESUpdateReceiptRuleInput!, config: AwsConfig): JSON
  updateTemplate(input: AwsSESUpdateTemplateInput!, config: AwsConfig): JSON
  verifyDomainDkim(input: AwsSESVerifyDomainDkimInput!, config: AwsConfig): AwsSESVerifyDomainDkimOutput
  verifyDomainIdentity(input: AwsSESVerifyDomainIdentityInput!, config: AwsConfig): AwsSESVerifyDomainIdentityOutput
  verifyEmailAddress(input: AwsSESVerifyEmailAddressInput!, config: AwsConfig): JSON
  verifyEmailIdentity(input: AwsSESVerifyEmailIdentityInput!, config: AwsConfig): JSON
}

input AwsSESCloneReceiptRuleSetInput {
  RuleSetName: String!
  OriginalRuleSetName: String!
}

input AwsSESCreateConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestination: AwsSESS9Input!
}

input AwsSESCreateConfigurationSetInput {
  ConfigurationSet: AwsSESS5Input!
}

input AwsSESCreateConfigurationSetTrackingOptionsInput {
  ConfigurationSetName: String!
  TrackingOptions: AwsSESSpInput!
}

input AwsSESCreateReceiptFilterInput {
  Filter: AwsSESStInput!
}

input AwsSESCreateReceiptRuleInput {
  RuleSetName: String!
  After: String
  Rule: AwsSESS11Input!
}

input AwsSESCreateReceiptRuleSetInput {
  RuleSetName: String!
}

input AwsSESCreateTemplateInput {
  Template: AwsSESS1tInput!
}

input AwsSESDeleteConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestinationName: String!
}

input AwsSESDeleteConfigurationSetInput {
  ConfigurationSetName: String!
}

input AwsSESDeleteConfigurationSetTrackingOptionsInput {
  ConfigurationSetName: String!
}

input AwsSESDeleteIdentityInput {
  Identity: String!
}

input AwsSESDeleteIdentityPolicyInput {
  Identity: String!
  PolicyName: String!
}

input AwsSESDeleteReceiptFilterInput {
  FilterName: String!
}

input AwsSESDeleteReceiptRuleInput {
  RuleSetName: String!
  RuleName: String!
}

input AwsSESDeleteReceiptRuleSetInput {
  RuleSetName: String!
}

input AwsSESDeleteTemplateInput {
  TemplateName: String!
}

input AwsSESDeleteVerifiedEmailAddressInput {
  EmailAddress: String!
}

type AwsSESDescribeActiveReceiptRuleSetOutput {
  Metadata: AwsSESS2m
  Rules: [AwsSESS11]
}

input AwsSESDescribeConfigurationSetInput {
  ConfigurationSetName: String!
  ConfigurationSetAttributeNames: [String]
}

type AwsSESDescribeConfigurationSetOutput {
  ConfigurationSet: AwsSESS5
  EventDestinations: [AwsSESS9]
  TrackingOptions: AwsSESSp
  ReputationOptions: AwsSESDescribeConfigurationSetOutputReputationOptions
}

type AwsSESDescribeConfigurationSetOutputReputationOptions {
  SendingEnabled: Boolean
  ReputationMetricsEnabled: Boolean
  LastFreshStart: Date
}

input AwsSESDescribeReceiptRuleInput {
  RuleSetName: String!
  RuleName: String!
}

type AwsSESDescribeReceiptRuleOutput {
  Rule: AwsSESS11
}

input AwsSESDescribeReceiptRuleSetInput {
  RuleSetName: String!
}

type AwsSESDescribeReceiptRuleSetOutput {
  Metadata: AwsSESS2m
  Rules: [AwsSESS11]
}

type AwsSESGetAccountSendingEnabledOutput {
  Enabled: Boolean
}

input AwsSESGetIdentityDkimAttributesInput {
  Identities: [String]!
}

type AwsSESGetIdentityDkimAttributesOutput {
  DkimAttributes: JSON!
}

input AwsSESGetIdentityMailFromDomainAttributesInput {
  Identities: [String]!
}

type AwsSESGetIdentityMailFromDomainAttributesOutput {
  MailFromDomainAttributes: JSON!
}

input AwsSESGetIdentityNotificationAttributesInput {
  Identities: [String]!
}

type AwsSESGetIdentityNotificationAttributesOutput {
  NotificationAttributes: JSON!
}

input AwsSESGetIdentityPoliciesInput {
  Identity: String!
  PolicyNames: [String]!
}

type AwsSESGetIdentityPoliciesOutput {
  Policies: JSON!
}

input AwsSESGetIdentityVerificationAttributesInput {
  Identities: [String]!
}

type AwsSESGetIdentityVerificationAttributesOutput {
  VerificationAttributes: JSON!
}

type AwsSESGetSendQuotaOutput {
  Max24HourSend: JSON
  MaxSendRate: JSON
  SentLast24Hours: JSON
}

type AwsSESGetSendStatisticsOutput {
  SendDataPoints: [AwsSESGetSendStatisticsOutputSendDataPoints]
}

type AwsSESGetSendStatisticsOutputSendDataPoints {
  Timestamp: Date
  DeliveryAttempts: JSON
  Bounces: JSON
  Complaints: JSON
  Rejects: JSON
}

input AwsSESGetTemplateInput {
  TemplateName: String!
}

type AwsSESGetTemplateOutput {
  Template: AwsSESS1t
}

input AwsSESListConfigurationSetsInput {
  NextToken: String
  MaxItems: Int
}

type AwsSESListConfigurationSetsOutput {
  ConfigurationSets: [AwsSESS5]
  NextToken: String
}

input AwsSESListIdentitiesInput {
  IdentityType: String
  NextToken: String
  MaxItems: Int
}

type AwsSESListIdentitiesOutput {
  Identities: [String]!
  NextToken: String
}

input AwsSESListIdentityPoliciesInput {
  Identity: String!
}

type AwsSESListIdentityPoliciesOutput {
  PolicyNames: [String]!
}

type AwsSESListReceiptFiltersOutput {
  Filters: [AwsSESSt]
}

input AwsSESListReceiptRuleSetsInput {
  NextToken: String
}

type AwsSESListReceiptRuleSetsOutput {
  RuleSets: [AwsSESS2m]
  NextToken: String
}

input AwsSESListTemplatesInput {
  NextToken: String
  MaxItems: Int
}

type AwsSESListTemplatesOutput {
  TemplatesMetadata: [AwsSESListTemplatesOutputTemplatesMetadata]
  NextToken: String
}

type AwsSESListTemplatesOutputTemplatesMetadata {
  Name: String
  CreatedTimestamp: Date
}

type AwsSESListVerifiedEmailAddressesOutput {
  VerifiedEmailAddresses: [String]
}

input AwsSESPutIdentityPolicyInput {
  Identity: String!
  PolicyName: String!
  Policy: String!
}

input AwsSESReorderReceiptRuleSetInput {
  RuleSetName: String!
  RuleNames: [String]!
}

type AwsSESS11 {
  Name: String!
  Enabled: Boolean
  TlsPolicy: String
  Recipients: [String]
  Actions: [AwsSESS11Actions]
  ScanEnabled: Boolean
}

type AwsSESS11Actions {
  S3Action: AwsSESS11ActionsS3Action
  BounceAction: AwsSESS11ActionsBounceAction
  WorkmailAction: AwsSESS11ActionsWorkmailAction
  LambdaAction: AwsSESS11ActionsLambdaAction
  StopAction: AwsSESS11ActionsStopAction
  AddHeaderAction: AwsSESS11ActionsAddHeaderAction
  SNSAction: AwsSESS11ActionsSNSAction
}

type AwsSESS11ActionsAddHeaderAction {
  HeaderName: String!
  HeaderValue: String!
}

input AwsSESS11ActionsAddHeaderActionInput {
  HeaderName: String!
  HeaderValue: String!
}

type AwsSESS11ActionsBounceAction {
  TopicArn: String
  SmtpReplyCode: String!
  StatusCode: String
  Message: String!
  Sender: String!
}

input AwsSESS11ActionsBounceActionInput {
  TopicArn: String
  SmtpReplyCode: String!
  StatusCode: String
  Message: String!
  Sender: String!
}

input AwsSESS11ActionsInput {
  S3Action: AwsSESS11ActionsS3ActionInput
  BounceAction: AwsSESS11ActionsBounceActionInput
  WorkmailAction: AwsSESS11ActionsWorkmailActionInput
  LambdaAction: AwsSESS11ActionsLambdaActionInput
  StopAction: AwsSESS11ActionsStopActionInput
  AddHeaderAction: AwsSESS11ActionsAddHeaderActionInput
  SNSAction: AwsSESS11ActionsSNSActionInput
}

type AwsSESS11ActionsLambdaAction {
  TopicArn: String
  FunctionArn: String!
  InvocationType: String
}

input AwsSESS11ActionsLambdaActionInput {
  TopicArn: String
  FunctionArn: String!
  InvocationType: String
}

type AwsSESS11ActionsS3Action {
  TopicArn: String
  BucketName: String!
  ObjectKeyPrefix: String
  KmsKeyArn: String
}

input AwsSESS11ActionsS3ActionInput {
  TopicArn: String
  BucketName: String!
  ObjectKeyPrefix: String
  KmsKeyArn: String
}

type AwsSESS11ActionsSNSAction {
  TopicArn: String!
  Encoding: String
}

input AwsSESS11ActionsSNSActionInput {
  TopicArn: String!
  Encoding: String
}

type AwsSESS11ActionsStopAction {
  Scope: String!
  TopicArn: String
}

input AwsSESS11ActionsStopActionInput {
  Scope: String!
  TopicArn: String
}

type AwsSESS11ActionsWorkmailAction {
  TopicArn: String
  OrganizationArn: String!
}

input AwsSESS11ActionsWorkmailActionInput {
  TopicArn: String
  OrganizationArn: String!
}

input AwsSESS11Input {
  Name: String!
  Enabled: Boolean
  TlsPolicy: String
  Recipients: [String]
  Actions: [AwsSESS11ActionsInput]
  ScanEnabled: Boolean
}

type AwsSESS1t {
  TemplateName: String!
  SubjectPart: String
  TextPart: String
  HtmlPart: String
}

input AwsSESS1tInput {
  TemplateName: String!
  SubjectPart: String
  TextPart: String
  HtmlPart: String
}

type AwsSESS2m {
  Name: String
  CreatedTimestamp: Date
}

type AwsSESS5 {
  Name: String!
}

input AwsSESS51Input {
  Name: String!
  Value: String!
}

input AwsSESS5gInput {
  Name: String!
  Value: String!
}

input AwsSESS5Input {
  Name: String!
}

input AwsSESS5nInput {
  ToAddresses: [String]
  CcAddresses: [String]
  BccAddresses: [String]
}

input AwsSESS5vInput {
  Data: String!
  Charset: String
}

type AwsSESS9 {
  Name: String!
  Enabled: Boolean
  MatchingEventTypes: [String]!
  KinesisFirehoseDestination: AwsSESS9KinesisFirehoseDestination
  CloudWatchDestination: AwsSESS9CloudWatchDestination
  SNSDestination: AwsSESS9SNSDestination
}

type AwsSESS9CloudWatchDestination {
  DimensionConfigurations: [AwsSESS9CloudWatchDestinationDimensionConfigurations]!
}

type AwsSESS9CloudWatchDestinationDimensionConfigurations {
  DimensionName: String!
  DimensionValueSource: String!
  DefaultDimensionValue: String!
}

input AwsSESS9CloudWatchDestinationDimensionConfigurationsInput {
  DimensionName: String!
  DimensionValueSource: String!
  DefaultDimensionValue: String!
}

input AwsSESS9CloudWatchDestinationInput {
  DimensionConfigurations: [AwsSESS9CloudWatchDestinationDimensionConfigurationsInput]!
}

input AwsSESS9Input {
  Name: String!
  Enabled: Boolean
  MatchingEventTypes: [String]!
  KinesisFirehoseDestination: AwsSESS9KinesisFirehoseDestinationInput
  CloudWatchDestination: AwsSESS9CloudWatchDestinationInput
  SNSDestination: AwsSESS9SNSDestinationInput
}

type AwsSESS9KinesisFirehoseDestination {
  IAMRoleARN: String!
  DeliveryStreamARN: String!
}

input AwsSESS9KinesisFirehoseDestinationInput {
  IAMRoleARN: String!
  DeliveryStreamARN: String!
}

type AwsSESS9SNSDestination {
  TopicARN: String!
}

input AwsSESS9SNSDestinationInput {
  TopicARN: String!
}

input AwsSESSendBounceBouncedRecipientInfoListInput {
  Recipient: String!
  RecipientArn: String
  BounceType: String
  RecipientDsnFields: AwsSESSendBounceBouncedRecipientInfoListRecipientDsnFieldsInput
}

input AwsSESSendBounceBouncedRecipientInfoListRecipientDsnFieldsInput {
  FinalRecipient: String
  Action: String!
  RemoteMta: String
  Status: String!
  DiagnosticCode: String
  LastAttemptDate: Date
  ExtensionFields: [AwsSESS51Input]
}

input AwsSESSendBounceInput {
  OriginalMessageId: String!
  BounceSender: String!
  Explanation: String
  MessageDsn: AwsSESSendBounceMessageDsnInput
  BouncedRecipientInfoList: [AwsSESSendBounceBouncedRecipientInfoListInput]!
  BounceSenderArn: String
}

input AwsSESSendBounceMessageDsnInput {
  ReportingMta: String!
  ArrivalDate: Date
  ExtensionFields: [AwsSESS51Input]
}

type AwsSESSendBounceOutput {
  MessageId: String
}

input AwsSESSendBulkTemplatedEmailDestinationsInput {
  Destination: AwsSESS5nInput!
  ReplacementTags: [AwsSESS5gInput]
  ReplacementTemplateData: String
}

input AwsSESSendBulkTemplatedEmailInput {
  Source: String!
  SourceArn: String
  ReplyToAddresses: [String]
  ReturnPath: String
  ReturnPathArn: String
  ConfigurationSetName: String
  DefaultTags: [AwsSESS5gInput]
  Template: String!
  TemplateArn: String
  DefaultTemplateData: String
  Destinations: [AwsSESSendBulkTemplatedEmailDestinationsInput]!
}

type AwsSESSendBulkTemplatedEmailOutput {
  Status: [AwsSESSendBulkTemplatedEmailOutputStatus]!
}

type AwsSESSendBulkTemplatedEmailOutputStatus {
  Status: String
  Error: String
  MessageId: String
}

input AwsSESSendEmailInput {
  Source: String!
  Destination: AwsSESS5nInput!
  Message: AwsSESSendEmailMessageInput!
  ReplyToAddresses: [String]
  ReturnPath: String
  SourceArn: String
  ReturnPathArn: String
  Tags: [AwsSESS5gInput]
  ConfigurationSetName: String
}

input AwsSESSendEmailMessageBodyInput {
  Text: AwsSESS5vInput
  Html: AwsSESS5vInput
}

input AwsSESSendEmailMessageInput {
  Subject: AwsSESS5vInput!
  Body: AwsSESSendEmailMessageBodyInput!
}

type AwsSESSendEmailOutput {
  MessageId: String!
}

input AwsSESSendRawEmailInput {
  Source: String
  Destinations: [String]
  RawMessage: AwsSESSendRawEmailRawMessageInput!
  FromArn: String
  SourceArn: String
  ReturnPathArn: String
  Tags: [AwsSESS5gInput]
  ConfigurationSetName: String
}

type AwsSESSendRawEmailOutput {
  MessageId: String!
}

input AwsSESSendRawEmailRawMessageInput {
  Data: JSON!
}

input AwsSESSendTemplatedEmailInput {
  Source: String!
  Destination: AwsSESS5nInput!
  ReplyToAddresses: [String]
  ReturnPath: String
  SourceArn: String
  ReturnPathArn: String
  Tags: [AwsSESS5gInput]
  ConfigurationSetName: String
  Template: String!
  TemplateArn: String
  TemplateData: String!
}

type AwsSESSendTemplatedEmailOutput {
  MessageId: String!
}

input AwsSESSetActiveReceiptRuleSetInput {
  RuleSetName: String
}

input AwsSESSetIdentityDkimEnabledInput {
  Identity: String!
  DkimEnabled: Boolean!
}

input AwsSESSetIdentityFeedbackForwardingEnabledInput {
  Identity: String!
  ForwardingEnabled: Boolean!
}

input AwsSESSetIdentityHeadersInNotificationsEnabledInput {
  Identity: String!
  NotificationType: String!
  Enabled: Boolean!
}

input AwsSESSetIdentityMailFromDomainInput {
  Identity: String!
  MailFromDomain: String
  BehaviorOnMXFailure: String
}

input AwsSESSetIdentityNotificationTopicInput {
  Identity: String!
  NotificationType: String!
  SnsTopic: String
}

input AwsSESSetReceiptRulePositionInput {
  RuleSetName: String!
  RuleName: String!
  After: String
}

type AwsSESSp {
  CustomRedirectDomain: String
}

input AwsSESSpInput {
  CustomRedirectDomain: String
}

type AwsSESSt {
  Name: String!
  IpFilter: AwsSESStIpFilter!
}

input AwsSESStInput {
  Name: String!
  IpFilter: AwsSESStIpFilterInput!
}

type AwsSESStIpFilter {
  Policy: String!
  Cidr: String!
}

input AwsSESStIpFilterInput {
  Policy: String!
  Cidr: String!
}

input AwsSESTestRenderTemplateInput {
  TemplateName: String!
  TemplateData: String!
}

type AwsSESTestRenderTemplateOutput {
  RenderedTemplate: String
}

input AwsSESUpdateAccountSendingEnabledInput {
  Enabled: Boolean
}

input AwsSESUpdateConfigurationSetEventDestinationInput {
  ConfigurationSetName: String!
  EventDestination: AwsSESS9Input!
}

input AwsSESUpdateConfigurationSetReputationMetricsEnabledInput {
  ConfigurationSetName: String!
  Enabled: Boolean!
}

input AwsSESUpdateConfigurationSetSendingEnabledInput {
  ConfigurationSetName: String!
  Enabled: Boolean!
}

input AwsSESUpdateConfigurationSetTrackingOptionsInput {
  ConfigurationSetName: String!
  TrackingOptions: AwsSESSpInput!
}

input AwsSESUpdateReceiptRuleInput {
  RuleSetName: String!
  Rule: AwsSESS11Input!
}

input AwsSESUpdateTemplateInput {
  Template: AwsSESS1tInput!
}

input AwsSESVerifyDomainDkimInput {
  Domain: String!
}

type AwsSESVerifyDomainDkimOutput {
  DkimTokens: [String]!
}

input AwsSESVerifyDomainIdentityInput {
  Domain: String!
}

type AwsSESVerifyDomainIdentityOutput {
  VerificationToken: String!
}

input AwsSESVerifyEmailAddressInput {
  EmailAddress: String!
}

input AwsSESVerifyEmailIdentityInput {
  EmailAddress: String!
}

# AWS Shield (2016-06-02)
type AwsShield {
  createProtection(input: AwsShieldCreateProtectionInput!, config: AwsConfig): AwsShieldCreateProtectionOutput
  createSubscription(input: JSON, config: AwsConfig): JSON
  deleteProtection(input: AwsShieldDeleteProtectionInput!, config: AwsConfig): JSON
  deleteSubscription(input: JSON, config: AwsConfig): JSON
  describeAttack(input: AwsShieldDescribeAttackInput!, config: AwsConfig): AwsShieldDescribeAttackOutput
  describeProtection(input: AwsShieldDescribeProtectionInput!, config: AwsConfig): AwsShieldDescribeProtectionOutput
  describeSubscription(input: JSON, config: AwsConfig): AwsShieldDescribeSubscriptionOutput
  getSubscriptionState(input: JSON, config: AwsConfig): AwsShieldGetSubscriptionStateOutput
  listAttacks(input: AwsShieldListAttacksInput, config: AwsConfig): AwsShieldListAttacksOutput
  listProtections(input: AwsShieldListProtectionsInput, config: AwsConfig): AwsShieldListProtectionsOutput
}

input AwsShieldCreateProtectionInput {
  Name: String!
  ResourceArn: String!
}

type AwsShieldCreateProtectionOutput {
  ProtectionId: String
}

input AwsShieldDeleteProtectionInput {
  ProtectionId: String!
}

input AwsShieldDescribeAttackInput {
  AttackId: String!
}

type AwsShieldDescribeAttackOutput {
  Attack: AwsShieldDescribeAttackOutputAttack
}

type AwsShieldDescribeAttackOutputAttack {
  AttackId: String
  ResourceArn: String
  SubResources: [AwsShieldDescribeAttackOutputAttackSubResources]
  StartTime: Date
  EndTime: Date
  AttackCounters: [AwsShieldSm]
  AttackProperties: [AwsShieldDescribeAttackOutputAttackAttackProperties]
  Mitigations: [AwsShieldDescribeAttackOutputAttackMitigations]
}

type AwsShieldDescribeAttackOutputAttackAttackProperties {
  AttackLayer: String
  AttackPropertyIdentifier: String
  TopContributors: [AwsShieldDescribeAttackOutputAttackAttackPropertiesTopContributors]
  Unit: String
  Total: JSON
}

type AwsShieldDescribeAttackOutputAttackAttackPropertiesTopContributors {
  Name: String
  Value: JSON
}

type AwsShieldDescribeAttackOutputAttackMitigations {
  MitigationName: String
}

type AwsShieldDescribeAttackOutputAttackSubResources {
  Type: String
  Id: String
  AttackVectors: [AwsShieldDescribeAttackOutputAttackSubResourcesAttackVectors]
  Counters: [AwsShieldSm]
}

type AwsShieldDescribeAttackOutputAttackSubResourcesAttackVectors {
  VectorType: String!
  VectorCounters: [AwsShieldSm]
}

input AwsShieldDescribeProtectionInput {
  ProtectionId: String!
}

type AwsShieldDescribeProtectionOutput {
  Protection: AwsShieldS13
}

type AwsShieldDescribeSubscriptionOutput {
  Subscription: AwsShieldDescribeSubscriptionOutputSubscription
}

type AwsShieldDescribeSubscriptionOutputSubscription {
  StartTime: Date
  TimeCommitmentInSeconds: JSON
}

type AwsShieldGetSubscriptionStateOutput {
  SubscriptionState: String!
}

input AwsShieldListAttacksInput {
  ResourceArns: [String]
  StartTime: AwsShieldS1eInput
  EndTime: AwsShieldS1eInput
  NextToken: String
  MaxResults: Int
}

type AwsShieldListAttacksOutput {
  AttackSummaries: [AwsShieldListAttacksOutputAttackSummaries]
  NextToken: String
}

type AwsShieldListAttacksOutputAttackSummaries {
  AttackId: String
  ResourceArn: String
  StartTime: Date
  EndTime: Date
  AttackVectors: [AwsShieldListAttacksOutputAttackSummariesAttackVectors]
}

type AwsShieldListAttacksOutputAttackSummariesAttackVectors {
  VectorType: String!
}

input AwsShieldListProtectionsInput {
  NextToken: String
  MaxResults: Int
}

type AwsShieldListProtectionsOutput {
  Protections: [AwsShieldS13]
  NextToken: String
}

type AwsShieldS13 {
  Id: String
  Name: String
  ResourceArn: String
}

input AwsShieldS1eInput {
  FromInclusive: Date
  ToExclusive: Date
}

type AwsShieldSm {
  Name: String
  Max: JSON
  Average: JSON
  Sum: JSON
  N: Int
  Unit: String
}

# Amazon SimpleDB (2009-04-15)
type AwsSimpleDB {
  batchDeleteAttributes(input: AwsSimpleDBBatchDeleteAttributesInput!, config: AwsConfig): JSON
  batchPutAttributes(input: AwsSimpleDBBatchPutAttributesInput!, config: AwsConfig): JSON
  createDomain(input: AwsSimpleDBCreateDomainInput!, config: AwsConfig): JSON
  deleteAttributes(input: AwsSimpleDBDeleteAttributesInput!, config: AwsConfig): JSON
  deleteDomain(input: AwsSimpleDBDeleteDomainInput!, config: AwsConfig): JSON
  domainMetadata(input: AwsSimpleDBDomainMetadataInput!, config: AwsConfig): AwsSimpleDBDomainMetadataOutput
  getAttributes(input: AwsSimpleDBGetAttributesInput!, config: AwsConfig): AwsSimpleDBGetAttributesOutput
  listDomains(input: AwsSimpleDBListDomainsInput, config: AwsConfig): AwsSimpleDBListDomainsOutput
  putAttributes(input: AwsSimpleDBPutAttributesInput!, config: AwsConfig): JSON
  select(input: AwsSimpleDBSelectInput!, config: AwsConfig): AwsSimpleDBSelectOutput
}

input AwsSimpleDBBatchDeleteAttributesInput {
  DomainName: String!
  Items: [AwsSimpleDBBatchDeleteAttributesItemsInput]!
}

input AwsSimpleDBBatchDeleteAttributesItemsInput {
  Name: String!
  Attributes: [AwsSimpleDBS5Input]
}

input AwsSimpleDBBatchPutAttributesInput {
  DomainName: String!
  Items: [AwsSimpleDBBatchPutAttributesItemsInput]!
}

input AwsSimpleDBBatchPutAttributesItemsInput {
  Name: String!
  Attributes: [AwsSimpleDBSaInput]!
}

input AwsSimpleDBCreateDomainInput {
  DomainName: String!
}

input AwsSimpleDBDeleteAttributesInput {
  DomainName: String!
  ItemName: String!
  Attributes: [AwsSimpleDBS5Input]
  Expected: AwsSimpleDBSfInput
}

input AwsSimpleDBDeleteDomainInput {
  DomainName: String!
}

input AwsSimpleDBDomainMetadataInput {
  DomainName: String!
}

type AwsSimpleDBDomainMetadataOutput {
  ItemCount: Int
  ItemNamesSizeBytes: JSON
  AttributeNameCount: Int
  AttributeNamesSizeBytes: JSON
  AttributeValueCount: Int
  AttributeValuesSizeBytes: JSON
  Timestamp: Int
}

input AwsSimpleDBGetAttributesInput {
  DomainName: String!
  ItemName: String!
  AttributeNames: [String]
  ConsistentRead: Boolean
}

type AwsSimpleDBGetAttributesOutput {
  Attributes: [AwsSimpleDBSo]
}

input AwsSimpleDBListDomainsInput {
  MaxNumberOfDomains: Int
  NextToken: String
}

type AwsSimpleDBListDomainsOutput {
  DomainNames: [String]
  NextToken: String
}

input AwsSimpleDBPutAttributesInput {
  DomainName: String!
  ItemName: String!
  Attributes: [AwsSimpleDBSaInput]!
  Expected: AwsSimpleDBSfInput
}

input AwsSimpleDBS5Input {
  Name: String!
  Value: String
}

input AwsSimpleDBSaInput {
  Name: String!
  Value: String!
  Replace: Boolean
}

input AwsSimpleDBSelectInput {
  SelectExpression: String!
  NextToken: String
  ConsistentRead: Boolean
}

type AwsSimpleDBSelectOutput {
  Items: [AwsSimpleDBSelectOutputItems]
  NextToken: String
}

type AwsSimpleDBSelectOutputItems {
  Name: String!
  AlternateNameEncoding: String
  Attributes: [AwsSimpleDBSo]!
}

input AwsSimpleDBSfInput {
  Name: String
  Value: String
  Exists: Boolean
}

type AwsSimpleDBSo {
  Name: String!
  AlternateNameEncoding: String
  Value: String!
  AlternateValueEncoding: String
}

# AWS Server Migration Service (2016-10-24)
type AwsSMS {
  createReplicationJob(input: AwsSMSCreateReplicationJobInput!, config: AwsConfig): AwsSMSCreateReplicationJobOutput
  deleteReplicationJob(input: AwsSMSDeleteReplicationJobInput!, config: AwsConfig): JSON
  deleteServerCatalog(input: JSON, config: AwsConfig): JSON
  disassociateConnector(input: AwsSMSDisassociateConnectorInput!, config: AwsConfig): JSON
  getConnectors(input: AwsSMSGetConnectorsInput, config: AwsConfig): AwsSMSGetConnectorsOutput
  getReplicationJobs(input: AwsSMSGetReplicationJobsInput, config: AwsConfig): AwsSMSGetReplicationJobsOutput
  getReplicationRuns(input: AwsSMSGetReplicationRunsInput!, config: AwsConfig): AwsSMSGetReplicationRunsOutput
  getServers(input: AwsSMSGetServersInput, config: AwsConfig): AwsSMSGetServersOutput
  importServerCatalog(input: JSON, config: AwsConfig): JSON
  startOnDemandReplicationRun(input: AwsSMSStartOnDemandReplicationRunInput!, config: AwsConfig): AwsSMSStartOnDemandReplicationRunOutput
  updateReplicationJob(input: AwsSMSUpdateReplicationJobInput!, config: AwsConfig): JSON
}

input AwsSMSCreateReplicationJobInput {
  serverId: String!
  seedReplicationTime: Date!
  frequency: Int!
  licenseType: String
  roleName: String
  description: String
}

type AwsSMSCreateReplicationJobOutput {
  replicationJobId: String
}

input AwsSMSDeleteReplicationJobInput {
  replicationJobId: String!
}

input AwsSMSDisassociateConnectorInput {
  connectorId: String!
}

input AwsSMSGetConnectorsInput {
  nextToken: String
  maxResults: Int
}

type AwsSMSGetConnectorsOutput {
  connectorList: [AwsSMSGetConnectorsOutputConnectorList]
  nextToken: String
}

type AwsSMSGetConnectorsOutputConnectorList {
  connectorId: String
  version: String
  status: String
  capabilityList: [String]
  vmManagerName: String
  vmManagerType: String
  vmManagerId: String
  ipAddress: String
  macAddress: String
  associatedOn: Date
}

input AwsSMSGetReplicationJobsInput {
  replicationJobId: String
  nextToken: String
  maxResults: Int
}

type AwsSMSGetReplicationJobsOutput {
  replicationJobList: [AwsSMSSz]
  nextToken: String
}

input AwsSMSGetReplicationRunsInput {
  replicationJobId: String!
  nextToken: String
  maxResults: Int
}

type AwsSMSGetReplicationRunsOutput {
  replicationJob: AwsSMSSz
  replicationRunList: [AwsSMSS19]
  nextToken: String
}

input AwsSMSGetServersInput {
  nextToken: String
  maxResults: Int
}

type AwsSMSGetServersOutput {
  lastModifiedOn: Date
  serverCatalogStatus: String
  serverList: [AwsSMSGetServersOutputServerList]
  nextToken: String
}

type AwsSMSGetServersOutputServerList {
  serverId: String
  serverType: String
  vmServer: AwsSMSS11
  replicationJobId: String
  replicationJobTerminated: Boolean
}

type AwsSMSS11 {
  vmServerAddress: AwsSMSS11VmServerAddress
  vmName: String
  vmManagerName: String
  vmManagerType: String
  vmPath: String
}

type AwsSMSS11VmServerAddress {
  vmManagerId: String
  vmId: String
}

type AwsSMSS19 {
  replicationRunId: String
  state: String
  type: String
  statusMessage: String
  amiId: String
  scheduledStartTime: Date
  completedTime: Date
  description: String
}

input AwsSMSStartOnDemandReplicationRunInput {
  replicationJobId: String!
  description: String
}

type AwsSMSStartOnDemandReplicationRunOutput {
  replicationRunId: String
}

type AwsSMSSz {
  replicationJobId: String
  serverId: String
  serverType: String
  vmServer: AwsSMSS11
  seedReplicationTime: Date
  frequency: Int
  nextReplicationRunStartTime: Date
  licenseType: String
  roleName: String
  latestAmiId: String
  state: String
  statusMessage: String
  description: String
  replicationRunList: [AwsSMSS19]
}

input AwsSMSUpdateReplicationJobInput {
  replicationJobId: String!
  frequency: Int
  nextReplicationRunStartTime: Date
  licenseType: String
  roleName: String
  description: String
}

# Amazon Import/Export Snowball (2016-06-30)
type AwsSnowball {
  cancelCluster(input: AwsSnowballCancelClusterInput!, config: AwsConfig): JSON
  cancelJob(input: AwsSnowballCancelJobInput!, config: AwsConfig): JSON
  createAddress(input: AwsSnowballCreateAddressInput!, config: AwsConfig): AwsSnowballCreateAddressOutput
  createCluster(input: AwsSnowballCreateClusterInput!, config: AwsConfig): AwsSnowballCreateClusterOutput
  createJob(input: AwsSnowballCreateJobInput, config: AwsConfig): AwsSnowballCreateJobOutput
  describeAddress(input: AwsSnowballDescribeAddressInput!, config: AwsConfig): AwsSnowballDescribeAddressOutput
  describeAddresses(input: AwsSnowballDescribeAddressesInput, config: AwsConfig): AwsSnowballDescribeAddressesOutput
  describeCluster(input: AwsSnowballDescribeClusterInput!, config: AwsConfig): AwsSnowballDescribeClusterOutput
  describeJob(input: AwsSnowballDescribeJobInput!, config: AwsConfig): AwsSnowballDescribeJobOutput
  getJobManifest(input: AwsSnowballGetJobManifestInput!, config: AwsConfig): AwsSnowballGetJobManifestOutput
  getJobUnlockCode(input: AwsSnowballGetJobUnlockCodeInput!, config: AwsConfig): AwsSnowballGetJobUnlockCodeOutput
  getSnowballUsage(input: JSON, config: AwsConfig): AwsSnowballGetSnowballUsageOutput
  listClusterJobs(input: AwsSnowballListClusterJobsInput!, config: AwsConfig): AwsSnowballListClusterJobsOutput
  listClusters(input: AwsSnowballListClustersInput, config: AwsConfig): AwsSnowballListClustersOutput
  listJobs(input: AwsSnowballListJobsInput, config: AwsConfig): AwsSnowballListJobsOutput
  updateCluster(input: AwsSnowballUpdateClusterInput!, config: AwsConfig): JSON
  updateJob(input: AwsSnowballUpdateJobInput!, config: AwsConfig): JSON
}

input AwsSnowballCancelClusterInput {
  ClusterId: String!
}

input AwsSnowballCancelJobInput {
  JobId: String!
}

input AwsSnowballCreateAddressInput {
  Address: AwsSnowballS8Input!
}

type AwsSnowballCreateAddressOutput {
  AddressId: String
}

input AwsSnowballCreateClusterInput {
  JobType: String!
  Resources: AwsSnowballSfInput!
  Description: String
  AddressId: String!
  KmsKeyARN: String
  RoleARN: String!
  SnowballType: String
  ShippingOption: String!
  Notification: AwsSnowballSsInput
  ForwardingAddressId: String
}

type AwsSnowballCreateClusterOutput {
  ClusterId: String
}

input AwsSnowballCreateJobInput {
  JobType: String
  Resources: AwsSnowballSfInput
  Description: String
  AddressId: String
  KmsKeyARN: String
  RoleARN: String
  SnowballCapacityPreference: String
  ShippingOption: String
  Notification: AwsSnowballSsInput
  ClusterId: String
  SnowballType: String
  ForwardingAddressId: String
}

type AwsSnowballCreateJobOutput {
  JobId: String
}

input AwsSnowballDescribeAddressesInput {
  MaxResults: Int
  NextToken: String
}

type AwsSnowballDescribeAddressesOutput {
  Addresses: [AwsSnowballS8]
  NextToken: String
}

input AwsSnowballDescribeAddressInput {
  AddressId: String!
}

type AwsSnowballDescribeAddressOutput {
  Address: AwsSnowballS8
}

input AwsSnowballDescribeClusterInput {
  ClusterId: String!
}

type AwsSnowballDescribeClusterOutput {
  ClusterMetadata: AwsSnowballDescribeClusterOutputClusterMetadata
}

type AwsSnowballDescribeClusterOutputClusterMetadata {
  ClusterId: String
  Description: String
  KmsKeyARN: String
  RoleARN: String
  ClusterState: String
  JobType: String
  SnowballType: String
  CreationDate: Date
  Resources: AwsSnowballSf
  AddressId: String
  ShippingOption: String
  Notification: AwsSnowballSs
  ForwardingAddressId: String
}

input AwsSnowballDescribeJobInput {
  JobId: String!
}

type AwsSnowballDescribeJobOutput {
  JobMetadata: AwsSnowballS1d
  SubJobMetadata: [AwsSnowballS1d]
}

input AwsSnowballGetJobManifestInput {
  JobId: String!
}

type AwsSnowballGetJobManifestOutput {
  ManifestURI: String
}

input AwsSnowballGetJobUnlockCodeInput {
  JobId: String!
}

type AwsSnowballGetJobUnlockCodeOutput {
  UnlockCode: String
}

type AwsSnowballGetSnowballUsageOutput {
  SnowballLimit: Int
  SnowballsInUse: Int
}

input AwsSnowballListClusterJobsInput {
  ClusterId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSnowballListClusterJobsOutput {
  JobListEntries: [AwsSnowballS1t]
  NextToken: String
}

input AwsSnowballListClustersInput {
  MaxResults: Int
  NextToken: String
}

type AwsSnowballListClustersOutput {
  ClusterListEntries: [AwsSnowballListClustersOutputClusterListEntries]
  NextToken: String
}

type AwsSnowballListClustersOutputClusterListEntries {
  ClusterId: String
  ClusterState: String
  CreationDate: Date
  Description: String
}

input AwsSnowballListJobsInput {
  MaxResults: Int
  NextToken: String
}

type AwsSnowballListJobsOutput {
  JobListEntries: [AwsSnowballS1t]
  NextToken: String
}

type AwsSnowballS1d {
  JobId: String
  JobState: String
  JobType: String
  SnowballType: String
  CreationDate: Date
  Resources: AwsSnowballSf
  Description: String
  KmsKeyARN: String
  RoleARN: String
  AddressId: String
  ShippingDetails: AwsSnowballS1dShippingDetails
  SnowballCapacityPreference: String
  Notification: AwsSnowballSs
  DataTransferProgress: AwsSnowballS1dDataTransferProgress
  JobLogInfo: AwsSnowballS1dJobLogInfo
  ClusterId: String
  ForwardingAddressId: String
}

type AwsSnowballS1dDataTransferProgress {
  BytesTransferred: JSON
  ObjectsTransferred: JSON
  TotalBytes: JSON
  TotalObjects: JSON
}

type AwsSnowballS1dJobLogInfo {
  JobCompletionReportURI: String
  JobSuccessLogURI: String
  JobFailureLogURI: String
}

type AwsSnowballS1dShippingDetails {
  ShippingOption: String
  InboundShipment: AwsSnowballS1f
  OutboundShipment: AwsSnowballS1f
}

type AwsSnowballS1f {
  Status: String
  TrackingNumber: String
}

type AwsSnowballS1t {
  JobId: String
  JobState: String
  IsMaster: Boolean
  JobType: String
  SnowballType: String
  CreationDate: Date
  Description: String
}

type AwsSnowballS8 {
  AddressId: String
  Name: String
  Company: String
  Street1: String
  Street2: String
  Street3: String
  City: String
  StateOrProvince: String
  PrefectureOrDistrict: String
  Landmark: String
  Country: String
  PostalCode: String
  PhoneNumber: String
  IsRestricted: Boolean
}

input AwsSnowballS8Input {
  AddressId: String
  Name: String
  Company: String
  Street1: String
  Street2: String
  Street3: String
  City: String
  StateOrProvince: String
  PrefectureOrDistrict: String
  Landmark: String
  Country: String
  PostalCode: String
  PhoneNumber: String
  IsRestricted: Boolean
}

type AwsSnowballSf {
  S3Resources: [AwsSnowballSfS3Resources]
  LambdaResources: [AwsSnowballSfLambdaResources]
}

input AwsSnowballSfInput {
  S3Resources: [AwsSnowballSfS3ResourcesInput]
  LambdaResources: [AwsSnowballSfLambdaResourcesInput]
}

type AwsSnowballSfLambdaResources {
  LambdaArn: String
  EventTriggers: [AwsSnowballSfLambdaResourcesEventTriggers]
}

type AwsSnowballSfLambdaResourcesEventTriggers {
  EventResourceARN: String
}

input AwsSnowballSfLambdaResourcesEventTriggersInput {
  EventResourceARN: String
}

input AwsSnowballSfLambdaResourcesInput {
  LambdaArn: String
  EventTriggers: [AwsSnowballSfLambdaResourcesEventTriggersInput]
}

type AwsSnowballSfS3Resources {
  BucketArn: String
  KeyRange: AwsSnowballSfS3ResourcesKeyRange
}

input AwsSnowballSfS3ResourcesInput {
  BucketArn: String
  KeyRange: AwsSnowballSfS3ResourcesKeyRangeInput
}

type AwsSnowballSfS3ResourcesKeyRange {
  BeginMarker: String
  EndMarker: String
}

input AwsSnowballSfS3ResourcesKeyRangeInput {
  BeginMarker: String
  EndMarker: String
}

type AwsSnowballSs {
  SnsTopicARN: String
  JobStatesToNotify: [String]
  NotifyAll: Boolean
}

input AwsSnowballSsInput {
  SnsTopicARN: String
  JobStatesToNotify: [String]
  NotifyAll: Boolean
}

input AwsSnowballUpdateClusterInput {
  ClusterId: String!
  RoleARN: String
  Description: String
  Resources: AwsSnowballSfInput
  AddressId: String
  ShippingOption: String
  Notification: AwsSnowballSsInput
  ForwardingAddressId: String
}

input AwsSnowballUpdateJobInput {
  JobId: String!
  RoleARN: String
  Notification: AwsSnowballSsInput
  Resources: AwsSnowballSfInput
  AddressId: String
  ShippingOption: String
  Description: String
  SnowballCapacityPreference: String
  ForwardingAddressId: String
}

# Amazon Simple Notification Service (2010-03-31)
type AwsSNS {
  addPermission(input: AwsSNSAddPermissionInput!, config: AwsConfig): JSON
  checkIfPhoneNumberIsOptedOut(input: AwsSNSCheckIfPhoneNumberIsOptedOutInput!, config: AwsConfig): AwsSNSCheckIfPhoneNumberIsOptedOutOutput
  confirmSubscription(input: AwsSNSConfirmSubscriptionInput!, config: AwsConfig): AwsSNSConfirmSubscriptionOutput
  createPlatformApplication(input: AwsSNSCreatePlatformApplicationInput!, config: AwsConfig): AwsSNSCreatePlatformApplicationOutput
  createPlatformEndpoint(input: AwsSNSCreatePlatformEndpointInput!, config: AwsConfig): AwsSNSCreatePlatformEndpointOutput
  createTopic(input: AwsSNSCreateTopicInput!, config: AwsConfig): AwsSNSCreateTopicOutput
  deleteEndpoint(input: AwsSNSDeleteEndpointInput!, config: AwsConfig): JSON
  deletePlatformApplication(input: AwsSNSDeletePlatformApplicationInput!, config: AwsConfig): JSON
  deleteTopic(input: AwsSNSDeleteTopicInput!, config: AwsConfig): JSON
  getEndpointAttributes(input: AwsSNSGetEndpointAttributesInput!, config: AwsConfig): AwsSNSGetEndpointAttributesOutput
  getPlatformApplicationAttributes(input: AwsSNSGetPlatformApplicationAttributesInput!, config: AwsConfig): AwsSNSGetPlatformApplicationAttributesOutput
  getSMSAttributes(input: AwsSNSGetSMSAttributesInput, config: AwsConfig): AwsSNSGetSMSAttributesOutput
  getSubscriptionAttributes(input: AwsSNSGetSubscriptionAttributesInput!, config: AwsConfig): AwsSNSGetSubscriptionAttributesOutput
  getTopicAttributes(input: AwsSNSGetTopicAttributesInput!, config: AwsConfig): AwsSNSGetTopicAttributesOutput
  listEndpointsByPlatformApplication(input: AwsSNSListEndpointsByPlatformApplicationInput!, config: AwsConfig): AwsSNSListEndpointsByPlatformApplicationOutput
  listPhoneNumbersOptedOut(input: AwsSNSListPhoneNumbersOptedOutInput, config: AwsConfig): AwsSNSListPhoneNumbersOptedOutOutput
  listPlatformApplications(input: AwsSNSListPlatformApplicationsInput, config: AwsConfig): AwsSNSListPlatformApplicationsOutput
  listSubscriptions(input: AwsSNSListSubscriptionsInput, config: AwsConfig): AwsSNSListSubscriptionsOutput
  listSubscriptionsByTopic(input: AwsSNSListSubscriptionsByTopicInput!, config: AwsConfig): AwsSNSListSubscriptionsByTopicOutput
  listTopics(input: AwsSNSListTopicsInput, config: AwsConfig): AwsSNSListTopicsOutput
  optInPhoneNumber(input: AwsSNSOptInPhoneNumberInput!, config: AwsConfig): JSON
  publish(input: AwsSNSPublishInput!, config: AwsConfig): AwsSNSPublishOutput
  removePermission(input: AwsSNSRemovePermissionInput!, config: AwsConfig): JSON
  setEndpointAttributes(input: AwsSNSSetEndpointAttributesInput!, config: AwsConfig): JSON
  setPlatformApplicationAttributes(input: AwsSNSSetPlatformApplicationAttributesInput!, config: AwsConfig): JSON
  setSMSAttributes(input: AwsSNSSetSMSAttributesInput!, config: AwsConfig): JSON
  setSubscriptionAttributes(input: AwsSNSSetSubscriptionAttributesInput!, config: AwsConfig): JSON
  setTopicAttributes(input: AwsSNSSetTopicAttributesInput!, config: AwsConfig): JSON
  subscribe(input: AwsSNSSubscribeInput!, config: AwsConfig): AwsSNSSubscribeOutput
  unsubscribe(input: AwsSNSUnsubscribeInput!, config: AwsConfig): JSON
}

input AwsSNSAddPermissionInput {
  TopicArn: String!
  Label: String!
  AWSAccountId: [String]!
  ActionName: [String]!
}

input AwsSNSCheckIfPhoneNumberIsOptedOutInput {
  phoneNumber: String!
}

type AwsSNSCheckIfPhoneNumberIsOptedOutOutput {
  isOptedOut: Boolean
}

input AwsSNSConfirmSubscriptionInput {
  TopicArn: String!
  Token: String!
  AuthenticateOnUnsubscribe: String
}

type AwsSNSConfirmSubscriptionOutput {
  SubscriptionArn: String
}

input AwsSNSCreatePlatformApplicationInput {
  Name: String!
  Platform: String!
  Attributes: JSON!
}

type AwsSNSCreatePlatformApplicationOutput {
  PlatformApplicationArn: String
}

input AwsSNSCreatePlatformEndpointInput {
  PlatformApplicationArn: String!
  Token: String!
  CustomUserData: String
  Attributes: JSON
}

type AwsSNSCreatePlatformEndpointOutput {
  EndpointArn: String
}

input AwsSNSCreateTopicInput {
  Name: String!
}

type AwsSNSCreateTopicOutput {
  TopicArn: String
}

input AwsSNSDeleteEndpointInput {
  EndpointArn: String!
}

input AwsSNSDeletePlatformApplicationInput {
  PlatformApplicationArn: String!
}

input AwsSNSDeleteTopicInput {
  TopicArn: String!
}

input AwsSNSGetEndpointAttributesInput {
  EndpointArn: String!
}

type AwsSNSGetEndpointAttributesOutput {
  Attributes: JSON
}

input AwsSNSGetPlatformApplicationAttributesInput {
  PlatformApplicationArn: String!
}

type AwsSNSGetPlatformApplicationAttributesOutput {
  Attributes: JSON
}

input AwsSNSGetSMSAttributesInput {
  attributes: [String]
}

type AwsSNSGetSMSAttributesOutput {
  attributes: JSON
}

input AwsSNSGetSubscriptionAttributesInput {
  SubscriptionArn: String!
}

type AwsSNSGetSubscriptionAttributesOutput {
  Attributes: JSON
}

input AwsSNSGetTopicAttributesInput {
  TopicArn: String!
}

type AwsSNSGetTopicAttributesOutput {
  Attributes: JSON
}

input AwsSNSListEndpointsByPlatformApplicationInput {
  PlatformApplicationArn: String!
  NextToken: String
}

type AwsSNSListEndpointsByPlatformApplicationOutput {
  Endpoints: [AwsSNSListEndpointsByPlatformApplicationOutputEndpoints]
  NextToken: String
}

type AwsSNSListEndpointsByPlatformApplicationOutputEndpoints {
  EndpointArn: String
  Attributes: JSON
}

input AwsSNSListPhoneNumbersOptedOutInput {
  nextToken: String
}

type AwsSNSListPhoneNumbersOptedOutOutput {
  phoneNumbers: [String]
  nextToken: String
}

input AwsSNSListPlatformApplicationsInput {
  NextToken: String
}

type AwsSNSListPlatformApplicationsOutput {
  PlatformApplications: [AwsSNSListPlatformApplicationsOutputPlatformApplications]
  NextToken: String
}

type AwsSNSListPlatformApplicationsOutputPlatformApplications {
  PlatformApplicationArn: String
  Attributes: JSON
}

input AwsSNSListSubscriptionsByTopicInput {
  TopicArn: String!
  NextToken: String
}

type AwsSNSListSubscriptionsByTopicOutput {
  Subscriptions: [AwsSNSS1n]
  NextToken: String
}

input AwsSNSListSubscriptionsInput {
  NextToken: String
}

type AwsSNSListSubscriptionsOutput {
  Subscriptions: [AwsSNSS1n]
  NextToken: String
}

input AwsSNSListTopicsInput {
  NextToken: String
}

type AwsSNSListTopicsOutput {
  Topics: [AwsSNSListTopicsOutputTopics]
  NextToken: String
}

type AwsSNSListTopicsOutputTopics {
  TopicArn: String
}

input AwsSNSOptInPhoneNumberInput {
  phoneNumber: String!
}

input AwsSNSPublishInput {
  TopicArn: String
  TargetArn: String
  PhoneNumber: String
  Message: String!
  Subject: String
  MessageStructure: String
  MessageAttributes: JSON
}

type AwsSNSPublishOutput {
  MessageId: String
}

input AwsSNSRemovePermissionInput {
  TopicArn: String!
  Label: String!
}

type AwsSNSS1n {
  SubscriptionArn: String
  Owner: String
  Protocol: String
  Endpoint: String
  TopicArn: String
}

input AwsSNSSetEndpointAttributesInput {
  EndpointArn: String!
  Attributes: JSON!
}

input AwsSNSSetPlatformApplicationAttributesInput {
  PlatformApplicationArn: String!
  Attributes: JSON!
}

input AwsSNSSetSMSAttributesInput {
  attributes: JSON!
}

input AwsSNSSetSubscriptionAttributesInput {
  SubscriptionArn: String!
  AttributeName: String!
  AttributeValue: String
}

input AwsSNSSetTopicAttributesInput {
  TopicArn: String!
  AttributeName: String!
  AttributeValue: String
}

input AwsSNSSubscribeInput {
  TopicArn: String!
  Protocol: String!
  Endpoint: String
}

type AwsSNSSubscribeOutput {
  SubscriptionArn: String
}

input AwsSNSUnsubscribeInput {
  SubscriptionArn: String!
}

# Amazon Simple Queue Service (2012-11-05)
type AwsSQS {
  addPermission(input: AwsSQSAddPermissionInput!, config: AwsConfig): JSON
  changeMessageVisibility(input: AwsSQSChangeMessageVisibilityInput!, config: AwsConfig): JSON
  changeMessageVisibilityBatch(input: AwsSQSChangeMessageVisibilityBatchInput!, config: AwsConfig): AwsSQSChangeMessageVisibilityBatchOutput
  createQueue(input: AwsSQSCreateQueueInput!, config: AwsConfig): AwsSQSCreateQueueOutput
  deleteMessage(input: AwsSQSDeleteMessageInput!, config: AwsConfig): JSON
  deleteMessageBatch(input: AwsSQSDeleteMessageBatchInput!, config: AwsConfig): AwsSQSDeleteMessageBatchOutput
  deleteQueue(input: AwsSQSDeleteQueueInput!, config: AwsConfig): JSON
  getQueueAttributes(input: AwsSQSGetQueueAttributesInput!, config: AwsConfig): AwsSQSGetQueueAttributesOutput
  getQueueUrl(input: AwsSQSGetQueueUrlInput!, config: AwsConfig): AwsSQSGetQueueUrlOutput
  listDeadLetterSourceQueues(input: AwsSQSListDeadLetterSourceQueuesInput!, config: AwsConfig): AwsSQSListDeadLetterSourceQueuesOutput
  listQueueTags(input: AwsSQSListQueueTagsInput!, config: AwsConfig): AwsSQSListQueueTagsOutput
  listQueues(input: AwsSQSListQueuesInput, config: AwsConfig): AwsSQSListQueuesOutput
  purgeQueue(input: AwsSQSPurgeQueueInput!, config: AwsConfig): JSON
  receiveMessage(input: AwsSQSReceiveMessageInput!, config: AwsConfig): AwsSQSReceiveMessageOutput
  removePermission(input: AwsSQSRemovePermissionInput!, config: AwsConfig): JSON
  sendMessage(input: AwsSQSSendMessageInput!, config: AwsConfig): AwsSQSSendMessageOutput
  sendMessageBatch(input: AwsSQSSendMessageBatchInput!, config: AwsConfig): AwsSQSSendMessageBatchOutput
  setQueueAttributes(input: AwsSQSSetQueueAttributesInput!, config: AwsConfig): JSON
  tagQueue(input: AwsSQSTagQueueInput!, config: AwsConfig): JSON
  untagQueue(input: AwsSQSUntagQueueInput!, config: AwsConfig): JSON
}

input AwsSQSAddPermissionInput {
  QueueUrl: String!
  Label: String!
  AWSAccountIds: [String]!
  Actions: [String]!
}

input AwsSQSChangeMessageVisibilityBatchEntriesInput {
  Id: String!
  ReceiptHandle: String!
  VisibilityTimeout: Int
}

input AwsSQSChangeMessageVisibilityBatchInput {
  QueueUrl: String!
  Entries: [AwsSQSChangeMessageVisibilityBatchEntriesInput]!
}

type AwsSQSChangeMessageVisibilityBatchOutput {
  Successful: [AwsSQSChangeMessageVisibilityBatchOutputSuccessful]!
  Failed: [AwsSQSSd]!
}

type AwsSQSChangeMessageVisibilityBatchOutputSuccessful {
  Id: String!
}

input AwsSQSChangeMessageVisibilityInput {
  QueueUrl: String!
  ReceiptHandle: String!
  VisibilityTimeout: Int!
}

input AwsSQSCreateQueueInput {
  QueueName: String!
  Attributes: JSON
}

type AwsSQSCreateQueueOutput {
  QueueUrl: String
}

input AwsSQSDeleteMessageBatchEntriesInput {
  Id: String!
  ReceiptHandle: String!
}

input AwsSQSDeleteMessageBatchInput {
  QueueUrl: String!
  Entries: [AwsSQSDeleteMessageBatchEntriesInput]!
}

type AwsSQSDeleteMessageBatchOutput {
  Successful: [AwsSQSDeleteMessageBatchOutputSuccessful]!
  Failed: [AwsSQSSd]!
}

type AwsSQSDeleteMessageBatchOutputSuccessful {
  Id: String!
}

input AwsSQSDeleteMessageInput {
  QueueUrl: String!
  ReceiptHandle: String!
}

input AwsSQSDeleteQueueInput {
  QueueUrl: String!
}

input AwsSQSGetQueueAttributesInput {
  QueueUrl: String!
  AttributeNames: [String]
}

type AwsSQSGetQueueAttributesOutput {
  Attributes: JSON
}

input AwsSQSGetQueueUrlInput {
  QueueName: String!
  QueueOwnerAWSAccountId: String
}

type AwsSQSGetQueueUrlOutput {
  QueueUrl: String
}

input AwsSQSListDeadLetterSourceQueuesInput {
  QueueUrl: String!
}

type AwsSQSListDeadLetterSourceQueuesOutput {
  queueUrls: [String]!
}

input AwsSQSListQueuesInput {
  QueueNamePrefix: String
}

type AwsSQSListQueuesOutput {
  QueueUrls: [String]
}

input AwsSQSListQueueTagsInput {
  QueueUrl: String!
}

type AwsSQSListQueueTagsOutput {
  Tags: JSON
}

input AwsSQSPurgeQueueInput {
  QueueUrl: String!
}

input AwsSQSReceiveMessageInput {
  QueueUrl: String!
  AttributeNames: [String]
  MessageAttributeNames: [String]
  MaxNumberOfMessages: Int
  VisibilityTimeout: Int
  WaitTimeSeconds: Int
  ReceiveRequestAttemptId: String
}

type AwsSQSReceiveMessageOutput {
  Messages: [AwsSQSReceiveMessageOutputMessages]
}

type AwsSQSReceiveMessageOutputMessages {
  MessageId: String
  ReceiptHandle: String
  MD5OfBody: String
  Body: String
  Attributes: JSON
  MD5OfMessageAttributes: String
  MessageAttributes: JSON
}

input AwsSQSRemovePermissionInput {
  QueueUrl: String!
  Label: String!
}

type AwsSQSSd {
  Id: String!
  SenderFault: Boolean!
  Code: String!
  Message: String
}

input AwsSQSSendMessageBatchEntriesInput {
  Id: String!
  MessageBody: String!
  DelaySeconds: Int
  MessageAttributes: JSON
  MessageDeduplicationId: String
  MessageGroupId: String
}

input AwsSQSSendMessageBatchInput {
  QueueUrl: String!
  Entries: [AwsSQSSendMessageBatchEntriesInput]!
}

type AwsSQSSendMessageBatchOutput {
  Successful: [AwsSQSSendMessageBatchOutputSuccessful]!
  Failed: [AwsSQSSd]!
}

type AwsSQSSendMessageBatchOutputSuccessful {
  Id: String!
  MessageId: String!
  MD5OfMessageBody: String!
  MD5OfMessageAttributes: String
  SequenceNumber: String
}

input AwsSQSSendMessageInput {
  QueueUrl: String!
  MessageBody: String!
  DelaySeconds: Int
  MessageAttributes: JSON
  MessageDeduplicationId: String
  MessageGroupId: String
}

type AwsSQSSendMessageOutput {
  MD5OfMessageBody: String
  MD5OfMessageAttributes: String
  MessageId: String
  SequenceNumber: String
}

input AwsSQSSetQueueAttributesInput {
  QueueUrl: String!
  Attributes: JSON!
}

input AwsSQSTagQueueInput {
  QueueUrl: String!
  Tags: JSON!
}

input AwsSQSUntagQueueInput {
  QueueUrl: String!
  TagKeys: [String]!
}

# Amazon Simple Systems Manager (SSM) (2014-11-06)
type AwsSSM {
  addTagsToResource(input: AwsSSMAddTagsToResourceInput!, config: AwsConfig): JSON
  cancelCommand(input: AwsSSMCancelCommandInput!, config: AwsConfig): JSON
  createActivation(input: AwsSSMCreateActivationInput!, config: AwsConfig): AwsSSMCreateActivationOutput
  createAssociation(input: AwsSSMCreateAssociationInput!, config: AwsConfig): AwsSSMCreateAssociationOutput
  createAssociationBatch(input: AwsSSMCreateAssociationBatchInput!, config: AwsConfig): AwsSSMCreateAssociationBatchOutput
  createDocument(input: AwsSSMCreateDocumentInput!, config: AwsConfig): AwsSSMCreateDocumentOutput
  createMaintenanceWindow(input: AwsSSMCreateMaintenanceWindowInput!, config: AwsConfig): AwsSSMCreateMaintenanceWindowOutput
  createPatchBaseline(input: AwsSSMCreatePatchBaselineInput!, config: AwsConfig): AwsSSMCreatePatchBaselineOutput
  createResourceDataSync(input: AwsSSMCreateResourceDataSyncInput!, config: AwsConfig): JSON
  deleteActivation(input: AwsSSMDeleteActivationInput!, config: AwsConfig): JSON
  deleteAssociation(input: AwsSSMDeleteAssociationInput, config: AwsConfig): JSON
  deleteDocument(input: AwsSSMDeleteDocumentInput!, config: AwsConfig): JSON
  deleteMaintenanceWindow(input: AwsSSMDeleteMaintenanceWindowInput!, config: AwsConfig): AwsSSMDeleteMaintenanceWindowOutput
  deleteParameter(input: AwsSSMDeleteParameterInput!, config: AwsConfig): JSON
  deleteParameters(input: AwsSSMDeleteParametersInput!, config: AwsConfig): AwsSSMDeleteParametersOutput
  deletePatchBaseline(input: AwsSSMDeletePatchBaselineInput!, config: AwsConfig): AwsSSMDeletePatchBaselineOutput
  deleteResourceDataSync(input: AwsSSMDeleteResourceDataSyncInput!, config: AwsConfig): JSON
  deregisterManagedInstance(input: AwsSSMDeregisterManagedInstanceInput!, config: AwsConfig): JSON
  deregisterPatchBaselineForPatchGroup(input: AwsSSMDeregisterPatchBaselineForPatchGroupInput!, config: AwsConfig): AwsSSMDeregisterPatchBaselineForPatchGroupOutput
  deregisterTargetFromMaintenanceWindow(input: AwsSSMDeregisterTargetFromMaintenanceWindowInput!, config: AwsConfig): AwsSSMDeregisterTargetFromMaintenanceWindowOutput
  deregisterTaskFromMaintenanceWindow(input: AwsSSMDeregisterTaskFromMaintenanceWindowInput!, config: AwsConfig): AwsSSMDeregisterTaskFromMaintenanceWindowOutput
  describeActivations(input: AwsSSMDescribeActivationsInput, config: AwsConfig): AwsSSMDescribeActivationsOutput
  describeAssociation(input: AwsSSMDescribeAssociationInput, config: AwsConfig): AwsSSMDescribeAssociationOutput
  describeAutomationExecutions(input: AwsSSMDescribeAutomationExecutionsInput, config: AwsConfig): AwsSSMDescribeAutomationExecutionsOutput
  describeAutomationStepExecutions(input: AwsSSMDescribeAutomationStepExecutionsInput!, config: AwsConfig): AwsSSMDescribeAutomationStepExecutionsOutput
  describeAvailablePatches(input: AwsSSMDescribeAvailablePatchesInput, config: AwsConfig): AwsSSMDescribeAvailablePatchesOutput
  describeDocument(input: AwsSSMDescribeDocumentInput!, config: AwsConfig): AwsSSMDescribeDocumentOutput
  describeDocumentPermission(input: AwsSSMDescribeDocumentPermissionInput!, config: AwsConfig): AwsSSMDescribeDocumentPermissionOutput
  describeEffectiveInstanceAssociations(input: AwsSSMDescribeEffectiveInstanceAssociationsInput!, config: AwsConfig): AwsSSMDescribeEffectiveInstanceAssociationsOutput
  describeEffectivePatchesForPatchBaseline(input: AwsSSMDescribeEffectivePatchesForPatchBaselineInput!, config: AwsConfig): AwsSSMDescribeEffectivePatchesForPatchBaselineOutput
  describeInstanceAssociationsStatus(input: AwsSSMDescribeInstanceAssociationsStatusInput!, config: AwsConfig): AwsSSMDescribeInstanceAssociationsStatusOutput
  describeInstanceInformation(input: AwsSSMDescribeInstanceInformationInput, config: AwsConfig): AwsSSMDescribeInstanceInformationOutput
  describeInstancePatchStates(input: AwsSSMDescribeInstancePatchStatesInput!, config: AwsConfig): AwsSSMDescribeInstancePatchStatesOutput
  describeInstancePatchStatesForPatchGroup(input: AwsSSMDescribeInstancePatchStatesForPatchGroupInput!, config: AwsConfig): AwsSSMDescribeInstancePatchStatesForPatchGroupOutput
  describeInstancePatches(input: AwsSSMDescribeInstancePatchesInput!, config: AwsConfig): AwsSSMDescribeInstancePatchesOutput
  describeMaintenanceWindowExecutionTaskInvocations(input: AwsSSMDescribeMaintenanceWindowExecutionTaskInvocationsInput!, config: AwsConfig): AwsSSMDescribeMaintenanceWindowExecutionTaskInvocationsOutput
  describeMaintenanceWindowExecutionTasks(input: AwsSSMDescribeMaintenanceWindowExecutionTasksInput!, config: AwsConfig): AwsSSMDescribeMaintenanceWindowExecutionTasksOutput
  describeMaintenanceWindowExecutions(input: AwsSSMDescribeMaintenanceWindowExecutionsInput!, config: AwsConfig): AwsSSMDescribeMaintenanceWindowExecutionsOutput
  describeMaintenanceWindowTargets(input: AwsSSMDescribeMaintenanceWindowTargetsInput!, config: AwsConfig): AwsSSMDescribeMaintenanceWindowTargetsOutput
  describeMaintenanceWindowTasks(input: AwsSSMDescribeMaintenanceWindowTasksInput!, config: AwsConfig): AwsSSMDescribeMaintenanceWindowTasksOutput
  describeMaintenanceWindows(input: AwsSSMDescribeMaintenanceWindowsInput, config: AwsConfig): AwsSSMDescribeMaintenanceWindowsOutput
  describeParameters(input: AwsSSMDescribeParametersInput, config: AwsConfig): AwsSSMDescribeParametersOutput
  describePatchBaselines(input: AwsSSMDescribePatchBaselinesInput, config: AwsConfig): AwsSSMDescribePatchBaselinesOutput
  describePatchGroupState(input: AwsSSMDescribePatchGroupStateInput!, config: AwsConfig): AwsSSMDescribePatchGroupStateOutput
  describePatchGroups(input: AwsSSMDescribePatchGroupsInput, config: AwsConfig): AwsSSMDescribePatchGroupsOutput
  getAutomationExecution(input: AwsSSMGetAutomationExecutionInput!, config: AwsConfig): AwsSSMGetAutomationExecutionOutput
  getCommandInvocation(input: AwsSSMGetCommandInvocationInput!, config: AwsConfig): AwsSSMGetCommandInvocationOutput
  getDefaultPatchBaseline(input: AwsSSMGetDefaultPatchBaselineInput, config: AwsConfig): AwsSSMGetDefaultPatchBaselineOutput
  getDeployablePatchSnapshotForInstance(input: AwsSSMGetDeployablePatchSnapshotForInstanceInput!, config: AwsConfig): AwsSSMGetDeployablePatchSnapshotForInstanceOutput
  getDocument(input: AwsSSMGetDocumentInput!, config: AwsConfig): AwsSSMGetDocumentOutput
  getInventory(input: AwsSSMGetInventoryInput, config: AwsConfig): AwsSSMGetInventoryOutput
  getInventorySchema(input: AwsSSMGetInventorySchemaInput, config: AwsConfig): AwsSSMGetInventorySchemaOutput
  getMaintenanceWindow(input: AwsSSMGetMaintenanceWindowInput!, config: AwsConfig): AwsSSMGetMaintenanceWindowOutput
  getMaintenanceWindowExecution(input: AwsSSMGetMaintenanceWindowExecutionInput!, config: AwsConfig): AwsSSMGetMaintenanceWindowExecutionOutput
  getMaintenanceWindowExecutionTask(input: AwsSSMGetMaintenanceWindowExecutionTaskInput!, config: AwsConfig): AwsSSMGetMaintenanceWindowExecutionTaskOutput
  getMaintenanceWindowExecutionTaskInvocation(input: AwsSSMGetMaintenanceWindowExecutionTaskInvocationInput!, config: AwsConfig): AwsSSMGetMaintenanceWindowExecutionTaskInvocationOutput
  getMaintenanceWindowTask(input: AwsSSMGetMaintenanceWindowTaskInput!, config: AwsConfig): AwsSSMGetMaintenanceWindowTaskOutput
  getParameter(input: AwsSSMGetParameterInput!, config: AwsConfig): AwsSSMGetParameterOutput
  getParameterHistory(input: AwsSSMGetParameterHistoryInput!, config: AwsConfig): AwsSSMGetParameterHistoryOutput
  getParameters(input: AwsSSMGetParametersInput!, config: AwsConfig): AwsSSMGetParametersOutput
  getParametersByPath(input: AwsSSMGetParametersByPathInput!, config: AwsConfig): AwsSSMGetParametersByPathOutput
  getPatchBaseline(input: AwsSSMGetPatchBaselineInput!, config: AwsConfig): AwsSSMGetPatchBaselineOutput
  getPatchBaselineForPatchGroup(input: AwsSSMGetPatchBaselineForPatchGroupInput!, config: AwsConfig): AwsSSMGetPatchBaselineForPatchGroupOutput
  listAssociationVersions(input: AwsSSMListAssociationVersionsInput!, config: AwsConfig): AwsSSMListAssociationVersionsOutput
  listAssociations(input: AwsSSMListAssociationsInput, config: AwsConfig): AwsSSMListAssociationsOutput
  listCommandInvocations(input: AwsSSMListCommandInvocationsInput, config: AwsConfig): AwsSSMListCommandInvocationsOutput
  listCommands(input: AwsSSMListCommandsInput, config: AwsConfig): AwsSSMListCommandsOutput
  listComplianceItems(input: AwsSSMListComplianceItemsInput, config: AwsConfig): AwsSSMListComplianceItemsOutput
  listComplianceSummaries(input: AwsSSMListComplianceSummariesInput, config: AwsConfig): AwsSSMListComplianceSummariesOutput
  listDocumentVersions(input: AwsSSMListDocumentVersionsInput!, config: AwsConfig): AwsSSMListDocumentVersionsOutput
  listDocuments(input: AwsSSMListDocumentsInput, config: AwsConfig): AwsSSMListDocumentsOutput
  listInventoryEntries(input: AwsSSMListInventoryEntriesInput!, config: AwsConfig): AwsSSMListInventoryEntriesOutput
  listResourceComplianceSummaries(input: AwsSSMListResourceComplianceSummariesInput, config: AwsConfig): AwsSSMListResourceComplianceSummariesOutput
  listResourceDataSync(input: AwsSSMListResourceDataSyncInput, config: AwsConfig): AwsSSMListResourceDataSyncOutput
  listTagsForResource(input: AwsSSMListTagsForResourceInput!, config: AwsConfig): AwsSSMListTagsForResourceOutput
  modifyDocumentPermission(input: AwsSSMModifyDocumentPermissionInput!, config: AwsConfig): JSON
  putComplianceItems(input: AwsSSMPutComplianceItemsInput!, config: AwsConfig): JSON
  putInventory(input: AwsSSMPutInventoryInput!, config: AwsConfig): JSON
  putParameter(input: AwsSSMPutParameterInput!, config: AwsConfig): AwsSSMPutParameterOutput
  registerDefaultPatchBaseline(input: AwsSSMRegisterDefaultPatchBaselineInput!, config: AwsConfig): AwsSSMRegisterDefaultPatchBaselineOutput
  registerPatchBaselineForPatchGroup(input: AwsSSMRegisterPatchBaselineForPatchGroupInput!, config: AwsConfig): AwsSSMRegisterPatchBaselineForPatchGroupOutput
  registerTargetWithMaintenanceWindow(input: AwsSSMRegisterTargetWithMaintenanceWindowInput!, config: AwsConfig): AwsSSMRegisterTargetWithMaintenanceWindowOutput
  registerTaskWithMaintenanceWindow(input: AwsSSMRegisterTaskWithMaintenanceWindowInput!, config: AwsConfig): AwsSSMRegisterTaskWithMaintenanceWindowOutput
  removeTagsFromResource(input: AwsSSMRemoveTagsFromResourceInput!, config: AwsConfig): JSON
  sendAutomationSignal(input: AwsSSMSendAutomationSignalInput!, config: AwsConfig): JSON
  sendCommand(input: AwsSSMSendCommandInput!, config: AwsConfig): AwsSSMSendCommandOutput
  startAutomationExecution(input: AwsSSMStartAutomationExecutionInput!, config: AwsConfig): AwsSSMStartAutomationExecutionOutput
  stopAutomationExecution(input: AwsSSMStopAutomationExecutionInput!, config: AwsConfig): JSON
  updateAssociation(input: AwsSSMUpdateAssociationInput!, config: AwsConfig): AwsSSMUpdateAssociationOutput
  updateAssociationStatus(input: AwsSSMUpdateAssociationStatusInput!, config: AwsConfig): AwsSSMUpdateAssociationStatusOutput
  updateDocument(input: AwsSSMUpdateDocumentInput!, config: AwsConfig): AwsSSMUpdateDocumentOutput
  updateDocumentDefaultVersion(input: AwsSSMUpdateDocumentDefaultVersionInput!, config: AwsConfig): AwsSSMUpdateDocumentDefaultVersionOutput
  updateMaintenanceWindow(input: AwsSSMUpdateMaintenanceWindowInput!, config: AwsConfig): AwsSSMUpdateMaintenanceWindowOutput
  updateMaintenanceWindowTarget(input: AwsSSMUpdateMaintenanceWindowTargetInput!, config: AwsConfig): AwsSSMUpdateMaintenanceWindowTargetOutput
  updateMaintenanceWindowTask(input: AwsSSMUpdateMaintenanceWindowTaskInput!, config: AwsConfig): AwsSSMUpdateMaintenanceWindowTaskOutput
  updateManagedInstanceRole(input: AwsSSMUpdateManagedInstanceRoleInput!, config: AwsConfig): JSON
  updatePatchBaseline(input: AwsSSMUpdatePatchBaselineInput!, config: AwsConfig): AwsSSMUpdatePatchBaselineOutput
}

input AwsSSMAddTagsToResourceInput {
  ResourceType: String!
  ResourceId: String!
  Tags: [AwsSSMS4Input]!
}

input AwsSSMCancelCommandInput {
  CommandId: String!
  InstanceIds: [String]
}

input AwsSSMCreateActivationInput {
  Description: String
  DefaultInstanceName: String
  IamRole: String!
  RegistrationLimit: Int
  ExpirationDate: Date
}

type AwsSSMCreateActivationOutput {
  ActivationId: String
  ActivationCode: String
}

input AwsSSMCreateAssociationBatchInput {
  Entries: [AwsSSMS1lInput]!
}

type AwsSSMCreateAssociationBatchOutput {
  Successful: [AwsSSMS17]
  Failed: [AwsSSMCreateAssociationBatchOutputFailed]
}

type AwsSSMCreateAssociationBatchOutputFailed {
  Entry: AwsSSMS1l
  Message: String
  Fault: String
}

input AwsSSMCreateAssociationInput {
  Name: String!
  DocumentVersion: String
  InstanceId: String
  Parameters: JSON
  Targets: [AwsSSMSuInput]
  ScheduleExpression: String
  OutputLocation: AwsSSMS10Input
  AssociationName: String
}

type AwsSSMCreateAssociationOutput {
  AssociationDescription: AwsSSMS17
}

input AwsSSMCreateDocumentInput {
  Content: String!
  Name: String!
  DocumentType: String
  DocumentFormat: String
  TargetType: String
}

type AwsSSMCreateDocumentOutput {
  DocumentDescription: AwsSSMS1y
}

input AwsSSMCreateMaintenanceWindowInput {
  Name: String!
  Description: String
  Schedule: String!
  Duration: Int!
  Cutoff: Int!
  AllowUnassociatedTargets: Boolean!
  ClientToken: String
}

type AwsSSMCreateMaintenanceWindowOutput {
  WindowId: String
}

input AwsSSMCreatePatchBaselineInput {
  OperatingSystem: String
  Name: String!
  GlobalFilters: AwsSSMS2sInput
  ApprovalRules: AwsSSMS2yInput
  ApprovedPatches: [String]
  ApprovedPatchesComplianceLevel: String
  RejectedPatches: [String]
  Description: String
  ClientToken: String
}

type AwsSSMCreatePatchBaselineOutput {
  BaselineId: String
}

input AwsSSMCreateResourceDataSyncInput {
  SyncName: String!
  S3Destination: AwsSSMS3aInput!
}

input AwsSSMDeleteActivationInput {
  ActivationId: String!
}

input AwsSSMDeleteAssociationInput {
  Name: String
  InstanceId: String
  AssociationId: String
}

input AwsSSMDeleteDocumentInput {
  Name: String!
}

input AwsSSMDeleteMaintenanceWindowInput {
  WindowId: String!
}

type AwsSSMDeleteMaintenanceWindowOutput {
  WindowId: String
}

input AwsSSMDeleteParameterInput {
  Name: String!
}

input AwsSSMDeleteParametersInput {
  Names: [String]!
}

type AwsSSMDeleteParametersOutput {
  DeletedParameters: [String]
  InvalidParameters: [String]
}

input AwsSSMDeletePatchBaselineInput {
  BaselineId: String!
}

type AwsSSMDeletePatchBaselineOutput {
  BaselineId: String
}

input AwsSSMDeleteResourceDataSyncInput {
  SyncName: String!
}

input AwsSSMDeregisterManagedInstanceInput {
  InstanceId: String!
}

input AwsSSMDeregisterPatchBaselineForPatchGroupInput {
  BaselineId: String!
  PatchGroup: String!
}

type AwsSSMDeregisterPatchBaselineForPatchGroupOutput {
  BaselineId: String
  PatchGroup: String
}

input AwsSSMDeregisterTargetFromMaintenanceWindowInput {
  WindowId: String!
  WindowTargetId: String!
  Safe: Boolean
}

type AwsSSMDeregisterTargetFromMaintenanceWindowOutput {
  WindowId: String
  WindowTargetId: String
}

input AwsSSMDeregisterTaskFromMaintenanceWindowInput {
  WindowId: String!
  WindowTaskId: String!
}

type AwsSSMDeregisterTaskFromMaintenanceWindowOutput {
  WindowId: String
  WindowTaskId: String
}

input AwsSSMDescribeActivationsFiltersInput {
  FilterKey: String
  FilterValues: [String]
}

input AwsSSMDescribeActivationsInput {
  Filters: [AwsSSMDescribeActivationsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeActivationsOutput {
  ActivationList: [AwsSSMDescribeActivationsOutputActivationList]
  NextToken: String
}

type AwsSSMDescribeActivationsOutputActivationList {
  ActivationId: String
  Description: String
  DefaultInstanceName: String
  IamRole: String
  RegistrationLimit: Int
  RegistrationsCount: Int
  ExpirationDate: Date
  Expired: Boolean
  CreatedDate: Date
}

input AwsSSMDescribeAssociationInput {
  Name: String
  InstanceId: String
  AssociationId: String
  AssociationVersion: String
}

type AwsSSMDescribeAssociationOutput {
  AssociationDescription: AwsSSMS17
}

input AwsSSMDescribeAutomationExecutionsFiltersInput {
  Key: String!
  Values: [String]!
}

input AwsSSMDescribeAutomationExecutionsInput {
  Filters: [AwsSSMDescribeAutomationExecutionsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeAutomationExecutionsOutput {
  AutomationExecutionMetadataList: [AwsSSMDescribeAutomationExecutionsOutputAutomationExecutionMetadataList]
  NextToken: String
}

type AwsSSMDescribeAutomationExecutionsOutputAutomationExecutionMetadataList {
  AutomationExecutionId: String
  DocumentName: String
  DocumentVersion: String
  AutomationExecutionStatus: String
  ExecutionStartTime: Date
  ExecutionEndTime: Date
  ExecutedBy: String
  LogFile: String
  Outputs: JSON
  Mode: String
  ParentAutomationExecutionId: String
  CurrentStepName: String
  CurrentAction: String
  FailureMessage: String
  TargetParameterName: String
  Targets: [AwsSSMSu]
  ResolvedTargets: AwsSSMS57
  MaxConcurrency: String
  MaxErrors: String
  Target: String
}

input AwsSSMDescribeAutomationStepExecutionsFiltersInput {
  Key: String!
  Values: [String]!
}

input AwsSSMDescribeAutomationStepExecutionsInput {
  AutomationExecutionId: String!
  Filters: [AwsSSMDescribeAutomationStepExecutionsFiltersInput]
  NextToken: String
  MaxResults: Int
  ReverseOrder: Boolean
}

type AwsSSMDescribeAutomationStepExecutionsOutput {
  StepExecutions: [AwsSSMS5i]
  NextToken: String
}

input AwsSSMDescribeAvailablePatchesInput {
  Filters: [AwsSSMS5qInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeAvailablePatchesOutput {
  Patches: [AwsSSMS5y]
  NextToken: String
}

input AwsSSMDescribeDocumentInput {
  Name: String!
  DocumentVersion: String
}

type AwsSSMDescribeDocumentOutput {
  Document: AwsSSMS1y
}

input AwsSSMDescribeDocumentPermissionInput {
  Name: String!
  PermissionType: String!
}

type AwsSSMDescribeDocumentPermissionOutput {
  AccountIds: [String]
}

input AwsSSMDescribeEffectiveInstanceAssociationsInput {
  InstanceId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeEffectiveInstanceAssociationsOutput {
  Associations: [AwsSSMDescribeEffectiveInstanceAssociationsOutputAssociations]
  NextToken: String
}

type AwsSSMDescribeEffectiveInstanceAssociationsOutputAssociations {
  AssociationId: String
  InstanceId: String
  Content: String
  AssociationVersion: String
}

input AwsSSMDescribeEffectivePatchesForPatchBaselineInput {
  BaselineId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeEffectivePatchesForPatchBaselineOutput {
  EffectivePatches: [AwsSSMDescribeEffectivePatchesForPatchBaselineOutputEffectivePatches]
  NextToken: String
}

type AwsSSMDescribeEffectivePatchesForPatchBaselineOutputEffectivePatches {
  Patch: AwsSSMS5y
  PatchStatus: AwsSSMDescribeEffectivePatchesForPatchBaselineOutputEffectivePatchesPatchStatus
}

type AwsSSMDescribeEffectivePatchesForPatchBaselineOutputEffectivePatchesPatchStatus {
  DeploymentStatus: String
  ComplianceLevel: String
  ApprovalDate: Date
}

input AwsSSMDescribeInstanceAssociationsStatusInput {
  InstanceId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeInstanceAssociationsStatusOutput {
  InstanceAssociationStatusInfos: [AwsSSMDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfos]
  NextToken: String
}

type AwsSSMDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfos {
  AssociationId: String
  Name: String
  DocumentVersion: String
  AssociationVersion: String
  InstanceId: String
  ExecutionDate: Date
  Status: String
  DetailedStatus: String
  ExecutionSummary: String
  ErrorCode: String
  OutputUrl: AwsSSMDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfosOutputUrl
  AssociationName: String
}

type AwsSSMDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfosOutputUrl {
  S3OutputUrl: AwsSSMDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfosOutputUrlS3OutputUrl
}

type AwsSSMDescribeInstanceAssociationsStatusOutputInstanceAssociationStatusInfosOutputUrlS3OutputUrl {
  OutputUrl: String
}

input AwsSSMDescribeInstanceInformationFiltersInput {
  Key: String!
  Values: [String]!
}

input AwsSSMDescribeInstanceInformationInput {
  InstanceInformationFilterList: [AwsSSMDescribeInstanceInformationInstanceInformationFilterListInput]
  Filters: [AwsSSMDescribeInstanceInformationFiltersInput]
  MaxResults: Int
  NextToken: String
}

input AwsSSMDescribeInstanceInformationInstanceInformationFilterListInput {
  key: String!
  valueSet: [String]!
}

type AwsSSMDescribeInstanceInformationOutput {
  InstanceInformationList: [AwsSSMDescribeInstanceInformationOutputInstanceInformationList]
  NextToken: String
}

type AwsSSMDescribeInstanceInformationOutputInstanceInformationList {
  InstanceId: String
  PingStatus: String
  LastPingDateTime: Date
  AgentVersion: String
  IsLatestVersion: Boolean
  PlatformType: String
  PlatformName: String
  PlatformVersion: String
  ActivationId: String
  IamRole: String
  RegistrationDate: Date
  ResourceType: String
  Name: String
  IPAddress: String
  ComputerName: String
  AssociationStatus: String
  LastAssociationExecutionDate: Date
  LastSuccessfulAssociationExecutionDate: Date
  AssociationOverview: AwsSSMDescribeInstanceInformationOutputInstanceInformationListAssociationOverview
}

type AwsSSMDescribeInstanceInformationOutputInstanceInformationListAssociationOverview {
  DetailedStatus: String
  InstanceAssociationStatusAggregatedCount: JSON
}

input AwsSSMDescribeInstancePatchesInput {
  InstanceId: String!
  Filters: [AwsSSMS5qInput]
  NextToken: String
  MaxResults: Int
}

type AwsSSMDescribeInstancePatchesOutput {
  Patches: [AwsSSMDescribeInstancePatchesOutputPatches]
  NextToken: String
}

type AwsSSMDescribeInstancePatchesOutputPatches {
  Title: String!
  KBId: String!
  Classification: String!
  Severity: String!
  State: String!
  InstalledTime: Date!
}

input AwsSSMDescribeInstancePatchStatesForPatchGroupFiltersInput {
  Key: String!
  Values: [String]!
  Type: String!
}

input AwsSSMDescribeInstancePatchStatesForPatchGroupInput {
  PatchGroup: String!
  Filters: [AwsSSMDescribeInstancePatchStatesForPatchGroupFiltersInput]
  NextToken: String
  MaxResults: Int
}

type AwsSSMDescribeInstancePatchStatesForPatchGroupOutput {
  InstancePatchStates: [AwsSSMS7p]
  NextToken: String
}

input AwsSSMDescribeInstancePatchStatesInput {
  InstanceIds: [String]!
  NextToken: String
  MaxResults: Int
}

type AwsSSMDescribeInstancePatchStatesOutput {
  InstancePatchStates: [AwsSSMS7p]
  NextToken: String
}

input AwsSSMDescribeMaintenanceWindowExecutionsInput {
  WindowId: String!
  Filters: [AwsSSMS8gInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowExecutionsOutput {
  WindowExecutions: [AwsSSMDescribeMaintenanceWindowExecutionsOutputWindowExecutions]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowExecutionsOutputWindowExecutions {
  WindowId: String
  WindowExecutionId: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
}

input AwsSSMDescribeMaintenanceWindowExecutionTaskInvocationsInput {
  WindowExecutionId: String!
  TaskId: String!
  Filters: [AwsSSMS8gInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowExecutionTaskInvocationsOutput {
  WindowExecutionTaskInvocationIdentities: [AwsSSMDescribeMaintenanceWindowExecutionTaskInvocationsOutputWindowExecutionTaskInvocationIdentities]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowExecutionTaskInvocationsOutputWindowExecutionTaskInvocationIdentities {
  WindowExecutionId: String
  TaskExecutionId: String
  InvocationId: String
  ExecutionId: String
  TaskType: String
  Parameters: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
  OwnerInformation: String
  WindowTargetId: String
}

input AwsSSMDescribeMaintenanceWindowExecutionTasksInput {
  WindowExecutionId: String!
  Filters: [AwsSSMS8gInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowExecutionTasksOutput {
  WindowExecutionTaskIdentities: [AwsSSMDescribeMaintenanceWindowExecutionTasksOutputWindowExecutionTaskIdentities]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowExecutionTasksOutputWindowExecutionTaskIdentities {
  WindowExecutionId: String
  TaskExecutionId: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
  TaskArn: String
  TaskType: String
}

input AwsSSMDescribeMaintenanceWindowsInput {
  Filters: [AwsSSMS8gInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowsOutput {
  WindowIdentities: [AwsSSMDescribeMaintenanceWindowsOutputWindowIdentities]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowsOutputWindowIdentities {
  WindowId: String
  Name: String
  Description: String
  Enabled: Boolean
  Duration: Int
  Cutoff: Int
}

input AwsSSMDescribeMaintenanceWindowTargetsInput {
  WindowId: String!
  Filters: [AwsSSMS8gInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowTargetsOutput {
  Targets: [AwsSSMDescribeMaintenanceWindowTargetsOutputTargets]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowTargetsOutputTargets {
  WindowId: String
  WindowTargetId: String
  ResourceType: String
  Targets: [AwsSSMSu]
  OwnerInformation: String
  Name: String
  Description: String
}

input AwsSSMDescribeMaintenanceWindowTasksInput {
  WindowId: String!
  Filters: [AwsSSMS8gInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowTasksOutput {
  Tasks: [AwsSSMDescribeMaintenanceWindowTasksOutputTasks]
  NextToken: String
}

type AwsSSMDescribeMaintenanceWindowTasksOutputTasks {
  WindowId: String
  WindowTaskId: String
  TaskArn: String
  Type: String
  Targets: [AwsSSMSu]
  TaskParameters: JSON
  Priority: Int
  LoggingInfo: AwsSSMS9k
  ServiceRoleArn: String
  MaxConcurrency: String
  MaxErrors: String
  Name: String
  Description: String
}

input AwsSSMDescribeParametersFiltersInput {
  Key: String!
  Values: [String]!
}

input AwsSSMDescribeParametersInput {
  Filters: [AwsSSMDescribeParametersFiltersInput]
  ParameterFilters: [AwsSSMS9xInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribeParametersOutput {
  Parameters: [AwsSSMDescribeParametersOutputParameters]
  NextToken: String
}

type AwsSSMDescribeParametersOutputParameters {
  Name: String
  Type: String
  KeyId: String
  LastModifiedDate: Date
  LastModifiedUser: String
  Description: String
  AllowedPattern: String
  Version: JSON
}

input AwsSSMDescribePatchBaselinesInput {
  Filters: [AwsSSMS5qInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMDescribePatchBaselinesOutput {
  BaselineIdentities: [AwsSSMSae]
  NextToken: String
}

input AwsSSMDescribePatchGroupsInput {
  MaxResults: Int
  Filters: [AwsSSMS5qInput]
  NextToken: String
}

type AwsSSMDescribePatchGroupsOutput {
  Mappings: [AwsSSMDescribePatchGroupsOutputMappings]
  NextToken: String
}

type AwsSSMDescribePatchGroupsOutputMappings {
  PatchGroup: String
  BaselineIdentity: AwsSSMSae
}

input AwsSSMDescribePatchGroupStateInput {
  PatchGroup: String!
}

type AwsSSMDescribePatchGroupStateOutput {
  Instances: Int
  InstancesWithInstalledPatches: Int
  InstancesWithInstalledOtherPatches: Int
  InstancesWithMissingPatches: Int
  InstancesWithFailedPatches: Int
  InstancesWithNotApplicablePatches: Int
}

input AwsSSMGetAutomationExecutionInput {
  AutomationExecutionId: String!
}

type AwsSSMGetAutomationExecutionOutput {
  AutomationExecution: AwsSSMGetAutomationExecutionOutputAutomationExecution
}

type AwsSSMGetAutomationExecutionOutputAutomationExecution {
  AutomationExecutionId: String
  DocumentName: String
  DocumentVersion: String
  ExecutionStartTime: Date
  ExecutionEndTime: Date
  AutomationExecutionStatus: String
  StepExecutions: [AwsSSMS5i]
  StepExecutionsTruncated: Boolean
  Parameters: JSON
  Outputs: JSON
  FailureMessage: String
  Mode: String
  ParentAutomationExecutionId: String
  ExecutedBy: String
  CurrentStepName: String
  CurrentAction: String
  TargetParameterName: String
  Targets: [AwsSSMSu]
  ResolvedTargets: AwsSSMS57
  MaxConcurrency: String
  MaxErrors: String
  Target: String
}

input AwsSSMGetCommandInvocationInput {
  CommandId: String!
  InstanceId: String!
  PluginName: String
}

type AwsSSMGetCommandInvocationOutput {
  CommandId: String
  InstanceId: String
  Comment: String
  DocumentName: String
  PluginName: String
  ResponseCode: Int
  ExecutionStartDateTime: String
  ExecutionElapsedTime: String
  ExecutionEndDateTime: String
  Status: String
  StatusDetails: String
  StandardOutputContent: String
  StandardOutputUrl: String
  StandardErrorContent: String
  StandardErrorUrl: String
}

input AwsSSMGetDefaultPatchBaselineInput {
  OperatingSystem: String
}

type AwsSSMGetDefaultPatchBaselineOutput {
  BaselineId: String
  OperatingSystem: String
}

input AwsSSMGetDeployablePatchSnapshotForInstanceInput {
  InstanceId: String!
  SnapshotId: String!
}

type AwsSSMGetDeployablePatchSnapshotForInstanceOutput {
  InstanceId: String
  SnapshotId: String
  SnapshotDownloadUrl: String
  Product: String
}

input AwsSSMGetDocumentInput {
  Name: String!
  DocumentVersion: String
  DocumentFormat: String
}

type AwsSSMGetDocumentOutput {
  Name: String
  DocumentVersion: String
  Content: String
  DocumentType: String
  DocumentFormat: String
}

input AwsSSMGetInventoryInput {
  Filters: [AwsSSMSb8Input]
  Aggregators: [AwsSSMSbeInput]
  ResultAttributes: [AwsSSMGetInventoryResultAttributesInput]
  NextToken: String
  MaxResults: Int
}

type AwsSSMGetInventoryOutput {
  Entities: [AwsSSMGetInventoryOutputEntities]
  NextToken: String
}

type AwsSSMGetInventoryOutputEntities {
  Id: String
  Data: JSON
}

input AwsSSMGetInventoryResultAttributesInput {
  TypeName: String!
}

input AwsSSMGetInventorySchemaInput {
  TypeName: String
  NextToken: String
  MaxResults: Int
  Aggregator: Boolean
  SubType: Boolean
}

type AwsSSMGetInventorySchemaOutput {
  Schemas: [AwsSSMGetInventorySchemaOutputSchemas]
  NextToken: String
}

type AwsSSMGetInventorySchemaOutputSchemas {
  TypeName: String!
  Version: String
  Attributes: [AwsSSMGetInventorySchemaOutputSchemasAttributes]!
  DisplayName: String
}

type AwsSSMGetInventorySchemaOutputSchemasAttributes {
  Name: String!
  DataType: String!
}

input AwsSSMGetMaintenanceWindowExecutionInput {
  WindowExecutionId: String!
}

type AwsSSMGetMaintenanceWindowExecutionOutput {
  WindowExecutionId: String
  TaskIds: [String]
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
}

input AwsSSMGetMaintenanceWindowExecutionTaskInput {
  WindowExecutionId: String!
  TaskId: String!
}

input AwsSSMGetMaintenanceWindowExecutionTaskInvocationInput {
  WindowExecutionId: String!
  TaskId: String!
  InvocationId: String!
}

type AwsSSMGetMaintenanceWindowExecutionTaskInvocationOutput {
  WindowExecutionId: String
  TaskExecutionId: String
  InvocationId: String
  ExecutionId: String
  TaskType: String
  Parameters: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
  OwnerInformation: String
  WindowTargetId: String
}

type AwsSSMGetMaintenanceWindowExecutionTaskOutput {
  WindowExecutionId: String
  TaskExecutionId: String
  TaskArn: String
  ServiceRole: String
  Type: String
  TaskParameters: [JSON]
  Priority: Int
  MaxConcurrency: String
  MaxErrors: String
  Status: String
  StatusDetails: String
  StartTime: Date
  EndTime: Date
}

input AwsSSMGetMaintenanceWindowInput {
  WindowId: String!
}

type AwsSSMGetMaintenanceWindowOutput {
  WindowId: String
  Name: String
  Description: String
  Schedule: String
  Duration: Int
  Cutoff: Int
  AllowUnassociatedTargets: Boolean
  Enabled: Boolean
  CreatedDate: Date
  ModifiedDate: Date
}

input AwsSSMGetMaintenanceWindowTaskInput {
  WindowId: String!
  WindowTaskId: String!
}

type AwsSSMGetMaintenanceWindowTaskOutput {
  WindowId: String
  WindowTaskId: String
  Targets: [AwsSSMSu]
  TaskArn: String
  ServiceRoleArn: String
  TaskType: String
  TaskParameters: JSON
  TaskInvocationParameters: AwsSSMScn
  Priority: Int
  MaxConcurrency: String
  MaxErrors: String
  LoggingInfo: AwsSSMS9k
  Name: String
  Description: String
}

input AwsSSMGetParameterHistoryInput {
  Name: String!
  WithDecryption: Boolean
  MaxResults: Int
  NextToken: String
}

type AwsSSMGetParameterHistoryOutput {
  Parameters: [AwsSSMGetParameterHistoryOutputParameters]
  NextToken: String
}

type AwsSSMGetParameterHistoryOutputParameters {
  Name: String
  Type: String
  KeyId: String
  LastModifiedDate: Date
  LastModifiedUser: String
  Description: String
  Value: String
  AllowedPattern: String
  Version: JSON
}

input AwsSSMGetParameterInput {
  Name: String!
  WithDecryption: Boolean
}

type AwsSSMGetParameterOutput {
  Parameter: AwsSSMSd5
}

input AwsSSMGetParametersByPathInput {
  Path: String!
  Recursive: Boolean
  ParameterFilters: [AwsSSMS9xInput]
  WithDecryption: Boolean
  MaxResults: Int
  NextToken: String
}

type AwsSSMGetParametersByPathOutput {
  Parameters: [AwsSSMSd5]
  NextToken: String
}

input AwsSSMGetParametersInput {
  Names: [String]!
  WithDecryption: Boolean
}

type AwsSSMGetParametersOutput {
  Parameters: [AwsSSMSd5]
  InvalidParameters: [String]
}

input AwsSSMGetPatchBaselineForPatchGroupInput {
  PatchGroup: String!
  OperatingSystem: String
}

type AwsSSMGetPatchBaselineForPatchGroupOutput {
  BaselineId: String
  PatchGroup: String
  OperatingSystem: String
}

input AwsSSMGetPatchBaselineInput {
  BaselineId: String!
}

type AwsSSMGetPatchBaselineOutput {
  BaselineId: String
  Name: String
  OperatingSystem: String
  GlobalFilters: AwsSSMS2s
  ApprovalRules: AwsSSMS2y
  ApprovedPatches: [String]
  ApprovedPatchesComplianceLevel: String
  RejectedPatches: [String]
  PatchGroups: [String]
  CreatedDate: Date
  ModifiedDate: Date
  Description: String
}

input AwsSSMListAssociationsAssociationFilterListInput {
  key: String!
  value: String!
}

input AwsSSMListAssociationsInput {
  AssociationFilterList: [AwsSSMListAssociationsAssociationFilterListInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMListAssociationsOutput {
  Associations: [AwsSSMListAssociationsOutputAssociations]
  NextToken: String
}

type AwsSSMListAssociationsOutputAssociations {
  Name: String
  InstanceId: String
  AssociationId: String
  AssociationVersion: String
  DocumentVersion: String
  Targets: [AwsSSMSu]
  LastExecutionDate: Date
  Overview: AwsSSMS1e
  ScheduleExpression: String
  AssociationName: String
}

input AwsSSMListAssociationVersionsInput {
  AssociationId: String!
  MaxResults: Int
  NextToken: String
}

type AwsSSMListAssociationVersionsOutput {
  AssociationVersions: [AwsSSMListAssociationVersionsOutputAssociationVersions]
  NextToken: String
}

type AwsSSMListAssociationVersionsOutputAssociationVersions {
  AssociationId: String
  AssociationVersion: String
  CreatedDate: Date
  Name: String
  DocumentVersion: String
  Parameters: JSON
  Targets: [AwsSSMSu]
  ScheduleExpression: String
  OutputLocation: AwsSSMS10
  AssociationName: String
}

input AwsSSMListCommandInvocationsInput {
  CommandId: String
  InstanceId: String
  MaxResults: Int
  NextToken: String
  Filters: [AwsSSMSe0Input]
  Details: Boolean
}

type AwsSSMListCommandInvocationsOutput {
  CommandInvocations: [AwsSSMListCommandInvocationsOutputCommandInvocations]
  NextToken: String
}

type AwsSSMListCommandInvocationsOutputCommandInvocations {
  CommandId: String
  InstanceId: String
  InstanceName: String
  Comment: String
  DocumentName: String
  RequestedDateTime: Date
  Status: String
  StatusDetails: String
  TraceOutput: String
  StandardOutputUrl: String
  StandardErrorUrl: String
  CommandPlugins: [AwsSSMListCommandInvocationsOutputCommandInvocationsCommandPlugins]
  ServiceRole: String
  NotificationConfig: AwsSSMScp
}

type AwsSSMListCommandInvocationsOutputCommandInvocationsCommandPlugins {
  Name: String
  Status: String
  StatusDetails: String
  ResponseCode: Int
  ResponseStartDateTime: Date
  ResponseFinishDateTime: Date
  Output: String
  StandardOutputUrl: String
  StandardErrorUrl: String
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
}

input AwsSSMListCommandsInput {
  CommandId: String
  InstanceId: String
  MaxResults: Int
  NextToken: String
  Filters: [AwsSSMSe0Input]
}

type AwsSSMListCommandsOutput {
  Commands: [AwsSSMSeg]
  NextToken: String
}

input AwsSSMListComplianceItemsInput {
  Filters: [AwsSSMSemInput]
  ResourceIds: [String]
  ResourceTypes: [String]
  NextToken: String
  MaxResults: Int
}

type AwsSSMListComplianceItemsOutput {
  ComplianceItems: [AwsSSMListComplianceItemsOutputComplianceItems]
  NextToken: String
}

type AwsSSMListComplianceItemsOutputComplianceItems {
  ComplianceType: String
  ResourceType: String
  ResourceId: String
  Id: String
  Title: String
  Status: String
  Severity: String
  ExecutionSummary: AwsSSMSf4
  Details: JSON
}

input AwsSSMListComplianceSummariesInput {
  Filters: [AwsSSMSemInput]
  NextToken: String
  MaxResults: Int
}

type AwsSSMListComplianceSummariesOutput {
  ComplianceSummaryItems: [AwsSSMListComplianceSummariesOutputComplianceSummaryItems]
  NextToken: String
}

type AwsSSMListComplianceSummariesOutputComplianceSummaryItems {
  ComplianceType: String
  CompliantSummary: AwsSSMSfc
  NonCompliantSummary: AwsSSMSff
}

input AwsSSMListDocumentsDocumentFilterListInput {
  key: String!
  value: String!
}

input AwsSSMListDocumentsFiltersInput {
  Key: String
  Values: [String]
}

input AwsSSMListDocumentsInput {
  DocumentFilterList: [AwsSSMListDocumentsDocumentFilterListInput]
  Filters: [AwsSSMListDocumentsFiltersInput]
  MaxResults: Int
  NextToken: String
}

type AwsSSMListDocumentsOutput {
  DocumentIdentifiers: [AwsSSMListDocumentsOutputDocumentIdentifiers]
  NextToken: String
}

type AwsSSMListDocumentsOutputDocumentIdentifiers {
  Name: String
  Owner: String
  PlatformTypes: [String]
  DocumentVersion: String
  DocumentType: String
  SchemaVersion: String
  DocumentFormat: String
  TargetType: String
  Tags: [AwsSSMS4]
}

input AwsSSMListDocumentVersionsInput {
  Name: String!
  MaxResults: Int
  NextToken: String
}

type AwsSSMListDocumentVersionsOutput {
  DocumentVersions: [AwsSSMListDocumentVersionsOutputDocumentVersions]
  NextToken: String
}

type AwsSSMListDocumentVersionsOutputDocumentVersions {
  Name: String
  DocumentVersion: String
  CreatedDate: Date
  IsDefaultVersion: Boolean
  DocumentFormat: String
}

input AwsSSMListInventoryEntriesInput {
  InstanceId: String!
  TypeName: String!
  Filters: [AwsSSMSb8Input]
  NextToken: String
  MaxResults: Int
}

type AwsSSMListInventoryEntriesOutput {
  TypeName: String
  InstanceId: String
  SchemaVersion: String
  CaptureTime: String
  Entries: [JSON]
  NextToken: String
}

input AwsSSMListResourceComplianceSummariesInput {
  Filters: [AwsSSMSemInput]
  NextToken: String
  MaxResults: Int
}

type AwsSSMListResourceComplianceSummariesOutput {
  ResourceComplianceSummaryItems: [AwsSSMListResourceComplianceSummariesOutputResourceComplianceSummaryItems]
  NextToken: String
}

type AwsSSMListResourceComplianceSummariesOutputResourceComplianceSummaryItems {
  ComplianceType: String
  ResourceType: String
  ResourceId: String
  Status: String
  OverallSeverity: String
  ExecutionSummary: AwsSSMSf4
  CompliantSummary: AwsSSMSfc
  NonCompliantSummary: AwsSSMSff
}

input AwsSSMListResourceDataSyncInput {
  NextToken: String
  MaxResults: Int
}

type AwsSSMListResourceDataSyncOutput {
  ResourceDataSyncItems: [AwsSSMListResourceDataSyncOutputResourceDataSyncItems]
  NextToken: String
}

type AwsSSMListResourceDataSyncOutputResourceDataSyncItems {
  SyncName: String
  S3Destination: AwsSSMS3a
  LastSyncTime: Date
  LastSuccessfulSyncTime: Date
  LastStatus: String
  SyncCreatedTime: Date
}

input AwsSSMListTagsForResourceInput {
  ResourceType: String!
  ResourceId: String!
}

type AwsSSMListTagsForResourceOutput {
  TagList: [AwsSSMS4]
}

input AwsSSMModifyDocumentPermissionInput {
  Name: String!
  PermissionType: String!
  AccountIdsToAdd: [String]
  AccountIdsToRemove: [String]
}

input AwsSSMPutComplianceItemsInput {
  ResourceId: String!
  ResourceType: String!
  ComplianceType: String!
  ExecutionSummary: AwsSSMSf4Input!
  Items: [AwsSSMPutComplianceItemsItemsInput]!
  ItemContentHash: String
}

input AwsSSMPutComplianceItemsItemsInput {
  Id: String
  Title: String
  Severity: String!
  Status: String!
  Details: JSON
}

input AwsSSMPutInventoryInput {
  InstanceId: String!
  Items: [AwsSSMPutInventoryItemsInput]!
}

input AwsSSMPutInventoryItemsInput {
  TypeName: String!
  SchemaVersion: String!
  CaptureTime: String!
  ContentHash: String
  Content: [JSON]
  Context: JSON
}

input AwsSSMPutParameterInput {
  Name: String!
  Description: String
  Value: String!
  Type: String!
  KeyId: String
  Overwrite: Boolean
  AllowedPattern: String
}

type AwsSSMPutParameterOutput {
  Version: JSON
}

input AwsSSMRegisterDefaultPatchBaselineInput {
  BaselineId: String!
}

type AwsSSMRegisterDefaultPatchBaselineOutput {
  BaselineId: String
}

input AwsSSMRegisterPatchBaselineForPatchGroupInput {
  BaselineId: String!
  PatchGroup: String!
}

type AwsSSMRegisterPatchBaselineForPatchGroupOutput {
  BaselineId: String
  PatchGroup: String
}

input AwsSSMRegisterTargetWithMaintenanceWindowInput {
  WindowId: String!
  ResourceType: String!
  Targets: [AwsSSMSuInput]!
  OwnerInformation: String
  Name: String
  Description: String
  ClientToken: String
}

type AwsSSMRegisterTargetWithMaintenanceWindowOutput {
  WindowTargetId: String
}

input AwsSSMRegisterTaskWithMaintenanceWindowInput {
  WindowId: String!
  Targets: [AwsSSMSuInput]!
  TaskArn: String!
  ServiceRoleArn: String!
  TaskType: String!
  TaskParameters: JSON
  TaskInvocationParameters: AwsSSMScnInput
  Priority: Int
  MaxConcurrency: String!
  MaxErrors: String!
  LoggingInfo: AwsSSMS9kInput
  Name: String
  Description: String
  ClientToken: String
}

type AwsSSMRegisterTaskWithMaintenanceWindowOutput {
  WindowTaskId: String
}

input AwsSSMRemoveTagsFromResourceInput {
  ResourceType: String!
  ResourceId: String!
  TagKeys: [String]!
}

type AwsSSMS10 {
  S3Location: AwsSSMS10S3Location
}

input AwsSSMS10Input {
  S3Location: AwsSSMS10S3LocationInput
}

type AwsSSMS10S3Location {
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
}

input AwsSSMS10S3LocationInput {
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
}

type AwsSSMS17 {
  Name: String
  InstanceId: String
  AssociationVersion: String
  Date: Date
  LastUpdateAssociationDate: Date
  Status: AwsSSMS1a
  Overview: AwsSSMS1e
  DocumentVersion: String
  Parameters: JSON
  AssociationId: String
  Targets: [AwsSSMSu]
  ScheduleExpression: String
  OutputLocation: AwsSSMS10
  LastExecutionDate: Date
  LastSuccessfulExecutionDate: Date
  AssociationName: String
}

type AwsSSMS1a {
  Date: Date!
  Name: String!
  Message: String!
  AdditionalInfo: String
}

input AwsSSMS1aInput {
  Date: Date!
  Name: String!
  Message: String!
  AdditionalInfo: String
}

type AwsSSMS1e {
  Status: String
  DetailedStatus: String
  AssociationStatusAggregatedCount: JSON
}

type AwsSSMS1l {
  Name: String!
  InstanceId: String
  Parameters: JSON
  DocumentVersion: String
  Targets: [AwsSSMSu]
  ScheduleExpression: String
  OutputLocation: AwsSSMS10
  AssociationName: String
}

input AwsSSMS1lInput {
  Name: String!
  InstanceId: String
  Parameters: JSON
  DocumentVersion: String
  Targets: [AwsSSMSuInput]
  ScheduleExpression: String
  OutputLocation: AwsSSMS10Input
  AssociationName: String
}

type AwsSSMS1y {
  Sha1: String
  Hash: String
  HashType: String
  Name: String
  Owner: String
  CreatedDate: Date
  Status: String
  DocumentVersion: String
  Description: String
  Parameters: [AwsSSMS1yParameters]
  PlatformTypes: [String]
  DocumentType: String
  SchemaVersion: String
  LatestVersion: String
  DefaultVersion: String
  DocumentFormat: String
  TargetType: String
  Tags: [AwsSSMS4]
}

type AwsSSMS1yParameters {
  Name: String
  Type: String
  Description: String
  DefaultValue: String
}

type AwsSSMS2s {
  PatchFilters: [AwsSSMS2sPatchFilters]!
}

input AwsSSMS2sInput {
  PatchFilters: [AwsSSMS2sPatchFiltersInput]!
}

type AwsSSMS2sPatchFilters {
  Key: String!
  Values: [String]!
}

input AwsSSMS2sPatchFiltersInput {
  Key: String!
  Values: [String]!
}

type AwsSSMS2y {
  PatchRules: [AwsSSMS2yPatchRules]!
}

input AwsSSMS2yInput {
  PatchRules: [AwsSSMS2yPatchRulesInput]!
}

type AwsSSMS2yPatchRules {
  PatchFilterGroup: AwsSSMS2s!
  ComplianceLevel: String
  ApproveAfterDays: Int!
}

input AwsSSMS2yPatchRulesInput {
  PatchFilterGroup: AwsSSMS2sInput!
  ComplianceLevel: String
  ApproveAfterDays: Int!
}

type AwsSSMS3a {
  BucketName: String!
  Prefix: String
  SyncFormat: String!
  Region: String!
  AWSKMSKeyARN: String
}

input AwsSSMS3aInput {
  BucketName: String!
  Prefix: String
  SyncFormat: String!
  Region: String!
  AWSKMSKeyARN: String
}

type AwsSSMS4 {
  Key: String!
  Value: String!
}

input AwsSSMS4Input {
  Key: String!
  Value: String!
}

type AwsSSMS57 {
  ParameterValues: [String]
  Truncated: Boolean
}

type AwsSSMS5i {
  StepName: String
  Action: String
  TimeoutSeconds: JSON
  OnFailure: String
  MaxAttempts: Int
  ExecutionStartTime: Date
  ExecutionEndTime: Date
  StepStatus: String
  ResponseCode: String
  Inputs: JSON
  Outputs: JSON
  Response: String
  FailureMessage: String
  FailureDetails: AwsSSMS5iFailureDetails
  StepExecutionId: String
  OverriddenParameters: JSON
}

type AwsSSMS5iFailureDetails {
  FailureStage: String
  FailureType: String
  Details: JSON
}

input AwsSSMS5qInput {
  Key: String
  Values: [String]
}

type AwsSSMS5y {
  Id: String
  ReleaseDate: Date
  Title: String
  Description: String
  ContentUrl: String
  Vendor: String
  ProductFamily: String
  Product: String
  Classification: String
  MsrcSeverity: String
  KbNumber: String
  MsrcNumber: String
  Language: String
}

type AwsSSMS7p {
  InstanceId: String!
  PatchGroup: String!
  BaselineId: String!
  SnapshotId: String
  OwnerInformation: String
  InstalledCount: Int
  InstalledOtherCount: Int
  MissingCount: Int
  FailedCount: Int
  NotApplicableCount: Int
  OperationStartTime: Date!
  OperationEndTime: Date!
  Operation: String!
}

input AwsSSMS8gInput {
  Key: String
  Values: [String]
}

type AwsSSMS9k {
  S3BucketName: String!
  S3KeyPrefix: String
  S3Region: String!
}

input AwsSSMS9kInput {
  S3BucketName: String!
  S3KeyPrefix: String
  S3Region: String!
}

input AwsSSMS9xInput {
  Key: String!
  Option: String
  Values: [String]
}

type AwsSSMSae {
  BaselineId: String
  BaselineName: String
  OperatingSystem: String
  BaselineDescription: String
  DefaultBaseline: Boolean
}

input AwsSSMSb8Input {
  Key: String!
  Values: [String]!
  Type: String
}

input AwsSSMSbeInput {
  Expression: String
  Aggregators: JSON
}

type AwsSSMScn {
  RunCommand: AwsSSMScnRunCommand
  Automation: AwsSSMScnAutomation
  StepFunctions: AwsSSMScnStepFunctions
  Lambda: AwsSSMScnLambda
}

type AwsSSMScnAutomation {
  DocumentVersion: String
  Parameters: JSON
}

input AwsSSMScnAutomationInput {
  DocumentVersion: String
  Parameters: JSON
}

input AwsSSMScnInput {
  RunCommand: AwsSSMScnRunCommandInput
  Automation: AwsSSMScnAutomationInput
  StepFunctions: AwsSSMScnStepFunctionsInput
  Lambda: AwsSSMScnLambdaInput
}

type AwsSSMScnLambda {
  ClientContext: String
  Qualifier: String
  Payload: JSON
}

input AwsSSMScnLambdaInput {
  ClientContext: String
  Qualifier: String
  Payload: JSON
}

type AwsSSMScnRunCommand {
  Comment: String
  DocumentHash: String
  DocumentHashType: String
  NotificationConfig: AwsSSMScp
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
  Parameters: JSON
  ServiceRoleArn: String
  TimeoutSeconds: Int
}

input AwsSSMScnRunCommandInput {
  Comment: String
  DocumentHash: String
  DocumentHashType: String
  NotificationConfig: AwsSSMScpInput
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
  Parameters: JSON
  ServiceRoleArn: String
  TimeoutSeconds: Int
}

type AwsSSMScnStepFunctions {
  Input: String
  Name: String
}

input AwsSSMScnStepFunctionsInput {
  Input: String
  Name: String
}

type AwsSSMScp {
  NotificationArn: String
  NotificationEvents: [String]
  NotificationType: String
}

input AwsSSMScpInput {
  NotificationArn: String
  NotificationEvents: [String]
  NotificationType: String
}

type AwsSSMSd5 {
  Name: String
  Type: String
  Value: String
  Version: JSON
}

input AwsSSMSe0Input {
  key: String!
  value: String!
}

type AwsSSMSeg {
  CommandId: String
  DocumentName: String
  Comment: String
  ExpiresAfter: Date
  Parameters: JSON
  InstanceIds: [String]
  Targets: [AwsSSMSu]
  RequestedDateTime: Date
  Status: String
  StatusDetails: String
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
  MaxConcurrency: String
  MaxErrors: String
  TargetCount: Int
  CompletedCount: Int
  ErrorCount: Int
  ServiceRole: String
  NotificationConfig: AwsSSMScp
}

input AwsSSMSemInput {
  Key: String
  Values: [String]
  Type: String
}

input AwsSSMSendAutomationSignalInput {
  AutomationExecutionId: String!
  SignalType: String!
  Payload: JSON
}

input AwsSSMSendCommandInput {
  InstanceIds: [String]
  Targets: [AwsSSMSuInput]
  DocumentName: String!
  DocumentHash: String
  DocumentHashType: String
  TimeoutSeconds: Int
  Comment: String
  Parameters: JSON
  OutputS3Region: String
  OutputS3BucketName: String
  OutputS3KeyPrefix: String
  MaxConcurrency: String
  MaxErrors: String
  ServiceRoleArn: String
  NotificationConfig: AwsSSMScpInput
}

type AwsSSMSendCommandOutput {
  Command: AwsSSMSeg
}

type AwsSSMSf4 {
  ExecutionTime: Date!
  ExecutionId: String
  ExecutionType: String
}

input AwsSSMSf4Input {
  ExecutionTime: Date!
  ExecutionId: String
  ExecutionType: String
}

type AwsSSMSfc {
  CompliantCount: Int
  SeveritySummary: AwsSSMSfe
}

type AwsSSMSfe {
  CriticalCount: Int
  HighCount: Int
  MediumCount: Int
  LowCount: Int
  InformationalCount: Int
  UnspecifiedCount: Int
}

type AwsSSMSff {
  NonCompliantCount: Int
  SeveritySummary: AwsSSMSfe
}

input AwsSSMStartAutomationExecutionInput {
  DocumentName: String!
  DocumentVersion: String
  Parameters: JSON
  ClientToken: String
  Mode: String
  TargetParameterName: String
  Targets: [AwsSSMSuInput]
  MaxConcurrency: String
  MaxErrors: String
}

type AwsSSMStartAutomationExecutionOutput {
  AutomationExecutionId: String
}

input AwsSSMStopAutomationExecutionInput {
  AutomationExecutionId: String!
  Type: String
}

type AwsSSMSu {
  Key: String
  Values: [String]
}

input AwsSSMSuInput {
  Key: String
  Values: [String]
}

input AwsSSMUpdateAssociationInput {
  AssociationId: String!
  Parameters: JSON
  DocumentVersion: String
  ScheduleExpression: String
  OutputLocation: AwsSSMS10Input
  Name: String
  Targets: [AwsSSMSuInput]
  AssociationName: String
  AssociationVersion: String
}

type AwsSSMUpdateAssociationOutput {
  AssociationDescription: AwsSSMS17
}

input AwsSSMUpdateAssociationStatusInput {
  Name: String!
  InstanceId: String!
  AssociationStatus: AwsSSMS1aInput!
}

type AwsSSMUpdateAssociationStatusOutput {
  AssociationDescription: AwsSSMS17
}

input AwsSSMUpdateDocumentDefaultVersionInput {
  Name: String!
  DocumentVersion: String!
}

type AwsSSMUpdateDocumentDefaultVersionOutput {
  Description: AwsSSMUpdateDocumentDefaultVersionOutputDescription
}

type AwsSSMUpdateDocumentDefaultVersionOutputDescription {
  Name: String
  DefaultVersion: String
}

input AwsSSMUpdateDocumentInput {
  Content: String!
  Name: String!
  DocumentVersion: String
  DocumentFormat: String
  TargetType: String
}

type AwsSSMUpdateDocumentOutput {
  DocumentDescription: AwsSSMS1y
}

input AwsSSMUpdateMaintenanceWindowInput {
  WindowId: String!
  Name: String
  Description: String
  Schedule: String
  Duration: Int
  Cutoff: Int
  AllowUnassociatedTargets: Boolean
  Enabled: Boolean
  Replace: Boolean
}

type AwsSSMUpdateMaintenanceWindowOutput {
  WindowId: String
  Name: String
  Description: String
  Schedule: String
  Duration: Int
  Cutoff: Int
  AllowUnassociatedTargets: Boolean
  Enabled: Boolean
}

input AwsSSMUpdateMaintenanceWindowTargetInput {
  WindowId: String!
  WindowTargetId: String!
  Targets: [AwsSSMSuInput]
  OwnerInformation: String
  Name: String
  Description: String
  Replace: Boolean
}

type AwsSSMUpdateMaintenanceWindowTargetOutput {
  WindowId: String
  WindowTargetId: String
  Targets: [AwsSSMSu]
  OwnerInformation: String
  Name: String
  Description: String
}

input AwsSSMUpdateMaintenanceWindowTaskInput {
  WindowId: String!
  WindowTaskId: String!
  Targets: [AwsSSMSuInput]
  TaskArn: String
  ServiceRoleArn: String
  TaskParameters: JSON
  TaskInvocationParameters: AwsSSMScnInput
  Priority: Int
  MaxConcurrency: String
  MaxErrors: String
  LoggingInfo: AwsSSMS9kInput
  Name: String
  Description: String
  Replace: Boolean
}

type AwsSSMUpdateMaintenanceWindowTaskOutput {
  WindowId: String
  WindowTaskId: String
  Targets: [AwsSSMSu]
  TaskArn: String
  ServiceRoleArn: String
  TaskParameters: JSON
  TaskInvocationParameters: AwsSSMScn
  Priority: Int
  MaxConcurrency: String
  MaxErrors: String
  LoggingInfo: AwsSSMS9k
  Name: String
  Description: String
}

input AwsSSMUpdateManagedInstanceRoleInput {
  InstanceId: String!
  IamRole: String!
}

input AwsSSMUpdatePatchBaselineInput {
  BaselineId: String!
  Name: String
  GlobalFilters: AwsSSMS2sInput
  ApprovalRules: AwsSSMS2yInput
  ApprovedPatches: [String]
  ApprovedPatchesComplianceLevel: String
  RejectedPatches: [String]
  Description: String
}

type AwsSSMUpdatePatchBaselineOutput {
  BaselineId: String
  Name: String
  OperatingSystem: String
  GlobalFilters: AwsSSMS2s
  ApprovalRules: AwsSSMS2y
  ApprovedPatches: [String]
  ApprovedPatchesComplianceLevel: String
  RejectedPatches: [String]
  CreatedDate: Date
  ModifiedDate: Date
  Description: String
}

# AWS Step Functions (2016-11-23)
type AwsStepFunctions {
  createActivity(input: AwsStepFunctionsCreateActivityInput!, config: AwsConfig): AwsStepFunctionsCreateActivityOutput
  createStateMachine(input: AwsStepFunctionsCreateStateMachineInput!, config: AwsConfig): AwsStepFunctionsCreateStateMachineOutput
  deleteActivity(input: AwsStepFunctionsDeleteActivityInput!, config: AwsConfig): JSON
  deleteStateMachine(input: AwsStepFunctionsDeleteStateMachineInput!, config: AwsConfig): JSON
  describeActivity(input: AwsStepFunctionsDescribeActivityInput!, config: AwsConfig): AwsStepFunctionsDescribeActivityOutput
  describeExecution(input: AwsStepFunctionsDescribeExecutionInput!, config: AwsConfig): AwsStepFunctionsDescribeExecutionOutput
  describeStateMachine(input: AwsStepFunctionsDescribeStateMachineInput!, config: AwsConfig): AwsStepFunctionsDescribeStateMachineOutput
  describeStateMachineForExecution(input: AwsStepFunctionsDescribeStateMachineForExecutionInput!, config: AwsConfig): AwsStepFunctionsDescribeStateMachineForExecutionOutput
  getActivityTask(input: AwsStepFunctionsGetActivityTaskInput!, config: AwsConfig): AwsStepFunctionsGetActivityTaskOutput
  getExecutionHistory(input: AwsStepFunctionsGetExecutionHistoryInput!, config: AwsConfig): AwsStepFunctionsGetExecutionHistoryOutput
  listActivities(input: AwsStepFunctionsListActivitiesInput, config: AwsConfig): AwsStepFunctionsListActivitiesOutput
  listExecutions(input: AwsStepFunctionsListExecutionsInput!, config: AwsConfig): AwsStepFunctionsListExecutionsOutput
  listStateMachines(input: AwsStepFunctionsListStateMachinesInput, config: AwsConfig): AwsStepFunctionsListStateMachinesOutput
  sendTaskFailure(input: AwsStepFunctionsSendTaskFailureInput!, config: AwsConfig): JSON
  sendTaskHeartbeat(input: AwsStepFunctionsSendTaskHeartbeatInput!, config: AwsConfig): JSON
  sendTaskSuccess(input: AwsStepFunctionsSendTaskSuccessInput!, config: AwsConfig): JSON
  startExecution(input: AwsStepFunctionsStartExecutionInput!, config: AwsConfig): AwsStepFunctionsStartExecutionOutput
  stopExecution(input: AwsStepFunctionsStopExecutionInput!, config: AwsConfig): AwsStepFunctionsStopExecutionOutput
  updateStateMachine(input: AwsStepFunctionsUpdateStateMachineInput!, config: AwsConfig): AwsStepFunctionsUpdateStateMachineOutput
}

input AwsStepFunctionsCreateActivityInput {
  name: String!
}

type AwsStepFunctionsCreateActivityOutput {
  activityArn: String!
  creationDate: Date!
}

input AwsStepFunctionsCreateStateMachineInput {
  name: String!
  definition: String!
  roleArn: String!
}

type AwsStepFunctionsCreateStateMachineOutput {
  stateMachineArn: String!
  creationDate: Date!
}

input AwsStepFunctionsDeleteActivityInput {
  activityArn: String!
}

input AwsStepFunctionsDeleteStateMachineInput {
  stateMachineArn: String!
}

input AwsStepFunctionsDescribeActivityInput {
  activityArn: String!
}

type AwsStepFunctionsDescribeActivityOutput {
  activityArn: String!
  name: String!
  creationDate: Date!
}

input AwsStepFunctionsDescribeExecutionInput {
  executionArn: String!
}

type AwsStepFunctionsDescribeExecutionOutput {
  executionArn: String!
  stateMachineArn: String!
  name: String
  status: String!
  startDate: Date!
  stopDate: Date
  input: String!
  output: String
}

input AwsStepFunctionsDescribeStateMachineForExecutionInput {
  executionArn: String!
}

type AwsStepFunctionsDescribeStateMachineForExecutionOutput {
  stateMachineArn: String!
  name: String!
  definition: String!
  roleArn: String!
  updateDate: Date!
}

input AwsStepFunctionsDescribeStateMachineInput {
  stateMachineArn: String!
}

type AwsStepFunctionsDescribeStateMachineOutput {
  stateMachineArn: String!
  name: String!
  status: String
  definition: String!
  roleArn: String!
  creationDate: Date!
}

input AwsStepFunctionsGetActivityTaskInput {
  activityArn: String!
  workerName: String
}

type AwsStepFunctionsGetActivityTaskOutput {
  taskToken: String
  input: String
}

input AwsStepFunctionsGetExecutionHistoryInput {
  executionArn: String!
  maxResults: Int
  reverseOrder: Boolean
  nextToken: String
}

type AwsStepFunctionsGetExecutionHistoryOutput {
  events: [AwsStepFunctionsGetExecutionHistoryOutputEvents]!
  nextToken: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEvents {
  timestamp: Date!
  type: String!
  id: JSON!
  previousEventId: JSON
  activityFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsActivityFailedEventDetails
  activityScheduleFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsActivityScheduleFailedEventDetails
  activityScheduledEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsActivityScheduledEventDetails
  activityStartedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsActivityStartedEventDetails
  activitySucceededEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsActivitySucceededEventDetails
  activityTimedOutEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsActivityTimedOutEventDetails
  executionFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionFailedEventDetails
  executionStartedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionStartedEventDetails
  executionSucceededEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionSucceededEventDetails
  executionAbortedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionAbortedEventDetails
  executionTimedOutEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionTimedOutEventDetails
  lambdaFunctionFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionFailedEventDetails
  lambdaFunctionScheduleFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionScheduleFailedEventDetails
  lambdaFunctionScheduledEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionScheduledEventDetails
  lambdaFunctionStartFailedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionStartFailedEventDetails
  lambdaFunctionSucceededEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionSucceededEventDetails
  lambdaFunctionTimedOutEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionTimedOutEventDetails
  stateEnteredEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsStateEnteredEventDetails
  stateExitedEventDetails: AwsStepFunctionsGetExecutionHistoryOutputEventsStateExitedEventDetails
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsActivityFailedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsActivityScheduledEventDetails {
  resource: String!
  input: String
  timeoutInSeconds: JSON
  heartbeatInSeconds: JSON
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsActivityScheduleFailedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsActivityStartedEventDetails {
  workerName: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsActivitySucceededEventDetails {
  output: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsActivityTimedOutEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionAbortedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionFailedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionStartedEventDetails {
  input: String
  roleArn: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionSucceededEventDetails {
  output: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsExecutionTimedOutEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionFailedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionScheduledEventDetails {
  resource: String!
  input: String
  timeoutInSeconds: JSON
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionScheduleFailedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionStartFailedEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionSucceededEventDetails {
  output: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsLambdaFunctionTimedOutEventDetails {
  error: String
  cause: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsStateEnteredEventDetails {
  name: String!
  input: String
}

type AwsStepFunctionsGetExecutionHistoryOutputEventsStateExitedEventDetails {
  name: String!
  output: String
}

input AwsStepFunctionsListActivitiesInput {
  maxResults: Int
  nextToken: String
}

type AwsStepFunctionsListActivitiesOutput {
  activities: [AwsStepFunctionsListActivitiesOutputActivities]!
  nextToken: String
}

type AwsStepFunctionsListActivitiesOutputActivities {
  activityArn: String!
  name: String!
  creationDate: Date!
}

input AwsStepFunctionsListExecutionsInput {
  stateMachineArn: String!
  statusFilter: String
  maxResults: Int
  nextToken: String
}

type AwsStepFunctionsListExecutionsOutput {
  executions: [AwsStepFunctionsListExecutionsOutputExecutions]!
  nextToken: String
}

type AwsStepFunctionsListExecutionsOutputExecutions {
  executionArn: String!
  stateMachineArn: String!
  name: String!
  status: String!
  startDate: Date!
  stopDate: Date
}

input AwsStepFunctionsListStateMachinesInput {
  maxResults: Int
  nextToken: String
}

type AwsStepFunctionsListStateMachinesOutput {
  stateMachines: [AwsStepFunctionsListStateMachinesOutputStateMachines]!
  nextToken: String
}

type AwsStepFunctionsListStateMachinesOutputStateMachines {
  stateMachineArn: String!
  name: String!
  creationDate: Date!
}

input AwsStepFunctionsSendTaskFailureInput {
  taskToken: String!
  error: String
  cause: String
}

input AwsStepFunctionsSendTaskHeartbeatInput {
  taskToken: String!
}

input AwsStepFunctionsSendTaskSuccessInput {
  taskToken: String!
  output: String!
}

input AwsStepFunctionsStartExecutionInput {
  stateMachineArn: String!
  name: String
  input: String
}

type AwsStepFunctionsStartExecutionOutput {
  executionArn: String!
  startDate: Date!
}

input AwsStepFunctionsStopExecutionInput {
  executionArn: String!
  error: String
  cause: String
}

type AwsStepFunctionsStopExecutionOutput {
  stopDate: Date!
}

input AwsStepFunctionsUpdateStateMachineInput {
  stateMachineArn: String!
  definition: String
  roleArn: String
}

type AwsStepFunctionsUpdateStateMachineOutput {
  updateDate: Date!
}

# AWS Storage Gateway (2013-06-30)
type AwsStorageGateway {
  activateGateway(input: AwsStorageGatewayActivateGatewayInput!, config: AwsConfig): AwsStorageGatewayActivateGatewayOutput
  addCache(input: AwsStorageGatewayAddCacheInput!, config: AwsConfig): AwsStorageGatewayAddCacheOutput
  addTagsToResource(input: AwsStorageGatewayAddTagsToResourceInput!, config: AwsConfig): AwsStorageGatewayAddTagsToResourceOutput
  addUploadBuffer(input: AwsStorageGatewayAddUploadBufferInput!, config: AwsConfig): AwsStorageGatewayAddUploadBufferOutput
  addWorkingStorage(input: AwsStorageGatewayAddWorkingStorageInput!, config: AwsConfig): AwsStorageGatewayAddWorkingStorageOutput
  cancelArchival(input: AwsStorageGatewayCancelArchivalInput!, config: AwsConfig): AwsStorageGatewayCancelArchivalOutput
  cancelRetrieval(input: AwsStorageGatewayCancelRetrievalInput!, config: AwsConfig): AwsStorageGatewayCancelRetrievalOutput
  createCachediSCSIVolume(input: AwsStorageGatewayCreateCachediSCSIVolumeInput!, config: AwsConfig): AwsStorageGatewayCreateCachediSCSIVolumeOutput
  createNFSFileShare(input: AwsStorageGatewayCreateNFSFileShareInput!, config: AwsConfig): AwsStorageGatewayCreateNFSFileShareOutput
  createSnapshot(input: AwsStorageGatewayCreateSnapshotInput!, config: AwsConfig): AwsStorageGatewayCreateSnapshotOutput
  createSnapshotFromVolumeRecoveryPoint(input: AwsStorageGatewayCreateSnapshotFromVolumeRecoveryPointInput!, config: AwsConfig): AwsStorageGatewayCreateSnapshotFromVolumeRecoveryPointOutput
  createStorediSCSIVolume(input: AwsStorageGatewayCreateStorediSCSIVolumeInput!, config: AwsConfig): AwsStorageGatewayCreateStorediSCSIVolumeOutput
  createTapeWithBarcode(input: AwsStorageGatewayCreateTapeWithBarcodeInput!, config: AwsConfig): AwsStorageGatewayCreateTapeWithBarcodeOutput
  createTapes(input: AwsStorageGatewayCreateTapesInput!, config: AwsConfig): AwsStorageGatewayCreateTapesOutput
  deleteBandwidthRateLimit(input: AwsStorageGatewayDeleteBandwidthRateLimitInput!, config: AwsConfig): AwsStorageGatewayDeleteBandwidthRateLimitOutput
  deleteChapCredentials(input: AwsStorageGatewayDeleteChapCredentialsInput!, config: AwsConfig): AwsStorageGatewayDeleteChapCredentialsOutput
  deleteFileShare(input: AwsStorageGatewayDeleteFileShareInput!, config: AwsConfig): AwsStorageGatewayDeleteFileShareOutput
  deleteGateway(input: AwsStorageGatewayDeleteGatewayInput!, config: AwsConfig): AwsStorageGatewayDeleteGatewayOutput
  deleteSnapshotSchedule(input: AwsStorageGatewayDeleteSnapshotScheduleInput!, config: AwsConfig): AwsStorageGatewayDeleteSnapshotScheduleOutput
  deleteTape(input: AwsStorageGatewayDeleteTapeInput!, config: AwsConfig): AwsStorageGatewayDeleteTapeOutput
  deleteTapeArchive(input: AwsStorageGatewayDeleteTapeArchiveInput!, config: AwsConfig): AwsStorageGatewayDeleteTapeArchiveOutput
  deleteVolume(input: AwsStorageGatewayDeleteVolumeInput!, config: AwsConfig): AwsStorageGatewayDeleteVolumeOutput
  describeBandwidthRateLimit(input: AwsStorageGatewayDescribeBandwidthRateLimitInput!, config: AwsConfig): AwsStorageGatewayDescribeBandwidthRateLimitOutput
  describeCache(input: AwsStorageGatewayDescribeCacheInput!, config: AwsConfig): AwsStorageGatewayDescribeCacheOutput
  describeCachediSCSIVolumes(input: AwsStorageGatewayDescribeCachediSCSIVolumesInput!, config: AwsConfig): AwsStorageGatewayDescribeCachediSCSIVolumesOutput
  describeChapCredentials(input: AwsStorageGatewayDescribeChapCredentialsInput!, config: AwsConfig): AwsStorageGatewayDescribeChapCredentialsOutput
  describeGatewayInformation(input: AwsStorageGatewayDescribeGatewayInformationInput!, config: AwsConfig): AwsStorageGatewayDescribeGatewayInformationOutput
  describeMaintenanceStartTime(input: AwsStorageGatewayDescribeMaintenanceStartTimeInput!, config: AwsConfig): AwsStorageGatewayDescribeMaintenanceStartTimeOutput
  describeNFSFileShares(input: AwsStorageGatewayDescribeNFSFileSharesInput!, config: AwsConfig): AwsStorageGatewayDescribeNFSFileSharesOutput
  describeSnapshotSchedule(input: AwsStorageGatewayDescribeSnapshotScheduleInput!, config: AwsConfig): AwsStorageGatewayDescribeSnapshotScheduleOutput
  describeStorediSCSIVolumes(input: AwsStorageGatewayDescribeStorediSCSIVolumesInput!, config: AwsConfig): AwsStorageGatewayDescribeStorediSCSIVolumesOutput
  describeTapeArchives(input: AwsStorageGatewayDescribeTapeArchivesInput, config: AwsConfig): AwsStorageGatewayDescribeTapeArchivesOutput
  describeTapeRecoveryPoints(input: AwsStorageGatewayDescribeTapeRecoveryPointsInput!, config: AwsConfig): AwsStorageGatewayDescribeTapeRecoveryPointsOutput
  describeTapes(input: AwsStorageGatewayDescribeTapesInput!, config: AwsConfig): AwsStorageGatewayDescribeTapesOutput
  describeUploadBuffer(input: AwsStorageGatewayDescribeUploadBufferInput!, config: AwsConfig): AwsStorageGatewayDescribeUploadBufferOutput
  describeVTLDevices(input: AwsStorageGatewayDescribeVTLDevicesInput!, config: AwsConfig): AwsStorageGatewayDescribeVTLDevicesOutput
  describeWorkingStorage(input: AwsStorageGatewayDescribeWorkingStorageInput!, config: AwsConfig): AwsStorageGatewayDescribeWorkingStorageOutput
  disableGateway(input: AwsStorageGatewayDisableGatewayInput!, config: AwsConfig): AwsStorageGatewayDisableGatewayOutput
  listFileShares(input: AwsStorageGatewayListFileSharesInput, config: AwsConfig): AwsStorageGatewayListFileSharesOutput
  listGateways(input: AwsStorageGatewayListGatewaysInput, config: AwsConfig): AwsStorageGatewayListGatewaysOutput
  listLocalDisks(input: AwsStorageGatewayListLocalDisksInput!, config: AwsConfig): AwsStorageGatewayListLocalDisksOutput
  listTagsForResource(input: AwsStorageGatewayListTagsForResourceInput!, config: AwsConfig): AwsStorageGatewayListTagsForResourceOutput
  listTapes(input: AwsStorageGatewayListTapesInput, config: AwsConfig): AwsStorageGatewayListTapesOutput
  listVolumeInitiators(input: AwsStorageGatewayListVolumeInitiatorsInput!, config: AwsConfig): AwsStorageGatewayListVolumeInitiatorsOutput
  listVolumeRecoveryPoints(input: AwsStorageGatewayListVolumeRecoveryPointsInput!, config: AwsConfig): AwsStorageGatewayListVolumeRecoveryPointsOutput
  listVolumes(input: AwsStorageGatewayListVolumesInput, config: AwsConfig): AwsStorageGatewayListVolumesOutput
  notifyWhenUploaded(input: AwsStorageGatewayNotifyWhenUploadedInput!, config: AwsConfig): AwsStorageGatewayNotifyWhenUploadedOutput
  refreshCache(input: AwsStorageGatewayRefreshCacheInput!, config: AwsConfig): AwsStorageGatewayRefreshCacheOutput
  removeTagsFromResource(input: AwsStorageGatewayRemoveTagsFromResourceInput!, config: AwsConfig): AwsStorageGatewayRemoveTagsFromResourceOutput
  resetCache(input: AwsStorageGatewayResetCacheInput!, config: AwsConfig): AwsStorageGatewayResetCacheOutput
  retrieveTapeArchive(input: AwsStorageGatewayRetrieveTapeArchiveInput!, config: AwsConfig): AwsStorageGatewayRetrieveTapeArchiveOutput
  retrieveTapeRecoveryPoint(input: AwsStorageGatewayRetrieveTapeRecoveryPointInput!, config: AwsConfig): AwsStorageGatewayRetrieveTapeRecoveryPointOutput
  setLocalConsolePassword(input: AwsStorageGatewaySetLocalConsolePasswordInput!, config: AwsConfig): AwsStorageGatewaySetLocalConsolePasswordOutput
  shutdownGateway(input: AwsStorageGatewayShutdownGatewayInput!, config: AwsConfig): AwsStorageGatewayShutdownGatewayOutput
  startGateway(input: AwsStorageGatewayStartGatewayInput!, config: AwsConfig): AwsStorageGatewayStartGatewayOutput
  updateBandwidthRateLimit(input: AwsStorageGatewayUpdateBandwidthRateLimitInput!, config: AwsConfig): AwsStorageGatewayUpdateBandwidthRateLimitOutput
  updateChapCredentials(input: AwsStorageGatewayUpdateChapCredentialsInput!, config: AwsConfig): AwsStorageGatewayUpdateChapCredentialsOutput
  updateGatewayInformation(input: AwsStorageGatewayUpdateGatewayInformationInput!, config: AwsConfig): AwsStorageGatewayUpdateGatewayInformationOutput
  updateGatewaySoftwareNow(input: AwsStorageGatewayUpdateGatewaySoftwareNowInput!, config: AwsConfig): AwsStorageGatewayUpdateGatewaySoftwareNowOutput
  updateMaintenanceStartTime(input: AwsStorageGatewayUpdateMaintenanceStartTimeInput!, config: AwsConfig): AwsStorageGatewayUpdateMaintenanceStartTimeOutput
  updateNFSFileShare(input: AwsStorageGatewayUpdateNFSFileShareInput!, config: AwsConfig): AwsStorageGatewayUpdateNFSFileShareOutput
  updateSnapshotSchedule(input: AwsStorageGatewayUpdateSnapshotScheduleInput!, config: AwsConfig): AwsStorageGatewayUpdateSnapshotScheduleOutput
  updateVTLDeviceType(input: AwsStorageGatewayUpdateVTLDeviceTypeInput!, config: AwsConfig): AwsStorageGatewayUpdateVTLDeviceTypeOutput
}

input AwsStorageGatewayActivateGatewayInput {
  ActivationKey: String!
  GatewayName: String!
  GatewayTimezone: String!
  GatewayRegion: String!
  GatewayType: String
  TapeDriveType: String
  MediumChangerType: String
}

type AwsStorageGatewayActivateGatewayOutput {
  GatewayARN: String
}

input AwsStorageGatewayAddCacheInput {
  GatewayARN: String!
  DiskIds: [String]!
}

type AwsStorageGatewayAddCacheOutput {
  GatewayARN: String
}

input AwsStorageGatewayAddTagsToResourceInput {
  ResourceARN: String!
  Tags: [AwsStorageGatewayShInput]!
}

type AwsStorageGatewayAddTagsToResourceOutput {
  ResourceARN: String
}

input AwsStorageGatewayAddUploadBufferInput {
  GatewayARN: String!
  DiskIds: [String]!
}

type AwsStorageGatewayAddUploadBufferOutput {
  GatewayARN: String
}

input AwsStorageGatewayAddWorkingStorageInput {
  GatewayARN: String!
  DiskIds: [String]!
}

type AwsStorageGatewayAddWorkingStorageOutput {
  GatewayARN: String
}

input AwsStorageGatewayCancelArchivalInput {
  GatewayARN: String!
  TapeARN: String!
}

type AwsStorageGatewayCancelArchivalOutput {
  TapeARN: String
}

input AwsStorageGatewayCancelRetrievalInput {
  GatewayARN: String!
  TapeARN: String!
}

type AwsStorageGatewayCancelRetrievalOutput {
  TapeARN: String
}

input AwsStorageGatewayCreateCachediSCSIVolumeInput {
  GatewayARN: String!
  VolumeSizeInBytes: JSON!
  SnapshotId: String
  TargetName: String!
  SourceVolumeARN: String
  NetworkInterfaceId: String!
  ClientToken: String!
}

type AwsStorageGatewayCreateCachediSCSIVolumeOutput {
  VolumeARN: String
  TargetARN: String
}

input AwsStorageGatewayCreateNFSFileShareInput {
  ClientToken: String!
  NFSFileShareDefaults: AwsStorageGatewayS15Input
  GatewayARN: String!
  KMSEncrypted: Boolean
  KMSKey: String
  Role: String!
  LocationARN: String!
  DefaultStorageClass: String
  ClientList: [String]
  Squash: String
  ReadOnly: Boolean
  GuessMIMETypeEnabled: Boolean
}

type AwsStorageGatewayCreateNFSFileShareOutput {
  FileShareARN: String
}

input AwsStorageGatewayCreateSnapshotFromVolumeRecoveryPointInput {
  VolumeARN: String!
  SnapshotDescription: String!
}

type AwsStorageGatewayCreateSnapshotFromVolumeRecoveryPointOutput {
  SnapshotId: String
  VolumeARN: String
  VolumeRecoveryPointTime: String
}

input AwsStorageGatewayCreateSnapshotInput {
  VolumeARN: String!
  SnapshotDescription: String!
}

type AwsStorageGatewayCreateSnapshotOutput {
  VolumeARN: String
  SnapshotId: String
}

input AwsStorageGatewayCreateStorediSCSIVolumeInput {
  GatewayARN: String!
  DiskId: String!
  SnapshotId: String
  PreserveExistingData: Boolean!
  TargetName: String!
  NetworkInterfaceId: String!
}

type AwsStorageGatewayCreateStorediSCSIVolumeOutput {
  VolumeARN: String
  VolumeSizeInBytes: JSON
  TargetARN: String
}

input AwsStorageGatewayCreateTapesInput {
  GatewayARN: String!
  TapeSizeInBytes: JSON!
  ClientToken: String!
  NumTapesToCreate: Int!
  TapeBarcodePrefix: String!
}

type AwsStorageGatewayCreateTapesOutput {
  TapeARNs: [String]
}

input AwsStorageGatewayCreateTapeWithBarcodeInput {
  GatewayARN: String!
  TapeSizeInBytes: JSON!
  TapeBarcode: String!
}

type AwsStorageGatewayCreateTapeWithBarcodeOutput {
  TapeARN: String
}

input AwsStorageGatewayDeleteBandwidthRateLimitInput {
  GatewayARN: String!
  BandwidthType: String!
}

type AwsStorageGatewayDeleteBandwidthRateLimitOutput {
  GatewayARN: String
}

input AwsStorageGatewayDeleteChapCredentialsInput {
  TargetARN: String!
  InitiatorName: String!
}

type AwsStorageGatewayDeleteChapCredentialsOutput {
  TargetARN: String
  InitiatorName: String
}

input AwsStorageGatewayDeleteFileShareInput {
  FileShareARN: String!
  ForceDelete: Boolean
}

type AwsStorageGatewayDeleteFileShareOutput {
  FileShareARN: String
}

input AwsStorageGatewayDeleteGatewayInput {
  GatewayARN: String!
}

type AwsStorageGatewayDeleteGatewayOutput {
  GatewayARN: String
}

input AwsStorageGatewayDeleteSnapshotScheduleInput {
  VolumeARN: String!
}

type AwsStorageGatewayDeleteSnapshotScheduleOutput {
  VolumeARN: String
}

input AwsStorageGatewayDeleteTapeArchiveInput {
  TapeARN: String!
}

type AwsStorageGatewayDeleteTapeArchiveOutput {
  TapeARN: String
}

input AwsStorageGatewayDeleteTapeInput {
  GatewayARN: String!
  TapeARN: String!
}

type AwsStorageGatewayDeleteTapeOutput {
  TapeARN: String
}

input AwsStorageGatewayDeleteVolumeInput {
  VolumeARN: String!
}

type AwsStorageGatewayDeleteVolumeOutput {
  VolumeARN: String
}

input AwsStorageGatewayDescribeBandwidthRateLimitInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeBandwidthRateLimitOutput {
  GatewayARN: String
  AverageUploadRateLimitInBitsPerSec: JSON
  AverageDownloadRateLimitInBitsPerSec: JSON
}

input AwsStorageGatewayDescribeCachediSCSIVolumesInput {
  VolumeARNs: [String]!
}

type AwsStorageGatewayDescribeCachediSCSIVolumesOutput {
  CachediSCSIVolumes: [AwsStorageGatewayDescribeCachediSCSIVolumesOutputCachediSCSIVolumes]
}

type AwsStorageGatewayDescribeCachediSCSIVolumesOutputCachediSCSIVolumes {
  VolumeARN: String
  VolumeId: String
  VolumeType: String
  VolumeStatus: String
  VolumeSizeInBytes: JSON
  VolumeProgress: JSON
  SourceSnapshotId: String
  VolumeiSCSIAttributes: AwsStorageGatewayS2y
  CreatedDate: Date
  VolumeUsedInBytes: JSON
}

input AwsStorageGatewayDescribeCacheInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeCacheOutput {
  GatewayARN: String
  DiskIds: [String]
  CacheAllocatedInBytes: JSON
  CacheUsedPercentage: JSON
  CacheDirtyPercentage: JSON
  CacheHitPercentage: JSON
  CacheMissPercentage: JSON
}

input AwsStorageGatewayDescribeChapCredentialsInput {
  TargetARN: String!
}

type AwsStorageGatewayDescribeChapCredentialsOutput {
  ChapCredentials: [AwsStorageGatewayDescribeChapCredentialsOutputChapCredentials]
}

type AwsStorageGatewayDescribeChapCredentialsOutputChapCredentials {
  TargetARN: String
  SecretToAuthenticateInitiator: String
  InitiatorName: String
  SecretToAuthenticateTarget: String
}

input AwsStorageGatewayDescribeGatewayInformationInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeGatewayInformationOutput {
  GatewayARN: String
  GatewayId: String
  GatewayName: String
  GatewayTimezone: String
  GatewayState: String
  GatewayNetworkInterfaces: [AwsStorageGatewayDescribeGatewayInformationOutputGatewayNetworkInterfaces]
  GatewayType: String
  NextUpdateAvailabilityDate: String
  LastSoftwareUpdate: String
}

type AwsStorageGatewayDescribeGatewayInformationOutputGatewayNetworkInterfaces {
  Ipv4Address: String
  MacAddress: String
  Ipv6Address: String
}

input AwsStorageGatewayDescribeMaintenanceStartTimeInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeMaintenanceStartTimeOutput {
  GatewayARN: String
  HourOfDay: Int
  MinuteOfHour: Int
  DayOfWeek: Int
  Timezone: String
}

input AwsStorageGatewayDescribeNFSFileSharesInput {
  FileShareARNList: [String]!
}

type AwsStorageGatewayDescribeNFSFileSharesOutput {
  NFSFileShareInfoList: [AwsStorageGatewayDescribeNFSFileSharesOutputNFSFileShareInfoList]
}

type AwsStorageGatewayDescribeNFSFileSharesOutputNFSFileShareInfoList {
  NFSFileShareDefaults: AwsStorageGatewayS15
  FileShareARN: String
  FileShareId: String
  FileShareStatus: String
  GatewayARN: String
  KMSEncrypted: Boolean
  KMSKey: String
  Path: String
  Role: String
  LocationARN: String
  DefaultStorageClass: String
  ClientList: [String]
  Squash: String
  ReadOnly: Boolean
  GuessMIMETypeEnabled: Boolean
}

input AwsStorageGatewayDescribeSnapshotScheduleInput {
  VolumeARN: String!
}

type AwsStorageGatewayDescribeSnapshotScheduleOutput {
  VolumeARN: String
  StartAt: Int
  RecurrenceInHours: Int
  Description: String
  Timezone: String
}

input AwsStorageGatewayDescribeStorediSCSIVolumesInput {
  VolumeARNs: [String]!
}

type AwsStorageGatewayDescribeStorediSCSIVolumesOutput {
  StorediSCSIVolumes: [AwsStorageGatewayDescribeStorediSCSIVolumesOutputStorediSCSIVolumes]
}

type AwsStorageGatewayDescribeStorediSCSIVolumesOutputStorediSCSIVolumes {
  VolumeARN: String
  VolumeId: String
  VolumeType: String
  VolumeStatus: String
  VolumeSizeInBytes: JSON
  VolumeProgress: JSON
  VolumeDiskId: String
  SourceSnapshotId: String
  PreservedExistingData: Boolean
  VolumeiSCSIAttributes: AwsStorageGatewayS2y
  CreatedDate: Date
  VolumeUsedInBytes: JSON
}

input AwsStorageGatewayDescribeTapeArchivesInput {
  TapeARNs: [String]
  Marker: String
  Limit: Int
}

type AwsStorageGatewayDescribeTapeArchivesOutput {
  TapeArchives: [AwsStorageGatewayDescribeTapeArchivesOutputTapeArchives]
  Marker: String
}

type AwsStorageGatewayDescribeTapeArchivesOutputTapeArchives {
  TapeARN: String
  TapeBarcode: String
  TapeCreatedDate: Date
  TapeSizeInBytes: JSON
  CompletionTime: Date
  RetrievedTo: String
  TapeStatus: String
  TapeUsedInBytes: JSON
}

input AwsStorageGatewayDescribeTapeRecoveryPointsInput {
  GatewayARN: String!
  Marker: String
  Limit: Int
}

type AwsStorageGatewayDescribeTapeRecoveryPointsOutput {
  GatewayARN: String
  TapeRecoveryPointInfos: [AwsStorageGatewayDescribeTapeRecoveryPointsOutputTapeRecoveryPointInfos]
  Marker: String
}

type AwsStorageGatewayDescribeTapeRecoveryPointsOutputTapeRecoveryPointInfos {
  TapeARN: String
  TapeRecoveryPointTime: Date
  TapeSizeInBytes: JSON
  TapeStatus: String
}

input AwsStorageGatewayDescribeTapesInput {
  GatewayARN: String!
  TapeARNs: [String]
  Marker: String
  Limit: Int
}

type AwsStorageGatewayDescribeTapesOutput {
  Tapes: [AwsStorageGatewayDescribeTapesOutputTapes]
  Marker: String
}

type AwsStorageGatewayDescribeTapesOutputTapes {
  TapeARN: String
  TapeBarcode: String
  TapeCreatedDate: Date
  TapeSizeInBytes: JSON
  TapeStatus: String
  VTLDevice: String
  Progress: JSON
  TapeUsedInBytes: JSON
}

input AwsStorageGatewayDescribeUploadBufferInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeUploadBufferOutput {
  GatewayARN: String
  DiskIds: [String]
  UploadBufferUsedInBytes: JSON
  UploadBufferAllocatedInBytes: JSON
}

input AwsStorageGatewayDescribeVTLDevicesInput {
  GatewayARN: String!
  VTLDeviceARNs: [String]
  Marker: String
  Limit: Int
}

type AwsStorageGatewayDescribeVTLDevicesOutput {
  GatewayARN: String
  VTLDevices: [AwsStorageGatewayDescribeVTLDevicesOutputVTLDevices]
  Marker: String
}

type AwsStorageGatewayDescribeVTLDevicesOutputVTLDevices {
  VTLDeviceARN: String
  VTLDeviceType: String
  VTLDeviceVendor: String
  VTLDeviceProductIdentifier: String
  DeviceiSCSIAttributes: AwsStorageGatewayDescribeVTLDevicesOutputVTLDevicesDeviceiSCSIAttributes
}

type AwsStorageGatewayDescribeVTLDevicesOutputVTLDevicesDeviceiSCSIAttributes {
  TargetARN: String
  NetworkInterfaceId: String
  NetworkInterfacePort: Int
  ChapEnabled: Boolean
}

input AwsStorageGatewayDescribeWorkingStorageInput {
  GatewayARN: String!
}

type AwsStorageGatewayDescribeWorkingStorageOutput {
  GatewayARN: String
  DiskIds: [String]
  WorkingStorageUsedInBytes: JSON
  WorkingStorageAllocatedInBytes: JSON
}

input AwsStorageGatewayDisableGatewayInput {
  GatewayARN: String!
}

type AwsStorageGatewayDisableGatewayOutput {
  GatewayARN: String
}

input AwsStorageGatewayListFileSharesInput {
  GatewayARN: String
  Limit: Int
  Marker: String
}

type AwsStorageGatewayListFileSharesOutput {
  Marker: String
  NextMarker: String
  FileShareInfoList: [AwsStorageGatewayListFileSharesOutputFileShareInfoList]
}

type AwsStorageGatewayListFileSharesOutputFileShareInfoList {
  FileShareARN: String
  FileShareId: String
  FileShareStatus: String
  GatewayARN: String
}

input AwsStorageGatewayListGatewaysInput {
  Marker: String
  Limit: Int
}

type AwsStorageGatewayListGatewaysOutput {
  Gateways: [AwsStorageGatewayListGatewaysOutputGateways]
  Marker: String
}

type AwsStorageGatewayListGatewaysOutputGateways {
  GatewayId: String
  GatewayARN: String
  GatewayType: String
  GatewayOperationalState: String
  GatewayName: String
}

input AwsStorageGatewayListLocalDisksInput {
  GatewayARN: String!
}

type AwsStorageGatewayListLocalDisksOutput {
  GatewayARN: String
  Disks: [AwsStorageGatewayListLocalDisksOutputDisks]
}

type AwsStorageGatewayListLocalDisksOutputDisks {
  DiskId: String
  DiskPath: String
  DiskNode: String
  DiskStatus: String
  DiskSizeInBytes: JSON
  DiskAllocationType: String
  DiskAllocationResource: String
}

input AwsStorageGatewayListTagsForResourceInput {
  ResourceARN: String!
  Marker: String
  Limit: Int
}

type AwsStorageGatewayListTagsForResourceOutput {
  ResourceARN: String
  Marker: String
  Tags: [AwsStorageGatewaySh]
}

input AwsStorageGatewayListTapesInput {
  TapeARNs: [String]
  Marker: String
  Limit: Int
}

type AwsStorageGatewayListTapesOutput {
  TapeInfos: [AwsStorageGatewayListTapesOutputTapeInfos]
  Marker: String
}

type AwsStorageGatewayListTapesOutputTapeInfos {
  TapeARN: String
  TapeBarcode: String
  TapeSizeInBytes: JSON
  TapeStatus: String
  GatewayARN: String
}

input AwsStorageGatewayListVolumeInitiatorsInput {
  VolumeARN: String!
}

type AwsStorageGatewayListVolumeInitiatorsOutput {
  Initiators: [String]
}

input AwsStorageGatewayListVolumeRecoveryPointsInput {
  GatewayARN: String!
}

type AwsStorageGatewayListVolumeRecoveryPointsOutput {
  GatewayARN: String
  VolumeRecoveryPointInfos: [AwsStorageGatewayListVolumeRecoveryPointsOutputVolumeRecoveryPointInfos]
}

type AwsStorageGatewayListVolumeRecoveryPointsOutputVolumeRecoveryPointInfos {
  VolumeARN: String
  VolumeSizeInBytes: JSON
  VolumeUsageInBytes: JSON
  VolumeRecoveryPointTime: String
}

input AwsStorageGatewayListVolumesInput {
  GatewayARN: String
  Marker: String
  Limit: Int
}

type AwsStorageGatewayListVolumesOutput {
  GatewayARN: String
  Marker: String
  VolumeInfos: [AwsStorageGatewayListVolumesOutputVolumeInfos]
}

type AwsStorageGatewayListVolumesOutputVolumeInfos {
  VolumeARN: String
  VolumeId: String
  GatewayARN: String
  GatewayId: String
  VolumeType: String
  VolumeSizeInBytes: JSON
}

input AwsStorageGatewayNotifyWhenUploadedInput {
  FileShareARN: String!
}

type AwsStorageGatewayNotifyWhenUploadedOutput {
  FileShareARN: String
  NotificationId: String
}

input AwsStorageGatewayRefreshCacheInput {
  FileShareARN: String!
}

type AwsStorageGatewayRefreshCacheOutput {
  FileShareARN: String
}

input AwsStorageGatewayRemoveTagsFromResourceInput {
  ResourceARN: String!
  TagKeys: [String]!
}

type AwsStorageGatewayRemoveTagsFromResourceOutput {
  ResourceARN: String
}

input AwsStorageGatewayResetCacheInput {
  GatewayARN: String!
}

type AwsStorageGatewayResetCacheOutput {
  GatewayARN: String
}

input AwsStorageGatewayRetrieveTapeArchiveInput {
  TapeARN: String!
  GatewayARN: String!
}

type AwsStorageGatewayRetrieveTapeArchiveOutput {
  TapeARN: String
}

input AwsStorageGatewayRetrieveTapeRecoveryPointInput {
  TapeARN: String!
  GatewayARN: String!
}

type AwsStorageGatewayRetrieveTapeRecoveryPointOutput {
  TapeARN: String
}

type AwsStorageGatewayS15 {
  FileMode: String
  DirectoryMode: String
  GroupId: JSON
  OwnerId: JSON
}

input AwsStorageGatewayS15Input {
  FileMode: String
  DirectoryMode: String
  GroupId: JSON
  OwnerId: JSON
}

type AwsStorageGatewayS2y {
  TargetARN: String
  NetworkInterfaceId: String
  NetworkInterfacePort: Int
  LunNumber: Int
  ChapEnabled: Boolean
}

input AwsStorageGatewaySetLocalConsolePasswordInput {
  GatewayARN: String!
  LocalConsolePassword: String!
}

type AwsStorageGatewaySetLocalConsolePasswordOutput {
  GatewayARN: String
}

type AwsStorageGatewaySh {
  Key: String!
  Value: String!
}

input AwsStorageGatewayShInput {
  Key: String!
  Value: String!
}

input AwsStorageGatewayShutdownGatewayInput {
  GatewayARN: String!
}

type AwsStorageGatewayShutdownGatewayOutput {
  GatewayARN: String
}

input AwsStorageGatewayStartGatewayInput {
  GatewayARN: String!
}

type AwsStorageGatewayStartGatewayOutput {
  GatewayARN: String
}

input AwsStorageGatewayUpdateBandwidthRateLimitInput {
  GatewayARN: String!
  AverageUploadRateLimitInBitsPerSec: JSON
  AverageDownloadRateLimitInBitsPerSec: JSON
}

type AwsStorageGatewayUpdateBandwidthRateLimitOutput {
  GatewayARN: String
}

input AwsStorageGatewayUpdateChapCredentialsInput {
  TargetARN: String!
  SecretToAuthenticateInitiator: String!
  InitiatorName: String!
  SecretToAuthenticateTarget: String
}

type AwsStorageGatewayUpdateChapCredentialsOutput {
  TargetARN: String
  InitiatorName: String
}

input AwsStorageGatewayUpdateGatewayInformationInput {
  GatewayARN: String!
  GatewayName: String
  GatewayTimezone: String
}

type AwsStorageGatewayUpdateGatewayInformationOutput {
  GatewayARN: String
  GatewayName: String
}

input AwsStorageGatewayUpdateGatewaySoftwareNowInput {
  GatewayARN: String!
}

type AwsStorageGatewayUpdateGatewaySoftwareNowOutput {
  GatewayARN: String
}

input AwsStorageGatewayUpdateMaintenanceStartTimeInput {
  GatewayARN: String!
  HourOfDay: Int!
  MinuteOfHour: Int!
  DayOfWeek: Int!
}

type AwsStorageGatewayUpdateMaintenanceStartTimeOutput {
  GatewayARN: String
}

input AwsStorageGatewayUpdateNFSFileShareInput {
  FileShareARN: String!
  KMSEncrypted: Boolean
  KMSKey: String
  NFSFileShareDefaults: AwsStorageGatewayS15Input
  DefaultStorageClass: String
  ClientList: [String]
  Squash: String
  ReadOnly: Boolean
  GuessMIMETypeEnabled: Boolean
}

type AwsStorageGatewayUpdateNFSFileShareOutput {
  FileShareARN: String
}

input AwsStorageGatewayUpdateSnapshotScheduleInput {
  VolumeARN: String!
  StartAt: Int!
  RecurrenceInHours: Int!
  Description: String
}

type AwsStorageGatewayUpdateSnapshotScheduleOutput {
  VolumeARN: String
}

input AwsStorageGatewayUpdateVTLDeviceTypeInput {
  VTLDeviceARN: String!
  DeviceType: String!
}

type AwsStorageGatewayUpdateVTLDeviceTypeOutput {
  VTLDeviceARN: String
}

# AWS Security Token Service (2011-06-15)
type AwsSTS {
  assumeRole(input: AwsSTSAssumeRoleInput!, config: AwsConfig): AwsSTSAssumeRoleOutput
  assumeRoleWithSAML(input: AwsSTSAssumeRoleWithSAMLInput!, config: AwsConfig): AwsSTSAssumeRoleWithSAMLOutput
  assumeRoleWithWebIdentity(input: AwsSTSAssumeRoleWithWebIdentityInput!, config: AwsConfig): AwsSTSAssumeRoleWithWebIdentityOutput
  decodeAuthorizationMessage(input: AwsSTSDecodeAuthorizationMessageInput!, config: AwsConfig): AwsSTSDecodeAuthorizationMessageOutput
  getCallerIdentity(input: JSON, config: AwsConfig): AwsSTSGetCallerIdentityOutput
  getFederationToken(input: AwsSTSGetFederationTokenInput!, config: AwsConfig): AwsSTSGetFederationTokenOutput
  getSessionToken(input: AwsSTSGetSessionTokenInput, config: AwsConfig): AwsSTSGetSessionTokenOutput
}

input AwsSTSAssumeRoleInput {
  RoleArn: String!
  RoleSessionName: String!
  Policy: String
  DurationSeconds: Int
  ExternalId: String
  SerialNumber: String
  TokenCode: String
}

type AwsSTSAssumeRoleOutput {
  Credentials: AwsSTSSa
  AssumedRoleUser: AwsSTSSf
  PackedPolicySize: Int
}

input AwsSTSAssumeRoleWithSAMLInput {
  RoleArn: String!
  PrincipalArn: String!
  SAMLAssertion: String!
  Policy: String
  DurationSeconds: Int
}

type AwsSTSAssumeRoleWithSAMLOutput {
  Credentials: AwsSTSSa
  AssumedRoleUser: AwsSTSSf
  PackedPolicySize: Int
  Subject: String
  SubjectType: String
  Issuer: String
  Audience: String
  NameQualifier: String
}

input AwsSTSAssumeRoleWithWebIdentityInput {
  RoleArn: String!
  RoleSessionName: String!
  WebIdentityToken: String!
  ProviderId: String
  Policy: String
  DurationSeconds: Int
}

type AwsSTSAssumeRoleWithWebIdentityOutput {
  Credentials: AwsSTSSa
  SubjectFromWebIdentityToken: String
  AssumedRoleUser: AwsSTSSf
  PackedPolicySize: Int
  Provider: String
  Audience: String
}

input AwsSTSDecodeAuthorizationMessageInput {
  EncodedMessage: String!
}

type AwsSTSDecodeAuthorizationMessageOutput {
  DecodedMessage: String
}

type AwsSTSGetCallerIdentityOutput {
  UserId: String
  Account: String
  Arn: String
}

input AwsSTSGetFederationTokenInput {
  Name: String!
  Policy: String
  DurationSeconds: Int
}

type AwsSTSGetFederationTokenOutput {
  Credentials: AwsSTSSa
  FederatedUser: AwsSTSGetFederationTokenOutputFederatedUser
  PackedPolicySize: Int
}

type AwsSTSGetFederationTokenOutputFederatedUser {
  FederatedUserId: String!
  Arn: String!
}

input AwsSTSGetSessionTokenInput {
  DurationSeconds: Int
  SerialNumber: String
  TokenCode: String
}

type AwsSTSGetSessionTokenOutput {
  Credentials: AwsSTSSa
}

type AwsSTSSa {
  AccessKeyId: String!
  SecretAccessKey: String!
  SessionToken: String!
  Expiration: Date!
}

type AwsSTSSf {
  AssumedRoleId: String!
  Arn: String!
}

# AWS Support (2013-04-15)
type AwsSupport {
  addAttachmentsToSet(input: AwsSupportAddAttachmentsToSetInput!, config: AwsConfig): AwsSupportAddAttachmentsToSetOutput
  addCommunicationToCase(input: AwsSupportAddCommunicationToCaseInput!, config: AwsConfig): AwsSupportAddCommunicationToCaseOutput
  createCase(input: AwsSupportCreateCaseInput!, config: AwsConfig): AwsSupportCreateCaseOutput
  describeAttachment(input: AwsSupportDescribeAttachmentInput!, config: AwsConfig): AwsSupportDescribeAttachmentOutput
  describeCases(input: AwsSupportDescribeCasesInput, config: AwsConfig): AwsSupportDescribeCasesOutput
  describeCommunications(input: AwsSupportDescribeCommunicationsInput!, config: AwsConfig): AwsSupportDescribeCommunicationsOutput
  describeServices(input: AwsSupportDescribeServicesInput, config: AwsConfig): AwsSupportDescribeServicesOutput
  describeSeverityLevels(input: AwsSupportDescribeSeverityLevelsInput, config: AwsConfig): AwsSupportDescribeSeverityLevelsOutput
  describeTrustedAdvisorCheckRefreshStatuses(input: AwsSupportDescribeTrustedAdvisorCheckRefreshStatusesInput!, config: AwsConfig): AwsSupportDescribeTrustedAdvisorCheckRefreshStatusesOutput
  describeTrustedAdvisorCheckResult(input: AwsSupportDescribeTrustedAdvisorCheckResultInput!, config: AwsConfig): AwsSupportDescribeTrustedAdvisorCheckResultOutput
  describeTrustedAdvisorCheckSummaries(input: AwsSupportDescribeTrustedAdvisorCheckSummariesInput!, config: AwsConfig): AwsSupportDescribeTrustedAdvisorCheckSummariesOutput
  describeTrustedAdvisorChecks(input: AwsSupportDescribeTrustedAdvisorChecksInput!, config: AwsConfig): AwsSupportDescribeTrustedAdvisorChecksOutput
  refreshTrustedAdvisorCheck(input: AwsSupportRefreshTrustedAdvisorCheckInput!, config: AwsConfig): AwsSupportRefreshTrustedAdvisorCheckOutput
  resolveCase(input: AwsSupportResolveCaseInput, config: AwsConfig): AwsSupportResolveCaseOutput
}

input AwsSupportAddAttachmentsToSetInput {
  attachmentSetId: String
  attachments: [AwsSupportS4Input]!
}

type AwsSupportAddAttachmentsToSetOutput {
  attachmentSetId: String
  expiryTime: String
}

input AwsSupportAddCommunicationToCaseInput {
  caseId: String
  communicationBody: String!
  ccEmailAddresses: [String]
  attachmentSetId: String
}

type AwsSupportAddCommunicationToCaseOutput {
  result: Boolean
}

input AwsSupportCreateCaseInput {
  subject: String!
  serviceCode: String
  severityCode: String
  categoryCode: String
  communicationBody: String!
  ccEmailAddresses: [String]
  language: String
  issueType: String
  attachmentSetId: String
}

type AwsSupportCreateCaseOutput {
  caseId: String
}

input AwsSupportDescribeAttachmentInput {
  attachmentId: String!
}

type AwsSupportDescribeAttachmentOutput {
  attachment: AwsSupportS4
}

input AwsSupportDescribeCasesInput {
  caseIdList: [String]
  displayId: String
  afterTime: String
  beforeTime: String
  includeResolvedCases: Boolean
  nextToken: String
  maxResults: Int
  language: String
  includeCommunications: Boolean
}

type AwsSupportDescribeCasesOutput {
  cases: [AwsSupportDescribeCasesOutputCases]
  nextToken: String
}

type AwsSupportDescribeCasesOutputCases {
  caseId: String
  displayId: String
  subject: String
  status: String
  serviceCode: String
  categoryCode: String
  severityCode: String
  submittedBy: String
  timeCreated: String
  recentCommunications: AwsSupportDescribeCasesOutputCasesRecentCommunications
  ccEmailAddresses: [String]
  language: String
}

type AwsSupportDescribeCasesOutputCasesRecentCommunications {
  communications: [AwsSupportS17]
  nextToken: String
}

input AwsSupportDescribeCommunicationsInput {
  caseId: String!
  beforeTime: String
  afterTime: String
  nextToken: String
  maxResults: Int
}

type AwsSupportDescribeCommunicationsOutput {
  communications: [AwsSupportS17]
  nextToken: String
}

input AwsSupportDescribeServicesInput {
  serviceCodeList: [String]
  language: String
}

type AwsSupportDescribeServicesOutput {
  services: [AwsSupportDescribeServicesOutputServices]
}

type AwsSupportDescribeServicesOutputServices {
  code: String
  name: String
  categories: [AwsSupportDescribeServicesOutputServicesCategories]
}

type AwsSupportDescribeServicesOutputServicesCategories {
  code: String
  name: String
}

input AwsSupportDescribeSeverityLevelsInput {
  language: String
}

type AwsSupportDescribeSeverityLevelsOutput {
  severityLevels: [AwsSupportDescribeSeverityLevelsOutputSeverityLevels]
}

type AwsSupportDescribeSeverityLevelsOutputSeverityLevels {
  code: String
  name: String
}

input AwsSupportDescribeTrustedAdvisorCheckRefreshStatusesInput {
  checkIds: [String]!
}

type AwsSupportDescribeTrustedAdvisorCheckRefreshStatusesOutput {
  statuses: [AwsSupportS1x]!
}

input AwsSupportDescribeTrustedAdvisorCheckResultInput {
  checkId: String!
  language: String
}

type AwsSupportDescribeTrustedAdvisorCheckResultOutput {
  result: AwsSupportDescribeTrustedAdvisorCheckResultOutputResult
}

type AwsSupportDescribeTrustedAdvisorCheckResultOutputResult {
  checkId: String!
  timestamp: String!
  status: String!
  resourcesSummary: AwsSupportS22!
  categorySpecificSummary: AwsSupportS23!
  flaggedResources: [AwsSupportDescribeTrustedAdvisorCheckResultOutputResultFlaggedResources]!
}

type AwsSupportDescribeTrustedAdvisorCheckResultOutputResultFlaggedResources {
  status: String!
  region: String
  resourceId: String!
  isSuppressed: Boolean
  metadata: [String]!
}

input AwsSupportDescribeTrustedAdvisorChecksInput {
  language: String!
}

type AwsSupportDescribeTrustedAdvisorChecksOutput {
  checks: [AwsSupportDescribeTrustedAdvisorChecksOutputChecks]!
}

type AwsSupportDescribeTrustedAdvisorChecksOutputChecks {
  id: String!
  name: String!
  description: String!
  category: String!
  metadata: [String]!
}

input AwsSupportDescribeTrustedAdvisorCheckSummariesInput {
  checkIds: [String]!
}

type AwsSupportDescribeTrustedAdvisorCheckSummariesOutput {
  summaries: [AwsSupportDescribeTrustedAdvisorCheckSummariesOutputSummaries]!
}

type AwsSupportDescribeTrustedAdvisorCheckSummariesOutputSummaries {
  checkId: String!
  timestamp: String!
  status: String!
  hasFlaggedResources: Boolean
  resourcesSummary: AwsSupportS22!
  categorySpecificSummary: AwsSupportS23!
}

input AwsSupportRefreshTrustedAdvisorCheckInput {
  checkId: String!
}

type AwsSupportRefreshTrustedAdvisorCheckOutput {
  status: AwsSupportS1x!
}

input AwsSupportResolveCaseInput {
  caseId: String
}

type AwsSupportResolveCaseOutput {
  initialCaseStatus: String
  finalCaseStatus: String
}

type AwsSupportS17 {
  caseId: String
  body: String
  submittedBy: String
  timeCreated: String
  attachmentSet: [AwsSupportS17AttachmentSet]
}

type AwsSupportS17AttachmentSet {
  attachmentId: String
  fileName: String
}

type AwsSupportS1x {
  checkId: String!
  status: String!
  millisUntilNextRefreshable: JSON!
}

type AwsSupportS22 {
  resourcesProcessed: JSON!
  resourcesFlagged: JSON!
  resourcesIgnored: JSON!
  resourcesSuppressed: JSON!
}

type AwsSupportS23 {
  costOptimizing: AwsSupportS23CostOptimizing
}

type AwsSupportS23CostOptimizing {
  estimatedMonthlySavings: JSON!
  estimatedPercentMonthlySavings: JSON!
}

type AwsSupportS4 {
  fileName: String
  data: JSON
}

input AwsSupportS4Input {
  fileName: String
  data: JSON
}

# Amazon Simple Workflow Service (2012-01-25)
type AwsSWF {
  countClosedWorkflowExecutions(input: AwsSWFCountClosedWorkflowExecutionsInput!, config: AwsConfig): JSON
  countOpenWorkflowExecutions(input: AwsSWFCountOpenWorkflowExecutionsInput!, config: AwsConfig): JSON
  countPendingActivityTasks(input: AwsSWFCountPendingActivityTasksInput!, config: AwsConfig): JSON
  countPendingDecisionTasks(input: AwsSWFCountPendingDecisionTasksInput!, config: AwsConfig): JSON
  deprecateActivityType(input: AwsSWFDeprecateActivityTypeInput!, config: AwsConfig): JSON
  deprecateDomain(input: AwsSWFDeprecateDomainInput!, config: AwsConfig): JSON
  deprecateWorkflowType(input: AwsSWFDeprecateWorkflowTypeInput!, config: AwsConfig): JSON
  describeActivityType(input: AwsSWFDescribeActivityTypeInput!, config: AwsConfig): AwsSWFDescribeActivityTypeOutput
  describeDomain(input: AwsSWFDescribeDomainInput!, config: AwsConfig): AwsSWFDescribeDomainOutput
  describeWorkflowExecution(input: AwsSWFDescribeWorkflowExecutionInput!, config: AwsConfig): AwsSWFDescribeWorkflowExecutionOutput
  describeWorkflowType(input: AwsSWFDescribeWorkflowTypeInput!, config: AwsConfig): AwsSWFDescribeWorkflowTypeOutput
  getWorkflowExecutionHistory(input: AwsSWFGetWorkflowExecutionHistoryInput!, config: AwsConfig): AwsSWFGetWorkflowExecutionHistoryOutput
  listActivityTypes(input: AwsSWFListActivityTypesInput!, config: AwsConfig): AwsSWFListActivityTypesOutput
  listClosedWorkflowExecutions(input: AwsSWFListClosedWorkflowExecutionsInput!, config: AwsConfig): JSON
  listDomains(input: AwsSWFListDomainsInput!, config: AwsConfig): AwsSWFListDomainsOutput
  listOpenWorkflowExecutions(input: AwsSWFListOpenWorkflowExecutionsInput!, config: AwsConfig): JSON
  listWorkflowTypes(input: AwsSWFListWorkflowTypesInput!, config: AwsConfig): AwsSWFListWorkflowTypesOutput
  pollForActivityTask(input: AwsSWFPollForActivityTaskInput!, config: AwsConfig): AwsSWFPollForActivityTaskOutput
  pollForDecisionTask(input: AwsSWFPollForDecisionTaskInput!, config: AwsConfig): AwsSWFPollForDecisionTaskOutput
  recordActivityTaskHeartbeat(input: AwsSWFRecordActivityTaskHeartbeatInput!, config: AwsConfig): AwsSWFRecordActivityTaskHeartbeatOutput
  registerActivityType(input: AwsSWFRegisterActivityTypeInput!, config: AwsConfig): JSON
  registerDomain(input: AwsSWFRegisterDomainInput!, config: AwsConfig): JSON
  registerWorkflowType(input: AwsSWFRegisterWorkflowTypeInput!, config: AwsConfig): JSON
  requestCancelWorkflowExecution(input: AwsSWFRequestCancelWorkflowExecutionInput!, config: AwsConfig): JSON
  respondActivityTaskCanceled(input: AwsSWFRespondActivityTaskCanceledInput!, config: AwsConfig): JSON
  respondActivityTaskCompleted(input: AwsSWFRespondActivityTaskCompletedInput!, config: AwsConfig): JSON
  respondActivityTaskFailed(input: AwsSWFRespondActivityTaskFailedInput!, config: AwsConfig): JSON
  respondDecisionTaskCompleted(input: AwsSWFRespondDecisionTaskCompletedInput!, config: AwsConfig): JSON
  signalWorkflowExecution(input: AwsSWFSignalWorkflowExecutionInput!, config: AwsConfig): JSON
  startWorkflowExecution(input: AwsSWFStartWorkflowExecutionInput!, config: AwsConfig): AwsSWFStartWorkflowExecutionOutput
  terminateWorkflowExecution(input: AwsSWFTerminateWorkflowExecutionInput!, config: AwsConfig): JSON
}

input AwsSWFCountClosedWorkflowExecutionsInput {
  domain: String!
  startTimeFilter: AwsSWFS3Input
  closeTimeFilter: AwsSWFS3Input
  executionFilter: AwsSWFS5Input
  typeFilter: AwsSWFS7Input
  tagFilter: AwsSWFSaInput
  closeStatusFilter: AwsSWFScInput
}

input AwsSWFCountOpenWorkflowExecutionsInput {
  domain: String!
  startTimeFilter: AwsSWFS3Input!
  typeFilter: AwsSWFS7Input
  tagFilter: AwsSWFSaInput
  executionFilter: AwsSWFS5Input
}

input AwsSWFCountPendingActivityTasksInput {
  domain: String!
  taskList: AwsSWFSjInput!
}

input AwsSWFCountPendingDecisionTasksInput {
  domain: String!
  taskList: AwsSWFSjInput!
}

input AwsSWFDeprecateActivityTypeInput {
  domain: String!
  activityType: AwsSWFSnInput!
}

input AwsSWFDeprecateDomainInput {
  name: String!
}

input AwsSWFDeprecateWorkflowTypeInput {
  domain: String!
  workflowType: AwsSWFSrInput!
}

input AwsSWFDescribeActivityTypeInput {
  domain: String!
  activityType: AwsSWFSnInput!
}

type AwsSWFDescribeActivityTypeOutput {
  typeInfo: AwsSWFSu!
  configuration: AwsSWFDescribeActivityTypeOutputConfiguration!
}

type AwsSWFDescribeActivityTypeOutputConfiguration {
  defaultTaskStartToCloseTimeout: String
  defaultTaskHeartbeatTimeout: String
  defaultTaskList: AwsSWFSj
  defaultTaskPriority: String
  defaultTaskScheduleToStartTimeout: String
  defaultTaskScheduleToCloseTimeout: String
}

input AwsSWFDescribeDomainInput {
  name: String!
}

type AwsSWFDescribeDomainOutput {
  domainInfo: AwsSWFS12!
  configuration: AwsSWFDescribeDomainOutputConfiguration!
}

type AwsSWFDescribeDomainOutputConfiguration {
  workflowExecutionRetentionPeriodInDays: String!
}

input AwsSWFDescribeWorkflowExecutionInput {
  domain: String!
  execution: AwsSWFS16Input!
}

type AwsSWFDescribeWorkflowExecutionOutput {
  executionInfo: AwsSWFS19!
  executionConfiguration: AwsSWFDescribeWorkflowExecutionOutputExecutionConfiguration!
  openCounts: AwsSWFDescribeWorkflowExecutionOutputOpenCounts!
  latestActivityTaskTimestamp: Date
  latestExecutionContext: String
}

type AwsSWFDescribeWorkflowExecutionOutputExecutionConfiguration {
  taskStartToCloseTimeout: String!
  executionStartToCloseTimeout: String!
  taskList: AwsSWFSj!
  taskPriority: String
  childPolicy: String!
  lambdaRole: String
}

type AwsSWFDescribeWorkflowExecutionOutputOpenCounts {
  openActivityTasks: Int!
  openDecisionTasks: Int!
  openTimers: Int!
  openChildWorkflowExecutions: Int!
  openLambdaFunctions: Int
}

input AwsSWFDescribeWorkflowTypeInput {
  domain: String!
  workflowType: AwsSWFSrInput!
}

type AwsSWFDescribeWorkflowTypeOutput {
  typeInfo: AwsSWFS1m!
  configuration: AwsSWFDescribeWorkflowTypeOutputConfiguration!
}

type AwsSWFDescribeWorkflowTypeOutputConfiguration {
  defaultTaskStartToCloseTimeout: String
  defaultExecutionStartToCloseTimeout: String
  defaultTaskList: AwsSWFSj
  defaultTaskPriority: String
  defaultChildPolicy: String
  defaultLambdaRole: String
}

input AwsSWFGetWorkflowExecutionHistoryInput {
  domain: String!
  execution: AwsSWFS16Input!
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSWFGetWorkflowExecutionHistoryOutput {
  events: [AwsSWFS1t]!
  nextPageToken: String
}

input AwsSWFListActivityTypesInput {
  domain: String!
  name: String
  registrationStatus: String!
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSWFListActivityTypesOutput {
  typeInfos: [AwsSWFSu]!
  nextPageToken: String
}

input AwsSWFListClosedWorkflowExecutionsInput {
  domain: String!
  startTimeFilter: AwsSWFS3Input
  closeTimeFilter: AwsSWFS3Input
  executionFilter: AwsSWFS5Input
  closeStatusFilter: AwsSWFScInput
  typeFilter: AwsSWFS7Input
  tagFilter: AwsSWFSaInput
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

input AwsSWFListDomainsInput {
  nextPageToken: String
  registrationStatus: String!
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSWFListDomainsOutput {
  domainInfos: [AwsSWFS12]!
  nextPageToken: String
}

input AwsSWFListOpenWorkflowExecutionsInput {
  domain: String!
  startTimeFilter: AwsSWFS3Input!
  typeFilter: AwsSWFS7Input
  tagFilter: AwsSWFSaInput
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
  executionFilter: AwsSWFS5Input
}

input AwsSWFListWorkflowTypesInput {
  domain: String!
  name: String
  registrationStatus: String!
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSWFListWorkflowTypesOutput {
  typeInfos: [AwsSWFS1m]!
  nextPageToken: String
}

input AwsSWFPollForActivityTaskInput {
  domain: String!
  taskList: AwsSWFSjInput!
  identity: String
}

type AwsSWFPollForActivityTaskOutput {
  taskToken: String!
  activityId: String!
  startedEventId: JSON!
  workflowExecution: AwsSWFS16!
  activityType: AwsSWFSn!
  input: String
}

input AwsSWFPollForDecisionTaskInput {
  domain: String!
  taskList: AwsSWFSjInput!
  identity: String
  nextPageToken: String
  maximumPageSize: Int
  reverseOrder: Boolean
}

type AwsSWFPollForDecisionTaskOutput {
  taskToken: String!
  startedEventId: JSON!
  workflowExecution: AwsSWFS16!
  workflowType: AwsSWFSr!
  events: [AwsSWFS1t]!
  nextPageToken: String
  previousStartedEventId: JSON
}

input AwsSWFRecordActivityTaskHeartbeatInput {
  taskToken: String!
  details: String
}

type AwsSWFRecordActivityTaskHeartbeatOutput {
  cancelRequested: Boolean!
}

input AwsSWFRegisterActivityTypeInput {
  domain: String!
  name: String!
  version: String!
  description: String
  defaultTaskStartToCloseTimeout: String
  defaultTaskHeartbeatTimeout: String
  defaultTaskList: AwsSWFSjInput
  defaultTaskPriority: String
  defaultTaskScheduleToStartTimeout: String
  defaultTaskScheduleToCloseTimeout: String
}

input AwsSWFRegisterDomainInput {
  name: String!
  description: String
  workflowExecutionRetentionPeriodInDays: String!
}

input AwsSWFRegisterWorkflowTypeInput {
  domain: String!
  name: String!
  version: String!
  description: String
  defaultTaskStartToCloseTimeout: String
  defaultExecutionStartToCloseTimeout: String
  defaultTaskList: AwsSWFSjInput
  defaultTaskPriority: String
  defaultChildPolicy: String
  defaultLambdaRole: String
}

input AwsSWFRequestCancelWorkflowExecutionInput {
  domain: String!
  workflowId: String!
  runId: String
}

input AwsSWFRespondActivityTaskCanceledInput {
  taskToken: String!
  details: String
}

input AwsSWFRespondActivityTaskCompletedInput {
  taskToken: String!
  result: String
}

input AwsSWFRespondActivityTaskFailedInput {
  taskToken: String!
  reason: String
  details: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsCancelTimerDecisionAttributesInput {
  timerId: String!
}

input AwsSWFRespondDecisionTaskCompletedDecisionsCancelWorkflowExecutionDecisionAttributesInput {
  details: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsCompleteWorkflowExecutionDecisionAttributesInput {
  result: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsContinueAsNewWorkflowExecutionDecisionAttributesInput {
  input: String
  executionStartToCloseTimeout: String
  taskList: AwsSWFSjInput
  taskPriority: String
  taskStartToCloseTimeout: String
  childPolicy: String
  tagList: [String]
  workflowTypeVersion: String
  lambdaRole: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsFailWorkflowExecutionDecisionAttributesInput {
  reason: String
  details: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsInput {
  decisionType: String!
  scheduleActivityTaskDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsScheduleActivityTaskDecisionAttributesInput
  requestCancelActivityTaskDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsRequestCancelActivityTaskDecisionAttributesInput
  completeWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsCompleteWorkflowExecutionDecisionAttributesInput
  failWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsFailWorkflowExecutionDecisionAttributesInput
  cancelWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsCancelWorkflowExecutionDecisionAttributesInput
  continueAsNewWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsContinueAsNewWorkflowExecutionDecisionAttributesInput
  recordMarkerDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsRecordMarkerDecisionAttributesInput
  startTimerDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsStartTimerDecisionAttributesInput
  cancelTimerDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsCancelTimerDecisionAttributesInput
  signalExternalWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsSignalExternalWorkflowExecutionDecisionAttributesInput
  requestCancelExternalWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsRequestCancelExternalWorkflowExecutionDecisionAttributesInput
  startChildWorkflowExecutionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsStartChildWorkflowExecutionDecisionAttributesInput
  scheduleLambdaFunctionDecisionAttributes: AwsSWFRespondDecisionTaskCompletedDecisionsScheduleLambdaFunctionDecisionAttributesInput
}

input AwsSWFRespondDecisionTaskCompletedDecisionsRecordMarkerDecisionAttributesInput {
  markerName: String!
  details: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsRequestCancelActivityTaskDecisionAttributesInput {
  activityId: String!
}

input AwsSWFRespondDecisionTaskCompletedDecisionsRequestCancelExternalWorkflowExecutionDecisionAttributesInput {
  workflowId: String!
  runId: String
  control: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsScheduleActivityTaskDecisionAttributesInput {
  activityType: AwsSWFSnInput!
  activityId: String!
  control: String
  input: String
  scheduleToCloseTimeout: String
  taskList: AwsSWFSjInput
  taskPriority: String
  scheduleToStartTimeout: String
  startToCloseTimeout: String
  heartbeatTimeout: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsScheduleLambdaFunctionDecisionAttributesInput {
  id: String!
  name: String!
  control: String
  input: String
  startToCloseTimeout: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsSignalExternalWorkflowExecutionDecisionAttributesInput {
  workflowId: String!
  runId: String
  signalName: String!
  input: String
  control: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsStartChildWorkflowExecutionDecisionAttributesInput {
  workflowType: AwsSWFSrInput!
  workflowId: String!
  control: String
  input: String
  executionStartToCloseTimeout: String
  taskList: AwsSWFSjInput
  taskPriority: String
  taskStartToCloseTimeout: String
  childPolicy: String
  tagList: [String]
  lambdaRole: String
}

input AwsSWFRespondDecisionTaskCompletedDecisionsStartTimerDecisionAttributesInput {
  timerId: String!
  control: String
  startToFireTimeout: String!
}

input AwsSWFRespondDecisionTaskCompletedInput {
  taskToken: String!
  decisions: [AwsSWFRespondDecisionTaskCompletedDecisionsInput]
  executionContext: String
}

type AwsSWFS12 {
  name: String!
  status: String!
  description: String
}

type AwsSWFS16 {
  workflowId: String!
  runId: String!
}

input AwsSWFS16Input {
  workflowId: String!
  runId: String!
}

type AwsSWFS19 {
  execution: AwsSWFS16!
  workflowType: AwsSWFSr!
  startTimestamp: Date!
  closeTimestamp: Date
  executionStatus: String!
  closeStatus: String
  parent: AwsSWFS16
  tagList: [String]
  cancelRequested: Boolean
}

type AwsSWFS1m {
  workflowType: AwsSWFSr!
  status: String!
  description: String
  creationDate: Date!
  deprecationDate: Date
}

type AwsSWFS1t {
  eventTimestamp: Date!
  eventType: String!
  eventId: JSON!
  workflowExecutionStartedEventAttributes: AwsSWFS1tWorkflowExecutionStartedEventAttributes
  workflowExecutionCompletedEventAttributes: AwsSWFS1tWorkflowExecutionCompletedEventAttributes
  completeWorkflowExecutionFailedEventAttributes: AwsSWFS1tCompleteWorkflowExecutionFailedEventAttributes
  workflowExecutionFailedEventAttributes: AwsSWFS1tWorkflowExecutionFailedEventAttributes
  failWorkflowExecutionFailedEventAttributes: AwsSWFS1tFailWorkflowExecutionFailedEventAttributes
  workflowExecutionTimedOutEventAttributes: AwsSWFS1tWorkflowExecutionTimedOutEventAttributes
  workflowExecutionCanceledEventAttributes: AwsSWFS1tWorkflowExecutionCanceledEventAttributes
  cancelWorkflowExecutionFailedEventAttributes: AwsSWFS1tCancelWorkflowExecutionFailedEventAttributes
  workflowExecutionContinuedAsNewEventAttributes: AwsSWFS1tWorkflowExecutionContinuedAsNewEventAttributes
  continueAsNewWorkflowExecutionFailedEventAttributes: AwsSWFS1tContinueAsNewWorkflowExecutionFailedEventAttributes
  workflowExecutionTerminatedEventAttributes: AwsSWFS1tWorkflowExecutionTerminatedEventAttributes
  workflowExecutionCancelRequestedEventAttributes: AwsSWFS1tWorkflowExecutionCancelRequestedEventAttributes
  decisionTaskScheduledEventAttributes: AwsSWFS1tDecisionTaskScheduledEventAttributes
  decisionTaskStartedEventAttributes: AwsSWFS1tDecisionTaskStartedEventAttributes
  decisionTaskCompletedEventAttributes: AwsSWFS1tDecisionTaskCompletedEventAttributes
  decisionTaskTimedOutEventAttributes: AwsSWFS1tDecisionTaskTimedOutEventAttributes
  activityTaskScheduledEventAttributes: AwsSWFS1tActivityTaskScheduledEventAttributes
  activityTaskStartedEventAttributes: AwsSWFS1tActivityTaskStartedEventAttributes
  activityTaskCompletedEventAttributes: AwsSWFS1tActivityTaskCompletedEventAttributes
  activityTaskFailedEventAttributes: AwsSWFS1tActivityTaskFailedEventAttributes
  activityTaskTimedOutEventAttributes: AwsSWFS1tActivityTaskTimedOutEventAttributes
  activityTaskCanceledEventAttributes: AwsSWFS1tActivityTaskCanceledEventAttributes
  activityTaskCancelRequestedEventAttributes: AwsSWFS1tActivityTaskCancelRequestedEventAttributes
  workflowExecutionSignaledEventAttributes: AwsSWFS1tWorkflowExecutionSignaledEventAttributes
  markerRecordedEventAttributes: AwsSWFS1tMarkerRecordedEventAttributes
  recordMarkerFailedEventAttributes: AwsSWFS1tRecordMarkerFailedEventAttributes
  timerStartedEventAttributes: AwsSWFS1tTimerStartedEventAttributes
  timerFiredEventAttributes: AwsSWFS1tTimerFiredEventAttributes
  timerCanceledEventAttributes: AwsSWFS1tTimerCanceledEventAttributes
  startChildWorkflowExecutionInitiatedEventAttributes: AwsSWFS1tStartChildWorkflowExecutionInitiatedEventAttributes
  childWorkflowExecutionStartedEventAttributes: AwsSWFS1tChildWorkflowExecutionStartedEventAttributes
  childWorkflowExecutionCompletedEventAttributes: AwsSWFS1tChildWorkflowExecutionCompletedEventAttributes
  childWorkflowExecutionFailedEventAttributes: AwsSWFS1tChildWorkflowExecutionFailedEventAttributes
  childWorkflowExecutionTimedOutEventAttributes: AwsSWFS1tChildWorkflowExecutionTimedOutEventAttributes
  childWorkflowExecutionCanceledEventAttributes: AwsSWFS1tChildWorkflowExecutionCanceledEventAttributes
  childWorkflowExecutionTerminatedEventAttributes: AwsSWFS1tChildWorkflowExecutionTerminatedEventAttributes
  signalExternalWorkflowExecutionInitiatedEventAttributes: AwsSWFS1tSignalExternalWorkflowExecutionInitiatedEventAttributes
  externalWorkflowExecutionSignaledEventAttributes: AwsSWFS1tExternalWorkflowExecutionSignaledEventAttributes
  signalExternalWorkflowExecutionFailedEventAttributes: AwsSWFS1tSignalExternalWorkflowExecutionFailedEventAttributes
  externalWorkflowExecutionCancelRequestedEventAttributes: AwsSWFS1tExternalWorkflowExecutionCancelRequestedEventAttributes
  requestCancelExternalWorkflowExecutionInitiatedEventAttributes: AwsSWFS1tRequestCancelExternalWorkflowExecutionInitiatedEventAttributes
  requestCancelExternalWorkflowExecutionFailedEventAttributes: AwsSWFS1tRequestCancelExternalWorkflowExecutionFailedEventAttributes
  scheduleActivityTaskFailedEventAttributes: AwsSWFS1tScheduleActivityTaskFailedEventAttributes
  requestCancelActivityTaskFailedEventAttributes: AwsSWFS1tRequestCancelActivityTaskFailedEventAttributes
  startTimerFailedEventAttributes: AwsSWFS1tStartTimerFailedEventAttributes
  cancelTimerFailedEventAttributes: AwsSWFS1tCancelTimerFailedEventAttributes
  startChildWorkflowExecutionFailedEventAttributes: AwsSWFS1tStartChildWorkflowExecutionFailedEventAttributes
  lambdaFunctionScheduledEventAttributes: AwsSWFS1tLambdaFunctionScheduledEventAttributes
  lambdaFunctionStartedEventAttributes: AwsSWFS1tLambdaFunctionStartedEventAttributes
  lambdaFunctionCompletedEventAttributes: AwsSWFS1tLambdaFunctionCompletedEventAttributes
  lambdaFunctionFailedEventAttributes: AwsSWFS1tLambdaFunctionFailedEventAttributes
  lambdaFunctionTimedOutEventAttributes: AwsSWFS1tLambdaFunctionTimedOutEventAttributes
  scheduleLambdaFunctionFailedEventAttributes: AwsSWFS1tScheduleLambdaFunctionFailedEventAttributes
  startLambdaFunctionFailedEventAttributes: AwsSWFS1tStartLambdaFunctionFailedEventAttributes
}

type AwsSWFS1tActivityTaskCanceledEventAttributes {
  details: String
  scheduledEventId: JSON!
  startedEventId: JSON!
  latestCancelRequestedEventId: JSON
}

type AwsSWFS1tActivityTaskCancelRequestedEventAttributes {
  decisionTaskCompletedEventId: JSON!
  activityId: String!
}

type AwsSWFS1tActivityTaskCompletedEventAttributes {
  result: String
  scheduledEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tActivityTaskFailedEventAttributes {
  reason: String
  details: String
  scheduledEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tActivityTaskScheduledEventAttributes {
  activityType: AwsSWFSn!
  activityId: String!
  input: String
  control: String
  scheduleToStartTimeout: String
  scheduleToCloseTimeout: String
  startToCloseTimeout: String
  taskList: AwsSWFSj!
  taskPriority: String
  decisionTaskCompletedEventId: JSON!
  heartbeatTimeout: String
}

type AwsSWFS1tActivityTaskStartedEventAttributes {
  identity: String
  scheduledEventId: JSON!
}

type AwsSWFS1tActivityTaskTimedOutEventAttributes {
  timeoutType: String!
  scheduledEventId: JSON!
  startedEventId: JSON!
  details: String
}

type AwsSWFS1tCancelTimerFailedEventAttributes {
  timerId: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tCancelWorkflowExecutionFailedEventAttributes {
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tChildWorkflowExecutionCanceledEventAttributes {
  workflowExecution: AwsSWFS16!
  workflowType: AwsSWFSr!
  details: String
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tChildWorkflowExecutionCompletedEventAttributes {
  workflowExecution: AwsSWFS16!
  workflowType: AwsSWFSr!
  result: String
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tChildWorkflowExecutionFailedEventAttributes {
  workflowExecution: AwsSWFS16!
  workflowType: AwsSWFSr!
  reason: String
  details: String
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tChildWorkflowExecutionStartedEventAttributes {
  workflowExecution: AwsSWFS16!
  workflowType: AwsSWFSr!
  initiatedEventId: JSON!
}

type AwsSWFS1tChildWorkflowExecutionTerminatedEventAttributes {
  workflowExecution: AwsSWFS16!
  workflowType: AwsSWFSr!
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tChildWorkflowExecutionTimedOutEventAttributes {
  workflowExecution: AwsSWFS16!
  workflowType: AwsSWFSr!
  timeoutType: String!
  initiatedEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tCompleteWorkflowExecutionFailedEventAttributes {
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tContinueAsNewWorkflowExecutionFailedEventAttributes {
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tDecisionTaskCompletedEventAttributes {
  executionContext: String
  scheduledEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tDecisionTaskScheduledEventAttributes {
  taskList: AwsSWFSj!
  taskPriority: String
  startToCloseTimeout: String
}

type AwsSWFS1tDecisionTaskStartedEventAttributes {
  identity: String
  scheduledEventId: JSON!
}

type AwsSWFS1tDecisionTaskTimedOutEventAttributes {
  timeoutType: String!
  scheduledEventId: JSON!
  startedEventId: JSON!
}

type AwsSWFS1tExternalWorkflowExecutionCancelRequestedEventAttributes {
  workflowExecution: AwsSWFS16!
  initiatedEventId: JSON!
}

type AwsSWFS1tExternalWorkflowExecutionSignaledEventAttributes {
  workflowExecution: AwsSWFS16!
  initiatedEventId: JSON!
}

type AwsSWFS1tFailWorkflowExecutionFailedEventAttributes {
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tLambdaFunctionCompletedEventAttributes {
  scheduledEventId: JSON!
  startedEventId: JSON!
  result: String
}

type AwsSWFS1tLambdaFunctionFailedEventAttributes {
  scheduledEventId: JSON!
  startedEventId: JSON!
  reason: String
  details: String
}

type AwsSWFS1tLambdaFunctionScheduledEventAttributes {
  id: String!
  name: String!
  control: String
  input: String
  startToCloseTimeout: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tLambdaFunctionStartedEventAttributes {
  scheduledEventId: JSON!
}

type AwsSWFS1tLambdaFunctionTimedOutEventAttributes {
  scheduledEventId: JSON!
  startedEventId: JSON!
  timeoutType: String
}

type AwsSWFS1tMarkerRecordedEventAttributes {
  markerName: String!
  details: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tRecordMarkerFailedEventAttributes {
  markerName: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tRequestCancelActivityTaskFailedEventAttributes {
  activityId: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tRequestCancelExternalWorkflowExecutionFailedEventAttributes {
  workflowId: String!
  runId: String
  cause: String!
  initiatedEventId: JSON!
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSWFS1tRequestCancelExternalWorkflowExecutionInitiatedEventAttributes {
  workflowId: String!
  runId: String
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSWFS1tScheduleActivityTaskFailedEventAttributes {
  activityType: AwsSWFSn!
  activityId: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tScheduleLambdaFunctionFailedEventAttributes {
  id: String!
  name: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tSignalExternalWorkflowExecutionFailedEventAttributes {
  workflowId: String!
  runId: String
  cause: String!
  initiatedEventId: JSON!
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSWFS1tSignalExternalWorkflowExecutionInitiatedEventAttributes {
  workflowId: String!
  runId: String
  signalName: String!
  input: String
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSWFS1tStartChildWorkflowExecutionFailedEventAttributes {
  workflowType: AwsSWFSr!
  cause: String!
  workflowId: String!
  initiatedEventId: JSON!
  decisionTaskCompletedEventId: JSON!
  control: String
}

type AwsSWFS1tStartChildWorkflowExecutionInitiatedEventAttributes {
  workflowId: String!
  workflowType: AwsSWFSr!
  control: String
  input: String
  executionStartToCloseTimeout: String
  taskList: AwsSWFSj!
  taskPriority: String
  decisionTaskCompletedEventId: JSON!
  childPolicy: String!
  taskStartToCloseTimeout: String
  tagList: [String]
  lambdaRole: String
}

type AwsSWFS1tStartLambdaFunctionFailedEventAttributes {
  scheduledEventId: JSON
  cause: String
  message: String
}

type AwsSWFS1tStartTimerFailedEventAttributes {
  timerId: String!
  cause: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tTimerCanceledEventAttributes {
  timerId: String!
  startedEventId: JSON!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tTimerFiredEventAttributes {
  timerId: String!
  startedEventId: JSON!
}

type AwsSWFS1tTimerStartedEventAttributes {
  timerId: String!
  control: String
  startToFireTimeout: String!
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tWorkflowExecutionCanceledEventAttributes {
  details: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tWorkflowExecutionCancelRequestedEventAttributes {
  externalWorkflowExecution: AwsSWFS16
  externalInitiatedEventId: JSON
  cause: String
}

type AwsSWFS1tWorkflowExecutionCompletedEventAttributes {
  result: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tWorkflowExecutionContinuedAsNewEventAttributes {
  input: String
  decisionTaskCompletedEventId: JSON!
  newExecutionRunId: String!
  executionStartToCloseTimeout: String
  taskList: AwsSWFSj!
  taskPriority: String
  taskStartToCloseTimeout: String
  childPolicy: String!
  tagList: [String]
  workflowType: AwsSWFSr!
  lambdaRole: String
}

type AwsSWFS1tWorkflowExecutionFailedEventAttributes {
  reason: String
  details: String
  decisionTaskCompletedEventId: JSON!
}

type AwsSWFS1tWorkflowExecutionSignaledEventAttributes {
  signalName: String!
  input: String
  externalWorkflowExecution: AwsSWFS16
  externalInitiatedEventId: JSON
}

type AwsSWFS1tWorkflowExecutionStartedEventAttributes {
  input: String
  executionStartToCloseTimeout: String
  taskStartToCloseTimeout: String
  childPolicy: String!
  taskList: AwsSWFSj!
  taskPriority: String
  workflowType: AwsSWFSr!
  tagList: [String]
  continuedExecutionRunId: String
  parentWorkflowExecution: AwsSWFS16
  parentInitiatedEventId: JSON
  lambdaRole: String
}

type AwsSWFS1tWorkflowExecutionTerminatedEventAttributes {
  reason: String
  details: String
  childPolicy: String!
  cause: String
}

type AwsSWFS1tWorkflowExecutionTimedOutEventAttributes {
  timeoutType: String!
  childPolicy: String!
}

input AwsSWFS3Input {
  oldestDate: Date!
  latestDate: Date
}

input AwsSWFS5Input {
  workflowId: String!
}

input AwsSWFS7Input {
  name: String!
  version: String
}

input AwsSWFSaInput {
  tag: String!
}

input AwsSWFScInput {
  status: String!
}

input AwsSWFSignalWorkflowExecutionInput {
  domain: String!
  workflowId: String!
  runId: String
  signalName: String!
  input: String
}

type AwsSWFSj {
  name: String!
}

input AwsSWFSjInput {
  name: String!
}

type AwsSWFSn {
  name: String!
  version: String!
}

input AwsSWFSnInput {
  name: String!
  version: String!
}

type AwsSWFSr {
  name: String!
  version: String!
}

input AwsSWFSrInput {
  name: String!
  version: String!
}

input AwsSWFStartWorkflowExecutionInput {
  domain: String!
  workflowId: String!
  workflowType: AwsSWFSrInput!
  taskList: AwsSWFSjInput
  taskPriority: String
  input: String
  executionStartToCloseTimeout: String
  tagList: [String]
  taskStartToCloseTimeout: String
  childPolicy: String
  lambdaRole: String
}

type AwsSWFStartWorkflowExecutionOutput {
  runId: String
}

type AwsSWFSu {
  activityType: AwsSWFSn!
  status: String!
  description: String
  creationDate: Date!
  deprecationDate: Date
}

input AwsSWFTerminateWorkflowExecutionInput {
  domain: String!
  workflowId: String!
  runId: String
  reason: String
  details: String
  childPolicy: String
}

# Amazon Translate (2017-07-01)
type AwsTranslate {
  translateText(input: AwsTranslateTranslateTextInput!, config: AwsConfig): AwsTranslateTranslateTextOutput
}

input AwsTranslateTranslateTextInput {
  Text: String!
  SourceLanguageCode: String!
  TargetLanguageCode: String!
}

type AwsTranslateTranslateTextOutput {
  TranslatedText: String!
  SourceLanguageCode: String!
  TargetLanguageCode: String!
}

# AWS WAF (2015-08-24)
type AwsWAF {
  createByteMatchSet(input: AwsWAFCreateByteMatchSetInput!, config: AwsConfig): AwsWAFCreateByteMatchSetOutput
  createGeoMatchSet(input: AwsWAFCreateGeoMatchSetInput!, config: AwsConfig): AwsWAFCreateGeoMatchSetOutput
  createIPSet(input: AwsWAFCreateIPSetInput!, config: AwsConfig): AwsWAFCreateIPSetOutput
  createRateBasedRule(input: AwsWAFCreateRateBasedRuleInput!, config: AwsConfig): AwsWAFCreateRateBasedRuleOutput
  createRegexMatchSet(input: AwsWAFCreateRegexMatchSetInput!, config: AwsConfig): AwsWAFCreateRegexMatchSetOutput
  createRegexPatternSet(input: AwsWAFCreateRegexPatternSetInput!, config: AwsConfig): AwsWAFCreateRegexPatternSetOutput
  createRule(input: AwsWAFCreateRuleInput!, config: AwsConfig): AwsWAFCreateRuleOutput
  createRuleGroup(input: AwsWAFCreateRuleGroupInput!, config: AwsConfig): AwsWAFCreateRuleGroupOutput
  createSizeConstraintSet(input: AwsWAFCreateSizeConstraintSetInput!, config: AwsConfig): AwsWAFCreateSizeConstraintSetOutput
  createSqlInjectionMatchSet(input: AwsWAFCreateSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFCreateSqlInjectionMatchSetOutput
  createWebACL(input: AwsWAFCreateWebACLInput!, config: AwsConfig): AwsWAFCreateWebACLOutput
  createXssMatchSet(input: AwsWAFCreateXssMatchSetInput!, config: AwsConfig): AwsWAFCreateXssMatchSetOutput
  deleteByteMatchSet(input: AwsWAFDeleteByteMatchSetInput!, config: AwsConfig): AwsWAFDeleteByteMatchSetOutput
  deleteGeoMatchSet(input: AwsWAFDeleteGeoMatchSetInput!, config: AwsConfig): AwsWAFDeleteGeoMatchSetOutput
  deleteIPSet(input: AwsWAFDeleteIPSetInput!, config: AwsConfig): AwsWAFDeleteIPSetOutput
  deleteRateBasedRule(input: AwsWAFDeleteRateBasedRuleInput!, config: AwsConfig): AwsWAFDeleteRateBasedRuleOutput
  deleteRegexMatchSet(input: AwsWAFDeleteRegexMatchSetInput!, config: AwsConfig): AwsWAFDeleteRegexMatchSetOutput
  deleteRegexPatternSet(input: AwsWAFDeleteRegexPatternSetInput!, config: AwsConfig): AwsWAFDeleteRegexPatternSetOutput
  deleteRule(input: AwsWAFDeleteRuleInput!, config: AwsConfig): AwsWAFDeleteRuleOutput
  deleteRuleGroup(input: AwsWAFDeleteRuleGroupInput!, config: AwsConfig): AwsWAFDeleteRuleGroupOutput
  deleteSizeConstraintSet(input: AwsWAFDeleteSizeConstraintSetInput!, config: AwsConfig): AwsWAFDeleteSizeConstraintSetOutput
  deleteSqlInjectionMatchSet(input: AwsWAFDeleteSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFDeleteSqlInjectionMatchSetOutput
  deleteWebACL(input: AwsWAFDeleteWebACLInput!, config: AwsConfig): AwsWAFDeleteWebACLOutput
  deleteXssMatchSet(input: AwsWAFDeleteXssMatchSetInput!, config: AwsConfig): AwsWAFDeleteXssMatchSetOutput
  getByteMatchSet(input: AwsWAFGetByteMatchSetInput!, config: AwsConfig): AwsWAFGetByteMatchSetOutput
  getChangeToken(input: JSON, config: AwsConfig): AwsWAFGetChangeTokenOutput
  getChangeTokenStatus(input: AwsWAFGetChangeTokenStatusInput!, config: AwsConfig): AwsWAFGetChangeTokenStatusOutput
  getGeoMatchSet(input: AwsWAFGetGeoMatchSetInput!, config: AwsConfig): AwsWAFGetGeoMatchSetOutput
  getIPSet(input: AwsWAFGetIPSetInput!, config: AwsConfig): AwsWAFGetIPSetOutput
  getRateBasedRule(input: AwsWAFGetRateBasedRuleInput!, config: AwsConfig): AwsWAFGetRateBasedRuleOutput
  getRateBasedRuleManagedKeys(input: AwsWAFGetRateBasedRuleManagedKeysInput!, config: AwsConfig): AwsWAFGetRateBasedRuleManagedKeysOutput
  getRegexMatchSet(input: AwsWAFGetRegexMatchSetInput!, config: AwsConfig): AwsWAFGetRegexMatchSetOutput
  getRegexPatternSet(input: AwsWAFGetRegexPatternSetInput!, config: AwsConfig): AwsWAFGetRegexPatternSetOutput
  getRule(input: AwsWAFGetRuleInput!, config: AwsConfig): AwsWAFGetRuleOutput
  getRuleGroup(input: AwsWAFGetRuleGroupInput!, config: AwsConfig): AwsWAFGetRuleGroupOutput
  getSampledRequests(input: AwsWAFGetSampledRequestsInput!, config: AwsConfig): AwsWAFGetSampledRequestsOutput
  getSizeConstraintSet(input: AwsWAFGetSizeConstraintSetInput!, config: AwsConfig): AwsWAFGetSizeConstraintSetOutput
  getSqlInjectionMatchSet(input: AwsWAFGetSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFGetSqlInjectionMatchSetOutput
  getWebACL(input: AwsWAFGetWebACLInput!, config: AwsConfig): AwsWAFGetWebACLOutput
  getXssMatchSet(input: AwsWAFGetXssMatchSetInput!, config: AwsConfig): AwsWAFGetXssMatchSetOutput
  listActivatedRulesInRuleGroup(input: AwsWAFListActivatedRulesInRuleGroupInput, config: AwsConfig): AwsWAFListActivatedRulesInRuleGroupOutput
  listByteMatchSets(input: AwsWAFListByteMatchSetsInput, config: AwsConfig): AwsWAFListByteMatchSetsOutput
  listGeoMatchSets(input: AwsWAFListGeoMatchSetsInput, config: AwsConfig): AwsWAFListGeoMatchSetsOutput
  listIPSets(input: AwsWAFListIPSetsInput, config: AwsConfig): AwsWAFListIPSetsOutput
  listRateBasedRules(input: AwsWAFListRateBasedRulesInput, config: AwsConfig): AwsWAFListRateBasedRulesOutput
  listRegexMatchSets(input: AwsWAFListRegexMatchSetsInput, config: AwsConfig): AwsWAFListRegexMatchSetsOutput
  listRegexPatternSets(input: AwsWAFListRegexPatternSetsInput, config: AwsConfig): AwsWAFListRegexPatternSetsOutput
  listRuleGroups(input: AwsWAFListRuleGroupsInput, config: AwsConfig): AwsWAFListRuleGroupsOutput
  listRules(input: AwsWAFListRulesInput, config: AwsConfig): AwsWAFListRulesOutput
  listSizeConstraintSets(input: AwsWAFListSizeConstraintSetsInput, config: AwsConfig): AwsWAFListSizeConstraintSetsOutput
  listSqlInjectionMatchSets(input: AwsWAFListSqlInjectionMatchSetsInput, config: AwsConfig): AwsWAFListSqlInjectionMatchSetsOutput
  listSubscribedRuleGroups(input: AwsWAFListSubscribedRuleGroupsInput, config: AwsConfig): AwsWAFListSubscribedRuleGroupsOutput
  listWebACLs(input: AwsWAFListWebACLsInput, config: AwsConfig): AwsWAFListWebACLsOutput
  listXssMatchSets(input: AwsWAFListXssMatchSetsInput, config: AwsConfig): AwsWAFListXssMatchSetsOutput
  updateByteMatchSet(input: AwsWAFUpdateByteMatchSetInput!, config: AwsConfig): AwsWAFUpdateByteMatchSetOutput
  updateGeoMatchSet(input: AwsWAFUpdateGeoMatchSetInput!, config: AwsConfig): AwsWAFUpdateGeoMatchSetOutput
  updateIPSet(input: AwsWAFUpdateIPSetInput!, config: AwsConfig): AwsWAFUpdateIPSetOutput
  updateRateBasedRule(input: AwsWAFUpdateRateBasedRuleInput!, config: AwsConfig): AwsWAFUpdateRateBasedRuleOutput
  updateRegexMatchSet(input: AwsWAFUpdateRegexMatchSetInput!, config: AwsConfig): AwsWAFUpdateRegexMatchSetOutput
  updateRegexPatternSet(input: AwsWAFUpdateRegexPatternSetInput!, config: AwsConfig): AwsWAFUpdateRegexPatternSetOutput
  updateRule(input: AwsWAFUpdateRuleInput!, config: AwsConfig): AwsWAFUpdateRuleOutput
  updateRuleGroup(input: AwsWAFUpdateRuleGroupInput!, config: AwsConfig): AwsWAFUpdateRuleGroupOutput
  updateSizeConstraintSet(input: AwsWAFUpdateSizeConstraintSetInput!, config: AwsConfig): AwsWAFUpdateSizeConstraintSetOutput
  updateSqlInjectionMatchSet(input: AwsWAFUpdateSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFUpdateSqlInjectionMatchSetOutput
  updateWebACL(input: AwsWAFUpdateWebACLInput!, config: AwsConfig): AwsWAFUpdateWebACLOutput
  updateXssMatchSet(input: AwsWAFUpdateXssMatchSetInput!, config: AwsConfig): AwsWAFUpdateXssMatchSetOutput
}

input AwsWAFCreateByteMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateByteMatchSetOutput {
  ByteMatchSet: AwsWAFS5
  ChangeToken: String
}

input AwsWAFCreateGeoMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateGeoMatchSetOutput {
  GeoMatchSet: AwsWAFSh
  ChangeToken: String
}

input AwsWAFCreateIPSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateIPSetOutput {
  IPSet: AwsWAFSo
  ChangeToken: String
}

input AwsWAFCreateRateBasedRuleInput {
  Name: String!
  MetricName: String!
  RateKey: String!
  RateLimit: JSON!
  ChangeToken: String!
}

type AwsWAFCreateRateBasedRuleOutput {
  Rule: AwsWAFSy
  ChangeToken: String
}

input AwsWAFCreateRegexMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateRegexMatchSetOutput {
  RegexMatchSet: AwsWAFS15
  ChangeToken: String
}

input AwsWAFCreateRegexPatternSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateRegexPatternSetOutput {
  RegexPatternSet: AwsWAFS1a
  ChangeToken: String
}

input AwsWAFCreateRuleGroupInput {
  Name: String!
  MetricName: String!
  ChangeToken: String!
}

type AwsWAFCreateRuleGroupOutput {
  RuleGroup: AwsWAFS1i
  ChangeToken: String
}

input AwsWAFCreateRuleInput {
  Name: String!
  MetricName: String!
  ChangeToken: String!
}

type AwsWAFCreateRuleOutput {
  Rule: AwsWAFS1f
  ChangeToken: String
}

input AwsWAFCreateSizeConstraintSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateSizeConstraintSetOutput {
  SizeConstraintSet: AwsWAFS1l
  ChangeToken: String
}

input AwsWAFCreateSqlInjectionMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateSqlInjectionMatchSetOutput {
  SqlInjectionMatchSet: AwsWAFS1s
  ChangeToken: String
}

input AwsWAFCreateWebACLInput {
  Name: String!
  MetricName: String!
  DefaultAction: AwsWAFS1wInput!
  ChangeToken: String!
}

type AwsWAFCreateWebACLOutput {
  WebACL: AwsWAFS1z
  ChangeToken: String
}

input AwsWAFCreateXssMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFCreateXssMatchSetOutput {
  XssMatchSet: AwsWAFS28
  ChangeToken: String
}

input AwsWAFDeleteByteMatchSetInput {
  ByteMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteByteMatchSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteGeoMatchSetInput {
  GeoMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteGeoMatchSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteIPSetInput {
  IPSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteIPSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteRateBasedRuleInput {
  RuleId: String!
  ChangeToken: String!
}

type AwsWAFDeleteRateBasedRuleOutput {
  ChangeToken: String
}

input AwsWAFDeleteRegexMatchSetInput {
  RegexMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteRegexMatchSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteRegexPatternSetInput {
  RegexPatternSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteRegexPatternSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteRuleGroupInput {
  RuleGroupId: String!
  ChangeToken: String!
}

type AwsWAFDeleteRuleGroupOutput {
  ChangeToken: String
}

input AwsWAFDeleteRuleInput {
  RuleId: String!
  ChangeToken: String!
}

type AwsWAFDeleteRuleOutput {
  ChangeToken: String
}

input AwsWAFDeleteSizeConstraintSetInput {
  SizeConstraintSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteSizeConstraintSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteSqlInjectionMatchSetOutput {
  ChangeToken: String
}

input AwsWAFDeleteWebACLInput {
  WebACLId: String!
  ChangeToken: String!
}

type AwsWAFDeleteWebACLOutput {
  ChangeToken: String
}

input AwsWAFDeleteXssMatchSetInput {
  XssMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFDeleteXssMatchSetOutput {
  ChangeToken: String
}

input AwsWAFGetByteMatchSetInput {
  ByteMatchSetId: String!
}

type AwsWAFGetByteMatchSetOutput {
  ByteMatchSet: AwsWAFS5
}

type AwsWAFGetChangeTokenOutput {
  ChangeToken: String
}

input AwsWAFGetChangeTokenStatusInput {
  ChangeToken: String!
}

type AwsWAFGetChangeTokenStatusOutput {
  ChangeTokenStatus: String
}

input AwsWAFGetGeoMatchSetInput {
  GeoMatchSetId: String!
}

type AwsWAFGetGeoMatchSetOutput {
  GeoMatchSet: AwsWAFSh
}

input AwsWAFGetIPSetInput {
  IPSetId: String!
}

type AwsWAFGetIPSetOutput {
  IPSet: AwsWAFSo
}

input AwsWAFGetRateBasedRuleInput {
  RuleId: String!
}

input AwsWAFGetRateBasedRuleManagedKeysInput {
  RuleId: String!
  NextMarker: String
}

type AwsWAFGetRateBasedRuleManagedKeysOutput {
  ManagedKeys: [String]
  NextMarker: String
}

type AwsWAFGetRateBasedRuleOutput {
  Rule: AwsWAFSy
}

input AwsWAFGetRegexMatchSetInput {
  RegexMatchSetId: String!
}

type AwsWAFGetRegexMatchSetOutput {
  RegexMatchSet: AwsWAFS15
}

input AwsWAFGetRegexPatternSetInput {
  RegexPatternSetId: String!
}

type AwsWAFGetRegexPatternSetOutput {
  RegexPatternSet: AwsWAFS1a
}

input AwsWAFGetRuleGroupInput {
  RuleGroupId: String!
}

type AwsWAFGetRuleGroupOutput {
  RuleGroup: AwsWAFS1i
}

input AwsWAFGetRuleInput {
  RuleId: String!
}

type AwsWAFGetRuleOutput {
  Rule: AwsWAFS1f
}

input AwsWAFGetSampledRequestsInput {
  WebAclId: String!
  RuleId: String!
  TimeWindow: AwsWAFS3qInput!
  MaxItems: JSON!
}

type AwsWAFGetSampledRequestsOutput {
  SampledRequests: [AwsWAFGetSampledRequestsOutputSampledRequests]
  PopulationSize: JSON
  TimeWindow: AwsWAFS3q
}

type AwsWAFGetSampledRequestsOutputSampledRequests {
  Request: AwsWAFGetSampledRequestsOutputSampledRequestsRequest!
  Weight: JSON!
  Timestamp: Date
  Action: String
  RuleWithinRuleGroup: String
}

type AwsWAFGetSampledRequestsOutputSampledRequestsRequest {
  ClientIP: String
  Country: String
  URI: String
  Method: String
  HTTPVersion: String
  Headers: [AwsWAFGetSampledRequestsOutputSampledRequestsRequestHeaders]
}

type AwsWAFGetSampledRequestsOutputSampledRequestsRequestHeaders {
  Name: String
  Value: String
}

input AwsWAFGetSizeConstraintSetInput {
  SizeConstraintSetId: String!
}

type AwsWAFGetSizeConstraintSetOutput {
  SizeConstraintSet: AwsWAFS1l
}

input AwsWAFGetSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
}

type AwsWAFGetSqlInjectionMatchSetOutput {
  SqlInjectionMatchSet: AwsWAFS1s
}

input AwsWAFGetWebACLInput {
  WebACLId: String!
}

type AwsWAFGetWebACLOutput {
  WebACL: AwsWAFS1z
}

input AwsWAFGetXssMatchSetInput {
  XssMatchSetId: String!
}

type AwsWAFGetXssMatchSetOutput {
  XssMatchSet: AwsWAFS28
}

input AwsWAFListActivatedRulesInRuleGroupInput {
  RuleGroupId: String
  NextMarker: String
  Limit: Int
}

type AwsWAFListActivatedRulesInRuleGroupOutput {
  NextMarker: String
  ActivatedRules: [AwsWAFS21]
}

input AwsWAFListByteMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListByteMatchSetsOutput {
  NextMarker: String
  ByteMatchSets: [AwsWAFListByteMatchSetsOutputByteMatchSets]
}

type AwsWAFListByteMatchSetsOutputByteMatchSets {
  ByteMatchSetId: String!
  Name: String!
}

input AwsWAFListGeoMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListGeoMatchSetsOutput {
  NextMarker: String
  GeoMatchSets: [AwsWAFListGeoMatchSetsOutputGeoMatchSets]
}

type AwsWAFListGeoMatchSetsOutputGeoMatchSets {
  GeoMatchSetId: String!
  Name: String!
}

input AwsWAFListIPSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListIPSetsOutput {
  NextMarker: String
  IPSets: [AwsWAFListIPSetsOutputIPSets]
}

type AwsWAFListIPSetsOutputIPSets {
  IPSetId: String!
  Name: String!
}

input AwsWAFListRateBasedRulesInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListRateBasedRulesOutput {
  NextMarker: String
  Rules: [AwsWAFS4y]
}

input AwsWAFListRegexMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListRegexMatchSetsOutput {
  NextMarker: String
  RegexMatchSets: [AwsWAFListRegexMatchSetsOutputRegexMatchSets]
}

type AwsWAFListRegexMatchSetsOutputRegexMatchSets {
  RegexMatchSetId: String!
  Name: String!
}

input AwsWAFListRegexPatternSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListRegexPatternSetsOutput {
  NextMarker: String
  RegexPatternSets: [AwsWAFListRegexPatternSetsOutputRegexPatternSets]
}

type AwsWAFListRegexPatternSetsOutputRegexPatternSets {
  RegexPatternSetId: String!
  Name: String!
}

input AwsWAFListRuleGroupsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListRuleGroupsOutput {
  NextMarker: String
  RuleGroups: [AwsWAFListRuleGroupsOutputRuleGroups]
}

type AwsWAFListRuleGroupsOutputRuleGroups {
  RuleGroupId: String!
  Name: String!
}

input AwsWAFListRulesInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListRulesOutput {
  NextMarker: String
  Rules: [AwsWAFS4y]
}

input AwsWAFListSizeConstraintSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListSizeConstraintSetsOutput {
  NextMarker: String
  SizeConstraintSets: [AwsWAFListSizeConstraintSetsOutputSizeConstraintSets]
}

type AwsWAFListSizeConstraintSetsOutputSizeConstraintSets {
  SizeConstraintSetId: String!
  Name: String!
}

input AwsWAFListSqlInjectionMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListSqlInjectionMatchSetsOutput {
  NextMarker: String
  SqlInjectionMatchSets: [AwsWAFListSqlInjectionMatchSetsOutputSqlInjectionMatchSets]
}

type AwsWAFListSqlInjectionMatchSetsOutputSqlInjectionMatchSets {
  SqlInjectionMatchSetId: String!
  Name: String!
}

input AwsWAFListSubscribedRuleGroupsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListSubscribedRuleGroupsOutput {
  NextMarker: String
  RuleGroups: [AwsWAFListSubscribedRuleGroupsOutputRuleGroups]
}

type AwsWAFListSubscribedRuleGroupsOutputRuleGroups {
  RuleGroupId: String!
  Name: String!
  MetricName: String!
}

input AwsWAFListWebACLsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListWebACLsOutput {
  NextMarker: String
  WebACLs: [AwsWAFListWebACLsOutputWebACLs]
}

type AwsWAFListWebACLsOutputWebACLs {
  WebACLId: String!
  Name: String!
}

input AwsWAFListXssMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFListXssMatchSetsOutput {
  NextMarker: String
  XssMatchSets: [AwsWAFListXssMatchSetsOutputXssMatchSets]
}

type AwsWAFListXssMatchSetsOutputXssMatchSets {
  XssMatchSetId: String!
  Name: String!
}

# AWS WAF Regional (2016-11-28)
type AwsWAFRegional {
  associateWebACL(input: AwsWAFRegionalAssociateWebACLInput!, config: AwsConfig): JSON
  createByteMatchSet(input: AwsWAFRegionalCreateByteMatchSetInput!, config: AwsConfig): AwsWAFRegionalCreateByteMatchSetOutput
  createGeoMatchSet(input: AwsWAFRegionalCreateGeoMatchSetInput!, config: AwsConfig): AwsWAFRegionalCreateGeoMatchSetOutput
  createIPSet(input: AwsWAFRegionalCreateIPSetInput!, config: AwsConfig): AwsWAFRegionalCreateIPSetOutput
  createRateBasedRule(input: AwsWAFRegionalCreateRateBasedRuleInput!, config: AwsConfig): AwsWAFRegionalCreateRateBasedRuleOutput
  createRegexMatchSet(input: AwsWAFRegionalCreateRegexMatchSetInput!, config: AwsConfig): AwsWAFRegionalCreateRegexMatchSetOutput
  createRegexPatternSet(input: AwsWAFRegionalCreateRegexPatternSetInput!, config: AwsConfig): AwsWAFRegionalCreateRegexPatternSetOutput
  createRule(input: AwsWAFRegionalCreateRuleInput!, config: AwsConfig): AwsWAFRegionalCreateRuleOutput
  createRuleGroup(input: AwsWAFRegionalCreateRuleGroupInput!, config: AwsConfig): AwsWAFRegionalCreateRuleGroupOutput
  createSizeConstraintSet(input: AwsWAFRegionalCreateSizeConstraintSetInput!, config: AwsConfig): AwsWAFRegionalCreateSizeConstraintSetOutput
  createSqlInjectionMatchSet(input: AwsWAFRegionalCreateSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFRegionalCreateSqlInjectionMatchSetOutput
  createWebACL(input: AwsWAFRegionalCreateWebACLInput!, config: AwsConfig): AwsWAFRegionalCreateWebACLOutput
  createXssMatchSet(input: AwsWAFRegionalCreateXssMatchSetInput!, config: AwsConfig): AwsWAFRegionalCreateXssMatchSetOutput
  deleteByteMatchSet(input: AwsWAFRegionalDeleteByteMatchSetInput!, config: AwsConfig): AwsWAFRegionalDeleteByteMatchSetOutput
  deleteGeoMatchSet(input: AwsWAFRegionalDeleteGeoMatchSetInput!, config: AwsConfig): AwsWAFRegionalDeleteGeoMatchSetOutput
  deleteIPSet(input: AwsWAFRegionalDeleteIPSetInput!, config: AwsConfig): AwsWAFRegionalDeleteIPSetOutput
  deleteRateBasedRule(input: AwsWAFRegionalDeleteRateBasedRuleInput!, config: AwsConfig): AwsWAFRegionalDeleteRateBasedRuleOutput
  deleteRegexMatchSet(input: AwsWAFRegionalDeleteRegexMatchSetInput!, config: AwsConfig): AwsWAFRegionalDeleteRegexMatchSetOutput
  deleteRegexPatternSet(input: AwsWAFRegionalDeleteRegexPatternSetInput!, config: AwsConfig): AwsWAFRegionalDeleteRegexPatternSetOutput
  deleteRule(input: AwsWAFRegionalDeleteRuleInput!, config: AwsConfig): AwsWAFRegionalDeleteRuleOutput
  deleteRuleGroup(input: AwsWAFRegionalDeleteRuleGroupInput!, config: AwsConfig): AwsWAFRegionalDeleteRuleGroupOutput
  deleteSizeConstraintSet(input: AwsWAFRegionalDeleteSizeConstraintSetInput!, config: AwsConfig): AwsWAFRegionalDeleteSizeConstraintSetOutput
  deleteSqlInjectionMatchSet(input: AwsWAFRegionalDeleteSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFRegionalDeleteSqlInjectionMatchSetOutput
  deleteWebACL(input: AwsWAFRegionalDeleteWebACLInput!, config: AwsConfig): AwsWAFRegionalDeleteWebACLOutput
  deleteXssMatchSet(input: AwsWAFRegionalDeleteXssMatchSetInput!, config: AwsConfig): AwsWAFRegionalDeleteXssMatchSetOutput
  disassociateWebACL(input: AwsWAFRegionalDisassociateWebACLInput!, config: AwsConfig): JSON
  getByteMatchSet(input: AwsWAFRegionalGetByteMatchSetInput!, config: AwsConfig): AwsWAFRegionalGetByteMatchSetOutput
  getChangeToken(input: JSON, config: AwsConfig): AwsWAFRegionalGetChangeTokenOutput
  getChangeTokenStatus(input: AwsWAFRegionalGetChangeTokenStatusInput!, config: AwsConfig): AwsWAFRegionalGetChangeTokenStatusOutput
  getGeoMatchSet(input: AwsWAFRegionalGetGeoMatchSetInput!, config: AwsConfig): AwsWAFRegionalGetGeoMatchSetOutput
  getIPSet(input: AwsWAFRegionalGetIPSetInput!, config: AwsConfig): AwsWAFRegionalGetIPSetOutput
  getRateBasedRule(input: AwsWAFRegionalGetRateBasedRuleInput!, config: AwsConfig): AwsWAFRegionalGetRateBasedRuleOutput
  getRateBasedRuleManagedKeys(input: AwsWAFRegionalGetRateBasedRuleManagedKeysInput!, config: AwsConfig): AwsWAFRegionalGetRateBasedRuleManagedKeysOutput
  getRegexMatchSet(input: AwsWAFRegionalGetRegexMatchSetInput!, config: AwsConfig): AwsWAFRegionalGetRegexMatchSetOutput
  getRegexPatternSet(input: AwsWAFRegionalGetRegexPatternSetInput!, config: AwsConfig): AwsWAFRegionalGetRegexPatternSetOutput
  getRule(input: AwsWAFRegionalGetRuleInput!, config: AwsConfig): AwsWAFRegionalGetRuleOutput
  getRuleGroup(input: AwsWAFRegionalGetRuleGroupInput!, config: AwsConfig): AwsWAFRegionalGetRuleGroupOutput
  getSampledRequests(input: AwsWAFRegionalGetSampledRequestsInput!, config: AwsConfig): AwsWAFRegionalGetSampledRequestsOutput
  getSizeConstraintSet(input: AwsWAFRegionalGetSizeConstraintSetInput!, config: AwsConfig): AwsWAFRegionalGetSizeConstraintSetOutput
  getSqlInjectionMatchSet(input: AwsWAFRegionalGetSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFRegionalGetSqlInjectionMatchSetOutput
  getWebACL(input: AwsWAFRegionalGetWebACLInput!, config: AwsConfig): AwsWAFRegionalGetWebACLOutput
  getWebACLForResource(input: AwsWAFRegionalGetWebACLForResourceInput!, config: AwsConfig): AwsWAFRegionalGetWebACLForResourceOutput
  getXssMatchSet(input: AwsWAFRegionalGetXssMatchSetInput!, config: AwsConfig): AwsWAFRegionalGetXssMatchSetOutput
  listActivatedRulesInRuleGroup(input: AwsWAFRegionalListActivatedRulesInRuleGroupInput, config: AwsConfig): AwsWAFRegionalListActivatedRulesInRuleGroupOutput
  listByteMatchSets(input: AwsWAFRegionalListByteMatchSetsInput, config: AwsConfig): AwsWAFRegionalListByteMatchSetsOutput
  listGeoMatchSets(input: AwsWAFRegionalListGeoMatchSetsInput, config: AwsConfig): AwsWAFRegionalListGeoMatchSetsOutput
  listIPSets(input: AwsWAFRegionalListIPSetsInput, config: AwsConfig): AwsWAFRegionalListIPSetsOutput
  listRateBasedRules(input: AwsWAFRegionalListRateBasedRulesInput, config: AwsConfig): AwsWAFRegionalListRateBasedRulesOutput
  listRegexMatchSets(input: AwsWAFRegionalListRegexMatchSetsInput, config: AwsConfig): AwsWAFRegionalListRegexMatchSetsOutput
  listRegexPatternSets(input: AwsWAFRegionalListRegexPatternSetsInput, config: AwsConfig): AwsWAFRegionalListRegexPatternSetsOutput
  listResourcesForWebACL(input: AwsWAFRegionalListResourcesForWebACLInput!, config: AwsConfig): AwsWAFRegionalListResourcesForWebACLOutput
  listRuleGroups(input: AwsWAFRegionalListRuleGroupsInput, config: AwsConfig): AwsWAFRegionalListRuleGroupsOutput
  listRules(input: AwsWAFRegionalListRulesInput, config: AwsConfig): AwsWAFRegionalListRulesOutput
  listSizeConstraintSets(input: AwsWAFRegionalListSizeConstraintSetsInput, config: AwsConfig): AwsWAFRegionalListSizeConstraintSetsOutput
  listSqlInjectionMatchSets(input: AwsWAFRegionalListSqlInjectionMatchSetsInput, config: AwsConfig): AwsWAFRegionalListSqlInjectionMatchSetsOutput
  listSubscribedRuleGroups(input: AwsWAFRegionalListSubscribedRuleGroupsInput, config: AwsConfig): AwsWAFRegionalListSubscribedRuleGroupsOutput
  listWebACLs(input: AwsWAFRegionalListWebACLsInput, config: AwsConfig): AwsWAFRegionalListWebACLsOutput
  listXssMatchSets(input: AwsWAFRegionalListXssMatchSetsInput, config: AwsConfig): AwsWAFRegionalListXssMatchSetsOutput
  updateByteMatchSet(input: AwsWAFRegionalUpdateByteMatchSetInput!, config: AwsConfig): AwsWAFRegionalUpdateByteMatchSetOutput
  updateGeoMatchSet(input: AwsWAFRegionalUpdateGeoMatchSetInput!, config: AwsConfig): AwsWAFRegionalUpdateGeoMatchSetOutput
  updateIPSet(input: AwsWAFRegionalUpdateIPSetInput!, config: AwsConfig): AwsWAFRegionalUpdateIPSetOutput
  updateRateBasedRule(input: AwsWAFRegionalUpdateRateBasedRuleInput!, config: AwsConfig): AwsWAFRegionalUpdateRateBasedRuleOutput
  updateRegexMatchSet(input: AwsWAFRegionalUpdateRegexMatchSetInput!, config: AwsConfig): AwsWAFRegionalUpdateRegexMatchSetOutput
  updateRegexPatternSet(input: AwsWAFRegionalUpdateRegexPatternSetInput!, config: AwsConfig): AwsWAFRegionalUpdateRegexPatternSetOutput
  updateRule(input: AwsWAFRegionalUpdateRuleInput!, config: AwsConfig): AwsWAFRegionalUpdateRuleOutput
  updateRuleGroup(input: AwsWAFRegionalUpdateRuleGroupInput!, config: AwsConfig): AwsWAFRegionalUpdateRuleGroupOutput
  updateSizeConstraintSet(input: AwsWAFRegionalUpdateSizeConstraintSetInput!, config: AwsConfig): AwsWAFRegionalUpdateSizeConstraintSetOutput
  updateSqlInjectionMatchSet(input: AwsWAFRegionalUpdateSqlInjectionMatchSetInput!, config: AwsConfig): AwsWAFRegionalUpdateSqlInjectionMatchSetOutput
  updateWebACL(input: AwsWAFRegionalUpdateWebACLInput!, config: AwsConfig): AwsWAFRegionalUpdateWebACLOutput
  updateXssMatchSet(input: AwsWAFRegionalUpdateXssMatchSetInput!, config: AwsConfig): AwsWAFRegionalUpdateXssMatchSetOutput
}

input AwsWAFRegionalAssociateWebACLInput {
  WebACLId: String!
  ResourceArn: String!
}

input AwsWAFRegionalCreateByteMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateByteMatchSetOutput {
  ByteMatchSet: AwsWAFRegionalS9
  ChangeToken: String
}

input AwsWAFRegionalCreateGeoMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateGeoMatchSetOutput {
  GeoMatchSet: AwsWAFRegionalSk
  ChangeToken: String
}

input AwsWAFRegionalCreateIPSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateIPSetOutput {
  IPSet: AwsWAFRegionalSr
  ChangeToken: String
}

input AwsWAFRegionalCreateRateBasedRuleInput {
  Name: String!
  MetricName: String!
  RateKey: String!
  RateLimit: JSON!
  ChangeToken: String!
}

type AwsWAFRegionalCreateRateBasedRuleOutput {
  Rule: AwsWAFRegionalS11
  ChangeToken: String
}

input AwsWAFRegionalCreateRegexMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateRegexMatchSetOutput {
  RegexMatchSet: AwsWAFRegionalS18
  ChangeToken: String
}

input AwsWAFRegionalCreateRegexPatternSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateRegexPatternSetOutput {
  RegexPatternSet: AwsWAFRegionalS1d
  ChangeToken: String
}

input AwsWAFRegionalCreateRuleGroupInput {
  Name: String!
  MetricName: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateRuleGroupOutput {
  RuleGroup: AwsWAFRegionalS1l
  ChangeToken: String
}

input AwsWAFRegionalCreateRuleInput {
  Name: String!
  MetricName: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateRuleOutput {
  Rule: AwsWAFRegionalS1i
  ChangeToken: String
}

input AwsWAFRegionalCreateSizeConstraintSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateSizeConstraintSetOutput {
  SizeConstraintSet: AwsWAFRegionalS1o
  ChangeToken: String
}

input AwsWAFRegionalCreateSqlInjectionMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateSqlInjectionMatchSetOutput {
  SqlInjectionMatchSet: AwsWAFRegionalS1v
  ChangeToken: String
}

input AwsWAFRegionalCreateWebACLInput {
  Name: String!
  MetricName: String!
  DefaultAction: AwsWAFRegionalS1zInput!
  ChangeToken: String!
}

type AwsWAFRegionalCreateWebACLOutput {
  WebACL: AwsWAFRegionalS22
  ChangeToken: String
}

input AwsWAFRegionalCreateXssMatchSetInput {
  Name: String!
  ChangeToken: String!
}

type AwsWAFRegionalCreateXssMatchSetOutput {
  XssMatchSet: AwsWAFRegionalS2b
  ChangeToken: String
}

input AwsWAFRegionalDeleteByteMatchSetInput {
  ByteMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteByteMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteGeoMatchSetInput {
  GeoMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteGeoMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteIPSetInput {
  IPSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteIPSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteRateBasedRuleInput {
  RuleId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteRateBasedRuleOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteRegexMatchSetInput {
  RegexMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteRegexMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteRegexPatternSetInput {
  RegexPatternSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteRegexPatternSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteRuleGroupInput {
  RuleGroupId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteRuleGroupOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteRuleInput {
  RuleId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteRuleOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteSizeConstraintSetInput {
  SizeConstraintSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteSizeConstraintSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteSqlInjectionMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteWebACLInput {
  WebACLId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteWebACLOutput {
  ChangeToken: String
}

input AwsWAFRegionalDeleteXssMatchSetInput {
  XssMatchSetId: String!
  ChangeToken: String!
}

type AwsWAFRegionalDeleteXssMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalDisassociateWebACLInput {
  ResourceArn: String!
}

input AwsWAFRegionalGetByteMatchSetInput {
  ByteMatchSetId: String!
}

type AwsWAFRegionalGetByteMatchSetOutput {
  ByteMatchSet: AwsWAFRegionalS9
}

type AwsWAFRegionalGetChangeTokenOutput {
  ChangeToken: String
}

input AwsWAFRegionalGetChangeTokenStatusInput {
  ChangeToken: String!
}

type AwsWAFRegionalGetChangeTokenStatusOutput {
  ChangeTokenStatus: String
}

input AwsWAFRegionalGetGeoMatchSetInput {
  GeoMatchSetId: String!
}

type AwsWAFRegionalGetGeoMatchSetOutput {
  GeoMatchSet: AwsWAFRegionalSk
}

input AwsWAFRegionalGetIPSetInput {
  IPSetId: String!
}

type AwsWAFRegionalGetIPSetOutput {
  IPSet: AwsWAFRegionalSr
}

input AwsWAFRegionalGetRateBasedRuleInput {
  RuleId: String!
}

input AwsWAFRegionalGetRateBasedRuleManagedKeysInput {
  RuleId: String!
  NextMarker: String
}

type AwsWAFRegionalGetRateBasedRuleManagedKeysOutput {
  ManagedKeys: [String]
  NextMarker: String
}

type AwsWAFRegionalGetRateBasedRuleOutput {
  Rule: AwsWAFRegionalS11
}

input AwsWAFRegionalGetRegexMatchSetInput {
  RegexMatchSetId: String!
}

type AwsWAFRegionalGetRegexMatchSetOutput {
  RegexMatchSet: AwsWAFRegionalS18
}

input AwsWAFRegionalGetRegexPatternSetInput {
  RegexPatternSetId: String!
}

type AwsWAFRegionalGetRegexPatternSetOutput {
  RegexPatternSet: AwsWAFRegionalS1d
}

input AwsWAFRegionalGetRuleGroupInput {
  RuleGroupId: String!
}

type AwsWAFRegionalGetRuleGroupOutput {
  RuleGroup: AwsWAFRegionalS1l
}

input AwsWAFRegionalGetRuleInput {
  RuleId: String!
}

type AwsWAFRegionalGetRuleOutput {
  Rule: AwsWAFRegionalS1i
}

input AwsWAFRegionalGetSampledRequestsInput {
  WebAclId: String!
  RuleId: String!
  TimeWindow: AwsWAFRegionalS3vInput!
  MaxItems: JSON!
}

type AwsWAFRegionalGetSampledRequestsOutput {
  SampledRequests: [AwsWAFRegionalGetSampledRequestsOutputSampledRequests]
  PopulationSize: JSON
  TimeWindow: AwsWAFRegionalS3v
}

type AwsWAFRegionalGetSampledRequestsOutputSampledRequests {
  Request: AwsWAFRegionalGetSampledRequestsOutputSampledRequestsRequest!
  Weight: JSON!
  Timestamp: Date
  Action: String
  RuleWithinRuleGroup: String
}

type AwsWAFRegionalGetSampledRequestsOutputSampledRequestsRequest {
  ClientIP: String
  Country: String
  URI: String
  Method: String
  HTTPVersion: String
  Headers: [AwsWAFRegionalGetSampledRequestsOutputSampledRequestsRequestHeaders]
}

type AwsWAFRegionalGetSampledRequestsOutputSampledRequestsRequestHeaders {
  Name: String
  Value: String
}

input AwsWAFRegionalGetSizeConstraintSetInput {
  SizeConstraintSetId: String!
}

type AwsWAFRegionalGetSizeConstraintSetOutput {
  SizeConstraintSet: AwsWAFRegionalS1o
}

input AwsWAFRegionalGetSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
}

type AwsWAFRegionalGetSqlInjectionMatchSetOutput {
  SqlInjectionMatchSet: AwsWAFRegionalS1v
}

input AwsWAFRegionalGetWebACLForResourceInput {
  ResourceArn: String!
}

type AwsWAFRegionalGetWebACLForResourceOutput {
  WebACLSummary: AwsWAFRegionalS4m
}

input AwsWAFRegionalGetWebACLInput {
  WebACLId: String!
}

type AwsWAFRegionalGetWebACLOutput {
  WebACL: AwsWAFRegionalS22
}

input AwsWAFRegionalGetXssMatchSetInput {
  XssMatchSetId: String!
}

type AwsWAFRegionalGetXssMatchSetOutput {
  XssMatchSet: AwsWAFRegionalS2b
}

input AwsWAFRegionalListActivatedRulesInRuleGroupInput {
  RuleGroupId: String
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListActivatedRulesInRuleGroupOutput {
  NextMarker: String
  ActivatedRules: [AwsWAFRegionalS24]
}

input AwsWAFRegionalListByteMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListByteMatchSetsOutput {
  NextMarker: String
  ByteMatchSets: [AwsWAFRegionalListByteMatchSetsOutputByteMatchSets]
}

type AwsWAFRegionalListByteMatchSetsOutputByteMatchSets {
  ByteMatchSetId: String!
  Name: String!
}

input AwsWAFRegionalListGeoMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListGeoMatchSetsOutput {
  NextMarker: String
  GeoMatchSets: [AwsWAFRegionalListGeoMatchSetsOutputGeoMatchSets]
}

type AwsWAFRegionalListGeoMatchSetsOutputGeoMatchSets {
  GeoMatchSetId: String!
  Name: String!
}

input AwsWAFRegionalListIPSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListIPSetsOutput {
  NextMarker: String
  IPSets: [AwsWAFRegionalListIPSetsOutputIPSets]
}

type AwsWAFRegionalListIPSetsOutputIPSets {
  IPSetId: String!
  Name: String!
}

input AwsWAFRegionalListRateBasedRulesInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListRateBasedRulesOutput {
  NextMarker: String
  Rules: [AwsWAFRegionalS56]
}

input AwsWAFRegionalListRegexMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListRegexMatchSetsOutput {
  NextMarker: String
  RegexMatchSets: [AwsWAFRegionalListRegexMatchSetsOutputRegexMatchSets]
}

type AwsWAFRegionalListRegexMatchSetsOutputRegexMatchSets {
  RegexMatchSetId: String!
  Name: String!
}

input AwsWAFRegionalListRegexPatternSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListRegexPatternSetsOutput {
  NextMarker: String
  RegexPatternSets: [AwsWAFRegionalListRegexPatternSetsOutputRegexPatternSets]
}

type AwsWAFRegionalListRegexPatternSetsOutputRegexPatternSets {
  RegexPatternSetId: String!
  Name: String!
}

input AwsWAFRegionalListResourcesForWebACLInput {
  WebACLId: String!
}

type AwsWAFRegionalListResourcesForWebACLOutput {
  ResourceArns: [String]
}

input AwsWAFRegionalListRuleGroupsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListRuleGroupsOutput {
  NextMarker: String
  RuleGroups: [AwsWAFRegionalListRuleGroupsOutputRuleGroups]
}

type AwsWAFRegionalListRuleGroupsOutputRuleGroups {
  RuleGroupId: String!
  Name: String!
}

input AwsWAFRegionalListRulesInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListRulesOutput {
  NextMarker: String
  Rules: [AwsWAFRegionalS56]
}

input AwsWAFRegionalListSizeConstraintSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListSizeConstraintSetsOutput {
  NextMarker: String
  SizeConstraintSets: [AwsWAFRegionalListSizeConstraintSetsOutputSizeConstraintSets]
}

type AwsWAFRegionalListSizeConstraintSetsOutputSizeConstraintSets {
  SizeConstraintSetId: String!
  Name: String!
}

input AwsWAFRegionalListSqlInjectionMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListSqlInjectionMatchSetsOutput {
  NextMarker: String
  SqlInjectionMatchSets: [AwsWAFRegionalListSqlInjectionMatchSetsOutputSqlInjectionMatchSets]
}

type AwsWAFRegionalListSqlInjectionMatchSetsOutputSqlInjectionMatchSets {
  SqlInjectionMatchSetId: String!
  Name: String!
}

input AwsWAFRegionalListSubscribedRuleGroupsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListSubscribedRuleGroupsOutput {
  NextMarker: String
  RuleGroups: [AwsWAFRegionalListSubscribedRuleGroupsOutputRuleGroups]
}

type AwsWAFRegionalListSubscribedRuleGroupsOutputRuleGroups {
  RuleGroupId: String!
  Name: String!
  MetricName: String!
}

input AwsWAFRegionalListWebACLsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListWebACLsOutput {
  NextMarker: String
  WebACLs: [AwsWAFRegionalS4m]
}

input AwsWAFRegionalListXssMatchSetsInput {
  NextMarker: String
  Limit: Int
}

type AwsWAFRegionalListXssMatchSetsOutput {
  NextMarker: String
  XssMatchSets: [AwsWAFRegionalListXssMatchSetsOutputXssMatchSets]
}

type AwsWAFRegionalListXssMatchSetsOutputXssMatchSets {
  XssMatchSetId: String!
  Name: String!
}

type AwsWAFRegionalS11 {
  RuleId: String!
  Name: String
  MetricName: String
  MatchPredicates: [AwsWAFRegionalS13]!
  RateKey: String!
  RateLimit: JSON!
}

type AwsWAFRegionalS13 {
  Negated: Boolean!
  Type: String!
  DataId: String!
}

input AwsWAFRegionalS13Input {
  Negated: Boolean!
  Type: String!
  DataId: String!
}

type AwsWAFRegionalS18 {
  RegexMatchSetId: String
  Name: String
  RegexMatchTuples: [AwsWAFRegionalS1a]
}

type AwsWAFRegionalS1a {
  FieldToMatch: AwsWAFRegionalSc!
  TextTransformation: String!
  RegexPatternSetId: String!
}

input AwsWAFRegionalS1aInput {
  FieldToMatch: AwsWAFRegionalScInput!
  TextTransformation: String!
  RegexPatternSetId: String!
}

type AwsWAFRegionalS1d {
  RegexPatternSetId: String!
  Name: String
  RegexPatternStrings: [String]!
}

type AwsWAFRegionalS1i {
  RuleId: String!
  Name: String
  MetricName: String
  Predicates: [AwsWAFRegionalS13]!
}

type AwsWAFRegionalS1l {
  RuleGroupId: String!
  Name: String
  MetricName: String
}

type AwsWAFRegionalS1o {
  SizeConstraintSetId: String!
  Name: String
  SizeConstraints: [AwsWAFRegionalS1q]!
}

type AwsWAFRegionalS1q {
  FieldToMatch: AwsWAFRegionalSc!
  TextTransformation: String!
  ComparisonOperator: String!
  Size: JSON!
}

input AwsWAFRegionalS1qInput {
  FieldToMatch: AwsWAFRegionalScInput!
  TextTransformation: String!
  ComparisonOperator: String!
  Size: JSON!
}

type AwsWAFRegionalS1v {
  SqlInjectionMatchSetId: String!
  Name: String
  SqlInjectionMatchTuples: [AwsWAFRegionalS1x]!
}

type AwsWAFRegionalS1x {
  FieldToMatch: AwsWAFRegionalSc!
  TextTransformation: String!
}

input AwsWAFRegionalS1xInput {
  FieldToMatch: AwsWAFRegionalScInput!
  TextTransformation: String!
}

type AwsWAFRegionalS1z {
  Type: String!
}

input AwsWAFRegionalS1zInput {
  Type: String!
}

type AwsWAFRegionalS22 {
  WebACLId: String!
  Name: String
  MetricName: String
  DefaultAction: AwsWAFRegionalS1z!
  Rules: [AwsWAFRegionalS24]!
}

type AwsWAFRegionalS24 {
  Priority: Int!
  RuleId: String!
  Action: AwsWAFRegionalS1z
  OverrideAction: AwsWAFRegionalS24OverrideAction
  Type: String
}

input AwsWAFRegionalS24Input {
  Priority: Int!
  RuleId: String!
  Action: AwsWAFRegionalS1zInput
  OverrideAction: AwsWAFRegionalS24OverrideActionInput
  Type: String
}

type AwsWAFRegionalS24OverrideAction {
  Type: String!
}

input AwsWAFRegionalS24OverrideActionInput {
  Type: String!
}

type AwsWAFRegionalS2b {
  XssMatchSetId: String!
  Name: String
  XssMatchTuples: [AwsWAFRegionalS2d]!
}

type AwsWAFRegionalS2d {
  FieldToMatch: AwsWAFRegionalSc!
  TextTransformation: String!
}

input AwsWAFRegionalS2dInput {
  FieldToMatch: AwsWAFRegionalScInput!
  TextTransformation: String!
}

type AwsWAFRegionalS3v {
  StartTime: Date!
  EndTime: Date!
}

input AwsWAFRegionalS3vInput {
  StartTime: Date!
  EndTime: Date!
}

type AwsWAFRegionalS4m {
  WebACLId: String!
  Name: String!
}

type AwsWAFRegionalS56 {
  RuleId: String!
  Name: String!
}

input AwsWAFRegionalS6mInput {
  Action: String!
  Predicate: AwsWAFRegionalS13Input!
}

type AwsWAFRegionalS9 {
  ByteMatchSetId: String!
  Name: String
  ByteMatchTuples: [AwsWAFRegionalSb]!
}

type AwsWAFRegionalSb {
  FieldToMatch: AwsWAFRegionalSc!
  TargetString: JSON!
  TextTransformation: String!
  PositionalConstraint: String!
}

input AwsWAFRegionalSbInput {
  FieldToMatch: AwsWAFRegionalScInput!
  TargetString: JSON!
  TextTransformation: String!
  PositionalConstraint: String!
}

type AwsWAFRegionalSc {
  Type: String!
  Data: String
}

input AwsWAFRegionalScInput {
  Type: String!
  Data: String
}

type AwsWAFRegionalSk {
  GeoMatchSetId: String!
  Name: String
  GeoMatchConstraints: [AwsWAFRegionalSm]!
}

type AwsWAFRegionalSm {
  Type: String!
  Value: String!
}

input AwsWAFRegionalSmInput {
  Type: String!
  Value: String!
}

type AwsWAFRegionalSr {
  IPSetId: String!
  Name: String
  IPSetDescriptors: [AwsWAFRegionalSt]!
}

type AwsWAFRegionalSt {
  Type: String!
  Value: String!
}

input AwsWAFRegionalStInput {
  Type: String!
  Value: String!
}

input AwsWAFRegionalUpdateByteMatchSetInput {
  ByteMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateByteMatchSetUpdatesInput]!
}

type AwsWAFRegionalUpdateByteMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateByteMatchSetUpdatesInput {
  Action: String!
  ByteMatchTuple: AwsWAFRegionalSbInput!
}

input AwsWAFRegionalUpdateGeoMatchSetInput {
  GeoMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateGeoMatchSetUpdatesInput]!
}

type AwsWAFRegionalUpdateGeoMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateGeoMatchSetUpdatesInput {
  Action: String!
  GeoMatchConstraint: AwsWAFRegionalSmInput!
}

input AwsWAFRegionalUpdateIPSetInput {
  IPSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateIPSetUpdatesInput]!
}

type AwsWAFRegionalUpdateIPSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateIPSetUpdatesInput {
  Action: String!
  IPSetDescriptor: AwsWAFRegionalStInput!
}

input AwsWAFRegionalUpdateRateBasedRuleInput {
  RuleId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalS6mInput]!
  RateLimit: JSON!
}

type AwsWAFRegionalUpdateRateBasedRuleOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateRegexMatchSetInput {
  RegexMatchSetId: String!
  Updates: [AwsWAFRegionalUpdateRegexMatchSetUpdatesInput]!
  ChangeToken: String!
}

type AwsWAFRegionalUpdateRegexMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateRegexMatchSetUpdatesInput {
  Action: String!
  RegexMatchTuple: AwsWAFRegionalS1aInput!
}

input AwsWAFRegionalUpdateRegexPatternSetInput {
  RegexPatternSetId: String!
  Updates: [AwsWAFRegionalUpdateRegexPatternSetUpdatesInput]!
  ChangeToken: String!
}

type AwsWAFRegionalUpdateRegexPatternSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateRegexPatternSetUpdatesInput {
  Action: String!
  RegexPatternString: String!
}

input AwsWAFRegionalUpdateRuleGroupInput {
  RuleGroupId: String!
  Updates: [AwsWAFRegionalUpdateRuleGroupUpdatesInput]!
  ChangeToken: String!
}

type AwsWAFRegionalUpdateRuleGroupOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateRuleGroupUpdatesInput {
  Action: String!
  ActivatedRule: AwsWAFRegionalS24Input!
}

input AwsWAFRegionalUpdateRuleInput {
  RuleId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalS6mInput]!
}

type AwsWAFRegionalUpdateRuleOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateSizeConstraintSetInput {
  SizeConstraintSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateSizeConstraintSetUpdatesInput]!
}

type AwsWAFRegionalUpdateSizeConstraintSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateSizeConstraintSetUpdatesInput {
  Action: String!
  SizeConstraint: AwsWAFRegionalS1qInput!
}

input AwsWAFRegionalUpdateSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateSqlInjectionMatchSetUpdatesInput]!
}

type AwsWAFRegionalUpdateSqlInjectionMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateSqlInjectionMatchSetUpdatesInput {
  Action: String!
  SqlInjectionMatchTuple: AwsWAFRegionalS1xInput!
}

input AwsWAFRegionalUpdateWebACLInput {
  WebACLId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateWebACLUpdatesInput]
  DefaultAction: AwsWAFRegionalS1zInput
}

type AwsWAFRegionalUpdateWebACLOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateWebACLUpdatesInput {
  Action: String!
  ActivatedRule: AwsWAFRegionalS24Input!
}

input AwsWAFRegionalUpdateXssMatchSetInput {
  XssMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFRegionalUpdateXssMatchSetUpdatesInput]!
}

type AwsWAFRegionalUpdateXssMatchSetOutput {
  ChangeToken: String
}

input AwsWAFRegionalUpdateXssMatchSetUpdatesInput {
  Action: String!
  XssMatchTuple: AwsWAFRegionalS2dInput!
}

type AwsWAFS10 {
  Negated: Boolean!
  Type: String!
  DataId: String!
}

input AwsWAFS10Input {
  Negated: Boolean!
  Type: String!
  DataId: String!
}

type AwsWAFS15 {
  RegexMatchSetId: String
  Name: String
  RegexMatchTuples: [AwsWAFS17]
}

type AwsWAFS17 {
  FieldToMatch: AwsWAFS9!
  TextTransformation: String!
  RegexPatternSetId: String!
}

input AwsWAFS17Input {
  FieldToMatch: AwsWAFS9Input!
  TextTransformation: String!
  RegexPatternSetId: String!
}

type AwsWAFS1a {
  RegexPatternSetId: String!
  Name: String
  RegexPatternStrings: [String]!
}

type AwsWAFS1f {
  RuleId: String!
  Name: String
  MetricName: String
  Predicates: [AwsWAFS10]!
}

type AwsWAFS1i {
  RuleGroupId: String!
  Name: String
  MetricName: String
}

type AwsWAFS1l {
  SizeConstraintSetId: String!
  Name: String
  SizeConstraints: [AwsWAFS1n]!
}

type AwsWAFS1n {
  FieldToMatch: AwsWAFS9!
  TextTransformation: String!
  ComparisonOperator: String!
  Size: JSON!
}

input AwsWAFS1nInput {
  FieldToMatch: AwsWAFS9Input!
  TextTransformation: String!
  ComparisonOperator: String!
  Size: JSON!
}

type AwsWAFS1s {
  SqlInjectionMatchSetId: String!
  Name: String
  SqlInjectionMatchTuples: [AwsWAFS1u]!
}

type AwsWAFS1u {
  FieldToMatch: AwsWAFS9!
  TextTransformation: String!
}

input AwsWAFS1uInput {
  FieldToMatch: AwsWAFS9Input!
  TextTransformation: String!
}

type AwsWAFS1w {
  Type: String!
}

input AwsWAFS1wInput {
  Type: String!
}

type AwsWAFS1z {
  WebACLId: String!
  Name: String
  MetricName: String
  DefaultAction: AwsWAFS1w!
  Rules: [AwsWAFS21]!
}

type AwsWAFS21 {
  Priority: Int!
  RuleId: String!
  Action: AwsWAFS1w
  OverrideAction: AwsWAFS21OverrideAction
  Type: String
}

input AwsWAFS21Input {
  Priority: Int!
  RuleId: String!
  Action: AwsWAFS1wInput
  OverrideAction: AwsWAFS21OverrideActionInput
  Type: String
}

type AwsWAFS21OverrideAction {
  Type: String!
}

input AwsWAFS21OverrideActionInput {
  Type: String!
}

type AwsWAFS28 {
  XssMatchSetId: String!
  Name: String
  XssMatchTuples: [AwsWAFS2a]!
}

type AwsWAFS2a {
  FieldToMatch: AwsWAFS9!
  TextTransformation: String!
}

input AwsWAFS2aInput {
  FieldToMatch: AwsWAFS9Input!
  TextTransformation: String!
}

type AwsWAFS3q {
  StartTime: Date!
  EndTime: Date!
}

input AwsWAFS3qInput {
  StartTime: Date!
  EndTime: Date!
}

type AwsWAFS4y {
  RuleId: String!
  Name: String!
}

type AwsWAFS5 {
  ByteMatchSetId: String!
  Name: String
  ByteMatchTuples: [AwsWAFS8]!
}

input AwsWAFS6cInput {
  Action: String!
  Predicate: AwsWAFS10Input!
}

type AwsWAFS8 {
  FieldToMatch: AwsWAFS9!
  TargetString: JSON!
  TextTransformation: String!
  PositionalConstraint: String!
}

input AwsWAFS8Input {
  FieldToMatch: AwsWAFS9Input!
  TargetString: JSON!
  TextTransformation: String!
  PositionalConstraint: String!
}

type AwsWAFS9 {
  Type: String!
  Data: String
}

input AwsWAFS9Input {
  Type: String!
  Data: String
}

type AwsWAFSh {
  GeoMatchSetId: String!
  Name: String
  GeoMatchConstraints: [AwsWAFSj]!
}

type AwsWAFSj {
  Type: String!
  Value: String!
}

input AwsWAFSjInput {
  Type: String!
  Value: String!
}

type AwsWAFSo {
  IPSetId: String!
  Name: String
  IPSetDescriptors: [AwsWAFSq]!
}

type AwsWAFSq {
  Type: String!
  Value: String!
}

input AwsWAFSqInput {
  Type: String!
  Value: String!
}

type AwsWAFSy {
  RuleId: String!
  Name: String
  MetricName: String
  MatchPredicates: [AwsWAFS10]!
  RateKey: String!
  RateLimit: JSON!
}

input AwsWAFUpdateByteMatchSetInput {
  ByteMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateByteMatchSetUpdatesInput]!
}

type AwsWAFUpdateByteMatchSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateByteMatchSetUpdatesInput {
  Action: String!
  ByteMatchTuple: AwsWAFS8Input!
}

input AwsWAFUpdateGeoMatchSetInput {
  GeoMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateGeoMatchSetUpdatesInput]!
}

type AwsWAFUpdateGeoMatchSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateGeoMatchSetUpdatesInput {
  Action: String!
  GeoMatchConstraint: AwsWAFSjInput!
}

input AwsWAFUpdateIPSetInput {
  IPSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateIPSetUpdatesInput]!
}

type AwsWAFUpdateIPSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateIPSetUpdatesInput {
  Action: String!
  IPSetDescriptor: AwsWAFSqInput!
}

input AwsWAFUpdateRateBasedRuleInput {
  RuleId: String!
  ChangeToken: String!
  Updates: [AwsWAFS6cInput]!
  RateLimit: JSON!
}

type AwsWAFUpdateRateBasedRuleOutput {
  ChangeToken: String
}

input AwsWAFUpdateRegexMatchSetInput {
  RegexMatchSetId: String!
  Updates: [AwsWAFUpdateRegexMatchSetUpdatesInput]!
  ChangeToken: String!
}

type AwsWAFUpdateRegexMatchSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateRegexMatchSetUpdatesInput {
  Action: String!
  RegexMatchTuple: AwsWAFS17Input!
}

input AwsWAFUpdateRegexPatternSetInput {
  RegexPatternSetId: String!
  Updates: [AwsWAFUpdateRegexPatternSetUpdatesInput]!
  ChangeToken: String!
}

type AwsWAFUpdateRegexPatternSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateRegexPatternSetUpdatesInput {
  Action: String!
  RegexPatternString: String!
}

input AwsWAFUpdateRuleGroupInput {
  RuleGroupId: String!
  Updates: [AwsWAFUpdateRuleGroupUpdatesInput]!
  ChangeToken: String!
}

type AwsWAFUpdateRuleGroupOutput {
  ChangeToken: String
}

input AwsWAFUpdateRuleGroupUpdatesInput {
  Action: String!
  ActivatedRule: AwsWAFS21Input!
}

input AwsWAFUpdateRuleInput {
  RuleId: String!
  ChangeToken: String!
  Updates: [AwsWAFS6cInput]!
}

type AwsWAFUpdateRuleOutput {
  ChangeToken: String
}

input AwsWAFUpdateSizeConstraintSetInput {
  SizeConstraintSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateSizeConstraintSetUpdatesInput]!
}

type AwsWAFUpdateSizeConstraintSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateSizeConstraintSetUpdatesInput {
  Action: String!
  SizeConstraint: AwsWAFS1nInput!
}

input AwsWAFUpdateSqlInjectionMatchSetInput {
  SqlInjectionMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateSqlInjectionMatchSetUpdatesInput]!
}

type AwsWAFUpdateSqlInjectionMatchSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateSqlInjectionMatchSetUpdatesInput {
  Action: String!
  SqlInjectionMatchTuple: AwsWAFS1uInput!
}

input AwsWAFUpdateWebACLInput {
  WebACLId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateWebACLUpdatesInput]
  DefaultAction: AwsWAFS1wInput
}

type AwsWAFUpdateWebACLOutput {
  ChangeToken: String
}

input AwsWAFUpdateWebACLUpdatesInput {
  Action: String!
  ActivatedRule: AwsWAFS21Input!
}

input AwsWAFUpdateXssMatchSetInput {
  XssMatchSetId: String!
  ChangeToken: String!
  Updates: [AwsWAFUpdateXssMatchSetUpdatesInput]!
}

type AwsWAFUpdateXssMatchSetOutput {
  ChangeToken: String
}

input AwsWAFUpdateXssMatchSetUpdatesInput {
  Action: String!
  XssMatchTuple: AwsWAFS2aInput!
}

# Amazon WorkDocs (2016-05-01)
type AwsWorkDocs {
  abortDocumentVersionUpload(input: AwsWorkDocsAbortDocumentVersionUploadInput!, config: AwsConfig): JSON
  activateUser(input: AwsWorkDocsActivateUserInput!, config: AwsConfig): AwsWorkDocsActivateUserOutput
  addResourcePermissions(input: AwsWorkDocsAddResourcePermissionsInput!, config: AwsConfig): AwsWorkDocsAddResourcePermissionsOutput
  createComment(input: AwsWorkDocsCreateCommentInput!, config: AwsConfig): AwsWorkDocsCreateCommentOutput
  createCustomMetadata(input: AwsWorkDocsCreateCustomMetadataInput!, config: AwsConfig): JSON
  createFolder(input: AwsWorkDocsCreateFolderInput!, config: AwsConfig): AwsWorkDocsCreateFolderOutput
  createLabels(input: AwsWorkDocsCreateLabelsInput!, config: AwsConfig): JSON
  createNotificationSubscription(input: AwsWorkDocsCreateNotificationSubscriptionInput!, config: AwsConfig): AwsWorkDocsCreateNotificationSubscriptionOutput
  createUser(input: AwsWorkDocsCreateUserInput!, config: AwsConfig): AwsWorkDocsCreateUserOutput
  deactivateUser(input: AwsWorkDocsDeactivateUserInput!, config: AwsConfig): JSON
  deleteComment(input: AwsWorkDocsDeleteCommentInput!, config: AwsConfig): JSON
  deleteCustomMetadata(input: AwsWorkDocsDeleteCustomMetadataInput!, config: AwsConfig): JSON
  deleteDocument(input: AwsWorkDocsDeleteDocumentInput!, config: AwsConfig): JSON
  deleteFolder(input: AwsWorkDocsDeleteFolderInput!, config: AwsConfig): JSON
  deleteFolderContents(input: AwsWorkDocsDeleteFolderContentsInput!, config: AwsConfig): JSON
  deleteLabels(input: AwsWorkDocsDeleteLabelsInput!, config: AwsConfig): JSON
  deleteNotificationSubscription(input: AwsWorkDocsDeleteNotificationSubscriptionInput!, config: AwsConfig): JSON
  deleteUser(input: AwsWorkDocsDeleteUserInput!, config: AwsConfig): JSON
  describeActivities(input: AwsWorkDocsDescribeActivitiesInput, config: AwsConfig): AwsWorkDocsDescribeActivitiesOutput
  describeComments(input: AwsWorkDocsDescribeCommentsInput!, config: AwsConfig): AwsWorkDocsDescribeCommentsOutput
  describeDocumentVersions(input: AwsWorkDocsDescribeDocumentVersionsInput!, config: AwsConfig): AwsWorkDocsDescribeDocumentVersionsOutput
  describeFolderContents(input: AwsWorkDocsDescribeFolderContentsInput!, config: AwsConfig): AwsWorkDocsDescribeFolderContentsOutput
  describeGroups(input: AwsWorkDocsDescribeGroupsInput!, config: AwsConfig): AwsWorkDocsDescribeGroupsOutput
  describeNotificationSubscriptions(input: AwsWorkDocsDescribeNotificationSubscriptionsInput!, config: AwsConfig): AwsWorkDocsDescribeNotificationSubscriptionsOutput
  describeResourcePermissions(input: AwsWorkDocsDescribeResourcePermissionsInput!, config: AwsConfig): AwsWorkDocsDescribeResourcePermissionsOutput
  describeRootFolders(input: AwsWorkDocsDescribeRootFoldersInput!, config: AwsConfig): AwsWorkDocsDescribeRootFoldersOutput
  describeUsers(input: AwsWorkDocsDescribeUsersInput, config: AwsConfig): AwsWorkDocsDescribeUsersOutput
  getCurrentUser(input: AwsWorkDocsGetCurrentUserInput!, config: AwsConfig): AwsWorkDocsGetCurrentUserOutput
  getDocument(input: AwsWorkDocsGetDocumentInput!, config: AwsConfig): AwsWorkDocsGetDocumentOutput
  getDocumentPath(input: AwsWorkDocsGetDocumentPathInput!, config: AwsConfig): AwsWorkDocsGetDocumentPathOutput
  getDocumentVersion(input: AwsWorkDocsGetDocumentVersionInput!, config: AwsConfig): AwsWorkDocsGetDocumentVersionOutput
  getFolder(input: AwsWorkDocsGetFolderInput!, config: AwsConfig): AwsWorkDocsGetFolderOutput
  getFolderPath(input: AwsWorkDocsGetFolderPathInput!, config: AwsConfig): AwsWorkDocsGetFolderPathOutput
  initiateDocumentVersionUpload(input: AwsWorkDocsInitiateDocumentVersionUploadInput!, config: AwsConfig): AwsWorkDocsInitiateDocumentVersionUploadOutput
  removeAllResourcePermissions(input: AwsWorkDocsRemoveAllResourcePermissionsInput!, config: AwsConfig): JSON
  removeResourcePermission(input: AwsWorkDocsRemoveResourcePermissionInput!, config: AwsConfig): JSON
  updateDocument(input: AwsWorkDocsUpdateDocumentInput!, config: AwsConfig): JSON
  updateDocumentVersion(input: AwsWorkDocsUpdateDocumentVersionInput!, config: AwsConfig): JSON
  updateFolder(input: AwsWorkDocsUpdateFolderInput!, config: AwsConfig): JSON
  updateUser(input: AwsWorkDocsUpdateUserInput!, config: AwsConfig): AwsWorkDocsUpdateUserOutput
}

input AwsWorkDocsAbortDocumentVersionUploadInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
}

input AwsWorkDocsActivateUserInput {
  UserId: String!
  AuthenticationToken: String
}

type AwsWorkDocsActivateUserOutput {
  User: AwsWorkDocsS8
}

input AwsWorkDocsAddResourcePermissionsInput {
  AuthenticationToken: String
  ResourceId: String!
  Principals: [AwsWorkDocsAddResourcePermissionsPrincipalsInput]!
  NotificationOptions: AwsWorkDocsAddResourcePermissionsNotificationOptionsInput
}

input AwsWorkDocsAddResourcePermissionsNotificationOptionsInput {
  SendEmail: Boolean
  EmailMessage: String
}

type AwsWorkDocsAddResourcePermissionsOutput {
  ShareResults: [AwsWorkDocsAddResourcePermissionsOutputShareResults]
}

type AwsWorkDocsAddResourcePermissionsOutputShareResults {
  PrincipalId: String
  Role: String
  Status: String
  ShareId: String
  StatusMessage: String
}

input AwsWorkDocsAddResourcePermissionsPrincipalsInput {
  Id: String!
  Type: String!
  Role: String!
}

input AwsWorkDocsCreateCommentInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  ParentId: String
  ThreadId: String
  Text: String!
  Visibility: String
  NotifyCollaborators: Boolean
}

type AwsWorkDocsCreateCommentOutput {
  Comment: AwsWorkDocsS13
}

input AwsWorkDocsCreateCustomMetadataInput {
  AuthenticationToken: String
  ResourceId: String!
  VersionId: String
  CustomMetadata: JSON!
}

input AwsWorkDocsCreateFolderInput {
  AuthenticationToken: String
  Name: String
  ParentFolderId: String!
}

type AwsWorkDocsCreateFolderOutput {
  Metadata: AwsWorkDocsS1d
}

input AwsWorkDocsCreateLabelsInput {
  ResourceId: String!
  Labels: [String]!
  AuthenticationToken: String
}

input AwsWorkDocsCreateNotificationSubscriptionInput {
  OrganizationId: String!
  Endpoint: String!
  Protocol: String!
  SubscriptionType: String!
}

type AwsWorkDocsCreateNotificationSubscriptionOutput {
  Subscription: AwsWorkDocsS1p
}

input AwsWorkDocsCreateUserInput {
  OrganizationId: String
  Username: String!
  EmailAddress: String
  GivenName: String!
  Surname: String!
  Password: String!
  TimeZoneId: String
  StorageRule: AwsWorkDocsSjInput
  AuthenticationToken: String
}

type AwsWorkDocsCreateUserOutput {
  User: AwsWorkDocsS8
}

input AwsWorkDocsDeactivateUserInput {
  UserId: String!
  AuthenticationToken: String
}

input AwsWorkDocsDeleteCommentInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  CommentId: String!
}

input AwsWorkDocsDeleteCustomMetadataInput {
  AuthenticationToken: String
  ResourceId: String!
  VersionId: String
  Keys: [String]
  DeleteAll: Boolean
}

input AwsWorkDocsDeleteDocumentInput {
  AuthenticationToken: String
  DocumentId: String!
}

input AwsWorkDocsDeleteFolderContentsInput {
  AuthenticationToken: String
  FolderId: String!
}

input AwsWorkDocsDeleteFolderInput {
  AuthenticationToken: String
  FolderId: String!
}

input AwsWorkDocsDeleteLabelsInput {
  ResourceId: String!
  AuthenticationToken: String
  Labels: [String]
  DeleteAll: Boolean
}

input AwsWorkDocsDeleteNotificationSubscriptionInput {
  SubscriptionId: String!
  OrganizationId: String!
}

input AwsWorkDocsDeleteUserInput {
  AuthenticationToken: String
  UserId: String!
}

input AwsWorkDocsDescribeActivitiesInput {
  AuthenticationToken: String
  StartTime: Date
  EndTime: Date
  OrganizationId: String
  UserId: String
  Limit: Int
  Marker: String
}

type AwsWorkDocsDescribeActivitiesOutput {
  UserActivities: [AwsWorkDocsDescribeActivitiesOutputUserActivities]
  Marker: String
}

type AwsWorkDocsDescribeActivitiesOutputUserActivities {
  Type: String
  TimeStamp: Date
  OrganizationId: String
  Initiator: AwsWorkDocsS2c
  Participants: AwsWorkDocsDescribeActivitiesOutputUserActivitiesParticipants
  ResourceMetadata: AwsWorkDocsS2i
  OriginalParent: AwsWorkDocsS2i
  CommentMetadata: AwsWorkDocsDescribeActivitiesOutputUserActivitiesCommentMetadata
}

type AwsWorkDocsDescribeActivitiesOutputUserActivitiesCommentMetadata {
  CommentId: String
  Contributor: AwsWorkDocsS8
  CreatedTimestamp: Date
  CommentStatus: String
  RecipientId: String
}

type AwsWorkDocsDescribeActivitiesOutputUserActivitiesParticipants {
  Users: [AwsWorkDocsS2c]
  Groups: [AwsWorkDocsS2f]
}

input AwsWorkDocsDescribeCommentsInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  Limit: Int
  Marker: String
}

type AwsWorkDocsDescribeCommentsOutput {
  Comments: [AwsWorkDocsS13]
  Marker: String
}

input AwsWorkDocsDescribeDocumentVersionsInput {
  AuthenticationToken: String
  DocumentId: String!
  Marker: String
  Limit: Int
  Include: String
  Fields: String
}

type AwsWorkDocsDescribeDocumentVersionsOutput {
  DocumentVersions: [AwsWorkDocsS2t]
  Marker: String
}

input AwsWorkDocsDescribeFolderContentsInput {
  AuthenticationToken: String
  FolderId: String!
  Sort: String
  Order: String
  Limit: Int
  Marker: String
  Type: String
  Include: String
}

type AwsWorkDocsDescribeFolderContentsOutput {
  Folders: [AwsWorkDocsS1d]
  Documents: [AwsWorkDocsS38]
  Marker: String
}

input AwsWorkDocsDescribeGroupsInput {
  AuthenticationToken: String
  SearchQuery: String!
  OrganizationId: String
  Marker: String
  Limit: Int
}

type AwsWorkDocsDescribeGroupsOutput {
  Groups: [AwsWorkDocsS2f]
  Marker: String
}

input AwsWorkDocsDescribeNotificationSubscriptionsInput {
  OrganizationId: String!
  Marker: String
  Limit: Int
}

type AwsWorkDocsDescribeNotificationSubscriptionsOutput {
  Subscriptions: [AwsWorkDocsS1p]
  Marker: String
}

input AwsWorkDocsDescribeResourcePermissionsInput {
  AuthenticationToken: String
  ResourceId: String!
  PrincipalId: String
  Limit: Int
  Marker: String
}

type AwsWorkDocsDescribeResourcePermissionsOutput {
  Principals: [AwsWorkDocsDescribeResourcePermissionsOutputPrincipals]
  Marker: String
}

type AwsWorkDocsDescribeResourcePermissionsOutputPrincipals {
  Id: String
  Type: String
  Roles: [AwsWorkDocsDescribeResourcePermissionsOutputPrincipalsRoles]
}

type AwsWorkDocsDescribeResourcePermissionsOutputPrincipalsRoles {
  Role: String
  Type: String
}

input AwsWorkDocsDescribeRootFoldersInput {
  AuthenticationToken: String!
  Limit: Int
  Marker: String
}

type AwsWorkDocsDescribeRootFoldersOutput {
  Folders: [AwsWorkDocsS1d]
  Marker: String
}

input AwsWorkDocsDescribeUsersInput {
  AuthenticationToken: String
  OrganizationId: String
  UserIds: String
  Query: String
  Include: String
  Order: String
  Sort: String
  Marker: String
  Limit: Int
  Fields: String
}

type AwsWorkDocsDescribeUsersOutput {
  Users: [AwsWorkDocsS8]
  TotalNumberOfUsers: JSON
  Marker: String
}

input AwsWorkDocsGetCurrentUserInput {
  AuthenticationToken: String!
}

type AwsWorkDocsGetCurrentUserOutput {
  User: AwsWorkDocsS8
}

input AwsWorkDocsGetDocumentInput {
  AuthenticationToken: String
  DocumentId: String!
  IncludeCustomMetadata: Boolean
}

type AwsWorkDocsGetDocumentOutput {
  Metadata: AwsWorkDocsS38
  CustomMetadata: JSON
}

input AwsWorkDocsGetDocumentPathInput {
  AuthenticationToken: String
  DocumentId: String!
  Limit: Int
  Fields: String
  Marker: String
}

type AwsWorkDocsGetDocumentPathOutput {
  Path: AwsWorkDocsS41
}

input AwsWorkDocsGetDocumentVersionInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  Fields: String
  IncludeCustomMetadata: Boolean
}

type AwsWorkDocsGetDocumentVersionOutput {
  Metadata: AwsWorkDocsS2t
  CustomMetadata: JSON
}

input AwsWorkDocsGetFolderInput {
  AuthenticationToken: String
  FolderId: String!
  IncludeCustomMetadata: Boolean
}

type AwsWorkDocsGetFolderOutput {
  Metadata: AwsWorkDocsS1d
  CustomMetadata: JSON
}

input AwsWorkDocsGetFolderPathInput {
  AuthenticationToken: String
  FolderId: String!
  Limit: Int
  Fields: String
  Marker: String
}

type AwsWorkDocsGetFolderPathOutput {
  Path: AwsWorkDocsS41
}

input AwsWorkDocsInitiateDocumentVersionUploadInput {
  AuthenticationToken: String
  Id: String
  Name: String
  ContentCreatedTimestamp: Date
  ContentModifiedTimestamp: Date
  ContentType: String
  DocumentSizeInBytes: JSON
  ParentFolderId: String!
}

type AwsWorkDocsInitiateDocumentVersionUploadOutput {
  Metadata: AwsWorkDocsS38
  UploadMetadata: AwsWorkDocsInitiateDocumentVersionUploadOutputUploadMetadata
}

type AwsWorkDocsInitiateDocumentVersionUploadOutputUploadMetadata {
  UploadUrl: String
  SignedHeaders: JSON
}

input AwsWorkDocsRemoveAllResourcePermissionsInput {
  AuthenticationToken: String
  ResourceId: String!
}

input AwsWorkDocsRemoveResourcePermissionInput {
  AuthenticationToken: String
  ResourceId: String!
  PrincipalId: String!
  PrincipalType: String
}

type AwsWorkDocsS13 {
  CommentId: String!
  ParentId: String
  ThreadId: String
  Text: String
  Contributor: AwsWorkDocsS8
  CreatedTimestamp: Date
  Status: String
  Visibility: String
  RecipientId: String
}

type AwsWorkDocsS1d {
  Id: String
  Name: String
  CreatorId: String
  ParentFolderId: String
  CreatedTimestamp: Date
  ModifiedTimestamp: Date
  ResourceState: String
  Signature: String
  Labels: [String]
  Size: JSON
  LatestVersionSize: JSON
}

type AwsWorkDocsS1p {
  SubscriptionId: String
  EndPoint: String
  Protocol: String
}

type AwsWorkDocsS2c {
  Id: String
  Username: String
  GivenName: String
  Surname: String
  EmailAddress: String
}

type AwsWorkDocsS2f {
  Id: String
  Name: String
}

type AwsWorkDocsS2i {
  Type: String
  Name: String
  OriginalName: String
  Id: String
  VersionId: String
  Owner: AwsWorkDocsS2c
  ParentId: String
}

type AwsWorkDocsS2t {
  Id: String
  Name: String
  ContentType: String
  Size: JSON
  Signature: String
  Status: String
  CreatedTimestamp: Date
  ModifiedTimestamp: Date
  ContentCreatedTimestamp: Date
  ContentModifiedTimestamp: Date
  CreatorId: String
  Thumbnail: JSON
  Source: JSON
}

type AwsWorkDocsS38 {
  Id: String
  CreatorId: String
  ParentFolderId: String
  CreatedTimestamp: Date
  ModifiedTimestamp: Date
  LatestVersionMetadata: AwsWorkDocsS2t
  ResourceState: String
  Labels: [String]
}

type AwsWorkDocsS41 {
  Components: [AwsWorkDocsS41Components]
}

type AwsWorkDocsS41Components {
  Id: String
  Name: String
}

type AwsWorkDocsS8 {
  Id: String
  Username: String
  EmailAddress: String
  GivenName: String
  Surname: String
  OrganizationId: String
  RootFolderId: String
  RecycleBinFolderId: String
  Status: String
  Type: String
  CreatedTimestamp: Date
  ModifiedTimestamp: Date
  TimeZoneId: String
  Locale: String
  Storage: AwsWorkDocsS8Storage
}

type AwsWorkDocsS8Storage {
  StorageUtilizedInBytes: JSON
  StorageRule: AwsWorkDocsSj
}

type AwsWorkDocsSj {
  StorageAllocatedInBytes: JSON
  StorageType: String
}

input AwsWorkDocsSjInput {
  StorageAllocatedInBytes: JSON
  StorageType: String
}

input AwsWorkDocsUpdateDocumentInput {
  AuthenticationToken: String
  DocumentId: String!
  Name: String
  ParentFolderId: String
  ResourceState: String
}

input AwsWorkDocsUpdateDocumentVersionInput {
  AuthenticationToken: String
  DocumentId: String!
  VersionId: String!
  VersionStatus: String
}

input AwsWorkDocsUpdateFolderInput {
  AuthenticationToken: String
  FolderId: String!
  Name: String
  ParentFolderId: String
  ResourceState: String
}

input AwsWorkDocsUpdateUserInput {
  AuthenticationToken: String
  UserId: String!
  GivenName: String
  Surname: String
  Type: String
  StorageRule: AwsWorkDocsSjInput
  TimeZoneId: String
  Locale: String
  GrantPoweruserPrivileges: String
}

type AwsWorkDocsUpdateUserOutput {
  User: AwsWorkDocsS8
}

# Amazon WorkSpaces (2015-04-08)
type AwsWorkSpaces {
  createTags(input: AwsWorkSpacesCreateTagsInput!, config: AwsConfig): JSON
  createWorkspaces(input: AwsWorkSpacesCreateWorkspacesInput!, config: AwsConfig): AwsWorkSpacesCreateWorkspacesOutput
  deleteTags(input: AwsWorkSpacesDeleteTagsInput!, config: AwsConfig): JSON
  describeTags(input: AwsWorkSpacesDescribeTagsInput!, config: AwsConfig): AwsWorkSpacesDescribeTagsOutput
  describeWorkspaceBundles(input: AwsWorkSpacesDescribeWorkspaceBundlesInput, config: AwsConfig): AwsWorkSpacesDescribeWorkspaceBundlesOutput
  describeWorkspaceDirectories(input: AwsWorkSpacesDescribeWorkspaceDirectoriesInput, config: AwsConfig): AwsWorkSpacesDescribeWorkspaceDirectoriesOutput
  describeWorkspaces(input: AwsWorkSpacesDescribeWorkspacesInput, config: AwsConfig): AwsWorkSpacesDescribeWorkspacesOutput
  describeWorkspacesConnectionStatus(input: AwsWorkSpacesDescribeWorkspacesConnectionStatusInput, config: AwsConfig): AwsWorkSpacesDescribeWorkspacesConnectionStatusOutput
  modifyWorkspaceProperties(input: AwsWorkSpacesModifyWorkspacePropertiesInput!, config: AwsConfig): JSON
  rebootWorkspaces(input: AwsWorkSpacesRebootWorkspacesInput!, config: AwsConfig): AwsWorkSpacesRebootWorkspacesOutput
  rebuildWorkspaces(input: AwsWorkSpacesRebuildWorkspacesInput!, config: AwsConfig): AwsWorkSpacesRebuildWorkspacesOutput
  startWorkspaces(input: AwsWorkSpacesStartWorkspacesInput!, config: AwsConfig): AwsWorkSpacesStartWorkspacesOutput
  stopWorkspaces(input: AwsWorkSpacesStopWorkspacesInput!, config: AwsConfig): AwsWorkSpacesStopWorkspacesOutput
  terminateWorkspaces(input: AwsWorkSpacesTerminateWorkspacesInput!, config: AwsConfig): AwsWorkSpacesTerminateWorkspacesOutput
}

input AwsWorkSpacesCreateTagsInput {
  ResourceId: String!
  Tags: [AwsWorkSpacesS3Input]!
}

input AwsWorkSpacesCreateWorkspacesInput {
  Workspaces: [AwsWorkSpacesSaInput]!
}

type AwsWorkSpacesCreateWorkspacesOutput {
  FailedRequests: [AwsWorkSpacesCreateWorkspacesOutputFailedRequests]
  PendingRequests: [AwsWorkSpacesSo]
}

type AwsWorkSpacesCreateWorkspacesOutputFailedRequests {
  WorkspaceRequest: AwsWorkSpacesSa
  ErrorCode: String
  ErrorMessage: String
}

input AwsWorkSpacesDeleteTagsInput {
  ResourceId: String!
  TagKeys: [String]!
}

input AwsWorkSpacesDescribeTagsInput {
  ResourceId: String!
}

type AwsWorkSpacesDescribeTagsOutput {
  TagList: [AwsWorkSpacesS3]
}

input AwsWorkSpacesDescribeWorkspaceBundlesInput {
  BundleIds: [String]
  Owner: String
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspaceBundlesOutput {
  Bundles: [AwsWorkSpacesDescribeWorkspaceBundlesOutputBundles]
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspaceBundlesOutputBundles {
  BundleId: String
  Name: String
  Owner: String
  Description: String
  UserStorage: AwsWorkSpacesDescribeWorkspaceBundlesOutputBundlesUserStorage
  ComputeType: AwsWorkSpacesDescribeWorkspaceBundlesOutputBundlesComputeType
}

type AwsWorkSpacesDescribeWorkspaceBundlesOutputBundlesComputeType {
  Name: String
}

type AwsWorkSpacesDescribeWorkspaceBundlesOutputBundlesUserStorage {
  Capacity: String
}

input AwsWorkSpacesDescribeWorkspaceDirectoriesInput {
  DirectoryIds: [String]
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspaceDirectoriesOutput {
  Directories: [AwsWorkSpacesDescribeWorkspaceDirectoriesOutputDirectories]
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspaceDirectoriesOutputDirectories {
  DirectoryId: String
  Alias: String
  DirectoryName: String
  RegistrationCode: String
  SubnetIds: [String]
  DnsIpAddresses: [String]
  CustomerUserName: String
  IamRoleId: String
  DirectoryType: String
  WorkspaceSecurityGroupId: String
  State: String
  WorkspaceCreationProperties: AwsWorkSpacesDescribeWorkspaceDirectoriesOutputDirectoriesWorkspaceCreationProperties
}

type AwsWorkSpacesDescribeWorkspaceDirectoriesOutputDirectoriesWorkspaceCreationProperties {
  EnableWorkDocs: Boolean
  EnableInternetAccess: Boolean
  DefaultOu: String
  CustomSecurityGroupId: String
  UserEnabledAsLocalAdministrator: Boolean
}

input AwsWorkSpacesDescribeWorkspacesConnectionStatusInput {
  WorkspaceIds: [String]
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspacesConnectionStatusOutput {
  WorkspacesConnectionStatus: [AwsWorkSpacesDescribeWorkspacesConnectionStatusOutputWorkspacesConnectionStatus]
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspacesConnectionStatusOutputWorkspacesConnectionStatus {
  WorkspaceId: String
  ConnectionState: String
  ConnectionStateCheckTimestamp: Date
  LastKnownUserConnectionTimestamp: Date
}

input AwsWorkSpacesDescribeWorkspacesInput {
  WorkspaceIds: [String]
  DirectoryId: String
  UserName: String
  BundleId: String
  Limit: Int
  NextToken: String
}

type AwsWorkSpacesDescribeWorkspacesOutput {
  Workspaces: [AwsWorkSpacesSo]
  NextToken: String
}

input AwsWorkSpacesModifyWorkspacePropertiesInput {
  WorkspaceId: String!
  WorkspaceProperties: AwsWorkSpacesSgInput!
}

input AwsWorkSpacesRebootWorkspacesInput {
  RebootWorkspaceRequests: [AwsWorkSpacesRebootWorkspacesRebootWorkspaceRequestsInput]!
}

type AwsWorkSpacesRebootWorkspacesOutput {
  FailedRequests: [AwsWorkSpacesS28]
}

input AwsWorkSpacesRebootWorkspacesRebootWorkspaceRequestsInput {
  WorkspaceId: String!
}

input AwsWorkSpacesRebuildWorkspacesInput {
  RebuildWorkspaceRequests: [AwsWorkSpacesRebuildWorkspacesRebuildWorkspaceRequestsInput]!
}

type AwsWorkSpacesRebuildWorkspacesOutput {
  FailedRequests: [AwsWorkSpacesS28]
}

input AwsWorkSpacesRebuildWorkspacesRebuildWorkspaceRequestsInput {
  WorkspaceId: String!
}

type AwsWorkSpacesS28 {
  WorkspaceId: String
  ErrorCode: String
  ErrorMessage: String
}

type AwsWorkSpacesS3 {
  Key: String!
  Value: String
}

input AwsWorkSpacesS3Input {
  Key: String!
  Value: String
}

type AwsWorkSpacesSa {
  DirectoryId: String!
  UserName: String!
  BundleId: String!
  VolumeEncryptionKey: String
  UserVolumeEncryptionEnabled: Boolean
  RootVolumeEncryptionEnabled: Boolean
  WorkspaceProperties: AwsWorkSpacesSg
  Tags: [AwsWorkSpacesS3]
}

input AwsWorkSpacesSaInput {
  DirectoryId: String!
  UserName: String!
  BundleId: String!
  VolumeEncryptionKey: String
  UserVolumeEncryptionEnabled: Boolean
  RootVolumeEncryptionEnabled: Boolean
  WorkspaceProperties: AwsWorkSpacesSgInput
  Tags: [AwsWorkSpacesS3Input]
}

type AwsWorkSpacesSg {
  RunningMode: String
  RunningModeAutoStopTimeoutInMinutes: Int
}

input AwsWorkSpacesSgInput {
  RunningMode: String
  RunningModeAutoStopTimeoutInMinutes: Int
}

type AwsWorkSpacesSo {
  WorkspaceId: String
  DirectoryId: String
  UserName: String
  IpAddress: String
  State: String
  BundleId: String
  SubnetId: String
  ErrorMessage: String
  ErrorCode: String
  ComputerName: String
  VolumeEncryptionKey: String
  UserVolumeEncryptionEnabled: Boolean
  RootVolumeEncryptionEnabled: Boolean
  WorkspaceProperties: AwsWorkSpacesSg
}

input AwsWorkSpacesStartWorkspacesInput {
  StartWorkspaceRequests: [AwsWorkSpacesStartWorkspacesStartWorkspaceRequestsInput]!
}

type AwsWorkSpacesStartWorkspacesOutput {
  FailedRequests: [AwsWorkSpacesS28]
}

input AwsWorkSpacesStartWorkspacesStartWorkspaceRequestsInput {
  WorkspaceId: String
}

input AwsWorkSpacesStopWorkspacesInput {
  StopWorkspaceRequests: [AwsWorkSpacesStopWorkspacesStopWorkspaceRequestsInput]!
}

type AwsWorkSpacesStopWorkspacesOutput {
  FailedRequests: [AwsWorkSpacesS28]
}

input AwsWorkSpacesStopWorkspacesStopWorkspaceRequestsInput {
  WorkspaceId: String
}

input AwsWorkSpacesTerminateWorkspacesInput {
  TerminateWorkspaceRequests: [AwsWorkSpacesTerminateWorkspacesTerminateWorkspaceRequestsInput]!
}

type AwsWorkSpacesTerminateWorkspacesOutput {
  FailedRequests: [AwsWorkSpacesS28]
}

input AwsWorkSpacesTerminateWorkspacesTerminateWorkspaceRequestsInput {
  WorkspaceId: String!
}

# AWS X-Ray (2016-04-12)
type AwsXRay {
  batchGetTraces(input: AwsXRayBatchGetTracesInput!, config: AwsConfig): AwsXRayBatchGetTracesOutput
  getServiceGraph(input: AwsXRayGetServiceGraphInput!, config: AwsConfig): AwsXRayGetServiceGraphOutput
  getTraceGraph(input: AwsXRayGetTraceGraphInput!, config: AwsConfig): AwsXRayGetTraceGraphOutput
  getTraceSummaries(input: AwsXRayGetTraceSummariesInput!, config: AwsConfig): AwsXRayGetTraceSummariesOutput
  putTelemetryRecords(input: AwsXRayPutTelemetryRecordsInput!, config: AwsConfig): JSON
  putTraceSegments(input: AwsXRayPutTraceSegmentsInput!, config: AwsConfig): AwsXRayPutTraceSegmentsOutput
}

input AwsXRayBatchGetTracesInput {
  TraceIds: [String]!
  NextToken: String
}

type AwsXRayBatchGetTracesOutput {
  Traces: [AwsXRayBatchGetTracesOutputTraces]
  UnprocessedTraceIds: [String]
  NextToken: String
}

type AwsXRayBatchGetTracesOutputTraces {
  Id: String
  Duration: JSON
  Segments: [AwsXRayBatchGetTracesOutputTracesSegments]
}

type AwsXRayBatchGetTracesOutputTracesSegments {
  Id: String
  Document: String
}

input AwsXRayGetServiceGraphInput {
  StartTime: Date!
  EndTime: Date!
  NextToken: String
}

type AwsXRayGetServiceGraphOutput {
  StartTime: Date
  EndTime: Date
  Services: [AwsXRaySh]
  NextToken: String
}

input AwsXRayGetTraceGraphInput {
  TraceIds: [String]!
  NextToken: String
}

type AwsXRayGetTraceGraphOutput {
  Services: [AwsXRaySh]
  NextToken: String
}

input AwsXRayGetTraceSummariesInput {
  StartTime: Date!
  EndTime: Date!
  Sampling: Boolean
  FilterExpression: String
  NextToken: String
}

type AwsXRayGetTraceSummariesOutput {
  TraceSummaries: [AwsXRayGetTraceSummariesOutputTraceSummaries]
  ApproximateTime: Date
  TracesProcessedCount: JSON
  NextToken: String
}

type AwsXRayGetTraceSummariesOutputTraceSummaries {
  Id: String
  Duration: JSON
  ResponseTime: JSON
  HasFault: Boolean
  HasError: Boolean
  HasThrottle: Boolean
  IsPartial: Boolean
  Http: AwsXRayGetTraceSummariesOutputTraceSummariesHttp
  Annotations: JSON
  Users: [AwsXRayGetTraceSummariesOutputTraceSummariesUsers]
  ServiceIds: [AwsXRayS1d]
}

type AwsXRayGetTraceSummariesOutputTraceSummariesHttp {
  HttpURL: String
  HttpStatus: Int
  HttpMethod: String
  UserAgent: String
  ClientIp: String
}

type AwsXRayGetTraceSummariesOutputTraceSummariesUsers {
  UserName: String
  ServiceIds: [AwsXRayS1d]
}

input AwsXRayPutTelemetryRecordsInput {
  TelemetryRecords: [AwsXRayPutTelemetryRecordsTelemetryRecordsInput]!
  EC2InstanceId: String
  Hostname: String
  ResourceARN: String
}

input AwsXRayPutTelemetryRecordsTelemetryRecordsBackendConnectionErrorsInput {
  TimeoutCount: Int
  ConnectionRefusedCount: Int
  HTTPCode4XXCount: Int
  HTTPCode5XXCount: Int
  UnknownHostCount: Int
  OtherCount: Int
}

input AwsXRayPutTelemetryRecordsTelemetryRecordsInput {
  Timestamp: Date!
  SegmentsReceivedCount: Int
  SegmentsSentCount: Int
  SegmentsSpilloverCount: Int
  SegmentsRejectedCount: Int
  BackendConnectionErrors: AwsXRayPutTelemetryRecordsTelemetryRecordsBackendConnectionErrorsInput
}

input AwsXRayPutTraceSegmentsInput {
  TraceSegmentDocuments: [String]!
}

type AwsXRayPutTraceSegmentsOutput {
  UnprocessedTraceSegments: [AwsXRayPutTraceSegmentsOutputUnprocessedTraceSegments]
}

type AwsXRayPutTraceSegmentsOutputUnprocessedTraceSegments {
  Id: String
  ErrorCode: String
  Message: String
}

type AwsXRayS1d {
  Name: String
  Names: [String]
  AccountId: String
  Type: String
}

type AwsXRaySh {
  ReferenceId: Int
  Name: String
  Names: [String]
  Root: Boolean
  AccountId: String
  Type: String
  State: String
  StartTime: Date
  EndTime: Date
  Edges: [AwsXRayShEdges]
  SummaryStatistics: AwsXRayShSummaryStatistics
  DurationHistogram: [AwsXRaySs]
  ResponseTimeHistogram: [AwsXRaySs]
}

type AwsXRayShEdges {
  ReferenceId: Int
  StartTime: Date
  EndTime: Date
  SummaryStatistics: AwsXRayShEdgesSummaryStatistics
  ResponseTimeHistogram: [AwsXRaySs]
  Aliases: [AwsXRayShEdgesAliases]
}

type AwsXRayShEdgesAliases {
  Name: String
  Names: [String]
  Type: String
}

type AwsXRayShEdgesSummaryStatistics {
  OkCount: JSON
  ErrorStatistics: AwsXRaySq
  FaultStatistics: AwsXRaySr
  TotalCount: JSON
  TotalResponseTime: JSON
}

type AwsXRayShSummaryStatistics {
  OkCount: JSON
  ErrorStatistics: AwsXRaySq
  FaultStatistics: AwsXRaySr
  TotalCount: JSON
  TotalResponseTime: JSON
}

type AwsXRaySq {
  ThrottleCount: JSON
  OtherCount: JSON
  TotalCount: JSON
}

type AwsXRaySr {
  OtherCount: JSON
  TotalCount: JSON
}

type AwsXRaySs {
  Value: JSON
  Count: Int
}

scalar Date

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON

type Query {
  # AWS SDK 2.160.0
  aws(
    # Will override default configs for aws-sdk.
    config: AwsConfig
  ): Aws
}
